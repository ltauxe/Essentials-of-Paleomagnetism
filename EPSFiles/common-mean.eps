%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: common-mean.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Lisa Tauxe
%%CreationDate: 12/30/08
%%BoundingBox: 0 0 800 280
%%HiResBoundingBox: 0 0 799.2363 279.2432
%%CropBox: 0 0 799.2363 279.2432
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 48 8%%BeginData: 8662 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FFFFA87D7DFD24A87ECBFFFFA87D7DFD18A8AFA1A8A1A87EA87EFD%05A8FFFFA87D7DFD1AA8AFA8A2A1A8A1A87EA8A8A8FFFFFFA87D52FFA8FF%A8FFA8A8A8FFA8A9A8A8A8FFA8FFA8A8A8FFA8FFA8A8A1CAA8FFA8A8A8FF%AE794E789BFFA8A87D7DA8FFA8FFA8CAA8FFA8FFA8FFA8FFA8A8A8FFA8FF%A8FFAFCA93BC707154797E7E7EFFA8FF7DFFFFA8527DA8FFA8FFA8FFA8CA%A8AFA8FFA8A8A8FFA8A8A8FFA8FFA8FFAFCA949A9AC3A1A14D797EA97DFD%05FFA8A8FD09FFA9FD16FFA979FFCAC3FD04FFA8FD05FFCBCBFD0FFFCABC%C985797FFD08FFA8A8FFFFFFA8FD07FFCAFD11FFBCC3FD04FF55A3FFFFFF%A8FD05FFA8FD09FFA9FD0FFFCAFD07FF55FFFFCA9BFD04FFA8A8FD05FFA8%FD0EFFBDBCFF7E55FD0AFF7DFD04FFA8A8FD06FFCACAFD09FFA9FD04FFCA%B6CACAFFFFFF55A3FD04FF7DFD05FFA8A8FD09FFA9FD15FF7FA3FFFFC3C3%FD04FFA8FD05FFCBCBFD0DFFCABDFFCB79FFFFA9FD08FFA8A8FFFFFFA8FD%07FFCAFD0EFFCABCFD05FFA37FFD05FFA8FD05FFA8FD19FFCAFD05FFA979%FFFFFFCAA1FD04FFA8A8FD05FFA8FD0DFFBCFFFF79A2FD0BFFA8FD04FFA8%A8FD06FFCACAFD09FFCBFFFFFFBCFFFFFFCAFFFF79A9FFA9FFFFFF7DFD05%FFA8FD0AFFA9FD14FFA37FFFA9FFC3A1FD04FFA8FD06FFCBFD0CFFC3C3FF%FF79FFFFFFA9FD08FFA8FD04FFA8FD07FFCAFD0DFFBCCAFD05FFA979FD06%FFA8A8FD04FF7DFD19FFCAFD05FF55FD04FFC3A1FD04FFA8A8FD05FFA8FD%0CFFBCCAFF7FA3CAFD0BFF7DFD04FFA8A8FD06FFCACAFD09FFA9FFCABDFD%04FFCAFF55A9FFFFA9FFFFFFA8FFFFFFA8277DA8FD09FFA9FD13FFA97FFF%FFA9FFA1A1FFFF527D7DFD06FFCBFD0BFFC4C3FFFF7FCBFFFFFFA9FD08FF%A8FFFF527D52FD07FFCAFD0CFFCAC3FD05FFA97FFD07FFA8A8FFFFA87D7D%FD19FFCAFD04FF7F7FFD04FFBDA1FFA8A87D7DA8FD05FFCAFD0BFFBCFFFF%A97FFFCAFD0BFF7DFFFF7D7D7DA8FD07FFCAFD09FFA9FFBDCAFD04FFCAA9%7FFFFFFFA9FFFFFF7DFFFFA8FFFFA8A8FD09FFA9FD13FF79FFFFFFA9FF9A%A1FD04FFA8FD05FFCBCBFD0AFFC3C4FFFF79FD05FFA9FD08FFA8A8FFFFFF%A8FD07FFCAFD0BFFCAC3FD06FF7FA9FD07FFA8FF7D52FFFFA8FD09FFA9FD%0FFFCAFFFFFF7F7FFD05FFBD9BFD04FFA8A8FD05FFA8FD0AFFC3CAFF7F7F%FFFFCAFFA9FD09FF7DFD04FFA8A8FD06FFCACAFD09FFAFC3C3FD05FFCA7F%A9FFFFFFA9FFFFFF7DFFA87DFFFFA8A8FD09FFA9FD12FF7FA9FFFFFFA9FF%BCA8FD04FFA8FD05FFCBCBFD0AFFBCFFFF7FA9FD05FFA9FD08FFA8A8FFFF%FFA8FD07FFCAFD0BFFBDFD06FFCB7FFD08FFA8FF527DFFFFA8FD19FFCAFF%FFA979FD05FFCBBCA1FD04FFA8A8FD05FFA8FD09FFCAC3FFFF79FFFFFFCA%FD0BFFA8FD04FFA8A8FD06FFCACAFD09FFA8BDFD06FFA27FFD04FFA9FFFF%FF7DFF7D27FFFFA8FD0AFFA9FD11FF7FA9FD04FFA9FFBCA8FD04FFA8FD06%FFCBFD09FFC3CAFF79A9FD06FFA9FD08FFA8FD04FFA8FD07FFCAFD0AFFCA%C3FD06FFA37FFD08FFA8A8527DA8FF7DFD19FFCAFFA97FFD06FFA8BDA8FD%04FFA8A8FD05FFA8FD09FFBCFFA979FD04FFCAFD0BFF7DFD04FFA8A8FD06%FFCACAFD09FF9ACAFD06FF78A9FD04FFA9FFFFFFA8FF7D7D7D277DFD0AFF%A9FD10FFA97FFD05FFA9FF9AA8FFFF7DA87DFD06FFCBFD08FFCAC3FF7FA9%FD07FFA9FD08FFA8FFFF7DA87DFD07FFCAFD0AFFC3FD07FF79FD09FFA8A8%5252A8A87DFD19FFCAFF55FD07FFCABDA8FFA852527DA8FD05FFCAFD08FF%C4C3FF79FD05FFCAFD0BFF7DFFFF52527DA8FD07FFCAFD08FFCA9BFD06FF%A979FD05FFCBFFFFFF7DFF7D52FFFFA8A8FD09FFA9FD0FFFA97FFD06FFAF%CAA1A8FD04FFA8FD05FFCBCBFD08FFBCFFA97FFD08FFA9FD08FFA8A8FFFF%FFA8FD07FFCAFD09FFC3C4FD06FF7FA3FD09FFA8FF527DFFFFA8FD09FFA9%FD0FFFCAA37FFD07FFC3C3A1FD04FFA8A8FD05FFA8FD07FFCAC3FF7F7FFD%05FFCAFFA9FD09FF7DFD04FFA8A8FD06FFCACAFD08FFC3A8FD06FF7FA2FD%05FFA9FFFFFF7DFFA8A8FFFFA8A8FD09FFA9FD0FFF79FD07FFAFC3CAA8FD%04FFA8FD05FFCBCBFD07FFCAC3FF55FD09FFA9FD08FFA8A8FFFFFFA8FD07%FFCAFD09FFC3FD07FF79CBFD09FFA8FF7D7DFFFFA8FD19FFCA79FD08FFBD%CAA1FD04FFA8A8FD05FFA8FD07FFBDCAA97FFD06FFCAFD0BFFA8FD04FFA8%A8FD06FFCACAFD07FFC3CAFD06FFA97FCAFD05FFA9FFFFFF7DFF7D52FFFF%A8FD0AFFA9FD0EFFA37FFD07FFA8C3CAA8FD04FFA8FD06FFCBFD07FFC3CF%A3A9FD09FFA9FD08FFA8FD04FFA8FD07FFCAFD08FFC3CAFD07FF79FD0AFF%A8A85252FFFFA8FD19FF54FD08FFCABCFFA1FD04FFA8A8FD05FFCAFD07FF%BCFF55FD07FFCAFD0BFF7DFD04FFA8A8FD06FFCACAFD07FFBCFFA9FD05FF%7F7FCAFD05FFA9FFFFFFA8FF7D527D7D7DA8FD09FFA9FD0DFFA979FD08FF%A2C4A8A8FFFF7DA87DFD06FFCBFD06FFCAC3A97FFD0AFFA9FD08FFA8FFFF%52A87DFD07FFCAFD07FFCAC3FD07FFA3A9FD0AFFA8A852527D7D7DFD18FF%7FA2FD08FFC4C4FFA1FFA87D7D7DA8FD05FFCAFD06FFC3C97F7FFD07FFCA%FD0BFF7DFFFF7D7DA8A8FD07FFCAFD06FFC3C4FFA9FD05FF79CBCAFD05FF%A9FFFFFF7DFF7D52FFFFA8A8FD09FFA9FD0CFFA979FD09FFC3CBA8A8FD04%FFA8FD05FFCBCBFD06FFBCFF79FD0BFFA9FD08FFA8A8FFFFFFA8FD07FFCA%FD07FFBDFD07FFA97FFD0BFFA8FF7D52FFFFA8FD09FFA9FD0DFF79A9CAFD%07FFCAC3CBFFA1FD04FFA8A8FD05FFA8FD05FFC3C3857FFD08FFCAFFA9FD%09FF7DFD04FFA8A8FD06FFCACAFD05FFCAC3FFFFA9FD04FFA979FFCAFD05%FFA9FFFFFF7DFF7D52FFFFA8A8FD09FFA9FD0CFF7FFD0AFF9BFFCAA8FD04%FFA8FD05FFCBCBFD05FFC3CA7FA9FD0BFFA9FD08FFA8A8FFFFFFA8FD07FF%CAFD06FFCAC3FD07FF7FA9FD0BFFA8FF527DFFFFA8FD16FFA97FFFCAFD07%FFC3C4FFFFA1FD04FFA8A8FD05FFA8FD05FFBCFF79FD09FFCAFD0BFFA8FD%04FFA8A8FD06FFCACAFD05FFBCCAFFFFA9FD04FF79A9FFCAFD05FFA9FFFF%FF7DFFFFA8FFFFA8FD0AFFA9FD0BFF55FD0AFFC3A8FFCAA8FD04FFA8FD06%FFCBFD04FFC3CA7FA9FD0CFFA9FD08FFA8FD04FFA8FD07FFCAFD05FFCAC3%FD07FFCB7FFD0CFFA8A8FD04FF7DFD15FF7F7FFFFFCAFD07FFBCFFFFFFA1%FD04FFA8A8FD05FFA8FD04FFBDA879FD0AFFCAFD0BFF7DFD04FFA8A8FD06%FFCACAFD04FFC3C3FFFFFFA9FFFFFF79A9FFFFCAFD05FFA9FFFFFFA8FFFF%FF7D527DFD0AFFA9FD0AFF7FFD0AFFCAC3AFFFA8A8FFFFA8FF7DFD06FFCB%FFFFFFCAC3A97FFD0DFFA9FD08FFA8FFFFA8FFA8FD07FFCAFD05FFBCFD08%FF7FCBFD0CFFA8A8FFFF7D7D7DFD14FF7F7FFFFFFFCAFD06FFC3CAFFFFCA%A1FFA85252A8A8FD05FFCAFFFFFFBCCA55FD0BFFCAFD0BFF7DFFA852527D%A8FD07FFCAFFFFFFCAC3FD04FFA9FFFFFF79FFFFFFCAFD05FFCBFFFFFF7D%FD05FFA8A8FD09FFA9FD08FF7F55FD0BFFBCFFA9FFCAA8FFFFA8FFA8FD05%FFCBCBFFFFCAC379A9FD0EFFA9FD08FFA8A8FFFFFFA8FD07FFCAFD04FFC3%CAFD07FFA97FFD0DFFA8FD05FFA8FD09FFA9FD08FF7F55FD05FFCAFD05FF%BCC4FD04FFA1FD04FFA8A8FD05FFA8FFFFC99B7FFD0CFFCAFFA9FD09FF7D%FD04FFA8A8FD06FFCACAFFFFFFBCFD05FFA9FFFF7F7FFFFFFFCAFD05FFA9%FFFFFF7DFD05FFA8A8FD09FFA9FD06FF7F7FFD0BFFC3C3FFFFA9FFCAA8FD%04FFA8FD05FFCBCBFFFFB679A9FD0FFFA9FD08FFA8A8FFFFFFA8FD07FFCA%FFFFFFBDCAFD08FF55FD0EFFA8FD05FFA8FD0FFF7F7F79FD07FFCAFFFFFF%BCC3FD06FFA1FD04FFA8A8FD05FFA8FF944E7FFD0DFFCAFD0BFFA8FD04FF%A8A8FD06FFCACAFFC3BCFD08FF7FA3FD04FFCAFD05FFA9FFFFFF7DFD05FF%A8FD0DFFA9557FA9FD09FFCACABCC3FD04FFA9FFCAA8FD04FFA8FD07FF9B%72AFFD11FFA9FD08FFA8FD04FFA8FD07FFCAFFC4BDFD09FF79FD0FFFA8A8%FD04FFA8FD07FFA9FFA9FD047FFD09FFCAFFC3BCC3FD09FFA1FD04FFA8AE%FD05FF7772A9FD0FFFCAFD0BFFA8FD04FFA8A8FD06FFCABDBDFD08FFA979%7FFD05FFCAFD09FFA8FFFFFFA87DA8A8A97EA9A8A9787954724DA2A1CAA1%CAA2CAA1CAA1C39ABD9ABCA1FFA8FFA8A8A8CF7EA9A8A8FFFF7DA87DA8A2%A9A29B4D4E84FFA8A8A8FFA8FFA8FFFD05A8FFA8CAA8A8A8FFA8FFA8FFFD%04A8FFFF7DFD04A8FFA8CAC3BC93A1A8FFA8A97EA97EA378547ECFA8A8A8%AFA8CAA8A8A8FFA8A8A8FFA8A8FFFFFF7D5227537DA9A27E52537DFFA8CA%527676CAA1CA767652CAA8FF7D7D2EA8A8FF7D7D277DA8A87E7D52A8A87D%277D287EA87753537DFFA87D5252A8A8525252A8A87D52527DFF7D7D527D%A8A8527D52A8A87D527DA852277D7DA8A87D4BA1A8FF597DA8FF7D4C53A9%7E7752A8A8A8527DA8FF7D7D7DFFA87D7DA8A8A8527DFFFFFF7D5227A8FF%FFA87C527DFFFFFF59527DFFFFFF7D527DFFFFFFA85252A8FFFFA852527D%FFFFFF7D5252FFFF7D7D7DA8FF7D7D52A8FFA8527D52FFFF7D5252FFFF7D%5227FFFFA852527DFFFF7D7D7DFFFF7D5252A8FFA8527DFFFF5852A8FFA8%7D52FFFFA827A8FFFF7D7DFFFFA85252FFFFA852A8FFFF527DA8FFA87D52%FD0AFFA8FD1FFFA8FFFFFFA8FFA8FD09FFA8FD0FFFA8FD0FFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FD0FFFA8FFFFFFA8FFFFFFA8FD13FFA87DFFFD08A8FD%20FF7DFFA8A8A8FFFD05A8FD20FF7DA8FFFD06A87DFD20FF7D527D272727%5252275252FD20FF7D7D52522727522727277DFD20FF527D5252FD06277D%FD20FFA8FFFFFFA8FFA8FFA8FD25FFA8A8A8FD27FFA8FFA8FFA8FFA8FD8D%FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreateDate>2007-03-26T19:00:05Z</xap:CreateDate>
         <xap:ModifyDate>2008-12-30T10:29:22-08:00</xap:ModifyDate>
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>92</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAXAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9KeYdATWraKBru4sxE0r&#xA;CW1YJIfWtZrU/EQ1OIuOa/5Sg4qlPlXy1bLocMFxe39zJaST2Yna9ukZ0tZ3gjLLFJGnLhGK0UVO&#xA;+KppJ5XsHUBbi/QhlNRqF7WisCRvN3pTFVtx5esY4wyS3pJdFPLUb1RRnCnf1utDt45KABO/mq5P&#xA;K9grOTcX7B2qoOoXtFHECgpN7V+nIq6XyvYPE6LcX8bMpAddQvaqSOorMRtiq7/DWnf7+vv+4hff&#xA;9VsVQ1x5cs0u7crdX/CZ/TaP6/e0oscjV/vq7mn3YCeTbjiCJeQ/SET/AIa07/f19/3EL7/qtham&#xA;NebbRtOtrLStInupdd1IOltNcajeBIo4E5T3Uq+unIIKCgoC7KCQDXNj2fpoTJnkvwoVdcyTyiPf&#xA;9wNWq/Q9Eu9B86WVk2v6nrEd3pt9NPHqNwsoVoZ7NYmVI0iVf72TelffMXUaiOSQ4YRxjf6eL/fS&#xA;kXJjjHgylW/FEfZK/wBCp5y8qlo77zBFql7bT2UdxexW8EgSIyLYtbioA5bD4uvXKHGT/wDw3p/+&#xA;/r3/AKT73/qtiqC/QFvHqUFsbi+kikiuJWY394CCskXprQTdlkIr9+GtmwRHAT5j9KLPlmxMquLi&#xA;+CBWBj+v3lCSRQ19au1D9+BrdL5ZsXidEuL6N2UhZBf3hKkjY0M1NsVXf4b0/wD39e/9J97/ANVs&#xA;VSG9FjDePpOmfX9X1lGBmiGo3sUNukh5r9ZnDusVI2+FeLOw6KeuVSyb0BZ/HMuxwaC4eLll4eI3&#xA;R5ylX8yNji32JsRHUsJttL86a5Kkei+Yr7lbvHFrGo/WZE0+GdnQSW9rDIJJrmSFeQcmdFDf5VUG&#xA;2waGGOEcmplK5DijCNWRWxkd+EHpsSRvQFFt1Wp08Zyjjwx4RYBlKZl7zUox+HD8+bM4fy51D03+&#xA;sebtbeZloPSuBHGpp1VWWR+v8znIT1WLlHFEe8zJ/wB0B9jqU+g8r2MUKRtdahMyihle/vOTe54y&#xA;qv3DMORs3VKhdP09tT8s3OnyXU6Brm9gS59QvMqRXsqpR5ObEqqAVORVLtA8qR2Oq6jp02p6jexB&#xA;I75Wlu5oisl5cXTSAfV2hHH4FpXFU8PlmxMquLi+CBWBj+v3lCSRQ19au1D9+Kof/Dtq+oNGLq+W&#xA;KJI5Cgvrz4uXqqQT6teyn6MF7thiOAHrZ/QiJfLNi8TolxfRuykLIL+8JUkbGhmptha13+G9P/39&#xA;e/8ASfe/9VsVULLy7am3UTTXrSIWRn/SF4eXBioY8ZqAsBUjt0yUgAdlSrWIrOwlj0yyN/qeu3Qe&#xA;W3tBqF2ixxFjSW4f1qRwp9nl9pqUUM2UznWw3Ln6TReJE5Mh4MMTvLvP82I/il9g5yIChpXkfVbm&#xA;CC81DzNqYeWJGNvZTyQwglakn1nuZCd/5wPbIxjIizL5fgt2o1GnhKUceIUDzlKRPP8AomA+w+9I&#xA;7LQta8waw40bzFqlt5atzJC2qvdvLPdSxkLJ9UFVjWJGPESsjgsG+GnFjvBpsWlgDlByZjvwHaMQ&#xA;eXFVG+vCCNiN+YcHJnEuUIx93F+mRZXHop0a+0ZY9R1C8ae8kjme8upJeSfU7h+JSqx7MikfDXbN&#xA;blmJGxER91/pJaGSTXFvAoaaVIlY8VLsFBNCaCvegytUt8sSJJpbyRsHje8vmR1NQQb2Yggjtiqb&#xA;Yqo3gBiWoQ/vIv7w0H94vT/K/l96ZPHz+B+78WqtkFdirsVQ13/vRZf8Zj/yZkyJ6N2L6Zf1f99F&#xA;E5JpYZ5Yji1caz5vm9OY6h61ppDyE+kmmWzGNKMeiXMiNOzD7Ssn8ozc60nFwacWOCpS7+OW5+MR&#xA;Ua6EHvKETLKW/NK1iptHodw1fH1LuAfhwzRfx/B2JFaS+/J90f2o/wA3XloPLWswGeP1zZXKCLkv&#xA;Lkbd348a1rwBb5b5Y69O8VQMwH6ctDQVFrcjlX4hWSDYDw8clezaP7s+8f75HZFqdiqC1nVYdK02&#xA;a+mR5RHxWOGMVkllkYRxRIP5pJHVBXap3yM5cItyNLpjmyCANX1PIACyT5AAksWvo9V0XynDp8dw&#xA;sfmnzFdrDJcxguVur1+d1LCGI5C0txI0YY/ZjUHM7srTxMzKYuEAZy865R90pcMfi29o6mOXL6Ns&#xA;cQIx/qx2F+Z+qX9IlPND0qw0zytpWnWMEcVnbR2qxRE8QKMh5V7vy+Lf7TdeuVy1M82Q5Jm5Ssn5&#xA;fd9wcbOKnIeZ+9Osx2t2KpP5emhh0m4lmdY4lvtQLO5CqB9em6k4q6xmhl80ak0TrIq2dmjFSGAZ&#xA;J7xWU07qwocVTjFUNH/x07j/AIww/wDE5cj1bpf3Y/rS+6KJyTS7FUm1fVJNJ0K4ureGN7ozmG0h&#xA;5Eo9xc3PowhyKkcpJBzp03xzzI38h9wcvQaYZsojI1HcyP8ARiDKXxoFV0HQotKhlZpDc6jeN62o&#xA;3zijzS/Kp4xr0jQbKu3iTCEOH3p1msOYgAcOOO0Y/wA0fpJ/il1KReaLqafy9pvluyMg1HzDEloH&#xA;iArDacV+u3JY/CvpQsQpPWRkHfNp2TARPjSrgxDi36y/gj8Zc/6IkejTqP7yX9Y/eya3s7W0ktLa&#xA;1gjht7eB4oI0ovBFMYCIg240A+VBmJLJKYlKRJJNnz5tKF1r/jpaD/zHv/1A3WUqx+VvJ35kfpHR&#xA;72yuZYfLuolJDIWt1a6hEkPOJ4ZA7KtWG9MVTXyNpGnaToC2NhCsNvbXF1bxAbt6cF1LHGGY1ZuK&#xA;qBUnFWQYqoXv9yu6D97F/efZ/vV6f5X8vvTJ4+fwP3fi/JVfIK7FXYqhrv8A3osv+Mx/5MyZE9G7&#xA;F9Mv6v8AvopR561C5tfL01rYn/ctqx/RulLUj/SblSokqN+MKBpn/wAlDTfNl2ZijLMJT/u4euX9&#xA;WPT/ADjUR5kNKYpp9rp+grp9qqR2tnai3gWX+7WOKPgoeg+yFG+YxyyyZeOX1SlZrnZKsYQIfzql&#xA;YAEjy6isw6g/XSSCfkQfuzDH1n3D9LtMgrQw/wCG5P8Ac4/2rfOX5f8AlWSLWvMrWrfpk209wbgS&#xA;ygGSOwltEPANx2hkYdPfrlrq2booVQorRQAKkk7eJNScVQUw/wBztofh/wB5bnr9v+8t+nt4/Rku&#xA;n4r8ftbR/dn3j/fI7ItTsVY7cxDVPOUVtLR7LQ7dLwxEVVry6Z0hfwrBHC5oe8it1AIqPqnXc7XH&#xA;LwdIZD680jG/6EaMh/nGUf8ASkdSh9Jb9OecLzWKM2m6Ksml6azAqr3fqEahKoYDkEMaQK3isgHX&#xA;N1nHgaeOP+PJU5f1a9A+NmRHnF1SdW4ro1l9j7Nt/eGi/aTp/lfy+9M1mH9B+78X5N2o/vJf1j96&#xA;YZFpdirFrXy3pGu+Ub3Q9Uia4025vb5ZomkkDME1GV1/eBuezKD1xV3ljy1pGheY9Vg02OSOOa3g&#xA;uZQ8ssnKW5uruWVzzZty33YqynFUNH/x07j/AIww/wDE5cj1bpf3Y/rS+6KJyTS7FWMXAN/5l0zT&#xA;kEZi0x7jVbwx1K8naa2tUPbk7PLIfBo8jm3mB3AHf3UP2e52mm/dabJkPPJ+7j8xOZ+FRj/nsnyT&#xA;q2IaHyvfOPr9YdF0e3tY2/4u1BxNOv8AsY7W3P8Ass2H0aKI65J8XwgKj9sp/Ju1H95L+sfvZQ4/&#xA;06E/B/dS9T+8+1H9kfy/zfRmEPpPvHu6/j5tKX62inVfL7kmq30lACQN7G56gGh+nIK89/LLzI2m&#xA;S+aLnzPrKLZXGtvDpEt3qNtdssbeoY4XEEkqQuFiPwsQaDfcYqz/AMn3lte6Gt5ayCa1ubm9mglX&#xA;o8cl5KysPYg1xVOsVUL2norUoP3sW8gqP71f+G/l98nj5/A/cqvkFdirsVQ13/vRZf8AGY/8mZMi&#xA;ejdi+mX9X/fRY/ZcNY893t7tJaeXYRYW5rVRfXKia6YCtKxwGFA3+U6+ObbJeHSxj/FlPEf6kdo/&#xA;OXEa8onuaGRX9PqNxUoo9J6mQVQfCftDeq+Oa7F9Q96WI6b+8/NHUZ+8cE9rue0cWmzbDpT/AEn9&#xA;eY8B6yXa6vbTYR3gy+c5x/3qdebru1HlnWoTNH6v1O4T0+Q5cjbu4Wla1KgtTwy11Sd4qgZv+O7a&#xA;fZ/3luev2/7y36e3j9GS6fivx+1tH92feP8AfI7ItTsVYNBrs1h5cutctYfreseZr6QaLb0oJndT&#xA;FYhiTtGLa3WWQ9l5Ee9/ZelGaZMjwwHqke6I2+Z2AH84uz7V9E44f9SgI/531T/2ZI+AZR5c0WPR&#xA;NEtNMSQztAh9e5YcWmnkYyTzMKmjSyszn3OS1eoObLKZFXyHcOQHwFB1jcH/ABxrLdB8Nt/efZ+0&#xA;nT/K/l96ZRh/Qfu/F+Tdqf7yX9Y/emGRaXYqk/l6aGHSbiWZ1jiW+1As7kKoH16bqTirdlLFJ5q1&#xA;P03V+FlZI3Eg0YTXdQadxiqb4qho/wDjp3H/ABhh/wCJy5Hq3S/ux/Wl90UTkml2Ksa8lr9afV9b&#xA;biRqF9NFaFe1pZyNDGPk8oll/wBnkRuTLfeufkPu6jydn2h6I48P8yNn+tP1H4iPDE+cWS5J1jEf&#xA;y2/0jTdS1X/q4ahKEPX4LFE08U9ibQt9Ne+bDX+kYsf8zFH/AGX7z/fNuo/vJf1j97J3/wB7od0/&#xA;updj/efaj+z/AJP830ZhD6T7x7uv4+bUgda/46Wg/wDMe/8A1A3WQV53+V3kmwuB5lfXtJaaLU9T&#xA;/SqWupWs/FJZxIxp9cFWdPVZW4ckX9l2qTirPfJ2n2FjpDwWVvHbQpdXkaJEgQBIruVEWgA2VRQe&#xA;AxVPMVUL1+MKnmE/exCrDkN5VFKb7noD265PGLPwP3Kr5BXYq7FUr8xana6TY/pS8JFpYCa6uCo5&#xA;MI4baWR6DueK5Zhwyy5IY4/VKQA952bsX0y/q/76KH8k6Tc6X5XsLe9Xjqksf1rVSWDE3tyTNcnk&#xA;Oo9Z2p4CgG2ZXaOeOXPIx+gGo/1Y7R+wBpTW/fhY3D8xHxic82HILRTuV3qB4ZiYhch71Yd5djjk&#xA;86T6kEHO8bV19WnxMtpNYWdCadAbYimY+PmT5n9Tte0do44fzccP9lxZP9+7zl+X3lSWPWvMz2hO&#xA;sm2nna49WShdLCS0WsfLhT0XK0plrqmboiooRAFRQAqgUAA6ADFUFMf9ztmKrva3JoR8W0lv0Ph4&#xA;5Ktm0f3Z94/3yOyLUkvnG7urfy/OlnJ6N7evDYWs3eOW8lW3WUDv6XqepT2yvKajt+Ldh2XijLOD&#xA;MXCAMyO8QiZV/nVw/FK4rW2l856bpNogXTvKlgJhGNws90ptrZR4GO3jmr3o4+nbYojDoyeuWXCP&#xA;6sNz/suH/Slws2WWSZnI3KRJPvLLs1rBL4G46NZGqr8NqKuKjdkFO+57e+Swj7j9zdqf7yX9Y/em&#xA;GRaXYqxa18taLrnlG90LUbYSaXcXt8stuhaIUTUZXWhjKkUZQdsVa8r+WNG0HzDqkGmQGNZbeC4d&#xA;nd5XMl1dXksx5yFm+NzyIrSuKsqxVDR/8dO4/wCMMP8AxOXI9W6X92P60vuiick0pZ5m1ObTNBvb&#xA;u3XneKnp2Mf891MRFbx/7OZ1X6chklUSXM7P04zZ4wl9F3LyiN5H4RBLvLOnRaZoVnpsTrJFYp9V&#xA;R1FKiFjGK/5Xw/F75bKPDQ8h9watVqDmyzyHnORl8zbXmvVpNH8r6vq0YDS2FlcXManu8UTOo38S&#xA;KZkaHAM2eGM8pSiPmWhb5R02PS/Kuj6dHutpZwRcv5isahmPux3J8chqdQc2SWQ/xkn5tmWPDMju&#xA;JR7t/p0K1XeKU8SPjNGj3B8BXf6MrA9J94/S1pfrccbar5fcqC6X0nBiBUVsbmtD75BXn35X+ZrC&#xA;x1PzZBrVzDZXE+vXvoiW6SUkgyzPH8LuiCJEP8pp9oA7Yqz7yje2d3pcr20yTKbu9eqMD8Ml5MyE&#xA;jtyU1GKp1iqjePwiU+p6dZIl5ceVeUijjT/KrSvbrk8Ys8r2P3KrZBXYq7FWH+eOOravoflMPxTU&#xA;JZLzU6bn6jaJ8cft68kiR7/sc6bjNnoaxQlqDzh6Yf15A7/5sQT/AFuFshdS936QzDNY1qGoSrDY&#xA;XMryiBY4ndpiAwQKpJbidjTrTJ4xch13UC9gw/yg6Gfy0zMBdXWkX1/cRE/Gr3txaXDlh1+3Icx8&#xA;P0h2naxH5jJEcoSER7oDhH2BMfNfmHQ20fXNLF7F+kY7W4ga05ASeobJrkLx6/3Px/LLXVsmxVAz&#xA;MP05aLyAJtbk8KbmkkG9e1K9MlWzaP7s+8f75HZFqSDW2W48zaDYsQEt/rOqyknbjbxi2VW/2d6H&#xA;H+plchcoj4/o/S7PS+jTZZ9/Dj/0x4j9mOv85D/l+pudJuNecfvfMN1JqCtUtW2akdnQnt9VjjNP&#xA;EnNv2qeHIMQ5YoiP+dzn/syXWBk+axUvt2C6PZEuE+G2HIry6sgpT/K6V7dclhF/I/c3aj+8l/WP&#xA;3phkWl2Ksf03VtN0ny/dahqdzHaWUN/fCW4lPFFMmoyotT7swGKqmk31nfeYtQuLOZLiA2dqgljI&#xA;ZS0VzeRuAR/K6kYqnmKoaP8A46dx/wAYYf8AicuR6t0v7sf1pfdFE5JpY9r6/XfMWg6ZsY45JtUu&#xA;UO9UtFEcQPynuY3HuuVT3kB8XaaM+Hgy5OpAxj/PNn/YxkP85O7Ng0TEOH/eSjkF49JGFKf5PSvf&#xA;rmRkFH4D7nVsf8+/v9P03S1Xm+qarYQ+mfstFBOt5cq3irW1rKCO/Tpmf2X6ZzyfzMcz8THgj/sp&#xA;RVPdL/45lp/xhj/4gM1ceQbtR/eS/rH717sBexLzAJjkIj41Jo0e4btSvTvX2y0D0n3j9LSgNa/4&#xA;6Wg/8x7/APUDdZBXmX5SaH5e1PWvPH1jTrW6tbbXLlbL1I45VRXEkTLHtTg8TUp0INN8Vel+VYIY&#xA;NIaCFFjhiu75Io0ACqq3kwVQB0AGKpviqjeNxiU8zH+9iHJRU7yKOPybocnjFn4H7lVsgrsVcSAK&#xA;nYDqcVYZ5QX9Iyt5rkjCvr956lgWqXXTYbZ47RanoslGuKDoZT165s+1D4Zhpwf7r6v65sy+W0P8&#xA;1uxfTL+r/voszzWNKQefbs23lHUlRuM13F9Rt2G5WW8YW6NTevFpeR9hgPdzsgfPZ2HZcL1ESeUL&#xA;mfdAcR+6veqSRJD5p0iFPsR6bfItfBZrIDGqcSUjIEnqf1oTzd5e0E6LrmpnTrY6i9ndSNeGJDKX&#xA;No0HLmRyr6I4f6u2FqZKiKihEAVFACqBQADoAMVQUzf7nbRedK2tyfTp1pJb719q/jkq25No/uz7&#xA;x/vkdkWp5trMkmtfpFIGZpvM90NBsGWhKaTaErqMykV41JueLnqTF7Zm9jgDLLUS+nFuP6w+gfGf&#xA;P+iC7XtD91ix4OoHHL+tPcfKHB7jxPR4oo4o0iiQRxxgKiKAFVQKAADoBmGSSbPN1S7AqXwMF0ay&#xA;Jk9P4bYcqcq1ZBxp/lfZr265LCL6XsfubtT/AHkv6x+9MMi0uxVj2i6PpV95duNNvLOG40976+5W&#xA;kkatEeGoSutUI47MoIxVdpOl6bYeZb6KytYraKOwtOCRIqBfUubyR6BQPtOeR8Tviqf4qho/+Onc&#xA;f8YYf+Jy5Hq3S/ux/Wl90UTkmlj+hcbzzJruqChSJodKt2psVtFaWRgT/wAXXTxt/qZVDeRPwdpr&#xA;P3enxY+/iyH/ADth/sYCQ/rJzZMGhYiT1P3so5U40pKw40/yfs179cyMgo8q2H3OrSC9/wBN/MHT&#xA;bcVaLR7Ce+nHZZrx1t7U/THFdDM/H6NJM9ckxEe6I4pfaYKnul/8cy0/4wx/8QGauPIN2o/vJf1j&#xA;9652AvoV9ShMUp9Kn2qNH8XLtxr0719stA9J26j9LSl+txxtqvl9yoLpfScGIFRWxua0PvkFSbUt&#xA;R8j/AJcWSzziS0t75ygPKa5/3nt3lCAyM/CNI4iERaKOw64qmnk7ULO+0h5rWVZUe6vJAAfiCy3c&#xA;rpyU7rVTXfFU8xVRuyREtC6/vIt4xU/3i7f6p/a9snj5/A/cqtkFdirGPPE9zdRWXlmyleG7152i&#xA;nnjIWSGwiAa9lQkNRuDLEjfsvIp7Zs+zYxiZZ5C44twOhmfoHz9R7xEhU5a2gtRpttboI4IJPTij&#xA;HRUSCRVA+QGazJMylxHmS3Yvpl/V/wB9FHYtLGPMbC88wadp4duNlb3OqXCx1LKUT0Lc0H7RaV2Q&#xA;HuleoyMReWI87/tdppv3elyZP5xjjH+6lXwiAf63mjbmWI+dNNiDqZV06/ZkqOQBns6EjrvTD1dc&#xA;PpPvH6UB5t80eXjpmvaN+kIP0rFY3Iks+YEik2jTCq/8Yvi+WFgyhHV1DoQyMAVYGoIPQg4qgpif&#xA;05aDkQDbXJ402P7yDcnxGHo2j+7PvH++QvmzUbmy0WUWX/HTvCtnpo/5eZzwRj/kx19Rv8lTlWWV&#xA;DbmXK7NwRyZhx/3cfVL+rHcj3n6R5kJJ5P06GbWp763BGkaFA2g6GCAOXpOov5ierFp4Ei3pvGTv&#xA;yrm3zxGDTQwj6pVOXy9A/wBKTL/O8nG1GeWbJLJL6pEk/FmeaxpdiqX2zEaPZEOyfDbCqip3ZBT5&#xA;HofbDh/QfubtR/eS/rH70wwNLsVY5pOt6Rp3lu51S+vIrfTkv77nduw9IepqMqL8XTdmAxVfo+ra&#xA;ZqHmW/lsbmO4jaytlVo2BqYLq8hlp/qSKVPvirIMVQ0f/HTuP+MMP/E5cj1bpf3Y/rS+6Klrmqpp&#xA;Ok3WoMhlMCVjhUgNJKxCxxLX9qR2Cj3OM5cIJZ6PTHNljjBqzz7h1PwG6l5a0qTStCs7KZg90ic7&#xA;yUVpJcykyTyb/wA8rs304MceGIDPX6gZs0pjaJPp8ojaI+EQAjbRiYmJdn/eSirCh2kYU+Q6D2y7&#xA;Jz+A+5w2PeSF+uHWPML0Mmr30qwMK7WdixtLcAn9l/Sace8hzYdpHg4MI/ycBf8AWn6pfKxH/NVP&#xA;tL/45lp/xhj/AOIDNVHkG7Uf3kv6x+9e7H67EvNgDHIeAHwmjJuT4iu3zOWj6T7x+lpS7W5I11Xy&#xA;+hYB3vpOCkippY3NaD2yCprJFFKvGRFdfBgCNxTv7HFUt8tgDTpQNgL2/oP+j2bFU0xVRvK+ktOd&#xA;fUi/uvtU9Ra1/wAn+b/Jrk8fPpyPP3fivNVbIKknmPzMultb2NlCL/XdQZk0/TRIsZbipZpZWNTH&#xA;BGB8b8T2ABYqDm6TR+Lc5HhxQ+qVX8B3yPQfE0ASqn5a8svp802q6pP9f8xXq8bu+3CJGGLrbWyM&#xA;T6UKV6Ddj8TEtktZrBkAx4xw4Y8h3n+dI9ZH7OQoKm13/vRZf8Zj/wAmZM1x6N2L6Zf1f99Fbquq&#xA;2GlWMl9fSiG3ipVqElmJoqIoqzOx2VVFSdhjKYiLKdPpp5piEBcj+LPcB1PIJNo9pqMlvqeu6gks&#xA;F/qkQWKzSglt7WASG3i2J/ffvWdt9nag6YdODxiR6kc+Vef6XL7QywAjhxm4Y79X86Uq4iPLYCPk&#xA;L6oy6/5S/TP+2ff/APJ+yx6uAPpPvH6Uv82+WvLw07WtcGm2w1g2F1XUBEvrn/Rmi3kpy/uxx+WF&#xA;gyjFUDMT+nLQVan1W52H2P7yDr7+H05Lp+L/AB+xtH92feP988+80+YX8wecYPL2g3LC+tFlh+sR&#xA;MtYGldIry9UFhxNrbiWGN6Gs0nEV4vTN7P0wMvzGSN4cV8+U5/wxHfv9XdHi607Kcfy+lMT/AHmb&#xA;hNdRAbi/654ZAd0QeoejaXplhpWnW2m6fCtvY2kaw28C1oqIKAVNSfmdzmLmzTyzM5m5SNkuoROV&#xA;K7FUvtyRo9lQuPhthWMVO7J1/wAn+b2rksP6D934pu1H95L+sfvTDItLsVSHSdN0/UtCubLULaO7&#xA;tJL++MlvMgkjYpqErrVWqDRlBGKt6Pp1jp/mHULaxt47a3FnayelEoVectzeSSNQd2dix98VT3FU&#xA;NH/x07j/AIww/wDE5cj1bpf3Y/rS+6KSX7DWPNNppqEvY6MfrupjjVDdUU2cLE7EqGM5H7JWM9xl&#xA;cvVIDoNz7+n6/k7DCPA00sh+vL6Yd/Dvxy+NcHncx0ZJlzqWP+ZNek0Xyze30KtNqBeSDTLaUEtN&#xA;eTStHbQhV3KtIyivZN9gMz9JpRmzxidobGRHSIFyPy+3ZCYeXtHj0XQdO0iOQypp9tDaiZgAz+kg&#xA;TmwHdqVOUavUHNllkIrjkT7rPJKvpf8AxzLT/jDH/wAQGYseQbtR/eS/rH717k/XYhV6GOQkAfBs&#xA;0f2j/N/L9OWj6T7x+n8fJpQGtf8AHS0H/mPf/qBusgqG81+dvL/laO3k1iV4luVuGi4Iz/DawPcS&#xA;k06USM4qk/l3z75d/Ry8frszXEtzeRrb6ffXJ9G5uHmiZvQhlA5RyKd8sx4jPlXxIH3lUXffmZ5e&#xA;tEFbbVZJ24+nb/onUY3cM6x/D60Ea/akUbsNyB1OWjSyvcxH+dH9BJVJrr80tQubWE2Hk7XKzPE8&#xA;U9zAUt+HJWDNJZfpCXjT+WI1GZUdLggblmiRR+mGSR5d0owH+ybIYjLlXxIH30gYvN+oa/K9vf6p&#xA;d6XakVNloml6lJcSRsPi/wBMmteYT4gOUcMbgjZhtgGr0uLfHCWSXfk5f6SP++lId4LaNJPvh/p4&#xA;f8UnFjrX5feWLeWSx0y9tJXWSSSZtK1L6xPxBkcyTzQGSQ0WpLuaD2GYup7Qy5/7yRNch0HuA2Hw&#xA;C/lJd8f9PD/ikzn/ADA08Rl7TStYv6VAEGm3SVIJBFbhIV2I3qcxDPyLZDR39U4R+N/7gSSG7/Mm&#xA;71C6trXTtHvNPnErAXOo28jqrBJYmpDa+u0hR/h48l32JGQkZHkK97lYsGlx8Rnl4xXKAlvuNrnG&#xA;Ne+j8UztpdEt76LUtWudT1K/QhLSW6sLpIoWcFaQQx28cau3IjlQuenKm2SGPezuWjN2gTA48cY4&#xA;4HnV3L+tI2SPLaPWr3R6ectG1DS3mto76USRH4YbK8LAsnLiHWIqGowy/GfUPe69TXXNNu/Nti0b&#xA;SRLDZ3kEjXEM1sPVlms/TjBnSOrt2Ub5X1ZA+k/jvSzzf+YXloPq/lL1ZW1x7a7gjtkid+brp/1y&#xA;ilQa1icUA3J2phYo9fzO8ryQvNDFq00cZYM8ejasyhk+0OQteII9zl400j1j/po/rZ8B8vmwrXPz&#xA;F13zPffozynp2p6QzW00U2uX9ndRiKOV4GMkFtHFNLI/p7oW4D4uuZGHBiiOLNLr9MalIj+sDUQe&#xA;V7y68PK83GceIWSMh51vV+qrsC6NGuRHXmGTeXNQ8h+TdOTR7IXcMYYtcXM9ldCSSYqCDM3op8bJ&#xA;9kBQAq0ACgDKNRqZZSLoCIqMRyiB0H4snc2XDy5ZZJmczcpGyU8vfO2h2cTyTreJxR5QhsbxWZYx&#xA;VqcolG2Y7Wv/AMZaH9WN1/pf1VVLmf6je+mFXcty9GlBTriqnbeeNBuZZIYheGeIkSQCxvC6gMVD&#xA;FViJAalRXFUDH510OK0srJxfLPSJGWOyuwwkieJWjNYq/wC7ByHh8xhxfo6+78V5tucgzkR3n70w&#xA;vPOmiWkRkmS9WisyobC8Vm4KWYLyiWuwwNTY856C1s10Ddm2QMXnFje+mojJDkt6NBxKmvhiqWWv&#xA;m/QtD8p3msajK8Npb3l1JMpjcTKlzqUsUTNCwEgDM3dcVQ+gefvLerapLqtjJcT2d9aQRWzRWtxK&#xA;S9rcXSyqViRyrLyVqHfiwPQ4qml55/0C0uUtpYtRMzpzVU0zUHPXioosBNWNafLIylTfh08snIxH&#xA;vlGP3kMcv/Puqz3bLb6be6Db3SJF+ktQs52lRYxLK7xW8ccqMQgJ/eOOOxZSKgVXMnYV73ZjHpcM&#xA;R4k/FIJ9MLA6fVI8Jr+qDfSQ5pzD5g8q+WNK4JBqXBneSRzp+oSz3E7gu7u3oVeR+PU/LYAZkYcP&#xA;QfaQPvdbqtVPPPil7gBsAByAHQD8buuPzP8AL0VmbuOz1ieIJ6nJdH1KNeFOXL1JreKICnctmWND&#xA;LrKAH9eJ+4k/Y46S6Nrdzr2sWus6naX9hpOly3EmlabLZXkt210/qQPPcvHE8SCOOSSOOFS1K1Zq&#xA;gKuVlzYsOI48Z4skwBKQ2iAKPDHqTYBlI1uKA6lZVZ+dNEvIjLbpeulaVWwvG26q1ViIoy0ZfYjN&#xA;SqH0vzlo3pQWXC9+sRQLyUWN4d46JItBETWNqBttqjBHk25yDORHeVR/OGj/AKTjgCagXEb8wLG8&#xA;4KWKFQ6+jy5sASm3QNkwfSfx3tShqfmLTJtV0RP9Ih9K5luJXubW5t40iSznRnaSaONAoaVFqT1Y&#xA;DvkVT7VdLsdV02502/iE1peRSQTpUglJUMbgMKFSVYio3xVIfK35aeTvK2oT6holk9tdXEQgldp5&#xA;pR6YKkKBK7gfYGKq3mP8v/KvmO/gvtXtXnuLeNYkZZpogUSdLhVZY3UGksSnFU20bSLDRtKtNK0+&#xA;MxWVlEsFvGWLkIgoKsxJJ9zirALnyp+WX5aXOna/baXLFdSTLpttJFOCeVyCEDi5njVhyqOW/HlU&#xA;0QEqqlnnbz5+Rmu3K23mO5mlm0761arwhvk4C4RYLgViVahkdd/fbetFUZp/5zfk35dso9Ksb6aG&#xA;CL1Jktltb2Zh6zyzOalHanMSE1NF9hTFU08u+Rfyz1u9sfPGmWTS3iXV3d2V+ZJQ3qyTyidgOdOD&#xA;yMxC9KU264qyrzD5Z0bzDb21vqsBnis7mO9twHeMrPDXg9UK9OR2O2Kobyb5H8s+TdKk0ry7amzs&#xA;ZJmuXiMkktZXVVZuUrO24Qd8VQGt/ld5L1zWbbWNTs5J7+0uxqFs/rzKqXAjhi58FdVNY7WNSCKb&#xA;YqmWveT9A125sbnUoHkm06Vp7UpLJGBI6emWZUZVc8dgWBp2xVRs/Inlq08tXflqCCRNIvvWN1Cs&#xA;0qM31kky/vEZXXnU1oRXevU1VUvL35c+U/L+rNq2l2rx37WqWHqvNLJ/o0SRIkYV2ZfhW3TeldsV&#xA;QWq/lF5D1XVLjVL6xkmvrq4S6nma4nJMkaGNKAuQoRT8IWnHbjSgxVLfzA/5V9qt5dQ+bbG7KaBb&#xA;j/S09Th6Wq0hHpLbO0rmRomTdNih9qqpPafmJ+SGm+VpfJkF1PDowgNi9sYb1zxvlY8PXKs3J/Ub&#xA;fn177YqgfI3nr/nH/SvMM8nlSaZdV124htJaQ31JJZJEVBynULt6yt1+EdOpqqz2T8q/JMmrRaq9&#xA;k5vIdQk1aM+vNwF7K8TvLw58d2t02pTbpiqY+ZfJfl7zI9tJq0DyyWkdzFbyRyyRMqXkXozr+7Za&#xA;849t8VbXyb5fXyvP5YW3I0a4SeOS3DuDxuXaSSjA8l+KQkUO3bFUN5d/Lzyn5evri+0u0aO5uUMU&#xA;rvLLKChmaegV2ZR+8cnpirrH8vPKlj5hfzBbW0i6pJNLctK08zj1Z4xE54uzCnAUC9B2HTFXal+X&#xA;nlbUvMsHmW7glk1e39H0pvrE4QC3f1I1EXP0wof4qBaE74qreZ/I3lzzOYTrEMkzW6yLDwnmiCiW&#xA;N4pKKjKvxJIQTTw8Biqp5p8neXvNWnw6frlsbq0gmFxHGJJI6SKjRg8o2Vj8Mjd8VYHdfmF+Usnk&#xA;SLRNY9ex0J7M2wsnJnkS2tf3a1msZLkV4w8lpIWIFe4qqu0384fyY0nSH06DU5YrBZJvVWaG8Yhr&#xA;iVpJeTOhanORjXoMVRH5Ra7+VM17qOk+Rjc+ssFtc3i3Ed0n7pUEMJH1oKfsr2G/XFWV6V5B8r6V&#xA;rs2uWNq0WpXD3Uk0vqyspe+kSSduDMV+Jol7bUxVuXyH5Yk8xN5ie2f9KvNBcPKJplQy20L28LmM&#xA;OEJWKV16d8Vd5m8h+WPMs8c+sWpuJIoJbZCJHT91OVLiikb1jFD1HbFWQYq7FXYq7FVG6+p8F+t+&#xA;nwr8Pq8acuJ6cu/Gv0YqgtU/w19Vn/Sv1L6p6cn1n616Xp+l8Xq+p6nw8ftcq7da4qr/AO4av/Ht&#xA;Xh/kfYp/xGmKoqL0fTHo8fT/AGeFOPXtTFV2KuxV2KuxV2KuxV2Kqb/V+Tc+HKi8+VK0qeFa+9aY&#xA;qlz/AOFfrsHP6j9e4SfVq+j6vDgPV4ftceH2qduuKopf0T6kfH6v6lT6VOFa134/T4Yqi8VdirsV&#xA;dirsVdirsVdiqDX9D+iOP1f0Pi404cKVHOnbrSuKoa2/wrzu/qv1Hn6i/X/S9GvqcE4+tx/a9PhT&#xA;lvx49qYqjoPqPqH0PS9SnxcOPKlB1p9GKq+KuxV2Kv8A/9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
         <xap:MetadataDate>2008-12-30T10:29:22-08:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1190.551025</stDim:w>
            <stDim:h>841.889771</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Times-Roman</stFnt:fontName>
                  <stFnt:fontFamily>Times</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.0d6e5</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times.dfont</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:InstanceID>uuid:E20248765AD5DD11A54FBD1EC42FF4A8</xapMM:InstanceID>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -279.243 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 279.243 li
799.236 279.243 li
799.236 0 li
cp
clp
[1 0 0 1 0 0 ]ct
30.9248 245.287 mo
30.9248 4.80664 li
263.89 4.80664 li
263.89 245.287 li
30.9248 245.287 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
1 lw
2 lc
0 lj
4 ml
[] 0 dsh
true sadj
30.9248 245.287 mo
30.9248 4.80664 li
263.89 4.80664 li
263.89 245.287 li
30.9248 245.287 li
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
gsave
30.9248 4.80664 mo
263.89 4.80664 li
263.89 245.287 li
30.9248 245.287 li
30.9248 4.80664 li
cp
clp
2 lw
90.3047 245.287 mo
156.771 244.806 li
158.811 244.325 li
165.03 243.844 li
168.326 243.363 li
168.886 242.882 li
174.509 242.401 li
178.315 241.92 li
182.97 241.439 li
186.117 240.958 li
191.404 240.478 li
191.993 239.996 li
192.385 239.516 li
192.99 239.034 li
193.319 238.554 li
193.944 238.072 li
194.729 237.592 li
197.381 237.11 li
197.905 236.63 li
198.196 236.148 li
198.367 235.668 li
198.655 235.187 li
199.244 234.706 li
200.115 234.225 li
202.123 233.744 li
205.285 233.263 li
206.39 232.782 li
208.138 232.301 li
209.58 231.82 li
209.603 231.339 li
209.752 230.858 li
210.147 230.377 li
211.397 229.896 li
211.402 229.415 li
212.894 228.935 li
214.235 228.453 li
214.301 227.973 li
215.585 227.491 li
216.17 227.011 li
217.382 226.529 li
217.464 226.049 li
217.775 225.567 li
218.086 225.087 li
218.528 224.605 li
218.745 224.125 li
219.571 223.644 li
220.949 223.163 li
221.638 222.682 li
221.721 222.201 li
222.005 221.72 li
222.358 221.239 li
223.025 220.758 li
224.175 220.277 li
224.289 219.796 li
224.445 219.315 li
224.552 218.834 li
226.527 218.354 li
226.694 217.872 li
226.761 217.392 li
226.849 216.91 li
227.313 216.43 li
227.601 215.948 li
228.43 215.467 li
228.77 214.986 li
229.424 214.505 li
229.588 214.024 li
230.046 213.543 li
230.052 213.063 li
230.189 212.581 li
230.468 212.101 li
230.505 211.619 li
230.521 211.139 li
231.438 210.657 li
231.673 210.177 li
231.912 209.695 li
232.551 209.215 li
232.766 208.733 li
233.497 208.253 li
233.731 207.771 li
234.238 207.291 li
234.489 206.81 li
234.532 206.329 li
234.535 205.848 li
234.772 205.367 li
234.824 204.886 li
234.934 204.405 li
234.973 203.924 li
235.051 203.443 li
235.178 202.962 li
235.197 202.481 li
235.648 202 li
235.8 201.52 li
235.932 201.038 li
236.037 200.558 li
236.059 200.076 li
236.103 199.596 li
236.109 199.114 li
236.154 198.634 li
236.729 198.152 li
236.982 197.672 li
237.351 197.19 li
237.352 196.71 li
237.734 196.229 li
237.734 195.748 li
238.089 195.267 li
238.123 194.786 li
238.452 194.305 li
238.573 193.824 li
238.797 193.343 li
238.955 192.862 li
238.981 192.381 li
238.994 191.9 li
239.035 191.419 li
239.156 190.938 li
239.52 190.457 li
239.581 189.977 li
239.639 189.495 li
239.761 189.015 li
239.851 188.533 li
239.925 188.053 li
239.977 187.571 li
240.125 187.091 li
240.146 186.609 li
240.368 186.129 li
240.397 185.647 li
240.472 185.167 li
240.515 184.686 li
240.581 184.205 li
240.636 183.724 li
240.833 183.243 li
240.854 182.762 li
240.969 182.281 li
241.066 181.8 li
241.086 181.319 li
241.194 180.838 li
241.923 180.357 li
242.173 179.876 li
242.374 179.396 li
242.488 178.914 li
242.647 178.434 li
242.754 177.952 li
243.128 177.472 li
243.336 176.99 li
243.554 176.51 li
243.833 176.028 li
243.922 175.548 li
244.025 175.066 li
244.028 174.586 li
244.149 174.104 li
244.203 173.624 li
244.211 173.143 li
244.556 172.662 li
244.619 172.181 li
244.636 171.7 li
244.758 171.219 li
244.939 170.738 li
245.215 170.257 li
245.318 169.776 li
245.603 169.295 li
245.662 168.814 li
245.723 168.333 li
245.772 167.853 li
245.822 167.371 li
246.129 166.891 li
246.258 166.409 li
246.39 165.929 li
246.459 165.447 li
246.616 164.967 li
246.866 164.485 li
246.981 164.005 li
247.176 163.523 li
247.212 163.043 li
247.46 162.562 li
247.522 162.081 li
247.759 161.6 li
248.164 161.119 li
248.232 160.638 li
248.357 160.157 li
248.684 159.676 li
248.696 159.195 li
248.749 158.714 li
248.821 158.233 li
248.855 157.752 li
248.899 157.271 li
249.022 156.79 li
249.124 156.31 li
249.124 155.828 li
249.139 155.348 li
249.142 154.866 li
249.203 154.386 li
249.221 153.904 li
249.38 153.424 li
249.431 152.942 li
249.458 152.462 li
249.509 151.98 li
249.528 151.5 li
249.563 151.019 li
249.676 150.538 li
249.704 150.057 li
249.785 149.576 li
249.879 149.095 li
250.102 148.614 li
250.185 148.133 li
250.22 147.652 li
250.572 147.171 li
250.65 146.69 li
250.76 146.209 li
250.763 145.729 li
250.77 145.247 li
250.896 144.767 li
250.975 144.285 li
251.033 143.805 li
251.089 143.323 li
251.278 142.843 li
251.646 142.361 li
251.861 141.881 li
251.879 141.399 li
251.941 140.919 li
251.943 140.438 li
251.947 139.957 li
251.996 139.476 li
252.006 138.994 li
252.11 138.514 li
252.153 138.032 li
252.2 137.552 li
252.262 137.07 li
252.278 136.59 li
252.299 136.108 li
252.304 135.628 li
252.385 135.146 li
252.401 134.666 li
252.419 134.185 li
252.733 133.704 li
252.81 133.223 li
252.892 132.742 li
252.909 132.261 li
252.927 131.78 li
252.938 131.299 li
253.013 130.818 li
253.123 130.337 li
253.42 129.856 li
253.479 129.375 li
253.554 128.895 li
253.601 128.413 li
253.888 127.933 li
253.946 127.451 li
253.954 126.971 li
254.209 126.489 li
254.283 126.009 li
254.307 125.527 li
254.353 125.047 li
254.455 124.565 li
254.52 124.085 li
254.537 123.604 li
254.57 123.123 li
254.707 122.642 li
254.709 122.161 li
254.77 121.68 li
254.788 121.199 li
254.981 120.718 li
255.045 120.237 li
255.155 119.756 li
255.166 119.275 li
255.23 118.794 li
255.302 118.313 li
255.394 117.832 li
255.421 117.352 li
255.621 116.87 li
255.689 116.39 li
255.72 115.908 li
255.797 115.428 li
255.83 114.946 li
255.858 114.466 li
256.002 113.984 li
256.061 113.504 li
256.069 113.022 li
256.104 112.542 li
256.217 112.061 li
256.305 111.58 li
256.323 111.099 li
256.474 110.618 li
256.479 110.137 li
256.535 109.656 li
256.566 109.175 li
256.626 108.694 li
256.636 108.213 li
256.666 107.732 li
256.688 107.251 li
256.749 106.771 li
256.775 106.289 li
256.782 105.809 li
256.889 105.327 li
256.889 104.847 li
256.955 104.365 li
256.984 103.885 li
257.053 103.403 li
257.059 102.923 li
257.061 102.441 li
257.13 101.961 li
257.165 101.479 li
257.181 100.999 li
257.212 100.518 li
257.227 100.037 li
257.359 99.5557 li
257.364 99.0752 li
257.431 98.5938 li
257.538 98.1133 li
257.653 97.6318 li
257.666 97.1514 li
257.713 96.6699 li
257.758 96.1895 li
257.796 95.708 li
257.885 95.2275 li
257.973 94.7461 li
258.009 94.2656 li
258.043 93.7842 li
258.077 93.3037 li
258.109 92.8223 li
258.116 92.3418 li
258.14 91.8604 li
258.218 91.3799 li
258.246 90.8984 li
258.266 90.418 li
258.339 89.9365 li
258.39 89.4561 li
258.396 88.9746 li
258.445 88.4941 li
258.447 88.0127 li
258.449 87.5322 li
258.526 87.0508 li
258.565 86.5703 li
258.651 86.0889 li
258.672 85.6084 li
258.774 85.127 li
258.787 84.6465 li
258.802 84.165 li
258.809 83.6846 li
258.816 83.2031 li
258.818 82.7227 li
258.961 82.2412 li
258.982 81.7607 li
259.042 81.2793 li
259.045 80.7988 li
259.077 80.3174 li
259.363 79.8369 li
259.372 79.3555 li
259.38 78.875 li
259.419 78.3936 li
259.423 77.9131 li
259.424 77.4316 li
259.521 76.9512 li
259.527 76.4697 li
259.537 75.9893 li
259.629 75.5078 li
259.666 75.0273 li
259.676 74.5459 li
259.677 74.0654 li
259.707 73.584 li
259.78 73.1035 li
259.917 72.6221 li
259.962 72.1416 li
259.968 71.6602 li
259.969 71.1797 li
259.982 70.6982 li
259.983 70.2178 li
260.042 69.7363 li
260.08 69.2559 li
260.14 68.7744 li
260.185 68.2939 li
260.186 67.8125 li
260.212 67.332 li
260.22 66.8506 li
260.224 66.3701 li
260.231 65.8887 li
260.236 65.4082 li
260.273 64.9268 li
260.284 64.4463 li
260.285 63.9648 li
260.32 63.4844 li
260.419 63.0029 li
260.441 62.5225 li
260.644 62.041 li
260.723 61.5605 li
260.738 61.0791 li
260.788 60.5986 li
260.809 60.1172 li
260.843 59.6367 li
260.878 59.1553 li
260.889 58.6738 li
260.897 58.1934 li
260.907 57.7119 li
260.941 57.2314 li
260.967 56.75 li
260.986 56.2695 li
261.033 55.7881 li
261.061 55.3076 li
261.067 54.8262 li
261.136 54.3457 li
261.148 53.8643 li
261.24 53.3838 li
261.275 52.9023 li
261.283 52.4219 li
261.286 51.9404 li
261.408 51.46 li
261.456 50.9785 li
261.524 50.498 li
261.551 50.0166 li
261.553 49.5361 li
261.576 49.0547 li
261.594 48.5742 li
261.6 48.0928 li
261.604 47.6123 li
261.622 47.1309 li
261.656 46.6504 li
261.787 46.1689 li
261.825 45.6885 li
261.859 45.207 li
261.876 44.7266 li
261.904 44.2451 li
261.955 43.7646 li
261.957 43.2832 li
261.975 42.8027 li
262.014 42.3213 li
262.048 41.8408 li
262.051 41.3594 li
262.075 40.8789 li
262.166 40.3975 li
262.167 39.917 li
262.174 39.4355 li
262.191 38.9551 li
262.202 38.4736 li
262.219 37.9932 li
262.238 37.5117 li
262.238 37.0313 li
262.261 36.5498 li
262.302 36.0693 li
262.307 35.5879 li
262.309 35.1074 li
262.318 34.626 li
262.416 34.1455 li
262.487 33.6641 li
262.528 33.1836 li
262.536 32.7021 li
262.543 32.2217 li
262.578 31.7402 li
262.605 31.2598 li
262.684 30.7783 li
262.699 30.2979 li
262.709 29.8164 li
262.71 29.3359 li
262.714 28.8545 li
262.733 28.374 li
262.739 27.8926 li
262.754 27.4121 li
262.759 26.9307 li
262.764 26.4502 li
262.77 25.9688 li
262.812 25.4883 li
262.847 25.0068 li
262.89 24.5264 li
262.929 24.0449 li
262.962 23.5645 li
262.997 23.083 li
263.021 22.6025 li
263.051 22.1211 li
263.062 21.6406 li
263.078 21.1592 li
263.086 20.6787 li
263.135 20.1973 li
263.172 19.7168 li
263.195 19.2354 li
263.326 18.7549 li
263.357 18.2734 li
263.364 17.793 li
263.372 17.3115 li
263.379 16.8311 li
263.386 16.3496 li
263.456 15.8691 li
263.466 15.3877 li
263.467 14.9072 li
263.471 14.4258 li
263.489 13.9453 li
263.524 13.4639 li
263.553 12.9834 li
263.578 12.502 li
263.584 12.0215 li
263.609 11.54 li
263.612 11.0596 li
263.648 10.5781 li
263.656 10.0977 li
263.703 9.61621 li
263.714 9.13574 li
263.721 8.6543 li
263.76 8.17383 li
263.768 7.69238 li
263.787 7.21191 li
263.836 6.73047 li
263.856 6.25 li
263.86 5.76855 li
263.865 5.28809 li
0 0.992157 1 0 cmyk
@
grestore
gsave
30.9248 4.80664 mo
263.89 4.80664 li
263.89 245.287 li
30.9248 245.287 li
30.9248 4.80664 li
cp
clp
192.385 245.287 mo
192.385 4.80664 li
0 0.992157 1 0 cmyk
@
grestore
gsave
30.9248 4.80664 mo
263.89 4.80664 li
263.89 245.287 li
30.9248 245.287 li
30.9248 4.80664 li
cp
clp
263.612 245.287 mo
263.612 4.80664 li
0 0.992157 1 0 cmyk
@
grestore
gsave
30.9248 4.80664 mo
263.89 4.80664 li
263.89 245.287 li
30.9248 245.287 li
30.9248 4.80664 li
cp
clp
2 lw
38.1084 245.287 mo
66.2646 244.806 li
70.6875 244.325 li
71.3643 243.844 li
73.8027 243.363 li
73.8857 242.882 li
79.4971 242.401 li
82.6133 241.92 li
88.8213 241.439 li
92.8477 240.958 li
93.8486 240.478 li
94.2119 239.996 li
95.6992 239.516 li
97.7725 239.034 li
100.855 238.554 li
103.26 238.072 li
103.478 237.592 li
106.465 237.11 li
110.443 236.63 li
110.479 236.148 li
110.94 235.668 li
111.381 235.187 li
113.273 234.706 li
115.939 234.225 li
116.798 233.744 li
117.265 233.263 li
118.872 232.782 li
118.975 232.301 li
121.406 231.82 li
122.114 231.339 li
122.506 230.858 li
122.917 230.377 li
123.821 229.896 li
124.504 229.415 li
126.474 228.935 li
126.799 228.453 li
130.043 227.973 li
130.22 227.491 li
130.258 227.011 li
131.435 226.529 li
133.029 226.049 li
133.683 225.567 li
134.885 225.087 li
139.044 224.605 li
139.434 224.125 li
139.515 223.644 li
140.193 223.163 li
140.552 222.682 li
141.055 222.201 li
141.215 221.72 li
141.531 221.239 li
141.835 220.758 li
141.995 220.277 li
142.518 219.796 li
142.615 219.315 li
142.751 218.834 li
143.325 218.354 li
143.86 217.872 li
144.104 217.392 li
144.402 216.91 li
145.623 216.43 li
146.496 215.948 li
146.674 215.467 li
147.058 214.986 li
147.431 214.505 li
148.02 214.024 li
148.739 213.543 li
149.089 213.063 li
150.498 212.581 li
151.139 212.101 li
152.614 211.619 li
152.788 211.139 li
152.857 210.657 li
153.01 210.177 li
153.432 209.695 li
153.746 209.215 li
154.337 208.733 li
154.658 208.253 li
155.051 207.771 li
155.487 207.291 li
155.552 206.81 li
155.722 206.329 li
157.307 205.848 li
158.184 205.367 li
158.593 204.886 li
159.38 204.405 li
159.566 203.924 li
160.15 203.443 li
160.91 202.962 li
161.243 202.481 li
161.871 202 li
162.212 201.52 li
163.089 201.038 li
163.356 200.558 li
163.549 200.076 li
163.739 199.596 li
163.872 199.114 li
164.305 198.634 li
164.432 198.152 li
164.553 197.672 li
164.786 197.19 li
164.858 196.71 li
164.984 196.229 li
165.21 195.748 li
165.367 195.267 li
165.421 194.786 li
165.596 194.305 li
165.629 193.824 li
166.253 193.343 li
166.271 192.862 li
166.352 192.381 li
166.434 191.9 li
166.994 191.419 li
167.413 190.938 li
167.752 190.457 li
168.104 189.977 li
168.365 189.495 li
168.426 189.015 li
168.698 188.533 li
168.946 188.053 li
169.298 187.571 li
169.478 187.091 li
170.096 186.609 li
170.17 186.129 li
170.531 185.647 li
170.606 185.167 li
170.638 184.686 li
170.656 184.205 li
170.759 183.724 li
171.029 183.243 li
171.401 182.762 li
171.913 182.281 li
172.38 181.8 li
173.229 181.319 li
173.281 180.838 li
173.569 180.357 li
173.949 179.876 li
174.102 179.396 li
174.462 178.914 li
174.634 178.434 li
174.645 177.952 li
175.092 177.472 li
175.127 176.99 li
175.135 176.51 li
175.179 176.028 li
175.525 175.548 li
175.561 175.066 li
175.615 174.586 li
175.652 174.104 li
176.189 173.624 li
176.707 173.143 li
176.753 172.662 li
176.848 172.181 li
176.916 171.7 li
176.945 171.219 li
177.202 170.738 li
177.33 170.257 li
177.376 169.776 li
177.633 169.295 li
177.938 168.814 li
178.121 168.333 li
178.313 167.853 li
178.473 167.371 li
178.486 166.891 li
178.605 166.409 li
178.827 165.929 li
179.068 165.447 li
179.614 164.967 li
179.864 164.485 li
180.071 164.005 li
180.456 163.523 li
180.571 163.043 li
180.925 162.562 li
181.746 162.081 li
181.758 161.6 li
181.874 161.119 li
182.113 160.638 li
182.118 160.157 li
182.226 159.676 li
182.304 159.195 li
182.548 158.714 li
182.559 158.233 li
182.887 157.752 li
182.898 157.271 li
182.998 156.79 li
183.199 156.31 li
183.342 155.828 li
183.378 155.348 li
183.447 154.866 li
183.864 154.386 li
184.257 153.904 li
184.322 153.424 li
184.655 152.942 li
184.67 152.462 li
185.694 151.98 li
185.702 151.5 li
186.465 151.019 li
186.641 150.538 li
186.832 150.057 li
186.899 149.576 li
187.31 149.095 li
187.453 148.614 li
187.609 148.133 li
187.633 147.652 li
188.295 147.171 li
188.357 146.69 li
188.496 146.209 li
188.691 145.729 li
188.803 145.247 li
189.081 144.767 li
189.467 144.285 li
189.526 143.805 li
189.818 143.323 li
189.92 142.843 li
190.002 142.361 li
190.089 141.881 li
190.14 141.399 li
190.279 140.919 li
190.344 140.438 li
190.466 139.957 li
191.224 139.476 li
191.341 138.994 li
191.735 138.514 li
191.977 138.032 li
192.207 137.552 li
192.332 137.07 li
192.356 136.59 li
192.388 136.108 li
193.02 135.628 li
193.252 135.146 li
193.752 134.666 li
193.973 134.185 li
194.086 133.704 li
194.234 133.223 li
194.391 132.742 li
194.584 132.261 li
194.851 131.78 li
195.174 131.299 li
196.319 130.818 li
196.506 130.337 li
196.516 129.856 li
196.548 129.375 li
196.697 128.895 li
196.775 128.413 li
197.02 127.933 li
197.134 127.451 li
197.332 126.971 li
197.36 126.489 li
197.414 126.009 li
197.801 125.527 li
197.92 125.047 li
197.934 124.565 li
198.005 124.085 li
198.225 123.604 li
198.253 123.123 li
198.339 122.642 li
198.4 122.161 li
198.513 121.68 li
198.667 121.199 li
198.7 120.718 li
198.78 120.237 li
198.842 119.756 li
198.936 119.275 li
199.211 118.794 li
199.399 118.313 li
199.754 117.832 li
200.043 117.352 li
200.27 116.87 li
200.529 116.39 li
200.645 115.908 li
200.923 115.428 li
200.975 114.946 li
201.26 114.466 li
201.28 113.984 li
201.354 113.504 li
201.386 113.022 li
201.43 112.542 li
201.486 112.061 li
201.566 111.58 li
201.568 111.099 li
201.702 110.618 li
201.876 110.137 li
201.918 109.656 li
202.061 109.175 li
202.351 108.694 li
202.354 108.213 li
202.435 107.732 li
202.625 107.251 li
202.641 106.771 li
202.688 106.289 li
203.021 105.809 li
203.475 105.327 li
203.792 104.847 li
203.949 104.365 li
204.084 103.885 li
204.962 103.403 li
205.017 102.923 li
205.068 102.441 li
205.413 101.961 li
205.415 101.479 li
205.482 100.999 li
205.879 100.518 li
205.927 100.037 li
205.95 99.5557 li
205.999 99.0752 li
206.076 98.5938 li
207.342 98.1133 li
207.365 97.6318 li
207.432 97.1514 li
207.5 96.6699 li
207.761 96.1895 li
208.012 95.708 li
208.078 95.2275 li
208.082 94.7461 li
208.248 94.2656 li
208.48 93.7842 li
209 93.3037 li
209.071 92.8223 li
209.206 92.3418 li
209.533 91.8604 li
209.555 91.3799 li
209.623 90.8984 li
210.298 90.418 li
210.458 89.9365 li
210.632 89.4561 li
210.771 88.9746 li
210.791 88.4941 li
210.861 88.0127 li
210.95 87.5322 li
211.085 87.0508 li
211.517 86.5703 li
211.543 86.0889 li
211.784 85.6084 li
211.946 85.127 li
211.964 84.6465 li
212.261 84.165 li
212.286 83.6846 li
212.421 83.2031 li
212.426 82.7227 li
212.509 82.2412 li
212.518 81.7607 li
212.582 81.2793 li
212.938 80.7988 li
213.08 80.3174 li
213.316 79.8369 li
214.106 79.3555 li
214.372 78.875 li
214.574 78.3936 li
215.06 77.9131 li
215.256 77.4316 li
215.452 76.9512 li
215.604 76.4697 li
216.046 75.9893 li
216.212 75.5078 li
216.529 75.0273 li
216.902 74.5459 li
217.303 74.0654 li
217.358 73.584 li
217.695 73.1035 li
218.095 72.6221 li
218.149 72.1416 li
218.394 71.6602 li
218.397 71.1797 li
218.422 70.6982 li
218.616 70.2178 li
219.059 69.7363 li
219.125 69.2559 li
219.395 68.7744 li
219.511 68.2939 li
219.652 67.8125 li
220.252 67.332 li
220.451 66.8506 li
220.924 66.3701 li
221.07 65.8887 li
221.532 65.4082 li
221.62 64.9268 li
222.147 64.4463 li
222.195 63.9648 li
222.255 63.4844 li
222.497 63.0029 li
222.781 62.5225 li
222.898 62.041 li
223.027 61.5605 li
223.302 61.0791 li
223.565 60.5986 li
223.641 60.1172 li
223.8 59.6367 li
223.96 59.1553 li
224.232 58.6738 li
224.258 58.1934 li
224.318 57.7119 li
224.328 57.2314 li
224.38 56.75 li
224.384 56.2695 li
224.465 55.7881 li
224.557 55.3076 li
224.59 54.8262 li
224.834 54.3457 li
224.931 53.8643 li
225.022 53.3838 li
225.415 52.9023 li
225.509 52.4219 li
225.556 51.9404 li
225.668 51.46 li
225.675 50.9785 li
225.729 50.498 li
225.981 50.0166 li
226.622 49.5361 li
226.718 49.0547 li
227.171 48.5742 li
227.578 48.0928 li
227.587 47.6123 li
227.817 47.1309 li
227.958 46.6504 li
227.997 46.1689 li
228.005 45.6885 li
228.744 45.207 li
228.854 44.7266 li
228.891 44.2451 li
228.954 43.7646 li
229.037 43.2832 li
229.424 42.8027 li
229.649 42.3213 li
229.715 41.8408 li
229.97 41.3594 li
230.078 40.8789 li
230.284 40.3975 li
230.569 39.917 li
230.613 39.4355 li
230.619 38.9551 li
230.783 38.4736 li
230.841 37.9932 li
230.931 37.5117 li
231.86 37.0313 li
231.907 36.5498 li
231.992 36.0693 li
232.123 35.5879 li
232.366 35.1074 li
232.74 34.626 li
232.773 34.1455 li
233.227 33.6641 li
233.704 33.1836 li
233.839 32.7021 li
233.869 32.2217 li
234.031 31.7402 li
234.121 31.2598 li
234.542 30.7783 li
234.648 30.2979 li
235.297 29.8164 li
235.298 29.3359 li
235.624 28.8545 li
236.073 28.374 li
236.074 27.8926 li
237.106 27.4121 li
237.449 26.9307 li
238.23 26.4502 li
238.394 25.9688 li
238.703 25.4883 li
238.721 25.0068 li
238.91 24.5264 li
238.943 24.0449 li
239.764 23.5645 li
240.271 23.083 li
240.318 22.6025 li
240.469 22.1211 li
240.548 21.6406 li
240.565 21.1592 li
240.568 20.6787 li
240.647 20.1973 li
240.951 19.7168 li
240.968 19.2354 li
241.086 18.7549 li
241.1 18.2734 li
241.447 17.793 li
242.769 17.3115 li
242.824 16.8311 li
243.045 16.3496 li
243.168 15.8691 li
243.395 15.3877 li
243.622 14.9072 li
243.737 14.4258 li
244.169 13.9453 li
244.731 13.4639 li
245.212 12.9834 li
245.544 12.502 li
245.905 12.0215 li
246.619 11.54 li
246.674 11.0596 li
247.489 10.5781 li
247.924 10.0977 li
248.678 9.61621 li
249.293 9.13574 li
249.734 8.6543 li
251.274 8.17383 li
257.006 7.69238 li
258.42 7.21191 li
258.608 6.73047 li
260.982 6.25 li
261.047 5.76855 li
262.523 5.28809 li
0.882353 0.768627 0 0 cmyk
@
grestore
gsave
30.9248 4.80664 mo
263.89 4.80664 li
263.89 245.287 li
30.9248 245.287 li
30.9248 4.80664 li
cp
clp
0 lc
[6 6 ] 0 dsh
95.6992 245.287 mo
95.6992 4.80664 li
0.882353 0.768627 0 0 cmyk
@
grestore
gsave
30.9248 4.80664 mo
263.89 4.80664 li
263.89 245.287 li
30.9248 245.287 li
30.9248 4.80664 li
cp
clp
0 lc
[6 6 ] 0 dsh
246.674 245.287 mo
246.674 4.80664 li
0.882353 0.768627 0 0 cmyk
@
grestore
%ADOBeginSubsetFont: Times-Roman Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Times-Roman def/FontInfo 5 dict dup begin/ItalicAngle 0 def/OrigFontType /TrueType defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 46 /period putdup 48 /zero putdup 56 /eight putdef/FontBBox {-203 -428 1700 1271} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings5 dict dup begin/.notdef <1C60D8A8C9B6079F6CEA24BDEB0F5E4D18DF0CD7E2A11E9D72D963E3987D5E4E6C9FCD> |-/space <1C60D8A8C9B8707C25> |-/period <1C60D8A8C9B8707CDCE5666C9B3EABE1C8F3B5685DC89284E5BE559D084487449BF37D1D86EF1322476306E241C4EF3BA9B7322496F4AC15DB69BEC6340D464440EA95046229> |-/zero <1C60D8A8C9B7A73DB9A6590C6FE2B7096DCA6F9A5EA5CF6E8AC2157EC7418EBDC43117FA8257DD5995ADA72B55217A703B5CBF244854B4360CFDF4258ECD5C9DEB492AEA5EC77E976B17AE7E2222D3F2CC89571B26AFB82DDBE99926812437BF7851C7D506B52E7A7DE1242CAC6D81645AF838199FD3EBA9B534D647714BFDCAF64F05E4> |-/eight <1C60D8A8C9B7A73DB9AA6386F0D433AA59FB601CE68D9D6220D80F865EFA1568339E25269162989F3B16CF5E1B85465E9B09AD3E1F38EB0BC3CC5B97FD7D595D378E5AF532DAC1C0173C6C74DAC1A5EFEB2094038777E094111D458CECDBEE2BFAFA1B194747D5AC182EDAECA7759C2CF7DA7B573AFBC7EB901C25328CA8529A5AF9870597DA9D6CE71ED45E3423137009ACC2E00FA606E5775C8BEB1D188095A69B5C3B51980741130E91409210303836D6B9BCD44F7FE0CC1ED555E839C2D5D70041FF279A3E977285D9F41DC64AB105D99B2CC098F9CEE3C23260EF9612DAD441A57B770C0516F587622E5D85261682E95C452BF079> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/YWNVGS+Times-Roman /Times-Roman findfont ct_VMDictPut/YWNVGS+Times-Roman*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero 7{/.notdef}rp /eight 199{/.notdef}rp]YWNVGS+Times-Roman nfYWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf22.4717 255.286 mo(0.88 )[4.99805 2.49902 4.99805 4.99805 0 ]xsh0.5 lw
0 lc
69.752 245.287 mo
69.752 240.287 li
@
69.752 9.80664 mo
69.752 4.80664 li
@
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.systemdict beginYWNVGS+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/nine <1C60D8A8C9B7A73DB9A896D23FCC66190904632D73F98CB9610A16993F6B122D7E1E78C0FD3CFB4BA7B04573F85C6AAF2DBC5FF0782821FB24CB9148C8554B2F1030920B61B0FCD80181994622E333F98E453CE9ADDE1282743A6D28C02F5A1E762172EE000BA8345C747F4D035036F2F72356957E99A085687800E644D881E70A8EFBE3A3E6E4B170FA116E5327D2CD42DA986FA6C800B44A5CE5DF369C3295EA45945F8EE425ED3E5B812A8DD33EE2E3340844A5314FF5267F47524653D6A9344C2AEC57094DFAB247907C47ADE2EB> |-systemdict /gcheck known {setglobal} if end {end} ifendYWNVGS+Times-Roman /Encoding getdup 57 /nine putpop%ADOEndSubsetFont
/YWNVGS+Times-Roman*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero 7{/.notdef}rp /eight /nine 198{/.notdef}rp]YWNVGS+Times-Roman nfYWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf61.2988 257.099 mo(0.90 )[4.99805 2.49902 4.99805 4.99805 0 ]xsh108.579 245.287 mo
108.579 240.287 li
@
108.579 9.80664 mo
108.579 4.80664 li
@
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.systemdict beginYWNVGS+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/two <1C60D8A8C9B7A73DE72BAD97A1AB14497350B04AEDCC89B810A7A7579EC67BBA1BB072CAE80FF5F224043D73141B835306B538E1A090321AB63325D8B3A58C70F1FD34F3553B37A8BF6164DDA11E437012DC022ABF8601BBE36E43FA1BA89215476687E89F4C0A4BCB6119B7B6C22E9A6D30709E37D3141BAD532924FFAD1DE501B4> |-systemdict /gcheck known {setglobal} if end {end} ifendYWNVGS+Times-Roman /Encoding getdup 50 /two putpop%ADOEndSubsetFont
/YWNVGS+Times-Roman*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /.notdef /two 5{/.notdef}rp /eight /nine 198{/.notdef}rp]YWNVGS+Times-Roman nfYWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf100.376 257.099 mo(0.92 )[4.99805 2.49902 4.99805 4.99805 0 ]xsh147.407 245.287 mo
147.407 240.287 li
@
147.407 9.80664 mo
147.407 4.80664 li
@
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.systemdict beginYWNVGS+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/four <1C60D8A8C9B7A73DB992534E0CF1B84939C969D2AC65F1AE73EE883487A67D0ECB26822C5FF826C828AC8594DE5FF3D9E5AE6F090B> |-systemdict /gcheck known {setglobal} if end {end} ifendYWNVGS+Times-Roman /Encoding getdup 52 /four putpop%ADOEndSubsetFont
/YWNVGS+Times-Roman*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /.notdef /two /.notdef /four 3{/.notdef}rp /eight /nine 198{/.notdef}rp]YWNVGS+Times-Roman nfYWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf138.931 257.099 mo(0.94 )[4.99805 2.49902 4.99805 4.99805 0 ]xsh186.234 245.287 mo
186.234 240.287 li
@
186.234 9.80664 mo
186.234 4.80664 li
@
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.systemdict beginYWNVGS+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/six <1C60D8A8C9B7A73DB6D2877672A15D933475028E1A563F35D9B429BC044364BBEA6C8D8E288B5629F6BF21219495DF799C22E6D194E7EF19D2BF50638A5DFD525E61CAA756DFB58BC6CF02B70355716B1567E587BDF24EE1CD60FDA306A5E8E3EC9A065FDF865555F45DE4B3A9666958B7C5B64C412BD6705A27F81BA359AA5385B74802E199214ED2C08D85C8D9515B8A71A37E696B11B788D46272326187B79B809C5ABF82FEBD4C4DE257125A17BA43> |-systemdict /gcheck known {setglobal} if end {end} ifendYWNVGS+Times-Roman /Encoding getdup 54 /six putpop%ADOEndSubsetFont
/YWNVGS+Times-Roman*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /.notdef /two /.notdef /four /.notdef /six /.notdef /eight /nine 198{/.notdef}rp]YWNVGS+Times-Roman nfYWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf178.281 257.099 mo(0.96 )[4.99805 2.49902 4.99805 4.99805 0 ]xsh225.062 245.287 mo
225.062 240.287 li
@
225.062 9.80664 mo
225.062 4.80664 li
@
YWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf217.109 257.099 mo(0.98 )[4.99805 2.49902 4.99805 4.99805 0 ]xsh%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.systemdict beginYWNVGS+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/one <1C60D8A8C9B7A73DB999B05B43470AE76323D53E9C54AE29C0ACC4151BDD30C8F3109BFE7DACF9BA339B31B8666788A01E1F3860FDA3F22312D6A6628C8CCA55270976BF3BB8008DD87D719627657135E81F194E374733A743BBCD543132801A49C4BA675F59C41D> |-systemdict /gcheck known {setglobal} if end {end} ifendYWNVGS+Times-Roman /Encoding getdup 49 /one putpop%ADOEndSubsetFont
/YWNVGS+Times-Roman*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two /.notdef /four /.notdef /six /.notdef /eight /nine 198{/.notdef}rp]YWNVGS+Times-Roman nfYWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf255.413 255.286 mo(1.00 )[4.99805 2.49902 4.99805 4.99805 0 ]xsh%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.systemdict beginYWNVGS+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/X <1C60D8A8C9B6079F00B3430060194B3C23B7305FF683DA3A6997187B71C26C457E2F08EA686EBEDA6E2C36193C146FFF5E97A325209C457AFC1093F7B89F8B46071BC402DDD0A24C7A52DECAD7BD545F2E878B4F98C57245702D6A016F1D7088A1CC631AAB065DD27629BA93FC11232A925A323D96D900B2FBDE6B3FBCBD0B3BF6E133D9937385646344E23AE6A9959B46D73EC5FA01F166731981740E7F7C658B6D883AE2FA1E43545EC2CB4F060346AB1CE1FCBC77CE1B346C9264F0AB78DC2B32EE5DAF557607E91A12579BD0B98527B13FE67E0B33C1AAF0EA253F9B7D17E3CE97E7BF10C616F090076E7C67A1BD> |-/c <1C60D8A8C9B77FE2CE939B120B8C530BA36A1D378ED7528AD7B7A10AC71BEF208D8B385B11077F2A13A81C13DFBF440D42A243A800735CB8F4DC3746EB4039E43E77D867A7AA457E639AE6CCAFB17D4572C0E8FCF8662A95CB9A94DBFA339E8C89716E4D6EB7EE669FEA0FD73F1B364D57426E512088C7E414CE09DC0040B747838B6828750C7FA69A58B3FBD05411AA3233E35DCBE1E5C8A3302EE901E300C17D> |-/e <1C60D8A8C9B77FE2CE67108D1280ADC9682165E381A1DB7E740A05B18E65167A034DB250F6D5492B270110B05E60263A42B2C42DDF9AB2E4A276D8ABFFBD6680C39C89C62CEAE031CFF89EF16FD9FC76CF19CB9F9E34BA9AA837F4D55163017EBBAC9FCE57F666560D76840A1E9FB941AF2DF15742DAEB79EA2886404B2375DA19EFBEAC2017EDAD03B37508> |-/m <1C60D8A8C9B6FF8699A9E0957D16E85AF3EF7FB5550D53F58119CA6FE9A7D4C98706545F58540E72C4F6DBF95879F02D97A7F35AB5AF3C971237293FF5B2FB844191681255BE21478456D24EE31A2A7143B10FBA09BC00C8AED529FA7A252F5274921E1C121C49F9A6BDE50E747AC4CD0AF6F6706D6A4E730F5719639E692B7DF9539A8C86290A899FD897C44E8C098306316B6B9696B686A9B83249EF96A00A2FF0F972C35DB6BF3C3D779B038A947CE308FE712510B0F53C629676A77F97F98DDA7B37D2628E8FEEC42D36B6A15BF9FD22B2B8F078CF5BFE089DE548DB0501AFAFBA32D2143AC07A22D2DF86E9C0B50FA99CAFD1EE8BB0E72F1F0DA0CAB73F3C0DBE795764A811F4BC8FDB7CE3365A061791255C37B34ED2B69FAF3B52D7BAE8CD2D2E8A84097361CCD8E917EDDDA32F45C31D> |-/n <1C60D8A8C9B7A73DD30B80525D5D675DA4D0977F59D93029CA5D14D1D6563E1C35EFF4A3EA44981DFE04749A107A1C9F060A076451BF62C02FE2E474DD187526384A6F42E0021FEFF54C8346ADE1D28DE56A36764BAF6B66BF7DB43854DD1D363EB418A371ED43BA933A460B2917DEA26BF87012AAF7B195AB0B8FD490EC07235D6699814C77751D4CEE45D35DBD8B1597438545A60B7623CE491483A014FEEE65ED4FEBDF80A721F21A9D4DE075A36D58250AE2AA345A9C5F7B6CB7C99BA896DCEAAA4342B927737814> |-/o <1C60D8A8C9B7A73DEA5F658431FF26DE1C3CCABA5A5AF56EE1798CA324BEFFED162986DEB20473198E3AAB17E1F76DC8A1DBB020158974052802A30905F0338BF503D35906BB108F3CEAC35FDF3D8BC51C5542899E6D21063EDA8732DC154AFBF51B7EEDDA621E256B5E3E8A8E86389A77366F5766B3A5B4DE72C37DBEBA04E9D5CF3B75> |-/p <1C60D8A8C9B7A73DB91641F6BA5486CB0712FFF8C326A20926BA28A071CD0FFCD4BDCDE0C44AA39367FAC8C71A39B0507E6FBE92EF479F1F2157486F55AAE915EDBBFC8AB4F6ABE34EECC784D333D526F3EA5559C73D1624B2F3DCE5E44F60A831A8E502DF5DA28E74DD48A45198849C8DE213E2FE4E0A1787AE987D40470D9B397703069AE4CF0F4FA65EF586834864FB9B5616439B96E2FDF7EE91EBD164132EB5760D047D5E96F3A228E48459DCF4120D33BB6B48C8A10CD605E653E229921D2C4C571224A04CF9D3CB95F244ED16B0C299C503EB8F189CFABBE5056C928EB45A907FB0C0> |-/t <1C60D8A8C9B854D0F41C7D11C14207BE1C0BA04724483030493967288AC8D5095C0BB34E8B56A5C53BD1B7A25A11F231F6182B9300CAF4CFD46C1EFFF4B0E38766187499A1973473DBAE4D98649DB8F7DCCE25964559B9BA93E6803E419984755899DE68C87EC2F530AC81AF61BCF42839E59E8A14B5E2DDDE3A4AFB0D7D86FA4DD21DF5669B371465EBE7C64497A6C50C0C5658D7> |-systemdict /gcheck known {setglobal} if end {end} ifendYWNVGS+Times-Roman /Encoding getdup 88 /X putdup 99 /c putdup 101 /e putdup 109 /m putdup 110 /n putdup 111 /o putdup 112 /p putdup 116 /t putpop%ADOEndSubsetFont
/YWNVGS+Times-Roman*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two /.notdef /four /.notdef /six /.notdef /eight /nine 30{/.notdef}rp /X 10{/.notdef}rp /c /.notdef /e 7{/.notdef}rp /m /n /o /p 3{/.notdef}rp /t 139{/.notdef}rp]YWNVGS+Times-Roman nfYWNVGS+Times-Roman*1 [12 0 0 -12 0 0 ]msf115.306 274.099 mo(X component )[8.66602 3 5.32617 6 9.33398 6 6 6 5.32617 6 3.33398 0 ]xshYWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf15.0186 248.786 mo(0.0 )[4.99805 2.49902 4.99805 0 ]xsh30.9248 197.19 mo
35.9248 197.19 li
@
258.89 197.19 mo
263.89 197.19 li
@
YWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf15.5186 200.69 mo(0.2 )[4.99805 2.49902 4.99805 0 ]xsh30.9248 149.095 mo
35.9248 149.095 li
@
258.89 149.095 mo
263.89 149.095 li
@
YWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf14.9717 152.595 mo(0.4 )[4.99805 2.49902 4.99805 0 ]xsh30.9248 100.999 mo
35.9248 100.999 li
@
258.89 100.999 mo
263.89 100.999 li
@
YWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf16.0186 104.499 mo(0.6 )[4.99805 2.49902 4.99805 0 ]xsh30.9248 52.9023 mo
35.9248 52.9023 li
@
258.89 52.9023 mo
263.89 52.9023 li
@
YWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf16.0186 56.4023 mo(0.8 )[4.99805 2.49902 4.99805 0 ]xshYWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf15.9717 8.30664 mo(1.0 )[4.99805 2.49902 4.99805 0 ]xsh%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.systemdict beginYWNVGS+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/C <1C60D8A8C9B64EDFFB7CD25A2C740A59FDB93875AB4231E871C9753C8B6A300598898747795E8627DC8620BB80ECD900DDAE8B58DA30E2436AA16ADF42BEC594B706F998147F79C1F65A6CEE2D82088E51946E10EFCD63A7019B6D8437591296EB402980B290E76FE407FE36EDE9B3E4CE928D54B5D8DF2EE62B30B242A3EA7270B807155AA2CFE1DF6C04CEECCAB5FA78944000A4C6412A> |-/D <1C60D8A8C9B6079F62C8682D5880AD5ED13008593EB46F469C485884785466FDB873F506B8D5DAF3242B9C769F96D261CFB9D8C300BA792C494868BA7544BE97D3B0E83FF7BEA9A54452B6C1E660B26C41D6A9E2E70F755692AF9524D5448EE8D59ADBFA699A4258805AAE17C531CB6A322CF0EAFBABB64EB4F61F1F1F19C7B0A5F53BEA7B36B6CF17355AF292BB886CC0448F49C907B6E67F02C998972B27EF2603> |-/a <1C60D8A8C9B77FE2CEADADAD35C681D96377E0B82CC8ACDB5762353EDBADFFACD451A553C5C39302A9F1D177F76B983509B429688ADF52AFA30F8E4A0B23F2282503B97D206C7C183FDE8BFD6ACD2BE6A3B9069791DF8E2CF592523922EFD64768CD99A1F5F1400DB305C4171EAA77202618276E378016C7BA0833F29752C2A461C11A88BC4E527507EEDA9C848EEAD89D80551320178A864EFC8B3562DEDC4F695E8824160B87CA7F395997B47C0C71BBFE9F871E4F5046857D22F807C04061C73B2C0BBB7B44E0200581C40A3AC55C8229AC23B2FBE040B0F089F70BE38746A5E0285A22E4825D9ECD39D6C15171D3EBB391B1AC132DA188B28262B67971885F8F1CB6195A6A7B0FFC> |-/b <1C60D8A8C9B7A73DEA51CB4AB782EC4CF13FD26F41FC8CB88DC14FD82E5280D80A6DCEF24DFC67DDE70F479EF61F4A2F59FB7C44A2DA70AA9DBE3F3332B05CF7A2A04A2009B46D9C510350AE718270C9D98B76F9594F5A2CEFABA8989AB9C1A83073103E665B7D0C1FB0D95DD2CF6B3624FBE8C4DC08D6FA9DA1460775A9F8E2451D08E82D20D83F7AACFD6C43C3765095FFA99CCEBE8373741BF9BE5B927D964DEAC7210DBA744ADF394D6C616E3DDB8D63> |-/i <1C60D8A8C9B854D0DE8FF03001C7DDCDF6D3A68A6B597D794E646C678EE584A1666CB56CA9FE75811CEA2087E2C341C7E1E2BD6147E5E1B64DFF133BC2DEFF475DA598F822B2BE3A9DBFD7105A3889BD250D9F71DE0C91B5EA539C526B6489E8D9E79757A61E2352A71C3AC0EEEBBBD4B096AC9707E6604D45F8B4EB690BCE5B5F037666EE3D29DC12074786C8164E88903799783957677A476A9FAD9CB291219231A21175873BB2> |-/l <1C60D8A8C9B854D09C28E93890ED677F310D1E32AA544EA0617CF81480930FF09D96FFEC0D2D74BC923E8CC3789EA117FEE8A516539FF915E22C6A549B8D0FA459312C0739BEBB3BD2A37FAA8365907BF4200CFE09B70B39C1ECB8C3A6085FE4D765368B> |-/r <1C60D8A8C9B81F2C5DE210A78B7176966966FB4A2E70036BAA4A8956D597954FF33C419645546BDDA5A1C075630C88C9E9E0B6B2EB6B2FC3FF0331B1902616E9791F7398738E2F17D5E54890C7A065EB2198D4708DA7213806F12669F67678CAD7B30B1926E6F30FE45B0DAB7BE403E568FB7F28C7F3631BA5B608F502310C8C5FF767FCF95E7EC0C2EC9F2F173FF41F0C7459D2154243B15CA53A73779F93E107279F803A71F8179756E718854D0BA7BCB1168643F72763D9FF> |-/s <1C60D8A8C9B7361F4A471763AC73DF2CB4D0E822A2CECA1AE242CCF137FE2017E1B84759A659774165B7FAAFC754E62F16566CD871C047B4DA1FAE5370C0C235D54992A5E0FA7700C9EE743A2D940E9CA5D26B3831BD83BB30176B0537C44AA3FF8FCDF5B3ABFEF1C2B6D9ACB1822B29C0F334D4D83CA74FAA5037DE49F23F9CF057A26EA493317530A59C4D60B62C344BD8DC7AA9CDF22723A4837ACF83C7D482D9B0FF4236D5FDED500C27A8FA9429CB11EFEE5641EF6FB1753C2B2C35F423576031D731309BB9AC2BE1068E6CE69B054A642C61> |-/u <1C60D8A8C9B7A73DDDD5393BA7D7831D75F13A25B59F8CAE59E13B1DBD301256F09A2A2FA0610BB05DE2ECE6E35EA4ADC086161AFF85B0FD2437640FDD80398C4C0B32C179538489C2DFE344A56B831FF47DC8684534892DA6A169CBD1177876492AD2C2BDD7A6B08127B6A645642A5FAF8AB73C40BA1FE9FB481006D45C77AAEB57B47F60A9B165A96B82FB4F1ABC3AAEF73B36D7075B83620B1F07B444F8EF540AE2E9744CDCFFE07D> |-/v <1C60D8A8C9B7A73DD3E51A63417112150963F678A9D803948192BE528D8E711D9E618656EDA611B5D597BCC5B8609A9C6ADDC06B2170AD72ECFC92293AF359FDF93ECB8860858A6E9A2975FA616BA9B63718050623680AB7260D23F04628A3326B8682B96CEF6183F9752ADA19F4A3FAFD2A0BA557E6864474F1F2676B1CFE9980841743C9EEF2B968410F7134249BA62287CFE458EA3C5BDA5E93> |-systemdict /gcheck known {setglobal} if end {end} ifendYWNVGS+Times-Roman /Encoding getdup 67 /C putdup 68 /D putdup 97 /a putdup 98 /b putdup 105 /i putdup 108 /l putdup 114 /r putdup 115 /s putdup 117 /u putdup 118 /v putpop%ADOEndSubsetFont
/YWNVGS+Times-Roman*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two /.notdef /four /.notdef /six /.notdef /eight /nine 9{/.notdef}rp /C /D 19{/.notdef}rp /X 8{/.notdef}rp /a /b /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}rp]YWNVGS+Times-Roman nfYWNVGS+Times-Roman*1 [0 -12 -12 0 0 0 ]msf9.97168 181.468 mo(Cumulative Distribution )[-8.00391 -6 -9.33398 -6 -3.33398 -5.32617 -3.33398 -3.33398 -6 -5.32617 -3 -8.66602 -3.33398 -4.66992 -3.33398 -3.99609 -3.33398 -6 -6 -3.33398 -3.33398 -6 -6 0 ]ysh1 lw
2 lc
30.9248 245.287 mo
263.89 245.287 li
263.89 4.80664 li
30.9248 4.80664 li
30.9248 245.287 li
@
297.047 246.053 mo
297.047 5.57227 li
530.012 5.57227 li
530.012 246.053 li
297.047 246.053 li
cp
0 0 0 0 cmyk
f
297.047 246.053 mo
297.047 5.57227 li
530.012 5.57227 li
530.012 246.053 li
297.047 246.053 li
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
gsave
297.047 5.57227 mo
530.012 5.57227 li
530.012 246.053 li
297.047 246.053 li
297.047 5.57227 li
cp
clp
2 lw
302.21 246.053 mo
310.024 245.571 li
311.279 245.091 li
317.676 244.609 li
324.994 244.129 li
327.411 243.647 li
328.82 243.167 li
331.326 242.686 li
332.273 242.205 li
333.064 241.724 li
334.806 241.243 li
336.765 240.762 li
338.385 240.281 li
340.763 239.8 li
341.06 239.319 li
341.653 238.838 li
342.037 238.357 li
342.782 237.876 li
343.456 237.396 li
343.79 236.914 li
343.825 236.434 li
344.431 235.952 li
344.487 235.472 li
344.509 234.99 li
345.23 234.51 li
345.318 234.028 li
345.566 233.548 li
346.441 233.066 li
347.438 232.586 li
347.837 232.104 li
348.126 231.624 li
348.362 231.143 li
348.387 230.662 li
348.604 230.181 li
348.936 229.7 li
349.495 229.219 li
350.656 228.738 li
350.729 228.257 li
350.742 227.776 li
351.285 227.295 li
351.579 226.814 li
352.151 226.333 li
352.38 225.853 li
352.578 225.371 li
353.136 224.891 li
354.045 224.409 li
354.086 223.929 li
354.729 223.447 li
354.936 222.967 li
355.505 222.485 li
355.563 222.005 li
355.812 221.523 li
355.987 221.043 li
356.075 220.562 li
356.259 220.081 li
357.165 219.6 li
357.244 219.119 li
359.02 218.638 li
359.165 218.157 li
359.319 217.676 li
359.441 217.195 li
359.733 216.714 li
360.257 216.232 li
360.388 215.752 li
361.451 215.271 li
361.871 214.79 li
361.934 214.309 li
362.064 213.828 li
362.186 213.347 li
362.308 212.866 li
362.313 212.385 li
362.778 211.904 li
362.918 211.423 li
363.247 210.942 li
363.3 210.461 li
363.501 209.98 li
363.508 209.499 li
363.581 209.019 li
363.853 208.537 li
363.885 208.057 li
364.233 207.575 li
364.28 207.095 li
364.431 206.613 li
364.457 206.133 li
364.599 205.651 li
364.776 205.171 li
364.817 204.689 li
365.244 204.209 li
365.257 203.728 li
365.503 203.247 li
366.238 202.766 li
366.363 202.285 li
366.463 201.804 li
366.6 201.323 li
366.728 200.842 li
367.217 200.361 li
367.23 199.88 li
367.648 199.399 li
367.698 198.918 li
367.767 198.438 li
367.948 197.956 li
368.128 197.476 li
368.279 196.994 li
368.646 196.514 li
368.69 196.032 li
369.027 195.552 li
369.13 195.07 li
369.272 194.59 li
369.33 194.108 li
369.363 193.628 li
369.412 193.146 li
369.68 192.666 li
369.982 192.185 li
370.203 191.704 li
370.886 191.223 li
371.082 190.742 li
371.096 190.261 li
372.144 189.78 li
372.324 189.299 li
372.553 188.818 li
372.674 188.337 li
372.922 187.856 li
372.929 187.375 li
372.957 186.895 li
372.977 186.413 li
373.074 185.933 li
373.661 185.451 li
373.665 184.971 li
373.718 184.489 li
373.808 184.009 li
374.167 183.527 li
374.232 183.047 li
374.33 182.565 li
374.707 182.085 li
374.723 181.604 li
374.759 181.123 li
374.977 180.642 li
375.035 180.161 li
375.044 179.68 li
375.326 179.199 li
375.63 178.718 li
376.225 178.237 li
376.746 177.756 li
377 177.275 li
377.067 176.794 li
377.085 176.313 li
377.381 175.832 li
377.472 175.352 li
377.581 174.87 li
377.691 174.39 li
377.735 173.908 li
378.011 173.428 li
378.337 172.946 li
378.356 172.466 li
378.814 171.984 li
378.9 171.504 li
379.021 171.022 li
379.42 170.542 li
379.587 170.061 li
379.619 169.58 li
379.927 169.099 li
379.968 168.618 li
380.092 168.137 li
380.261 167.656 li
380.477 167.175 li
380.572 166.694 li
380.794 166.213 li
381.238 165.732 li
381.751 165.251 li
381.76 164.771 li
382.029 164.289 li
382.101 163.809 li
382.126 163.327 li
382.291 162.847 li
382.495 162.365 li
382.673 161.885 li
382.712 161.403 li
382.801 160.923 li
382.84 160.441 li
382.968 159.961 li
383.073 159.479 li
383.279 158.999 li
383.438 158.518 li
383.566 158.037 li
383.998 157.556 li
384.878 157.075 li
385.183 156.594 li
385.317 156.113 li
385.418 155.632 li
385.585 155.151 li
385.594 154.67 li
385.876 154.189 li
386.091 153.708 li
386.269 153.228 li
386.47 152.746 li
386.507 152.266 li
386.513 151.784 li
386.59 151.304 li
386.633 150.822 li
387.162 150.342 li
387.184 149.86 li
387.194 149.38 li
387.554 148.898 li
387.968 148.418 li
388.106 147.937 li
388.138 147.456 li
388.338 146.975 li
388.522 146.494 li
388.523 146.013 li
388.554 145.532 li
388.591 145.051 li
388.672 144.57 li
388.699 144.089 li
388.773 143.608 li
388.865 143.127 li
388.911 142.646 li
389.035 142.165 li
389.191 141.685 li
389.383 141.203 li
389.456 140.723 li
389.706 140.241 li
389.886 139.76 li
389.895 139.279 li
389.957 138.798 li
390.05 138.317 li
390.242 137.836 li
390.258 137.355 li
390.449 136.874 li
390.555 136.394 li
390.652 135.912 li
391.015 135.432 li
391.068 134.95 li
391.104 134.47 li
391.127 133.988 li
391.223 133.508 li
391.467 133.026 li
391.492 132.546 li
391.578 132.064 li
391.616 131.584 li
391.655 131.103 li
391.672 130.622 li
392.038 130.141 li
392.195 129.66 li
392.204 129.179 li
392.33 128.698 li
392.779 128.217 li
392.979 127.736 li
393.005 127.255 li
393.143 126.774 li
393.196 126.293 li
393.305 125.813 li
393.35 125.331 li
393.714 124.851 li
393.726 124.369 li
393.735 123.889 li
393.769 123.407 li
393.893 122.927 li
394.28 122.445 li
394.292 121.965 li
394.398 121.483 li
394.467 121.003 li
394.53 120.521 li
394.543 120.041 li
394.646 119.56 li
394.657 119.079 li
394.93 118.598 li
394.995 118.117 li
395.041 117.636 li
395.115 117.155 li
395.245 116.674 li
395.259 116.193 li
395.523 115.712 li
395.524 115.231 li
395.683 114.75 li
396.041 114.27 li
396.305 113.788 li
396.436 113.308 li
396.442 112.826 li
396.557 112.346 li
396.656 111.864 li
396.925 111.384 li
396.985 110.902 li
397.534 110.422 li
397.614 109.94 li
397.674 109.46 li
398.126 108.979 li
398.578 108.498 li
398.702 108.017 li
398.786 107.536 li
398.984 107.055 li
399.096 106.574 li
399.159 106.093 li
399.328 105.612 li
399.618 105.131 li
399.631 104.65 li
399.707 104.169 li
399.924 103.688 li
400.184 103.207 li
400.703 102.727 li
400.745 102.245 li
400.865 101.765 li
400.936 101.283 li
401.143 100.803 li
401.369 100.321 li
401.469 99.8408 li
401.591 99.3594 li
401.641 98.8789 li
401.652 98.3975 li
401.845 97.917 li
401.855 97.4355 li
401.981 96.9551 li
401.986 96.4736 li
402.036 95.9932 li
402.324 95.5117 li
402.434 95.0313 li
402.829 94.5498 li
403.116 94.0693 li
403.15 93.5879 li
403.164 93.1074 li
403.228 92.626 li
403.42 92.1455 li
403.441 91.6641 li
403.524 91.1836 li
403.585 90.7021 li
403.687 90.2217 li
403.823 89.7402 li
404 89.2598 li
404.262 88.7783 li
404.29 88.2979 li
404.348 87.8164 li
404.604 87.3359 li
404.614 86.8545 li
404.985 86.374 li
405.078 85.8926 li
405.198 85.4121 li
405.424 84.9307 li
405.66 84.4502 li
405.931 83.9688 li
406.015 83.4883 li
406.142 83.0068 li
406.182 82.5264 li
406.241 82.0449 li
406.302 81.5645 li
406.541 81.083 li
406.675 80.6025 li
406.679 80.1211 li
407.442 79.6406 li
407.739 79.1592 li
407.844 78.6787 li
407.958 78.1973 li
407.977 77.7168 li
408.044 77.2354 li
408.535 76.7549 li
408.594 76.2734 li
408.615 75.793 li
408.717 75.3115 li
408.787 74.8311 li
409.12 74.3496 li
409.13 73.8691 li
409.306 73.3877 li
409.324 72.9072 li
409.402 72.4258 li
409.427 71.9453 li
409.639 71.4639 li
409.961 70.9834 li
410.372 70.502 li
410.433 70.0215 li
410.479 69.54 li
410.728 69.0596 li
410.924 68.5781 li
410.935 68.0977 li
410.953 67.6162 li
411.027 67.1357 li
411.049 66.6543 li
411.11 66.1738 li
411.181 65.6924 li
411.318 65.2119 li
411.363 64.7305 li
411.851 64.25 li
412.078 63.7686 li
412.398 63.2881 li
412.493 62.8066 li
412.519 62.3262 li
412.649 61.8447 li
412.787 61.3643 li
412.79 60.8828 li
413.292 60.4023 li
413.357 59.9209 li
413.696 59.4395 li
413.761 58.959 li
414.173 58.4775 li
414.177 57.9971 li
414.308 57.5156 li
414.359 57.0352 li
414.545 56.5537 li
415.136 56.0732 li
415.271 55.5918 li
415.903 55.1113 li
416.079 54.6299 li
416.444 54.1494 li
416.555 53.668 li
416.712 53.1875 li
417.018 52.7061 li
418.242 52.2256 li
418.418 51.7441 li
418.47 51.2637 li
419.298 50.7822 li
419.313 50.3018 li
419.384 49.8203 li
419.53 49.3398 li
419.562 48.8584 li
419.841 48.3779 li
419.934 47.8965 li
419.98 47.416 li
420.199 46.9346 li
420.574 46.4541 li
420.646 45.9727 li
420.729 45.4922 li
420.755 45.0107 li
422.02 44.5303 li
422.223 44.0488 li
422.413 43.5684 li
422.898 43.0869 li
423.009 42.6064 li
423.045 42.125 li
423.079 41.6445 li
423.633 41.1631 li
424.225 40.6826 li
424.82 40.2012 li
425.523 39.7207 li
425.754 39.2393 li
425.774 38.7588 li
425.882 38.2773 li
425.9 37.7969 li
426.142 37.3154 li
426.257 36.835 li
426.369 36.3535 li
426.452 35.873 li
427.316 35.3916 li
427.574 34.9111 li
427.761 34.4297 li
428.336 33.9492 li
428.396 33.4678 li
428.719 32.9873 li
428.831 32.5059 li
428.893 32.0254 li
428.917 31.5439 li
428.955 31.0635 li
429.23 30.582 li
429.656 30.1016 li
429.676 29.6201 li
430.112 29.1396 li
430.17 28.6582 li
430.459 28.1777 li
431.172 27.6963 li
431.3 27.2158 li
431.599 26.7344 li
431.623 26.2539 li
431.835 25.7725 li
431.932 25.292 li
431.993 24.8105 li
432.314 24.3301 li
432.883 23.8486 li
434.271 23.3682 li
434.41 22.8867 li
434.444 22.4063 li
434.991 21.9248 li
436.123 21.4443 li
436.806 20.9629 li
438.055 20.4824 li
439.198 20.001 li
439.787 19.5205 li
440.119 19.0391 li
440.431 18.5586 li
442.831 18.0771 li
443.342 17.5967 li
443.401 17.1152 li
443.428 16.6348 li
444.018 16.1533 li
444.672 15.6729 li
444.922 15.1914 li
445.004 14.7109 li
447.037 14.2295 li
447.329 13.749 li
450.072 13.2676 li
451.243 12.7871 li
451.248 12.3057 li
451.275 11.8252 li
451.823 11.3438 li
453.658 10.8633 li
454.156 10.3818 li
454.647 9.90137 li
454.99 9.41992 li
456.336 8.93945 li
457.663 8.45801 li
463.841 7.97754 li
465.271 7.49609 li
470.279 7.01563 li
472.545 6.53418 li
474.897 6.05371 li
0 0.992157 1 0 cmyk
@
grestore
gsave
297.047 5.57227 mo
530.012 5.57227 li
530.012 246.053 li
297.047 246.053 li
297.047 5.57227 li
cp
clp
338.385 246.053 mo
338.385 5.57227 li
0 0.992157 1 0 cmyk
@
grestore
gsave
297.047 5.57227 mo
530.012 5.57227 li
530.012 246.053 li
297.047 246.053 li
297.047 5.57227 li
cp
clp
451.275 246.053 mo
451.275 5.57227 li
0 0.992157 1 0 cmyk
@
grestore
gsave
297.047 5.57227 mo
530.012 5.57227 li
530.012 246.053 li
297.047 246.053 li
297.047 5.57227 li
cp
clp
2 lw
299.334 246.053 mo
330.51 245.571 li
331.235 245.091 li
331.621 244.609 li
333.377 244.129 li
334.582 243.647 li
334.789 243.167 li
335.856 242.686 li
336.276 242.205 li
336.386 241.724 li
336.609 241.243 li
338.174 240.762 li
338.659 240.281 li
340.211 239.8 li
342.551 239.319 li
343.433 238.838 li
344.238 238.357 li
344.465 237.876 li
346.705 237.396 li
347.15 236.914 li
347.295 236.434 li
347.804 235.952 li
348.01 235.472 li
348.042 234.99 li
348.343 234.51 li
348.354 234.028 li
348.836 233.548 li
348.916 233.066 li
349.377 232.586 li
349.805 232.104 li
352.546 231.624 li
352.691 231.143 li
353.07 230.662 li
353.849 230.181 li
354.56 229.7 li
354.823 229.219 li
355.363 228.738 li
355.408 228.257 li
355.749 227.776 li
355.866 227.295 li
355.947 226.814 li
356.273 226.333 li
356.82 225.853 li
358.026 225.371 li
358.61 224.891 li
359.37 224.409 li
360.033 223.929 li
362.007 223.447 li
363.198 222.967 li
363.966 222.485 li
364.226 222.005 li
364.387 221.523 li
364.876 221.043 li
364.926 220.562 li
364.965 220.081 li
365.057 219.6 li
365.202 219.119 li
365.702 218.638 li
366.212 218.157 li
366.443 217.676 li
367.05 217.195 li
367.201 216.714 li
368.763 216.232 li
368.798 215.752 li
369.168 215.271 li
369.27 214.79 li
369.416 214.309 li
369.651 213.828 li
369.729 213.347 li
369.801 212.866 li
369.812 212.385 li
370.136 211.904 li
370.196 211.423 li
370.359 210.942 li
370.597 210.461 li
370.786 209.98 li
371.354 209.499 li
371.618 209.019 li
372.915 208.537 li
372.921 208.057 li
372.999 207.575 li
373.253 207.095 li
373.669 206.613 li
373.83 206.133 li
373.913 205.651 li
374.053 205.171 li
374.459 204.689 li
374.676 204.209 li
375.441 203.728 li
375.479 203.247 li
376.353 202.766 li
376.622 202.285 li
376.796 201.804 li
376.97 201.323 li
377.735 200.842 li
377.788 200.361 li
378.222 199.88 li
378.499 199.399 li
378.591 198.918 li
379.003 198.438 li
379.289 197.956 li
379.502 197.476 li
379.796 196.994 li
379.816 196.514 li
380.081 196.032 li
380.124 195.552 li
380.584 195.07 li
380.678 194.59 li
380.794 194.108 li
381.13 193.628 li
381.431 193.146 li
382.328 192.666 li
382.625 192.185 li
382.804 191.704 li
383.408 191.223 li
383.409 190.742 li
383.43 190.261 li
383.452 189.78 li
383.598 189.299 li
383.736 188.818 li
383.765 188.337 li
383.979 187.856 li
384.036 187.375 li
384.045 186.895 li
384.244 186.413 li
384.451 185.933 li
384.488 185.451 li
384.753 184.971 li
385.729 184.489 li
385.748 184.009 li
386.197 183.527 li
386.903 183.047 li
387.037 182.565 li
387.151 182.085 li
387.213 181.604 li
387.267 181.123 li
387.785 180.642 li
387.905 180.161 li
388.001 179.68 li
388.128 179.199 li
388.354 178.718 li
388.59 178.237 li
388.605 177.756 li
388.611 177.275 li
388.618 176.794 li
388.918 176.313 li
389.213 175.832 li
389.43 175.352 li
389.608 174.87 li
389.719 174.39 li
389.865 173.908 li
389.906 173.428 li
389.931 172.946 li
390.038 172.466 li
390.229 171.984 li
390.822 171.504 li
390.955 171.022 li
391.007 170.542 li
391.132 170.061 li
391.19 169.58 li
392.234 169.099 li
392.843 168.618 li
393.059 168.137 li
393.224 167.656 li
393.463 167.175 li
393.585 166.694 li
393.824 166.213 li
393.827 165.732 li
393.85 165.251 li
394.107 164.771 li
394.272 164.289 li
394.385 163.809 li
394.589 163.327 li
394.803 162.847 li
394.893 162.365 li
395.307 161.885 li
395.338 161.403 li
395.596 160.923 li
395.621 160.441 li
395.7 159.961 li
395.774 159.479 li
396.747 158.999 li
397.051 158.518 li
397.058 158.037 li
397.088 157.556 li
397.204 157.075 li
397.485 156.594 li
397.492 156.113 li
397.602 155.632 li
397.696 155.151 li
397.733 154.67 li
397.889 154.189 li
398.04 153.708 li
398.344 153.228 li
398.72 152.746 li
398.826 152.266 li
398.876 151.784 li
399.111 151.304 li
399.211 150.822 li
399.733 150.342 li
400.133 149.86 li
400.284 149.38 li
400.736 148.898 li
400.832 148.418 li
401.047 147.937 li
401.119 147.456 li
401.708 146.975 li
401.71 146.494 li
401.834 146.013 li
401.974 145.532 li
402.277 145.051 li
402.355 144.57 li
402.422 144.089 li
402.563 143.608 li
402.882 143.127 li
402.888 142.646 li
402.929 142.165 li
402.975 141.685 li
402.996 141.203 li
403.062 140.723 li
403.08 140.241 li
403.383 139.76 li
403.421 139.279 li
403.759 138.798 li
403.87 138.317 li
404.327 137.836 li
404.638 137.355 li
404.839 136.874 li
405.057 136.394 li
405.111 135.912 li
405.206 135.432 li
405.341 134.95 li
405.495 134.47 li
405.528 133.988 li
405.567 133.508 li
405.576 133.026 li
405.849 132.546 li
405.867 132.064 li
405.87 131.584 li
406.021 131.103 li
406.396 130.622 li
406.438 130.141 li
406.509 129.66 li
407.019 129.179 li
407.409 128.698 li
407.582 128.217 li
407.768 127.736 li
408.232 127.255 li
408.469 126.774 li
408.554 126.293 li
408.617 125.813 li
408.644 125.331 li
408.832 124.851 li
408.85 124.369 li
408.989 123.889 li
409.366 123.407 li
409.442 122.927 li
409.623 122.445 li
409.702 121.965 li
409.956 121.483 li
410.166 121.003 li
410.26 120.521 li
410.681 120.041 li
410.881 119.56 li
410.895 119.079 li
411.26 118.598 li
411.569 118.117 li
411.612 117.636 li
411.646 117.155 li
411.808 116.674 li
411.823 116.193 li
411.892 115.712 li
411.999 115.231 li
412.102 114.75 li
412.17 114.27 li
412.233 113.788 li
412.583 113.308 li
412.77 112.826 li
413.108 112.346 li
413.154 111.864 li
413.244 111.384 li
413.401 110.902 li
413.665 110.422 li
413.926 109.94 li
414.418 109.46 li
414.494 108.979 li
414.734 108.498 li
414.847 108.017 li
414.871 107.536 li
414.93 107.055 li
415.045 106.574 li
415.085 106.093 li
415.237 105.612 li
415.344 105.131 li
415.408 104.65 li
415.439 104.169 li
415.763 103.688 li
415.984 103.207 li
415.993 102.727 li
416.179 102.245 li
416.214 101.765 li
416.439 101.283 li
416.563 100.803 li
416.663 100.321 li
416.886 99.8408 li
417.149 99.3594 li
417.266 98.8789 li
417.496 98.3975 li
417.586 97.917 li
417.633 97.4355 li
417.848 96.9551 li
417.975 96.4736 li
418.074 95.9932 li
418.129 95.5117 li
418.5 95.0313 li
418.706 94.5498 li
418.729 94.0693 li
418.811 93.5879 li
420.695 93.1074 li
420.965 92.626 li
421.518 92.1455 li
421.672 91.6641 li
421.813 91.1836 li
422.183 90.7021 li
422.279 90.2217 li
422.391 89.7402 li
422.708 89.2598 li
422.838 88.7783 li
423.013 88.2979 li
423.028 87.8164 li
423.171 87.3359 li
423.612 86.8545 li
424.625 86.374 li
424.684 85.8926 li
424.729 85.4121 li
425.045 84.9307 li
425.567 84.4502 li
425.587 83.9688 li
425.647 83.4883 li
425.819 83.0068 li
426.082 82.5264 li
426.426 82.0449 li
426.622 81.5645 li
426.881 81.083 li
427.124 80.6025 li
427.729 80.1211 li
428.04 79.6406 li
428.17 79.1592 li
428.218 78.6787 li
428.383 78.1973 li
428.42 77.7168 li
428.459 77.2354 li
428.504 76.7549 li
428.748 76.2734 li
428.907 75.793 li
429.063 75.3115 li
429.33 74.8311 li
429.429 74.3496 li
429.472 73.8691 li
429.746 73.3877 li
429.826 72.9072 li
429.838 72.4258 li
429.868 71.9453 li
429.879 71.4639 li
429.932 70.9834 li
430.524 70.502 li
430.55 70.0215 li
431.674 69.54 li
432.07 69.0596 li
432.976 68.5781 li
433.412 68.0977 li
433.438 67.6162 li
433.44 67.1357 li
433.549 66.6543 li
433.665 66.1738 li
433.718 65.6924 li
433.98 65.2119 li
433.986 64.7305 li
434.121 64.25 li
434.625 63.7686 li
434.939 63.2881 li
435.278 62.8066 li
435.998 62.3262 li
436.042 61.8447 li
436.15 61.3643 li
436.159 60.8828 li
436.229 60.4023 li
436.259 59.9209 li
436.346 59.4395 li
436.45 58.959 li
436.456 58.4775 li
437.041 57.9971 li
437.167 57.5156 li
437.475 57.0352 li
437.532 56.5537 li
437.664 56.0732 li
438.563 55.5918 li
438.796 55.1113 li
438.886 54.6299 li
439.08 54.1494 li
439.182 53.668 li
439.491 53.1875 li
439.543 52.7061 li
440.056 52.2256 li
440.231 51.7441 li
440.242 51.2637 li
440.278 50.7822 li
440.325 50.3018 li
440.382 49.8203 li
440.521 49.3398 li
441.036 48.8584 li
441.096 48.3779 li
441.715 47.8965 li
441.726 47.416 li
441.956 46.9346 li
442.8 46.4541 li
442.991 45.9727 li
443.198 45.4922 li
443.359 45.0107 li
443.423 44.5303 li
443.845 44.0488 li
443.907 43.5684 li
444.128 43.0869 li
444.181 42.6064 li
444.381 42.125 li
444.457 41.6445 li
444.493 41.1631 li
444.511 40.6826 li
444.535 40.2012 li
444.686 39.7207 li
444.7 39.2393 li
445.017 38.7588 li
445.085 38.2773 li
445.185 37.7969 li
445.655 37.3154 li
445.816 36.835 li
446.422 36.3535 li
446.425 35.873 li
447.095 35.3916 li
447.28 34.9111 li
447.539 34.4297 li
447.82 33.9492 li
448.055 33.4678 li
448.746 32.9873 li
448.848 32.5059 li
448.923 32.0254 li
449.286 31.5439 li
449.338 31.0635 li
449.661 30.582 li
450.079 30.1016 li
450.191 29.6201 li
450.245 29.1396 li
450.876 28.6582 li
450.974 28.1777 li
451.24 27.6963 li
451.414 27.2158 li
452.421 26.7344 li
452.925 26.2539 li
453.525 25.7725 li
453.726 25.292 li
454.138 24.8105 li
454.274 24.3301 li
454.469 23.8486 li
455.292 23.3682 li
455.361 22.8867 li
455.583 22.4063 li
456.27 21.9248 li
456.413 21.4443 li
457.52 20.9629 li
457.538 20.4824 li
457.859 20.001 li
457.887 19.5205 li
459.573 19.0391 li
459.636 18.5586 li
460.535 18.0771 li
460.712 17.5967 li
461.394 17.1152 li
461.536 16.6348 li
462.166 16.1533 li
462.224 15.6729 li
462.513 15.1914 li
462.726 14.7109 li
464.521 14.2295 li
465.423 13.749 li
467.813 13.2676 li
467.944 12.7871 li
469.665 12.3057 li
470.713 11.8252 li
470.832 11.3438 li
470.936 10.8633 li
471.373 10.3818 li
471.732 9.90137 li
477.212 9.41992 li
479.314 8.93945 li
483.833 8.45801 li
484.31 7.97754 li
486.42 7.49609 li
486.841 7.01563 li
498.152 6.53418 li
502.751 6.05371 li
0.882353 0.768627 0 0 cmyk
@
grestore
gsave
297.047 5.57227 mo
530.012 5.57227 li
530.012 246.053 li
297.047 246.053 li
297.047 5.57227 li
cp
clp
0 lc
[6 6 ] 0 dsh
338.659 246.053 mo
338.659 5.57227 li
0.882353 0.768627 0 0 cmyk
@
grestore
gsave
297.047 5.57227 mo
530.012 5.57227 li
530.012 246.053 li
297.047 246.053 li
297.047 5.57227 li
cp
clp
0 lc
[6 6 ] 0 dsh
470.713 246.053 mo
470.713 5.57227 li
0.882353 0.768627 0 0 cmyk
@
grestore
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.systemdict beginYWNVGS+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/hyphen <1C60D8A8C9B81F2C7FA8F2666424EE62590A3687533A> |-/five <1C60D8A8C9B7A73D986C0D7DE9D329253DCB6E971CF9F86B9AEBF9128F879E3BA076A7524F8AC6EF0948A0BD36A1BBAD3176809EA5D8C10BC04F27D1FCF8D9BA3577509C082FF1EE49DF22B08F8B21F3A6C3932A3BC82C6C594431B4032E2BEF80E15787B3E427A047FD8FD191291F42BAC74588B21DCB1EB3232C29BA67B72B9A00CCBC571F0227C6EF50964CF91F1B0EC573A04AE3E4DF9447B77BD2A0A959F534BEC79AECEF51C27F8D677FD06B99742B747A695088E88EBCC4A6BCCC7402ABFDFE9926161D96> |-systemdict /gcheck known {setglobal} if end {end} ifendYWNVGS+Times-Roman /Encoding getdup 45 /hyphen putdup 53 /five putpop%ADOEndSubsetFont
/YWNVGS+Times-Roman*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /.notdef /zero /one /two /.notdef /four /five /six /.notdef /eight /nine 9{/.notdef}rp /C /D 19{/.notdef}rp /X 8{/.notdef}rp /a /b /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}rp]YWNVGS+Times-Roman nfYWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf287.031 256.333 mo(-0.15)[3.32861 4.99805 2.49902 4.99805 0 ]xsh0.5 lw
0 lc
330.327 246.053 mo
330.327 241.053 li
@
330.327 10.5723 mo
330.327 5.57227 li
@
YWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf319.851 256.052 mo(-0.10)[3.32861 4.99805 2.49902 4.99805 0 ]xsh363.607 246.053 mo
363.607 241.053 li
@
363.607 10.5723 mo
363.607 5.57227 li
@
YWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf353.592 256.333 mo(-0.05)[3.32861 4.99805 2.49902 4.99805 0 ]xsh396.889 246.053 mo
396.889 241.053 li
@
396.889 10.5723 mo
396.889 5.57227 li
@
YWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf387.936 256.052 mo(0.00)[4.99805 2.49902 4.99805 0 ]xsh430.169 246.053 mo
430.169 241.053 li
@
430.169 10.5723 mo
430.169 5.57227 li
@
YWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf421.677 256.333 mo(0.05)[4.99805 2.49902 4.99805 0 ]xsh463.45 246.053 mo
463.45 241.053 li
@
463.45 10.5723 mo
463.45 5.57227 li
@
YWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf454.497 256.052 mo(0.10)[4.99805 2.49902 4.99805 0 ]xsh496.73 246.053 mo
496.73 241.053 li
@
496.73 10.5723 mo
496.73 5.57227 li
@
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.systemdict beginYWNVGS+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/Y <1C60D8A8C9B6079F346A1EE4160C0285D8EA003C81C7CFD1FC6BCA586BFD055D940855ACD9B355FEF776FCC1D6883E16979BF2894F66841CA77359BF5B2494502A30DCB01BC1E19CD5597D5DC60A3C32240C7F383D0F046E1DDEC1D4E21EC6C720779253465AD76CB86981A203D42D1EA039100E6B1DB3114294BAAADA7947777EFE5924E267C98659186FC0355E7F3C3B49C8CC4694245C372447FCC8C241DF390EE3954749B1903277> |-systemdict /gcheck known {setglobal} if end {end} ifendYWNVGS+Times-Roman /Encoding getdup 89 /Y putpop%ADOEndSubsetFont
/YWNVGS+Times-Roman*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /.notdef /zero /one /two /.notdef /four /five /six /.notdef /eight /nine 9{/.notdef}rp /C /D 19{/.notdef}rp /X /Y 7{/.notdef}rp /a /b /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}rp]YWNVGS+Times-Roman nfYWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf488.239 256.333 mo(0.15)[4.99805 2.49902 4.99805 0 ]xsh521.059 256.052 mo(0.20)[4.99805 2.49902 4.99805 0 ]xshYWNVGS+Times-Roman*1 [12 0 0 -12 0 0 ]msf381.928 273.333 mo(Y component)[8.22656 3 5.32617 6 9.33398 6 6 6 5.32617 6 0 ]xshYWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf281.141 249.552 mo(0.0)[4.99805 2.49902 0 ]xsh297.047 197.956 mo
302.047 197.956 li
@
525.012 197.956 mo
530.012 197.956 li
@
YWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf281.641 201.456 mo(0.2)[4.99805 2.49902 0 ]xsh297.047 149.86 mo
302.047 149.86 li
@
525.012 149.86 mo
530.012 149.86 li
@
YWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf281.094 153.36 mo(0.4)[4.99805 2.49902 0 ]xsh297.047 101.765 mo
302.047 101.765 li
@
525.012 101.765 mo
530.012 101.765 li
@
YWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf282.141 105.265 mo(0.6)[4.99805 2.49902 0 ]xsh297.047 53.668 mo
302.047 53.668 li
@
525.012 53.668 mo
530.012 53.668 li
@
YWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf282.141 57.168 mo(0.8)[4.99805 2.49902 0 ]xsh282.094 9.07227 mo(1.0)[4.99805 2.49902 0 ]xsh1 lw
2 lc
297.047 246.053 mo
530.012 246.053 li
530.012 5.57227 li
297.047 5.57227 li
297.047 246.053 li
@
559.769 246.096 mo
559.769 5.61523 li
792.733 5.61523 li
792.733 246.096 li
559.769 246.096 li
cp
0 0 0 0 cmyk
f
559.769 246.096 mo
559.769 5.61523 li
792.733 5.61523 li
792.733 246.096 li
559.769 246.096 li
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
gsave
559.769 5.61523 mo
792.733 5.61523 li
792.733 246.096 li
559.769 246.096 li
559.769 5.61523 li
cp
clp
2 lw
584.979 246.096 mo
594.47 245.614 li
598.793 245.134 li
598.821 244.652 li
599.01 244.172 li
600.932 243.69 li
601.145 243.21 li
601.525 242.729 li
602.505 242.248 li
603.745 241.767 li
607.051 241.286 li
607.419 240.805 li
611.77 240.324 li
612.78 239.843 li
613.418 239.362 li
613.478 238.881 li
615.458 238.4 li
615.689 237.919 li
618.736 237.438 li
619.296 236.957 li
619.373 236.477 li
619.893 235.995 li
621.147 235.515 li
621.538 235.033 li
621.805 234.553 li
622.757 234.071 li
622.967 233.591 li
623.291 233.109 li
623.869 232.629 li
623.961 232.147 li
625.411 231.667 li
625.814 231.186 li
626.28 230.705 li
626.377 230.224 li
627.427 229.743 li
628.292 229.262 li
628.843 228.781 li
629.07 228.3 li
629.16 227.819 li
629.496 227.338 li
630.574 226.857 li
630.72 226.376 li
630.771 225.896 li
631.456 225.414 li
632.221 224.934 li
632.395 224.452 li
632.561 223.972 li
632.73 223.49 li
632.804 223.01 li
632.986 222.528 li
633.695 222.048 li
634.16 221.566 li
634.174 221.086 li
634.431 220.604 li
634.556 220.124 li
635.259 219.643 li
636.107 219.162 li
636.395 218.681 li
636.626 218.2 li
636.937 217.719 li
637.089 217.238 li
637.145 216.757 li
637.395 216.275 li
637.656 215.795 li
637.674 215.313 li
638.104 214.833 li
638.378 214.352 li
638.399 213.871 li
638.586 213.39 li
638.599 212.909 li
638.7 212.428 li
638.908 211.947 li
639.331 211.466 li
639.444 210.985 li
639.676 210.504 li
640.143 210.023 li
640.202 209.542 li
640.232 209.062 li
640.354 208.58 li
640.479 208.1 li
640.563 207.618 li
641.39 207.138 li
641.557 206.656 li
641.952 206.176 li
642.281 205.694 li
642.324 205.214 li
642.394 204.732 li
642.473 204.252 li
642.633 203.771 li
643.134 203.29 li
643.153 202.809 li
643.382 202.328 li
644.066 201.847 li
644.274 201.366 li
644.592 200.885 li
644.849 200.404 li
645.095 199.923 li
645.104 199.442 li
645.15 198.961 li
645.466 198.48 li
645.686 197.999 li
645.761 197.519 li
645.902 197.037 li
646.239 196.557 li
646.314 196.075 li
646.346 195.595 li
646.563 195.113 li
646.979 194.633 li
646.981 194.151 li
646.994 193.671 li
647.034 193.189 li
647.192 192.709 li
647.305 192.228 li
647.446 191.747 li
647.804 191.266 li
648.739 190.785 li
648.805 190.304 li
649.094 189.823 li
649.443 189.342 li
649.605 188.861 li
649.697 188.38 li
649.923 187.899 li
650.12 187.418 li
650.189 186.938 li
650.217 186.456 li
650.34 185.976 li
650.441 185.494 li
650.798 185.014 li
651.059 184.532 li
651.098 184.052 li
651.276 183.57 li
651.28 183.09 li
651.475 182.608 li
651.674 182.128 li
651.996 181.646 li
652.226 181.166 li
652.344 180.685 li
652.586 180.204 li
652.774 179.723 li
653.126 179.242 li
653.157 178.761 li
653.216 178.28 li
653.311 177.799 li
653.438 177.318 li
653.446 176.837 li
653.508 176.356 li
653.511 175.875 li
654.177 175.395 li
654.51 174.913 li
654.736 174.433 li
654.907 173.951 li
654.953 173.471 li
655.061 172.989 li
655.118 172.509 li
655.267 172.027 li
655.361 171.547 li
655.714 171.065 li
655.964 170.585 li
656.022 170.104 li
656.306 169.623 li
656.595 169.142 li
656.596 168.661 li
656.608 168.18 li
656.72 167.699 li
656.807 167.218 li
657.149 166.737 li
657.208 166.256 li
657.22 165.775 li
657.239 165.294 li
657.569 164.813 li
657.678 164.332 li
657.902 163.852 li
658.025 163.37 li
658.212 162.89 li
658.227 162.408 li
658.369 161.928 li
658.371 161.446 li
658.688 160.966 li
658.822 160.484 li
658.968 160.004 li
659.109 159.522 li
659.454 159.042 li
659.763 158.561 li
659.843 158.08 li
659.849 157.599 li
659.938 157.118 li
660.016 156.637 li
660.055 156.156 li
660.134 155.675 li
660.159 155.194 li
660.33 154.713 li
660.448 154.232 li
660.465 153.751 li
660.76 153.271 li
660.79 152.789 li
660.896 152.309 li
660.947 151.827 li
661.08 151.347 li
661.274 150.865 li
661.779 150.385 li
662.113 149.903 li
662.328 149.423 li
662.349 148.941 li
662.707 148.461 li
662.784 147.979 li
663.229 147.499 li
663.257 147.018 li
663.284 146.537 li
663.299 146.056 li
663.412 145.575 li
663.769 145.094 li
663.881 144.613 li
664.069 144.132 li
664.093 143.651 li
664.2 143.17 li
664.314 142.689 li
664.317 142.208 li
664.317 141.728 li
664.332 141.246 li
664.459 140.766 li
664.51 140.284 li
664.659 139.803 li
664.67 139.322 li
665.087 138.841 li
665.44 138.36 li
665.451 137.879 li
665.521 137.398 li
665.593 136.917 li
665.682 136.437 li
665.725 135.955 li
666.312 135.475 li
666.411 134.993 li
666.423 134.513 li
666.647 134.031 li
666.773 133.551 li
666.815 133.069 li
666.879 132.589 li
666.947 132.107 li
667.181 131.627 li
667.36 131.146 li
667.383 130.665 li
667.437 130.184 li
667.472 129.703 li
667.484 129.222 li
667.978 128.741 li
668.011 128.26 li
668.318 127.779 li
668.448 127.298 li
668.723 126.817 li
669.001 126.336 li
669.062 125.855 li
669.226 125.374 li
669.466 124.894 li
669.706 124.412 li
669.713 123.932 li
669.803 123.45 li
669.963 122.97 li
670.006 122.488 li
670.209 122.008 li
670.247 121.526 li
670.416 121.046 li
670.491 120.564 li
670.714 120.084 li
670.901 119.603 li
671.273 119.122 li
671.529 118.641 li
671.56 118.16 li
672.137 117.679 li
672.149 117.198 li
672.181 116.717 li
672.463 116.236 li
672.645 115.755 li
672.755 115.274 li
672.965 114.793 li
673.004 114.313 li
673.013 113.831 li
673.043 113.351 li
673.349 112.869 li
673.671 112.389 li
673.849 111.907 li
674.083 111.427 li
674.144 110.945 li
674.189 110.465 li
674.318 109.983 li
674.405 109.503 li
674.7 109.021 li
674.732 108.541 li
674.956 108.06 li
674.994 107.579 li
674.995 107.098 li
675.283 106.617 li
675.289 106.136 li
675.544 105.655 li
675.697 105.174 li
675.785 104.693 li
675.854 104.212 li
676.146 103.731 li
676.24 103.25 li
676.489 102.77 li
676.544 102.288 li
676.549 101.808 li
676.554 101.326 li
676.608 100.846 li
676.731 100.364 li
676.877 99.8838 li
677.053 99.4023 li
677.062 98.9219 li
677.254 98.4404 li
677.485 97.96 li
677.573 97.4785 li
677.845 96.998 li
677.909 96.5166 li
678.303 96.0361 li
678.304 95.5547 li
678.705 95.0742 li
678.832 94.5928 li
678.866 94.1123 li
679.059 93.6309 li
679.175 93.1504 li
679.259 92.6689 li
679.38 92.1885 li
679.439 91.707 li
679.959 91.2266 li
680.107 90.7451 li
680.134 90.2646 li
680.313 89.7832 li
680.396 89.3027 li
680.425 88.8213 li
680.801 88.3408 li
681.275 87.8594 li
681.364 87.3789 li
681.521 86.8975 li
681.543 86.417 li
681.791 85.9355 li
681.797 85.4551 li
681.818 84.9736 li
681.936 84.4932 li
682.085 84.0117 li
682.154 83.5313 li
682.208 83.0498 li
682.287 82.5693 li
682.652 82.0879 li
682.914 81.6074 li
683.021 81.126 li
683.084 80.6455 li
683.127 80.1641 li
683.427 79.6836 li
683.768 79.2021 li
683.866 78.7217 li
684.289 78.2402 li
684.572 77.7598 li
684.648 77.2783 li
684.657 76.7979 li
684.712 76.3164 li
684.804 75.8359 li
684.901 75.3545 li
684.912 74.874 li
685.163 74.3926 li
685.258 73.9121 li
685.394 73.4307 li
685.498 72.9502 li
685.504 72.4688 li
685.576 71.9883 li
685.721 71.5068 li
686.081 71.0264 li
686.479 70.5449 li
686.492 70.0645 li
686.729 69.583 li
686.781 69.1025 li
687.314 68.6211 li
687.369 68.1406 li
687.448 67.6592 li
687.816 67.1787 li
687.968 66.6973 li
688.041 66.2168 li
688.074 65.7354 li
688.189 65.2549 li
688.591 64.7734 li
688.618 64.293 li
688.887 63.8115 li
688.957 63.3311 li
689.198 62.8496 li
689.839 62.3691 li
689.85 61.8877 li
690.021 61.4072 li
690.281 60.9258 li
690.765 60.4453 li
690.809 59.9639 li
690.846 59.4824 li
690.975 59.002 li
691.164 58.5205 li
691.312 58.04 li
691.526 57.5586 li
691.568 57.0781 li
691.669 56.5967 li
691.801 56.1162 li
691.92 55.6348 li
692.105 55.1543 li
692.199 54.6729 li
692.239 54.1924 li
692.24 53.7109 li
692.322 53.2305 li
692.427 52.749 li
692.66 52.2686 li
692.665 51.7871 li
692.753 51.3066 li
693.076 50.8252 li
693.511 50.3447 li
693.631 49.8633 li
693.988 49.3828 li
694 48.9014 li
694.048 48.4209 li
694.301 47.9395 li
694.346 47.459 li
694.69 46.9775 li
694.755 46.4971 li
694.949 46.0156 li
695.343 45.5352 li
695.369 45.0537 li
695.437 44.5732 li
695.438 44.0918 li
695.577 43.6113 li
695.736 43.1299 li
695.738 42.6494 li
696.034 42.168 li
696.158 41.6875 li
696.206 41.2061 li
696.214 40.7256 li
696.242 40.2441 li
696.522 39.7637 li
696.754 39.2822 li
696.882 38.8018 li
697.875 38.3203 li
698.27 37.8398 li
698.822 37.3584 li
699.284 36.8779 li
699.351 36.3965 li
699.392 35.916 li
700.272 35.4346 li
700.284 34.9541 li
701.186 34.4727 li
701.561 33.9922 li
702.227 33.5107 li
702.538 33.0303 li
703.135 32.5488 li
703.235 32.0684 li
703.298 31.5869 li
703.802 31.1064 li
704.102 30.625 li
704.717 30.1445 li
705.342 29.6631 li
705.454 29.1826 li
705.632 28.7012 li
707.021 28.2207 li
707.451 27.7393 li
707.532 27.2588 li
708.765 26.7773 li
709.221 26.2969 li
709.361 25.8154 li
709.679 25.335 li
709.759 24.8535 li
710.476 24.373 li
711.232 23.8916 li
711.647 23.4111 li
711.771 22.9297 li
712.349 22.4492 li
712.961 21.9678 li
713.848 21.4873 li
713.985 21.0059 li
714.703 20.5254 li
715.415 20.0439 li
715.425 19.5635 li
715.539 19.082 li
716.925 18.6016 li
717.102 18.1201 li
717.49 17.6396 li
718.375 17.1582 li
720.531 16.6777 li
720.608 16.1963 li
720.645 15.7158 li
721.138 15.2344 li
721.309 14.7539 li
721.596 14.2725 li
721.864 13.792 li
722.387 13.3105 li
723.695 12.8301 li
724.081 12.3486 li
724.862 11.8682 li
725.238 11.3867 li
725.482 10.9063 li
727.79 10.4248 li
730.132 9.94434 li
732.414 9.46289 li
734.458 8.98242 li
735.767 8.50098 li
737.004 8.02051 li
738.175 7.53906 li
741.593 7.05859 li
742.278 6.57715 li
767.49 6.09668 li
0 0.992157 1 0 cmyk
@
grestore
gsave
559.769 5.61523 mo
792.733 5.61523 li
792.733 246.096 li
559.769 246.096 li
559.769 5.61523 li
cp
clp
611.77 246.096 mo
611.77 5.61523 li
0 0.992157 1 0 cmyk
@
grestore
gsave
559.769 5.61523 mo
792.733 5.61523 li
792.733 246.096 li
559.769 246.096 li
559.769 5.61523 li
cp
clp
724.862 246.096 mo
724.862 5.61523 li
0 0.992157 1 0 cmyk
@
grestore
gsave
559.769 5.61523 mo
792.733 5.61523 li
792.733 246.096 li
559.769 246.096 li
559.769 5.61523 li
cp
clp
2 lw
641.575 246.096 mo
653.341 245.614 li
661.999 245.134 li
665.006 244.652 li
666.505 244.172 li
669.81 243.69 li
675.234 243.21 li
676.931 242.729 li
678.181 242.248 li
678.36 241.767 li
679.215 241.286 li
680.06 240.805 li
680.175 240.324 li
681.468 239.843 li
681.623 239.362 li
681.788 238.881 li
683.507 238.4 li
683.772 237.919 li
684.909 237.438 li
685.422 236.957 li
685.438 236.477 li
685.593 235.995 li
686.14 235.515 li
687.755 235.033 li
688.475 234.553 li
688.962 234.071 li
689.068 233.591 li
689.126 233.109 li
689.179 232.629 li
689.686 232.147 li
689.96 231.667 li
690.166 231.186 li
690.294 230.705 li
690.654 230.224 li
690.936 229.743 li
691.069 229.262 li
691.193 228.781 li
691.276 228.3 li
691.305 227.819 li
691.689 227.338 li
691.763 226.857 li
692.127 226.376 li
692.161 225.896 li
692.298 225.414 li
692.347 224.934 li
692.819 224.452 li
693.277 223.972 li
693.406 223.49 li
693.618 223.01 li
694.092 222.528 li
694.21 222.048 li
694.412 221.566 li
694.563 221.086 li
695.061 220.604 li
695.955 220.124 li
696.047 219.643 li
696.327 219.162 li
696.438 218.681 li
696.49 218.2 li
696.661 217.719 li
696.911 217.238 li
697.07 216.757 li
697.081 216.275 li
697.082 215.795 li
697.359 215.313 li
697.377 214.833 li
697.545 214.352 li
697.774 213.871 li
697.866 213.39 li
697.877 212.909 li
698.102 212.428 li
698.184 211.947 li
699.049 211.466 li
699.188 210.985 li
699.383 210.504 li
699.523 210.023 li
699.602 209.542 li
699.943 209.062 li
700.342 208.58 li
700.449 208.1 li
700.483 207.618 li
700.506 207.138 li
700.54 206.656 li
700.74 206.176 li
700.792 205.694 li
700.797 205.214 li
700.831 204.732 li
700.844 204.252 li
701.013 203.771 li
701.078 203.29 li
701.224 202.809 li
701.264 202.328 li
701.655 201.847 li
701.736 201.366 li
701.824 200.885 li
701.946 200.404 li
702.026 199.923 li
702.131 199.442 li
702.224 198.961 li
702.289 198.48 li
702.359 197.999 li
702.492 197.519 li
702.69 197.037 li
702.733 196.557 li
702.743 196.075 li
702.821 195.595 li
702.825 195.113 li
703.396 194.633 li
703.704 194.151 li
703.76 193.671 li
703.762 193.189 li
703.831 192.709 li
703.863 192.228 li
703.906 191.747 li
704.15 191.266 li
704.176 190.785 li
704.575 190.304 li
704.589 189.823 li
704.604 189.342 li
704.704 188.861 li
704.976 188.38 li
705.173 187.899 li
705.234 187.418 li
705.401 186.938 li
705.736 186.456 li
705.813 185.976 li
706.048 185.494 li
706.166 185.014 li
706.352 184.532 li
706.594 184.052 li
706.629 183.57 li
706.827 183.09 li
706.83 182.608 li
706.837 182.128 li
707.084 181.646 li
707.623 181.166 li
707.705 180.685 li
707.893 180.204 li
708.056 179.723 li
708.278 179.242 li
708.337 178.761 li
708.342 178.28 li
709.026 177.799 li
709.073 177.318 li
709.338 176.837 li
709.499 176.356 li
709.699 175.875 li
709.747 175.395 li
709.765 174.913 li
709.804 174.433 li
710.343 173.951 li
710.482 173.471 li
710.633 172.989 li
710.707 172.509 li
710.812 172.027 li
710.94 171.547 li
711.027 171.065 li
711.058 170.585 li
711.308 170.104 li
711.426 169.623 li
711.603 169.142 li
711.674 168.661 li
711.765 168.18 li
711.896 167.699 li
712.189 167.218 li
712.271 166.737 li
712.322 166.256 li
712.418 165.775 li
712.468 165.294 li
712.612 164.813 li
712.627 164.332 li
712.652 163.852 li
712.901 163.37 li
713.186 162.89 li
713.289 162.408 li
713.392 161.928 li
713.428 161.446 li
713.804 160.966 li
713.909 160.484 li
713.973 160.004 li
714.039 159.522 li
714.104 159.042 li
714.137 158.561 li
714.266 158.08 li
714.329 157.599 li
714.394 157.118 li
714.437 156.637 li
714.582 156.156 li
714.762 155.675 li
714.938 155.194 li
714.972 154.713 li
715.034 154.232 li
715.185 153.751 li
715.233 153.271 li
715.38 152.789 li
715.46 152.309 li
715.494 151.827 li
715.541 151.347 li
715.684 150.865 li
715.891 150.385 li
716.15 149.903 li
716.203 149.423 li
716.286 148.941 li
716.431 148.461 li
716.482 147.979 li
716.499 147.499 li
716.513 147.018 li
716.67 146.537 li
717.18 146.056 li
717.192 145.575 li
717.454 145.094 li
717.55 144.613 li
717.568 144.132 li
717.652 143.651 li
717.776 143.17 li
717.904 142.689 li
718.029 142.208 li
718.11 141.728 li
718.267 141.246 li
718.268 140.766 li
718.373 140.284 li
718.748 139.803 li
718.982 139.322 li
719.102 138.841 li
719.117 138.36 li
719.147 137.879 li
719.192 137.398 li
719.256 136.917 li
719.26 136.437 li
719.446 135.955 li
719.47 135.475 li
719.48 134.993 li
719.494 134.513 li
719.584 134.031 li
719.596 133.551 li
719.638 133.069 li
719.694 132.589 li
719.738 132.107 li
719.821 131.627 li
719.825 131.146 li
719.87 130.665 li
719.907 130.184 li
719.916 129.703 li
720.118 129.222 li
720.217 128.741 li
720.381 128.26 li
720.578 127.779 li
721.183 127.298 li
721.203 126.817 li
721.229 126.336 li
721.365 125.855 li
721.41 125.374 li
721.501 124.894 li
721.546 124.412 li
721.866 123.932 li
722.018 123.45 li
722.026 122.97 li
722.045 122.488 li
722.13 122.008 li
722.189 121.526 li
722.303 121.046 li
722.349 120.564 li
722.599 120.084 li
722.608 119.603 li
722.712 119.122 li
722.725 118.641 li
722.756 118.16 li
722.854 117.679 li
722.992 117.198 li
723.107 116.717 li
723.133 116.236 li
723.135 115.755 li
723.145 115.274 li
723.239 114.793 li
723.574 114.313 li
723.752 113.831 li
723.876 113.351 li
724.174 112.869 li
724.187 112.389 li
724.204 111.907 li
724.25 111.427 li
724.269 110.945 li
724.293 110.465 li
724.476 109.983 li
724.588 109.503 li
724.691 109.021 li
724.804 108.541 li
724.905 108.06 li
725.052 107.579 li
725.088 107.098 li
725.161 106.617 li
725.391 106.136 li
725.441 105.655 li
725.664 105.174 li
725.887 104.693 li
726.328 104.212 li
726.454 103.731 li
726.536 103.25 li
726.558 102.77 li
726.924 102.288 li
727.172 101.808 li
727.182 101.326 li
727.21 100.846 li
727.263 100.364 li
727.502 99.8838 li
727.568 99.4023 li
728.172 98.9219 li
728.262 98.4404 li
728.267 97.96 li
728.286 97.4785 li
728.322 96.998 li
728.548 96.5166 li
728.636 96.0361 li
728.957 95.5547 li
729.035 95.0742 li
729.387 94.5928 li
729.62 94.1123 li
729.627 93.6309 li
729.65 93.1504 li
729.729 92.6689 li
729.806 92.1885 li
729.815 91.707 li
729.934 91.2266 li
730.021 90.7451 li
730.155 90.2646 li
730.238 89.7832 li
730.395 89.3027 li
730.43 88.8213 li
730.462 88.3408 li
730.574 87.8594 li
730.713 87.3789 li
730.719 86.8975 li
730.799 86.417 li
730.844 85.9355 li
730.908 85.4551 li
730.946 84.9736 li
731.022 84.4932 li
731.203 84.0117 li
731.279 83.5313 li
731.414 83.0498 li
731.491 82.5693 li
731.51 82.0879 li
731.726 81.6074 li
731.755 81.126 li
731.843 80.6455 li
732.241 80.1641 li
732.317 79.6836 li
732.364 79.2021 li
732.504 78.7217 li
732.582 78.2402 li
732.704 77.7598 li
732.819 77.2783 li
732.975 76.7979 li
732.997 76.3164 li
733.042 75.8359 li
733.113 75.3545 li
733.121 74.874 li
733.163 74.3926 li
733.303 73.9121 li
733.308 73.4307 li
733.352 72.9502 li
733.363 72.4688 li
733.438 71.9883 li
733.458 71.5068 li
733.625 71.0264 li
733.648 70.5449 li
733.836 70.0645 li
733.915 69.583 li
734.16 69.1025 li
734.244 68.6211 li
734.478 68.1406 li
734.591 67.6592 li
734.601 67.1787 li
734.666 66.6973 li
734.744 66.2168 li
735.175 65.7354 li
735.2 65.2549 li
735.236 64.7734 li
735.336 64.293 li
735.507 63.8115 li
735.507 63.3311 li
735.918 62.8496 li
736.034 62.3691 li
736.05 61.8877 li
736.128 61.4072 li
736.226 60.9258 li
736.265 60.4453 li
736.519 59.9639 li
736.533 59.4824 li
736.997 59.002 li
737.01 58.5205 li
737.158 58.04 li
737.158 57.5586 li
737.182 57.0781 li
737.422 56.5967 li
737.504 56.1162 li
737.571 55.6348 li
737.658 55.1543 li
737.75 54.6729 li
737.963 54.1924 li
738.019 53.7109 li
738.033 53.2305 li
738.171 52.749 li
738.178 52.2686 li
738.277 51.7871 li
738.522 51.3066 li
738.641 50.8252 li
738.815 50.3447 li
738.821 49.8633 li
738.89 49.3828 li
739.042 48.9014 li
739.056 48.4209 li
739.194 47.9395 li
739.216 47.459 li
739.543 46.9775 li
739.581 46.4971 li
739.631 46.0156 li
740.227 45.5352 li
740.278 45.0537 li
741.313 44.5732 li
741.387 44.0918 li
741.687 43.6113 li
741.691 43.1299 li
741.88 42.6494 li
742.923 42.168 li
743.374 41.6875 li
743.681 41.2061 li
743.744 40.7256 li
743.938 40.2441 li
744.004 39.7637 li
744.145 39.2822 li
744.212 38.8018 li
744.215 38.3203 li
744.641 37.8398 li
745.27 37.3584 li
745.488 36.8779 li
745.688 36.3965 li
745.769 35.916 li
745.895 35.4346 li
745.913 34.9541 li
746.05 34.4727 li
746.141 33.9922 li
746.246 33.5107 li
746.897 33.0303 li
746.899 32.5488 li
747.145 32.0684 li
747.776 31.5869 li
747.817 31.1064 li
748.146 30.625 li
748.318 30.1445 li
748.406 29.6631 li
748.502 29.1826 li
748.643 28.7012 li
748.913 28.2207 li
748.929 27.7393 li
749.017 27.2588 li
749.07 26.7773 li
749.288 26.2969 li
749.716 25.8154 li
751.582 25.335 li
751.647 24.8535 li
752.069 24.373 li
752.233 23.8916 li
752.846 23.4111 li
753.19 22.9297 li
753.836 22.4492 li
753.848 21.9678 li
754.349 21.4873 li
754.829 21.0059 li
755.377 20.5254 li
755.777 20.0439 li
755.897 19.5635 li
756.107 19.082 li
756.29 18.6016 li
756.402 18.1201 li
756.591 17.6396 li
757.178 17.1582 li
757.44 16.6777 li
758.079 16.1963 li
758.822 15.7158 li
759.744 15.2344 li
760.006 14.7539 li
760.157 14.2725 li
760.26 13.792 li
761.114 13.3105 li
761.226 12.8301 li
761.313 12.3486 li
764.443 11.8682 li
765.615 11.3867 li
765.82 10.9063 li
766.13 10.4248 li
766.813 9.94434 li
767.942 9.46289 li
768.818 8.98242 li
770.975 8.50098 li
771.111 8.02051 li
772.392 7.53906 li
772.392 7.05859 li
772.565 6.57715 li
783.423 6.09668 li
0.882353 0.768627 0 0 cmyk
@
grestore
gsave
559.769 5.61523 mo
792.733 5.61523 li
792.733 246.096 li
559.769 246.096 li
559.769 5.61523 li
cp
clp
0 lc
[6 6 ] 0 dsh
680.175 246.096 mo
680.175 5.61523 li
0.882353 0.768627 0 0 cmyk
@
grestore
gsave
559.769 5.61523 mo
792.733 5.61523 li
792.733 246.096 li
559.769 246.096 li
559.769 5.61523 li
cp
clp
0 lc
[6 6 ] 0 dsh
764.443 246.096 mo
764.443 5.61523 li
0.882353 0.768627 0 0 cmyk
@
grestore
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.systemdict beginYWNVGS+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B7A73D960D5C905E34DC81A096980F2B4111B9B099A6DB83E1916FF3E1A9E04B02D3E9232818F77B09A9AACB5832FED542FDDA70002EB05443C3A08AC9203ACF784CB865C5B9F7D872416879897E73175190413158DECCEEC3F81053539EF7A5BA54848FD5EF8191B77C87FC4B2FB70A247D6480306D63973D6D1E40988764838CF4D7C7CFD56B10F551336B687A8CAD70446C673C2BFDC7C6AD86547DB031DFD479DCB051DAF5177334E8CD4B35F8B65FC86BD3BDBBB8D1E2B3149970112D8374721C0AB537409EB4ADF5E62264D22634EE> |-systemdict /gcheck known {setglobal} if end {end} ifendYWNVGS+Times-Roman /Encoding getdup 51 /three putpop%ADOEndSubsetFont
/YWNVGS+Times-Roman*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /.notdef /eight /nine 9{/.notdef}rp /C /D 19{/.notdef}rp /X /Y 7{/.notdef}rp /a /b /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}rp]YWNVGS+Times-Roman nfYWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf552.292 256.095 mo(-0.3)[3.32861 4.99805 2.49902 0 ]xsh0.5 lw
0 lc
588.889 246.096 mo
588.889 241.096 li
@
588.889 10.6152 mo
588.889 5.61523 li
@
YWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf581.163 256.095 mo(-0.2)[3.32861 4.99805 2.49902 0 ]xsh618.01 246.096 mo
618.01 241.096 li
@
618.01 10.6152 mo
618.01 5.61523 li
@
YWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf610.588 256.095 mo(-0.1)[3.32861 4.99805 2.49902 0 ]xsh647.13 246.096 mo
647.13 241.096 li
@
647.13 10.6152 mo
647.13 5.61523 li
@
YWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf640.677 256.095 mo(0.0)[4.99805 2.49902 0 ]xsh676.251 246.096 mo
676.251 241.096 li
@
676.251 10.6152 mo
676.251 5.61523 li
@
YWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf670.353 256.095 mo(0.1)[4.99805 2.49902 0 ]xsh705.371 246.096 mo
705.371 241.096 li
@
705.371 10.6152 mo
705.371 5.61523 li
@
YWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf699.168 256.095 mo(0.2)[4.99805 2.49902 0 ]xsh734.492 246.096 mo
734.492 241.096 li
@
734.492 10.6152 mo
734.492 5.61523 li
@
YWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf728.539 256.095 mo(0.3)[4.99805 2.49902 0 ]xsh763.612 246.096 mo
763.612 241.096 li
@
763.612 10.6152 mo
763.612 5.61523 li
@
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.systemdict beginYWNVGS+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/Z <1C60D8A8C9B7D8BE73370C19F2DBCE170435D60C26DC869434C1589FB241CAA71BF1D8992332CCC0F513679277BF2FAA99E80796B67CB6FA98AEAE7B4F5E09069A019AFFD30DD5894E2A3F09> |-systemdict /gcheck known {setglobal} if end {end} ifendYWNVGS+Times-Roman /Encoding getdup 90 /Z putpop%ADOEndSubsetFont
/YWNVGS+Times-Roman*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six /.notdef /eight /nine 9{/.notdef}rp /C /D 19{/.notdef}rp /X /Y /Z 6{/.notdef}rp /a /b /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}rp]YWNVGS+Times-Roman nfYWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf757.136 256.095 mo(0.4)[4.99805 2.49902 0 ]xsh786.741 256.376 mo(0.5)[4.99805 2.49902 0 ]xshYWNVGS+Times-Roman*1 [12 0 0 -12 0 0 ]msf650.149 273.376 mo(Z component)[7.33008 3 5.32617 6 9.33398 6 6 6 5.32617 6 0 ]xshYWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf543.862 249.595 mo(0.0)[4.99805 2.49902 0 ]xsh559.769 197.999 mo
564.769 197.999 li
@
787.733 197.999 mo
792.733 197.999 li
@
YWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf544.362 201.499 mo(0.2)[4.99805 2.49902 0 ]xsh559.769 149.903 mo
564.769 149.903 li
@
787.733 149.903 mo
792.733 149.903 li
@
YWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf543.815 153.403 mo(0.4)[4.99805 2.49902 0 ]xsh559.769 101.808 mo
564.769 101.808 li
@
787.733 101.808 mo
792.733 101.808 li
@
YWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf544.862 105.308 mo(0.6)[4.99805 2.49902 0 ]xsh559.769 53.7109 mo
564.769 53.7109 li
@
787.733 53.7109 mo
792.733 53.7109 li
@
YWNVGS+Times-Roman*1 [9.996 0 0 -9.996 0 0 ]msf544.862 57.2109 mo(0.8)[4.99805 2.49902 0 ]xsh544.815 9.11523 mo(1.0)[4.99805 2.49902 0 ]xsh1 lw
2 lc
559.769 246.096 mo
792.733 246.096 li
792.733 5.61523 li
559.769 5.61523 li
559.769 246.096 li
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/YWNVGS+Times-Roman*1 uf/YWNVGS+Times-Roman uf/Times-Roman ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 11.0%%AI8_CreatorVersion: 13.0.2%%For: (Lisa Tauxe) ()%%Title: (common-mean.eps)%%CreationDate: 12/30/08 10:29 AM%AI9_DataStream%Gb"-6LOSg*Z9J3B!;@$k#S<GA3i$.n%"T+UOBr2U,d^D!?L(kpVifag[P;18hY[6.GPtPTYUkc'1S^A#*m*g37e:&h2sbR[^XINa%AhT=+mNlA*]m)[%E4_%Ag\+TF,a=6bE@;Vq7O(K(QjHX3GRD+r`IFQ4pec)rBFea@af*ma:3330BJN<Njo24ipFbc;oVB4qh!Xo,%s4ZN0p#_>#'k&qhTq^)oTKNb@NX#0MlJ^QH4RVst/\OL;H)r@bqJBXt):W;GM%BjJ7;B@&q^H7p&HI<EYKr!Krk-daT]Y"2o)X/"%Ka3GQrqii]S"Umu2JCTfmddoimRhed$72DqMF##;$,cucs$=Ve8b>N1U/Q&Xchi%Cme3Na8U]//%GuT0fkPjfmal)g_TPn0'\eO$%<%*o'-8Zg`nu,'g/47l0-4u1(d7cZeMFO=eWC/4(a3[X/BJ^Ds7!qA\IJ^3Sqd4'Un7HSu)bn'Q.k84Z@2:qmh=^aPEJ:8g<%&NW%pQAB7PY@s;jSA2Uhk&U6Hba>"^.OLp/k<$e+#?Bf7Hi?S;\]4l(4W+Z8:bN(dV[<l(leB5i'_lE8VrM2k(ATg5OHQlX=[Ga*k-pT%d0$7-810RI.15_WQp^>iOVI(r/AB0CEW'mq.^;P`2_.c/F[-C6eVGmH$6%CZ8[$kfVT!S4>%,ip.H?q+p1R(rM>IiVWr>dcrt@.b%O(Yfm:aDNBC:R!6-Ai.9hN9.b?h6Qn=RQ:&R,hQfBaZ,>6ZOpBla&W]76Jl^(#+6,EW=6J!%IOn&qQ\F3;cIHi+FYiI2e$YmmmSQ%7O%=Y&g:$S!T#/A`T'cE*f!P]30]<@Ti=-,#Z@4m'U21cTM,^kK==c..$[Cj.JO:"6E+3"9'(*_AhF<aE]GNm#k1e)ic03I&E()A%OEUuLKO-tUBotN32l5]"Lr0ZdTbR,*IR5LIPLNP%%!i%@Ta^Q!IR:dq:69[n:[f#]6''qOe3s("C5*eG:Zsb8L2Wb]cmI]uBcfr5%^YgK(&Hql()BYWBn<e0WE!^uV2bD=%on7KT)eg<@Qc;QG62j/!kTB_UR`Gbt?B]#4`8ES=K)S=d9XmFGL&Snap]S8Tit"?\jmW`W%KMp/]pdmr;8."6*BcgNCA,n$Ej@:+E66G/IPTkL=pd0:%W!CHO?)1b(ZSZ!aK_,et5jou?K\jQ"Ut=ZVoFHC;.3dZr5Je*)0)UAX%co["eP&*^6#j4_d7(OZ^Q=NFI2P?R2$BYK`0;L<KHmdDUY*4#8hgf`]7&7O/g7ab\3iS[_:S*c"KQ<fT7%25b'Aefh"T4>%YG1FF%*J[kI<^j>?4t3d5Ug'"/7K24^7><'^=%6?PZ8)nTOi0h9>N(<)X$j/@/ub2M8^eCQ#JZ*qUr@fl6_5^@ahMMRHrb][Ih$ZR7_V`K%PCJDlq5jK@s,otE3LQ,c:5]'RQ98#nPCFQB4tFCi5DP`kaZ%@\nh6U_T9\<p+!pq3p)M'^IZe[sT;>?E2sMIubsc.32k*M1$!uPX%./GHdj4)u68N+Zt/<,,,n.bj<Ggo3A9eMZ?EOd@<W6<&-Ucg+BA)K;Q%6p\ek\!N`>Q)812k=I/hkR[PM,Z=(8>\B;/Pr+Q+dH+.%YLFu//`bP`KZb[?"<ECI;MdO67nTH2@!Z=A\lM]b]Zk3V<)Y<u*)3+ZjW]KgFHhR7fbEo]\45<dGR@"nRmML\_s[_!2gPRS+3!pB%:bp(bZ/B'+E\)u&0pbMP:i-:1:2F(m/c$dpV,2TI+E0??VHAe:8E2;PWc"BW:#:n==[:JX&f&P.8/$7UnV?-bUj\(^.a(aAk*<Mo%*;>%beK9K`*,[Bh^W6@.:&#$DH^Q,BRtO&jc:)ach"EL)Gg$otaX+1bj7\f6Jp8ng#3Z:UMJYg:+(IpVn=*10ARf7M^]G+NYk0\P%#Se>f7u7r'T[0/'I?\\fR4C\;Upk;YjDE=lr/^=Ng;`Tf,%%&ge[QSiQ\mG9>Vf1;#gZnkTiR9d11sR)86ito;"kiB,Ag*8Z$r`5%K1A/;8;!?]M!$e'<]lQ?4`7+'OR\"5UP(9k;P]G?``)f[,d;/91)%L2$`)[IQUpkTZn]K_aW*WhjJ"Xc>mYd5,RtFP5i.AQ.PBgn%rJZRbiFe=T&K:k9.e<uA-K&oAcl8WIAZLV4MgQ\RJD/"+:iQldK)C?kMo[K1QeFaRM'Or%aF02H8EQ=0_]fJo+f)oVWMN261)A&3%PfTfQH``lrEh6*@(O6b9j.DKZ"Z4%8Y\8[9GftCUo.1+Ee$DFt9e7_d1c-TF#h3Q<AOJUJmO'^7Qam<qUr,&Zm#>6kfsTUe:+bs0%ZjVO>*PTYlXl:9I9<)I_M)7h0'BMlOF(n<g*25jY6:itkTStm5A?Du^iDidML1MVjAlB?(5Z*,G'(T^.<f34?/=+oW#hp-=UQdm$%.9o'N_G[XlE_3Q)$SHI!R]TSu9%)0Jl&05CF?'J6-#tfQTRdL+_3E.@8WgbQ`fo]e8m4_A(G$;p*Qo?s;_hW58c+<+!<!:k.Og>s%n.Ujb@Y$o3GLSa4OO&cJ1la7'`L%K0m#T"*Cr[4-mLoO'8nmW*[Yi"4b0m_+TiCJ+P]oM[+thS,=\]\`;f%$9,>jF>[*=1]WN0T%%H/p5B=J]LVd@Nq<.3e:q;9K5&R-.RY6s30Eg!r@:'$>GbC#\M_Z:mhPQR6:D(thtqYY'5MS<>FE6F:X3>0[qo-.@Xi4giKcW?4OR%-#Q<&,jDBUgPZgr+kFX&AAjEd"LFCL^60b0pe2"A8r30aU%6NqAP%8Rid"k=&pXD<\?k6ROZ).bLbr/0Q7+32,j?2omj-:'2.pAq%8KY140(DB1"m-H*7d=2#2-5UpP?MAf?fm;(j/RJ4WFrk[mtfT5jJ%eO/D22pC.'%!<m]JAYUpbD,Y8p545hV=fkH9aLb/qpfQ0es%^FY7f,l1FX9,,EO:Pg,Z69UAY^66R:`54T5Ki9,7&tbEAho$Qb1BXm&SE(L0[RJTJ3#NH9RPWMJRIZ"jj!S@V`YnYF0P3";!qfGj%"8(eKPtW""<[_Po,T2h0/i.8W;`k7q?;&B=^Z8h,k*mVL.I7WbEfJGfMI(oahnZZK&h3+<nt+E6&hSh`Q.W6rhQ/HXj:P&l$he;N%G?Ec=M0'GLO_AW0)^V+Jd[C>$`JL&0MXu@k[8XBW'OBWs:,'.Ui^c\I-@1q;\JJ.[(DGs_R8Z_*b0io[]tc'0eKcI,B>J5<9!RW4%^RZQul.I\GCNrMfDR#(0@Cmd5Os51%`-*TW]550*Xn?.eb<3[&Jg>5<NiEi[.,(i&_QsDM_ii>*U(TVh"`'2!J]-IYk8(`[aZ_=F%<,s(6"Wp\5jop`_Kh#r.Y6',I#Z@__lp2mkc%d-u2,YC#.XL9'F*f6nYGe.P7H5--18#tkoDrPim%$QS1_aUqV.;SmoWC$6.d<nQ%EOC1.7P6$6H]h+Pj'GuN9fYY&AIe!N>gR4jjITc)4fN9QVGE*C+Ksap8@dgM8U\K]PG07,Y,.l?]JLO1T8WIrC4>7g6j$s13P);a%&sl!X`Hi8W-03I(RZoq1_C)aN8g+X<0W78W24@W&j;Hm$1*p+9;<&HJK-W>fD(tCY)!+#$Eg!&uE$m;Q8Kr_!;!1.SiaRqg1aE5Z%1FU4]9"Z^7.e,i-SG1";Od1ko'24XGlo971fLKQ30Dp;FKka-XkD7A*m37$[&8P,<AWU=*^P-5s>a1<3P>S<dXM^DX<mHD7T7Ne1%2*rsmP/*tp"NO\t6p:B2P"6eNo/X&je@)5\jgQKQ0nr9<,)B8fAKm0d>(kNdOE4sgie]YZ3W'V%L]tZ#Eh:c)`Q^AKbsQn)EcnnN%>DB4GTGF>LT`ceH^STAsP*4NERnE5S8dT/5W0KKc"<Z_2#@],2T+K8d+um?'7r:#W^Ikqc6padX:O8o#"IkY8cpUWS(/$6FPQ$k[%%-;DDfAptjf93gWZ$38d]h?),\g6cMb0rmD;(.dR.Q(W!P0u:fhm.`%qP'#LP\<R]=]mV5pTT[_U,OEtF[S)+,UJG9Iu@m6IP9>H%9eFff3!2kFG">,[7:mqoE`VE.:VIX[M3HSGHjA.W$2BQl9TU5]&&kH";t-%L,e4q?7Q?Gb`c:bhq@2=tqMQe6@PUA3J#:dlpb""U%\&7UY%pQ9qKD^uR%:F\2<8%XVR>h!;/pSfDNM#"6BCiCgeIbB,J*3S0HeKE^qsD'r4PZLWs(]HCOtbYU[3t1[1sA_Aj)D0SDY<l)%H8o8Mc=cP6eZ@A@[DUTo0h;"FI\TYqe8]?aHF#PEc3KnhqsSK0.7;sqj3!ihj_apm,MXWL[T0N>j]?f)qAq*7;jHUhAVR^@7sIGE%N_%icWpE8/4!LKE8^TOI3`h2"_K38(X5<6P-fGgbYh]dJ&\l64=aSSP?;0*JfSC5ZbkqA4/3L(2J-4i80R@5*+1<)9`2*ds]S1*9%Kq"k-5EfFJCDNL9lE0cQ55>Ku)W^$I_pPR9mY'8@pj1Yt:VRn?=6':-3p7%98g3Hn5ODm(0\:d@==P]s*_fh/2QEc9Cr>._qQr9O%_[!/+*ITTLr]>$oTp)V+^P:_@hp$UuJH&$ceSEb5kQUda:4Ip$GF=EX*"@%;0Uh[hSXK&*E2)1WpVtSOl+#SdLKQALX=.oEYC(Qt%1,<YhP/?Sere1LnYo$OlI3<[l:WiFmb?")8*XISG1n!OQnm@qZSW%624rId$Z)5Taj%m0G8%@#8*>ZTr[2^6_G"+%p&3SO$Si,f^%[S.hCJ;VXd7e8&A&P&3gM.g5g2bPD@0,'["X>qZcT<#s(>V:+n$=/i^f;e\CIUA9OpS>a@\se!:W!+D'SbBq#\&glDlHKXVqkQrD%eXKYaLe8>?G(dWm_eslX+8"mj):HFMYl,5Qf$Si)C*%;pMj8&-l$UiQmp2WBA@!F;;u'jC"T(R8HSs?6b_=l@Y@7+!Ydt\)/6I<D%'d=SF<OZ&#bhLZt`biaH*N)>+hP1aH0OdWNG@'a5&+OUWfKguAqa[Jr^]n$Dfu\CX"r9B^kTgW6L@foFX7oi3:+)"s1VilD_rJk;%2/a[ScpK\9^ojBrPH"'ET\Za=3TsEnN0GE+B9,e6_Y#X0iGXj9<&2\,qm6,?6UsRr7>ge'm:!K;a$_@)gd`Pn]DH6f)"hZQnp@(n%0uD'O@Vl:.$Z%,2>`I]6Z<$59dA+Qh1`r>#4!TNID2fJ$]h3_H[E%s&H;/g7icjJD*dIj9HdV_k9th"cHXi[^IFSX?'^b<o2nkE*%6naI*."C'tHaEG2MXHq;4*%XI:$0p.^$9:\Qg%_%,a0[+NPC2<ru#ZQn-d/"+lW'694@p=9C-3_+4giLD;52=pn(f<Y)XhJ4@Ak3%H4B(#QWkZ[en@b@f-bFsIJct=D*]_XB(r/)72f1`<5A&]qsD"FOCp:M>oV\hN$\WAg[M]JiEu!OBWNCUrW^V@H]RjAfW8g)-=ei8%840UF.r617`j!pAn*[5?DI[^"?NMj*B0hLRojN9SLVK1V"S79,(YQ,`P=3-K.uf,5=.?p3d+ftNrBcB(JM$>sJ'diG#a^=f*Prol%d\m\o&Y^k)<?JUB!flbUDh'CIoT\(AG$*Dd:X&W5h4\Y:J,0Cu.%rl>d9$A%Msam=]tREl/bJGZ/M?dN>RA9?N+3CC+s$;[6ea-f%[Qa0+hTZ@kpYWl<R#9WUW+IV[9cHog\Vu83iUP'AWmm12NPYs7[*l0RXVP)k]D_@dN[;b8V<Opt1*'86lU]/%W_P\[9ARMi2A&NL%,*.P2J85'JnS;*dk"C?L79V"U#73,#@HfS2%/A>i^2\Sl&,tpD]gNq!I'BLk1-i)3B&F+B]fi:X4h1V6JF88-#@oM<aBNN-p-8t5%8.:i#O2Ue0[r(1>H,oSYMj0q/_Ak>EHX7Djr+NgE,KiWl8hbVNF4@"p2=?1>=&JLWk,:Kfhdh8Q4a'".mG6>:3pZ`?>>ld+b2*ug%YK>Y.2jj?E,`j4W=<3VkL:At<:Ki*>5dZ>qH+LYu)R\;1CdTfS4[<FSWuXUPR.M<<$Pt6^JbPs89's1s)sULiC4;l?@+#hD,Oo,e%$9r/&N(*_l%u8Wf?hMMtUCn>bdD+uF\Ps?YT,Nq5b-E6i10s\I?cjBGIC(R[VE\hpZs-Qj,F,W-0K8B#UPFt]["Z4;iBZOWR"j/i%;jXq,pp];eD9</XrU88UrO*HW?TG.d9o>PAbHe-8d=8Jj6hd&@l"i3OpKFlYa^KL!#NlZ2!Mj1*`Gt'eJS=ii,3AiVQ;0OAq@B0W%s35:4mJ!(LmC$-:fS_r$;.'@.1:mM`]1oJNEkmRXr,##)s4s5;Uf&?_&s'-Zc+eS,fp@sFM$<pm]j_VQ=4%;[W`NPE=A6!J/ZIgG%[pQKV*?'(!0q'8Hi1f%qO])=_FD^iEs+&cES%ZG]I*uik@ls\Wdm':srnSh.g9Z)5Gsg?7OkPs.=%gc<=HP49i<9OB%+/BOcH%j>%^%#EM":j>HHa%*FP,<2eU?%!J_CH:i3=5]8DU(_8]gf\B+#]Il-k!5;jtg+QhOCqQ?9umS1.7>@g3]U0g647%X/=IJT$A[XT=.L'%H;EP=?>hlVZW$Q9YbHhQVD'GR9!VN[g:;#q^Z=_m:B.7j?)H0P$rPB2kh59b,W;6GWJ/KukHclm?s\7D(5p*>P>-B\U0j&i7TF7_%W=Poe3YJpa5DXu!CMt]#[oQN9CSO72SrGKsj0FWDq3=D#WHKKI.om95Q_YE%U*@]S'oCUM^=A_')ng]=p5_=NOuP+k-njl'm_%Cn%mo;heC$7<+E6Ze+eSYujX.F>)_H3Mc_W+(YaB.e;Yd%kBeP`T4J;\*:>hpQ8O$/iq\2+cdKi1N9X,4fKKU"PEr&neJ&;NP=Zkc5;%ClDJMUoiBXm$>*4oVXWc+S5*_1Mmi7'hkKATMD&U`?P_*"Jnrt<f6UD91sXXrAS=uC2Z(0N6,CELooKHg66in3h_P&0M,_,%9a7#%C/-Uc[q_\,LhS7bQ6?)jN%(Y_V@.R(PV0`e!g$SfW$@$h@lpcfk<\T2]!GeM8@oZ\>d+\Gm:,J2[S&8F^G-CfbN_^1RTH;PAS.(a%X1>Xj<V"`+^2BTJj7+B_Z:;hP"(bYHSOg,?[-U>!bGi/Q7*;`ug3M7NAgjLc%?t0f9hfuSL"+B30``*-Zd^K%Z9ZiY4oIrcJG^ED%H7#c@B[R?XdO^^[9BGX+Q^ThurO,\Wb&W!":lYpCqosVL`IO1e%]<p/6tKuD^?i`#MHkAp':QcNj,,V5)eui_P\El^@q1Z`_c`qg%?PjF31=LM9l;^6UV.llhVLlMg/^mOk#C:#dAD$;oa6G=aIS\?b2k8hq(R$V&)WlqRCrodmb"]Y9/_Gk,F%EbSpoMC,<,:=>V>_Nk%(Aql0Atq->Zl9[=$B3!Ld>A!(PHNpIXgt8G7J!+]k"](n`/"/mBk@?aU&&^f1::AsPhMocluUO#"+2&nF*D'X?6XDNlUuC<q[AWd%U0fF8(5jVi2^pe*JY)LhQ:Vq&<n0dO+;Zl+20s3uAI,`P=t;UsPWkC*Kp#%!_@so`-PEJ<PO-?4H"YXk9\ZmR`P+1JFPY/AHeRcq%lO.-kDF$CT%5IabZJ_\11Gc:V\b`\\RgnX0M@2jERE9KbWB1J3,DJ>8flT?FR?.b%AIl9OkG:f(3hs5s1]b@*"fn;(#?de)dH#dF%0ek)1h/1WPn0HI(_W$HP\<G#?bIbW7PG3l0Zee@sT+D[bPtEH^oF62p78HFG:^DPs-mDekCnfWWZtb&DaL4s<9MHd<RB2OXX0gMG%@9J^EPas?bEN;^4eMqGK*$>d@7B.pRQDq;h<^jEMdMh.Ui6[E1S^GeXZ*50%!,\9q%l&):g9\co5=-73]G%F<j3U9!ACl^,!-`ur%M:kcF6GFM^Uog$&(N`[/iurKW(hQO.F[9#8cUt$6Tm^N5TMkIf0()\kR`Gss#h,S^N\GjarW[s2p+CQ<SrE3<hA5I.FSeko_1V+(%pU&859?iLT]4'@Y0DFFbSm?i;-6=C2/(78*L\PBA*/T[EGqo%!:B)i@q9FK`cj3QDIhlO4X$S\5*l"W40Ccl:_gNO&'LoSfe6Zb0%hTbN&m'+m.MXR)7%bU>^hDL^k3To2\jnt8n`gbT=,5Y:#?\F3HCj8F/d(AbEH2g=3kWes57:OQ4mj:),VO-M_UY"H?M*Gb_dGp_g%]o]->#CN3Dqgb7[\bPlOS*0a:(QWt>gj,7!S`_U/5'D+b<nZFp]MZd_W]0NGGT&*05-'C$r$0h-c%`.P@tbJLH]aPE*[t;,Jm+:.%M=hh`?ds8#a;/9"2h0uiHK@>oR(GaHHPSjgRmDI;U4HPDMbE_sk$'<An28U,>SN5$cbZsSEP1'qU/S2*+/-Y'>J4iAoC^5+gWtkV%<t!p!Gjn8%l(mpnIrZM.$:QRFa6_X.TTa:XSi*3\51fbUq,?/ak:>.[h"m7=OGq";PILC('OG>JVZl7W`2n_>l=@39bb%*=kbHHo%[18gS;(On$fuYKqI@@hGpe-JSI]%2cLtm!Z\Mec_rt=.#dROdkr2+o'LCR\OAkAcdpMo&odF_1SB4BBSkN)ScG->W0iKfqW2<)+<%+J[]T2#0Z]2-Ps9h!C)NUW<7e;pW9nlu;:`FY`t**I&M.[r6SPqN%$PURoJ2Y(r@ER&3a1$>DEpr'C]pr*#H'qndRJ?l7!boGXQZ%::"WdkTLUfc=76We(<f)M^fDfchaCdr8'6?C'2I4(g%\TcQFet>4HiVUUV%Y<$RT^n/#u,5%5K,`DM&S]^lXKBJd%H9%!Cs/9Du`%Dff583S^'8Pt'e8<5rM!BQNa,Un@8u]uhG-IcL#mV,<"PBm/b[F+R8a`A;*s^Z[Tpof`1.rVJ+Y7Zegap`/^sm,LrKYHO1Pb+BS/%)L!4W4\RU8NBY*U_L(fRBb^5//P=KNq^;;\VqYl.0Y]AZeC3htYOrhtFs9ML9ZND#B_H\-_)K6Y=X*/7##dg)UDF7)=`!^jkg_L.%^Us8d+H>O@IKUp+lFsuCWJfAU9XiFJipS_oj1:*52L9X*knuC:/H8Kta"#=d2#?L4maCL%I\Z#_>Ii8ob]Ff;X.<gd7a\^s2LG*t%/9+.=k,8O2;c:BX$eP<ZgLqo+)FYG(iIW*gp@Z-20(b,A/Q32?8CjH]1Z-*jj!Ta(Fh"i-I6;9b))b[!Z*QrQ7c0riqfUGef;QSM%h7pPhIR!AC8%K+XT7q.k)]_oULJLC!$<6ETpD>gr18a=%Fk/KsAZ%QE7e>NR\3Zn3U@[o4\fd!`pLaZ+;5>j9D9aL"a4D^rHa9G(%f<1)$@m6ib7cRooURt&c#@aGmWM>/:@pb#@V)Zp`gl1FG>?o\.ct(i^\Y.?VjdG6TjEu$f"k74C>+/CI7OcdLR5Z3a)FZP%)!kde%CCb<KH(Up+Ml-"#T.-@rTM]mc'].<T`5U[oC@mJ42EL)nq/E)_0'SkP@UG&fSGVdm2]=]g^URD0WU"[FCV8YpL0HS4WPe\4g!)P$%WL5($@PV@2_gB-[EiaO=537s!kPL1HP4$eEh0D\b^\MLH:HbWk\j!7+oU_g4&->TcGJM*p*OF<6`Y62i%8W=DB#"*uNXn;C#_&cu%ai33aEW'4&)8&,%-0`mFK`9Hl6YH,h0n5sD.f!TOkHdkX]]>OH^Km_n0Dth%gu)nZG*P4]HOQL33t?H\STkG*5#5Lucp$pOlT73l%?+*_^JNT+=&q:KX]W]*4:[q@(Na3WO+*,D_=bF2oUW8!YO#)#a%+K=flC6q8bcsfApce4:I/7bgh0scJCO*\2e#2Y#A/]%gSdp2i%mSWJOS^`/gr*GM6kN/W18$B4?00cT;5"O7$QXf\9k%$]<&G4jt5@"T%rTgokdgl'MjnV*t2rL)#nYZ!;F^CX']fhdRe8?J`)m:'L%As],Fh"gUP2h7f!7VKZi#&&I*^3b+dq<?OU4I3mq0etP9WSi,pGRLk3GUOO>/Qs*CT:V"tH=>^9T8H_&S"oJ.m)([56bYAMd;63I%Rqobh5P\oi^!`D]?%3kj-HthlM/7Uc)(_VUSUn!5.f9RgGChWdhr`k;UCn8%ge(\i[u^++I/WL*6L[^,0F&YD"TBdY0@XTP;;?fa%i">![/&c6Ln"3&ZQ./.ujL]E'DZmC5\9HBjiTO:3%;>K(2=L/'?/Xmr/O/)S17j]P.5^<:d2%TK;j,ft*3^[ej1p00MKj(cc6clo%&KH!<i]G26&%!_X_0;o,,^c""H6<uuT"?70JKh=k13eQ7TieCCZ][9^Q/.MuY=e_%6lq63%*;G(K1Lt[-VfW=;:Kc3B7[]_\l<IJ%iZ3p:<5_X4V@Qf5G.9YFC&_.M1rkW*msW@]iI'6VVH;<tP;lO&^-Q<Y"L:jls#;gE267/X7I$b8as`s2>ZjYMZaQ(o*2A0a[CWrT%\eVd`2m/Lt*(0.^Q-/Z!YD(LH4*CfZ<L1B9oOO'o+NH%IruA_r^GLFEjJ2VknmLWN-fO`*SBN3<b3EaP[u/PYUGTT3HiEYNQ6ukV%<0LeRfrs14["`?.ZH&kQ*irqL)OIb-h0Ha1gjUI)8P-9EJ)34P$l8"(7-<XC!XVgqIX2BOjhMg"LM>a<aIT0rnDMA?knG[B+<OGY%a9@WFl-J6b;G7lr%W:4:>=mk9]kl]G)+"@Jlm2=j.$"+Dq3O0;'bA%+dn9Np<I!W)QD^=PkZ$n1)p,gQM&l2FF'FoE;5KZ7NISaZ%5N3Ku&4i>EY2p_o&GZ]l4]$/g;uc)rhMm"Ea=jLtQ*dOrV"ds](KGYRMi5Md?<W;:k^sXHr-Qp7(]J1@DYW1"4D3/(]QUG':mDl#%lml@+n._/%DV%g$X;l,A^7()46;Qe,4a"9r^>^6DKKPDjd37t;/mh]t#gG%7$_p(\B7HD%cjU#FOk]Q_]d<4NQ_W$7[l"o<@n`4G%6`*'qdfs8I`ihn&P_E<a:X(u]Te/Cb7_>>L/i"<b9ABu:)c7.6.oc'1cqP6jo-9"o+Wf&,pM"%T\KcNbaa<om8tH4GaFF;2%^um^%;.rYJM*n%V:7e$`bJ0U>)ORai]Z,Vu#;2(-[p66EGn@?7Tb1=`AtaTC7fQLj0(X#51CY^@j)D#m*i@ZHK3Yk.J?1RgMc#bL_i;:M%][+-oVOMn&`'6Yd_229"ih#m%`$*sgP)"hWds"=tlVG1-!'LQm>32O!+#t@l42e-H7XWBk!=e(p;)%.F);k7_W0LD?1+'!\q0b#h%Of]93hN0#-/-\M=]e:^[$?0<KW(nt_P(qe(%)sqSB"41,$)/[IaU3NWr$Tol-Ca$b`2E6,%!Ai>mCN2]^$F_heO&Z0GCAXBa<toD%nqn0"[_XN>liufY4e^@/`Io[(b`ZjsH`hGjrt'O-f=Q.EWkMihl@tmBaEA!V#*>ahUb.b=c@@@@THp\Tkgu10]l$s4in?/rHtA(;%FAICL@jC`T!$'1cR^C<Z*]\Fq7GoOR2>&E(i.qX!+0W3Ki[X#Pfe+[bgD5;*-Y^[EF'0l/agK_DmW,*s:q/!?[9TYHG#gAtCitu8%mV0hOCb<+6#U@ZZXB)Mf&1M\[36a-bh)?@16=mCDHWiE]MliZ3XTI&PDEhs4(5m2lToZ^%@?j&heX3%J4A[q/Z3BuDR=U+a5%<HU%H/+X80J808GXaL`\'5eh1S<JRo,4hfnr+oUg[*GFR&r0:Fc/4cd*0RC0"GCRX5dK@Q$P:Ylh^Mn]l>6Zgsb_CV>/$Pm+O$\%Pm.(%2<#FiHHmS3QPN]k=AdD5Z)r>35Z'>YoUZidL?ld'\t1;/G0SY>38AhsWGe5eLp%W8)L8QC73-^SH#"0=#1Y%-K1$S])%%=._Phr"%m"T"!O<c@Jng]^Erab]KF'5HUNB7j!]lj.tm<q6&)'OY(54*)p6qkA*)p4fYQRU`3S9a_O[>Y[e`f2h@qg=$<R8,r'aOn$\&'3H]%M0c2p$G]j1pXMUAm+c?ebd!7l1'k%NpR0pFDLt>@V@.kDR?sNX/%Ft3Lr1>][ue#QN'%Phk!m2G?C/=tP?XA&K=iLlB4:568fY:]%X3t3&Gc-b\MB&F@E_:?[Z9>5[etAh*hV'Nk<RQki2Ft,A%an\N*3PX`JfR60dp'>GgEa8X]*K\QBWVJVOPE/l_5iq@8LlaA,b[N2%R+u_`jF$6ZffHZt1Q$u:e+ArK@7^>dogmNU^oubHMHn9oaoHBs+W7[Y=a]U!PAZhBoL3$(4%iXe7VS$k:7>]^&!XJ]AP#(tpUb7'%jReGdMBlDc!m<8$Qd%V&O<%U]NMLL*)p5P-[iCa$h09#hd]S65NI8pT-;>WZQCDmNWC6C@,WSm=ofV)7(s#HCkH]0<+eR7J\3c@h%#A`7M"'s)6\B/P7k$_<ei#cIBCp`F$UQII,@L[]%K1RtV\f9)#+'KL.OCV'VJgaiH?T(Yq_\<fn]J<s4D2+XRkcSpiN5#*C''e`X%MQ<3e"epC6>*B+onoTYXAVYVZqho%0VR7Zd7c/sSX4fk80IsZh%&r>j@qq-97eT*f7>;e_=#8m:f#2WCSiY7V6gHD668tpeoX<IL%?9Ptf,0/KB=WDiiNCM"s>bh*5cuOOE[j>'NIscuTP`R=bYHVjofD!hOGgP+_Z'cj^aolQp[Y5"B@hHM"bW:C$7,VLL,UtZ7L&K-E%k?R68SWs@N$hMQZaIYhE&/mcVF%k/IfB?RRKhYJ4L,(^HpNd,LWs3rk]b6^?@\mP9Q$6IT;IQ\dX]_Ej$DX$OaM_7+cR!5KO0kXu%cXTCtPmmR[")i2&N7G#Hdt<?.`DD9]o]:@7W5S#qoZae.L"j\RGTL'c@>?-T7Ud%8)QW)p:Es@sa;-Gq6)2;da'tE=<YcX@1;*nf%"jA\/M["o/#%SLu$Wq"Q!R'6d=uekt8hp`U&3[KQVbSa^,uA2d^s\qN,KkB3/HQ^;dtX-0MIX%B^&;i>BcnoN5h'A\(0,Y0gUauL%^-7X`Fg?WH4!A#LK=7QpEe&Pm^SK,`X&/3:I9;^grDgEtM7D't;mgC4(2D>tiOP?`f-[F2gCjBD1a0T9Lr?K8o_.el1'Z;(0fN#G%Fa[q./CiBlDW@F+Ed^_ZgJ%(Z&mq-dak`*bCI,7&2ho>'0[@J;ZTO5gZgOkebNAX='%dn/^)M2X*Q%g._ie''>GI2geXV)p>rRJW%e4q%DSm$4,gr6ic`'&P59)RgTaZ]U(N;Y"BJoOrT,!U"J6^fF&0t$9j>L=V^H2l6cT56rOOM$tGcse'9AFiAfG@-=uM)WdR<2993%Sn/p?lTW;C]Xc\5Ha_1k&'gd)9Wu[G0PF7p;B;Quke)'OdLfg@7=OfI;ELlK5BMnnQ]Q.-]@s)Crlfjn9a7/DF7`P-JkC?0_UG"$%9)Z!D'jKdH$*m[IE.1e$%@o!mI+BbP_@^k3O?Q1)qaitn,@'@5moNpM*an[f))Hrk-Ek^4(%Yjil^bU.SeZLJ(-%6K,/]F:e%+)n%Q-`[kP6G4[AH%utiHcM^6h2XV3k@-n:Vl]F,]8&!k/>(B+joI3CTui=_ufD+K'VN)6_)&r8"SnV&aE!L\HYC';bAYQ(jDlm<(:50%dGI`,(E$f@2lc3kHb6ShfGC(Kco8$5pB?W/$+$qC\-pT0H<W\e^<i]5<B8i\Q+<Ykr9)5FVGR_C*F?+f=t;VA?_Gg_f^HQB?.N(s%%*j:k=JuW<+fha3jS>K=((nTC1a99(7NoZ>[62]<qEf#tg9mu`hP"][`Vo*9kPFQHlFHWK<p_V*NP?QI+$.q4W<Xu(h"C!G/"jF*%JtB\EZc>AJ-%:&W*++XZ55"Ub6Co:YY#UB(f=*d`&\S8PY>ook:+M)%S6JCV^UuhI>6B_\JI^gM@aj\B!K'm,ni$XaX7jB@(/h9S%Pt`gF&i<T+U2(8kC`^'s2$7>XQ<_#OCblEV.N[D?V:rUG(>3:'8$&]tY?73#="S6I"@;XJn%$KDfILkHaC/B.7[d;V5-j#HH%`]h%A;mZt3@pnHX^F,K%,oh'rVWm)ZP6-:<X(q".JZqAr/2`QoPE*"?tcpCM9iZ<Y[bk>bq_a!0;>)?!(Jn5&"B5-D+"mrgj8a(]@"N"%Cr.[#mUcip90;PqIb8Q1n92E\XeLRkeqi#m4hMX#9DDr-dDOU?)J)\rTnf`e*5$K[=b:s;^+iO49;e`6*F3m_76NM8:f5jqSI`%N%#6Hbd+0_U<UfC9_AS5uVZNc1AZjP!53YMpi_em+CKUR3Bh1rc![FLp0/O5fV^g*lqk=2s,bBm)i"Uc.OLLs.8WQ]It;X'u`:RA./%lG8g16#HRO:l*TD^i)"?9,Vu.3&q)U`^!YCp+9qfp0^VA^2'^%@<]\H:H,PnGplP:CcJjhOt@gV**O,H1N5]tWk>r2.kqRg($DtB%3*))u'WDVs`[F+?l!l$<aJq1Z(GW!mAdGMT7#IFAd[A'bT3-TQ/HU\X:Gi%oUH+:_ffn=JepTDtfKu7)07gI9_tC;BL+(lSh(iRs%e?.]nf@Ghu/7XEWnWamT0jh!5emb;;H7L3Z;%jOYnf!YU`c,?$;V5cF/Q*gO]_o\r;E`XTXdNnb$Dcc]UhZEuPBIKT=12oueu.j6%$rU2sLG>q_I<2q.gJg9&c7PW(Z7q7T,+,98.`IZShc?\u`ZS\q&(VSaDX$or"1Dq<NM#M[R'pC,Cjc\t-9bOgX!ADBl7ERuZAaF!%hI_06POqQCBpHn<10rL-7Okl(a_nNnOB@m5NY677JrY0E5X1geV>5-YHR&/]8T+jl7aU>H>jiAq%6!U=/8W.h0dA3*ZEV#a`GXF!%b*Lu`>@Wp<m`8OR`Z$0i`asMH($kk/]HMT5OUl"jFku9*/i9PQel(*7hF6*=FbOhG5OmD.VKNlXlZu[)nqQG@N(q*L?CQU6;V*M*%#oLq!>$Y4"W3]%J`p.<%[tLQ;`t7cqC@l8s.\2il,LPg55HG]j=ura0ZdTinCUrjYCQ_6iW:AjSOo?eu<nE/#Vrmm:/?`3LShBo^%lPT\:7g)(if:QdMG3a_G+'HT1XMu,^#PL77X)Q'OhXO(d&i4<mkuNRLg)Pl&a&X2#TjHLX/?D]d%G(/=<\WuCF.rXlc<80"><'Fd%WG6[4JmNj8V+*fdG1F0t<)]`qcf$ciou"k(e^GTJ[a"+*Nm496bF"Dt5_JH.j"l;lYBN=SVU/^6,a\JVi9fPs/'q\)kDaBb%G$I[%)AbIGjd)RUVR\nFTYW,O!\ellkm_6?&ZUCP9c50@f@o$](sn7i*MXX!BY(To57I1,C#*Gi[&]=mZfV`AN(p]/X,sZ);[c.e5$O+'%X(Yfq?Y>?S<A9MY1LJ1i@i!WZ/GhL!$1.`:1n9-uBt;L6(_)eomFRpY)"Hj)Gt5dg;t-QqkDs%.mq0B7j`<uXqsBY=,?b6.aqO8f%qo8sBG;ZV^@<!hO2nd@#Zg.hUQ0juk!Nj!g!L&e2/Z)pSEHqoBe0gkVZ.9VZp'(r'?rY[i2Aje,E*JlbdpC3?22>DL7DeQ4K=#h3%T]^?D907s&7LKH)>)pquN[1[sMj=)(aY<[l1F$*`1*Z*kmmp&k9!_s1pS>:dB:9PkMY@]o+`f/B@5$eQ:I?&Qs&)U+Ze_;iL3n5Y%%5R9GcZ\a?cKT2Efc%c/NsaI=cPj*<*E96XAGu5#i!!=7@Y/Gaf#t""H][p$:r-oilaK+_lfTne7Kqhe1mh[+)c4?ub8+]"<3Ur\%4rJeFitrGg>-Sq[//e]0gOANU"m]TKc#<L8";Pa!gTPIm?p.1;MC`R5"mZc`E8-?ZeuNP*o^+mIlX>AcDS&c^H;uu\G,'XjEm,:u%YT>.DOCK6)K(ZpfU'GHY.Tl-s=L54J's*/s7b6""<3RDj=>(<E%Mc(#$.edi[R(/`<Me`8Di"hX!0Ohn.bH-OD_ESB%hlUpRY:bl%=KeV<DTH)s's(K%I']VcW*hb^0ZbfsM$hfY::h0[HW75@?>22sgS9?81S\?0f@gOF#o.9%YI,8&/u!9MfsYp$e-oWqIO'fu[5Qf7%ClU*UZH?Z3)f($W?JZ.!H8T8^CpDA;can<6)tjetLDJ3f??nK73D!7I2I:MbYrPA`q#)f4-8rm[DjuBeL+QHq@b]^5ClU+(m(A7!%Z,J520@`K-Y<RfCDdg)3/m]W(XFD"mPoA8j(?95WRcrc(Z,LAlgB,l>'jJ><J[^@d2O^HokP?a'Mq>ubl_!!AN\4Z+kpgMSCAl+,%]%BKRW!U%[I:t1bEOR"#G^XDud]T&s7`.9q=Ilk.MCu>'P-"b;f#/?YLdj>>(9=^7<menP@uH<YgfD(6X4Um:.Sm3'n@Igm$gtJ.%>:c=_\dl;rI;JG.]/nQ^()qP'B'A7IZ,N#=0uJ==(]\$/f0^@X:CUGE=V"fN5.5]!"LjY["8!R?SXUt->t/X^/_8^dN8i[D-gBlp%gq"?aNH0G_A!Aj\,`@qiMc%JULQ*di%AQVBlW`);DDOb-F.E"d)!0:-EB>ksdV1(e-tR0DB-!a`jh/=p1!8'dinIq,(X@hu;9JU:%9hG=d3j6jlc83C".nJi']*Pj]3\P%YGCjs<9S!\6cShl2JonFEF(L/M<[?$QL3FR>QKlBjgTf&TY]&9*SZO'G[`(9XF@hko?!s3<%UpItP405c?FP\'uDN&_pkQIonZ-J6<lL#e#$1"Z8SSc13>#89N4,5c63\TYJGCanno"HB-=Qed-\TWOH<n(-kOP#V:<cSB?q([6#%c3i!FodmO3ep4kB/#ucb/#]iBZ-E^)=i-'a!pdKJP&!4^o;^QMmD1h688#PXW9Rf^NB(Suep7)@VHmT#ot3KcZ-E\3fiVUia#Y`0%-GJSZYg1B8U&I3f2?BpjUpK<u^EqIa#[q@!ep/Pgd2&giJonFE8i"=GD\,ufJ9<d,cYk2^=]sfeU!gBa#2(\3K"^[p@@aN.'">nB%YBS^BVH@Jb)&a3eX]T3>l+F6h?o-AZPFIJIasu&(Fggc$@V`]<@l(3moh13c3G'Yi=[>*$5IN)DoAXZB?"':h&RSd7Zkr&@0`!lK%3bre/]>6P35#]E1XL$>>fEo)=XKs[<U5\IBl`@EF[KEV;;P,.Cp1'Y9E-sa_3\/rBn-pL%_E'?P=R?7WCit3[%dU2P,OYWuXNV(C%Nee]`SJ@s,8\Deqep/^BZkKOIZJ'2B7`:TpB8O=R2e6RQDQqDYIJBE.*FYMHk:#a&lYL8eBksfV,4U[6@\*2*5.e)Fb"`r:aC9Lt%1E`5aodl%.f%D%pClW7R\F%*iS"lG64&WQ+2>^*Fbmq3G\7Te]1Yt?."0U;seZ<iLlUJBrF&]Jf6ghCmAogqXhOVNQi0qnfc)^:I%[YAQU7l;f@$?(]82FfXjEGQ:nZT5&=!llkNRa"^SMt`'HNb^OC265'jf`p&ENbX<M[2lbh*BumpfoU@eDi8Bhhs%*5PIJ@cS)[2%%mhB(=f5-I^?9UZ!o?*"hc'J+>YJ<#bZOJ.hD88#55]GJ.CGn[?l_$6r_DRghblWLO'!BoX39=DTm;U<CHF8iXfa\$kor_fT*r)jV%c/rikXR`I422`H\Z4Rc?oCUOOB@fZ1[[g\GH(/u#jmCmWKg]=j'Pt+^.rWbZ/i52!/j"6"!P6jZSR$NqG'3m`[\VmR[dEFu-tMWd%=k+N(#.Yr6eWR>8>dZdCq+'8<TmqaP^0$eN[^rfgE/A)""cg0EXJL=QP`W6'AZlHWD)lMbf4asc2Nq&rFcq)O^G-;u-Y[sqbQaY:%@?lHogI8/ef?W_CSqcm6?k&];'t]m^g?o^M=.33&m`&i2:MVd.L_VQ.nj&SFn,K0nloQSnTIe2(mI"'qKku&RO*ku+FV([?Mc,o4%a^us^V7CA/(q4T&JL0L03Wo'#:u)J4Cum9L<M"[tN-f7@SlH![XmuGo=1GM="h?KJZ=IU7OdVc2=ug3<@`12e>rqFa'1D-6P)8V/%jX]e=[K9=-dcAFu>ghm'b^u7fMG#GaifZ2"JOe!,WgD:4e'ci&,Q_a%).l#-;bQ;8XJEiiQ<*HL[o/9PK1D5C=e&ilSu%^s9mWZ+%U93?(bok9n)]!PcPm0lW86$"6m69^PP=FubdEr=`LY'8XGsu>_m-`RbmVk'a8/42>I,;>7fh0`"%`W7)FL5p2DYXcTX6Ab)m+<*;%BVYM[f'[Lc2R?\d%._LUmr5^mNeZ$F2o!7UR;MfaB^Lhlp$Qd*lU4QBph9U>OYFhA*<M3Fj)BW$o4[L3!+9p7m>s*?N\3!(4Ib\a%)jKtm-QA[D'KJ^>XDEX<hNVXuLkCjb4!@8jTXH$LWF+I5(#%."XDf5r#`ib`Un@#TU27Bp$BYH`D[RIHot.#qL?Bs'CcU'C[cC2N%D2OI=4)0f?6lo,NlC,GlOC#A?JhF'>qi`YO)l5-Z==pT>fmU_I2$[o*HfDPOdliP!Hdief..&q=j]^/nES4/of=^he8;aQGP$TDo%Lp@1k#pdJA@n'M"/'qk)Y)B6c27?]*#-Ej3<m*Ral`P<?ko*bX;,\Vg9.#\LqnXe8X`[Zm4q-cg[(>MX6DtDX4dk!/@YK->*:Ifh%M]"A5h*uBa\!Z")F:JTX1b[o"NF^6OUtK]Sns[&1!o6lh;9%=jiL'S!OhdOmYJY4)]"tC06L4%ZY1gL/phmV<r++V%%6+/NN@XrG%]mCAnZ[2K.1PSpOZ"^=(Cjq-[C<A:Ocf$cNiS8>\X^#,57VZihZkE%2Q'sYOmp!RHh-9Pk<h]`ud_,6-&e\O;Ls6'=_,K1U*@%iB%qE>*+YMnUTDqp^_k0Q`$YS%6sKPNF#,IAVq"E3dL\;e.l#90kn_`&L(><MUf'b&[?f3-=W>Dl<c]!VOZ;Y`@(:,pJ"IsZaoC'*\$%"`MEg+uTD?lQ0*3IT?K-`L=N$aW90k>[airLp6GfdG%gK/E>2n/Y:aljk/kkd03k^B,"E7/*VJsnJ&W^^Q4$bZ3%/(pG[fBC/:RK%ZtB_HOK3U-[^LP0b39-&^2`YThFU4u)^ZGEDTJ[KKD(hr"C%:9c@Xm]dVRkf-Ym?]&chLbR>-FZ'prRY'We;F-=E$Yi&=)Jl<J(t%MNXRt]Z&HCnu>mPe@kTnc!,",m\/8G/*]-/QsrMWj"o`%Tq6(ZcgZluRoiBM>/<;cg`Ktc_-0-Jeg=F[SL`"Kcfnd/YVre.!@s%B%gj[T8nrD=jdr]L=TNuEfV_0-H=5:Qe4s_AVg,4-+m!2iU?]qf8D;>;T(q=")CN(V2-PtM/6iapgK'lj6A1a2F>UZ[4cRu>$W`7bu%+BJ9ZC3+1PT(hE5kD(V=W-?CEC(H/Kc;&^uEluZrF9TaTX=,_?'[hl1_Rdt@okSHJY+!?#jjc</00"sK7+g6k[a+OZjh\3oi]e2g%2Q/\k'n"=@DdcZc%u"Me7?aUoVk]:AGqhh%3>oFD%oriGcR<'t(WUFT;W/9(Kr8q9c'PueM"&];&&mBafgE9'H0h<ZC2#S-^*V[%%T6rHe@VO,CY.ouE'5%+&7#G;;6ZmOU^oVQ)e*.[[_Jt$sR7p?mme$MWg$<_j'2bYT9aM<=o4W5ij(-S^Qi9ZCc(Q1RZMsalQ\W^j%N?a[Lb%E0^rOk`:!qTX],/Lrj(U#JdlLJU,U@'e.(j/nAj/DkD7Z2T^%)8`r$i639(mb`2a0PtG]jLei2uYuK4]/WYi/mdt\ogrD%`ui%;j=9A]9\K18A3)b6T?Pcjf;WQ0F[D4Ke-TK#=7.d5g3M0g<DMQqkN+kiAeNt3Vd4:*]MqZ;L6Ji\a@'fFT$P#jdc'&dQC:*h%<N(.;DiWRli2r3FL)XcU<j2?q_SJa@4-@e#J+WQ"f*`+\DlES$U,JE_9.ldA!A\t(CQl(*1+sHO'\g8<CK@hnHo#&HjdVn<$;g?\%5<]RSFa4C#6l\RA3i"qm]f-^/jNfZXW!_hVPS1!W!`a3!.[+T;Yr21oN5cRlqW[&OJp3p1r6mY:N2'IHLq)LOa]RfkomdDs+5MH1%%QYuNpFr83DpuC\^_;&2GT*ir_aYLYR8as^:LjIF+7Hc.=1-'@g['c]/lM3dXnKcbC4W]Eia+Vtdhu[+fUJYs/R,pgr]mdc(/ic%%I<]o"f('j+aDlEAcG'YP-f3CBkB$*GgSagHY-jl2c]1ZOn?eGm;QcWar\5Af5f5E@/bC-VhUl;mfg'[9^Y.YRV^NtK"4UW;44NjN%eN+,/^gFk3i;,87.jMB:&rI3QH8,&VqsqM3ZC)*`7/F(!T?WUm3ds9NSdXE7q0Dl\Om8_lm\_$[4Z@g5cWid?q>G.+akHpCG%#\Y%81&[b[Gkod%E2f09^)e)Y$@RWpl1.bcTZo@`J1qKa]Be_'s7$$S`@MUJ';21?]k>[N.0b6_J_1'p"GpKg=?0I@V)8=CR?R=\h`\b%Oo-22ap66e<7M@$kP=-C*eF@ZI--ngc9(YQElaS?n[j1q)8);"7W&BJR<%o^hnOI$],)_=3W9CfL7:[XkoSq=Id[g<c+#FH?%+tZ%*H&#EoE9I-io-JdpkCE0b24<1kP_<Ii#R6oHme]8NGABM,/%d:^cF]b_rB(I9K^Ao>^T>#cca4Z5QC4PABU$p,Hfp=q:OuMPE.pm%^I<QB<D()jOM?06$I41RPO$c:1a(+oKj<g>7/2$$]rL?p#03!X]$!#7a$I.Sf"$r3@.'B$oI@Yr>'I`;jduc30'(cC0:T]$%?Y$\%S?RXn`=rpWjN][o#Im<$rm"TdT&07-p5T4[Kl8LI;NXJJV<C@#,C"IlY0oR=8KE1IUo%I]79>::_<>7fHJe6HlL<h=eOcY5J>fU,%%Uo?1bHa+jib[CGPcO`WEWNU#Qk*/c-X8mjT/k];p04M^Dc@6p$@/Uak+el&9NL&\8++D6$-4.X$6L:bc]<_FESNR*;7kocYKa=#%%)TZ,*'@]#q"0<-(Dt/5+ohETc]hep5*+=]II(6I4FQMkTmJA=]T#B_MNWVflT)8c".*bAY!:pDG][qf7&G6hC5K\hj;YQ1j<k=r%NO4bN,EfT!jLR!'%nInSqtNhDW.@A$jB_@"nU#50l+5([#<`mYc"h]i]uu[Zfk[%f(-[.\*h08FD_UYuJ%iG=U/jJ3#L>q_lOR)T%_>?ct8`AZ/We1+[PKfFA55]Mdcnq3*b42$=k)Ct_S^HL4G?h:4+acI9T<Q4&r=cSj=U:LOO$1s82t,RPkjj>;;h@=eHT/.fK4@OD%a+80INlL)`(S,V+CbhRf$2ej%!1NLO0nJ48iGAAai'2?)]ASYmpN,R`Lq@?cdGYRBhYk5-$YK_7q<cQ[Ao!k24?mCqX(P@VI"/]@%]6_B(Ve8lS$gGuHW/+9(aYB&pJ+u'<+G=O5T6)AFiC84XAm,9EqVZ</?+21!Yb@CS/j2#W9G38\N>%Q:Gu+Tj]/R=0g*l#j(7O'P%;;+r`n`TS;$<1stjQXbe+/o2@,2QBnhP?;<1bMp,]*^0r;gbM@gs<ATYmW1OaeXWZn$NQ.E1XZYc)uWEZ(d/eYPE#mhg@Er,kI)3%)go!BgjKEO"1'!5bEEGOas>Z_C[!EX)n3QWo(d`.W[rXU,`q09I/`e00gY8eXT\N$@UJZGS#a.+JbQRTnI1QVBtpEH/nj>@rg_m)%n$'2f\hWf20%60da=CJs]$$nZr'38`"2u,EI:2=Dd_#B\2Am?mdWEo_KfQc42,JSG%_&tjX`sj1mZ>'>ibi1s]/mU:?crm$0s\q6%cuT<;n(/e&rfOfDEPDDT:2#M$\NCV,Y''n"Y\KnP!Td:X]#;M2TJ!Ib>`5^(1bX\d@`^sBMPe.7ru93qcRrphV%2/Aa32Fg\aDTW%S"1XZk8/u;Gl/kV9jdiEf[90$:O5+diB+-=!]0D"1gg"BP5d4^8!-K(7ge8Uj@d5W..=nV'r5m=BYs1[?)UgG%i.@a8rAbGrAjC2%qKkc4.UN2!p]]:<(_([4KS8V"ak4jD8B?7m::TW#`sYUQd#@W7bYES=@)4E_HFPH@GnbRu,*1so'&dGlXLoW#;kn;e]pk#Elnp^5%\Gi//O$'DJ"*lAgP,?ONT+:WkR-Pupo4!CJjSZkL,S`?57aVoT\Bk.t\jIHG_KO7eG[h4hp^"Q@G=osJ^-nhs$s2usWk4[\Y4fMa%>3ZJihtpbc0[1[Nb96fb@<\FQDYK8;[D1C.GM^7rq<T4cSt6J/?b+56ZfjKKgLE#/:t*`X^<-0P=?od3g?\-Gi.ZXopcr*G!Q<<%%NunPoiHm68\1>n%Z/XOK0b/SH*H^94*(\h'1n('n1U_UTm7d2,k$+^2n*=u<hu/Bkq&erJD6*<WrmSeQ1&(L]*V&OCq28(=IJ'p\%_-NBLlkeH2pJXZX?fKm#^@P[.<PF<^MC/P@+#q5?(TV.q<h>if[=6br:$4;I2O,]rBr$H\T][P1Zat4/*M`eqP!TeTHbHq9&?.Vr%82#JaJ`JY@>/'7C$WC'TX&_&aT=fEq#ZYonU=R9sH[hDsjm/P08Z&&%%lM?oa[eDH.[*1sl(6O\qoKf_8]IKk4)BdW"^h%liIe?5%aPgX>&FM]*Y8G!'T43hN2s7.8dhpX78Y8E]-iH,$@6b6h(745;.X@EAi28iQ)9cqSq1ml&Eqq['^/kFaj($lZeFt4jk6C1*:\MfM%A.?^,,h"g]1;:*`'./3n7t,L;1J.o??Vd*fn`(>o_iR7C5XqbS9BTYcmOi\WdF<FTj+XtG++29H0fWj\RNP0cnpEWY^3ngfM-PWG%(Ucr'm_hKmU4D&Y1iJU>pdK<P:aa;W_fpmj*mU5kQM4[$aa(1DUfgMTSMQDL@3hG"ZO!FH1ul2j$B`4NWj"\9/[-3aInQYC?odMq%[S40GE]!Vs1&\A&:"T-m&65Ur\]Ea[NNSf3Q,N'WDLppLf.>,qV?]uiWFFqmf72FLcB3h6X`;0.8$2./\B+L,h&)J4K8g8+((,(S%5NtjpIH4!^0eSjTB\qXKEPYnu>.I;dJm"+0T\@>ocp`/k"EGPkpm3EKi=;>9L+Gism+/[SQ6SuXX`;12OlbK&EKPE2l:SX$>QRkP%I="SO.MqntjP7"Uj+:DD.u?>F/sta8"GC(#V9k0V^ID'9f)>Mg0u5$8N,Y$INbfYGR^Hg<)BSk:(]t"W-l?WGo&7d\(65)aW0<W:%`o9Y:n<Hsu42SUMUBU2N29!L$F(t8HlQs^=Z$,O"E)8Y+:;eB<;1s3;mW^1.Imhp\RJ3=.aZ'XK"9ErKbV5ZOl7L@$"A(5+:XBe5%H@Y&DPNKj7KuLA(37Z/_`#2:+fhn82Gs-QXOd\pG3#q3J?B4L,9!MPgYui4YCTf\^\<?XPiM24@3R&cV6RBU9UJM___"B/JR;(1p%A&/jSDH\j(9N07^e4OSlhca!1A$5it8h6>-\1=*unYORrTp-1H\B)P:BtWY\]MF`E:J:#l@[[GAR'^2:ZhI%P)`:V&^k*uRoofW#%N1%,l)`K0O'@UNmA]a[F.I>%,XSY',5h_\j5)[!D,)\)"^@<B!668Q[Gftp.^*I8GRKpetga/\m>X=KNhTPC3k=(';.OSY5I*Qs7%n"U&S5'#b2e#HFL82_j]i?-abV?`)EHVFa'>jUE]`g>#BT6NLIfBl>(OB1GQIa!dYN$u\7?:@qL[:F(9aj9c-1j+kg^[UWg,6iq-%8<S,7F=in=-nMJP0:^lA-:[Ng$7rM+EBZDtEa7m#>(hb-?m4JA%E,Z`;#Q3gZtWJ68-a02)62`1k(uqgUVDnE3LkItG3?SIUFmb$%G3?SIR3qpc%c%q;e6uX!4gX!X_S&Q):X".FUO-UhW2$nD>I/4`W'f-^9=&M%VN(4Z%C9rgW%[R8rU^9X!\GBJ[F_/ZR.\pIY;*Pa%"!<@Y6aL[HW&rd=Rro*.h2Z`0[8BHcbI2#2dAS-b*VpsI2da+:`Mb!hZ`RB>@+<<rZB\S%+O_07\Xcm4@+8Tid2HU;&JF'e5l.(m%9TQ\f<1`A[3b.;'GIY+o\cnDC[khjGF:0W));C>=(0I`Z,9sg@E!Am?:P:n)jH8<4k3SL(O\O\8CnqmOR.ke>)l\$IgD(YjGA(O&%lN1AU7f<`[36S(9<6.WY:@B_l;C56]oTO-sOWr*G]^[#]7`m!6FPg8<'VlZaXYSFuSbp<+JM`7D)Ge<XHhgOF0T![&*4q)fPXuS7%;qb5fA?7G-`^X.]1E+@&7m=fP;de"2+gC/6\o?Q$m$U6b$b*1haHh(#NCd+'WNpY_<;>[K7bH%V1<uaqm7-`$%X`QI7?#db@O&jj%0C?.(aV)V)q6A2MN(E[pS+YENNXelQ&)GGNYmgZt3@>*ZeOEit$#+m*U_n5"@loU.N:b*GfLRa^3(aNFD"LmTB)Qa<T7hQh6;GDe%DB'TE7c!%[?#4%A]Y@4Y$V@WEZ&oQUHB.g6Wg8cEk:":%1eTcGM]$?\O\O\8Cnqnjm4"KI`^[#hI61m_`Mg\GhUSlnYBA&6&%u)&%*2M:&<DL<#d)CVdDq.pUI"%P$O#0>^iSM]9O]d-LB0.f_-ND<Sn5gt\+BE-;$i0=`71t`t-C@G1I!+[IPqC4k"f&eO]YBc9:A.k0%A_,7i=Fd@c#KXb)r?:JD?QJU7@alFdXj+E\UV>_?:7Kfhf#s+klDl/!]\9GCT1?^[neA&Y8U8k3%uQ6I[p[_)rK]Oe^*lGkak4nE%0DbNSGP4IRcTBqk%SkAUqL2$!hie!3c+4(R/nV80Q\)KNK?+g8*Gk;t.@<R<I.\IoW]#k#)>0hbU>78c`@,G%.2\8-U>>,P81Rc=%?te9oF)d'Aq4?"jlP>F?fl=L='FZnbNa8Pj[/.(t'F[aP+:D,lHHmaj8)2(<B&/&9-O>MKVI6Wi6KW$\.2ZmNM2Z:_f$W\_92+2F%4K"7mE.IHn`s&=u86mW5*VNb*1^14-DU7`oO[?^qdhE3Kl43P<Zec37LO59oB^."cnC[n%EqoHU0:k75bu],U3X(.q\pU!hY#6s3%qQd.9%/B*9('Bc;dt-CU3dg&3$*ZhuII*Q<gQR6*7NIQ5/lOH+8F[aa?)D#6;9++<b,c]$k_"SGk97$XKK,IBdEP')Tbqq)T=iVe%N%.HR@1!2T-BZ7W;_Zk&_bS:<At9FYf6lY\3i!YmB#(O`:Yi;A'FZnbdeRCb"i3b+Z9o0s5F_aM8M]URUY@r.S$-Hn]=3s_ES4n1%"q)mR`cmi&_+#HrOgd+3VbDb,U+WCiI9Oj@eQN4@j<P_5jWkJr@=Y_0o@L,H,[;0ifkGti=cO[61T#p>duU]#I&)Smn",5[NNmj?%M"R/Mp@[f05f,<+T#Gjj+K80>]*j]%-o*hk,s*FX84Qa'iM&cq^!Y$^hJn(QftNB(Al=_q/HV`oaB=NQ<GkrZs"8_lf)m+op0I"r%B"*.Kcn:D6f(LP04-QCY0q:n_I#!i'cfIqicGb^dHA"rb0@ugfdCAO$5a'I#he@TdlcTb?Uh#uJd+;p7P'Bu$D.D-K(j4oUmP[>a%B]$d@M]!@A[Ad='"1XAdMi#N?\PZH%?0it);Oon\_Z7gT5,G@t1E::BZd-<`*&?j5@r[L^^o[Pr-,@M#Bf9G;?R$JpE5);V]o?1(%@+<U%@W'cIa'Al[Z;]Z05+L*qRA93U;o*a$(L243koq$T#qd9lT0O/bg^d\/,2F'l0"ZE/f>ifNBK>2<Z,@nclu<gpUF5;^X02UN%5Zda9)V%E#Lj.-GnL,/nDGLMj[_XqjpE.@9%X7i]4=nB)C>\iRAt,5_:;TiK2+<dqBfMNXUf9fYJio!O"PHY!jsp;r^>O@@bh25d%n.Z>aq*$L$KbH1nE'tn(]KVbOjn:$M7933srCdaTLorQ2bIY"4j$9Z!eH-gBjSFk^0@e+*/[X\[6]2]/@cpj`^^PHS:2A&oSE3iF%oS"`.HA])XTW^!'=0nKYNi_n1Nb1#DRlfO;q[2`H=RE(DErJ+mW$sr>X(Y6>Eina=D@]QX&oVLCWBdKoK45bX*h7^^0=jL<DshpP%T8KP1OU$k$U?;FtRi)[,Q)C%Qe,>hU5(>=m^D%`FV_s3UVt\!lQW2gkm:!;aB)5>3D['/):r5g0%M/tX3qLM'pp<9@8%qL$(-0UO%dcq'`Y6?7+8B+gDO-ei,8qFT].WXVC_4seWIANL5VjAjsfWQ)JgqdH(pgi#ZVO]p;bK&RHAM`d4'H'Yu,HsE.]`2_GjZB6<,ITA;%lN5+q[lHE0oF6PEan8CgIsc\aH-C]UcWbdp;i(N>^Q,U\8+lKheZU-Z![!l/hT!D!>PrdEqSD#.A_sp6++1lRhuQ3r1=O"QOsNmu%'UiP9%8elP+"Km.SO=A'8T;ks_K2@Dm.K1r-ps0U/?4:&8^D'Tb_V.g%W2NqLZF]i;nh<WEcKJsL.*2f./%O>]G!IiiH^/=lSt"p%jB^5_TbU$mI<3-o?@'JJ_V2'%fiOGV0S+D>Me=,]dG(3!`>#N=]YO*_lpKt87b,7`IX6c3ccSfJT%BSkNDAW.Bj/39UcpF$-TT1_%2.SaVlLdU9AZ8P(H_Y"!Gd*"+%/9C!hK5RLa3KeW;tC>pi>fhu*bs?=f]YCRH3toTajF?$:S/>a'T!(eP?PWq3^a:/,E57:7SHCj%I)*?Tone"G,AK)-"[/%<c7\END+Ki-D+)mARA-ftNg=eEg`RK(,8<Th)9T\2]h8,ejfh&eAr3s&US:)@;K]]qe=8/4"s$V)0%:47%2jYBI3Dqjn4[3And@U_`8u'PmLP#*\G7DPnch+k/biE#.4jY#"Pg<1OiP]G%W4"H;M\CuN,]>B15fu6+eY"+%W?'m?i)Y&n$D_:R%Z>)"kaR\Y!C9cK_gV:#h?_A-W5qCLBdm8V$dB&bGoj&G99*s_?ME\0&*!I^BD,.35FiC8IlRV=b\lL0TL?_AGq7DBT\iSWqrB`NB%?g[I>aLGEIar+CajC/N7nTk1RlPnD+_AtTNqrS!mZjc\&_nhH'7tp](g:%pO8I$H:qSLKomdm?#-l.(lHiSr8kmWkUcg]s$/df+-%"rQ=8l#-cESDJMb!;ZQ/AFRJS%!ul_rke,h1WW%ccG8%Ue[_;^&W:P>1Gk'b?[7,Sf]Tfg6SB^jP.Yb$q90oSk5/%GnX!:Qn^Oa>%T7BIT:&Q=f"p];q;rBr]Fepfi/r+u;;id&W>dUWB6Jf5$`mm^tYAcZWju4-?1DFqiVrV)n\pX<+SeFlY@5uI.gfYBl.Wp2t-Z>,O%gAdB+:s==Lb"c3D#n"?B=5o@WO+Bg*QJuo%\u,_,?m57Oe_\:6:XWsk2#U+3UUVhW<"t*NZ$rHjaM/!6?8;J&Egg%l-LdF/a7W3*%:%!PYjr_M\MWB$^E5pbZ%h;.iV)*)jA2AG9$DP-kNm0$YD'UdV/emR3?Wn2e0-*^`M"?oS^3oP82^P*1I#AYRMoS)t(Yj_RmsLn!%O"#j=MFS_KdgaQ!`c.%05,9qdZC/OC:>'h74QBD3oPsAW%i$B>/LDN&7.m'7oAP+)Jo4h`qc)ehA"do@9_lQOrE*4+6m<fs?qbfC%IeaT:%+$:GK]&`?cllJl*jul&jA6$B=1N6e*eS\2j]Z\dJZi&5b"8JIVl+hoV=_@NVUE`M>NraKQ;s*(FBu8F+eQt'JP:ROi"<9L%kMd@I.,lg`(1"DdSGQ_iS:WP9/&5TB0+q'L'O)S(?>qq>-`n)0TQfBNV#?j'f)C2Z;Vre^oS1nR#.aNp*;9knI4oaln2odlM%2rZ%0)V,k9-*M%!&p-_MqL`9)7,Y9^3^%:#+q*k3\3G#\".C?mL)!SV_))T"R=0S!"ML71LNoHiK/uniX7.2MH@l=n^ChmZM\Mgr%lf:%M0t^mr:trYA7Oej7eW1L*Qkq,'Na6l_gI(D0N+ocJQ=MmrR=-=J*\AkTmZXRBm@7#7]?<tM'Qc+IGrZPalqM1lBZ<?7OA;'n+\'`%N"qn8DgiNNa"l*Xhp-Y(DIu"T(%O#YrV$o]p#!,tSPrt6+k8cpfgnXu7`B_'0S16]OD"pVl5@Kdk_TO,7>C]M%*fWF\s:Q4YO80p%43Z.;b/t=>R''i*`j_MlIDJ"VTuGJT$2[Z8KN$Hl7H4]t0u7s!Pb$b8$X)d>hjufCjGHT/DW<ghoEA`QZ,"Cbl\Pe:O_#]UkH,i>%r=B1^*ab88<(N>sE8mSH?>kCrBI)WYFaOV4PkY^CZ?M#R[sZrL3IB?pG=:8J*unOXK=9UOk(G7b;fdO"&a#`C'>>-Kh?i%LbDG'k%L/`s-aMTUDQW>u!llTGDOfRc.E/-)*L^?X4RlPX;f)7cak`)eAkb>Uc*8_PS(V>XM&@F6'f#I>G0F"_4jH[ZWHt1'tI*=dU1,iuh%U9]g@2d(9q+%u8Q?=CM[:"F][bD5YJq=ku1]g2uu\Zg[!O8WEd^3t^UF<Pjj`e>:Kp\p+h-9Tp&6fWc0,2N,Ee_06L2unjn'hLu*%NF_T6f"88=,gEMTqa43sc"M5N>uG'&/_0j24c+."d1osEIh&Hu$6OKkSUoP252MD63qYnroCGB2+<<KFXdh1b^gWb+=DW0G5P)GK%8:X<PoG;Q[3ID[60^gf9#(L1SBGsAod\l)'juu5A%MSWWcYkp?`qP2@NH!rOdWjGI>id+bLaWpME[8h*00`NKp:Vnc>^2^%HJ50J%,C1&'8YpaHVcXB%$F`GLR[4=?:QgdCT>bkk#8&q4=h5HEicq;^GWUn('Ap>4>$BcE)kSn`TQl#+LrIb4%k_7F)[397`UHqVbqbp8%#@*O9ln,_Q&L>J7,'>t6A,bUK+mS&3:R/Uh\RgrX:*f!hYAi4-&*LY>02:Esn@/t':HT;%Y*:R3Kp=',&J<ZMm!),]jCQq1BncVG%X]_Tf/^a5[r'n%/6rFPBasieP=71hs;W<B5i'\<n6PlO,/u?`2OB5875.mOK^)MZiGmp]S:3Td0)tf2+dK;4B.1PYZ74p<0nbm6;%+]l8.64'FrJs[Le[d6O<+@1G//0rUR8FUbPRbOg3cX"`.jf/)GX/c&:nUcX*=QJ@0ZV$;pDitCo?]nWMjIMAs1FZ?jIu+OGo-RB*%q3bY^Z;s3l1%IdWa]\]O5(dO4OCYJD"Rk[2,U?MC+G#aKbX7NsYt7AKKC>85_*ZM!o4(FYW>FU+2]lf=iImZBiR&\$$$.WZ/L?*u%8b/GLJ=A*bOh2U2V&@l:hHXTP,F&lknsNsj5MjTEI]E#2ZYOCB:V:bG%CZ-N&!OB:jl-GHU,!rsI^2O8pBF!mL%4.qFkGFlPEE=C%!-cT1I(^Roag]!WSn:Jm.9n%ji7nC"a-Yr99_?Pu.BtoP=[*\<kE)b_NNDSjMJ(YH'of/$Ok*s6C`sQsg21UK)Hf9?EOaV]7b3Vh%?kus*)Hf9?EOaV]7b/@``s0r4qQU<.R!#/9D(O[a3O;E9aX%@)Ok]qSqYgqq8'\-@]Br_]\iE+6pkOBq3t,?i(nXq%6hM)Lr3bMY%>)u,A.5\RR-;WEZ7b'-1*>,jK.gX$;?^UXr`%14kOQ>+@&FK^8jIR,_BW>%)'DRfBE6jg0l/LC`Vh$Ha5FCU;n.)2LN$Pgl0RLDO%J=>%CEd)Re+R<BmBf&mtk87PaSlA#Zm"<afcdrd#55e)G(MLi"+N%2Xh-lXGhR#/#Z()T%UWK3:(["CgUZ@Y[a,QF@=Z02NQ=XR'%hFC_;SS&f=f#^5iK0I;\"gu\6St.X/r-(MrQB2Vu3t)h3X@s$FN5C>_A:$e&;l]fPV@XiIVi:);RmUpt8`0tHWA<oSY<cl(X-\2m%&9J^oTgMglEZrYimrHEPAKt/Ibk>T$Sp5r@5;W0E2dWm=bM*NG2uuaZd7\"^l=.=59en/CQeECa8RD4Q1X;D,qS1kIUnaYrZuj=1%8cW9:4s3F'2h7hl!5YbEU4LXDZn$Y\$m4D4384K?_sd\E!O+/+0FT%b<n\?T(krP2[uCEA@JBg>/)(+2_sftLkMItD0FT%2c,-mh%_D$@&qI3e3@2M2d*>+oFp&kq]iIf$b@fZ&6PI3:W*u;057KEX:R2=U/Aj@nZ>6&(K5/8U[[KR4siIf%n!5^F;ptprZD%%Nq_Ztsf%!JFnV!&Lot!JKFq_X;O#!XQ^5!REEB"V?FI"0<j%(-i^k%rh!,D#o;upjcPa[lJXrZ4%'_IM1B<&;K-Gm"VetJ1qBR?sILU+:Q-m%3(qN)!5^F;^c>N/!XQ^55ob<"!XQ^5_;R9]+=MTF6p[&J>6&(K5(J?l/V#M`*rl=M>6&(K5)?fVG.]+.p*\T15T#4d?t!jZ+:Q-m%&m*d$5T#4dJ/>ODJ1qBR&BF,F+Q/"FCVB4'F^*Gj!Q>"Z]:i8C55DN(lHa>r>BWAN&O<G4)etQ:_X?5VCT]m</'6An+5e+OgB%XJ%=rhK"",Oqc+f9o'p]_;A!XQ^5Jb].W`g8Y7DB1tZ<^fbF=Z:lpKT;JSr&/83rP;oT!+?^.3:%%r%)[jSI7i5u&;K-G@&o'>OH#V7%^$l'b(Y\us_sd[X^MO")@JGAd$X5>#HJsLoc2b^8Hk9)HZ4U$/(Hu5TYq(>Y$m3DD<U:#7$mf68EG&&I@2M2Db/abf7&R?Aq?*$o%])i8Un,ZRjD$qIEfr;:%"t$pq?as"TPkSD9&O71f&$U9-[K+1kO[4E#07Y`u0]CMagB%Xbj3%&H+(0#JD#o;up].?$[KR4siIf$b%@fTpS5*2=@2?aZH9(J8eQllcL>6&)&WuN@&*'cnCX?XMB`jQ$^L.__s5/3?_@_MF>@g%JT$H2f,&&c)a.=a)\+35n"2?aZl.gQEn%rXejWJG=bIpk++lmmfY8DZ1b$lpX/nSs.=i*sBM("N2Ab`#f-#Il%3n%Nst"#`(\NM#U``KJ%rS%g(`$!oa^likGj%dD,X4J?Tgj%!Cp$grZE?_+<^Y++T<K+r[SNkgHhe<+<^Y++P&hDbZrEq5'[Sb_qmBU^Z,Q3T[kU/O6?0p2+]0J=Ulng&#8e.MHt%0iM]it%uM)t%TA*XJJO9d"FB-blJdNJq38?S*.W@oZX)C'/.ce9^)R5EbMV[Kh=B@lYTNHScXo;2&ecV3al.-miM^7!>W)suLMM9iq2]pC..b:2D%@]B(n-i*dKAFVj#h#*![r^7M`O"@_!.!GR1@ZuFRm>`aG6bS+]aUM1[8&a2,:b:JVV12IGN<dE`h"FRfn?%<eEgCXdrmRL:T5KBG%"YA<9;5F*M/Co:&NMPTc7^a`'`95+6O3^\qd5tuUrJMrl?jiGJYJH5N6ln$(4H^;80^Xtkna="D4K^QYITA*uo6^u7Qn4?5i+#e,%(]Q^HhmM:OY&*n;qM/W8b;h6]7nK$-S9)t9VpTp"qV/Vo!@/glOql'EpZ_B2j6l4j/Q2cQ!`_*j<UGsos0OI0^SQM8Y74h)Z++a0%gK/XHG@1-)O7UH$5,03m+6EfV_>)a,aPH.CP!3qs3C\"k.n>W@e!t4ZppfmZpFc1.bGD[8VqaEo,ia3F%;5\<K6LsHZb'jaB(PNM%K]C\.^1#PUk&.)8XcmC3iSd"g]IM/6^!OGp.QebW]ZRsffNQ0.VW7nDmY#pY*hIUrs&sN>jB,g?3k](#LkXE1[o)[R_W\:3Uc!l>%[Za=)_n\Ik%@Y5Z%["`8/ki56JZZ2$fauJu)sEpq=-Z"h>QEDdmDtn@r;HoQ$aPuFO?^_:$_%#NjA.L#,EkhjrY0E1&627erY0E1%K^L%(q,>MbJ-?mU5?08(p=P;];F+&e@e-FVC@"A9*ViWm]jN0AP!?WuVSZYm>Z1JG:=R<tg/;\-a+43<K`&sYnfQGPpG"E\9nt!B%%%<M>jA.KP,En/c.HY,*"eC8C.CLd@[nK0g'_=';nYI@XMQmui`6s`3`F]nup_;dbE10NHp4C")%J`q]%m]U;']`%Ep-S'@&sPTu%-aU!tqG>ab,PD1#9[*XC1QNPkZ\mM&q.XnZF-7VV&:##hdbht6XBK+c)5YgVIc9gse3AAlgjKgjW3Z0NnC7%*TY<BN#('d-jR2qg%%YT_cbQ0lo`>R_"X0A88^W]Jp-d!<@l!jK`2so'%]/R#k"&4g@OQ8HCg@b)LSfJHta0$5>dE[0O&@R^?ak)!3Cp]2?^s>_#6tUjO%D'U$5+q\?L<mI"?.5p<R"G+tReWI^9n+np$T_$.uduWqfpl+'f:>]\/3^1[!#?QdarM;H`iI!3dd7`8/]Y@74XGpI)4IO4@rUd$B%`.M[M]AZ\iD0n\,ZBRQ^]259?Q4b_ifkd7_;"J#BTI]`@52g)o\`iq!dX/sr6""uam6ij^NI6HOHa]h0IH9jPD]eC3da#>R9t.)4%#Z%ScFfV!Y#BC2J3qogAVC^CO]Yj;c@?@P)pfTcug`E<$Bm6\JE&k9RbI#2(Wl@Zha\:m,f]2!&TgSVcram5._'XL;@HVKg2TjK4%GPcB"-?9l87mGWG?+q2g)ne?,Y'DJd643[OK?2*+GmXMt?_&id3P/q-gO-BFWRrV*mIlt,5>O9J0>/WD[Kl?$bJN</qS9o-q,&4e%Mf=d#U(K;5,'68m$<5caJ*`#<(U":LH*Q?ZKD7p^AFF?Eh<pMcO%+E]C@cP<f&GXBR$"RmdH]F/lf.oKV]V>?/*5WuRj2%bca4L2%FNQl#r:=7*3-[22VC?a:@%dgD"+M0MmeT@cp$D=:qpp^RmVV5u3m?__g\iZQT(l*1fB>!eK*W)adTgp:f6i+=/,EtDFZ%lQ_kpQ%%//JOLcY+p(J%>#lbP.j)kHR$].HI+6)`VId8`U,?!E.hSM5iJ9DpX^:1YAO9;J9HQFS3!.NN-H<X,#(OZhs]@,?tZ=.,LipYu1[h%eYAmT%7E\g)gposn9oInLLEPUM41gihlZ2;ZrlXkafH$,/Q8]32))SprPZk\);MV/A+ltLDLr*5*q]2F-$C7*ea2]\3mu/@WTQ2F%.\2;kcb3GN7m)&S\'0=XG3*(IM[2Y[H]ic8Y>&eCGqq=P/bIoDYVj]Z%@it0=qO\/34j?$F4Wr<+*kAA;`^,E28:tiqu2-KC]=9Z%`rSCATdGU?#feIYfD*EnrK_VpCuS-Bo[J7=i[HY98mP;W9LX',,)<YX]7opI2tP4^X#MU7bjOSHeVL11@aU5WCaWGug#[]1,_Rq!%VR3m9*ehJEeeUT/rc*SeV(&fF0>1oCl^`A3#bh#kR;?@LCISRe2am8mFd>OI^G3g&Hp"[oO)fP5.$d/MI7mQG--qos[aGaSYmcM+%b8Qc_Ak2UKojqNe?f'6,q>.RWR.'6boOl6=&b_E8:d8J`F-XFSfPV)rigu^*d'K*eHP6:s4-"WEUGpMQXh\'nhT,`Q[1Kh'AuS>b%3O01k`bif5.BWkil.K]h)W2jE]@SNKrYd-\F)F\+mLoH9lM18;9`B::$TECs4S?JU]Y@6;S/8(-2E$KBZ\M%10_\6;Qh,isL.P\e%Cr9M>[Jhn`LHQ6aS_]u.ktGttbB[t&lf223ProprR`%_;hsV#K4U5MW$]h!g]fQVuTT@<n0e^:^]ML'dNF':*B7WXAWu()rFRja'%Y:QNsn#5YaYY_4d<5r&(V.-@>H^QN-7K4'Qp=[^*a*>CAn34MqdP%J@3R/t]X)O.X((J#Q(S?[g$)i'Q,eIR,K(P+B?Sc'\L$OgX%Rk?<ED!XmR*l*n!2dXL:M^LNa*6'&j3ITF@G#]Hj)o'Pm@uCG0RWc*R!Mb&<2<,K6p!DLmM!g0r]1]2Hp:fFZ?(INGBm.OWqb(aG%="kj6D[F+=Zhr0_qQu9?f<:a3;,EFhpY=Ekcr]a`o5ICA"dZ&VNko1QIO!kSP<;YO2dqlQ1h$YCb>V9ILE3gggX;,`o&"bt^\(ua%lbU#&8Gq%kD3g9^Q&SL%`9PkXdh16Qg*@p^THg7aLs5hj.=L]o_lV!(>Wj'#ZfJk>+n;+`pi\*pq7g:<!CC8pEskUVD>-+41$Y8(%dZbd"&XdIiKL>oa"I*2/&eYZ#&W/c_<C3D\3[0cI#RUHCrR5JPOD'0)?nGW1KL>oa6mgYH+jg91;,'@+,U(P8*Drd[BShgaJ<#/N%ga42l!$*44lEiuN1dFR\f"s:<82NS%T[Q;uKL>oa"K[NI#mjTn3VRO):#h^h;W"/Pe:V3_"*O3DrFc1dBpD)H$7!$H1K1Y*+l^R[%jmL9hrm=R[G4^q(Q"PQs#\!K,aUIrPrZO$!KP*U>kAe:=f(=7;#h[#<aPG^tZ;H#)3bdG'8*o5^`&qbG4>$NaAbY-HO8?,se!UW3%TA<i4$se-OS,'2$'.Ze&R$hcLp.:_FiV,X:3lM2]7*L4S;!Q8ame5L'&UT>s4m(XJG?ViZ.`f6L]r=>PB;#kHRt6n[r#2SQ/ljfo%ZcI@Zcr49<<2.dB3T2G@((q`Yq=0>5G6@G@I<H^UYAC7[Hu.rO1jHAi;AeuF48;[.n,@m64?3P^8(=4sWc/_$qXAr_X6]>8T#9\3%1H()kAAruf#2i,+%JWbZqT'lSrt[6Rrheb%R;BRK27/K-HbF+TDdWGMa+qEOAt1GTF)!350B/fq+.UW:.%J99OB*p)DXZ]?*nrHM%.0#Wc&Cd1%pNnrVkXI4<K)PF1/,/?_6cs8sMZ&0%R-Vk`"n->kDJF9VU]3sQ5<>?a^0&WQabjrlB(s[R]o]'0O_IXa-om^oaD9E(%V=C,2fH6p`GjMUFVJe)Y$'hj<ISsE'Ea>u3_+k`5Q2<`*c7F>IP*3OsZ+"5gZ$sGu)?e^_E!LAH?Ot`_/a#aaE*'q:`EL$cSUYo&%?51%"'\uXmcT6WgF4F)MfI@aO/a#V49_Wc'oQId8++^mVXo8sjeENt)Q\b2W&:mWX^ViC)++ZP4[/*G6.ibG8?R!XRi9EQVop:L*%,>_I8WW!M^j[V]Zg$16rD<FE"ZLp"!P0&arQ;WA6-&t_EhQnYBPL@@O@;Ss7asQ[cS(9JT+"E&KY?>^@D.OBdf;a*Y>e<B"4DG"8%p3"7=^3eOn1]d!^b;7hD/@Qnknk<o,ZPgCQ#6>+;UG_+7$&YuCfrC9Sl_I;m$OssanYFZcmuu_I_7,?82u*4^p^&1W/7sd89[;Db%;ifp@W.`(eZ1JY1ZOr=SV$bN-F0WC!`cMoS:/L$s4c<hR5)S<;fFKX3JIf(KXO+*bNrmI4GaicY6jNue<9[kAi\'4A`+%Bb]3GZM%;O[uoACZ+^46e1p@_cm<LT6VL`NfG)m4h_q/N\;WF/@a\bk7'HEA5+9oLtb`X,[^?l2?tS$hfZGGP.pG^/!^Sh:IIhE&u/iCZYOZ%:G4=O]G2X0NmPWpMmK^(qX/u#f2/Ji75BI<4USZ2H$k`as-[[loNsVLC8>%b]3+0kPZ2G7n!eH`/J^kE-7?h*MlF8U6qLmfekk.%%,[710C<bHR2;,R7<9mqp)AP+Yq(E\`Tu$'Ogt98&6Urh:EI*J<Ku_mQIbC:I>CPUST)"4[7'.iiaONoCa8P/1IVNMtjl.2s6#-WO%>OF$n]mnlth?-+?_r^<G/QhiW5KP*_Y1P'H9;sWLeX#tL2:=Sd"nBG(qn#k@@s98Y?&[7hG1]0crKnPTk7@3$r6s<Kn`oMWe6'1Q%9<Q0e8[C4dPWS)jM:u_MRh\Pkl7sP%Gg@.=gg9l!jnK1NO$gUQI&#Q@b/#:o@qR3Y[Fm9ZAe3?s](Zgu-elJC(gP4C/bXS7)@8+)%j!T'/As+l+Iu3IDB+M&No=o?0=.?9X$oP!E(;8I\KqYcV;:GnUOD_nXk6eZtf0I-i0#uFheZ)>A%CLL9J,!=F,SG3WV66NH*?bVh%*I?KT_-irG=Ph\bah8nrl\DMc]#pb-SA`I'\IG4/n07-LRh`S1Qd$m5d'nD;=D@X"hAIImIcj@WD6W0Wah<f8I^Oc&$'oYl=uXt>%3mmB'pR5utM.BPeru4!nB\,Ccr=(#Dn@/=[-II"Lr0r-d't_,t$<0_H8c/rG:c1T91mB9%T#FK>&oB!fJ@##*9qq##$.4U;`VF@1%8HP0;IS>r=4%UX1P,kHO[-^4P+1Zih7,(9GR;;t>&j_]!S"E[1VJ9fXD'qno#EZt&e[:bi_4C.G8s<pM8O=o<;f4Mp%EXZF&oB!f%A?p(EX"ufJ5MiR_8<SeAf/dUYD'qnCrdLCpM7/TnB]oCU9qq##$0]EY9Tp<,2b>3WD'2QIm3E";L8pjmd<:\+A?>'o8[P$6_.Vk*%BbG818YBPIO(f5D-V<6#_DDSQ>Xq_l$sV6uMl0.RSKs?>2ANT70hF^2hG?:.,"e#SFhRdVg@SUWl*kEVDq1_7@F_5/9u81uq;LYK%C=@+OVZ0WGVX7r,-1lfd?k<09D>LBgoNS`f^US%-,i=F-Nn.!iBKJe;pT^@=,hc"VaL"c@W;.\FdCZhfR`+mL%l/hCP9_V6KpsJ@%e<F7!Nh<:/PNKh!oGVC/7c/k9Mg!:pA0F[05+GpU;jp,/8J3c(U3`7r6V.n2AuXpE`)mq)7+IJHE:'8$51'!$QmOQ7DNY-J8O'+E%r.?N1)(AK2gZ4UCSC25@rdnH;>T2+#enCC5B;J3Ldp>F/O@u*j;a$&-@]$T19YsO?XWEG8Vo"D>++]="#H.%6Cn]=,G[*LG_cT9(%VXKj<TD.UeX5,]YkSg^(+s2(Vn3H\ja`BGR22pO"ImL\!G-1'.L&3VuR:qR;h)D'R.2/ujX,37K_:Rrkd?KkedgP?JjG@Lch9iLE%<c;%&:?qA@`L=Fe]]pr@Do`itX+kAqqGS,4@n@qMFBc(!;:]f8eXu-U)H!T>^$8DdBaqM8&ube/T@UeqR7-_GqQr_h&RqMP>!mV>%D-)4e:M\<[R7R"K`qq$i;uN[ZXc^^`5]!f%CBU*,#-0uQ(L?HRo<^tuB?A`*5LlYh?s=sTrMdNY.<?0VY5T-`)RBnF(MgSX;ghh:%W7-s3b1^#6RRZ,2`i9-K=8f,4d@'fBEOJpHWBREr<,QEZqGVfGK>+03Z,)`?pY\AbG'Q>gcl,i=NQCC%Q+!\fCPWn/m8nf6GHKs"%EjY.EBFf`Fg"Rtn-XZ1_BHQXQ<9@kXj`9A'm#%Ch_.l!aoeWtcP>SA@g9W#JP?T>MIcYN:As`o!C!Y82VfsMIdeLeMo_<m\d;J_g%2)DTAL$JU3"TA#'1EB#emS!Can)>I!7>oMbQ-B0Sn]=%u*:8<g);7F/f7&agjK33.BP4Wqj_.FN>$'S4-OuZ;_<aLM:0T*:$TlEl%p9AQUW_DU(k!.IQ)V/!?c.8P+BdR1S.ugYL.5N3$)o'V<0/M$%1GZJ&+>Zp#!g@.aoWuihR=>;p6FPEi.7IiZrVoN&jSY>^q.3$E%R?9=nO`RktQPldFN9p3%(C)6N1(7s>WG\!H(#fpC[<DeP4u\RfJN[-npFYs0]B748\f^`cmf2(SU;j#hcQ[P;+*q!f\hbFl7UOcl%1`_FRDTnZ.OtneLpTCH\P`^g#AKV14g.q*oBWg-qMqoClZg3J)asbbE0@\rbFVL>iclndDqK_(WeZfR`fPV-d)<4P8#<CfNArOb=%[7iL$),DnqS9IVo1S.pm3;7]b3TK@8N!HV-jG^"'0b440a;Ic,A"<Jq0PA%I`d$UNBeEmXbi#XQZ%OmPRH99PfSO7",F]q!)6]5Y%IX^t@:<'eOH)e=9QHTkD%;f^9ZbKk\4a0MErcU':p%+Z(JKMIj2;D<;`Jee)Y*s%*f4)aEgR0K"AW6Yi1/loN(`*eZL)]HdQncmS%>]K/L@+#qQ+r`\(];LlJ*k_A9A%g\t1<0>-/,>4^rMJ:U1mQ[d%m3N%\]bb09%DHpL[@n]Z/@Z58C#A[:a*CKC%t?m<R(J7+p@ip%>JJfd`G,L!#3UH-@FHGPO6\S\pKB=O8;mi5-^Hk0&gK_R5E"u082ODM:a%P;KI[uh:PH`C&?p*GW"?Z>mG)HJ$Af?<W&C7L'bV`X%nAJ4t6=N=g>N<h(+Yb0oX3N%fKuAcYNqF\oKuAe/9K!V8,Y!HK%?gu2&gK`QG";+&8;mfd-ZYALL_.$qDZ>ujX2Lru(_IB[T1bOY%8Z&(WPFXO@Y%U@[S0gUW`/'LK3`JY/#SAr+;G>qZ=&2kg9UZ<&3R471A[#^DO;JSHCj#;J8F-@gd\0"mFtcUK$Af?<s14KN7_RRA%rEia&66>cfor/Me9n<Y.YnrgE.TAt*;B-cOSdL;d+i.<L0GP3F6HH?(K*mGI+Z2?1[RZ$Nn'06$'f'?C&,>kI8o_VY]i"\g]@nl4%%G::ETCY4C7l&b"8_jO6&aelD_>>&Bju>D1YI$`EKV+W8;E#>:,SMi1RgM;&Z>@6QVFQ5o@Y=;DZtpB>bqZR'dS?:HQtql,f"BC[%/n[Sa*pjt@1M>e'8=SO.:eU2&?/>OBm\6h`\tct/J2G"ohs0JRc&kEE:$_I>BU9scHn4*F7V"OEOd\P(9?h-k.U'?#*!p@IIBT]@%!(SeC/fH+(j7@9j--@ms,C=8eDj:+Db]X*Z6R-g<pLR<=>rjn5ao:e`B1[.i13O81X33R5CJ+mFC!b7h)QN1*1W\Ya'?u[mURU]o%?e2AU3_XY<g]&\=^n)R6I(1$?B3g#K>8c8C[h!Sted&(2_%&9u2<Q10_P2PRIMjMoM]S9'1N$+i$b$)+L0A^nh2e'$dd3EBoU-_p%Z1N88F%5]*In$60T?LV:P"RQJ24!.&?EE:c7/m/rq<_^%c/jo5Sa/l-FF7qNjNa@?lXudO5&+V&k_!e:5Le<`YOPta\O(al[Hr(j%PO%X%Fn_LpULgkX^9Xm=FtVN2`-hchFV,$3K=0T,0WkIS4VaApQ(Y<Ybu8&q<MFmEX*#$8hR/46&ZjPPYZfPf]fq%u\d5;r,K]Qi%XO]foPHE;(Y[Z9BlDmnU<3VN90%P1f_)ciW$2+t4ejU/8NiIL105b"\,?V(++N>&_,8fT1S*M;$Xc"='^1@*H<pLqHpb+5k&`!E`%\%VkUSZ/hGP3jLhF4<8(rn`cO8+Vm_+2M]@PrN-6lm#WWYH$:%U?+Rje[c$@G&h&?"KSAi_QWlB+%iiH7+_Mb%+eRa&^aW$_.m6Y%C$0+13k7G+s1ss?F&HD`,W@#NT6*s6c,Z*fG0Ut^[3%V\9r'gg3NC=3/u`0"hMQ>S;i>=S4p/^tHTA.qeTmo_+UZiF`I=c2)_9P5%R@DRccW>/H>:Rg=,upKpWm)JPXr==c]/J#0Fl$f7\8m%G[c[']%uOqBX;#D[lD:Q+:(5\9BPVfDYN_4Wd*<W%-GkN"fdj`HNlYU&%8#/R4KXo_"%F#Q^9Funn_@^M0%1s=A)KnMPF@-,aZ9_!V75k?HlR!U6(>TPIjD*H^BsF3hEd1gWn^49S;ULE/U$>pc\04bBgo)Gq%_[X/jXRCm#nAGrQB-('HBugm#d1*)!)Yh\lC!dAun+HL_;+IEN2l&LXdng@LIo2fI0]%9$'2Kq]-CK_r5IhqBnXsklUd[4qZ_&.[%6s=\"lLa,;k(pBXS>-I5'95VAmEGSN.leKU6tE-BD`]qi4tVZK<pK$$RLYp=1a)'m8jq;cNK>?D2]\tJAqerjAFo,n_u3WJU+UGj%)ODB2c"%b0Fj9U?_57pIQ0YI-FAV4dQOYI]P_`3H\-5bUR]DmO0&AnXHq@Dh'l$:ncYl#hY1=2u6J[cCIXAKhG1aoNF[V;AOR.su%8k8ME^6Qg;f+C0/Dh370X!;rOD/fJI8fc;(q%hJgal^'6]9K%t:9Gi<\*S9Aaf0DNO0[LB?;/IZhtu\4VB^DOh-O7;3/RS,C<E[*%j%H'jHDK>r<un5OIf$4QW&N'84]60k5"o-#dD'g4:8K1]A@6$T9pkWKG!qCU>BITTee(&c;5&_:X!;qdgrcGF&O"9ScXbMgL`Xl[%kMETqF[V:rg[W51lA2%g8lkg)7bR0G0YB:6gT+npMqmS?^O8.)dWU(d[Hr'_.hg3HYBDAE<Cf$_]ioS@Aj=uHp1i:J,#:>Cr:U>0%&L<Iq?7ie&).o\Lr:XmYm?qdTher@?mWAcgc#9eOh9PVTBRY<9m.RAj8lGKPe[!pS'm*@LmFAMsX%.Kja`"AKh(F&L-^`dt/\><L%,USr:?7icPP>+*Q^"S@iA<Y;WYEn")XL+;bgF%rTcdDOm$N8P)@]ee%=3GJOZmXQ)p1e%)9]Gm8("qsjf)r;kGf':DeQ<ej!`(_h%]in0MXCk.7c<b'W0[@gOo@k51'McZoMmD)?D4>3fHSsnQf]bK&r:XlcYiLr[b\s\Nh9N9`7.]15FXt"^r:Xl@2Uc,a]2bI1M%Lo)%D4+LTHaT)[OdD;CIeuBqm.O-4q<c_<6a2_PTL**U8>PNE._iZ#G'bR*$5F0u6Kf,!KaLuOY>9kj_SSXqOZ4'g,=8og;=[[WN!R8s%Ooc@2,=40=<2blq&X(856A<@6&Fs2VTL**U#V.'^Va=i\#kVUU:a%P;"AE83<(MrR_*5=%r09)R&gK_RmD5TtO;JR-R?*jT'iH^2%U,Eb7PoFFp$Af?<d#b&7,"G$,`f^B<;POn@_Gj'b#\c6Chj@RXmn4!e8;mfdEL=\DO<<a;,Xd@)B"*n/S1RP\0d6aC85c*IP$Z8\%WK>c$jXr@2;]u_b!aim/*N#!s6=T9bEo0cf6=Q;(A5f0g@RLKHj:nPS(_K*tIMu0VN!M`Jj:nPSR,=U-qaj[/YsQ4<O!RSU`!j&X%10Ch]8;mg_L,XB-,Y!GtZDgYDYsU@3%M]U$6GOhD5_[.4&C,SsSdL=b$AcKq5_[^eVNi8=&gK_RosogVOJ"mcF$1&!-^H"m&gK^S%<ChZJM%Lo4kY@9J\Z?S-b[aYG6=N>R".AfgZnp$=;[FSe*)koDVOCJf`qbgq6=N=gP[,_7+Yb/dXEB^X'bV`X_AI*p<(MrRO];IG%VF(:0Q(0NC&gK_r2;VB5hZaF!+_mPL'bV`X:k(#".\s5Q.krM!7YDo].0V1H7YG=#TgE3V#i]>C:a%P;7+a3\B8+j]$)sj-S/`7V%,=6uGM$[*(0d7lNh\)eQ@RQ$n(JC8*M%Ln>T>Y9>O;JS(FNR7>$Ag>QTt<jc$Af?<("qfm;'@Y<K[.^sW";"KDEf<h">!=U<(MrR%6#VbtW/qi.,(6_lWK7r/6;O[$'f'i?%CJQWI+)As6A<@6OA%RG\l/^uA.>nBcaW-uInTH^Q&O3<WK7r/,-..[9ngM,:k_@n3@Z:4%]2a1d[82LpLlb:g'e6$HQ.uoc&mM]1`2Si53?a4PUd0XPfF.%U.8V1m90kk.!Yl=m6>5OXK*mGI+[K'N@4ENlKOfP1_q-(I;PR!*%E`@iLAa*N[#f0,.JI75G+joX(8qk3>&3e'rVa=i\81'f5'bV`X\Cu?$<(MrR+hocA.O7K:+DRGK'bYR&C?-\K981m@Gu'S1M%LoT%n^X="o[;\c\ToYM7YDm_3!CcW7YJ-Uhm/A,dnI2U.cgM_+D7NO+]0^77YFaAf9ZIP&dod_A>COg5`QF"Laf/cKm`4/PR8-<,=5Mg%OZX?k,=40=<2blq&X$jLIN.Tu-o?g<;^)1_PoLD[OV0EH.O7K:LoqWGW"?Q].O5d7O-oZ0WK7r/_L4n:Va=i\#^o>a<(MrRTcGHh%.O7K:E,J#5<(MrRa^e>D6=N>R)!R#Y+nnGf<(MrR6.OX&W/qi._Oa3e<(MrRTcGHh.O7K:+R_/k.O7K:T^lV#<(MrRJSgeV'bV`X%KKYV\'p:u1qp/54N!R8d-U`ZY^X^O7C$^[69ngNAONN"fM,>EN+scd)S4J;?M%Lo:'"C-3eN8j8'iLlTBaRg1N!LT-03r4oiN.V(%>9!P]k>.h[@8q5-;(<h\KV70j$<0R_!F];4TL,YZ2GTbLM%Lp2R[)Y8'bX`WbZ;2GL"o@holEGRQ5$9Z(jj*tpl_OA@RLJP+d8fj%@RNap-RVTA`/"sm7oQ'II]<OB$l'C"6Km3CK*iKac->pD)mV=t^IB"9@Vt][``E$V=hH,[`.p_g.:bnGi'S\H"ReueHq;210`..K%*tkh%1mZYdOGF@.qQ]L:8EI-kM%>Fq-)*PZo-$S3:S3Q8Ct-!fM[tZsOJm2Xb(kdZ4mhe`&K;qS@j)r"R33RaYp&UD;D]pM)hPQ)%'gC]S!Bqc<6_I4MM[ue!-R[5q[-mHA_hUWr#`U,f4sXT)WqPIGL_#?p&<VsD%NeTb=es&m7'fOP;JLT8A4&PY#)(\g*Bkb!Q!>Ui%Ug>@\k,)[3VoS-^brNIZ\25&o7?BAL]obH=:`hd+lU=IETaqVZ_i,FdI=Js7B#LQPn=udb0D2jB1F%#qedO@?p+_-Pl/POTll+D%%rh![iGddV/@7JPoS$/1ObDc?S,JVID^Q9<nH2V;DP%R6"48XMqO^D_]QPoU17fGQpaMDIf0C+rBq.3%pS!akN,k?(B4^+$`@Cq6-%-&j14=GdCLp7t<<n5%]W;C+c!&ttS\/h+[2#V&]I8rC]I#:Yi\8o:NFP=0.bCeH`Z,aKX+WZ%k",!d7E$;tE9dFKI82%I`=;b7UY%V2,C1.7I-f/ILQt1e3EC<NVTf^KMCn7T(O$fK^4YT->`$^>4!o04@b3]b7V'dNq=ms2pQt&Z.t[I7]b>8N6cYY?D^r0WC0Y6&GrR%"]H^9;HV&KWb&TnkImk7+`nn58Kr&(8Kol5";1DCP!icG&tDDM8KtDR&N/`75q4-LKV7=H$<0Q4Y/oWr,=s.MK[d-QgH$&^,=40=%+A(Wl999L;&Kt/$5dX=@`/"uWaXL%00d7mEf9\$'&gK`C<7FKk$Af?<W-"7*'bV`X!bN]d.O=.+-p"1MWK<FG!B3`,`/"uYa',<+%Ao8Q**)bgR[7c4lL_+n,e"B$:`^D-o.YNWim<WPijG3`UD,DH2+p:#K$<0PII*C9OaTmnHWMe60(%QF95;>AU,!r#Oj@#u/(_K)E%8V7A,4Wrt/;P6?c6jWTtBi#uQR['BC'bV`X_Z#fp-&HI&H;fejUhuMV'bY"0AAs1sWK7r/;FfEj%M]U$6=Q4?P+k9P7#7q?QS]Ei%,=:VM:P0"2&L!m<I$:["Nn-FcqG^#!Nmc$H+Yb/dP>-`<M%Ln^g,<@h,Y!HC54=>,+Yb0oAj6_S,Y!IVcC[36&gK`aJk^k)M%Lne%?)0`>`/"ucN2/^m`/'LKestGt>YLRnM%Lo!CarCTN!ROQF2ATa6=SLZilOD^+kOt;+Yb1:;Kn8!M6%=5Lao2cKm`Xid\&p96qDZE%r^Nq4bC13u;^!k>,a/]Q;QlE]E`>SGG%Ht6dSrbr#XO7$'W@+(=)rqQ6br8g5_XkZLri$jYN4cDO;N>\fh]^g+gF\6c;b3N8;mg?%<a#i08;mg?j=1<_,Y!H[6@0&=8DQ>?M,>Ds&[FL>6qB`OOQ<@%W]_I;Va=i\#j[_<Va=i\#X>TTWK8U@nJ%p`(_OX^=RoE^N!Kaf%rIh/3R&`J19H$l$A(?+aV*\WZ#gZ.r<64@uF,N32K-us='bV`Xd#Tg`.O7K:I*\s4K*p!2HZ"1[k`;5Z'bV`X\/SrK<(JQfS4P)Y%>W$:>E@RbVS3I0,,Y!Gtd\0!:6jRBh"Y(ceKSVcOE@N5'KN,V]a\a5]ge(>5$Af?<A;rN7KkSe"mIX4FHn5FN,Sg]eW1TS"'iJ8h%Pp@(W,=2qb8V%5*&L#rq3I*)"7YDo0T)o`?,=97`oQjJm<Z51"R\E,X6jRg&;P6?c6jQke8tHBH&L!8oSgY<d,=9bp/d3^M7YHG;%8<Tf9@RLL-##_*\@Z(H5Xq[gr(_P2Fc?gdq6P(D4SdH>GUDRJ;LUJQ6.O7K:5X1P9'bV`XpoR5]$Af?<RI#,IjKuHq=Uc(fb+qCY%`/"tnrA:I7G-_BVlCm'FSA3#IOl9H2//8dB68Ie%+gD9:8V[Y0c)qmVi`&I-#a+D4J([G3XbV3L@4L?hX-OD#cQWNB,fX0KI7\ts%M-Z!$M_qAo(_Ir,G=b^V0d9"R'b[E2@RLLYQP?B[QpXbKGI/qOA4k/Xq"E0/EPK0";>`Jeg+H,0f^na-F*dT0b7nCF9tU7Hn<Ej;%JoFH93qdG0r>,2FrSBTL?j@o^jTm1qX>f*>SSLT=fGf7;F/aPueEmGeh8<m`[Eq_Fa6-4-"XiZ%2G]AVB-aTQOX`N);PcmnAlhTm%+qZtih6P^-&RIBCU>b#rI85c;gdS<uc&*FqT@nZbVM];Ro3U`Pa0$NA^1P+A$eO?@SLuNGD![9U"97`CGT!,*T&f+*Sa44+of7HN%4a'7!h=t",+'T`CD2*3NTsDU<RE"@?N*keuK@'Sn7l4s9[P"]1g&$5Z53RLm5tiT^O`uj=TCS:k59GOj^;U*1n\q4&R'N"A_B*m-%Xe/):(e4YA1=^K/+*AB:E?tO];E$+i9fZL4D.hqCVOB-S?D,O":JYLS4c>QR78h^RW>l4Kj/Jl5b`n%*alW;Fgjb/?P!-,&L@[m6%n'#T,+?tP7K_,'r9KrWOljp:JQ68[!H`TuRa;,Y.k9W<?8f.@<GD2=4f/n:4UYTDXma8!G??%b%2,o3glY<h/mp"n$),ohbI$Q:n%]frQhB"ibB);44$*Mu]Hlmh9:\T-=,*\IZh=k@"XW0"ET0m_M;TAT=iiO1p(AINaLfrmE&rjc[h5C:/(PK-+Q9T5C>3UNsD0A-8J%JeRB`\9r\R[h_,5j4)jha"W7,imdq:R4lgfA[9>'B6K5aZ^an:FjM:AG`Hc!HT=YMagf=I6E@leNcsE?q>(o.Gq!>p`5NdU$V.OO%Ka3&#Km.uLme=b6rdCJrO43O03gVWtGHN<Qe+'i2Oh8G7M)O[K]&MKVH%C<H7D6HT?`&*TH-1IMqtFpRQ+Q3UMkCF91oY;tOd0WC%k&.)8XcmB8NQ$B$F]b]"A.+?WKZB5l3[m^Ua+K:ObR63XfUBZB#l.D[45k(?LZNOsR#jTrOpn'r&Vq0;K++@640WW5R"au,27QEi%eM9aUhO?*c\t,Vds*+eBe")tZC,F(O#PR$bm(XRns3!I-O+khSIQOb]eUd\_U&c1o[fcMG#PR$bm(XRns+;?ETec#=8Yl9-@/oW0%ra4/f7-9`@XlkSs&@*mg4!Go=D<n_V2ajriWT^l:2[!FddaE2*D?uJ4C$E/P2h]26R[u$M6U^+@jRc]BM^EC1_NioHSu^j[5J&*3%l<;53+8/D%cF2qki'^=6c_Zs<+3N-hOG9B0I6H1OI5`Dm)c'AX'tGJEQIPP3OhI1)L3g#/V"J!?IkiJ<\KWtce[?p+?m=W*<,P8t%cP8V19K'GcG\oB-Xdu&jSnfI71Qmci.saHIe!lAh/"5:enmlffXp;_V.6$>F[$"YBF%'kFpgUWNOm=027&Jb3;qlH_I]/Tn5%`k-%h6+stRhM9T4:P-A$4BC!Qj?V$^#G!Y]hbQYbqO=.8<phpGe>O!:L>_uT*2cm8j2AoqFX>OR9gab:<*aK@,L>D&t/X7N_u>405/tV%Y#S%WK]KiBC$mfsZ'q"G'^hj10/p>DHUC;],m`B8EohGlk^+f'd/4Vqm<\<4TZsZ8(Bh9H*',^>"n->f*p$Bl@:cio2`#`g2+$ck%r^D),#?<U53?R]!2pu\,WqRk1dp2>66U/U)S&RC2#H&)'b;$\3hAdV"@J7dbU9c2Ks.HA]jJJFf'HW.<Ekc!LB=@R10AD7Hcda!V%l9V]ANg2s.Y5Sne4#-BF%b#Ad8Z:u*N%XG84$8m%g)a<V`@_]=M7[l)+#(*8LM/ED$b)1N8&A$h*glBakdKW4Nm?m:-`;d`7R+>!%km\RE3Bs78rJuDZnqYpJ3sut9K3#oH]^+(/DZq&B6j-aPj]h@XIM6[K?-qU/RUW<Gp\spX*='`m'KtglmY#V]l<:1bg@PCZeaNZ1%Mt8$gUMQ"=NNW9R/S:R?a)cP]p<3>P\bc=qhMnW"<rRCb5J+YDb&>RTIS!cBgQoAk'Rf@<&q<tae_5YLKB1ho6?N6J<=:pioc6(q%O8FMC.,e=1Z[WUd[!$C>D]V@(#0hV\Db/:-lf`U/GulB+NQ']*e)YTnG:;og':oU2q/i)"`tjD_5g=7;]'1\cHc;,m5*nD%o>S7(%l%k.(<aR`o#e4Wl\$2#G/k4^pmRHGME-s(KEjKp/Xn`0%HqauSC9<EG>D(?OkJ,S3k!'54ZYPK0EH?8o5'#rO=,r=W`)\QN2mpMX%bXCodE<YcQS>RfXc1Yk(>;0TY"u;:&1P3Rimk!@%]RK7s@5a`J@?cie?W>mU+3R2+o1ZHd&8'SF#q4G[LUY[6)Kt[TB=U"+H,c>J%qgQ#%?g;nXRq'ha*9Giq.d6l15\ZHfT`"lD[6Idd65?sAR)h@-m$s/-E;j2$Bo:2&0I*p-'5%!pbI5eSV9QDX&0Z!N<m;Valn$he%Bj]>nQPi/-.phM!c.&=69r6o0`K`mBZslc[1/37],B\"]10bSj@4\`\)@hC<(O9rgod06nS<;Wp=NbuZId0e#PI`3A#Z`M,XMkL3%LFgpJKgJXm'VDG5H)p\@DeOSEhncN=?:k;AB"'mS[Gm<rpSWeU\UF`<\.Q\o=1e-dXQ5ahX*o_(SJ&6&o4EIKd]KH/i6]#!qfdI#%S;gotC+JUi;%n@sEBn:eaZW1a^7:$TZ"B0Sk;oKu3R&Irh9W>q)]qO3EoRsO+N[pRj*ic\ObX]I^GM*KEf[',#;N'.PMBXsmU>:^%MV5#,c>"iN^%r5&FHUuERjIk.Db9Ap4&85CG@6KPNdj-ps)qfM0q"hXdBqSX^%,W(G$pA8kl4Tep=64)F??_I!t,'8FC63GdYE95%YlAlSs6[UnGR*rUh[]!1Wbmk=rApjC%[RBLWjUAugJ;.t^u'r,EB;8jCZYOZ:G4=O]G7GXE8R`rcTZUCk8MMXWT5.IbG]KIh^Qd!%B-8,6'_upW>*jQRm+9DpWFT*Hai0Ybdk@T\r,6,jpIp^jB1(e&Znb(E4HW=G]hFQ-Y4TU,D)o5lNfFj_HF(K&X1uOdJ)4VR)V&Fg%hWqI:K<q2J08klA"ac`qSB+7>-\_!JZ+RM/IJRmfH-B.cbgBbk2XKMTNpO+,hpK,aH4ah\/oSiqGl8S,$(:/+I_r\eLXK=E&*g2W%B)`?RmikU;CZ4Ot8`F[VQ"[KYq=[4"Ep<$_a&,VE*mn$H\/K:rnYoe%iT"d`i0[d`$6j*9h?m%/P;]_f<ltBu>G[g]I23%p4p$=D%9bC@T:d[D/`jG+ci<QHE^JE/9O/Fs\0q:CLT))f;hVT\.cAPU')k4h2fu'SBAGMul+UB>lZZl96@pBNn^Md=g.+WAb\#e](2ZEC>%^"Q'A+GgW>8!gnU9F/s:Lp99$U$sU6NYb<AU!]oBTu1?Cjm'grLqJ]qk?WtVWXH<r'>![4AkR_5%Go9UkpZD+M"o;6r]S9]V3Cf@%Fc_&,[4=+lJjp-'=_$-hNq2297J9&[UB_V4qa$"oJkkX-B3C`SXV!0?$QZl^&m=VpF4u=Cl$HJ.Yrg?4<dXe8p2Bd(hZ=,j(+U(n%`EPY^jQsV9'L/^piq7*MAJFnZBYSV.K0deJJOV-Q$:WNLs5ASaObIk^Ea'$^LRLu%EY^^;*%mQa3#ue`+K?*]O*[\!=[j3517L&d%b?p=TCW^V1UtRGT&+Y5eCQNj?*GUV17*?d5AM3?9n$<(\f$M43XObIqL?gk[B,-l:_=^F`A?MMk]AV8DM'E^&$gg)$,t'fB9cl:i%<1B4d(HI=(bjU!fi&fR\DX:Bl`.MJCTbP3;JHW?-.b,P]6p7*+F5"`6^msHqYS_P@1S4dH;Y'K6>KJ'Fj"9=:qqKY^.8s\hXAau_%k;['Cqj:&\IdGFa(G1UdO^9E'FHMC&c"*;8(P)su81q^;V;>2%XfC2Nl<^Q[FHO,-BqqltN-:SgFA9WcfL8I_`H2]`.lo2]bZ<0*%fQi6D1L28*6cIMCf%VkX)p;FJ3`g$mMZbm\dnLWe3E:Jb<!);.S1I"@=M!`@/B6[Sd59<@ph])].VYc<1p$"Y.p\t@54@m7Mf>sm%-C[]?LiN&I3aX[Y]ce\446[r/4#rjROa(\)STKuZ$b*?]HM)nKUlBI.I^d33Cg-'ICa.8/dM:FofI8H[:"`=MD;.f%iE[2Okc(G;%Y`p(F`Dk;TIa1YY,$fk7=4HV/0jWkt[$'0<(\spMCFNNl=mPb/7A@@VBr6fmk6*YAWp(^t/A`DmdS(J9ZS4H7;b@iDW9f_8;S#E$%*@BH]&a@!;PqJ65dej#bbfJp"1\/_J1s_+s-HD']VT+RB:(@,*R$$"bWDo:JTLd]78'HeBjZfjH1*aQXa=f?41c$n2p</CoSJ&Pa%jDJldB:O@OgN@O+aDs:\=f_ei`73*of0=#-[2PBHI88#l4+D<\Xm+Z95,]RL2(I/!A6Z[u%n1ms]UMe:RItp=3Gi2(GFK4\2'pf4%r5r'Y>"qSrKJagCXTl^I9hDb^`**dh2'peI*Tjt9CFMqe+0(aKhN/lor#*25[F<bY/@Tf6OGM,F(=Lj)8n+\Geliu=;b?=XaXs?o%2jM=Ao;/9?p84#*@4AUK`a1$L]jfB.G*dG(g\2`R-aC#7Z>k(9k&<8J`(j+0[5@S\8aJCdP1X?"OQP$E^F-9*>;_VsX&Y^-.#n0i%ctNQlKZtdI1G]Z?Z+kK@R`=2`&prbr5]&k(o8eP,a"EN)Pl!hoPSV^"#F\4n:V(12Fgj#1(Tu^Rp84#*7:2W%db($]@aDEM`nj[0%[p"9_WAJc1j(L-'rSP&HgM&oN[GS#?-2M$<`"Yo9@Pu,*T[u7)#jZ5>eVFi!pFE5+#)SMrVMLC/2In`^KI_2V7.*L56qR;Si*Rt4%P"(9@nL/%I(E4MiP^XD0o]g1Fms[NeZpBr#eg*k:m_kOs;%e%/#Rmc+L_>`88n\*BqWdAA[Q$D9m'BVm_eL8VjGjH%\d,fNa5o*i%o(?Bn;>C4`2@g0WKnjR71C0t(ootC/GA!)^%MG_8Ud':sk(`3q3.<No[<LYM.=7jADs-<ae%J:YimT$)[ONV1l@!.<WZ'>(DL_._%V@TgR8Y7se\m59(/R7uT=;pDiT"Su18jS`4&$XFbI:S#TS5VQV^IEXPMh=NCq.)71<kLWMEC9Jf"c+1HS^G(6ib_Y6@=73WEj'Ta%1-:_-h1&S%@EeLe/IqG;"Y@ud074&]?[@>.HSNb<b%KsZFRlD=g!>):YTGn@:]]qocQ!u!N_WquXDWaD)$hQZTa*I_%u^2N@L4G'%fLM:Reu!\K-o2n+?C*_XH[@#$1:u@.'0>f`@Sa[#jkbp5iSaTnL<IQdr=P<TdIuF)><Yb89<^qLbE6/jrJZjVE)k8+:FiVa;He4V%jG,?a(9U'7W#DB[c5(WG>14P.;Rq&IAb(s:lkcjIEUhY3iP1Z8h#8/7^#*,f"h0hJ0@#jW4+i$C%qDZP<X3a:L7Itt+aN\:=kMpP%47^NAT8-HTGQc1-Ed-DE&2NI"rEK1B0<+ti_:gWbn0b!=1sj#/<plO5>n8;q8X<j'b2L^u\tC2qB?qoNLB^PrK&&O"+3.2qI&L\_%Y]eB5&ga9iTO"Pl`Peik?"o=9F;Jigf=&`&^K0kk0$G,%G1YNJ7`7/9WqE9Lnr[($'Ufd4C2QWi;KrNC:o?,0YJ"T+^U4#lr4Mu(%kO8&c8MG+/AU7\nS]af4:K(QkG0`>3!TNj/7h\B#V%FDq3*0)++tWCIQDZn,Ap8(*E3W?5qNtCpWlGB>7j5W%e?q-H2"<[Ke:BP2%(-`.ACF`VCMs%9RIeUP=RmXN(^:"CVH"#?nEcu)m9C(0,_A1W.7dLX#8'],dUFI$9qe\5&g6&2m1g*>V^6H@.nn["J>#\5p.<S8)%F=e-1n*ufu);bAmd8!.d/n1*g]iS-&q3Tj$r_RYNr8R;H5go:G`f#)?9=*@`\bDMia5VL(nX:.bdVn7#/,Ska"up@fO5/j:k0Fi1%rUOF!S;R&%BRJ/=eT7d[.\+N7gNQ0^0YKh#gKl9QhtQ>'RQ[D:A,KW^K]M@]=E3b<@_;2p<c3$T_96a*5'2MFboCRLcF)-3B.]DB%0=*U-<)7T.I$P^uolVr??MX5(jXk"g\5I,*C3OntT84=9rLo-F4s<*SbiM%j^4#/h_X`_4GaGlmN>q`5,FKQfLOVJeA`Oaf4c\eb%Xk_h*rl&m#S%g.8]^OXJdN883=*PYIh@g]0R!RS]O2$XJ?GJ,8+Z93X5?(b\lFAE@?f'"jT2Y$H^-+:Xo@i8lbKEP-e`SHP?PcsI%j6d)rr0Q'GB_-4:kM?*gA3Y1mdW&7Q)S+W$*#?QTh;IJs4Hu31k"]!-l-t!laLtm:4BM&nf-?:YA*J4*nat\']]LnS5'D'2GYDbc%_.DjnH[/rcmi*7$aSqUp"6_Ou\Zqo>>$emj]rLbt0K:knF$6(H?$]6&dW^(^6YG$57qr"gZTC.'Y-YZYqu.'EmSPrFq8/oYThd?1%Pb)#-_&/a5L7&uD>C8'YSh;$!mdc.2Zj6#QVfX**<<>q?o$6L\B&U#d\a2PH0+NDCVXIuA5i_6]\&c='a*4&;REq)K47$*cV8:FB%&`p`cYM:_*![#8e'&b*#J!q=KSK?osd*A#+@J=*\a<.7TRsUa@]A*8EZWdd>7<+fXs"g'_D;Y0L3P%E@H(OnGAGtial@%dmmcNs5%cX:?91QnBZor[E#Qh(%(e`PE^r[bcgHp(auJ,U>a1QpX_St#=bJ%9g7]V:JIPo8l0IIuoM()Q*dY,1?mE82Ct4W:pNbs'1*`DeE3%;b]Zdml^!d3"^1s8LMg9#HX3Ir:B_Y>iYGT5'ciao=03u?8u4obNB,&oqSc@IG6:O^&0@b\jdIgi]N$ii_L+Kq>"'[\<2X>r8?o3%Hu?e#R.P"2GD=9oqpm[-^\>WoXgh`pgFQ.]-SDFT:Se+bW0s*#ME%`5>FBMY7_<"9X0bfMgWke+p(ms]l[5L)11kT\/^<I][l0TE%Zd.h+J8\4WQ2RlYbNYet^U',B>u-A9)2V_Xk1@*<okf/+RpY(8f=1SKD//l)Jf>3r%Xu,5+&1YJDP#4pQ(P"</N-d@!IW)LXD\;B%Z!lpe!Oaj\5E4"P7Qt.VfG5laSZT'E2Zppgf!"o.b#`X1UdUS_>%`U@'"$'NC7<A.0J=WoKs?QlU"JP\h*QOaqsui)fL4Dule.EF%r/13ZKS:a,kNg5PQR=Q\=F=FF"jsJRXknlr$;@Rg#Q>]i3U!&-ISP?#^X%i655Fm7LI6;H-V-kc_/,M7Q++I83)@6?_Ie_Xa.3aX%dupN^*pq8EpV$3$?8Qr,Y;K6lb3?%Y#"Nd(EbsmP_7gksn9LJ[[r+6'p3Q>rO0ANQ-kH85*2iEY%.;R^Qg;R>nVj&reTEnao2h(+%KKXU"q`RKgG/nmMq5`?3f4<YVhaGan'ftScQ4p$+bg.mkF=[C/[;I'FBX]PF`M#YHpEB7\$*o',:8PYp3VhgJ;pu,%M9sn",aW__%bLq/C^0lM8IT,.8.TlT%(X;#6IrM:Yo[8*ZpQM\DRoa=q$ZW[>ih%$jmcP[*2U8T0F(W)>l,CWb\&.F;^-?IVD&ptTXbIV:DMRl?%[a*H]oA_KmAiTV3_X6p67H&-5BaLN8!clBP.t'JU`g.70MmS,&gkn0TlHX5Ve"[uL(ci&S)1sU7<B":Hr7Ac&TNprt's$nHiH(`@%ni6Qderb>e'VS&?G.=5O^sR2_%kEFsrpH&6n&gIb`JCr6XSg](qCZh&UPjmj9=af#$Wk(>dB@5Mk^K6d=RVGllI"->3O$+'4NYHi%OTLSg^?qa>M(ZCFQg'l?mk"5#X[;D<1`=ugMsE-NN0Y*+pI+K1fNirIl)#^"QN*G4P"AeJ1bc13\l<5k_8Ymbk99%m)`AM9a5na-%G"X_%rUhq$@XLTRc7(1npepSXAhE_)`q8E('dU4mCWI_;&eQ+[r9)%aQH?kUO&'Ulg:HnGn*;%-.tp"\He"^E*/<!.1Mk=uT40$V%`MYKBXk6`kO0iD+n*,UipA0+_O&XbA[E&-k=Y=?:)QE[5Y!5h.^)4lA?R,_f;&.j<pV"=;h"=\fAIHC%ZECehHb(ar^PL#ldgh!s%cGAuDrR/JRO$PtSBQrBMDP!6O@gDk_9h4okFKp%)'HZF-mN\&*0rR\CgYC(X[M-E(iaa+5MS[%M)^b>[[6N/T4$K./NHoajg]*.N%oPqT?Hb4c]:uYLNeB$BQV;-d0lbW>EErJ>m-r41bNlr_eI3eI'#Ho0V:2]6S?Y=D6<kaIQI.8DiID*&.fAXb70Q,[Id0[,T6MCB2%DYa'RjD.GY]'^-MpXeY__9,>1S'$N*q>Q;5kdRp^^J9R#P4sCP=QXPkmW[epT/LT0dhh?!ZoIsVP]`n\&t+B[DlNN:&`")5Q/?I/%B@a^EqQ2s:r%3clmcBlrV3MG69$QNelhj4N1o)YV2_4"M_\Y@*p'.-ZQaOjIkA/mAcd>s0N]+N8<L[;@kAM/RQHRS1lbP;9CpX#r%^3!e221.?KF(7]fIrhA,6SFP6OM.stZ<=hh=miI5hf1!dod-L(-40kQ[2!%`htC^'4'mN08oaR%j[8ukhPftc`C&JC0;U$sn[4-0%Af?6]`b,)EQ]C?/m2^\X;n^0Ekcn/+heC>j3\Wbk,]@DZe%L?9Ymh^@q"q=SPpL]SoDVnCj]1u>o_FR%[rh+WSg2^Zk"Xf+<8Njc%993<#NS[P[X5;@il=^'bC@RU'?CJDRoo5?lIVEmcWqPl4foTCmNqhEp3c/X)a'Ld=E0GMi05>m6DfEJM_E^@7W"[S14*C$pjb95)%qjnm1Hcm#g$0O7VdsoBD?gUL5cb%a=`U'f$Nu_8*En.T>m<Z-`&Ga"r]mM\E4kRjc0<4W)(:P/F`KEG^Yb\Fr,usONX1bHlC0^J>%p.C=a;Z!c-p1`rJgX$>DockBhgP_MeV,Qu+UuoA-::Bj+C0gPENS!hOH<ls;Xo?0qrOV.8WQicNC9OZTb>Z)ag%gQnpoV\MoC1a4%20OO6AJ]kMpAM:1EcNXOAGT@#-,6_BnQ@P@QgXZcNd1%#(B!,"@HsV&rBrEoGXmn<R2tE<a)g:If13f\p\2KP704>%%Y]qgh#6..%UPPj_+/dr6o9GMN+Tr9q^H4e0HS1L>:1c-a2?!;gQ;$KeY<8BU3ih1B/d;nJn&O7eEgIc6/.kNMWR:Tt4U4@hiB*P>h0asIr^Fnp%^VU.0i0@'Q5F&m.TP6MgPg'7&1u=R'gaG9KpC,/-+KY<kmQXoXbBGrMlZ;!WJttE75k9B`3d\9fRABrUJ6`gkI=H]Z?C!DUS,o)W%ce%2WR]WPT'U%_b^O,sN@Hmer>ZdA9l*(*s='R,G'GTHnC?Qe[ip^*]MZh8794frRR1>D"TCaNm3kASk3Zq3Mf<$_T2oa]A@<Uu4%/RY(BL1l[8SLVeb?,;)VI?&E?OK\@3V=nJG3ueD?5G5O"l6)E&qU35:B,<&^3Y+mL,KQ7#7iZ-0^"5-JG[8tl30H[&Bl=U+omW07%q0V[o1CGH%1'2sc^<k\2s&B91YWq^lrA3#[.EG]O?34_/Vh`dhU5UZ.BjGJq^='qsgj@LWp)`H(hBf(%+5-u?o@GiS]D)Y6dDG\o%:;.`?EU:q`_;beLPJc(mX"]<XqqEcA[!@,0!u>N"=$F@`g+1H3%P.jU)J'$p:=:-)=*&=P88H(8'FPGkn3Ak"V0mO@ohego]ds<i%%h0L[VY:8Gr[t[*3+SIhI("7!1m:-bg55IUK!an?\2ji=Em,uXC6kit]i"(=^V!<X0\mp/U'&!hORDK(pg:[X\\cV1j$DY`V/K?i%VTPr1+F/so#8Q>U.W\9)2mT8G^[INtE:=c]],@[10ku.df32(e2Mj*cQ9#iDp*\>jG*>Q^Ki01Y:7')2Qr)C63ZU^)eV#td?Xhu(%^9FtSY>u:mne[3OqthSX%3]V<W7pXrcb&1:s*A=o0HO<7P78Ir6,SA?L:OjoD=GV0e(:.kLGEN7p3=!N'$T@E^p[q"olO6[%o$En%=1^)N"J$A`\6YqhZc@D2M^g(&](4GBraNhoDn^71\Z]uuJ9P"NcJ8?@gK%[3%J:F=o0',[3H)s6'&;a4jTl8_;4c6bY:lgf1D>0,%kUe%rH3+FK+WMOMqK<)2Us8Bhq$(kJ>i@Dr[11X$arMS:LLeFB*G%<"\W=J&Tp]`M]]4p848Oa,203E[UtNMm'#\M&TV1(5iUQ0<%P735GY4"ul?1b\<*[s562[1)?+StB5jc)nha*Xr$I6"VK$HI1!QiAtf>_G:^4M9!e8@_^dF"95.b3V/aXP:DR(&>PP$3:bTX6'A;%N!_I-f9WW.o@D1<74#:J7Gm:AO@+'8V'm&1HFbNs%Ea^;^3+J#5!HJ`4=h9RSH7gtRT^fj.JJ!-h3H8E(;>C2.S-*ImCtSRC&udt%V2fud2j[Q+=>i'\[FKJ&\9R=ek:adae(+7kmT[@D*LLrXB;\NI$N7rEe$&`@ali%9ZiAu;3p@AC$Hbk"2htqq/1=O""CuD\pc(5N%AVW$fJ]amO,9=>Bdb$%aYQ8SUdN22ZK/gJE"<Si_M>[CAb`'qB0W44aV<:KO4dO3%$/)ibr-H<em$#<:c/&!Ng&G<jBCnFJIiA7r%s)n9)]&ETBCn(E4"'n%8oNpG2I(`nOI=E$)1YItSr;1-smc*j+jn\9AJ,YB.g0In;ROe@Tr=aU&lq]:jNHRX\VI0!^Z?AQYG`pJR%jQZ\frtkWH-):FdjHnnV]4V8JB=)+!U0[AO2XIrFAa92GApYTt!25CIbJ2cMQ1,:ds7i4FnRnGB\0pKirNZ>QrAcjcr`nI+eh`mX%m(0Xua3qY0fCusC:EefOrik?qk+BVOWB9b.o[VKrn4sk8?YqN=Sp@*O=i?,NIG`CgQg[TYDUeIQ^G<B3%dUQ?Wcqlbrifnr3aqeU%*FDD<*-N<Y\W6)5jpla0k5V[pD:l'd".5bml`T8&jr1*A1"UO246Qo:ZZX:C@FOp%`Z1%OQS=X&eo:sNkl:65R.dasBI6*,jbciZ%_`l<H@<Cgik6&&l@DfO$`Z0sj.kmDAI*NY]I*H0F*i<^VN7k?N).B,5iH+^sAfLZ]Q:#lSqi'4*(`?bbcem[iCV%J0ZWt)#Y;9ed%@UqA[$raVPo3KD!QttIO>Be`*q($90=L/tJq5.dtN#jHd`>bZ\nKhd_r22Ah:#hr##*$]E$1ipHb^dKVa7^AA*.s#Y>BC*,#F;=u%Rre\N]OBWl>6*e'((UjIMq8WeJ>l\!Ih"%KcSHG[4bngT(rPuYpfh7\E5^+Rg%7`6F"L0SNb6oHRDXb&L.3"\(EcdaMl+]"?k)G9%(`"7Kn/6:PSVQ=ZFB&^8[qVOn@6*b[k2DF6k*W"n1#9iJ2ehPj<AR*?dBmc1CgT;J`uilG%2),HE?-+7M]"<%`baCP,Y!uRc[!Es%l0/h%%#6!1pMC64VLss"h7E7V>Ru&@%pPWC8W:D((i9uHF7dffqU)UU@>fl`Qml?,@(mdRj]ZaD9S0)O>FKD$N0c.NcP*&tN8>_h%%EfSH*ES2WeiI,4Jiq5!-03JCkSo:O_\ZgWa'dhb+H0?a,;J$HnN!&"n7.367o#03lF+WEdGRK10lOj@6+X5FQtsiqq89Xp(Pgii%6PiCK0\T5p`Z/=qN%it`#]ms+6C=[uMhonPQt)&*&SB]W5)6!$n]3guClZ:N6dm@$5LO`de+q3To4[+2H=G+l$jg']s"&If292pI%k4t%QCcStXq)hop\[8t&B$s>r#f!,90m-9"^?:ja`j8&$W.h?H@]lC\k$.COk](qj0U%fXmn/O>]u?@7I]p\'jjK$\pY5=_0ef(D%"7)R5%i6"KUXKjbCn#=X'I.[4-ZEA24>B&'iDE]8rCXO&KJs>*fZ'd97n,SKM=kT3>&[b'^cXtlXt<-J%-sI-)T23"cT1pek`F3R%^^.f+@:AcTF@0MZ]Gc_hSfARf1A#bhYoL:g"Qo;`$$.Y;aE[?K)L,7%3^r*\&nGE*''*_LJ6COWBg:$.a-Vlt@i>Z[l(00_H3V(u%1[KB"o/o,r_J$KL'([u^=k^JE?#p+,G=9;!?]GPM(*gODNYmg8+q8Gom;T^h$;;EeK__K)@L2R!%#[jtn_X)1G[Q&HPm/(k'CCFL%GhED/Z)e9%CsT,34ISl^]_L-pI"Cfb.ks4GBX9NQEH:n8)6i6/j!Q'*$QG@b%Fc!-,)d%I@(^IebgWd?BIbnJ0e?_"<J"K##sW%\%<288HpZ/jF*XBn$>CoX,Vnp6C%?krK94FcV=.M%cn9p/@fgV[/bu**#i,b2S1C).tp#(.*/#(isF2\GQR*1PX0X?_o!+QD[V=WRY%#:Eq$D=EM;]'W&4GAW*ihj6\d`/b]-9NTk$4roZpk:u,R?3&rLE,fjm_5Bs/Y7>!T/k8BuA)m!)n^7e=NgA7SV[&QpYQ\1:A!6e%%9$HfZ[tM#3,VW<;),!&g8NXK$4<75?PER@JT.E27S#@]0EBnpN&`u.6kk++>i;MNME-qu>NaX[')KKB\\9V`)[\jKXL+lpV^`6^A%bSH,eU?tWuNSnjn[Nb'W[N$._W8YOhm7]IX.79KkH3//03A<rS/dm#r0?d,,/BopfZX#RH-[8IpMqFUG1"V+f6^V`e_<:SeoqZ".%5^^WE5)ZbgGPPT0=^9sYFA5q>jAaK_+NHkeh'?LE,qKlT7kA86?Sshl_AlgA0OJn<cga]h7I]B2BS4iS&n-n`ie/H`q]Q`:-&4m`%F0MZ!iMO7j3`d?W5>@WHb;":jbemEVL4nb-`f8?H\OQ'CgVnM6QtqV4e+^fC:QL4lgBo&s,quVO4GikdFs=Lhnu0L:E,tOeE*C>2%/ML4FS+7!^Yu+q^`J%#p`=QWibHPptBbJdRXtDG!dt>tT-aGTjrqU:UINi9d+ktssP;*mZ1nV.dH!nG_nGom)4ujLUZdI@.9A./%%fI$\h.uZVN>Qm:o0OL1MN-Y1sH>P7kOH;d*0-FU="Ft=T5'18]JY;<0#%%G!-O^'rB[7jGjuX1eS(3$O>E2AE^U?V0Ig"F5Ge+k/%m/]<t=FlJc+lDA^d#rFelV!13IbP57j^Z=7jpGmS1#KbXBIXHc%*K3#">EoE",t(E[<4P,4i<DL@H*[gjp6$Y0onOh7mC.J&i8d&%B1s.b%)M&$78'](YlY?;.PTV@6_eADl,pG0B><I1T<if7&8#-eBS>&\?BNu.#D2Hh$$5$1!OMH<BY<L/j)GIN[gd]im:='XTI\B#%BTiM[gQimgY(iXt(*tL5@,qjqN!5D^nj[,Q7rAZl!0Dh3&"!Tc4MXWqN=5ekNm&2<1,.&H4c-^k1)!.GPp&Xeqh)_/8+2A5#G370%K[qLP!1k0u.1?PkY%*?O=i++H&HK&raC$"H3tNDdCe%s;NWi&C^*0QZ`q\dA"Q6h6JC+a6,6HeJ+_(9V3L4T;QjX=0n,!aha<G)P%:OS)QQs0[nHm?.m:G4;0]V,A$?YfQ[A,t8J)dkS\:r7%t%R-fV[,K^!fk\1Z"IOE8Xr+UcE3$eLR$&:H*/%b8od.O2$UDG&=TO8f%+CF"][.%Q85:9h5.0@C<gMm0U3A<K@aZ4"XF0+;0Y(cT^m_9JHbdD.B!2EUK(`:$Q[Y^>$*1.,+"W77^0G!<#%KG>UK$U\r#u")<%*="4RAFfHiPnoaD6O4O4"G-+%Ca0#>)chL*"U*ttVC++p$(l:W1R&_7/7AB^$HtkrK6A3&-TNrPa4MpT!UsAr@QK)K2Bi.(*#YIZ%Y/-KBqi8VY'u<'1_fBqa/VM4KKU0(f@'EIEo'S@epehe)"<^A4@_d4TJ^GA!98oVY2M(ppD2+E20]0)tM2=0Z4FTqEKC<d;+p2?<%7::N$+U[0&_72V"*$ep`--,,('9%<_RM:%oG[a)Do5luJ_WYXLBEcNfh@m.45]$0$N*guP;#oAA!t<!K@'42KT;/LnG>-=?Ge<3S%>E"[&'7>GWq]]JLY3/E9>n:>'/It\SdF3%l1'0!Y(mrL-=GAg>jOlNKakt]-,8cc.o+dY[R3=s;M2`'s@tc#BAds^:*5H56^lbu9%W&*L+j,6/Q0O'b$+q1Lg(^JduAg/d=,7*4P?ASD<A%jNrO"]:)3eBar:10A?+S%Ve!(%7F7L[)!B;dJb7:;]+gmu\'M]dO%8*11(%(RSjh_8q:05n6,i)o:DU/-^q)>7$]%#)4!*#K?rJ0]#t_0PT#CN#`C9Y+Z(&UHA6\44;@gOKW)V5n(ObSIi]TJ/EfHKqIC>6kI/>%K9>sN[N>#7Fn&/HSC$30fc7X=%gA=,])k7u:Q.sXlp([S*3n:M_/$7e"L,hc#VuTmS%9I]AA[*^ghXJ<(GN:&&-VLA0r&6b`[gAr%/Q6%8+$GD]fGnO9N2MUgh\61AV86o1dr0qI_/95qcZb#&3L5;YH,BIk(r([<4PLAf!68D^"9L,+(`<8kQtM(>,9)\]"]84C#ennL%Ye)%ii.XP9g-HRkZ()B!QN<IhK`gp4[a7K:k+ObHFBt8C^g+.s!Ps8l&I7gDnHf:/><4IYOTQiP_nh-gJ1YqX>o1ZnQt'l[Lg_')%H%&Bpi@eTI1^t:S=b/P_CDe:Mdh6X#Bc?1r7q-:&=A<5I&7k#86ae$GbiTjaLODCs51r!,?gNI)\/YhN_4NaIlLZ]5iLh1IFU@XK%h%)6Q&I=h?iLh/Q2adX.dgI=d-\qanWrQ-CYf-_9"DP[hhDt0#9kb:A_S-)1G$693E1A$P+H6G.Qg4Yq!65nnU']DUX:YL>&]8Q*%ED>6r0K/aKgGbp*!0"$#6i_Tjr#?1c)\E'a'^.=/$d>lpfr;mOa,])gJdMf<9IdoB\i;d&nbJ+LJ2@T=ZX!K9:PA!9-=0)n!2NJb%#Q=ck!*8kL"4iYHpJMNV.und@jtn;")D=Zi^)%9=UFS7^!0.d&bsS-;Qu@[Go+6>Y&a2!?k]>Bd&VSTLU%(5h&E%hO#[%R]:,jp^%[>4q;=thWPV[Y=U=p;_:Kghq0QP15r1C+-)D:0+OJrN$GCKU\X.iX$>Bbfi_cU1IB@63B)i`uZK8uhrZ#Dc%R?[1uI_;=2PK,b_A%64Ae_>=T&b`ZZO6NjK-1UW)/Q]<3+4Mua,]_-n-D*#PkALY_W2&-fgX5\t-L&4ED/:)I+6dZB7M#ZnkLS4SP\d-e]se(e>9CpO/K%Uf@E=k3jE#_"!&.n^;X>9%i1E>VL'2HrCPF`eUW_2E3e,&u,[3Lj*_C+b]="#^:nu\GW1`TU,fBkq9[aFFY#5beoLWpm2W2k2O1r%o=\O>HkZ[(UIB_nXFj?"UBT[ejoh&el+slW1;"SHR"d_2,cqHue`<qc50k8+oAp9g#rCGs4jFN\g&W2s!iusnO9I<cquZS4*%Z_M%W\&ZX:,$SfiZP=T)fd5j%uagK@(%Wt:.r6_%_;>&.@asW#k\5Y=IR/^S%sF/dR+Gd$"3fm*#M0UJGHVeI#`&:g;:oZ$qJ<-"Y^PZ%B#qCM0fo@5E+H,s#['4)^g)N4:T(t&KqH4t$I#inX0KK1cA.3U#8h;[^c]jM#0%5X#>kKI$6B1oTtjpR%L2(SVAqu)XDhRkp].'T%#6SJfa!%)4OO)PprWs^fPD9Q#^(j;&q@Wma#L'I70gh=^];+EDeAKHq&HIal-PD'fk9(,iS)NQ*/OgGi'iBJeK5W27)-@ZcaV_RW%H@Xu(Fpq1%B7RMs@odip3c>"Q%$O<-iNGMF;[Ye0bWIR_4Mf*4P7BN4<^c">@^,c\YoPDN"HOSA!B_kLRY_ITR-0,iZOCYHL]^aS%0Jj/q&/\=i!om+R6U!^>j!4gB)&RdOpc4k6%O(qV(6"5(H^cbA%R5^8Pmgp6f1QNFKcjG-7n0C/^4FK.h[2imj8^mS%7eEH=U/pH%gBg(LnGk8`$qJ<T2=8LBHX?1E**TY,d9.-AN4i-pE<&cBDHVd>&.*<mOn%Ss+;/&cQfFh\&DMXH"&V^/N!ML:%$h8TbHldJ+PmMp%!ZX9=)Z,!o+ot_(1nQ.T0K-ipL0]Df5h`EYU%o`d8-fBDd[Hl+DXdU-,)RNu*,NDQ>7Wp<`')AnYUN:qLYkfKjQP4s"@pO!,f#`k%F2Yd&N*3Rh_b#bWJ8L(6K1Q'eQ!nOH`'-nE5Kd[b#58fKM[BLo7i,V8Xuo&XK+e?Goh?&d+Oi\2^^<TOqnB0A4%A_A@Z)VK?e</W%M&-9!!&'!:[ri5hE5I/tKVS5A6Hdt(#@B:(@H$#I6mkMZ.^?Z3%cI0!a-`QB&-iJG,=fHs#R&e+0RB%EO;1H5A-A[e(bm^/YRH&-%d$rFEI4H.f3'n/_E'jmfRY*kUm0)Id%05tCE*t<.4^+4>(D1'-[h/lWVSP_kA"d'SU\c/0a#m=Bh_fCLR5QmA<>9VcR@VQCAhE'C%l0\AS]9@LRMSC((\[]4Hd?H'e\c>[CB&hY8rq/VdQ_cGoAZ>[PL*i^Vct[kJ4aci3p]h><>U8R8-I7>R'!@O+0i%9qBt">h*f2"^%Z79[(_%[J,\JAX5;ac^XJdP[b&O?JVM]d.+5G9K^7$+cGddo>E70Q80OPoL?'r5a+["2s>;F0TLV=G'q"fY_/E3L#k,i,R^K,#,s%/iP[W"KC.QTEZ,C,b:,c9;..aJXM6o+bCt<7;.Ml&Z"i^@_7[hOFT=IYD=<P#t\^,J^bhO'U$U8"%cN7]6/u6P&):R[j(o!R="SA%^`Q&J893qT`'sf!*RQ5S5DfFR(n7R`!0U(f3f1Wo7fl4h^12GG!)e#XYpV"&87:f$LC-R5.HRp+&kLi$7JKlF5jGM2#V-NY?qbVj%&kJQ^CTR4<-'5\cI;)+O#u$HGOT\Qpknt!iPX+N*/R/<F!i\O;L8CPV+EaWkGQ[$%>_ck1k95Ks8DQ4X`NNqtJI*&aUk.$D;ip=&%"qm;f)29&#?p9$=1lsb/-`gj71m#LHLg^u0,VX]!'GVlI%WNpI80,MTa<i)G,Tr"&[ZLnpBAElI2j"GFLW79oc\3i>h3TL_U4NO1%,FY[3+E[fM=9KSB+E`Jn=HF8s+E^3r@!aCR878mBlGcX($-_"G(m,/'P@8)m"\Ffr$7\IJM0OcqMSD[c$1=DX@YtLjPB%:9#H:9&%7Fa[JrkNH0U4WRjM7Zi3OPgfraAui59IX_A1.Vt4XO0sWO;aFqj&X5D6/'.i;.YjIcX9^$1.Wu.'e278bnH\4We1F?-$5fB%[-')%M$5q2L__[GWX]XrCXY$gKTHHH>HI=QKTJL@;\_VCoEb,TU4YkD$Zi2d+;(nF*(>uUEhEOj4[fRs^-,gTdQt0OMk`Vd6*c9]o"[d$%aX2G4$kh^-O6oK#6,MR@eYC2.ESU.LWsBkk=(WR'6:eu3e1*dUKJ^&.-)<0,1fXiR(d`D'&/#$MZVh(.6hR6T.Nrs!4fCtD>nWC%%&s=sBWDk/h0\.j*8k9d1n-`2A,V[.P<@&pW$Vb)]'U!;CX:n#0aUo>i64+$_!tkuA$>IRXV(.0U1qCp\;Fm/uYejBh,VU%tQ6M#>%F<Pm+V2tu6J6#aJO>'c2W)]XTL*8,N71*be4icS]Ul^<[7JW&[dP0e.X_8jaj%W^>65hUIW_+FCV$V]d,_ZXX,#ntAQoNt;.AXd/%#Sfs&_\,!G<=*Blo)2O`OKaQ!p8_(^_\'.!71'>G8b`/j.3r^sQMrC48/P)u#cU]m,gGPS5E)D"0W#Bg:plB91;S>g>"Dat((;NY%$d$7![o*S?%0"#AKg]Us?nl>jKeu%83YbO`[b-ZdUhCp&nW=]'+UMV\6PW!-XIW2LOG'h]U<4VgW:o^Q.<7seC^;P38-A!715Q]*%,VZ[s'fdOBJ8FSPJk-PY1X3$57%0Pe,#pq).7G25+O\bm"@a+o,.n+?K.;[6,s/4Y,%5`%b["(6!eVSs.O#2Z31Hq(1j/>`We_qE%f3-!/.3_JRT"g.,&k8p><@T1e6h#kn,gtTV*]U;n&dcbp*t'BW^t;Ra,`soME@*3)877%7N\lm6>bb11$&iFLMC;A1?A0jAM.1;D%.]Q%W%(&ur.M<R']H^E%+H&YjOX_!2.qG0$.Ztsu=(RMaSVC.>kT\.%'+t:6(MRh2&en<@MZh%kJYJ'5N1&cu(C?&`8'saD#ZsEf%T]dR;F'01ol6:ea3Mu!a))GAZ)<`9,:rgEf72O&_h@)gh8N)O3M\KGB0L"5+>pM*/GGXLIJ[r4hMDQkYcuFpm&ss!25Z'rO_jZB<%O[^I[;DaMjKb8oV%Q0B!=?@I9+p"snXCrf/fcV%T8L,G88JOfB0]pgu8YcAW6g&_#-'=.;1QE03J-<D(.3a>R/:NKkOhcVU.8iP8%PA86:&]km=XcXgU5T2![qa_@AOO$hA:_F(n_kN#6&p]Xl>)aei^iZ),MBih%NN>31'$3/"#)bH.8L.bP)KXVp,SCqI<(.GA0es<^%OWm\Vbrep)6umT#$g0iF,\Lb)r1HAF,VV_rTd18<OKV'8873G.<]#r[im^(pPsb[//A4@_$&k4?,)HHBDl"Y7UiT+P7Z&J>JF`s4%8WcCBj![2AM.FQ@/f%#&)<2_fP!fAXOk?I#+q72FYTcL]+S"Y>73jSEj-pDkOiU94ZP+c33K"W<Ln]]9bi&d<.O'EuJYjh>3SRO^%4/F-a&_OFI+qb`Vb)mm2F(.G-.>gY@#d5b98B+c['.G+cGLk>F5pRS]ob9\;Vpjo^V@3WjN3S0t;FCR".Z?n1aVaL,OWkDT#DX!^%,cBfd/8GY.OamjEeO'CH8kRJu!Y[Vp8.TFeVDtUk4X;]pQE-a9"NE?lU5/rl?`,:rJI*?@UkhF10Y7LG,a'm2!0JN>(l'^g8L-YM%CC*@",\)YY.[!>1Cs+5i874ce(b-^5jS>f"&stY:,"3b2k,&k^,\)),'La9[5RS0:.#Bcs>PQm/,Z8$OiX@)p$m?mn80WUfaR)kN%Oc8fB(eGp&EM-F]6lLGaBEBDQUqra'rf0eg$-]YV:Dmmk%9kk!MC&rQ]>f^VdK&mUR\31caV_m'MC9)S>DJ(a&rGT69LbaI!EG"$%JXL,(-5)E%kXV(4``O`4Bd/+RE2"(I,\))4'NHD4+%ci.'o@$S@7*J`87:f$.]Q%ZE:,3U873uUMH#^gpoICnOh`qoXJd='$f58G%AuLSt$j<#nMDQ</&NrWa70;LT6;^/QoCu?1<?s8,DF_9/Us!P^j/BO[?m]Mj7(Pq7^.0;&dR>q09)D-q8b4F%F%$lO9Ou44\k$3E%4>K>A$&nT]72O(5:bmd:873We,LT!^'/L]o,(]:&.)JMcrc?.];+<;f7&>Gk&s1#BX[j?:9M#'`D'TZ'WV_Q2&nM2JH(emr))J*#%;JIG-#t9.cNYE=Gq*K'H0Tf!BM'EmjA#ZCOJMGiXW$AjK!N/UZl:?Qf>ZuhBdK%2D\</``!(-I<2A0R3Ug>h+7KR)_=OBS>j05MW%NC8$p2YRr',VWQ)MDgX@.'UQOdRF;uJ=E9mjO+C:jbpL.^r/eZBd82>Li>l<8<cuug#A%!O^+/;armN;&s*PA:m"4f"U:=oMDUJJ%dRY+0$4J-O+AtW8bYprm%(WH.$rrG*3/LIo704,Po10Y=(`s0K/.tAm%(s0//.rdOGuKho!oi`!Z:NJs&/K./MZdY/a\ZN1>Vgun%XcY.IQnKLcW/F&l#W?i@>pS$fE*::#$6t,l0b`dq;):Q&4<e&V0HG^T72H8h\]dS\$-4i(g_U;BJ\d=HFHN:IL$PeN8:'0h.Ork8%!lLV)a<DM=frN1<JT3`c,)ZTd+`='r,.[8u=.tN4_AB_+72Eu^Ml]6J,XX0l1dbOo(W\<+)a[i+^ar./706sH>1#cr65kr47Cl%0%/075.N!/9.eYi`uJ[qFo'P/ODKN&Xo,hX-r,Zg4m^j$BJP`^JUhcN`F![C4f;3[1O+h49q,8ilD;isNN_\o@#,>mMhWYRs5,Sp_P%4@)h6U<!RX"H"st$\,Cn-;m;g-5;lA1(otl,03Rt$-:S?&>:e@0rmVXaUfdu&OrLRLlGk*MDPq_B?VmS8B*>4MDWc>OKhe/NFWHX%LE_]dbE=:%878m+MduejVkT+167%FW.(Vr%<5O\Fe4$+c#fhK2>pM*66n>i>`o(>U\k%DJXt#A5`iQKjN+C.FM.S/p"=@/^,`LgL%,qK@[KTV4up,E[S!qS\1/&FhbD#?`=8:qF:a&@\S^hf;@8&@eLL148b/eWk63,_=77<1*s(b1Cq&f<hi72H8h#s:Wm$&nZa72H8h%j1gI(Ot3?Dmne+g^f]t=aWaS<7#0J`O[TV9"cn3cOt2u/i@D3)/iNk.>gYtIbc9#YU::I[$:P`PPsg"c:PQ/G<8laL5=H=oN"8oW%((!ZJd3;^=A#qbMA<FZpUf:leN'SHsaWa/b%a.g_OXN3*ViW*\A;n"]8/B<)13?Q"L9a@i=BHQb,.U/I%[BR".3Q?0W/>*o%j_iW%EeOpla,29C<6a?>#XskaM2Xt>aUh+X,?6!]A8q$>;+5M"$f0E7<?u'*h2bNt^c:4@;+72bKuVkjUl#;p(5\cCjOtE_+\/P'@(+,M%&um.d49Yj0MCK7+bu2AC'e.9s5UdVN,(["\0N(=@id,9q.T4c3^`+$Q,)nk7T^!^u@6qsj,@RCF#s1Zm7PY's"'uR/C,jeKIji0)%=<5JM:iqhiYARF_,*@G4?sSI;;A\eu.Z;e:86MXD1ca0b65=2AVmA])#suN*Q]!&WOObH!;uX\b%O8ZT,-MBYg+kul.e18gUu?W"%[@kncrg/V/]/uc?kFYV_T+U^?7^(u>KAp6N:KMV`QWO3Vr_:GpaN!Ddqu6f7==0esANG*Bdf6r'3:b4/Q-?&;*ec&&TST8HBL9os%K5kcsW"[)iT2\L0kY2K<r*dBc#u_\JUC5&)3p7-U(j(;.K9!1e#&X8_K4ZtZN5(5_U]I>&3^f6!.p-S>f)M.(ZSb^e\jNE*a:_HB%*($b:=Sl_8N$o_KnEPfsXCB6OWfB*V=rOd*r0SG<\6&(W/RHUpn64+uf1KFW_kST@i&tXJ40\k(>er0.a&_iKkU9@og%YR7Iq0i1%,7]D8d>/MhK/-otKAhV:52#^eIl`?`*c]!k-mOac+EbWM#GVm3T58nns3*bK>#.Go//kc+5uU7SHn[>0e5%tdiYG;J-?fClpQqlb%8]A*3Pap=JVcTp_?Hi\WAh-q;Jub9]JY,r=p:CV;"["YiS<^6Q&I)=](-+'Bn%]+0L4t,h=QOjgQ"`0o>7-[]qeuu;3WVggXm&AZ%%koHB2*mZRWfEl$.C_5I+_E=2mRtBuks=)*Tq\4aJm/m'P[.GM>q0_dcO(#ll[e'HKH/MR[G7V:(6B'c1aKk'DejqgZ5lfd?0Z9$%cPL%i=9)6<CEg&0MR8k(i7@O3jZ91g8\qOnb>\J"'tPT1g:'JD*98XW_(?d,[[/*c\2=jd6%'rQ-V;.Vl,tn]?rCqON-Puq-V;-+%A";=_\:NSh"=:ql'o!M1DLmZ"!Q(YjQ8)80h@BauVD%7J!L&+>1T\C6$<<3qN$Js?e8:P(>8*heI?C3KosPX6G!L[pl;DO.Lh1%G%Utuk(Ve'#4$0?_@-oS&Gq/moYgbOV7P/Um+*Z-Tn"+a%_/MNL,+E'h$DCs@=AA,Ec"c?MW$aeRu@LC(+@k=.)T$iktC^OJdGtV%T%CEY/P.b?a[E=5>47]%+QDCmKi-Sh*ci7?<X\[L`+Jm2VV-306]>@<u%Ji"c&\@'-BppN_+P(HnGU?X<uN4'^/cjG:W.C]O.SdOP8%L)cU/Mh+6,-j7#pR"@YnOsVjFM%"Gj;K*#fitZ-nJ`%:\bFO/T_6&Es@Ou\XZqgsFXe<BC0IaMCN8"V?<Zno[:qDGRJ1Nbngfh9$%r2gtFDLmWS$'l51DZ=WtkI,,0Eb3iUaFDQp*ikZp\3AVC#(s^Go".J4+r`(uOU<'-]m&dj`/HEL>>h#U.A,+RUonk6hQbX:E>d/M%+)#s?iU.+_(?)#W`hbbGl"tY[Bc*m:'DI9#agc1bpkG;C++lIO;]aC[R>\P>-E"e;ekO\fC$pOR1N$E=Zd`f0l@s&2+r(f>IP0DV%Re#V"\d[+'"TTqZrE?]_RTLfAAuMTbLnBQ*^DCdG-FNuX`BOMR_Cu1&Fi;@iiD[,K9i;SZWn5dTgD2fNp#ec&6>2f?CKn=9a#p%W%=JT]1#"^on>3nAp\YcL_c&>c:!>Wt5\4+lQJ8M8&W^1\1rV4G+=a+/`iE<aOe7c8<'3=8tDUJ@^#g8V^1c_nhK",B+EX"ZHNKG-)%E=%Rj$fVrh5&]2A/gE5WlDb=0f0XB&.aTBRV9;C=l^EG%ciUbCVYM(\WLjN`7"rXI"l(<T(=OI\_j^?+Zlj8J!1nLBoD<INZ.,m-%ig-Fi.lY^)9[ma0<GHdEMmt@Ej.%kR"`UMB=$7AR=MQMW'(.G&"`PtZnR^TU!4S,%G50Dc\4-"9glDGQ-0`;_CiP]d.Sh"lV#YD@%Yhtau[q-"mdP^+'LiM6ZL$mOoDUASe@9X)s<gp-WpB#58lZMlYD(1!>(A:\/"F=4d/XkL)[)"G8.j)*tZTndR'F/sY[X_Rtb(ssD%\4%(EK0^r:>A;B3mu+\ERk)<<Lg.;$q@95'EGM[;XZ_JEBh\f3\VOI,75RGQ*St::h:J?66/5'O%Vq,$VoK%cmBqK`1coHl'u6ps%`HBW4_a'3i27?+_$b/Xs=Lehu<?k5cr8V,%XYb<Q7p3d4[RAh'Nj=IFH+W`oNk1$ND2Gj:=*5+ag(MNQ8_XS^26qEnh4OpkM`,.Q%l2f[4;=>=Va[U1$3S?kc`^4QS$s1/,k;sotBV'Li>fa$j>q@dJ=A@RC;B)'M/E0^%Eqg]_+E#kUfmc'/7GOWZ6V4lm"1Lft)#0;H%\!?P))qV_([ma-q%.9q,D<44L)@A'8>A`\DrQ_]f>As0K*+'J"/'g8D-<foIBY),5Z9+-?3kNFge2L@Ep.n@&QDNMVd;D)q=I[Ri%HL#h/`Y?';>%<CW1N1GhdITNqKs<@o:$?]%HgnJl'L@6O3d(_o0P0>ji8)$tR]cFi/-TrBXbVlbG[%`D`A/Ltibc@j"gqiICYfh$%SQN*D"`Gp9WUSO!D<8hT&V&So\!;]c+"__Am<4cFGEh$&O`YH$'YLQlr,QtbYDoXb7NilTZiG!k"B-CZn[;!I:MPfseZRQ=UV:tW%qth+Zh\U3h`flGt\?.[8iiCb8)Ri/aL&`fE>A6O?Wu8FLp=R6iO1B461k?K'Q3+PG^7,N!\l)#"a`)lB.<&L*<R.(TiO70&qifcJ%gf>!ij`':-i3nXl\8>^_gm1,#EQ[]k0AKTsK(b%U1N"_f<iH_AXjRRk:X.J<\1O.6>3/.tB\4+8%,Vh;.uE_"<PFK[:ehAq'J)jB%gS2fKG4l*o=t4P@"`*FKKOWP2YdW!X*m_gZU,cTQS;Xe?-J'1/J@U+2]F:[65])X*;F6l=h^Jd6b>P"A:F$$GTXHo5'K_V4ZphQ^%7R.@0<lkek),^p"N</47)Hr62B\G^Z=h5'm8/#icPssCVp#1uIWVR!49bAR_6/(Td`>a_Hl&&8$aL8,(QEu8,Ph2u5Uhn9U2Tqt+%>91[NFDC(3Tc%gF.C+@QfG;^Grl8Jj)QT!$22o(R>A4dh0IRs]C36gmj[KX1(<q:bl2en>Ud7kO`GV7\TU>HMEi`>Ui`tqfdC*_s%%l3r"X-'97LIo1ucreomo4#Ih(=Xb8V*JppWF#_5E#`q1$j/h-`\hgq-K@/@0N`rcP^lIk^s&o;)2O[Cme,W&e@X-FEm&/rNV:`1%_&>.cEAONc(`KX`LU5gK_&>.]X8&!4\WnMB.@s"]2:CQFUED7#B[-#V=u095er-iccc+ZhkJL&idnkI+npls?6+9:KZmhuBXO4"N%+#je8:P_OdHqW"#NATCIb(=NYFLJ.E7(o:fRj"jb2PkqAdCQtQe,rCqkiAnsOghsAaL]^q=I4oe)Dn-h<MmAF)(3;dGk]!kQ!g<j%.Jb4^HCZBBrF^NmVn31UMki0JHqOLrWa=UJA1m(Hd3m4G58J@A)M3oPEi[0pVRDQ\Q@cY9dRG!(Qs6DaY^aNc'[3]&&(Qg2!SsJa%dt1.?/cqt9#U)SlFGlru&g!m"DO%^U&)i:UkS@m8,klh,WD`Ml9Kg2<X[6-+QYMGi/TS0TCI-dN.9!qR"l1Z/V9$m2(N`<$j#CR4%l3k1'+f+GUNWn6"dq(N04fDS!,QM7W$L/DOOiMSKFc0dfSVk4AOkm;=;@tU*M^H(Jf2>GSde#Y!&Ld2@mT?B+ba>u,VN74H\Z&eE%a_8,U,%0]%!mCi"M&,$Onn"&YXIb\3Zk=l>rY'pndc:PK0bSDFM5>`cJAGGHL&KNP(3kc"2E[3,%,NJN7Xn]NgoVmbZITh9.ufE:%(8]r,.1^.O5n!+haNmm,jrW;0R\hF=i,6pdP5SM<X\)6ASP1@/i5kpb$LCe3LX[g*`3EY3/g&RG8dqf#:0?$Mo3*frQb-U_\jc2@%P)=dh>Lg&tA[L?Q\jb*<)p_DY[qK3V.Z:m7T&mC33#,-C8h5[F9S)"l@g^8_'\KPQ@p5.s$.SW'IqqLK]-JN;:N>oQ@CI_]kpo@t%^t:4r1PP(d"a@#3+FOPE$(/=V\kG/TnfHSgP(V7>JC^+MDUH,-THk'f"MTV*Z:%F&gauMcIFZ_s]9UD1OR&nk^&p1FG<h\=#!k[@%VH"8Jbh]"mjGXl0XYmgC<!CM%;Ui$P(3YV3E$2OGDO"ZV_n(.sH=SV;IC&umV9.^a;'>Q;BG;N7!k_Oh:`E8SY.R*ld=eZc#&g>P%Q(f`>qh'&Q!NE5+?Yb\WV^`8T"0?k?d#>NN>A7h)!D+=/""]^bVJ$"e9%/!KZ9[ae-t17:29uH_8s>I%_EdGu>4aO;1O4o>\:/,T%fH2fNaW3i^?p'TaPnfWtc!>NA%%+\-\<FYMC=<tDHe_)5Ogib.jLb_C>NGWjSebPsFVIONqoV%m3f6CA'^he_Dpd?bC%fO&.TB#g%3#5)%9k@D5.*45+X.-np$bf'95@7^Q@V@(c&aJ99jehjb&1QgIUq>E*0?*%X1s/g34a%)Q>*X<r.UGQ3lBR[8`a@>DOY.8$.`l@_%f"B*lCU$$9&XQ-bTIiU)#uZF@5'>n_[Sj77:cH++H^>rSd2Gb&M?:]Y3]0MN%X!j%7l8jJF[8(?X)8O2>\gGp:LC[!(c&aWiZYrY%dQOlXd<+o5-<$Elh&Kj/MF1WYZ_dDd;I']IqD<nK.Dd1S<+BY-1(j\Y^/5$<M"F2pc8rn;W<R!0,n%@YOoL67H30Pp+j_FG$M.0V%5>'rc#YgAi2*8CJ#rqt4Kl-`=e-(Z\)HJcTC;b*R!)g(-o#G]n'S#]8b:B)TOT;AL30d7G[U+0iVULcpk3mYX$e_BgZl%Na9g)OR%8:X+Wq%-7a->Ns?_l=CWOOVQufL"&<)m/suM,bu;+C.dXD-rGZbaM4Rf6W-c2gCZgjUFr1'1Dp,5be(BTINdNJn!r=3.htIOOVl^%(rj4a$AULP3G9!)8UXkI4[jo;K,TmL9i8_%O4&9C50j08-aV<@R=jd^J!>[fJs*nX5mo/7KKlJaJ*;)+[4rqD+H[lF&PWuh4A)':%4u@Dj[M7,M7K0`)gQM+PXnf"m4i#I+eFXI_LI^TNa;p_\f:_B\Bhd,D4A*ZdYWt5T'L]"^>d)VU'T\E/.melf5`:PZQ%+NY8Q-)P%[@BP44C!4S&a+\A.'_,I6fVB#:9X9f!_L8Y",`G4&P6pYQZTO<VWOI`1>\aj80k)S0O52+iF>AVOkcCC/o`N"eQWnJRE4g!lRGQM%"N@mH[dVc]mt]J,%'>n%_71ad3#WT`<Dp"TZAAIt\>5%"[(_Jl+%siB-&1^mq4NsPjDodR0T++KC0bFGB,b)JB7.n,F(l?<",[mj%/gm[IdG=ET6c(:S)7A9!.\L)(Ic=6dL3GCh,d_5^%qm"%hInoi<6aqg6]5D6qF\0/#-Gm$7B,D<1,C0H$;KlR2>)GIiJ@r!g-!ZW%;EZehkA#%8IW2n=JCDRGoUlh'5Ogl1cnr:8'3'L'l1WeaQ!\u5NoO+C!QtGrEoC79Uk?[GUL<E*%<Kl?3YUi-jhdrReeCQfSEk=_%4$l6K\^2hbGQ$"6h_):uI1nN8bIQ!"_llc.mTaGWiJkC?NeKq@'Yi%!o5C!N%<1%mcCh0dR*smp>!NIe$(KB-SH1TWYM5SG*"/n4%W,(,"FEhF`Ojs7..K[nLVU?mq>)d<M^Z\Yn;d/U55Db^'N5#1g1$9'dQJf?NV-igcbk^/4kgm).#.G]+?f'Fa8rEKt5c;97HF%oG%3B1H1,Nc[u8SV6bq[8T-K_/sm)j?5UapXF"-GEfRjNn(XMio?.Z+ha0-nE%d8UQUQ89.2LnrFp8HHbnh8CANs1F--%qd5Fqo,05L%P!(F)1F1XtLAM'EZ8q!oIm]C'KL]R_#:#)$353=%$:A>OOVgYHa#\-.;VKV^r%O;lKdW3;M3/L@aF'Bm8MkRd8<BXo7"p2(9(IiM%2GoX(mq#giA9E"PMit.G!AYp'S[e3A,Zbb2L*S3n$Va<VAABEC82>@F01[jm,@?PnE&5cU,WVU:H%I;sn&/Rpj>=-2+itV+Dh95p%EqM@9Gt)X(1Qq%Wa4$UsaYU*m1*]A'V^hCY1Qq#J_nZm0Gr@I.R?9TVX?JA%i+mpC'-g*HZ_CV:,Di:"j2=KO!3(`81QpQs0J>n9%6ptj',U4<#`CNJnc&7^SdI887P1/$D)3X'&<Q.!_PU$\]`&f>=&kr\US!(E:S%LO'.EkEfkGBN.BNL9Ea\+R@01ljK$u;R_EDfiV%U2NX:9lOjA,WW)cSP>=on/&Kj9M#jhEP<8]Ncf1<'-g(B`>p]$MihOJUN2M8afG3b+Z#:mf<+GZ8;cXE'"St&.km_,8Wq],JDgW&%MUbVarIuScrIe5u8<RJVEhX3m8Vj]$ZqX,TiI'k@DG1ZO98J&6,WR>0Ij@XLaCQti1F7<@GG!0Fj:rO_R?HY+aPBak,U'.cKOd^G%JXR2tacTI=rJ?\J10*?4VBcnAaiG)AGmAk]0hE3/_k%g2r0U2S/YNK7,XnJ7DbT`9ehB!/M5CjZ9h@*#Mr73p,T:l,)3\UJ^85[?%P*7F%S'4Gf\5M<3Fh0_Njs18u&5ScT8amqlatb>i7uUg[-%uenqZTU/q.S2PTVOC[rWGiN#<L_7,\t7?AoiTf0LGD6aIjf<6&)]#%2^irA7/-s4FiAg"02N:@<@iccpS-a_-qTm?6,3ekj>_UYDbq(+/H-&M&iek^r=)BUOYi:gaV?du5tRo6pA"b9F\$.;IRqRBNea$e%N'u(s8trQ,A5JGC9t5*C-+0r\'Y-J#%fG)uA5En*8.^"I--O/W'.Bis!0^^j,tkI#)3c[&(-I/2BU%4+-n0#G84bNuHL!I<aVsL(%DGh*T7h8`H,mdJKo*%a$/QPpM-7*)Ae8$1hP%\U,P=S8%I=DkYWLVQ07O<aM*9W6FUqY6[R:42M>N6,bU1k!u?qL-^EKq=k.9,;S%Z'&'P7X^tn,nfo,.TrK<Pu5X9Obam?/1nC)KM%Q?o?=.DM/8c:8kOuVpOu4kQKY#:W$I(_3aSU-A-p_.![Rk?eG21WP0,g4dPHH;%-2-mIPQVL/d#pXcE"4@_)3dN&es8SC&re_'.#HN/0lBf#b!Y^3)jDnViFYij`+4ri8]$LKZb/9>')cc).#E-5YM5]qI;hS),u@Li%,49Xg-s<=O<$in73[eTO;GoZ"\@PJ3UgeF="sqrIOTqFD8a90;3&;sS]T2DP'.=1^d=29k!e(,VB2FacRpaGC9%GE6B2J/U0i"BP%[@\gfP"P#QbDVRcX24Ah,QTdPRQ5AND"sM7^H'CSff0k6XHDq;5tRmSF#0=O8[NZj(F_qhCa_SuUQQ`5=+n:@<3jMD>"0g'$4N2^%:rsWh*>0i),=+#iP-t-Y@C)+p'Q1WfaVnK<bY"$3XA%OT9;3lF5/EC>RXA^LZE>%l"A;'c(pr)&Uo4\cg&t'c;2E(]YU$cs%Vah)%,^`!]`;Kd2Z839;RUF7k%D64RZGlnq_ie\Zne*KFA^S`bL*c.fOn9TY,X+dB>(S&9K_K(\ZDs2FMj6\.`c,B5CSYDc<`4@7qKT9.%ME=#uMj8t2:f$o*8h.TDV^Ja41*VeN`Cb.^:mPp,,rl5fnW'*("J]?ScE(P<,%!75P0,[pL.eTnq8@YG)jTKs+K-`_P&2A\$'c2G%Tm'n>P%^Lr)3k>cE/=E]-/7ZA.AN&r8N==m<0B%oB_-mLU@ICm;Y!C;:8B/KW^OHF;Gr<PCG/YMoRTrpK1Zc6m*tWd8qK232+XYk%V]HoEN(UOGs"Z(WSeUjW9%*V%<)WT_-.++fAQ2PjZ=$iK.`jE&_F[3C>ML]=<"d1OoH:E%6m+![42I(f%pG21/4o'6\q),/&re>(%Z'%^6k)E0<A;dn;)3uPe=M3[+,o]oPA\M8<1_'YVQ#+/Rb,AhYP>jjp>B;)<UQWD#/+u,&8a(k+q?rSLFN>)e8BDY3q3dI`h><R5%9")^S-<*mRiO-Br8H=T/["V+m!+e*P;99S!=@OT@eFt^JM)I.<fnQOo)3esT(h_hROXM5_:6G^^^/'TL<+%N/<8o/lA\9E_NksM\%AP*R^j1O96,dGXHne3>&Nu&q<esl%18<St8Pq<$"*2qD_,6<sU218&HA3\lG.2.mCLt+9nP+9OqTHP*p\Zj%H84&%j-[l_lr=&Qh%+sbQ*i/ikYliCoK6k]&W%"(Ae3M<F.:-p3dTIVr`+d.7np5+nWP8tbl6]r!!,+oSp8NO3Qq#j90\5tnY"A,VegNZ)K6oJhQSfgVW%%2ipo,cT#M0jg"f\aLN2'-u8+=`B*@eb?2S(F2T=]4g()8bOjfB1T>3Dd@r?HS"TAO]9Z:?=/X:RXi;88FhD`PU.K9:`^*_hhYg8%.ffQ7,ZfqE7O7kiFWqul`6InUc\NirJKCG:8<1*u:Q4@jqhiTgU/C*tN$RVB2L((@*"bo5)+iiRWB=c^'!7%\Hl,H:*=KF5N$L4c%+`!L.*-<#r/Gs**8,.os,H5KhiLcU%*&6D_7ZqsnD8Ho1q4[WZOr-bI4eddqUu`Xk7:mgme<OK!P"9<tOVg[X#CF^O,Ti9k64&bo%-$]?@8Es[sWjiX44ou(1)3NtqZ&-?QLa8G_JI.H,S*,]k*77hD'9ZiWMi!N8i>p3s,bMBr:M`?q;L9(?/"ej8Os@]8R?44*oEHS_%,/0;#^&c>1CcT^i,b!_Q'-g(1!+<-d84nJ[8;JO[i3e5/N_$WMN9#eqW6@emkh):@8SP<?(s+L\&!ImQ)=r/d,j4-uf1\c]kTQ3?%8_OoL$>JC^,cqCJUbX7<e&r4J;j(Z6h\sO&8^bV/'4%I\iHNq/A4i"[LI-Y,-&KV_0iO8#GG'W`9hA5('25q[aa#P,E^Q!G3fRcC%&e._j6]rQYU?N:98b@$>e[Qbo_NLl?B1R'_Yp_o$I,bofSfgT]/d!mT8^<A\g]U28-4'uOO<e8VI]#(L3TC`-6^$5fT.`T1YS(&>%66p2cDU+'6RPlS=Hm=f%W@88Z]u>Es/Z`kHP3V@PQ5:c+,E3p(P%]Ho&gN7ao^ascM$=ld)+ce;MAmFr7&rpQhiQoXVEpW5S?]cP%PU,3VGJ+V93JUmm)3^l^7-g8(,e6J4<h^k9.GoSQP'!l[H@$`-;Xi6hp@H*Gd;G8aKLqo+&`&g"RW5is8ZGc:$W"VbdBp;TR&!?E%qY2ur8NB_gLlFtu@XUk9,atkQ'..GMD"`fZ;Y=RQOXNdmc=h\U8MjH:&g`C3RT?..NN+!D;j(fDjs<W_nu0\sM3:8JG1o;TWYq[q%cj,_5_,Od[%8!:n5+WlgMPEenhN0!\,d]dt,dgJonJdWjdnFYG&gXHfl7Mf$JL#reE?Iu;U`*qS<o/q6X/L@#Jg;X>:e?`o)E@+R%,c._p8VeYRd\<E5NCZYT-bg6blD=J4DF@AS1IWL+6rGmAV<Vtg&l#`(@O*CiWgo1g8SJku'-i>\Xsc#fB`?3s7T)B)]AV2`8?2DA%O*b=]Y@oPW)+c.0!3@M:&s.W,8nK>_bKQMTL*WrN!,"jn$E%3b,e<fePhWnqafFWs-UX'kZ-qeW8<Snm+#/r6D@ZWLbt-:LTIE!B%1Qm'3,Mmi'OoR+H.5rJCkI]cC01M*H%CkteLEsVakBt`kDdlVuT;N$eF8knlf]U)q"Qb*"IsH\FJoK8TQ3I6Y-`b*olMBF/N2F#K%?3C/hXfBd$hn#V[p\bKjF2(F[Yd3'Llg++4H,rWP,Mpl#%J\['#)b:t*]&lPd9]1HC*)ut^2D<T-8\ie'p2s>d#[l=oMY:R\+Xrs%r\j$>>fl9$SS,u5bCb8n2!C``h4VMWH9^"-3Yg^A5MBo"9?i+Gg=Hf1.h_cp?qpDQ/,sC7f[#suJ,b!)[,7qP64lGJ*Ir^-VU(QC%[+=UBb.Whu=+7t&^WciQ%/PN7d\%9+OTq@_q$d,matFV([ooO#T\'-D*q[/[bCeZTgk3nUr.74aRmh(1+BS(e%6>4<e"G/?pXV4:%nd>[#2\!72s*?&QT-]X!ZW-_G2Xm>UoKV*GJ%!c)$_d3-`(B>gL'7WkI^c^cK:r+dGD#b0.%a)W^\l>(5L#>_IjpCa250>+If\[8%dH'K[h:Tco#!\m?RZ(9IG88Oe==Qe@>AjM1I6^%tWiYH\cWq"JLtfU/eD6,T3LTtO:AWHo0LmNW)6$*B2Fa`Oc_uoonh"/H/(&qY%Ph#'Gq7a\t[+MO\O#U;tl(Hg8'*_/K%naj&Jdkm>L`ibKjaji%nu8]k8+Z&$Y?''3<jEK9.q>q\GKaIJ=:L,metX[pS5tt/R@AMR%hbL+O/>b9>;_SV"7L'i;JRoYX\m(@u;c@)F>)ZK^2\g"L6"..kPM!AY<abM>)<05cM^U++%_>-U?LH[sVB'c\8"30i!U9q^1pW'@%G0i+SVcC8*AR<A[$h)WQK<B4[H\^#6*\jn0XB`6<WBW4c)(=#LUQnPq%F[ES5T-\/Kgml4$W1IK*Eni@\F%jA7H<8!4IeN`fgLUm%Mf]i=<;:8SlsDMOfgLTB-rWkkS*83e1+Qna-Fu*edRS(rdBuhWA!5BB`mC`&)7!H!7>E4:Obr]I>)h>d]ef&M6aOa^hO-N]<dj;3%#Y;Sk)RkR?]"u2LU2-OE>6*Pt(S*DY&n.f#oeJTO8p$6*VP_5iXBQ*Mm"kLI)]bA\AXle&N,6LI6)s:G6RunW5lTYsO\L=+Ju\44%6dt'AVcAS9c'Ub`XR)Zs>X=_'!g@Qf3Sp8iJ#S_dab(TAP=Li67oh.pkShHL0!fq]X^u4/7rK1aM@^T2T]Dq0Ac6_5_j^"*"S1.=%9=TqIkp]:^BO!TgO[j=^*_f3-U2fRp6OTg>*L&[L;UD(G&%h$Df7.hN6.D?dQ\I'rX47sF\sF_D/kR0Zn#TX@&L4nnOB/6F1&4;R%;mgS\C/n_R@>5=iC.uA+>42g!eJTTi:;h`INQFg,-8-))%S:`J$-Q46].].EiHudT/X"Z,R!d@_IBh@?U2+!H*YCRXS338.3e]WG%(`>Gc\'rKer5U1dlOOl8Xr(77Kq=6(VW?-@)Jr=f\#()u-Q\QG3e`4o#:qU6@2COcX8&%!_\&nm`41Qjs2<i`P"1_L9#-ulFA33J%YDAr4-3*M%q1;j"SP=3#^#Q/A<efZ]E>ag<m%HdfK8VW',`h(N"FsX7JPG+&Z<<TXQ_[Y>J5te(08EHVNs3XL9ZY3#o=#`^84n:u%$Uu13Sk-DnCn^0U0c?=C)>VRKi)hT^>NjGH2YMJPnn<%E"(toJd.QE+gF"U(6h4pak5\uE6AJV':P,W.ej%^?!]Y=_(tn#00slJl%]C#uBZ77T54$"6eZLYO>9c)qI=e.:OgU9H&[@<9HZ<BZcr6]"ZGF2M%=IG8;<`U'N%<PmAN,FQ=@15_2U^%j[IYK1o!b`tfGr/<q%XLND-,g9OH.jOU*4,83uC24jmX/<gol<JOHSl#a%h(c2bRg>fb&FrA0I%r*V(g&T3/!H7cF4.SY'@Cm>aOm&S2Ha=oc_1Z28*dV0%8^g&HC03iCIh*qGgZP@].Xo;>-X$XrTf(Tfcl?Enj^S*,RWjNZI#3u.;[5'\ffk0<N)M((1I`/O-tp_2qj]Lr_UP\L7Q/-?#&[oI%>[M][10Kl=P`RD)`:c3uEJA'-PU+5lh_pB8"i:MS;/DjlPA<o7/)06gl#g6Sf<I.YmoLG8/:"!Z+/]^g$5gR@1>9fsm(r%kZ>m%>%&KW(S_8\KLr_^n4*YXth"D1,/I!-N],BWqUNW@>d;>aEPcCnr)Q+tI'JhCP]jNr7ohp9c<QW7H!rE^B]2=Ur1cCm7l'[XX"!bnBp%YufU<LK4FRA?WRRA>_AQZ<,^=L\BfU+(P7Q3'k9P[`rqtKhAkU8rW'C)B!aaD0+.&6LpUUD3d*I\1/_P_drqM?if^%cj!$ugf<n"%S<nL1\Z<@fON-!*$GaZlO'Qe%e/eX[=Yl"]9Eg&O'%8I[<K3^.Nk#])@,i5q%TBZ7SSe=0]sUtA/mIMMCeukmS]b(fD0B-_/mIMc%m)rhm-&1P/j)S5S3JZ\VCOX88,:b[=;Hl6MSEjg4MUB:B02:mjs2E8D1hZ3UL!fapc-EEQkVBMWr"UfRomQerTE.Q@#JMck='s7!%Be2QU=4oWiB&HOK.l"DrL98N30/@1MKrQ=u@VF!u.^E./3[_&bO[Xc?d%KlgaJ+`&dBse,9,5Hm91..3F)FY&o$pBrF[_]K`sBqo%X>3jd>VQo8?"N%9RVofm.%$$]-?*%S/#@qHHr'/[e+"HqK"".9.pc[uKZ&%$k,S2LL=qNcciL>@PZ[jDoL6ir<JA%7F2a(#)0!43%<@6ckNoS,hA?N4X%de:ss'15i[!pbK<I9[@)PU9nMO0\@8UUZ)\.[iuO?hseWJnkB)9/K_0\=YFpOkSXnb=_m%f;4e=$fdXN/Ubk%j/!',<o/^8:,G^r10,9Q7l+_X]G6Lmd[+3:Yjk9EOs_ckIY?;ELXa;_G?QgPE`CV9O6\i:6D4`o2BK!o#bf":%.#fk/SA'h0=-.(%Gq1VTbF9LiX3ASYBcCCo\8ne)fp/5GPqnZFnP."QS*%<!4.)c(95csM@GPs)feb&c*Z-Kmpo_n:dk7Yqa3\^B)6-ruhT&GACWfj\%f#n2kb#r::^5JA/1frU-%.4$a4e9`".3;V(PZ8I-&d+oI(ETSaj3\R;,@?^!F(dURb#`.4?:IZ7s0g+!r6KW%PdGJ$U"t/^\jN6p%M:7`dlAhLtbY20>c59Ih2b08DMjGcb?;W4-W9'[Kek1?s2j^H-N`!3O_a18\`M4lJ!3OK_<J1`["gQApg9aA.3/h@\:-Kr6WdK'V%[#-@,<7rnU22C[+.r==MU$3)i$<nr&fnQW1Q251H$5Kr]j6C'e_c11s?CLgpboI"S<ilN?h_e'_cC-C<`\h#^OK$B)4IR[BRB#Zl%fC3KHVCH*GBM)d5b$)@-lU6h7AZaIDPQE19Q/-Id'-X,Nek2F*l-(P_Q/-K/oVYLc0Gn_f26hl._4%Kkb$+=)k41-*`i9Xrj(d5'%oYJKkaZh(YeI_nQT&aW:Mi3q!q4p$4nj<J+4nQcp_rfP:@HW6j^O[<+g(*)DZ<[ql6L#d5baPg;WfgC^!9c8KdL;nH'sC`fMR@36%*1DJsjK2V#G?ID#[,S';Q<.7^><$8skqFT*Q2P`/IU!bi%entijusEFX1[*4)s`OZq(ZAmQRm#R!,S#i&^XdJZZ<-K;2pgFCB#u+%4;G3^Q1L%&!ZA'*QpXdfC[KN>1,SZZ:s=e)!2Rc9;j?io@pI;=OKZg03Mbt?dQA*P,:)7?gsM[9bt6B;63SM*"SBi7D_&f.G`B8O%,9^Dolj;#q"Xn!%X63c_@tJ/jme&V&*#5g>jn#Y6n5RVhQVTG@bO@%822??95Q0V>Li!1kZd^%I)F45BeU&VqcUr!]A8Z"h8m47+%lfPmN<O"8D;kk<YXa#i!A?YcM-*>,4=u`=C[,P)?"^DS0P#c%*4m&=Jrd/E9jN1O>3s2j(C"P7tjBa=9LsP`LG7.?tMH<RTDY.43%d`Qm(<lGZM`$&hbXe:pr=SPOhJlZ+Yi'K`l>m7@K^kSn_nl=@!LSeH>q5Rn2E(?4MHrW)LU"L_f%3Y?J7.'Wqg%3as3Ae:4X--Lm%A94Tihb)*#8Qcq;/2o_\h/KE;ZSan6<Db8Q6eU"o]3!F<WrR\13XJ^hLlF\,f<U?82U.r'juE5,deBY,QV8#E"e_j6JV$obYd1@*%8m:aW;\U5t>EuZ%:RA1$X[kfX3tqk#GZZ6Y#U!3qMH<WcA]`kM*6Ut3bKB!Rh3Y7c*\1`#C^l3D!JncbFkSR*2FMRa$&G\aTK@()%;p^CP!Kc`IlqI0EdS$@.+D6t;2l+JsAMP<DfEpY)*2MS3+AG-P4ti8^F,#WR[`kF*)8@aY*_@K*HrY@6Tdb#a.;-VHR8Q.M2W_#b%!WCC;4d*"kA3?;Ceac_n1=l]mb??e?))#i[2J.oLL0m7gJb;eRC+3LiNKI4:.IpK,N(6gINjd(Z9<1g[%l,2#OT\An&?hdC&).f*%ikoShlCa)92U.qpSW8Y/-KEKqa":e$CqiVb5A?!YnU<rIK>ZsFp1/<?JFnle%.CS.9qOB-odbdJQ%gGhQ-jiP#a"MXP?[?og-ZTg%HmeW#atZ?3MUrcLe.e"ITU#9V%A2M<XKlQcg9`bTRR>Pj\g_@4X!mL'e3_Ppm>j*$h,SZXCj;tH]?92,0@Pt%:9&Z\d&+->R\EiC%kB0KRo!^iKd,^9ee;ES:10!$e='[PdR1e_#Rd7O&N4A],VRau$J9ujEU_SAE2%hWTY-McEf;RWL?=hSjf0,d]p9E3D0?.Kfhi"A-%(%5gNfIr_W<oS82^?Mq)fe_5]G)tuip<7Z^#&P;(BZ4`rh2]e0M=ZKcF.K'lNthG*f,U7(23\2XN3(b(,^Ye^F.Mn(:)hlem$^:_%?O#js+mAB2g5?tE;m8\hcAKdG=>@;qOh&WK\ZQ('.l->URmU+[;spY1"u^jOh3>8*-VB-trJp.ejbLiiJQe&g<VF[/P9UccQ$m_E%A/%bGGLVl(/q6B[P#aoSbt0oG/ijY`E[ee2f5VtU\LMZcNH:Zi/XK.5`2n3cBeJO+V6%0DTT#!VWS'2]KspIg;@B^GY.#f)b$0#/%Yc=nHjfPh*Y&d^,7?1QeN+"SVO#<c8GbsB':iDi(C5[WPDh;Q(o"0o-^R7u#@ULEcI3nTSB[LLq.:pJV-t`]H!@<%nI:rtR?nQ*C%Zu<+r%RaYZgf='moc>N<gf='mTbWQ]gQ`inP>G3!MFRkL,GU`+<kP!f`C5'?X1[3R@Hj,hb.]mCIO[ban0L5$okNBKZJq^X#Ds[G%<K3,07#]>i2U:u\V''iENH;cDTA3t[Z>gA6^T,h_NIOK@Qr%Q:`N4:rAY6*.J9"]'LdI]S32i>^rH3bt*5bOO1Nj#Y>Z"L9$<ltS%Ajj$I%-r`:JO6K>;sC?RF.JenEeh7Vp'9C=bB7'bde]I%`jJ!7"g&c&Qi"^(oqu'MmsY<SpDIQ:'B@b)?'\<uV57Pj8O3/+IVd>/%RDtPae6gq^IS07Fd$76>T060AMo!"<&]o0U;hm:Dak_KUQALEn3c9cD+X0q1V6H;B84lt+UjR\`Q&A%<D'G,EMTVNILdY0M4V<f+%WjMUH,$"83B_`u!]:@-RA0Oq5#B^L56mS5hFV5:c;M2i>2\F^X<!L">M+F2b_.au:dcY'oN"6Q#__"=6KLAG]Q2F)qFc\2!a[i3;%Xn0%X'<.bd+a3Kd+uuA8?J%rINbotd2A:qENFcQCV$T*59Vd\mXQl:36o((7R7Nn0#^&p:,Y'N@IM3Epe"*e$2\aq<fZY!CM5GSo%Jg.ff&9EQ=TucXJH"JI&B/qZ,bsY0E?N.i1lJ,DQ&ZJ-e@a$bCW<6<?Yk\im3d@3.cU=R(?G]Su&LhSj(D3V[<LYcXOdpTZq2pJ(%1p*F-Lt%9]7JM6AO_AWT^PPM,2C`Jf+qdVZS;E'g/#dA!O\!JD2A)ppLk9>"&LgE_pa.1F.+f?HOiUiQ5qjIE3d7eL-6s3uGHV=0%eA7o6(.]^>H.S$D8lL-27O"s?/Kp6^4C\R>V$P)s5U;e%a<Vl@XhBQ^*IuYL?k\Yd'_13A&W*Bu?6URR'FC7)6mS4A:_FA^#tU[p%+sM.Z@NW:?80iG2"@OFKs4.F26rRYE&Wo+:EQ1O;,aqL.M24Rk07A@A8Ql9U&1NSJBEBBi3o12MI=OjF`>^'Fd[K%*"[ks<-2IV(%d_o$H5U;L>N<DYDBuc`o8=^*QC:o*g1khqT+L9U4,bBf_Bd/p&&rGbHj,HI$l.74,&l"5=RtsJ$6TO`K&a@33rk*qQ,"9`RK1)G>%0-F.?<_i8nM!V_33\q9qM>:lGOHM#W-Q]Roa"GTcjrpkWOa0KXYr^qn*jR;L&GU5IOZEQ9UA>W:C$E395U;d^lU4,RkGlNGM24RK%[$ZY?[bhEoha!u\j?/t>Lub8ZSgOQ$21hSZ&@oC8AfsuS$,S_^&4ub(cER\3,X12`&J/)Tc]`TERcc0(IKP^TXBbW36k]"3"-\:,%^)_9Z(D0fF)aG_o8T*XXbX<^ZNM8WN&W+N877JJ:Zpi)-,aqn-,U?8+?eLE,@T$'YJqQN)qPnC466]W=^18LPYGusm$&NJRo:IcO%fhNWo1)#N,5@lX5BU[]h'1n^i7^eFM)W4M"a[fs#:n3M5igS=c3$FF648<i-,SFtZ2f'b&,)H(/,U=!s'Q6;^8U,A?qaMd[m.Pl?%OmNVY4;!\Y_1GEn,-o/g3>7N[eBTiNOfQlH"sRbrbJcgM,+6&X8;i;bJldA8&eR^_L1<Os,24;S'+r@!VmdopOY*lI1(m0iCO#rC%RN9A"DCVq\eN6]l/c%hF.[#7jg@T;5P-!;Z]r=OZD>=eZg"+\\U*<h7bu^V`R?lMDB.?g1=ojMMMSsn=&DTZB[V.:\WCY!`QMX*>%Ot*MZm6jB@agr1&s%nhKj%!?bCNb5=/eUku9&_$d-rohPiZce"Hp)J3K\>Xr/od"e6CST(fcgq\F-0'W"a<RDUnVYfq;NTTXq__[%\O\!'j-bgA&abjo8>Y"RYt4/'\m\B:,^$^T["UrCM#g1M,arW+&f)p.5hYLnMkm,PdRt5ifpj1PZ,d\n[Z!Y`8.3aG,T4(+Tt[eQ%k%\2!,*A+`S>\t8JNSdH,T-5YU%>NH+;jfQ'`Y$S],_4rMPN]jW]!/*XQiEM9Mf71ZYbF@q[q_X"@WrZb:W6r,5^=P>_XGL,R%g1%&rK"m[hBP1K+H.-Ublu7',IRIlJ5cKA7$LS$&`?C_0_NI8.oj+8Y)eN1^/me/.ug6W5sG`h+UWjp.4n!)2^fqaIAhn/<am!1DJN;%#a1lPD2=hp&ep2"V`6u)7.c@)85pk'H<VXG&kshNM2U_eNt[A.6lP+17FF8d4lk`LV:>%p,5\d"kr0E8VW?=H7A:[Hgfu+m_RcpG%?t9dD8HpF:D-/NFO_R;oNh!o+?6YarJWXXBIO6`]:"TCaN+D*rf'red[@>[m2Aca?A#=:!O_C!!1)QuoH_eh<0X=3X]aRAR+"K)_%M57fC`'sCZS#=J!G-.d4MBml.jQ/`tp-iXB.^DPL\P,Gd!GEc/P,MuT,708r1Hi:Ra<&BjN(%J;?-X6%M1&GJ7UdTVa'H^nNC6\.%G![F#>hp\_&o#aV$]XM8VOGn'd\$bB,W(ZY4A0Q],N50BTHp4n4hRX0NC3k$b%N&(NGSEE7WKt<N].l5-6>=DOZGY\m0-#Rmd4qI%,>#+?]9j$t&m!8OQ.X0laIWN);Z&FR\`(Wdh#f4GO_F_')ij9)Us*d'^1f0X$'+ATcX\r>8(9e9,LuBjiV/h$K`7.<@'bu1?-`>8%fLWBsqMU=Y&6j!o&f]NaA'Sm9-RAqc-T4l#-h_G7NC6\qQNTf.c!.:.VBa.?`6(bDNjW+=3`9D?=3Yh4Nc=BP&fj!`R^_P&&VsD`%,LPSI8TZ4Tg)M@o*QcuPZo9!cK)!H0,hi#**D(.W5+k;6MMXFkMiO#KSo<)?C;GA5i5fo?3;!N:,Y8pt/AmT`XhEphV.M6JIFF<'%0VaRs.e^O#(ESF1`@Tu1,<?3E4;(@?((qZ[1:J5Y$'/=,qohQjaPoj?Ua._9'-E(s?;?d(7uf!HANk.i/mMsO&kuSb`(+jHk2T$X%jB)dp_B\;;02GB\,=c:KAiu7J\=!)F8*Z&Y_Qr^Q&]r'2O/.-9d.Du]U</4Vn4<*QVLHM(,LsJV]]_m=HGu@#3g(tCF5f,!8aLu&%ni%R\m!ttj6q<9K@eM`%3ED?=KLb=J#S>g:,hgc:GjrdO_[r+.82Q$f-U.+]\,?UT3EiN,M3!n@ba%roWYq<_1*;?BnLX9o42u^?%Oc92L>IjRNdA#eiiZliq=#M*[RW#qr*iU'8roM-E<u+0C,=aRnb^:\fo.ma"5*@T(Z\k656t>c.JE5ps?=cA7c+d`jP%+WMSH-bD%P?gL#OiC"b%n)Qh#S2,(P%4860I)``>DOPsI>aWkKh.4mGU5b@9F4Hm)3I<c'R)kh8#1NF7$?QXNtFqrjI658+%-`u9lriM!?R+`%`s7_pCALR],"^(mpp5WEAo08c1D\'U8.o.#"RX,uP".1N+u,8Pn6$kiP)?`qn(<RE:Ht>EbXg$s<h[`.U?N]NN$OSCJ]((dmsl6I%N23h#^DKPV@,07C7WP*?kRo(22?pYU)3InuL\;o;B4MB]6B\heC($GkS7f2S8;&6[qaX'##Csk(RaYCd,glD^1*O2\p,=0U05nT\%,)Ko^F!Hjl#X[Yd,.Wp22^18mm'tr/,T.MLV`#a@4Md2D&P4j^\2#6'Tr@1D$-?<ph`ML6jBHSCT*`UW9bK6*M8n&,$-=&4^J%0r%GH??_/jtk*7qbmh,g").P&ir8V:G-',Y?D1F-.$U3Are+&4pI]@Bpi7<#!>3?\kMP0_?`27$>u1WTT2%6rU75@O1-*C(_bJVEZ^g%Ou(hGB1A%%OI7UBOt)a2!6H*#EWRN,iJPt@,PAepM)QK4UcX?b7uegqN!YP5e,=O.,LNm1:3\%QH=&!]Ei@^tn&NEmV00V4%j$Si%[K7D/7+3GO_BXhFou2jo*f6Uo1Z=H<c\aY()ip3dj1+>E,V]dcNZ<h$S0^3/ae\gR,DW/X(EJ@.2*0-IdM<-,FQ=S6hA#'=8"s_2%8Ta#9;1X.3U*J&BZYVZ88Irms,EXsh-T5uVW?@FDZ]So;klZd%*/[^'*nkGk+Q,MKo4B5p0IS;*'$4De2B+YWW^(#<a*GXWYh;Q(%/J">1*:iLG.V#fIBWB`32A/`,O2OM:]KFd3bsnGl8iX)<j6Wp6,W9[.A2V=U5AVU6qaG<\&l%8Y"@isTRh^PT^l^u-pig0la*%6%%19lu%>0_uL7\Zm87q*]uWhJ%0fuTsPCa<0r#eJF)HhAe4UQL$QGlF0UKO:"_^:CQQfe)U;o7TkJs8*`"o?aA.V?cp`2Um5'7d'U!%!cEMeaO;KnQ,:U@>341GU>ph(o2b[u`uCAPoWJ5K#CLrh>jfT`O!?OVTHEPYkb[E-DsaS0I=<*br3mb)>9p*34Qo:^%=5"!cs-CY%6%9errAPfT`33RW4=`U!*qZ5)5pu'c#5r8umb`K?&3nq[k<V>dCX>`!KAP>6%JnP4oY:?t.Hh%297q]#f:\J!#JIOKS&i<<f)@Y(%LZiM">Zr3@US^=)mHXuT'e.sGnC'T256'=Yp1[`]YPhn%0%3&^I/Rk?(4Ac;FoRT$cPC1uYiYJnBD[j!pB;f>7SD5LncQ%j+X`Xg%%lq=B%Jf\.0,X8h=ePJMf:?7io"G?&6f'JDL7DWF"[i8IbL><(8!PojGSa-LJG76YI<p4i(C^$g(8`b+fDfprq"aOS57>"$jKS3s%Olj!Vb%G@U:E4"%O<+N"c+j;HfDk8'f)PSB^]/5eq>UEnn:uMgL[T]jli6n]Dh%O8J,'"mr6HJanD/$_q#16liE+q:rqHH`YM]BG%&-(tUs7t2`s7!oJ5MhtRIeCb]r\+9Vjl;u7QiHp6s7Dr__fu+k0l`&U~>%AI9_PrivateDataEnd
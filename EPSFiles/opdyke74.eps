%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: opdyke74.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Lisa Tauxe
%%CreationDate: 9/10/08
%%BoundingBox: 0 0 952 280
%%HiResBoundingBox: 0 0 951.6543 279.2945
%%CropBox: 0 0 951.6543 279.2945
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 40 8%%BeginData: 6976 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD05FF7DFD17A87DFD49A87DFD16A87DA8FD05FFA8FD78FFA8FD06%FFA8FD23FFA8FD54FFA8A8FD04FF527DA8FD22FFA87DFD53FF7DFD05FF52%7DFD23FFA8FD54FFA8FD05FF527DA8FD17FFA8FD09FFA87DA8FD05FFA8FD%13FFA8A8FFFFA8A8FD34FF7DFFA8A8FFFFFF7DA8FD12FFA8FFA8FFA8A8A8%FFFFFFA8A8FFFFFFA87DA8FFFFFFA87D7DFD06FFA8FD09FFA8A87DFF7DFF%FFFF7DFD0EFFA8A8FD24FFA8A852A8FFFFFFA8A8FD0BFFA8FF7DA8FFFFFD%047DA87D7DFFFFFF7DA87D7DA8A87DA8A8FFFFFF7D7D7DFFA87D7D7D52A8%FD08FFA87D7DA87D7DA8FFA87D7DFD08A8FD04FFA852FD0DFFA8FD05FFA8%FFA8A8A8FD05FFA8A8A8FD05FFA8FF7DA8FFFFFFA87DA8FD0AFFA8FFA8FF%FFFD04A87DFFA87DA8FFFFA8A8FFA8FFA8A8FD07FFA8FFFF7DFFFFA87DFD%09FF7DFFA8A87DFFFFFF7DA8A8A87DA8FD047DA8FFFFFFA8A8FD08FFA8A8%FFFFA87DA8FD04FFA87D7DA8FFFFA87DA87DA87DA8A8FFA8FFFFA8A852A8%FFFFFFA87DA87DA8A8FFA8FD05FFA8FF7DFFFFFFA8FFFF7D7DFFA8A8FFFF%7DA8FD04FFA8FFA8FFFFFFA8FFA8FFFFA8FFFFA8A8FD08FFA8A8FFFF7D7D%FFFF7DA8A8A87DFF7DA8A8FFA8A8FFFFFFA87DFD06FFA8A8A87D7D7DA8A8%A852A8FFFF7D7D7DA8FFFF7DA87D7DA8A87DA87DA8FFFFA8FF52A8FFFFFF%A8FFFFA87DA87D7D7DFD04FFA8FFA8A8FD05FF52A8A8FFA8FFFFA8A8FFA8%FD0DFFA8FFFFA87DFD08FFA8A8FFFFA87DFFFF7DA8FFA8A8FD06FFA8FFFF%FFA8A8FD06FFA8A8A8FF7DFD05FFA8FFFF7D7DFFA8FFFFFD04A8FD08FFA8%FF27A8FFFFFFA8A8FFFFFFA8FFA8A8FD04FF7DFF7DA8FFFFA8FFA8527DFF%A8A8FFFF7DA8FFA8A8FFA8FFA8FFFFFFA8FFA8FFA8FFFFFF7DA8FD08FF7D%FFFFFF7DA8A8FF7DA8A8A87DFD05FFA8A8FD04FFA8FD07FF7DA8A8FFA8FF%FFFFA8A8FFFF7DFFA8A8FFFFA8A87DFD09FF7DFF7D7DFFFFFFA8FD07FFA8%FD04FFA8FFA8A8FD05FF52A8FFA87DFFFFA87DFFA8FD0DFFA8FFFFA8A8FD%09FFA8FFFFA8A8FFFF7DA8FFA8A8FD06FFA8FFFFFFA8A8FD06FFA8A8A8FD%07FFA8FFFFA8FFFFA8FD04FFA8FD09FFA8FF27A8FFFFFFA8A8FD05FFA8A8%FD04FF7DFFA8A8FFFFA8FFA87D7DFF7DA8FFFF7D7DFFA8A8FFA8FFA8FFFF%FFA8FFA8FF7DA8FFFF7DA8FD08FFA8FFFFFF7DA8A8FF7DFFA87DA8FD06FF%A8A8FFFFFFA8FD06FFA87DA8A8FD06FFA8A8FF7DFFA8FFFFFFA8FF7DFD09%FF7DFF52A8FFA87D7DFD07FFA8FD04FFA8FFFFA8FD05FF52A8FFA8A8FFFF%A87DFFA8FD0CFFA87DFFFFFD04A8FD06FFA8FFFFA8A8A8FFA87DFFFF7DFD%07FF7DFFFFFFA8A8FD06FFA8A8A8FD07FF7DFFFFA8FFFFA8FD04FFA8A8FD%08FFA8A852A8FFA8277DA8FD05FFA8A8FD04FF7DFFA8A8FFFFA8FFA8527D%FF7DA8FFFF7D7DFFA87DFFA8FFA8FFFFFFA8FFA8FFA8A8FFFFA8FF7DFD05%FFA8FFA8FFFFA87DA8A8A87DFFA87DA8FD06FFA8A8A8FFA8A8FF7DFD04FF%FD04A8FD06FF7DA8FF7DFFA8A8FFFFA8FF7DFD09FFA8FF527DFFA8527DFD%07FFA8FD04FFA8FFFFA8FD05FF527DFFA8A8FFFFA87DFFA87DA8FFA8A8A8%FFA8A8FFFD04A8FFFFFF7DA8A8FFA8FFFD04A8FFFFA87D7DA87DA8FFFF7D%FD07FFA8FFA8FF7DFFFFA8A8FFFFFFA8FFA8FD07FF7DFFFFA8FFFFA8FD04%FFA8FD09FFA8A827A8FFFFFFA8A8FD05FFA8FFFFFFA8A87DA8A8A8FFA8A8%FFA87D52FF7DA8FFFF7D7DA8A87D7DA8FFA8FD047DFF7D7D52A8FFFFFF7D%52FD047DA87D7D7DFFFFA852A8A8A87DFFA852A8FD06FFA87DA8A87DA8A8%7D7D7DA8A8A87DA8FD06FFA87DA8FF7DFFFFA87DFFA8FF7DFD09FF7DFF7D%7DFFFFFFA8FD07FFA8FFFFA8FD057DA87DA8FFFF7DA8A8A87DA8A87D52FF%FFFFA8FD05FFA8A8FFFF7DA8A8FFFFFF7D7D7DFD05FFA8A8FFFFA8A8FFFF%FF7DFFA852FD07FFA87D7DA8A8FF7DA8A8FFA8A87D7D7DFD07FF7D7D7DA8%FFFF7D7D7DA8FFA8A8FD08FFA8FF7DA8FFFFFFA8A8FD06FFA8A8FFA8A87D%FFA8A8A8FFFFFFA87D7DFFA8A8FD047DFD04FFA8FD05FF7DFFFFFFA8FFFF%FFA8A8A8FD07FF7DFFFFFF7DFFFFFF7DFFA87DA8FD06FFA8A8A852A8A8A8%FD04FFA87D7DA8A8FD06FF7D7DA87DFFFFFD04A8FF7DFD09FF7DFD06FFA8%FD07FF7D7D7DA8A8A8FD08FF7DFD07FFA8FD0AFFA8FD08FFA8FD08FFA8FF%FFFFA8FFFFFF7DA8FFA8FD07FFA8FFA8FD09FFA8A8FD08FF7DFFA8A8FD07%FFA8FD09FFA8FD06FFA8A8FD06FFA8A8FD0BFFA8A8FD07FFA8FD12FFA8A8%FD0CFFA8FFFFFF52FFFFA8A8FD13FF7DFD0BFFA8FD11FFA8FD06FFA8FD15%FFA8FD07FFA8FD24FF7DFFFFA8FD32FFA8A8FD05FFA8A8FD13FFA8A8FD2C%FF7DFFFFA8A8FD31FF7DFD06FFA8FD15FFA8FD2CFFA8FFFFA8FD32FFA8A8%FD04FF7D7DFD13A8FFA87DFD2CA87DFD04A8FFFD17A8FFFD17A8FF7DFD05%FF7D52FD04A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8FF527DA8A8A8%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A87D7DA8A8A8FFA8A8A8FFA8%A8A8FFA8A8A8FFA8A8A8FFA8FF7D527DFFA8FFA8A8A8FFA8A8A8FFA8A8A8%FFA8A8A8FFA8A87D7D7DA8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8%A8A87D52FD04FFA852A8FD16FF7D7DFD16FF7D52FD16FFA827A8FD15FFA8%527DFD16FF5252FD39FFA8A87D7D7DFD05A87DA87DFD04A8FD6FFFA82727%527D527D277D527D27277D52277DFD71FFA8FFFFFFA8FD07FFA8FD3EFFFD%077DA1A8A8A8FF7DFD04A8FF7D7D7DA87D7D7DA8A8A87DA87D7DA8A87D7D%A8A8A8FF7D7D7DFFA8FD047DA8A8FFA8FFA8FFA8FFA87D7DA8A8A2A8FFA8%7DA8A8FD077DA8A8FFA8A87DFD04A8FFFD04A8FD077DA8A8A87D7D7DA8A8%FFFD097DFD0BFF27F827FD04F827FD04FF7DFFA87DFFFF7DF8F85277F852%FFFFA87DA827F8FFFF27F8A8FFFFFF7DF87DFFFF27F8F8F87DFD08FFA8F8%F827FFF87DFFA8F87D7DFD04F827F8F852FFFFFF5227FD06FF7DA87DF8F8%27FD04F87DFFA827F8F87DFFFF522752F8F8F827F8F8A8FD04FFA8FD05FF%F820F827F827F827A8FFA8FF52FF7D7DFFFF52F8F852522727FFA8A852A8%2027A8FF27F87DFFA8FF52F852FFA827F827F87DA8FFA8FFA8FFA8FF7D21%F827A82752FF7DF87DA8F827F827F827F87DFFFFFF52F8FFA8FFA8FFFF7D%7D7DF827F827F827F87DFFA82727F87DFFFFFD0427F827F827F8A8FD04FF%A852FD05FFA8A8A8FFA8CB7DFFFFFFA8FFA8FFA8FFFFA8A8FFA8FFA8A8A8%FFA8FFA8A8A8FFA8FFA8FFA8FFA8A8A8FFA8FFFD05A8FFA8FFA8FFA8FFFF%A8A8FFA8FFA8FFFFFFA8FFA8A8A8FFFD05A8FFA8FFA8A8A8FFA8FFA8FFA8%FFFD05A8FFA8A8A8FFA8A8A8FFA8FFA8A8A8FFA8FFA8A8A8FD06FF7D52A8%FD0BFFA8FD09FFA8FD05FFA8FD0FFFA8FD11FFA8FD2CFFA8FD04FFA8FD0D%FF7D52FD06FFA8A8FFFFFFA8FD05FF7DA8FD06FF7DA8FD08FFA87DA8FD08%FFA852FD05FFA8FFFFA852FD0DFF7DFD09FFA8FD05FF7D7DFD06FFA8FFFF%FF52FFFFFFA8FFFFFF27A8FD06FFA852A8FD08FF7D7DFD06FF7DA8FFFFFF%A8A8FFFFFFA8A8A8FFFFFFA8FFFFA8A8FFA8FD07FF7DFD07FFA8FFA87DA8%FFFFFFA8FFFFFFA8A8FD04FFA8FD07FFA8A8A8FD07FFA8FD06FFA87DFD06%FFA8A8FFA87DA8FFFFA8FFFFFFA8A8FFFFFFA8FFFFFF7DFD09FF7D27FD0B%FFA8FD29FFA8FD1BFFA8FD0DFFA8FD07FFA8FD16FF7D7DFD7DFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2008-09-10T16:04:35-07:00</xap:CreateDate>
         <xap:ModifyDate>2008-09-10T16:04:35-07:00</xap:ModifyDate>
         <xap:MetadataDate>2008-09-10T16:04:35-07:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>76</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgATAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9UMyqpZjRVFSfYYqwzQr&#xA;vyZ5z1q81e0ittXs/qVpHDcTQBiClxeB1AmQMNx4Yqn/APhLyp/1ZbD/AKRof+acVd/hLyp/1ZbD&#xA;/pGh/wCacVd/hLyp/wBWWw/6Rof+acVd/hLyp/1ZbD/pGh/5pxV3+EvKn/VlsP8ApGh/5pxVb/g/&#xA;ykGLfoWw5EAE/VoegrT9n3xVd/hLyp/1ZbD/AKRof+acVd/hLyp/1ZbD/pGh/wCacVQH6I8n/p39&#xA;EfoKy9YW31syfVYuPH1PTp9j+OKo/wDwl5U/6sth/wBI0P8AzTirv8JeVP8Aqy2H/SND/wA04qt/&#xA;wf5SLBv0LYcgCAfq0PQ0r+z7Yqu/wl5U/wCrLYf9I0P/ADTirv8ACXlT/qy2H/SND/zTirv8JeVP&#xA;+rLYf9I0P/NOKu/wl5U/6sth/wBI0P8AzTirv8JeVP8Aqy2H/SND/wA04qt/wf5SLBv0LYcgCAfq&#xA;0PQ0r+z7Yqu/wl5U/wCrLYf9I0P/ADTirv8ACXlT/qy2H/SND/zTirv8JeVP+rLYf9I0P/NOKu/w&#xA;l5U/6sth/wBI0P8AzTirv8JeVP8Aqy2H/SND/wA04qtPk/ykSpOi2BKmq/6NDsaEfy++Krv8JeVP&#xA;+rLYf9I0P/NOKu/wl5U/6sth/wBI0P8AzTirv8JeVP8Aqy2H/SND/wA04q7/AAl5U/6sth/0jQ/8&#xA;04q7/CXlT/qy2H/SND/zTiqXX+g6HY615fmstMtrab69IvrQQxRsAbC6qOShWocVRPlPzI/mPSp7&#xA;w2jWRSeW2VJA55elQF6SJC1OVeq4qxj8v/LM/lPzDdaHJqJu42s4rhZSnAyvLcXUh5cjLRqs54hh&#xA;sK7/ABcVXomKuxVa00KSJG7qsklfTQkAtxFTxHegxVB6fq0N3a3F0VMMNvNNCzuRQ/V3McjbdgyM&#xA;D8vDfFWPj8ytEW2uJJSBLFIyRRqWZZArEV58aLsOVG/XUBVEr5xibXo9KpFWScRq4ckGKSD1opA9&#xA;OHx9AK1rsBT4sVTHWtdh00pCUL3M8NxLbiqhCbaP1CrEkNuPAHFUPpPmcXkdzDPaS2+pWKFrq0NC&#xA;KrUfBJXgQxHwkkV38DRVKfK1zqmoeYX1e5jMdlfWjmwDn4xGkqGjKQvEjnToBt+0SWKqd+YNdutL&#xA;ES2unzahNMkrhIdyvp8QKgAmhLgbYqg9H80IvlC11rVpAWlDcjEteTc2Cqir12Hb54qh5fzF0xbm&#xA;0tUtp1uLu5it40nUxVWZxGJQfj25HoaHFWV4q7FWM6t5wmhmvrbTbCW8lsU/fTgUijkFWKyAlW+w&#xA;KgjY+w3xV3lnzCb3WNUseZuYUk9e2ulYMgjKRq0fYrSXnwqByXffqVVun+cbP9M6pZ3c7CO3dmgZ&#xA;kCoscUXOQEgBuXJJNt9l8agKpjL5s0JLeWeO5E6QNCsvpfEVM5ola0+nwxVfbeaPL91fGwt7+KS6&#xA;ArwB2O9KBvslt/sg1xVG394llZTXciPJHAhkdYxyfiu5oCRXbFULoGrHVtNW/CBIpXkEJDcuSI5Q&#xA;NUbUJU8SD8S0batAqmOKrPXh9b0PUX1+PP0qjnwrTlx60r3xVZNe2cMsUM08cU0xpDG7qrOfBQTU&#xA;9e2Kq2KpVN5p0GOIOt5HPVxGqQMJXZiePwqtS2/h+vFUfdXlpaRerdTJBFXjzkYIKntU98VQ2p65&#xA;pmm25nup1CgqvBSC5LkAUWtT1r8sVRkVxBNz9GRZPTYxycGDcXX7SmnQjuMVSvW+X6T8v0IA+vyc&#xA;gRuf9Auum+KsT/I9JF8pXImQQXS3hjurURzxGCaG2gheJlnCt8Jj2oONKUxVO7/y9pmr+bLxryOr&#xA;w2FmI3WnIcprvxB7gGnfoagkFVu30/zvZW3oR3lvd/HSNpS/NY1NfilYOSWFQSVahpQUqQqmWgXG&#xA;tzLdDVvRE0UioI4AwC1jV9yWbs42qd67kUoqp6qR/iHQ1KqfiuWDFQWBENNm6ivLfxxVvyqaafdR&#xA;H7ceo6hzXw53ssq/ejqcVY150S3sPylv5rWCOKWWxgA4KF5SyFFQuVp+025xV1ytolnpV3LAks36&#xA;T0yESlQXAlt4F+0RWlWriqY+ebi2tprGachUEN6gahJ5SQhFGwJ3ZgMVT2OONtXvVZQVktrfmCBR&#xA;qvMN/HbFUHo6Ig0ZUUKP0fIaAUFSbck/ScVRtyiSatbo6h0e1uVZWFQQXgBBBxVALHBDoyRAKiDU&#xA;gEU+I1Gu1e+1cVQ/nr/ebRv+2zp3/UQuKslxV2KsWsbZP0Hrl+yUvLsXIuHAcchF6ips5PRTT2+y&#xA;fiBxVC+SOa32t0b4rm/1AIx34/V7ph071+sD7sVSPy/DDd6FeajcoJb6S9vw9w2/JGglmWlNqV4t&#xA;T2XwXFU/0byrpGsaHo2pXkf+ky2izSCMIqMbpfVKleJFEaQ8PDFUy1Xy5okelJHFZxQx280MqyRq&#xA;A8QEsfqSK9OSngnxN123xVMdcAOi6gCKg20wIP8AxjOKrNChjhsDFGKIlxdACpJ/3ok6k7k+JOKo&#xA;y5IFtKS7Rjg1ZIxydduqijVI7bHFWB22m3msxwahHdXEeuQabZOroVEZkYs7ryYfvY+S1X4+Ln9o&#xA;7kKp5Z+R9KEIF56k59ERIjSufRDLSZUkBVyHapIJp4AVNVUX5b0xdOF/apcTXEaXA4tO3N/ihjck&#xA;mg/mpttQDatSVWJeW/K6G3XX7sJ9Yub+G4iWOtFdrsrJUHah5ClOnyxVk/mzSYtTfSoJYVni+t/v&#xA;Y2YpzT0JDxLKCwXkofbqVA9wqk/k/wAsaBf6UNUeBWkvEeMhT8KUX0WZQNlZuJYAbJWi+JVTf/A+&#xA;iq0PovcQRxOJJIo5SBMwbkDMxq77+LYqiNcAOq+XiU5EX8lG2+H/AEC68d9/bFWJ/kvIyeU9QAuJ&#xA;bz0rxmS5uIreCST1LSCarRWsk0abyEcNiv2SoIxVS/KHzxqHnBbjWL23iSea1t45TahliT07i8Cg&#xA;rM3qVZadK4q9JxVB2H+9Wpf8xK/9Q8OKoLVP+Uk0P/o6/wCTQxV3ln/pa/8AbRuP+NcVY3+Yf/ko&#xA;p/8AmGsf+T0OKoeOZ59E8rrIqhW1yIEhuRkRI5ZImbYU+yhX/JCkbHFUR+a8zRw6Zwbi5mA26lWm&#xA;gVvwamKsgu9ctLDzLLb3PwLJp63JkJAAS3kk57Hr/eD33FAd6Kt209vZXel2l1KkU8GnSCVWYClD&#xA;COvT/dbfcfDFUa8sT63bKrqzC2uagEE7SwqfxFMVYze3djqWn6Z9UuVYJryNzXxW5kl49vtJiqfe&#xA;ZoY2trO4kmEEdne207s1OJHqBKEt9n7da+2Kt6Lra3djcXF3NCht7mW3dlPFAEkKRklmYfvBxYb9&#xA;xiqJ/TOmG8SzWdWndGlAU8gEUAklhsNiPvHiKqpXbSF/KN/I063AZb8+uoCqR6ku4oT+vFWOeV/M&#xA;Gn2Qe4uJOEtxNqcwjYFeUrGC4kUbGgFT/q9DviqCMEFj+VVhKjiJ0Sd2kViBI628yjdT1cIFBHy3&#xA;FQVXpdlaQ2dpDaQDjDAixxr4KooB/tYqhPMYmOgah6Mgjf6vIebCoACktt7rXFUu1vzBbx6br8dw&#xA;hhisEEHqEgl2nhDAheoA9Qb/AD8DiqvbatDaSWlm61e/u71Ebko4mOSaUkgmtOKHfp9NAVUw1C4T&#xA;9E3VxE/NBBI6PE1CQEJqritPY4qx/wAmRSwXP1d5fVWDR9LQMq8VB53RC8QSAQhT8MVZXiqQaTdT&#xA;v5u1+0Ln0IEtJkTanKeNlPau3oCnzNe1FVDRdvJ1m5+zFKksh8Eju+bt9CqTiqdX/wDvVpv/ADEt&#xA;/wBQ82KoLymANKmAFAt/qKqB2C386qPkAABiqc4qlGt8v0n5foQB9fk5Ajc/6BddN8VSj8svKV35&#xA;W0G40+5trS0aW7kuUhsri7u4wsiIPilvP3hbkpG21Kd64qnNt/yleo/8wFj/AMnrvFU1xVjt95n0&#xA;XRdVvLe8uAJJhFciNQWerL6RFBsABEp361oO2KsZuLLV9b1qxlg1WdbW8+utbkxtGbcRuOAB+FiX&#xA;DCtaUA44qm9n5f8APMFpdRrqdrFNdzSTSuiO1DIoUlKhSrftdxWlAAN1Xef9LmH5eyaXCfrMoW0s&#xA;4w4IEjvNHAjNx+Kodg4oftAVqtVKqlP5V1htF0y20uODTmsL+W/t4JSW4GRpGUMw9Qbeu9act6e4&#xA;xVJvO2i+ctWtYpb+2hhi09jWeCQOXHIUlKEUIWm1V8TRcVZbq/k6y1CEzT/v9QjsxbQMzMkfqIGM&#xA;clAS4IZz+0fpIGKo+50HTdQsba3v7VP3CKqpEzoE2FVRkKNxBUU+QPUDFUmi8r6ZpfmvTLmz9WIS&#xA;RXCOijlGSqrQMQPgWhJC/ZFBxAxVTufIMS65Hq1tK7t9aim+rs3FFX1PVmZtj6jF6EdD7mlMVTPz&#xA;vAbjy/JagVNzPaxBagE87mMUFQRv402G9DShVSjR/wAtbCGr6nIbk+q7xwKx9MKzllqSASfEih6g&#xA;1BxVMbj8v/LE/Jnt3E5+zcCWQSLUk7NX33rWp+I1Yk4qq+UbIDyla2c0bxqUljeNwyOFaRxvX4hs&#xA;euKpd5N8p6A3lPTHms0me5t4bmcSAEeq8SlvhFFHE14inw1NOpxVi1/p0mq/lFWNiY7K4nnmKnf0&#xA;rWWVHVSK0KoCj7bsGJrUkqvVo/UEaiQgyUHMqCFLU3oCTt9OKoDzFbfWdCv4uJdjA7IoXkSyjktB&#xA;41G1MVYLB5b1qUJpUsM97p+qRWk+oXEwETRLzq6hmPxOg/AkcT+yqnR8iy3uoahPe3UsFvLL/okM&#xA;ThiE5By5ZlPxO/Jt605cR8OxVWa95YTStOludJe7HL93NbRsGT0XJB5KRVgnLuenUgfEqqI8i6Zq&#xA;9m99LeussEz+nbmpLols7RIrVCkmgodhSgpXkQirLMVefXaa/b+dddvdMf04YraBpfUSsUhjTlR3&#xA;pU09Ykb8gB8NQOOKpnp8Vzefly0NtHJ9YnhnjjjUhXDNK670Pb9ofRiqJ0nQvMtrLYR3eoxXFlZb&#xA;hRHSQkRtGFrTf4W3P3AYqjvK0ciaZJz5j1Lq6mCSIY2AmuHk3B8S1fatO2KpviqT65w/Svl7ktW+&#xA;vycDStP9Auq79sVTjFUqtv8AlK9R/wCYCx/5PXeKpriqg9hYvI8r20TSSU9Ryilm4ggciRvQGgxV&#xA;XxV2KpfrqwtYx+rTgLqzb4thyW6iKn/ggMVTDFUPqFjDf2ctpOWEMw4vwYo1K1pyG+/fFURirsVd&#xA;irsVUri1trhVWeJZQjB0DAGjDoR9+KquKuxVxAIodweoxVTtra3toVgt41ihT7MaCgFTU/ed8VYj&#xA;odjHD+W1xazpxiuIb1+Ow5i9kklCjia8iZuPu3StQSqzFHV1DoQyMAVYGoIPQg4q3irsVdirsVUb&#xA;KytbK2W2tYxFAhYqgqQC7Fm616sxOKq2KuxVyqqqFUAKBQAbAAYq7FXYq7FUo1vl+k/L9CAPr8nI&#xA;Ebn/AEC66b4qm+KsI8vfl/dabreqvdXs9xpdxwawZbu5iuBVnkkWX0WhU0klcg71r/NyLKsi/wAN&#xA;ad/v6+/7iF9/1WxV3+GtO/39ff8AcQvv+q2Ku/w1p3+/r7/uIX3/AFWxV3+GtO/39ff9xC+/6rYq&#xA;pz+UtGuI/Tna8ljrXg9/esNvYzYqli+T74ebXu/r1z/h9rBIhafXbz1frizM3qF/V5FPSagFevzx&#xA;VN/8Nad/v6+/7iF9/wBVsVd/hrTv9/X3/cQvv+q2Ku/w1p3+/r7/ALiF9/1WxV3+GtO/39ff9xC+&#xA;/wCq2Ku/w1p3+/r7/uIX3/VbFWPy+UdebzjBPHdSDy2kTLKjahfG4LMnRKPt+8VTXnSldq0oqq+Y&#xA;L/yN5eJGs6td2Z4JIFe+1EkrJIIU4hZW5FnNOI379AcVS/TvN35Yajx+pa7dTepy9IC81MGQpGJm&#xA;EYZxzKowJC1I+eKqsHmX8t7i2S4t9ZvJ0kPFUiu9UeTlzMfExK5kVvUHp0K15lV+0ygqqVj5t/K3&#xA;UjcR2uu3E4t4fWuB9d1IKImm+rA1ZwDylPBQN2PTFU00Kw8kaxYOuj3c91ZLs6R317wpISa8TKKh&#xA;jy36E198VQOreTfMkvmzT7jTtQlh8vwiMXsL3t400gPreuqsZCVG0BFD1BxVkv8AhrTv9/X3/cQv&#xA;v+q2Ku/w1p3+/r7/ALiF9/1WxV3+GtO/39ff9xC+/wCq2Ku/w1p3+/r7/uIX3/VbFXf4a07/AH9f&#xA;f9xC+/6rYqxjzR5Q80TarYP5fu5YrKJeVz9Z1G8NZDKnRau/91zGzioJGxowVZP/AIa07/f19/3E&#xA;L7/qtirv8Nad/v6+/wC4hff9VsVd/hrTv9/X3/cQvv8Aqtirv8Nad/v6+/7iF9/1WxV3+GtO/wB/&#xA;X3/cQvv+q2KsZ84+UvNclxpk3lG9a1uLZ5JJbi+up7lFJCoKQT+spLRPKvL9mvRv2VWd4q80/Ob8&#xA;6I/y0/Q/PSDqv6W+s0pcC39P6t6XjHLy5et7UpirzX/oc+3/AOpRf/pPH/ZPimno/wCUf5z3P5kR&#xA;apJZ6ImnjS2hVxNeF+frhyKcYBSnp4oZdqPmPVLHWtI0prCB5NXadY5BcuAn1eIymo9DeoFMVdoX&#xA;mPVNXfU1jsIIv0bey2DlrlzzaJUYuKQbA+piryz/AKGd/wCQh/4K/wANf6T+l/0N9c+vfBz+s/Vv&#xA;V4/V60r8VMU0mfkX/nIGTzb5yj8rweXxazyWi3guXvCyANCk3HiLevSSmK09Av8AzHqlnr2laO1h&#xA;A8mqrctHKLl+KfVVVjUehvy54oYn+VH5x3X5i/pf6poiWH6JeKOT1bsvzM3qUpxgFKeliqH/ACx/&#xA;O+fz9req6Va6EtjJpS8nllvC4f8AeGPYLAKdMU0mn5rfmje/l35et9au9Ijv47i7SyEMV2yMGeKS&#xA;XlVoDt+5pihEa1+Y19pf5b/45fSopLb6lb3/ANSW6YPxuQhCcjBSq+pirzjyl/zlcnmPzNpmgw+V&#xA;zby6lcJbJO99yVDIaciBb1OKaewap5ft9WlSbU9E0+8ljXhHJNIXZQGDihMFRRlqPDFCmPK2ngIF&#xA;8vaWvprwjoQOK+ksNBS32HpIqf6oAxV4V5h/OjyPofmq48pP+XllIdNuvqCTRzRonwMEVlH1aoC0&#xA;UjwoO4GKaZ5pl/5X1P8AMfzF+Xsfk3TreWxtIri9u45RHFOjvBcqhSO3U7Szht+4PjihT8v/AJna&#xA;dZebvN/lnSvK8Fi/ly0mvrqWK6KxTC24nhHGIPgqZSfCpJ6k4qwr/oc+3/6lF/8ApPH/AGT4ppMf&#xA;Ln/OW0eueYdL0WLysYZNUu4LJJmvgVRriVYgxAt9wOVcVp7N5k1/VdD8u6prUlhBNHpdpPevCty4&#xA;Z1t4mlKgmDYnjTFCB8g+dNR84eUdP8yW+mw2kOoLIyW8l0zMvpyvFuRABvwriqaaxq+raZpF9qT2&#xA;UEiWNvLctGty4LCJC5UEwd+OKvLfzE/5yQbyTqOm2Vz5dF42padBqaPHe8Aizs6hCDbncen1xTTF&#xA;P+hz7f8A6lF/+k8f9k+K09b/ACv/ADJvvP8A5ZOvWukxWMQuJLb0JbpnasYU8qrABvyxQ868uf8A&#xA;OV6a35o07y/H5XMMuoXcVkk7X1VVpZBHyIFvUgVxTTPPzO/Na78gwaVLdaPHfDVbn6rGIrtk4GgP&#xA;I8oDXrih5rqX/OYcNjqN1ZN5UZ2tZpIS4vwATGxWtPq/emKaTfyD/wA5SQebvN+meXF8ttZHUZGj&#xA;F0bwS8OMbPXh6KV+zT7WK092xQ88/Kk3r6p5smnDlJtSlIY8TGJI554SkRWOMACOONmSr0ZieR5Y&#xA;qzLV/Lfl3WvR/TGl2epfV+XofXIIp/T5058PUVuPLiK060xVItL8m/lnqULzW/lOwjSNzGRdaQto&#xA;5IAaqpcQROy/F9oCn3YqjtN8o+VNP1K7Sw0WwtEeGBnWC2hjBPKYVIRRXFVXWdP0KxtPr50JNQlt&#xA;2URQ2ttFLPWVxGSgbjQANVt/sg4qqaVpXl+4sIb2HR4rQXqJcvBNapDMrSoGpMhWqyDowO4O2KpJ&#xA;N5X8k6fY3Gst5UtL+9hupZALWwt5bt5DdMAyVVTyUnlXltSuKom18qeThJpWo2nl2ysJ7gg0NlBD&#xA;cIjWzkRScVqpWgBWu1MVTpvL2gNKkrabatLHURyGCMsvL7XE8aitN8VSU6V5U0TVrLTrDypGg1Zn&#xA;El7Y2VstvGYUL/6S4KMtRXj8JqdhiqZWfk3yhYyPJZaHp9rJL/evDawxs29fiKqK4qh9S8q+V7+/&#xA;toL7R7G7hWKZxFPbQyKHDRANxZSKgMRX3xVCaVB5Y1iXUtGfyq1rZ6a4tf8ATtPiitLhV2BtqgrJ&#xA;GOIoaU6YquuvIPkW1WGe28uaXBPHcW5SWOyt0dT66DZlQEYqiPML6Lotit2dBl1LnKkIt9Ps0uJg&#xA;ZDTmUHGiL1Zu2Kpp+hdG/wCWC3/5FJ/TFUks/Ifka49W5n8u6ZLctcXDNO9nbs5InehLFK1xVM08&#xA;qeV47yS+j0exS9mULLdLbQiV1FAAzheRHwjqe2KpZYaP5NudY1KJfLMNvdrWK4vJdPjRLlGCluM4&#xA;QiRdwKMamnSgxVV/5Vx+Xn/Ur6R/0gW3/VPFVC78geQ7dIZ7fy3pcM0dxbtHLHZW6spE6bhggIxV&#xA;OpvL+gzQvDNptrLDKpSSN4I2VlYUKsCtCCMVSSL/AA5YeYbfyva+VpYrdoDOmowWES6ZHUuTEZlo&#xA;FkJWvHj3HjiqeSaDockbRyadavG4KujQxkEHYggruDiqUT+SPJd7q0pvNA025MVtAkRmtIJOKh5v&#xA;hXkhoPbFUs03yz+Xd9rGo6Z/gW3tG08qBeXOk28drcBu9vLwIcL36Yqnej+WPLVk19BZ6TZW0C3A&#xA;KxQ28UaAmCIn4VUDFWPaTonlWTzrqGk/4BsrK301I57PXfqMSxTyEIxEbegihkL/ALMh6HFU/wBQ&#xA;8q+V73UrRLzR7G5SOKZ0Wa2hkCsHiAYBlNDv1xVJdY8veQLLW7DT38iQ3z6mx5ahb6VbS20J5AFr&#xA;mXiOFeVehxVPrHyP5K0+7jvLDy/ptpeQkmG5gs4I5EJBBKuiBhsabYqneKvNvyh/wj+lPN36A+ve&#xA;v+kW/Sn1z6nw9f1Jf7r6p26/337ynGuKvScVdiqkvofWpOP+9Hpp6nX7FX4e3XliqrirsVUrb0PT&#xA;PofY9SSvX7fNufX/AC64q3L6HqQ+p9vmfR6/b4NX/hOWKqmKuxV2Kqbeh9Zj5f3/AAf0+teFV5/j&#xA;xxVUxVTuPQ9Met9jnHStft8xw6f5dMVVMVdiqnb+h6Z9H7HOStK/b5nn1/y64qqYq7FXYqp3Hoem&#xA;PW+xzjpWv2+Y4dP8umKqmKuxV2Kqa+h9Zk4/3/BPU614Vbh+PLFVTFVOL0PUm9P7fMet1+3wWn/C&#xA;ccVVMVU29D6zHy/v+D+n1rwqvP8AHjiqpirsVdir/9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:E7332BD3DB80DD1199F6B434CD2D3497</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:E8332BD3DB80DD1199F6B434CD2D3497</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:E6332BD3DB80DD1199F6B434CD2D3497</stRef:instanceID>
            <stRef:documentID>uuid:E5332BD3DB80DD1199F6B434CD2D3497</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:photoshop="http://ns.adobe.com/photoshop/1.0/">
         <photoshop:History/>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1190.551147</stDim:w>
            <stDim:h>841.889832</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ComicSansMS</stFnt:fontName>
                  <stFnt:fontFamily>Comic Sans MS</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>Version 2.10</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Comic Sans MS</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -279.294 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 279.294 li
951.654 279.294 li
951.654 0 li
cp
clp
[1 0 0 1 0 0 ]ct
914.9 240.294 mo
44.9004 240.294 li
44.9004 224.294 li
914.9 224.294 li
914.9 240.294 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
1 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
914.9 240.294 mo
44.9004 240.294 li
44.9004 224.294 li
914.9 224.294 li
914.9 240.294 li
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
619.9 240.294 mo
563.9 240.294 li
563.9 224.294 li
619.9 224.294 li
619.9 240.294 li
cp
0.698039 0.67451 0.639216 0.741176 cmyk
f
619.9 240.294 mo
563.9 240.294 li
563.9 224.294 li
619.9 224.294 li
619.9 240.294 li
cp
@
102.9 240.294 mo
44.9004 240.294 li
44.9004 224.294 li
102.9 224.294 li
102.9 240.294 li
cp
f
102.9 240.294 mo
44.9004 240.294 li
44.9004 224.294 li
102.9 224.294 li
102.9 240.294 li
cp
@
781.9 240.294 mo
724.9 240.294 li
724.9 224.294 li
781.9 224.294 li
781.9 240.294 li
cp
f
781.9 240.294 mo
724.9 240.294 li
724.9 224.294 li
781.9 224.294 li
781.9 240.294 li
cp
@
913.9 240.294 mo
865.9 240.294 li
865.9 224.294 li
913.9 224.294 li
913.9 240.294 li
cp
f
913.9 240.294 mo
865.9 240.294 li
865.9 224.294 li
913.9 224.294 li
913.9 240.294 li
cp
@
203.9 240.294 mo
182.9 240.294 li
182.9 224.294 li
203.9 224.294 li
203.9 240.294 li
cp
f
203.9 240.294 mo
182.9 240.294 li
182.9 224.294 li
203.9 224.294 li
203.9 240.294 li
cp
@
227.588 240.294 mo
215.213 240.294 li
215.213 224.294 li
227.588 224.294 li
227.588 240.294 li
cp
f
227.588 240.294 mo
215.213 240.294 li
215.213 224.294 li
227.588 224.294 li
227.588 240.294 li
cp
@
522.541 240.294 mo
513.26 240.294 li
513.26 224.294 li
522.541 224.294 li
522.541 240.294 li
cp
f
522.541 240.294 mo
513.26 240.294 li
513.26 224.294 li
522.541 224.294 li
522.541 240.294 li
cp
@
660.541 240.294 mo
651.26 240.294 li
651.26 224.294 li
660.541 224.294 li
660.541 240.294 li
cp
f
660.541 240.294 mo
651.26 240.294 li
651.26 224.294 li
660.541 224.294 li
660.541 240.294 li
cp
@
860.541 240.294 mo
851.26 240.294 li
851.26 224.294 li
860.541 224.294 li
860.541 240.294 li
cp
f
860.541 240.294 mo
851.26 240.294 li
851.26 224.294 li
860.541 224.294 li
860.541 240.294 li
cp
@
552.947 240.294 mo
541.854 240.294 li
541.854 224.294 li
552.947 224.294 li
552.947 240.294 li
cp
f
552.947 240.294 mo
541.854 240.294 li
541.854 224.294 li
552.947 224.294 li
552.947 240.294 li
cp
@
281.088 240.294 mo
268.713 240.294 li
268.713 224.294 li
281.088 224.294 li
281.088 240.294 li
cp
f
281.088 240.294 mo
268.713 240.294 li
268.713 224.294 li
281.088 224.294 li
281.088 240.294 li
cp
@
312.975 240.294 mo
299.826 240.294 li
299.826 224.294 li
312.975 224.294 li
312.975 240.294 li
cp
f
312.975 240.294 mo
299.826 240.294 li
299.826 224.294 li
312.975 224.294 li
312.975 240.294 li
cp
@
358.975 240.294 mo
345.826 240.294 li
345.826 224.294 li
358.975 224.294 li
358.975 240.294 li
cp
f
358.975 240.294 mo
345.826 240.294 li
345.826 224.294 li
358.975 224.294 li
358.975 240.294 li
cp
@
410.049 240.294 mo
381.752 240.294 li
381.752 224.294 li
410.049 224.294 li
410.049 240.294 li
cp
f
410.049 240.294 mo
381.752 240.294 li
381.752 224.294 li
410.049 224.294 li
410.049 240.294 li
cp
@
503.049 240.294 mo
481.752 240.294 li
481.752 224.294 li
503.049 224.294 li
503.049 240.294 li
cp
f
503.049 240.294 mo
481.752 240.294 li
481.752 224.294 li
503.049 224.294 li
503.049 240.294 li
cp
@
827.549 240.294 mo
804.252 240.294 li
804.252 224.294 li
827.549 224.294 li
827.549 240.294 li
cp
f
827.549 240.294 mo
804.252 240.294 li
804.252 224.294 li
827.549 224.294 li
827.549 240.294 li
cp
@
138.9 240.294 mo
136.9 240.294 li
136.9 224.294 li
138.9 224.294 li
138.9 240.294 li
cp
f
138.9 240.294 mo
136.9 240.294 li
136.9 224.294 li
138.9 224.294 li
138.9 240.294 li
cp
@
157.9 240.294 mo
155.9 240.294 li
155.9 224.294 li
157.9 224.294 li
157.9 240.294 li
cp
f
157.9 240.294 mo
155.9 240.294 li
155.9 224.294 li
157.9 224.294 li
157.9 240.294 li
cp
@
713.9 240.294 mo
711.9 240.294 li
711.9 224.294 li
713.9 224.294 li
713.9 240.294 li
cp
f
713.9 240.294 mo
711.9 240.294 li
711.9 224.294 li
713.9 224.294 li
713.9 240.294 li
cp
@
256.9 240.294 mo
254.9 240.294 li
254.9 224.294 li
256.9 224.294 li
256.9 240.294 li
cp
f
256.9 240.294 mo
254.9 240.294 li
254.9 224.294 li
256.9 224.294 li
256.9 240.294 li
cp
@
210.9 240.294 mo
208.9 240.294 li
208.9 224.294 li
210.9 224.294 li
210.9 240.294 li
cp
f
210.9 240.294 mo
208.9 240.294 li
208.9 224.294 li
210.9 224.294 li
210.9 240.294 li
cp
@
41.4404 183.379 mo
41.4404 0.5 li
944.005 0.5 li
944.005 183.379 li
41.4404 183.379 li
cp
0 0 0 0 cmyk
f
2 lc
41.4404 183.379 mo
41.4404 0.5 li
944.005 0.5 li
944.005 183.379 li
41.4404 183.379 li
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
42.812 45.6841 mo
46.9639 57.9844 li
49.7075 65.3647 li
53.8594 62.9111 li
57.9751 65.376 li
62.127 66.6108 li
64.8706 73.9912 li
67.6147 72.7656 li
71.7666 71.542 li
80.0342 76.4707 li
84.1494 72.7881 li
86.9297 72.792 li
91.0454 76.4858 li
93.7891 74.0308 li
99.3125 72.8086 li
100.685 149.037 li
105.595 145.258 li
108.808 147.404 li
112.779 143.125 li
115.992 147.414 li
118.411 143.133 li
124.007 144.569 li
125.595 128.151 li
130.397 130.299 li
134.404 126.735 li
135.993 131.02 li
136.787 144.586 li
137.618 59.6294 li
138.412 135.307 li
140 130.312 li
144.802 125.321 li
148.81 131.752 li
152.817 133.899 li
155.2 128.191 li
155.2 50.3721 li
157.618 133.192 li
161.59 131.77 li
167.222 132.491 li
170.399 131.067 li
174.406 133.214 li
177.619 130.364 li
178.414 126.794 li
180.002 56.8311 li
182.421 58.9761 li
184.804 47.5566 li
188.017 59.6982 li
192.024 53.9917 li
196.032 55.4253 li
201.627 56.147 li
202.422 128.255 li
203.216 179.66 li
204.805 49.7256 li
207.223 139.684 li
208.018 59.0112 li
210.4 122.555 li
213.613 116.848 li
214.408 135.411 li
215.202 106.854 li
216.827 46.8862 li
221.628 57.6016 li
224.011 57.605 li
225.636 57.6074 li
228.019 46.1875 li
228.019 131.86 li
229.607 134.717 li
231.231 59.7568 li
232.026 129.723 li
234.409 134.01 li
236.828 131.872 li
240.041 132.59 li
243.218 134.737 li
246.431 137.596 li
250.438 134.032 li
253.615 136.178 li
255.24 121.188 li
256.034 126.901 li
256.215 51.4023 li
256.828 58.8994 li
259.211 136.9 li
260.042 131.19 li
261.63 125.48 li
263.435 85.145 li
264.013 154.754 li
265.637 123.344 li
267.226 131.2 li
267.623 46.5986 li
271.847 49.2817 li
275.421 52.499 li
277.84 56.7861 li
281.45 54.1138 li
282.028 125.865 li
283.833 121.047 li
284.447 109.269 li
285.024 124.262 li
289.826 121.056 li
293.437 121.596 li
296.433 121.065 li
297.047 134.989 li
298.238 50.3887 li
299.43 59.4927 li
303.04 49.8594 li
306.65 45.0454 li
306.65 39.1553 li
310.225 47.7275 li
311.451 25.7759 li
312.643 19.8877 li
313.257 116.805 li
317.444 121.094 li
321.633 123.241 li
324.629 120.034 li
328.854 124.323 li
332.427 121.114 li
336.037 123.26 li
339.647 124.873 li
342.645 119.522 li
342.645 127.553 li
345.641 123.809 li
345.641 129.165 li
345.641 143.086 li
345.641 49.3818 li
349.865 51.5298 li
353.438 49.9282 li
357.049 47.2559 li
357.663 53.147 li
358.854 60.6445 li
360.659 41.9063 li
361.237 115.799 li
363.042 124.369 li
365.461 116.875 li
365.461 120.624 li
366.652 124.374 li
368.458 130.266 li
372.068 122.775 li
375.642 127.063 li
376.869 122.246 li
378.061 120.106 li
379.252 91.1934 li
379.866 135.636 li
380.443 57.4609 li
382.862 54.7876 li
386.473 53.186 li
390.66 54.2622 li
394.271 51.5903 li
397.268 53.2002 li
400.842 55.3477 li
404.452 55.8877 li
407.448 51.6084 li
408.676 100.335 li
409.867 47.8633 li
409.867 149.599 li
411.673 136.75 li
412.25 128.184 li
412.25 123.901 li
414.669 118.549 li
419.471 124.446 li
421.275 134.086 li
421.854 103.567 li
425.464 119.635 li
426.077 129.809 li
429.651 127.137 li
433.262 122.858 li
436.872 125.541 li
440.482 120.726 li
443.479 120.731 li
448.28 121.272 li
451.854 124.49 li
454.887 120.209 li
458.461 123.428 li
461.458 119.684 li
462.686 113.795 li
465.068 121.831 li
469.256 123.979 li
472.866 122.913 li
477.09 127.202 li
478.281 118.1 li
479.473 142.733 li
480.664 100.434 li
481.278 83.2998 li
481.278 74.1973 li
484.274 55.4609 li
487.271 64.0322 li
489.69 49.043 li
494.492 51.7266 li
500.484 50.1284 li
503.481 44.7783 li
505.864 124.028 li
506.478 117.068 li
508.283 150.268 li
510.088 57.1025 li
511.894 113.862 li
512.471 125.643 li
513.698 120.826 li
513.698 38.3662 li
514.89 53.8965 li
519.691 50.1543 li
519.691 54.4385 li
522.074 120.837 li
523.302 113.877 li
527.489 120.844 li
529.872 117.635 li
535.288 120.856 li
535.901 113.895 li
536.479 107.471 li
537.707 71.0615 li
538.284 180.294 li
540.703 125.147 li
540.703 140.674 li
540.703 169.053 li
541.895 53.9331 li
543.086 90.8809 li
543.699 83.3853 li
544.891 40.5508 li
549.079 61.9746 li
552.075 52.3403 li
555.686 60.9126 li
556.3 94.6465 li
556.877 132.665 li
558.104 120.886 li
560.487 138.559 li
561.679 101.615 li
562.906 177.116 li
563.483 133.209 li
564.711 56.106 li
565.902 94.6597 li
570.091 60.397 li
576.697 56.1221 li
580.885 63.0889 li
584.495 67.3774 li
588.105 59.8857 li
589.911 52.3921 li
593.485 64.7119 li
598.9 58.2944 li
602.511 60.4409 li
606.121 56.1621 li
609.117 55.0957 li
612.691 59.9194 li
616.916 59.9253 li
620.49 65.2847 li
621.104 101.696 li
621.718 121.508 li
622.908 129.542 li
624.714 142.395 li
628.324 124.73 li
632.512 130.625 li
634.895 108.14 li
638.505 141.342 li
640.924 138.133 li
641.502 131.709 li
646.917 138.141 li
649.3 121.545 li
649.3 117.797 li
650.527 113.516 li
651.719 126.368 li
652.332 51.4063 li
656.521 61.5854 li
660.131 46.5977 li
661.899 136.02 li
663.705 125.313 li
666.701 131.208 li
670.925 119.969 li
671.503 127.466 li
673.922 109.264 li
679.337 128.012 li
681.72 125.338 li
685.908 119.454 li
689.518 124.813 li
693.706 124.819 li
697.316 123.217 li
700.313 126.434 li
705.729 127.512 li
707.533 139.295 li
711.144 143.048 li
711.721 136.624 li
714.14 95.9326 li
714.718 68.0903 li
715.331 84.1543 li
717.137 100.756 li
717.714 152.161 li
717.714 127.53 li
721.938 134.497 li
724.321 130.75 li
726.126 83.6338 li
726.74 135.573 li
726.74 67.5713 li
728.545 59.542 li
733.347 67.5801 li
736.343 65.4424 li
739.34 68.6592 li
741.723 77.2295 li
746.523 63.3145 li
754.322 68.6797 li
756.741 64.9351 li
760.929 59.0508 li
764.539 61.1973 li
768.149 61.7378 li
772.338 63.8853 li
775.947 67.1025 li
780.749 64.4321 li
782.555 68.1826 li
783.132 124.941 li
783.746 144.218 li
785.551 137.26 li
786.129 99.2437 li
787.356 142.082 li
790.93 127.629 li
793.963 131.917 li
798.765 131.922 li
801.147 138.887 li
804.758 146.389 li
806.563 75.7114 li
807.141 143.715 li
807.141 58.5781 li
807.754 70.8945 li
810.137 60.1885 li
811.364 63.4028 li
813.133 58.5859 li
814.361 73.5801 li
815.553 62.873 li
820.354 60.2021 li
822.736 65.5601 li
825.77 56.9971 li
828.152 53.7876 li
829.344 138.926 li
830.57 126.077 li
832.34 130.898 li
834.145 123.405 li
835.95 132.509 li
840.752 130.909 li
846.167 131.988 li
849.741 133.599 li
852.773 129.855 li
853.352 61.3184 li
853.965 76.3115 li
855.156 63.9976 li
859.345 58.6489 li
862.377 61.8657 li
864.76 64.5464 li
864.76 76.3262 li
865.951 85.9658 li
867.179 89.1802 li
867.179 142.19 li
868.37 130.412 li
870.176 62.9478 li
873.75 60.8105 li
876.168 65.6328 li
880.356 62.4258 li
883.967 59.2178 li
888.154 53.334 li
891.765 65.1187 li
896.566 64.0542 li
898.985 59.2383 li
905.556 64.6021 li
910.357 67.2861 li
914.582 66.7559 li
916.965 63.5464 li
@
42.812 42.6841 mo
44.4688 42.6841 45.812 44.0273 45.812 45.6841 cv
45.812 47.3408 44.4688 48.6841 42.812 48.6841 cv
41.1553 48.6841 39.812 47.3408 39.812 45.6841 cv
39.812 44.0273 41.1553 42.6841 42.812 42.6841 cv
cp
0 0 0 0 cmyk
f
0.5 lw
0 lc
42.812 42.6841 mo
44.4688 42.6841 45.812 44.0273 45.812 45.6841 cv
45.812 47.3408 44.4688 48.6841 42.812 48.6841 cv
41.1553 48.6841 39.812 47.3408 39.812 45.6841 cv
39.812 44.0273 41.1553 42.6841 42.812 42.6841 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
46.9639 54.9844 mo
48.6206 54.9844 49.9639 56.3271 49.9639 57.9844 cv
49.9639 59.6411 48.6206 60.9844 46.9639 60.9844 cv
45.3071 60.9844 43.9639 59.6411 43.9639 57.9844 cv
43.9639 56.3271 45.3071 54.9844 46.9639 54.9844 cv
cp
0 0 0 0 cmyk
f
46.9639 54.9844 mo
48.6206 54.9844 49.9639 56.3271 49.9639 57.9844 cv
49.9639 59.6411 48.6206 60.9844 46.9639 60.9844 cv
45.3071 60.9844 43.9639 59.6411 43.9639 57.9844 cv
43.9639 56.3271 45.3071 54.9844 46.9639 54.9844 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
49.7075 62.3647 mo
51.3647 62.3647 52.7075 63.708 52.7075 65.3647 cv
52.7075 67.0215 51.3647 68.3647 49.7075 68.3647 cv
48.0508 68.3647 46.7075 67.0215 46.7075 65.3647 cv
46.7075 63.708 48.0508 62.3647 49.7075 62.3647 cv
cp
0 0 0 0 cmyk
f
49.7075 62.3647 mo
51.3647 62.3647 52.7075 63.708 52.7075 65.3647 cv
52.7075 67.0215 51.3647 68.3647 49.7075 68.3647 cv
48.0508 68.3647 46.7075 67.0215 46.7075 65.3647 cv
46.7075 63.708 48.0508 62.3647 49.7075 62.3647 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
53.8594 59.9111 mo
55.5166 59.9111 56.8594 61.2544 56.8594 62.9111 cv
56.8594 64.5684 55.5166 65.9111 53.8594 65.9111 cv
52.2026 65.9111 50.8594 64.5684 50.8594 62.9111 cv
50.8594 61.2544 52.2026 59.9111 53.8594 59.9111 cv
cp
0 0 0 0 cmyk
f
53.8594 59.9111 mo
55.5166 59.9111 56.8594 61.2544 56.8594 62.9111 cv
56.8594 64.5684 55.5166 65.9111 53.8594 65.9111 cv
52.2026 65.9111 50.8594 64.5684 50.8594 62.9111 cv
50.8594 61.2544 52.2026 59.9111 53.8594 59.9111 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
57.9751 62.376 mo
59.6318 62.376 60.9751 63.7188 60.9751 65.376 cv
60.9751 67.0327 59.6318 68.376 57.9751 68.376 cv
56.3184 68.376 54.9751 67.0327 54.9751 65.376 cv
54.9751 63.7188 56.3184 62.376 57.9751 62.376 cv
cp
0 0 0 0 cmyk
f
57.9751 62.376 mo
59.6318 62.376 60.9751 63.7188 60.9751 65.376 cv
60.9751 67.0327 59.6318 68.376 57.9751 68.376 cv
56.3184 68.376 54.9751 67.0327 54.9751 65.376 cv
54.9751 63.7188 56.3184 62.376 57.9751 62.376 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
62.127 63.6108 mo
63.7837 63.6108 65.127 64.9541 65.127 66.6108 cv
65.127 68.2676 63.7837 69.6108 62.127 69.6108 cv
60.4702 69.6108 59.127 68.2676 59.127 66.6108 cv
59.127 64.9541 60.4702 63.6108 62.127 63.6108 cv
cp
0 0 0 0 cmyk
f
62.127 63.6108 mo
63.7837 63.6108 65.127 64.9541 65.127 66.6108 cv
65.127 68.2676 63.7837 69.6108 62.127 69.6108 cv
60.4702 69.6108 59.127 68.2676 59.127 66.6108 cv
59.127 64.9541 60.4702 63.6108 62.127 63.6108 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
64.8706 70.9912 mo
66.5278 70.9912 67.8706 72.3345 67.8706 73.9912 cv
67.8706 75.6484 66.5278 76.9912 64.8706 76.9912 cv
63.2139 76.9912 61.8706 75.6484 61.8706 73.9912 cv
61.8706 72.3345 63.2139 70.9912 64.8706 70.9912 cv
cp
0 0 0 0 cmyk
f
64.8706 70.9912 mo
66.5278 70.9912 67.8706 72.3345 67.8706 73.9912 cv
67.8706 75.6484 66.5278 76.9912 64.8706 76.9912 cv
63.2139 76.9912 61.8706 75.6484 61.8706 73.9912 cv
61.8706 72.3345 63.2139 70.9912 64.8706 70.9912 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
67.6147 69.7656 mo
69.2715 69.7656 70.6147 71.1089 70.6147 72.7656 cv
70.6147 74.4229 69.2715 75.7656 67.6147 75.7656 cv
65.958 75.7656 64.6147 74.4229 64.6147 72.7656 cv
64.6147 71.1089 65.958 69.7656 67.6147 69.7656 cv
cp
0 0 0 0 cmyk
f
67.6147 69.7656 mo
69.2715 69.7656 70.6147 71.1089 70.6147 72.7656 cv
70.6147 74.4229 69.2715 75.7656 67.6147 75.7656 cv
65.958 75.7656 64.6147 74.4229 64.6147 72.7656 cv
64.6147 71.1089 65.958 69.7656 67.6147 69.7656 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
71.7666 68.542 mo
73.4233 68.542 74.7666 69.8853 74.7666 71.542 cv
74.7666 73.1992 73.4233 74.542 71.7666 74.542 cv
70.1094 74.542 68.7666 73.1992 68.7666 71.542 cv
68.7666 69.8853 70.1094 68.542 71.7666 68.542 cv
cp
0 0 0 0 cmyk
f
71.7666 68.542 mo
73.4233 68.542 74.7666 69.8853 74.7666 71.542 cv
74.7666 73.1992 73.4233 74.542 71.7666 74.542 cv
70.1094 74.542 68.7666 73.1992 68.7666 71.542 cv
68.7666 69.8853 70.1094 68.542 71.7666 68.542 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
80.0342 73.4707 mo
81.6909 73.4707 83.0342 74.814 83.0342 76.4707 cv
83.0342 78.1279 81.6909 79.4707 80.0342 79.4707 cv
78.377 79.4707 77.0342 78.1279 77.0342 76.4707 cv
77.0342 74.814 78.377 73.4707 80.0342 73.4707 cv
cp
0 0 0 0 cmyk
f
80.0342 73.4707 mo
81.6909 73.4707 83.0342 74.814 83.0342 76.4707 cv
83.0342 78.1279 81.6909 79.4707 80.0342 79.4707 cv
78.377 79.4707 77.0342 78.1279 77.0342 76.4707 cv
77.0342 74.814 78.377 73.4707 80.0342 73.4707 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
84.1494 69.7881 mo
85.8066 69.7881 87.1494 71.1313 87.1494 72.7881 cv
87.1494 74.4448 85.8066 75.7881 84.1494 75.7881 cv
82.4927 75.7881 81.1494 74.4448 81.1494 72.7881 cv
81.1494 71.1313 82.4927 69.7881 84.1494 69.7881 cv
cp
0 0 0 0 cmyk
f
84.1494 69.7881 mo
85.8066 69.7881 87.1494 71.1313 87.1494 72.7881 cv
87.1494 74.4448 85.8066 75.7881 84.1494 75.7881 cv
82.4927 75.7881 81.1494 74.4448 81.1494 72.7881 cv
81.1494 71.1313 82.4927 69.7881 84.1494 69.7881 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
86.9297 69.792 mo
88.5864 69.792 89.9297 71.1348 89.9297 72.792 cv
89.9297 74.4487 88.5864 75.792 86.9297 75.792 cv
85.2725 75.792 83.9297 74.4487 83.9297 72.792 cv
83.9297 71.1348 85.2725 69.792 86.9297 69.792 cv
cp
0 0 0 0 cmyk
f
86.9297 69.792 mo
88.5864 69.792 89.9297 71.1348 89.9297 72.792 cv
89.9297 74.4487 88.5864 75.792 86.9297 75.792 cv
85.2725 75.792 83.9297 74.4487 83.9297 72.792 cv
83.9297 71.1348 85.2725 69.792 86.9297 69.792 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
91.0454 73.4858 mo
92.7021 73.4858 94.0454 74.8291 94.0454 76.4858 cv
94.0454 78.1426 92.7021 79.4858 91.0454 79.4858 cv
89.3882 79.4858 88.0454 78.1426 88.0454 76.4858 cv
88.0454 74.8291 89.3882 73.4858 91.0454 73.4858 cv
cp
0 0 0 0 cmyk
f
91.0454 73.4858 mo
92.7021 73.4858 94.0454 74.8291 94.0454 76.4858 cv
94.0454 78.1426 92.7021 79.4858 91.0454 79.4858 cv
89.3882 79.4858 88.0454 78.1426 88.0454 76.4858 cv
88.0454 74.8291 89.3882 73.4858 91.0454 73.4858 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
93.7891 71.0308 mo
95.4458 71.0308 96.7891 72.374 96.7891 74.0308 cv
96.7891 75.6875 95.4458 77.0308 93.7891 77.0308 cv
92.1323 77.0308 90.7891 75.6875 90.7891 74.0308 cv
90.7891 72.374 92.1323 71.0308 93.7891 71.0308 cv
cp
0 0 0 0 cmyk
f
93.7891 71.0308 mo
95.4458 71.0308 96.7891 72.374 96.7891 74.0308 cv
96.7891 75.6875 95.4458 77.0308 93.7891 77.0308 cv
92.1323 77.0308 90.7891 75.6875 90.7891 74.0308 cv
90.7891 72.374 92.1323 71.0308 93.7891 71.0308 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
99.3125 69.8086 mo
100.97 69.8086 102.313 71.1519 102.313 72.8086 cv
102.313 74.4658 100.97 75.8086 99.3125 75.8086 cv
97.6558 75.8086 96.3125 74.4658 96.3125 72.8086 cv
96.3125 71.1519 97.6558 69.8086 99.3125 69.8086 cv
cp
0 0 0 0 cmyk
f
99.3125 69.8086 mo
100.97 69.8086 102.313 71.1519 102.313 72.8086 cv
102.313 74.4658 100.97 75.8086 99.3125 75.8086 cv
97.6558 75.8086 96.3125 74.4658 96.3125 72.8086 cv
96.3125 71.1519 97.6558 69.8086 99.3125 69.8086 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
100.685 146.037 mo
102.341 146.037 103.685 147.379 103.685 149.037 cv
103.685 150.694 102.341 152.037 100.685 152.037 cv
99.0278 152.037 97.6846 150.694 97.6846 149.037 cv
97.6846 147.379 99.0278 146.037 100.685 146.037 cv
cp
0 0 0 0 cmyk
f
100.685 146.037 mo
102.341 146.037 103.685 147.379 103.685 149.037 cv
103.685 150.694 102.341 152.037 100.685 152.037 cv
99.0278 152.037 97.6846 150.694 97.6846 149.037 cv
97.6846 147.379 99.0278 146.037 100.685 146.037 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
105.595 142.258 mo
107.251 142.258 108.595 143.601 108.595 145.258 cv
108.595 146.915 107.251 148.258 105.595 148.258 cv
103.938 148.258 102.595 146.915 102.595 145.258 cv
102.595 143.601 103.938 142.258 105.595 142.258 cv
cp
0 0 0 0 cmyk
f
105.595 142.258 mo
107.251 142.258 108.595 143.601 108.595 145.258 cv
108.595 146.915 107.251 148.258 105.595 148.258 cv
103.938 148.258 102.595 146.915 102.595 145.258 cv
102.595 143.601 103.938 142.258 105.595 142.258 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
108.808 144.404 mo
110.464 144.404 111.808 145.747 111.808 147.404 cv
111.808 149.061 110.464 150.404 108.808 150.404 cv
107.151 150.404 105.808 149.061 105.808 147.404 cv
105.808 145.747 107.151 144.404 108.808 144.404 cv
cp
0 0 0 0 cmyk
f
108.808 144.404 mo
110.464 144.404 111.808 145.747 111.808 147.404 cv
111.808 149.061 110.464 150.404 108.808 150.404 cv
107.151 150.404 105.808 149.061 105.808 147.404 cv
105.808 145.747 107.151 144.404 108.808 144.404 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
112.779 140.125 mo
114.436 140.125 115.779 141.469 115.779 143.125 cv
115.779 144.783 114.436 146.125 112.779 146.125 cv
111.122 146.125 109.779 144.783 109.779 143.125 cv
109.779 141.469 111.122 140.125 112.779 140.125 cv
cp
0 0 0 0 cmyk
f
112.779 140.125 mo
114.436 140.125 115.779 141.469 115.779 143.125 cv
115.779 144.783 114.436 146.125 112.779 146.125 cv
111.122 146.125 109.779 144.783 109.779 143.125 cv
109.779 141.469 111.122 140.125 112.779 140.125 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
115.992 144.414 mo
117.649 144.414 118.992 145.756 118.992 147.414 cv
118.992 149.071 117.649 150.414 115.992 150.414 cv
114.335 150.414 112.992 149.071 112.992 147.414 cv
112.992 145.756 114.335 144.414 115.992 144.414 cv
cp
0 0 0 0 cmyk
f
115.992 144.414 mo
117.649 144.414 118.992 145.756 118.992 147.414 cv
118.992 149.071 117.649 150.414 115.992 150.414 cv
114.335 150.414 112.992 149.071 112.992 147.414 cv
112.992 145.756 114.335 144.414 115.992 144.414 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
118.411 140.133 mo
120.068 140.133 121.411 141.476 121.411 143.133 cv
121.411 144.79 120.068 146.133 118.411 146.133 cv
116.754 146.133 115.411 144.79 115.411 143.133 cv
115.411 141.476 116.754 140.133 118.411 140.133 cv
cp
0 0 0 0 cmyk
f
118.411 140.133 mo
120.068 140.133 121.411 141.476 121.411 143.133 cv
121.411 144.79 120.068 146.133 118.411 146.133 cv
116.754 146.133 115.411 144.79 115.411 143.133 cv
115.411 141.476 116.754 140.133 118.411 140.133 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
124.007 141.569 mo
125.664 141.569 127.007 142.913 127.007 144.569 cv
127.007 146.225 125.664 147.569 124.007 147.569 cv
122.35 147.569 121.007 146.225 121.007 144.569 cv
121.007 142.913 122.35 141.569 124.007 141.569 cv
cp
0 0 0 0 cmyk
f
124.007 141.569 mo
125.664 141.569 127.007 142.913 127.007 144.569 cv
127.007 146.225 125.664 147.569 124.007 147.569 cv
122.35 147.569 121.007 146.225 121.007 144.569 cv
121.007 142.913 122.35 141.569 124.007 141.569 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
125.595 125.151 mo
127.252 125.151 128.595 126.494 128.595 128.151 cv
128.595 129.807 127.252 131.151 125.595 131.151 cv
123.938 131.151 122.595 129.807 122.595 128.151 cv
122.595 126.494 123.938 125.151 125.595 125.151 cv
cp
0 0 0 0 cmyk
f
125.595 125.151 mo
127.252 125.151 128.595 126.494 128.595 128.151 cv
128.595 129.807 127.252 131.151 125.595 131.151 cv
123.938 131.151 122.595 129.807 122.595 128.151 cv
122.595 126.494 123.938 125.151 125.595 125.151 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
130.397 127.299 mo
132.054 127.299 133.397 128.642 133.397 130.299 cv
133.397 131.956 132.054 133.299 130.397 133.299 cv
128.74 133.299 127.397 131.956 127.397 130.299 cv
127.397 128.642 128.74 127.299 130.397 127.299 cv
cp
0 0 0 0 cmyk
f
130.397 127.299 mo
132.054 127.299 133.397 128.642 133.397 130.299 cv
133.397 131.956 132.054 133.299 130.397 133.299 cv
128.74 133.299 127.397 131.956 127.397 130.299 cv
127.397 128.642 128.74 127.299 130.397 127.299 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
134.404 123.735 mo
136.062 123.735 137.404 125.078 137.404 126.735 cv
137.404 128.391 136.062 129.735 134.404 129.735 cv
132.748 129.735 131.404 128.391 131.404 126.735 cv
131.404 125.078 132.748 123.735 134.404 123.735 cv
cp
0 0 0 0 cmyk
f
134.404 123.735 mo
136.062 123.735 137.404 125.078 137.404 126.735 cv
137.404 128.391 136.062 129.735 134.404 129.735 cv
132.748 129.735 131.404 128.391 131.404 126.735 cv
131.404 125.078 132.748 123.735 134.404 123.735 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
135.993 128.02 mo
137.65 128.02 138.993 129.364 138.993 131.02 cv
138.993 132.677 137.65 134.02 135.993 134.02 cv
134.336 134.02 132.993 132.677 132.993 131.02 cv
132.993 129.364 134.336 128.02 135.993 128.02 cv
cp
0 0 0 0 cmyk
f
135.993 128.02 mo
137.65 128.02 138.993 129.364 138.993 131.02 cv
138.993 132.677 137.65 134.02 135.993 134.02 cv
134.336 134.02 132.993 132.677 132.993 131.02 cv
132.993 129.364 134.336 128.02 135.993 128.02 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
136.787 141.586 mo
138.444 141.586 139.787 142.93 139.787 144.586 cv
139.787 146.243 138.444 147.586 136.787 147.586 cv
135.13 147.586 133.787 146.243 133.787 144.586 cv
133.787 142.93 135.13 141.586 136.787 141.586 cv
cp
0 0 0 0 cmyk
f
136.787 141.586 mo
138.444 141.586 139.787 142.93 139.787 144.586 cv
139.787 146.243 138.444 147.586 136.787 147.586 cv
135.13 147.586 133.787 146.243 133.787 144.586 cv
133.787 142.93 135.13 141.586 136.787 141.586 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
137.618 56.6294 mo
139.274 56.6294 140.618 57.9727 140.618 59.6294 cv
140.618 61.2861 139.274 62.6294 137.618 62.6294 cv
135.961 62.6294 134.618 61.2861 134.618 59.6294 cv
134.618 57.9727 135.961 56.6294 137.618 56.6294 cv
cp
0 0 0 0 cmyk
f
137.618 56.6294 mo
139.274 56.6294 140.618 57.9727 140.618 59.6294 cv
140.618 61.2861 139.274 62.6294 137.618 62.6294 cv
135.961 62.6294 134.618 61.2861 134.618 59.6294 cv
134.618 57.9727 135.961 56.6294 137.618 56.6294 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
138.412 132.307 mo
140.069 132.307 141.412 133.651 141.412 135.307 cv
141.412 136.964 140.069 138.307 138.412 138.307 cv
136.755 138.307 135.412 136.964 135.412 135.307 cv
135.412 133.651 136.755 132.307 138.412 132.307 cv
cp
0 0 0 0 cmyk
f
138.412 132.307 mo
140.069 132.307 141.412 133.651 141.412 135.307 cv
141.412 136.964 140.069 138.307 138.412 138.307 cv
136.755 138.307 135.412 136.964 135.412 135.307 cv
135.412 133.651 136.755 132.307 138.412 132.307 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
140 127.312 mo
141.657 127.312 143 128.655 143 130.312 cv
143 131.969 141.657 133.312 140 133.312 cv
138.343 133.312 137 131.969 137 130.312 cv
137 128.655 138.343 127.312 140 127.312 cv
cp
0 0 0 0 cmyk
f
140 127.312 mo
141.657 127.312 143 128.655 143 130.312 cv
143 131.969 141.657 133.312 140 133.312 cv
138.343 133.312 137 131.969 137 130.312 cv
137 128.655 138.343 127.312 140 127.312 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
144.802 122.321 mo
146.459 122.321 147.802 123.665 147.802 125.321 cv
147.802 126.978 146.459 128.321 144.802 128.321 cv
143.145 128.321 141.802 126.978 141.802 125.321 cv
141.802 123.665 143.145 122.321 144.802 122.321 cv
cp
0 0 0 0 cmyk
f
144.802 122.321 mo
146.459 122.321 147.802 123.665 147.802 125.321 cv
147.802 126.978 146.459 128.321 144.802 128.321 cv
143.145 128.321 141.802 126.978 141.802 125.321 cv
141.802 123.665 143.145 122.321 144.802 122.321 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
148.81 128.752 mo
150.466 128.752 151.81 130.095 151.81 131.752 cv
151.81 133.409 150.466 134.752 148.81 134.752 cv
147.152 134.752 145.81 133.409 145.81 131.752 cv
145.81 130.095 147.152 128.752 148.81 128.752 cv
cp
0 0 0 0 cmyk
f
148.81 128.752 mo
150.466 128.752 151.81 130.095 151.81 131.752 cv
151.81 133.409 150.466 134.752 148.81 134.752 cv
147.152 134.752 145.81 133.409 145.81 131.752 cv
145.81 130.095 147.152 128.752 148.81 128.752 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
152.817 130.899 mo
154.474 130.899 155.817 132.243 155.817 133.899 cv
155.817 135.555 154.474 136.899 152.817 136.899 cv
151.16 136.899 149.817 135.555 149.817 133.899 cv
149.817 132.243 151.16 130.899 152.817 130.899 cv
cp
0 0 0 0 cmyk
f
152.817 130.899 mo
154.474 130.899 155.817 132.243 155.817 133.899 cv
155.817 135.555 154.474 136.899 152.817 136.899 cv
151.16 136.899 149.817 135.555 149.817 133.899 cv
149.817 132.243 151.16 130.899 152.817 130.899 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
155.2 125.191 mo
156.856 125.191 158.2 126.534 158.2 128.191 cv
158.2 129.848 156.856 131.191 155.2 131.191 cv
153.542 131.191 152.2 129.848 152.2 128.191 cv
152.2 126.534 153.542 125.191 155.2 125.191 cv
cp
0 0 0 0 cmyk
f
155.2 125.191 mo
156.856 125.191 158.2 126.534 158.2 128.191 cv
158.2 129.848 156.856 131.191 155.2 131.191 cv
153.542 131.191 152.2 129.848 152.2 128.191 cv
152.2 126.534 153.542 125.191 155.2 125.191 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
155.2 47.3721 mo
156.856 47.3721 158.2 48.7148 158.2 50.3721 cv
158.2 52.0288 156.856 53.3721 155.2 53.3721 cv
153.542 53.3721 152.2 52.0288 152.2 50.3721 cv
152.2 48.7148 153.542 47.3721 155.2 47.3721 cv
cp
0 0 0 0 cmyk
f
155.2 47.3721 mo
156.856 47.3721 158.2 48.7148 158.2 50.3721 cv
158.2 52.0288 156.856 53.3721 155.2 53.3721 cv
153.542 53.3721 152.2 52.0288 152.2 50.3721 cv
152.2 48.7148 153.542 47.3721 155.2 47.3721 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
157.618 130.192 mo
159.275 130.192 160.618 131.536 160.618 133.192 cv
160.618 134.848 159.275 136.192 157.618 136.192 cv
155.961 136.192 154.618 134.848 154.618 133.192 cv
154.618 131.536 155.961 130.192 157.618 130.192 cv
cp
0 0 0 0 cmyk
f
157.618 130.192 mo
159.275 130.192 160.618 131.536 160.618 133.192 cv
160.618 134.848 159.275 136.192 157.618 136.192 cv
155.961 136.192 154.618 134.848 154.618 133.192 cv
154.618 131.536 155.961 130.192 157.618 130.192 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
161.59 128.77 mo
163.247 128.77 164.59 130.112 164.59 131.77 cv
164.59 133.426 163.247 134.77 161.59 134.77 cv
159.933 134.77 158.59 133.426 158.59 131.77 cv
158.59 130.112 159.933 128.77 161.59 128.77 cv
cp
0 0 0 0 cmyk
f
161.59 128.77 mo
163.247 128.77 164.59 130.112 164.59 131.77 cv
164.59 133.426 163.247 134.77 161.59 134.77 cv
159.933 134.77 158.59 133.426 158.59 131.77 cv
158.59 130.112 159.933 128.77 161.59 128.77 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
167.222 129.491 mo
168.878 129.491 170.222 130.834 170.222 132.491 cv
170.222 134.147 168.878 135.491 167.222 135.491 cv
165.565 135.491 164.222 134.147 164.222 132.491 cv
164.222 130.834 165.565 129.491 167.222 129.491 cv
cp
0 0 0 0 cmyk
f
167.222 129.491 mo
168.878 129.491 170.222 130.834 170.222 132.491 cv
170.222 134.147 168.878 135.491 167.222 135.491 cv
165.565 135.491 164.222 134.147 164.222 132.491 cv
164.222 130.834 165.565 129.491 167.222 129.491 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
170.399 128.067 mo
172.056 128.067 173.399 129.411 173.399 131.067 cv
173.399 132.724 172.056 134.067 170.399 134.067 cv
168.742 134.067 167.399 132.724 167.399 131.067 cv
167.399 129.411 168.742 128.067 170.399 128.067 cv
cp
0 0 0 0 cmyk
f
170.399 128.067 mo
172.056 128.067 173.399 129.411 173.399 131.067 cv
173.399 132.724 172.056 134.067 170.399 134.067 cv
168.742 134.067 167.399 132.724 167.399 131.067 cv
167.399 129.411 168.742 128.067 170.399 128.067 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
174.406 130.214 mo
176.063 130.214 177.406 131.557 177.406 133.214 cv
177.406 134.872 176.063 136.214 174.406 136.214 cv
172.749 136.214 171.406 134.872 171.406 133.214 cv
171.406 131.557 172.749 130.214 174.406 130.214 cv
cp
0 0 0 0 cmyk
f
174.406 130.214 mo
176.063 130.214 177.406 131.557 177.406 133.214 cv
177.406 134.872 176.063 136.214 174.406 136.214 cv
172.749 136.214 171.406 134.872 171.406 133.214 cv
171.406 131.557 172.749 130.214 174.406 130.214 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
177.619 127.364 mo
179.276 127.364 180.619 128.707 180.619 130.364 cv
180.619 132.02 179.276 133.364 177.619 133.364 cv
175.962 133.364 174.619 132.02 174.619 130.364 cv
174.619 128.707 175.962 127.364 177.619 127.364 cv
cp
0 0 0 0 cmyk
f
177.619 127.364 mo
179.276 127.364 180.619 128.707 180.619 130.364 cv
180.619 132.02 179.276 133.364 177.619 133.364 cv
175.962 133.364 174.619 132.02 174.619 130.364 cv
174.619 128.707 175.962 127.364 177.619 127.364 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
178.414 123.794 mo
180.07 123.794 181.414 125.137 181.414 126.794 cv
181.414 128.452 180.07 129.794 178.414 129.794 cv
176.757 129.794 175.414 128.452 175.414 126.794 cv
175.414 125.137 176.757 123.794 178.414 123.794 cv
cp
0 0 0 0 cmyk
f
178.414 123.794 mo
180.07 123.794 181.414 125.137 181.414 126.794 cv
181.414 128.452 180.07 129.794 178.414 129.794 cv
176.757 129.794 175.414 128.452 175.414 126.794 cv
175.414 125.137 176.757 123.794 178.414 123.794 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
180.002 53.8311 mo
181.659 53.8311 183.002 55.1743 183.002 56.8311 cv
183.002 58.4883 181.659 59.8311 180.002 59.8311 cv
178.345 59.8311 177.002 58.4883 177.002 56.8311 cv
177.002 55.1743 178.345 53.8311 180.002 53.8311 cv
cp
0 0 0 0 cmyk
f
180.002 53.8311 mo
181.659 53.8311 183.002 55.1743 183.002 56.8311 cv
183.002 58.4883 181.659 59.8311 180.002 59.8311 cv
178.345 59.8311 177.002 58.4883 177.002 56.8311 cv
177.002 55.1743 178.345 53.8311 180.002 53.8311 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
182.421 55.9761 mo
184.078 55.9761 185.421 57.3193 185.421 58.9761 cv
185.421 60.6328 184.078 61.9761 182.421 61.9761 cv
180.764 61.9761 179.421 60.6328 179.421 58.9761 cv
179.421 57.3193 180.764 55.9761 182.421 55.9761 cv
cp
0 0 0 0 cmyk
f
182.421 55.9761 mo
184.078 55.9761 185.421 57.3193 185.421 58.9761 cv
185.421 60.6328 184.078 61.9761 182.421 61.9761 cv
180.764 61.9761 179.421 60.6328 179.421 58.9761 cv
179.421 57.3193 180.764 55.9761 182.421 55.9761 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
184.804 44.5566 mo
186.46 44.5566 187.804 45.8999 187.804 47.5566 cv
187.804 49.2139 186.46 50.5566 184.804 50.5566 cv
183.147 50.5566 181.804 49.2139 181.804 47.5566 cv
181.804 45.8999 183.147 44.5566 184.804 44.5566 cv
cp
0 0 0 0 cmyk
f
184.804 44.5566 mo
186.46 44.5566 187.804 45.8999 187.804 47.5566 cv
187.804 49.2139 186.46 50.5566 184.804 50.5566 cv
183.147 50.5566 181.804 49.2139 181.804 47.5566 cv
181.804 45.8999 183.147 44.5566 184.804 44.5566 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
188.017 56.6982 mo
189.674 56.6982 191.017 58.041 191.017 59.6982 cv
191.017 61.355 189.674 62.6982 188.017 62.6982 cv
186.36 62.6982 185.017 61.355 185.017 59.6982 cv
185.017 58.041 186.36 56.6982 188.017 56.6982 cv
cp
0 0 0 0 cmyk
f
188.017 56.6982 mo
189.674 56.6982 191.017 58.041 191.017 59.6982 cv
191.017 61.355 189.674 62.6982 188.017 62.6982 cv
186.36 62.6982 185.017 61.355 185.017 59.6982 cv
185.017 58.041 186.36 56.6982 188.017 56.6982 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
192.024 50.9917 mo
193.681 50.9917 195.024 52.335 195.024 53.9917 cv
195.024 55.6484 193.681 56.9917 192.024 56.9917 cv
190.367 56.9917 189.024 55.6484 189.024 53.9917 cv
189.024 52.335 190.367 50.9917 192.024 50.9917 cv
cp
0 0 0 0 cmyk
f
192.024 50.9917 mo
193.681 50.9917 195.024 52.335 195.024 53.9917 cv
195.024 55.6484 193.681 56.9917 192.024 56.9917 cv
190.367 56.9917 189.024 55.6484 189.024 53.9917 cv
189.024 52.335 190.367 50.9917 192.024 50.9917 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
196.032 52.4253 mo
197.688 52.4253 199.032 53.7681 199.032 55.4253 cv
199.032 57.082 197.688 58.4253 196.032 58.4253 cv
194.375 58.4253 193.032 57.082 193.032 55.4253 cv
193.032 53.7681 194.375 52.4253 196.032 52.4253 cv
cp
0 0 0 0 cmyk
f
196.032 52.4253 mo
197.688 52.4253 199.032 53.7681 199.032 55.4253 cv
199.032 57.082 197.688 58.4253 196.032 58.4253 cv
194.375 58.4253 193.032 57.082 193.032 55.4253 cv
193.032 53.7681 194.375 52.4253 196.032 52.4253 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
201.627 53.147 mo
203.284 53.147 204.627 54.4902 204.627 56.147 cv
204.627 57.8037 203.284 59.147 201.627 59.147 cv
199.971 59.147 198.627 57.8037 198.627 56.147 cv
198.627 54.4902 199.971 53.147 201.627 53.147 cv
cp
0 0 0 0 cmyk
f
201.627 53.147 mo
203.284 53.147 204.627 54.4902 204.627 56.147 cv
204.627 57.8037 203.284 59.147 201.627 59.147 cv
199.971 59.147 198.627 57.8037 198.627 56.147 cv
198.627 54.4902 199.971 53.147 201.627 53.147 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
202.422 125.255 mo
204.079 125.255 205.422 126.598 205.422 128.255 cv
205.422 129.913 204.079 131.255 202.422 131.255 cv
200.765 131.255 199.422 129.913 199.422 128.255 cv
199.422 126.598 200.765 125.255 202.422 125.255 cv
cp
0 0 0 0 cmyk
f
202.422 125.255 mo
204.079 125.255 205.422 126.598 205.422 128.255 cv
205.422 129.913 204.079 131.255 202.422 131.255 cv
200.765 131.255 199.422 129.913 199.422 128.255 cv
199.422 126.598 200.765 125.255 202.422 125.255 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
203.216 176.66 mo
204.873 176.66 206.216 178.002 206.216 179.66 cv
206.216 181.317 204.873 182.66 203.216 182.66 cv
201.559 182.66 200.216 181.317 200.216 179.66 cv
200.216 178.002 201.559 176.66 203.216 176.66 cv
cp
0 0 0 0 cmyk
f
203.216 176.66 mo
204.873 176.66 206.216 178.002 206.216 179.66 cv
206.216 181.317 204.873 182.66 203.216 182.66 cv
201.559 182.66 200.216 181.317 200.216 179.66 cv
200.216 178.002 201.559 176.66 203.216 176.66 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
204.805 46.7256 mo
206.461 46.7256 207.805 48.0688 207.805 49.7256 cv
207.805 51.3828 206.461 52.7256 204.805 52.7256 cv
203.147 52.7256 201.805 51.3828 201.805 49.7256 cv
201.805 48.0688 203.147 46.7256 204.805 46.7256 cv
cp
0 0 0 0 cmyk
f
204.805 46.7256 mo
206.461 46.7256 207.805 48.0688 207.805 49.7256 cv
207.805 51.3828 206.461 52.7256 204.805 52.7256 cv
203.147 52.7256 201.805 51.3828 201.805 49.7256 cv
201.805 48.0688 203.147 46.7256 204.805 46.7256 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
207.223 136.684 mo
208.88 136.684 210.224 138.028 210.224 139.684 cv
210.224 141.342 208.88 142.684 207.223 142.684 cv
205.566 142.684 204.223 141.342 204.223 139.684 cv
204.223 138.028 205.566 136.684 207.223 136.684 cv
cp
0 0 0 0 cmyk
f
207.223 136.684 mo
208.88 136.684 210.224 138.028 210.224 139.684 cv
210.224 141.342 208.88 142.684 207.223 142.684 cv
205.566 142.684 204.223 141.342 204.223 139.684 cv
204.223 138.028 205.566 136.684 207.223 136.684 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
208.018 56.0112 mo
209.674 56.0112 211.018 57.3545 211.018 59.0112 cv
211.018 60.668 209.674 62.0112 208.018 62.0112 cv
206.361 62.0112 205.018 60.668 205.018 59.0112 cv
205.018 57.3545 206.361 56.0112 208.018 56.0112 cv
cp
0 0 0 0 cmyk
f
208.018 56.0112 mo
209.674 56.0112 211.018 57.3545 211.018 59.0112 cv
211.018 60.668 209.674 62.0112 208.018 62.0112 cv
206.361 62.0112 205.018 60.668 205.018 59.0112 cv
205.018 57.3545 206.361 56.0112 208.018 56.0112 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
210.4 119.555 mo
212.057 119.555 213.4 120.898 213.4 122.555 cv
213.4 124.211 212.057 125.555 210.4 125.555 cv
208.744 125.555 207.4 124.211 207.4 122.555 cv
207.4 120.898 208.744 119.555 210.4 119.555 cv
cp
0 0 0 0 cmyk
f
210.4 119.555 mo
212.057 119.555 213.4 120.898 213.4 122.555 cv
213.4 124.211 212.057 125.555 210.4 125.555 cv
208.744 125.555 207.4 124.211 207.4 122.555 cv
207.4 120.898 208.744 119.555 210.4 119.555 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
213.613 113.848 mo
215.271 113.848 216.613 115.191 216.613 116.848 cv
216.613 118.504 215.271 119.848 213.613 119.848 cv
211.957 119.848 210.613 118.504 210.613 116.848 cv
210.613 115.191 211.957 113.848 213.613 113.848 cv
cp
0 0 0 0 cmyk
f
213.613 113.848 mo
215.271 113.848 216.613 115.191 216.613 116.848 cv
216.613 118.504 215.271 119.848 213.613 119.848 cv
211.957 119.848 210.613 118.504 210.613 116.848 cv
210.613 115.191 211.957 113.848 213.613 113.848 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
214.408 132.411 mo
216.064 132.411 217.408 133.754 217.408 135.411 cv
217.408 137.067 216.064 138.411 214.408 138.411 cv
212.751 138.411 211.408 137.067 211.408 135.411 cv
211.408 133.754 212.751 132.411 214.408 132.411 cv
cp
0 0 0 0 cmyk
f
214.408 132.411 mo
216.064 132.411 217.408 133.754 217.408 135.411 cv
217.408 137.067 216.064 138.411 214.408 138.411 cv
212.751 138.411 211.408 137.067 211.408 135.411 cv
211.408 133.754 212.751 132.411 214.408 132.411 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
215.202 103.854 mo
216.859 103.854 218.202 105.198 218.202 106.854 cv
218.202 108.512 216.859 109.854 215.202 109.854 cv
213.545 109.854 212.202 108.512 212.202 106.854 cv
212.202 105.198 213.545 103.854 215.202 103.854 cv
cp
0 0 0 0 cmyk
f
215.202 103.854 mo
216.859 103.854 218.202 105.198 218.202 106.854 cv
218.202 108.512 216.859 109.854 215.202 109.854 cv
213.545 109.854 212.202 108.512 212.202 106.854 cv
212.202 105.198 213.545 103.854 215.202 103.854 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
216.827 43.8862 mo
218.483 43.8862 219.827 45.2295 219.827 46.8862 cv
219.827 48.543 218.483 49.8862 216.827 49.8862 cv
215.17 49.8862 213.827 48.543 213.827 46.8862 cv
213.827 45.2295 215.17 43.8862 216.827 43.8862 cv
cp
0 0 0 0 cmyk
f
216.827 43.8862 mo
218.483 43.8862 219.827 45.2295 219.827 46.8862 cv
219.827 48.543 218.483 49.8862 216.827 49.8862 cv
215.17 49.8862 213.827 48.543 213.827 46.8862 cv
213.827 45.2295 215.17 43.8862 216.827 43.8862 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
221.628 54.6016 mo
223.285 54.6016 224.628 55.9448 224.628 57.6016 cv
224.628 59.2588 223.285 60.6016 221.628 60.6016 cv
219.972 60.6016 218.628 59.2588 218.628 57.6016 cv
218.628 55.9448 219.972 54.6016 221.628 54.6016 cv
cp
0 0 0 0 cmyk
f
221.628 54.6016 mo
223.285 54.6016 224.628 55.9448 224.628 57.6016 cv
224.628 59.2588 223.285 60.6016 221.628 60.6016 cv
219.972 60.6016 218.628 59.2588 218.628 57.6016 cv
218.628 55.9448 219.972 54.6016 221.628 54.6016 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
224.011 54.605 mo
225.668 54.605 227.011 55.9482 227.011 57.605 cv
227.011 59.2617 225.668 60.605 224.011 60.605 cv
222.354 60.605 221.011 59.2617 221.011 57.605 cv
221.011 55.9482 222.354 54.605 224.011 54.605 cv
cp
0 0 0 0 cmyk
f
224.011 54.605 mo
225.668 54.605 227.011 55.9482 227.011 57.605 cv
227.011 59.2617 225.668 60.605 224.011 60.605 cv
222.354 60.605 221.011 59.2617 221.011 57.605 cv
221.011 55.9482 222.354 54.605 224.011 54.605 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
225.636 54.6074 mo
227.292 54.6074 228.636 55.9507 228.636 57.6074 cv
228.636 59.2642 227.292 60.6074 225.636 60.6074 cv
223.979 60.6074 222.636 59.2642 222.636 57.6074 cv
222.636 55.9507 223.979 54.6074 225.636 54.6074 cv
cp
0 0 0 0 cmyk
f
225.636 54.6074 mo
227.292 54.6074 228.636 55.9507 228.636 57.6074 cv
228.636 59.2642 227.292 60.6074 225.636 60.6074 cv
223.979 60.6074 222.636 59.2642 222.636 57.6074 cv
222.636 55.9507 223.979 54.6074 225.636 54.6074 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
228.019 43.1875 mo
229.675 43.1875 231.019 44.5308 231.019 46.1875 cv
231.019 47.8447 229.675 49.1875 228.019 49.1875 cv
226.361 49.1875 225.019 47.8447 225.019 46.1875 cv
225.019 44.5308 226.361 43.1875 228.019 43.1875 cv
cp
0 0 0 0 cmyk
f
228.019 43.1875 mo
229.675 43.1875 231.019 44.5308 231.019 46.1875 cv
231.019 47.8447 229.675 49.1875 228.019 49.1875 cv
226.361 49.1875 225.019 47.8447 225.019 46.1875 cv
225.019 44.5308 226.361 43.1875 228.019 43.1875 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
228.019 128.86 mo
229.675 128.86 231.019 130.203 231.019 131.86 cv
231.019 133.516 229.675 134.86 228.019 134.86 cv
226.361 134.86 225.019 133.516 225.019 131.86 cv
225.019 130.203 226.361 128.86 228.019 128.86 cv
cp
0 0 0 0 cmyk
f
228.019 128.86 mo
229.675 128.86 231.019 130.203 231.019 131.86 cv
231.019 133.516 229.675 134.86 228.019 134.86 cv
226.361 134.86 225.019 133.516 225.019 131.86 cv
225.019 130.203 226.361 128.86 228.019 128.86 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
229.607 131.717 mo
231.264 131.717 232.607 133.061 232.607 134.717 cv
232.607 136.375 231.264 137.717 229.607 137.717 cv
227.95 137.717 226.607 136.375 226.607 134.717 cv
226.607 133.061 227.95 131.717 229.607 131.717 cv
cp
0 0 0 0 cmyk
f
229.607 131.717 mo
231.264 131.717 232.607 133.061 232.607 134.717 cv
232.607 136.375 231.264 137.717 229.607 137.717 cv
227.95 137.717 226.607 136.375 226.607 134.717 cv
226.607 133.061 227.95 131.717 229.607 131.717 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
231.231 56.7568 mo
232.889 56.7568 234.231 58.1001 234.231 59.7568 cv
234.231 61.4136 232.889 62.7568 231.231 62.7568 cv
229.575 62.7568 228.231 61.4136 228.231 59.7568 cv
228.231 58.1001 229.575 56.7568 231.231 56.7568 cv
cp
0 0 0 0 cmyk
f
231.231 56.7568 mo
232.889 56.7568 234.231 58.1001 234.231 59.7568 cv
234.231 61.4136 232.889 62.7568 231.231 62.7568 cv
229.575 62.7568 228.231 61.4136 228.231 59.7568 cv
228.231 58.1001 229.575 56.7568 231.231 56.7568 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
232.026 126.723 mo
233.683 126.723 235.026 128.067 235.026 129.723 cv
235.026 131.38 233.683 132.723 232.026 132.723 cv
230.369 132.723 229.026 131.38 229.026 129.723 cv
229.026 128.067 230.369 126.723 232.026 126.723 cv
cp
0 0 0 0 cmyk
f
232.026 126.723 mo
233.683 126.723 235.026 128.067 235.026 129.723 cv
235.026 131.38 233.683 132.723 232.026 132.723 cv
230.369 132.723 229.026 131.38 229.026 129.723 cv
229.026 128.067 230.369 126.723 232.026 126.723 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
234.409 131.01 mo
236.065 131.01 237.409 132.354 237.409 134.01 cv
237.409 135.667 236.065 137.01 234.409 137.01 cv
232.752 137.01 231.409 135.667 231.409 134.01 cv
231.409 132.354 232.752 131.01 234.409 131.01 cv
cp
0 0 0 0 cmyk
f
234.409 131.01 mo
236.065 131.01 237.409 132.354 237.409 134.01 cv
237.409 135.667 236.065 137.01 234.409 137.01 cv
232.752 137.01 231.409 135.667 231.409 134.01 cv
231.409 132.354 232.752 131.01 234.409 131.01 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
236.828 128.872 mo
238.484 128.872 239.828 130.215 239.828 131.872 cv
239.828 133.529 238.484 134.872 236.828 134.872 cv
235.171 134.872 233.828 133.529 233.828 131.872 cv
233.828 130.215 235.171 128.872 236.828 128.872 cv
cp
0 0 0 0 cmyk
f
236.828 128.872 mo
238.484 128.872 239.828 130.215 239.828 131.872 cv
239.828 133.529 238.484 134.872 236.828 134.872 cv
235.171 134.872 233.828 133.529 233.828 131.872 cv
233.828 130.215 235.171 128.872 236.828 128.872 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
240.041 129.59 mo
241.697 129.59 243.041 130.933 243.041 132.59 cv
243.041 134.247 241.697 135.59 240.041 135.59 cv
238.384 135.59 237.041 134.247 237.041 132.59 cv
237.041 130.933 238.384 129.59 240.041 129.59 cv
cp
0 0 0 0 cmyk
f
240.041 129.59 mo
241.697 129.59 243.041 130.933 243.041 132.59 cv
243.041 134.247 241.697 135.59 240.041 135.59 cv
238.384 135.59 237.041 134.247 237.041 132.59 cv
237.041 130.933 238.384 129.59 240.041 129.59 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
243.218 131.737 mo
244.875 131.737 246.218 133.079 246.218 134.737 cv
246.218 136.393 244.875 137.737 243.218 137.737 cv
241.561 137.737 240.218 136.393 240.218 134.737 cv
240.218 133.079 241.561 131.737 243.218 131.737 cv
cp
0 0 0 0 cmyk
f
243.218 131.737 mo
244.875 131.737 246.218 133.079 246.218 134.737 cv
246.218 136.393 244.875 137.737 243.218 137.737 cv
241.561 137.737 240.218 136.393 240.218 134.737 cv
240.218 133.079 241.561 131.737 243.218 131.737 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
246.431 134.596 mo
248.088 134.596 249.431 135.94 249.431 137.596 cv
249.431 139.252 248.088 140.596 246.431 140.596 cv
244.774 140.596 243.431 139.252 243.431 137.596 cv
243.431 135.94 244.774 134.596 246.431 134.596 cv
cp
0 0 0 0 cmyk
f
246.431 134.596 mo
248.088 134.596 249.431 135.94 249.431 137.596 cv
249.431 139.252 248.088 140.596 246.431 140.596 cv
244.774 140.596 243.431 139.252 243.431 137.596 cv
243.431 135.94 244.774 134.596 246.431 134.596 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
250.438 131.032 mo
252.095 131.032 253.438 132.375 253.438 134.032 cv
253.438 135.689 252.095 137.032 250.438 137.032 cv
248.781 137.032 247.438 135.689 247.438 134.032 cv
247.438 132.375 248.781 131.032 250.438 131.032 cv
cp
0 0 0 0 cmyk
f
250.438 131.032 mo
252.095 131.032 253.438 132.375 253.438 134.032 cv
253.438 135.689 252.095 137.032 250.438 137.032 cv
248.781 137.032 247.438 135.689 247.438 134.032 cv
247.438 132.375 248.781 131.032 250.438 131.032 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
253.615 133.178 mo
255.272 133.178 256.615 134.521 256.615 136.178 cv
256.615 137.834 255.272 139.178 253.615 139.178 cv
251.958 139.178 250.615 137.834 250.615 136.178 cv
250.615 134.521 251.958 133.178 253.615 133.178 cv
cp
0 0 0 0 cmyk
f
253.615 133.178 mo
255.272 133.178 256.615 134.521 256.615 136.178 cv
256.615 137.834 255.272 139.178 253.615 139.178 cv
251.958 139.178 250.615 137.834 250.615 136.178 cv
250.615 134.521 251.958 133.178 253.615 133.178 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
255.24 118.188 mo
256.896 118.188 258.24 119.532 258.24 121.188 cv
258.24 122.844 256.896 124.188 255.24 124.188 cv
253.583 124.188 252.24 122.844 252.24 121.188 cv
252.24 119.532 253.583 118.188 255.24 118.188 cv
cp
0 0 0 0 cmyk
f
255.24 118.188 mo
256.896 118.188 258.24 119.532 258.24 121.188 cv
258.24 122.844 256.896 124.188 255.24 124.188 cv
253.583 124.188 252.24 122.844 252.24 121.188 cv
252.24 119.532 253.583 118.188 255.24 118.188 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
256.034 123.901 mo
257.691 123.901 259.034 125.243 259.034 126.901 cv
259.034 128.557 257.691 129.901 256.034 129.901 cv
254.377 129.901 253.034 128.557 253.034 126.901 cv
253.034 125.243 254.377 123.901 256.034 123.901 cv
cp
0 0 0 0 cmyk
f
256.034 123.901 mo
257.691 123.901 259.034 125.243 259.034 126.901 cv
259.034 128.557 257.691 129.901 256.034 129.901 cv
254.377 129.901 253.034 128.557 253.034 126.901 cv
253.034 125.243 254.377 123.901 256.034 123.901 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
256.215 48.4023 mo
257.872 48.4023 259.215 49.7451 259.215 51.4023 cv
259.215 53.0591 257.872 54.4023 256.215 54.4023 cv
254.558 54.4023 253.215 53.0591 253.215 51.4023 cv
253.215 49.7451 254.558 48.4023 256.215 48.4023 cv
cp
0 0 0 0 cmyk
f
256.215 48.4023 mo
257.872 48.4023 259.215 49.7451 259.215 51.4023 cv
259.215 53.0591 257.872 54.4023 256.215 54.4023 cv
254.558 54.4023 253.215 53.0591 253.215 51.4023 cv
253.215 49.7451 254.558 48.4023 256.215 48.4023 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
256.828 55.8994 mo
258.485 55.8994 259.828 57.2427 259.828 58.8994 cv
259.828 60.5562 258.485 61.8994 256.828 61.8994 cv
255.171 61.8994 253.828 60.5562 253.828 58.8994 cv
253.828 57.2427 255.171 55.8994 256.828 55.8994 cv
cp
0 0 0 0 cmyk
f
256.828 55.8994 mo
258.485 55.8994 259.828 57.2427 259.828 58.8994 cv
259.828 60.5562 258.485 61.8994 256.828 61.8994 cv
255.171 61.8994 253.828 60.5562 253.828 58.8994 cv
253.828 57.2427 255.171 55.8994 256.828 55.8994 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
259.211 133.9 mo
260.868 133.9 262.211 135.243 262.211 136.9 cv
262.211 138.557 260.868 139.9 259.211 139.9 cv
257.554 139.9 256.211 138.557 256.211 136.9 cv
256.211 135.243 257.554 133.9 259.211 133.9 cv
cp
0 0 0 0 cmyk
f
259.211 133.9 mo
260.868 133.9 262.211 135.243 262.211 136.9 cv
262.211 138.557 260.868 139.9 259.211 139.9 cv
257.554 139.9 256.211 138.557 256.211 136.9 cv
256.211 135.243 257.554 133.9 259.211 133.9 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
260.042 128.19 mo
261.698 128.19 263.042 129.533 263.042 131.19 cv
263.042 132.846 261.698 134.19 260.042 134.19 cv
258.385 134.19 257.042 132.846 257.042 131.19 cv
257.042 129.533 258.385 128.19 260.042 128.19 cv
cp
0 0 0 0 cmyk
f
260.042 128.19 mo
261.698 128.19 263.042 129.533 263.042 131.19 cv
263.042 132.846 261.698 134.19 260.042 134.19 cv
258.385 134.19 257.042 132.846 257.042 131.19 cv
257.042 129.533 258.385 128.19 260.042 128.19 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
261.63 122.48 mo
263.287 122.48 264.63 123.823 264.63 125.48 cv
264.63 127.137 263.287 128.48 261.63 128.48 cv
259.973 128.48 258.63 127.137 258.63 125.48 cv
258.63 123.823 259.973 122.48 261.63 122.48 cv
cp
0 0 0 0 cmyk
f
261.63 122.48 mo
263.287 122.48 264.63 123.823 264.63 125.48 cv
264.63 127.137 263.287 128.48 261.63 128.48 cv
259.973 128.48 258.63 127.137 258.63 125.48 cv
258.63 123.823 259.973 122.48 261.63 122.48 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
263.435 82.145 mo
265.092 82.145 266.435 83.4883 266.435 85.145 cv
266.435 86.8018 265.092 88.145 263.435 88.145 cv
261.778 88.145 260.435 86.8018 260.435 85.145 cv
260.435 83.4883 261.778 82.145 263.435 82.145 cv
cp
0 0 0 0 cmyk
f
263.435 82.145 mo
265.092 82.145 266.435 83.4883 266.435 85.145 cv
266.435 86.8018 265.092 88.145 263.435 88.145 cv
261.778 88.145 260.435 86.8018 260.435 85.145 cv
260.435 83.4883 261.778 82.145 263.435 82.145 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
264.013 151.754 mo
265.669 151.754 267.013 153.098 267.013 154.754 cv
267.013 156.411 265.669 157.754 264.013 157.754 cv
262.356 157.754 261.013 156.411 261.013 154.754 cv
261.013 153.098 262.356 151.754 264.013 151.754 cv
cp
0 0 0 0 cmyk
f
264.013 151.754 mo
265.669 151.754 267.013 153.098 267.013 154.754 cv
267.013 156.411 265.669 157.754 264.013 157.754 cv
262.356 157.754 261.013 156.411 261.013 154.754 cv
261.013 153.098 262.356 151.754 264.013 151.754 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
265.637 120.344 mo
267.294 120.344 268.637 121.687 268.637 123.344 cv
268.637 125 267.294 126.344 265.637 126.344 cv
263.98 126.344 262.637 125 262.637 123.344 cv
262.637 121.687 263.98 120.344 265.637 120.344 cv
cp
0 0 0 0 cmyk
f
265.637 120.344 mo
267.294 120.344 268.637 121.687 268.637 123.344 cv
268.637 125 267.294 126.344 265.637 126.344 cv
263.98 126.344 262.637 125 262.637 123.344 cv
262.637 121.687 263.98 120.344 265.637 120.344 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
267.226 128.2 mo
268.883 128.2 270.226 129.542 270.226 131.2 cv
270.226 132.856 268.883 134.2 267.226 134.2 cv
265.569 134.2 264.226 132.856 264.226 131.2 cv
264.226 129.542 265.569 128.2 267.226 128.2 cv
cp
0 0 0 0 cmyk
f
267.226 128.2 mo
268.883 128.2 270.226 129.542 270.226 131.2 cv
270.226 132.856 268.883 134.2 267.226 134.2 cv
265.569 134.2 264.226 132.856 264.226 131.2 cv
264.226 129.542 265.569 128.2 267.226 128.2 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
267.623 43.5986 mo
269.28 43.5986 270.623 44.9414 270.623 46.5986 cv
270.623 48.2554 269.28 49.5986 267.623 49.5986 cv
265.966 49.5986 264.623 48.2554 264.623 46.5986 cv
264.623 44.9414 265.966 43.5986 267.623 43.5986 cv
cp
0 0 0 0 cmyk
f
267.623 43.5986 mo
269.28 43.5986 270.623 44.9414 270.623 46.5986 cv
270.623 48.2554 269.28 49.5986 267.623 49.5986 cv
265.966 49.5986 264.623 48.2554 264.623 46.5986 cv
264.623 44.9414 265.966 43.5986 267.623 43.5986 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
271.847 46.2817 mo
273.504 46.2817 274.847 47.6245 274.847 49.2817 cv
274.847 50.9385 273.504 52.2817 271.847 52.2817 cv
270.19 52.2817 268.847 50.9385 268.847 49.2817 cv
268.847 47.6245 270.19 46.2817 271.847 46.2817 cv
cp
0 0 0 0 cmyk
f
271.847 46.2817 mo
273.504 46.2817 274.847 47.6245 274.847 49.2817 cv
274.847 50.9385 273.504 52.2817 271.847 52.2817 cv
270.19 52.2817 268.847 50.9385 268.847 49.2817 cv
268.847 47.6245 270.19 46.2817 271.847 46.2817 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
275.421 49.499 mo
277.078 49.499 278.421 50.8423 278.421 52.499 cv
278.421 54.1558 277.078 55.499 275.421 55.499 cv
273.764 55.499 272.421 54.1558 272.421 52.499 cv
272.421 50.8423 273.764 49.499 275.421 49.499 cv
cp
0 0 0 0 cmyk
f
275.421 49.499 mo
277.078 49.499 278.421 50.8423 278.421 52.499 cv
278.421 54.1558 277.078 55.499 275.421 55.499 cv
273.764 55.499 272.421 54.1558 272.421 52.499 cv
272.421 50.8423 273.764 49.499 275.421 49.499 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
277.84 53.7861 mo
279.497 53.7861 280.84 55.1294 280.84 56.7861 cv
280.84 58.4429 279.497 59.7861 277.84 59.7861 cv
276.183 59.7861 274.84 58.4429 274.84 56.7861 cv
274.84 55.1294 276.183 53.7861 277.84 53.7861 cv
cp
0 0 0 0 cmyk
f
277.84 53.7861 mo
279.497 53.7861 280.84 55.1294 280.84 56.7861 cv
280.84 58.4429 279.497 59.7861 277.84 59.7861 cv
276.183 59.7861 274.84 58.4429 274.84 56.7861 cv
274.84 55.1294 276.183 53.7861 277.84 53.7861 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
281.45 51.1138 mo
283.107 51.1138 284.45 52.457 284.45 54.1138 cv
284.45 55.7705 283.107 57.1138 281.45 57.1138 cv
279.793 57.1138 278.45 55.7705 278.45 54.1138 cv
278.45 52.457 279.793 51.1138 281.45 51.1138 cv
cp
0 0 0 0 cmyk
f
281.45 51.1138 mo
283.107 51.1138 284.45 52.457 284.45 54.1138 cv
284.45 55.7705 283.107 57.1138 281.45 57.1138 cv
279.793 57.1138 278.45 55.7705 278.45 54.1138 cv
278.45 52.457 279.793 51.1138 281.45 51.1138 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
282.028 122.865 mo
283.685 122.865 285.028 124.208 285.028 125.865 cv
285.028 127.522 283.685 128.865 282.028 128.865 cv
280.371 128.865 279.028 127.522 279.028 125.865 cv
279.028 124.208 280.371 122.865 282.028 122.865 cv
cp
0 0 0 0 cmyk
f
282.028 122.865 mo
283.685 122.865 285.028 124.208 285.028 125.865 cv
285.028 127.522 283.685 128.865 282.028 128.865 cv
280.371 128.865 279.028 127.522 279.028 125.865 cv
279.028 124.208 280.371 122.865 282.028 122.865 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
283.833 118.047 mo
285.49 118.047 286.833 119.391 286.833 121.047 cv
286.833 122.706 285.49 124.047 283.833 124.047 cv
282.176 124.047 280.833 122.706 280.833 121.047 cv
280.833 119.391 282.176 118.047 283.833 118.047 cv
cp
0 0 0 0 cmyk
f
283.833 118.047 mo
285.49 118.047 286.833 119.391 286.833 121.047 cv
286.833 122.706 285.49 124.047 283.833 124.047 cv
282.176 124.047 280.833 122.706 280.833 121.047 cv
280.833 119.391 282.176 118.047 283.833 118.047 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
284.447 106.269 mo
286.104 106.269 287.447 107.612 287.447 109.269 cv
287.447 110.926 286.104 112.269 284.447 112.269 cv
282.79 112.269 281.447 110.926 281.447 109.269 cv
281.447 107.612 282.79 106.269 284.447 106.269 cv
cp
0 0 0 0 cmyk
f
284.447 106.269 mo
286.104 106.269 287.447 107.612 287.447 109.269 cv
287.447 110.926 286.104 112.269 284.447 112.269 cv
282.79 112.269 281.447 110.926 281.447 109.269 cv
281.447 107.612 282.79 106.269 284.447 106.269 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
285.024 121.262 mo
286.681 121.262 288.024 122.606 288.024 124.262 cv
288.024 125.919 286.681 127.262 285.024 127.262 cv
283.368 127.262 282.024 125.919 282.024 124.262 cv
282.024 122.606 283.368 121.262 285.024 121.262 cv
cp
0 0 0 0 cmyk
f
285.024 121.262 mo
286.681 121.262 288.024 122.606 288.024 124.262 cv
288.024 125.919 286.681 127.262 285.024 127.262 cv
283.368 127.262 282.024 125.919 282.024 124.262 cv
282.024 122.606 283.368 121.262 285.024 121.262 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
289.826 118.056 mo
291.483 118.056 292.826 119.399 292.826 121.056 cv
292.826 122.713 291.483 124.056 289.826 124.056 cv
288.169 124.056 286.826 122.713 286.826 121.056 cv
286.826 119.399 288.169 118.056 289.826 118.056 cv
cp
0 0 0 0 cmyk
f
289.826 118.056 mo
291.483 118.056 292.826 119.399 292.826 121.056 cv
292.826 122.713 291.483 124.056 289.826 124.056 cv
288.169 124.056 286.826 122.713 286.826 121.056 cv
286.826 119.399 288.169 118.056 289.826 118.056 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
293.437 118.596 mo
295.094 118.596 296.437 119.94 296.437 121.596 cv
296.437 123.254 295.094 124.596 293.437 124.596 cv
291.779 124.596 290.437 123.254 290.437 121.596 cv
290.437 119.94 291.779 118.596 293.437 118.596 cv
cp
0 0 0 0 cmyk
f
293.437 118.596 mo
295.094 118.596 296.437 119.94 296.437 121.596 cv
296.437 123.254 295.094 124.596 293.437 124.596 cv
291.779 124.596 290.437 123.254 290.437 121.596 cv
290.437 119.94 291.779 118.596 293.437 118.596 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
296.433 118.065 mo
298.09 118.065 299.433 119.409 299.433 121.065 cv
299.433 122.723 298.09 124.065 296.433 124.065 cv
294.776 124.065 293.433 122.723 293.433 121.065 cv
293.433 119.409 294.776 118.065 296.433 118.065 cv
cp
0 0 0 0 cmyk
f
296.433 118.065 mo
298.09 118.065 299.433 119.409 299.433 121.065 cv
299.433 122.723 298.09 124.065 296.433 124.065 cv
294.776 124.065 293.433 122.723 293.433 121.065 cv
293.433 119.409 294.776 118.065 296.433 118.065 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
297.047 131.989 mo
298.703 131.989 300.047 133.331 300.047 134.989 cv
300.047 136.645 298.703 137.989 297.047 137.989 cv
295.39 137.989 294.047 136.645 294.047 134.989 cv
294.047 133.331 295.39 131.989 297.047 131.989 cv
cp
0 0 0 0 cmyk
f
297.047 131.989 mo
298.703 131.989 300.047 133.331 300.047 134.989 cv
300.047 136.645 298.703 137.989 297.047 137.989 cv
295.39 137.989 294.047 136.645 294.047 134.989 cv
294.047 133.331 295.39 131.989 297.047 131.989 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
298.238 47.3887 mo
299.895 47.3887 301.238 48.7319 301.238 50.3887 cv
301.238 52.0454 299.895 53.3887 298.238 53.3887 cv
296.581 53.3887 295.238 52.0454 295.238 50.3887 cv
295.238 48.7319 296.581 47.3887 298.238 47.3887 cv
cp
0 0 0 0 cmyk
f
298.238 47.3887 mo
299.895 47.3887 301.238 48.7319 301.238 50.3887 cv
301.238 52.0454 299.895 53.3887 298.238 53.3887 cv
296.581 53.3887 295.238 52.0454 295.238 50.3887 cv
295.238 48.7319 296.581 47.3887 298.238 47.3887 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
299.43 56.4927 mo
301.086 56.4927 302.43 57.8359 302.43 59.4927 cv
302.43 61.1494 301.086 62.4927 299.43 62.4927 cv
297.772 62.4927 296.43 61.1494 296.43 59.4927 cv
296.43 57.8359 297.772 56.4927 299.43 56.4927 cv
cp
0 0 0 0 cmyk
f
299.43 56.4927 mo
301.086 56.4927 302.43 57.8359 302.43 59.4927 cv
302.43 61.1494 301.086 62.4927 299.43 62.4927 cv
297.772 62.4927 296.43 61.1494 296.43 59.4927 cv
296.43 57.8359 297.772 56.4927 299.43 56.4927 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
303.04 46.8594 mo
304.696 46.8594 306.04 48.2026 306.04 49.8594 cv
306.04 51.5161 304.696 52.8594 303.04 52.8594 cv
301.383 52.8594 300.04 51.5161 300.04 49.8594 cv
300.04 48.2026 301.383 46.8594 303.04 46.8594 cv
cp
0 0 0 0 cmyk
f
303.04 46.8594 mo
304.696 46.8594 306.04 48.2026 306.04 49.8594 cv
306.04 51.5161 304.696 52.8594 303.04 52.8594 cv
301.383 52.8594 300.04 51.5161 300.04 49.8594 cv
300.04 48.2026 301.383 46.8594 303.04 46.8594 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
306.65 42.0454 mo
308.307 42.0454 309.65 43.3882 309.65 45.0454 cv
309.65 46.7021 308.307 48.0454 306.65 48.0454 cv
304.993 48.0454 303.65 46.7021 303.65 45.0454 cv
303.65 43.3882 304.993 42.0454 306.65 42.0454 cv
cp
0 0 0 0 cmyk
f
306.65 42.0454 mo
308.307 42.0454 309.65 43.3882 309.65 45.0454 cv
309.65 46.7021 308.307 48.0454 306.65 48.0454 cv
304.993 48.0454 303.65 46.7021 303.65 45.0454 cv
303.65 43.3882 304.993 42.0454 306.65 42.0454 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
306.65 36.1553 mo
308.307 36.1553 309.65 37.4985 309.65 39.1553 cv
309.65 40.812 308.307 42.1553 306.65 42.1553 cv
304.993 42.1553 303.65 40.812 303.65 39.1553 cv
303.65 37.4985 304.993 36.1553 306.65 36.1553 cv
cp
0 0 0 0 cmyk
f
306.65 36.1553 mo
308.307 36.1553 309.65 37.4985 309.65 39.1553 cv
309.65 40.812 308.307 42.1553 306.65 42.1553 cv
304.993 42.1553 303.65 40.812 303.65 39.1553 cv
303.65 37.4985 304.993 36.1553 306.65 36.1553 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
310.225 44.7275 mo
311.881 44.7275 313.225 46.0708 313.225 47.7275 cv
313.225 49.3843 311.881 50.7275 310.225 50.7275 cv
308.567 50.7275 307.225 49.3843 307.225 47.7275 cv
307.225 46.0708 308.567 44.7275 310.225 44.7275 cv
cp
0 0 0 0 cmyk
f
310.225 44.7275 mo
311.881 44.7275 313.225 46.0708 313.225 47.7275 cv
313.225 49.3843 311.881 50.7275 310.225 50.7275 cv
308.567 50.7275 307.225 49.3843 307.225 47.7275 cv
307.225 46.0708 308.567 44.7275 310.225 44.7275 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
311.451 22.7759 mo
313.108 22.7759 314.451 24.1191 314.451 25.7759 cv
314.451 27.4326 313.108 28.7759 311.451 28.7759 cv
309.795 28.7759 308.451 27.4326 308.451 25.7759 cv
308.451 24.1191 309.795 22.7759 311.451 22.7759 cv
cp
0 0 0 0 cmyk
f
311.451 22.7759 mo
313.108 22.7759 314.451 24.1191 314.451 25.7759 cv
314.451 27.4326 313.108 28.7759 311.451 28.7759 cv
309.795 28.7759 308.451 27.4326 308.451 25.7759 cv
308.451 24.1191 309.795 22.7759 311.451 22.7759 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
312.643 16.8877 mo
314.3 16.8877 315.643 18.2305 315.643 19.8877 cv
315.643 21.5444 314.3 22.8877 312.643 22.8877 cv
310.986 22.8877 309.643 21.5444 309.643 19.8877 cv
309.643 18.2305 310.986 16.8877 312.643 16.8877 cv
cp
0 0 0 0 cmyk
f
312.643 16.8877 mo
314.3 16.8877 315.643 18.2305 315.643 19.8877 cv
315.643 21.5444 314.3 22.8877 312.643 22.8877 cv
310.986 22.8877 309.643 21.5444 309.643 19.8877 cv
309.643 18.2305 310.986 16.8877 312.643 16.8877 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
313.257 113.805 mo
314.914 113.805 316.257 115.147 316.257 116.805 cv
316.257 118.461 314.914 119.805 313.257 119.805 cv
311.6 119.805 310.257 118.461 310.257 116.805 cv
310.257 115.147 311.6 113.805 313.257 113.805 cv
cp
0 0 0 0 cmyk
f
313.257 113.805 mo
314.914 113.805 316.257 115.147 316.257 116.805 cv
316.257 118.461 314.914 119.805 313.257 119.805 cv
311.6 119.805 310.257 118.461 310.257 116.805 cv
310.257 115.147 311.6 113.805 313.257 113.805 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
317.444 118.094 mo
319.102 118.094 320.444 119.437 320.444 121.094 cv
320.444 122.75 319.102 124.094 317.444 124.094 cv
315.788 124.094 314.444 122.75 314.444 121.094 cv
314.444 119.437 315.788 118.094 317.444 118.094 cv
cp
0 0 0 0 cmyk
f
317.444 118.094 mo
319.102 118.094 320.444 119.437 320.444 121.094 cv
320.444 122.75 319.102 124.094 317.444 124.094 cv
315.788 124.094 314.444 122.75 314.444 121.094 cv
314.444 119.437 315.788 118.094 317.444 118.094 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
321.633 120.241 mo
323.289 120.241 324.633 121.584 324.633 123.241 cv
324.633 124.899 323.289 126.241 321.633 126.241 cv
319.976 126.241 318.633 124.899 318.633 123.241 cv
318.633 121.584 319.976 120.241 321.633 120.241 cv
cp
0 0 0 0 cmyk
f
321.633 120.241 mo
323.289 120.241 324.633 121.584 324.633 123.241 cv
324.633 124.899 323.289 126.241 321.633 126.241 cv
319.976 126.241 318.633 124.899 318.633 123.241 cv
318.633 121.584 319.976 120.241 321.633 120.241 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
324.629 117.034 mo
326.286 117.034 327.629 118.375 327.629 120.034 cv
327.629 121.69 326.286 123.034 324.629 123.034 cv
322.973 123.034 321.629 121.69 321.629 120.034 cv
321.629 118.375 322.973 117.034 324.629 117.034 cv
cp
0 0 0 0 cmyk
f
324.629 117.034 mo
326.286 117.034 327.629 118.375 327.629 120.034 cv
327.629 121.69 326.286 123.034 324.629 123.034 cv
322.973 123.034 321.629 121.69 321.629 120.034 cv
321.629 118.375 322.973 117.034 324.629 117.034 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
328.854 121.323 mo
330.51 121.323 331.854 122.665 331.854 124.323 cv
331.854 125.979 330.51 127.323 328.854 127.323 cv
327.196 127.323 325.854 125.979 325.854 124.323 cv
325.854 122.665 327.196 121.323 328.854 121.323 cv
cp
0 0 0 0 cmyk
f
328.854 121.323 mo
330.51 121.323 331.854 122.665 331.854 124.323 cv
331.854 125.979 330.51 127.323 328.854 127.323 cv
327.196 127.323 325.854 125.979 325.854 124.323 cv
325.854 122.665 327.196 121.323 328.854 121.323 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
332.427 118.114 mo
334.084 118.114 335.427 119.458 335.427 121.114 cv
335.427 122.772 334.084 124.114 332.427 124.114 cv
330.771 124.114 329.427 122.772 329.427 121.114 cv
329.427 119.458 330.771 118.114 332.427 118.114 cv
cp
0 0 0 0 cmyk
f
332.427 118.114 mo
334.084 118.114 335.427 119.458 335.427 121.114 cv
335.427 122.772 334.084 124.114 332.427 124.114 cv
330.771 124.114 329.427 122.772 329.427 121.114 cv
329.427 119.458 330.771 118.114 332.427 118.114 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
336.037 120.26 mo
337.694 120.26 339.037 121.604 339.037 123.26 cv
339.037 124.918 337.694 126.26 336.037 126.26 cv
334.381 126.26 333.037 124.918 333.037 123.26 cv
333.037 121.604 334.381 120.26 336.037 120.26 cv
cp
0 0 0 0 cmyk
f
336.037 120.26 mo
337.694 120.26 339.037 121.604 339.037 123.26 cv
339.037 124.918 337.694 126.26 336.037 126.26 cv
334.381 126.26 333.037 124.918 333.037 123.26 cv
333.037 121.604 334.381 120.26 336.037 120.26 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
339.647 121.873 mo
341.305 121.873 342.647 123.215 342.647 124.873 cv
342.647 126.53 341.305 127.873 339.647 127.873 cv
337.991 127.873 336.647 126.53 336.647 124.873 cv
336.647 123.215 337.991 121.873 339.647 121.873 cv
cp
0 0 0 0 cmyk
f
339.647 121.873 mo
341.305 121.873 342.647 123.215 342.647 124.873 cv
342.647 126.53 341.305 127.873 339.647 127.873 cv
337.991 127.873 336.647 126.53 336.647 124.873 cv
336.647 123.215 337.991 121.873 339.647 121.873 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
342.645 116.522 mo
344.301 116.522 345.645 117.866 345.645 119.522 cv
345.645 121.178 344.301 122.522 342.645 122.522 cv
340.987 122.522 339.645 121.178 339.645 119.522 cv
339.645 117.866 340.987 116.522 342.645 116.522 cv
cp
0 0 0 0 cmyk
f
342.645 116.522 mo
344.301 116.522 345.645 117.866 345.645 119.522 cv
345.645 121.178 344.301 122.522 342.645 122.522 cv
340.987 122.522 339.645 121.178 339.645 119.522 cv
339.645 117.866 340.987 116.522 342.645 116.522 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
342.645 124.553 mo
344.301 124.553 345.645 125.897 345.645 127.553 cv
345.645 129.21 344.301 130.553 342.645 130.553 cv
340.987 130.553 339.645 129.21 339.645 127.553 cv
339.645 125.897 340.987 124.553 342.645 124.553 cv
cp
0 0 0 0 cmyk
f
342.645 124.553 mo
344.301 124.553 345.645 125.897 345.645 127.553 cv
345.645 129.21 344.301 130.553 342.645 130.553 cv
340.987 130.553 339.645 129.21 339.645 127.553 cv
339.645 125.897 340.987 124.553 342.645 124.553 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
345.641 120.809 mo
347.298 120.809 348.641 122.153 348.641 123.809 cv
348.641 125.466 347.298 126.809 345.641 126.809 cv
343.984 126.809 342.641 125.466 342.641 123.809 cv
342.641 122.153 343.984 120.809 345.641 120.809 cv
cp
0 0 0 0 cmyk
f
345.641 120.809 mo
347.298 120.809 348.641 122.153 348.641 123.809 cv
348.641 125.466 347.298 126.809 345.641 126.809 cv
343.984 126.809 342.641 125.466 342.641 123.809 cv
342.641 122.153 343.984 120.809 345.641 120.809 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
345.641 126.165 mo
347.298 126.165 348.641 127.507 348.641 129.165 cv
348.641 130.821 347.298 132.165 345.641 132.165 cv
343.984 132.165 342.641 130.821 342.641 129.165 cv
342.641 127.507 343.984 126.165 345.641 126.165 cv
cp
0 0 0 0 cmyk
f
345.641 126.165 mo
347.298 126.165 348.641 127.507 348.641 129.165 cv
348.641 130.821 347.298 132.165 345.641 132.165 cv
343.984 132.165 342.641 130.821 342.641 129.165 cv
342.641 127.507 343.984 126.165 345.641 126.165 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
345.641 140.086 mo
347.298 140.086 348.641 141.429 348.641 143.086 cv
348.641 144.743 347.298 146.086 345.641 146.086 cv
343.984 146.086 342.641 144.743 342.641 143.086 cv
342.641 141.429 343.984 140.086 345.641 140.086 cv
cp
0 0 0 0 cmyk
f
345.641 140.086 mo
347.298 140.086 348.641 141.429 348.641 143.086 cv
348.641 144.743 347.298 146.086 345.641 146.086 cv
343.984 146.086 342.641 144.743 342.641 143.086 cv
342.641 141.429 343.984 140.086 345.641 140.086 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
345.641 46.3818 mo
347.298 46.3818 348.641 47.7251 348.641 49.3818 cv
348.641 51.0386 347.298 52.3818 345.641 52.3818 cv
343.984 52.3818 342.641 51.0386 342.641 49.3818 cv
342.641 47.7251 343.984 46.3818 345.641 46.3818 cv
cp
0 0 0 0 cmyk
f
345.641 46.3818 mo
347.298 46.3818 348.641 47.7251 348.641 49.3818 cv
348.641 51.0386 347.298 52.3818 345.641 52.3818 cv
343.984 52.3818 342.641 51.0386 342.641 49.3818 cv
342.641 47.7251 343.984 46.3818 345.641 46.3818 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
349.865 48.5298 mo
351.521 48.5298 352.865 49.873 352.865 51.5298 cv
352.865 53.1865 351.521 54.5298 349.865 54.5298 cv
348.208 54.5298 346.865 53.1865 346.865 51.5298 cv
346.865 49.873 348.208 48.5298 349.865 48.5298 cv
cp
0 0 0 0 cmyk
f
349.865 48.5298 mo
351.521 48.5298 352.865 49.873 352.865 51.5298 cv
352.865 53.1865 351.521 54.5298 349.865 54.5298 cv
348.208 54.5298 346.865 53.1865 346.865 51.5298 cv
346.865 49.873 348.208 48.5298 349.865 48.5298 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
353.438 46.9282 mo
355.096 46.9282 356.438 48.2715 356.438 49.9282 cv
356.438 51.585 355.096 52.9282 353.438 52.9282 cv
351.782 52.9282 350.438 51.585 350.438 49.9282 cv
350.438 48.2715 351.782 46.9282 353.438 46.9282 cv
cp
0 0 0 0 cmyk
f
353.438 46.9282 mo
355.096 46.9282 356.438 48.2715 356.438 49.9282 cv
356.438 51.585 355.096 52.9282 353.438 52.9282 cv
351.782 52.9282 350.438 51.585 350.438 49.9282 cv
350.438 48.2715 351.782 46.9282 353.438 46.9282 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
357.049 44.2559 mo
358.706 44.2559 360.049 45.5991 360.049 47.2559 cv
360.049 48.9131 358.706 50.2559 357.049 50.2559 cv
355.393 50.2559 354.049 48.9131 354.049 47.2559 cv
354.049 45.5991 355.393 44.2559 357.049 44.2559 cv
cp
0 0 0 0 cmyk
f
357.049 44.2559 mo
358.706 44.2559 360.049 45.5991 360.049 47.2559 cv
360.049 48.9131 358.706 50.2559 357.049 50.2559 cv
355.393 50.2559 354.049 48.9131 354.049 47.2559 cv
354.049 45.5991 355.393 44.2559 357.049 44.2559 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
357.663 50.147 mo
359.319 50.147 360.663 51.4902 360.663 53.147 cv
360.663 54.8037 359.319 56.147 357.663 56.147 cv
356.006 56.147 354.663 54.8037 354.663 53.147 cv
354.663 51.4902 356.006 50.147 357.663 50.147 cv
cp
0 0 0 0 cmyk
f
357.663 50.147 mo
359.319 50.147 360.663 51.4902 360.663 53.147 cv
360.663 54.8037 359.319 56.147 357.663 56.147 cv
356.006 56.147 354.663 54.8037 354.663 53.147 cv
354.663 51.4902 356.006 50.147 357.663 50.147 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
358.854 57.6445 mo
360.511 57.6445 361.854 58.9878 361.854 60.6445 cv
361.854 62.3013 360.511 63.6445 358.854 63.6445 cv
357.197 63.6445 355.854 62.3013 355.854 60.6445 cv
355.854 58.9878 357.197 57.6445 358.854 57.6445 cv
cp
0 0 0 0 cmyk
f
358.854 57.6445 mo
360.511 57.6445 361.854 58.9878 361.854 60.6445 cv
361.854 62.3013 360.511 63.6445 358.854 63.6445 cv
357.197 63.6445 355.854 62.3013 355.854 60.6445 cv
355.854 58.9878 357.197 57.6445 358.854 57.6445 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
360.659 38.9063 mo
362.316 38.9063 363.659 40.2495 363.659 41.9063 cv
363.659 43.563 362.316 44.9063 360.659 44.9063 cv
359.003 44.9063 357.659 43.563 357.659 41.9063 cv
357.659 40.2495 359.003 38.9063 360.659 38.9063 cv
cp
0 0 0 0 cmyk
f
360.659 38.9063 mo
362.316 38.9063 363.659 40.2495 363.659 41.9063 cv
363.659 43.563 362.316 44.9063 360.659 44.9063 cv
359.003 44.9063 357.659 43.563 357.659 41.9063 cv
357.659 40.2495 359.003 38.9063 360.659 38.9063 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
361.237 112.799 mo
362.894 112.799 364.237 114.142 364.237 115.799 cv
364.237 117.456 362.894 118.799 361.237 118.799 cv
359.58 118.799 358.237 117.456 358.237 115.799 cv
358.237 114.142 359.58 112.799 361.237 112.799 cv
cp
0 0 0 0 cmyk
f
361.237 112.799 mo
362.894 112.799 364.237 114.142 364.237 115.799 cv
364.237 117.456 362.894 118.799 361.237 118.799 cv
359.58 118.799 358.237 117.456 358.237 115.799 cv
358.237 114.142 359.58 112.799 361.237 112.799 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
363.042 121.369 mo
364.699 121.369 366.042 122.711 366.042 124.369 cv
366.042 126.026 364.699 127.369 363.042 127.369 cv
361.386 127.369 360.042 126.026 360.042 124.369 cv
360.042 122.711 361.386 121.369 363.042 121.369 cv
cp
0 0 0 0 cmyk
f
363.042 121.369 mo
364.699 121.369 366.042 122.711 366.042 124.369 cv
366.042 126.026 364.699 127.369 363.042 127.369 cv
361.386 127.369 360.042 126.026 360.042 124.369 cv
360.042 122.711 361.386 121.369 363.042 121.369 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
365.461 113.875 mo
367.118 113.875 368.461 115.219 368.461 116.875 cv
368.461 118.532 367.118 119.875 365.461 119.875 cv
363.805 119.875 362.461 118.532 362.461 116.875 cv
362.461 115.219 363.805 113.875 365.461 113.875 cv
cp
0 0 0 0 cmyk
f
365.461 113.875 mo
367.118 113.875 368.461 115.219 368.461 116.875 cv
368.461 118.532 367.118 119.875 365.461 119.875 cv
363.805 119.875 362.461 118.532 362.461 116.875 cv
362.461 115.219 363.805 113.875 365.461 113.875 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
365.461 117.624 mo
367.118 117.624 368.461 118.967 368.461 120.624 cv
368.461 122.281 367.118 123.624 365.461 123.624 cv
363.805 123.624 362.461 122.281 362.461 120.624 cv
362.461 118.967 363.805 117.624 365.461 117.624 cv
cp
0 0 0 0 cmyk
f
365.461 117.624 mo
367.118 117.624 368.461 118.967 368.461 120.624 cv
368.461 122.281 367.118 123.624 365.461 123.624 cv
363.805 123.624 362.461 122.281 362.461 120.624 cv
362.461 118.967 363.805 117.624 365.461 117.624 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
366.652 121.374 mo
368.31 121.374 369.652 122.717 369.652 124.374 cv
369.652 126.031 368.31 127.374 366.652 127.374 cv
364.996 127.374 363.652 126.031 363.652 124.374 cv
363.652 122.717 364.996 121.374 366.652 121.374 cv
cp
0 0 0 0 cmyk
f
366.652 121.374 mo
368.31 121.374 369.652 122.717 369.652 124.374 cv
369.652 126.031 368.31 127.374 366.652 127.374 cv
364.996 127.374 363.652 126.031 363.652 124.374 cv
363.652 122.717 364.996 121.374 366.652 121.374 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
368.458 127.266 mo
370.114 127.266 371.458 128.61 371.458 130.266 cv
371.458 131.922 370.114 133.266 368.458 133.266 cv
366.801 133.266 365.458 131.922 365.458 130.266 cv
365.458 128.61 366.801 127.266 368.458 127.266 cv
cp
0 0 0 0 cmyk
f
368.458 127.266 mo
370.114 127.266 371.458 128.61 371.458 130.266 cv
371.458 131.922 370.114 133.266 368.458 133.266 cv
366.801 133.266 365.458 131.922 365.458 130.266 cv
365.458 128.61 366.801 127.266 368.458 127.266 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
372.068 119.775 mo
373.725 119.775 375.068 121.118 375.068 122.775 cv
375.068 124.432 373.725 125.775 372.068 125.775 cv
370.411 125.775 369.068 124.432 369.068 122.775 cv
369.068 121.118 370.411 119.775 372.068 119.775 cv
cp
0 0 0 0 cmyk
f
372.068 119.775 mo
373.725 119.775 375.068 121.118 375.068 122.775 cv
375.068 124.432 373.725 125.775 372.068 125.775 cv
370.411 125.775 369.068 124.432 369.068 122.775 cv
369.068 121.118 370.411 119.775 372.068 119.775 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
375.642 124.063 mo
377.299 124.063 378.642 125.407 378.642 127.063 cv
378.642 128.72 377.299 130.063 375.642 130.063 cv
373.985 130.063 372.642 128.72 372.642 127.063 cv
372.642 125.407 373.985 124.063 375.642 124.063 cv
cp
0 0 0 0 cmyk
f
375.642 124.063 mo
377.299 124.063 378.642 125.407 378.642 127.063 cv
378.642 128.72 377.299 130.063 375.642 130.063 cv
373.985 130.063 372.642 128.72 372.642 127.063 cv
372.642 125.407 373.985 124.063 375.642 124.063 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
376.869 119.246 mo
378.526 119.246 379.869 120.588 379.869 122.246 cv
379.869 123.903 378.526 125.246 376.869 125.246 cv
375.213 125.246 373.869 123.903 373.869 122.246 cv
373.869 120.588 375.213 119.246 376.869 119.246 cv
cp
0 0 0 0 cmyk
f
376.869 119.246 mo
378.526 119.246 379.869 120.588 379.869 122.246 cv
379.869 123.903 378.526 125.246 376.869 125.246 cv
375.213 125.246 373.869 123.903 373.869 122.246 cv
373.869 120.588 375.213 119.246 376.869 119.246 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
378.061 117.106 mo
379.718 117.106 381.061 118.449 381.061 120.106 cv
381.061 121.762 379.718 123.106 378.061 123.106 cv
376.404 123.106 375.061 121.762 375.061 120.106 cv
375.061 118.449 376.404 117.106 378.061 117.106 cv
cp
0 0 0 0 cmyk
f
378.061 117.106 mo
379.718 117.106 381.061 118.449 381.061 120.106 cv
381.061 121.762 379.718 123.106 378.061 123.106 cv
376.404 123.106 375.061 121.762 375.061 120.106 cv
375.061 118.449 376.404 117.106 378.061 117.106 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
379.252 88.1934 mo
380.909 88.1934 382.252 89.5361 382.252 91.1934 cv
382.252 92.8501 380.909 94.1934 379.252 94.1934 cv
377.596 94.1934 376.252 92.8501 376.252 91.1934 cv
376.252 89.5361 377.596 88.1934 379.252 88.1934 cv
cp
0 0 0 0 cmyk
f
379.252 88.1934 mo
380.909 88.1934 382.252 89.5361 382.252 91.1934 cv
382.252 92.8501 380.909 94.1934 379.252 94.1934 cv
377.596 94.1934 376.252 92.8501 376.252 91.1934 cv
376.252 89.5361 377.596 88.1934 379.252 88.1934 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
379.866 132.636 mo
381.522 132.636 382.866 133.979 382.866 135.636 cv
382.866 137.293 381.522 138.636 379.866 138.636 cv
378.209 138.636 376.866 137.293 376.866 135.636 cv
376.866 133.979 378.209 132.636 379.866 132.636 cv
cp
0 0 0 0 cmyk
f
379.866 132.636 mo
381.522 132.636 382.866 133.979 382.866 135.636 cv
382.866 137.293 381.522 138.636 379.866 138.636 cv
378.209 138.636 376.866 137.293 376.866 135.636 cv
376.866 133.979 378.209 132.636 379.866 132.636 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
380.443 54.4609 mo
382.101 54.4609 383.443 55.8042 383.443 57.4609 cv
383.443 59.1182 382.101 60.4609 380.443 60.4609 cv
378.787 60.4609 377.443 59.1182 377.443 57.4609 cv
377.443 55.8042 378.787 54.4609 380.443 54.4609 cv
cp
0 0 0 0 cmyk
f
380.443 54.4609 mo
382.101 54.4609 383.443 55.8042 383.443 57.4609 cv
383.443 59.1182 382.101 60.4609 380.443 60.4609 cv
378.787 60.4609 377.443 59.1182 377.443 57.4609 cv
377.443 55.8042 378.787 54.4609 380.443 54.4609 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
382.862 51.7876 mo
384.52 51.7876 385.862 53.1309 385.862 54.7876 cv
385.862 56.4443 384.52 57.7876 382.862 57.7876 cv
381.206 57.7876 379.862 56.4443 379.862 54.7876 cv
379.862 53.1309 381.206 51.7876 382.862 51.7876 cv
cp
0 0 0 0 cmyk
f
382.862 51.7876 mo
384.52 51.7876 385.862 53.1309 385.862 54.7876 cv
385.862 56.4443 384.52 57.7876 382.862 57.7876 cv
381.206 57.7876 379.862 56.4443 379.862 54.7876 cv
379.862 53.1309 381.206 51.7876 382.862 51.7876 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
386.473 50.186 mo
388.13 50.186 389.473 51.5288 389.473 53.186 cv
389.473 54.8428 388.13 56.186 386.473 56.186 cv
384.816 56.186 383.473 54.8428 383.473 53.186 cv
383.473 51.5288 384.816 50.186 386.473 50.186 cv
cp
0 0 0 0 cmyk
f
386.473 50.186 mo
388.13 50.186 389.473 51.5288 389.473 53.186 cv
389.473 54.8428 388.13 56.186 386.473 56.186 cv
384.816 56.186 383.473 54.8428 383.473 53.186 cv
383.473 51.5288 384.816 50.186 386.473 50.186 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
390.66 51.2622 mo
392.317 51.2622 393.66 52.6055 393.66 54.2622 cv
393.66 55.9194 392.317 57.2622 390.66 57.2622 cv
389.004 57.2622 387.66 55.9194 387.66 54.2622 cv
387.66 52.6055 389.004 51.2622 390.66 51.2622 cv
cp
0 0 0 0 cmyk
f
390.66 51.2622 mo
392.317 51.2622 393.66 52.6055 393.66 54.2622 cv
393.66 55.9194 392.317 57.2622 390.66 57.2622 cv
389.004 57.2622 387.66 55.9194 387.66 54.2622 cv
387.66 52.6055 389.004 51.2622 390.66 51.2622 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
394.271 48.5903 mo
395.928 48.5903 397.271 49.9336 397.271 51.5903 cv
397.271 53.2471 395.928 54.5903 394.271 54.5903 cv
392.614 54.5903 391.271 53.2471 391.271 51.5903 cv
391.271 49.9336 392.614 48.5903 394.271 48.5903 cv
cp
0 0 0 0 cmyk
f
394.271 48.5903 mo
395.928 48.5903 397.271 49.9336 397.271 51.5903 cv
397.271 53.2471 395.928 54.5903 394.271 54.5903 cv
392.614 54.5903 391.271 53.2471 391.271 51.5903 cv
391.271 49.9336 392.614 48.5903 394.271 48.5903 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
397.268 50.2002 mo
398.924 50.2002 400.268 51.5435 400.268 53.2002 cv
400.268 54.8574 398.924 56.2002 397.268 56.2002 cv
395.61 56.2002 394.268 54.8574 394.268 53.2002 cv
394.268 51.5435 395.61 50.2002 397.268 50.2002 cv
cp
0 0 0 0 cmyk
f
397.268 50.2002 mo
398.924 50.2002 400.268 51.5435 400.268 53.2002 cv
400.268 54.8574 398.924 56.2002 397.268 56.2002 cv
395.61 56.2002 394.268 54.8574 394.268 53.2002 cv
394.268 51.5435 395.61 50.2002 397.268 50.2002 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
400.842 52.3477 mo
402.498 52.3477 403.842 53.6904 403.842 55.3477 cv
403.842 57.0044 402.498 58.3477 400.842 58.3477 cv
399.185 58.3477 397.842 57.0044 397.842 55.3477 cv
397.842 53.6904 399.185 52.3477 400.842 52.3477 cv
cp
0 0 0 0 cmyk
f
400.842 52.3477 mo
402.498 52.3477 403.842 53.6904 403.842 55.3477 cv
403.842 57.0044 402.498 58.3477 400.842 58.3477 cv
399.185 58.3477 397.842 57.0044 397.842 55.3477 cv
397.842 53.6904 399.185 52.3477 400.842 52.3477 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
404.452 52.8877 mo
406.108 52.8877 407.452 54.2305 407.452 55.8877 cv
407.452 57.5444 406.108 58.8877 404.452 58.8877 cv
402.795 58.8877 401.452 57.5444 401.452 55.8877 cv
401.452 54.2305 402.795 52.8877 404.452 52.8877 cv
cp
0 0 0 0 cmyk
f
404.452 52.8877 mo
406.108 52.8877 407.452 54.2305 407.452 55.8877 cv
407.452 57.5444 406.108 58.8877 404.452 58.8877 cv
402.795 58.8877 401.452 57.5444 401.452 55.8877 cv
401.452 54.2305 402.795 52.8877 404.452 52.8877 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
407.448 48.6084 mo
409.105 48.6084 410.448 49.9512 410.448 51.6084 cv
410.448 53.2651 409.105 54.6084 407.448 54.6084 cv
405.791 54.6084 404.448 53.2651 404.448 51.6084 cv
404.448 49.9512 405.791 48.6084 407.448 48.6084 cv
cp
0 0 0 0 cmyk
f
407.448 48.6084 mo
409.105 48.6084 410.448 49.9512 410.448 51.6084 cv
410.448 53.2651 409.105 54.6084 407.448 54.6084 cv
405.791 54.6084 404.448 53.2651 404.448 51.6084 cv
404.448 49.9512 405.791 48.6084 407.448 48.6084 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
408.676 97.3354 mo
410.333 97.3354 411.676 98.6782 411.676 100.335 cv
411.676 101.993 410.333 103.335 408.676 103.335 cv
407.02 103.335 405.676 101.993 405.676 100.335 cv
405.676 98.6782 407.02 97.3354 408.676 97.3354 cv
cp
0 0 0 0 cmyk
f
408.676 97.3354 mo
410.333 97.3354 411.676 98.6782 411.676 100.335 cv
411.676 101.993 410.333 103.335 408.676 103.335 cv
407.02 103.335 405.676 101.993 405.676 100.335 cv
405.676 98.6782 407.02 97.3354 408.676 97.3354 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
409.867 44.8633 mo
411.524 44.8633 412.867 46.2065 412.867 47.8633 cv
412.867 49.52 411.524 50.8633 409.867 50.8633 cv
408.21 50.8633 406.867 49.52 406.867 47.8633 cv
406.867 46.2065 408.21 44.8633 409.867 44.8633 cv
cp
0 0 0 0 cmyk
f
409.867 44.8633 mo
411.524 44.8633 412.867 46.2065 412.867 47.8633 cv
412.867 49.52 411.524 50.8633 409.867 50.8633 cv
408.21 50.8633 406.867 49.52 406.867 47.8633 cv
406.867 46.2065 408.21 44.8633 409.867 44.8633 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
409.867 146.599 mo
411.524 146.599 412.867 147.942 412.867 149.599 cv
412.867 151.256 411.524 152.599 409.867 152.599 cv
408.21 152.599 406.867 151.256 406.867 149.599 cv
406.867 147.942 408.21 146.599 409.867 146.599 cv
cp
0 0 0 0 cmyk
f
409.867 146.599 mo
411.524 146.599 412.867 147.942 412.867 149.599 cv
412.867 151.256 411.524 152.599 409.867 152.599 cv
408.21 152.599 406.867 151.256 406.867 149.599 cv
406.867 147.942 408.21 146.599 409.867 146.599 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
411.673 133.75 mo
413.329 133.75 414.673 135.094 414.673 136.75 cv
414.673 138.407 413.329 139.75 411.673 139.75 cv
410.016 139.75 408.673 138.407 408.673 136.75 cv
408.673 135.094 410.016 133.75 411.673 133.75 cv
cp
0 0 0 0 cmyk
f
411.673 133.75 mo
413.329 133.75 414.673 135.094 414.673 136.75 cv
414.673 138.407 413.329 139.75 411.673 139.75 cv
410.016 139.75 408.673 138.407 408.673 136.75 cv
408.673 135.094 410.016 133.75 411.673 133.75 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
412.25 125.184 mo
413.907 125.184 415.25 126.528 415.25 128.184 cv
415.25 129.84 413.907 131.184 412.25 131.184 cv
410.593 131.184 409.25 129.84 409.25 128.184 cv
409.25 126.528 410.593 125.184 412.25 125.184 cv
cp
0 0 0 0 cmyk
f
412.25 125.184 mo
413.907 125.184 415.25 126.528 415.25 128.184 cv
415.25 129.84 413.907 131.184 412.25 131.184 cv
410.593 131.184 409.25 129.84 409.25 128.184 cv
409.25 126.528 410.593 125.184 412.25 125.184 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
412.25 120.901 mo
413.907 120.901 415.25 122.243 415.25 123.901 cv
415.25 125.557 413.907 126.901 412.25 126.901 cv
410.593 126.901 409.25 125.557 409.25 123.901 cv
409.25 122.243 410.593 120.901 412.25 120.901 cv
cp
0 0 0 0 cmyk
f
412.25 120.901 mo
413.907 120.901 415.25 122.243 415.25 123.901 cv
415.25 125.557 413.907 126.901 412.25 126.901 cv
410.593 126.901 409.25 125.557 409.25 123.901 cv
409.25 122.243 410.593 120.901 412.25 120.901 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
414.669 115.549 mo
416.326 115.549 417.669 116.893 417.669 118.549 cv
417.669 120.206 416.326 121.549 414.669 121.549 cv
413.012 121.549 411.669 120.206 411.669 118.549 cv
411.669 116.893 413.012 115.549 414.669 115.549 cv
cp
0 0 0 0 cmyk
f
414.669 115.549 mo
416.326 115.549 417.669 116.893 417.669 118.549 cv
417.669 120.206 416.326 121.549 414.669 121.549 cv
413.012 121.549 411.669 120.206 411.669 118.549 cv
411.669 116.893 413.012 115.549 414.669 115.549 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
419.471 121.446 mo
421.127 121.446 422.471 122.789 422.471 124.446 cv
422.471 126.102 421.127 127.446 419.471 127.446 cv
417.813 127.446 416.471 126.102 416.471 124.446 cv
416.471 122.789 417.813 121.446 419.471 121.446 cv
cp
0 0 0 0 cmyk
f
419.471 121.446 mo
421.127 121.446 422.471 122.789 422.471 124.446 cv
422.471 126.102 421.127 127.446 419.471 127.446 cv
417.813 127.446 416.471 126.102 416.471 124.446 cv
416.471 122.789 417.813 121.446 419.471 121.446 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
421.275 131.086 mo
422.933 131.086 424.275 132.429 424.275 134.086 cv
424.275 135.743 422.933 137.086 421.275 137.086 cv
419.619 137.086 418.275 135.743 418.275 134.086 cv
418.275 132.429 419.619 131.086 421.275 131.086 cv
cp
0 0 0 0 cmyk
f
421.275 131.086 mo
422.933 131.086 424.275 132.429 424.275 134.086 cv
424.275 135.743 422.933 137.086 421.275 137.086 cv
419.619 137.086 418.275 135.743 418.275 134.086 cv
418.275 132.429 419.619 131.086 421.275 131.086 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
421.854 100.567 mo
423.51 100.567 424.854 101.91 424.854 103.567 cv
424.854 105.223 423.51 106.567 421.854 106.567 cv
420.196 106.567 418.854 105.223 418.854 103.567 cv
418.854 101.91 420.196 100.567 421.854 100.567 cv
cp
0 0 0 0 cmyk
f
421.854 100.567 mo
423.51 100.567 424.854 101.91 424.854 103.567 cv
424.854 105.223 423.51 106.567 421.854 106.567 cv
420.196 106.567 418.854 105.223 418.854 103.567 cv
418.854 101.91 420.196 100.567 421.854 100.567 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
425.464 116.635 mo
427.12 116.635 428.464 117.977 428.464 119.635 cv
428.464 121.292 427.12 122.635 425.464 122.635 cv
423.807 122.635 422.464 121.292 422.464 119.635 cv
422.464 117.977 423.807 116.635 425.464 116.635 cv
cp
0 0 0 0 cmyk
f
425.464 116.635 mo
427.12 116.635 428.464 117.977 428.464 119.635 cv
428.464 121.292 427.12 122.635 425.464 122.635 cv
423.807 122.635 422.464 121.292 422.464 119.635 cv
422.464 117.977 423.807 116.635 425.464 116.635 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
426.077 126.809 mo
427.734 126.809 429.077 128.153 429.077 129.809 cv
429.077 131.466 427.734 132.809 426.077 132.809 cv
424.421 132.809 423.077 131.466 423.077 129.809 cv
423.077 128.153 424.421 126.809 426.077 126.809 cv
cp
0 0 0 0 cmyk
f
426.077 126.809 mo
427.734 126.809 429.077 128.153 429.077 129.809 cv
429.077 131.466 427.734 132.809 426.077 132.809 cv
424.421 132.809 423.077 131.466 423.077 129.809 cv
423.077 128.153 424.421 126.809 426.077 126.809 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
429.651 124.137 mo
431.309 124.137 432.651 125.48 432.651 127.137 cv
432.651 128.793 431.309 130.137 429.651 130.137 cv
427.994 130.137 426.651 128.793 426.651 127.137 cv
426.651 125.48 427.994 124.137 429.651 124.137 cv
cp
0 0 0 0 cmyk
f
429.651 124.137 mo
431.309 124.137 432.651 125.48 432.651 127.137 cv
432.651 128.793 431.309 130.137 429.651 130.137 cv
427.994 130.137 426.651 128.793 426.651 127.137 cv
426.651 125.48 427.994 124.137 429.651 124.137 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
433.262 119.858 mo
434.919 119.858 436.262 121.202 436.262 122.858 cv
436.262 124.515 434.919 125.858 433.262 125.858 cv
431.604 125.858 430.262 124.515 430.262 122.858 cv
430.262 121.202 431.604 119.858 433.262 119.858 cv
cp
0 0 0 0 cmyk
f
433.262 119.858 mo
434.919 119.858 436.262 121.202 436.262 122.858 cv
436.262 124.515 434.919 125.858 433.262 125.858 cv
431.604 125.858 430.262 124.515 430.262 122.858 cv
430.262 121.202 431.604 119.858 433.262 119.858 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
436.872 122.541 mo
438.529 122.541 439.872 123.883 439.872 125.541 cv
439.872 127.198 438.529 128.541 436.872 128.541 cv
435.215 128.541 433.872 127.198 433.872 125.541 cv
433.872 123.883 435.215 122.541 436.872 122.541 cv
cp
0 0 0 0 cmyk
f
436.872 122.541 mo
438.529 122.541 439.872 123.883 439.872 125.541 cv
439.872 127.198 438.529 128.541 436.872 128.541 cv
435.215 128.541 433.872 127.198 433.872 125.541 cv
433.872 123.883 435.215 122.541 436.872 122.541 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
440.482 117.726 mo
442.139 117.726 443.482 119.069 443.482 120.726 cv
443.482 122.383 442.139 123.726 440.482 123.726 cv
438.825 123.726 437.482 122.383 437.482 120.726 cv
437.482 119.069 438.825 117.726 440.482 117.726 cv
cp
0 0 0 0 cmyk
f
440.482 117.726 mo
442.139 117.726 443.482 119.069 443.482 120.726 cv
443.482 122.383 442.139 123.726 440.482 123.726 cv
438.825 123.726 437.482 122.383 437.482 120.726 cv
437.482 119.069 438.825 117.726 440.482 117.726 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
443.479 117.731 mo
445.136 117.731 446.479 119.073 446.479 120.731 cv
446.479 122.387 445.136 123.731 443.479 123.731 cv
441.822 123.731 440.479 122.387 440.479 120.731 cv
440.479 119.073 441.822 117.731 443.479 117.731 cv
cp
0 0 0 0 cmyk
f
443.479 117.731 mo
445.136 117.731 446.479 119.073 446.479 120.731 cv
446.479 122.387 445.136 123.731 443.479 123.731 cv
441.822 123.731 440.479 122.387 440.479 120.731 cv
440.479 119.073 441.822 117.731 443.479 117.731 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
448.28 118.272 mo
449.938 118.272 451.28 119.616 451.28 121.272 cv
451.28 122.928 449.938 124.272 448.28 124.272 cv
446.624 124.272 445.28 122.928 445.28 121.272 cv
445.28 119.616 446.624 118.272 448.28 118.272 cv
cp
0 0 0 0 cmyk
f
448.28 118.272 mo
449.938 118.272 451.28 119.616 451.28 121.272 cv
451.28 122.928 449.938 124.272 448.28 124.272 cv
446.624 124.272 445.28 122.928 445.28 121.272 cv
445.28 119.616 446.624 118.272 448.28 118.272 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
451.854 121.49 mo
453.512 121.49 454.854 122.833 454.854 124.49 cv
454.854 126.147 453.512 127.49 451.854 127.49 cv
450.197 127.49 448.854 126.147 448.854 124.49 cv
448.854 122.833 450.197 121.49 451.854 121.49 cv
cp
0 0 0 0 cmyk
f
451.854 121.49 mo
453.512 121.49 454.854 122.833 454.854 124.49 cv
454.854 126.147 453.512 127.49 451.854 127.49 cv
450.197 127.49 448.854 126.147 448.854 124.49 cv
448.854 122.833 450.197 121.49 451.854 121.49 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
454.887 117.209 mo
456.544 117.209 457.887 118.553 457.887 120.209 cv
457.887 121.868 456.544 123.209 454.887 123.209 cv
453.23 123.209 451.887 121.868 451.887 120.209 cv
451.887 118.553 453.23 117.209 454.887 117.209 cv
cp
0 0 0 0 cmyk
f
454.887 117.209 mo
456.544 117.209 457.887 118.553 457.887 120.209 cv
457.887 121.868 456.544 123.209 454.887 123.209 cv
453.23 123.209 451.887 121.868 451.887 120.209 cv
451.887 118.553 453.23 117.209 454.887 117.209 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
458.461 120.428 mo
460.118 120.428 461.461 121.771 461.461 123.428 cv
461.461 125.084 460.118 126.428 458.461 126.428 cv
456.805 126.428 455.461 125.084 455.461 123.428 cv
455.461 121.771 456.805 120.428 458.461 120.428 cv
cp
0 0 0 0 cmyk
f
458.461 120.428 mo
460.118 120.428 461.461 121.771 461.461 123.428 cv
461.461 125.084 460.118 126.428 458.461 126.428 cv
456.805 126.428 455.461 125.084 455.461 123.428 cv
455.461 121.771 456.805 120.428 458.461 120.428 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
461.458 116.684 mo
463.115 116.684 464.458 118.027 464.458 119.684 cv
464.458 121.34 463.115 122.684 461.458 122.684 cv
459.801 122.684 458.458 121.34 458.458 119.684 cv
458.458 118.027 459.801 116.684 461.458 116.684 cv
cp
0 0 0 0 cmyk
f
461.458 116.684 mo
463.115 116.684 464.458 118.027 464.458 119.684 cv
464.458 121.34 463.115 122.684 461.458 122.684 cv
459.801 122.684 458.458 121.34 458.458 119.684 cv
458.458 118.027 459.801 116.684 461.458 116.684 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
462.686 110.795 mo
464.342 110.795 465.686 112.139 465.686 113.795 cv
465.686 115.452 464.342 116.795 462.686 116.795 cv
461.028 116.795 459.686 115.452 459.686 113.795 cv
459.686 112.139 461.028 110.795 462.686 110.795 cv
cp
0 0 0 0 cmyk
f
462.686 110.795 mo
464.342 110.795 465.686 112.139 465.686 113.795 cv
465.686 115.452 464.342 116.795 462.686 116.795 cv
461.028 116.795 459.686 115.452 459.686 113.795 cv
459.686 112.139 461.028 110.795 462.686 110.795 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
465.068 118.831 mo
466.725 118.831 468.068 120.174 468.068 121.831 cv
468.068 123.487 466.725 124.831 465.068 124.831 cv
463.411 124.831 462.068 123.487 462.068 121.831 cv
462.068 120.174 463.411 118.831 465.068 118.831 cv
cp
0 0 0 0 cmyk
f
465.068 118.831 mo
466.725 118.831 468.068 120.174 468.068 121.831 cv
468.068 123.487 466.725 124.831 465.068 124.831 cv
463.411 124.831 462.068 123.487 462.068 121.831 cv
462.068 120.174 463.411 118.831 465.068 118.831 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
469.256 120.979 mo
470.913 120.979 472.256 122.321 472.256 123.979 cv
472.256 125.635 470.913 126.979 469.256 126.979 cv
467.6 126.979 466.256 125.635 466.256 123.979 cv
466.256 122.321 467.6 120.979 469.256 120.979 cv
cp
0 0 0 0 cmyk
f
469.256 120.979 mo
470.913 120.979 472.256 122.321 472.256 123.979 cv
472.256 125.635 470.913 126.979 469.256 126.979 cv
467.6 126.979 466.256 125.635 466.256 123.979 cv
466.256 122.321 467.6 120.979 469.256 120.979 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
472.866 119.913 mo
474.523 119.913 475.866 121.255 475.866 122.913 cv
475.866 124.569 474.523 125.913 472.866 125.913 cv
471.209 125.913 469.866 124.569 469.866 122.913 cv
469.866 121.255 471.209 119.913 472.866 119.913 cv
cp
0 0 0 0 cmyk
f
472.866 119.913 mo
474.523 119.913 475.866 121.255 475.866 122.913 cv
475.866 124.569 474.523 125.913 472.866 125.913 cv
471.209 125.913 469.866 124.569 469.866 122.913 cv
469.866 121.255 471.209 119.913 472.866 119.913 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
477.09 124.202 mo
478.747 124.202 480.09 125.544 480.09 127.202 cv
480.09 128.858 478.747 130.202 477.09 130.202 cv
475.434 130.202 474.09 128.858 474.09 127.202 cv
474.09 125.544 475.434 124.202 477.09 124.202 cv
cp
0 0 0 0 cmyk
f
477.09 124.202 mo
478.747 124.202 480.09 125.544 480.09 127.202 cv
480.09 128.858 478.747 130.202 477.09 130.202 cv
475.434 130.202 474.09 128.858 474.09 127.202 cv
474.09 125.544 475.434 124.202 477.09 124.202 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
478.281 115.1 mo
479.938 115.1 481.281 116.444 481.281 118.1 cv
481.281 119.757 479.938 121.1 478.281 121.1 cv
476.625 121.1 475.281 119.757 475.281 118.1 cv
475.281 116.444 476.625 115.1 478.281 115.1 cv
cp
0 0 0 0 cmyk
f
478.281 115.1 mo
479.938 115.1 481.281 116.444 481.281 118.1 cv
481.281 119.757 479.938 121.1 478.281 121.1 cv
476.625 121.1 475.281 119.757 475.281 118.1 cv
475.281 116.444 476.625 115.1 478.281 115.1 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
479.473 139.733 mo
481.13 139.733 482.473 141.077 482.473 142.733 cv
482.473 144.389 481.13 145.733 479.473 145.733 cv
477.816 145.733 476.473 144.389 476.473 142.733 cv
476.473 141.077 477.816 139.733 479.473 139.733 cv
cp
0 0 0 0 cmyk
f
479.473 139.733 mo
481.13 139.733 482.473 141.077 482.473 142.733 cv
482.473 144.389 481.13 145.733 479.473 145.733 cv
477.816 145.733 476.473 144.389 476.473 142.733 cv
476.473 141.077 477.816 139.733 479.473 139.733 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
480.664 97.4341 mo
482.321 97.4341 483.664 98.7769 483.664 100.434 cv
483.664 102.09 482.321 103.434 480.664 103.434 cv
479.008 103.434 477.664 102.09 477.664 100.434 cv
477.664 98.7769 479.008 97.4341 480.664 97.4341 cv
cp
0 0 0 0 cmyk
f
480.664 97.4341 mo
482.321 97.4341 483.664 98.7769 483.664 100.434 cv
483.664 102.09 482.321 103.434 480.664 103.434 cv
479.008 103.434 477.664 102.09 477.664 100.434 cv
477.664 98.7769 479.008 97.4341 480.664 97.4341 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
481.278 80.2998 mo
482.936 80.2998 484.278 81.6431 484.278 83.2998 cv
484.278 84.957 482.936 86.2998 481.278 86.2998 cv
479.621 86.2998 478.278 84.957 478.278 83.2998 cv
478.278 81.6431 479.621 80.2998 481.278 80.2998 cv
cp
0 0 0 0 cmyk
f
481.278 80.2998 mo
482.936 80.2998 484.278 81.6431 484.278 83.2998 cv
484.278 84.957 482.936 86.2998 481.278 86.2998 cv
479.621 86.2998 478.278 84.957 478.278 83.2998 cv
478.278 81.6431 479.621 80.2998 481.278 80.2998 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
481.278 71.1973 mo
482.936 71.1973 484.278 72.5405 484.278 74.1973 cv
484.278 75.8545 482.936 77.1973 481.278 77.1973 cv
479.621 77.1973 478.278 75.8545 478.278 74.1973 cv
478.278 72.5405 479.621 71.1973 481.278 71.1973 cv
cp
0 0 0 0 cmyk
f
481.278 71.1973 mo
482.936 71.1973 484.278 72.5405 484.278 74.1973 cv
484.278 75.8545 482.936 77.1973 481.278 77.1973 cv
479.621 77.1973 478.278 75.8545 478.278 74.1973 cv
478.278 72.5405 479.621 71.1973 481.278 71.1973 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
484.274 52.4609 mo
485.932 52.4609 487.274 53.8042 487.274 55.4609 cv
487.274 57.1177 485.932 58.4609 484.274 58.4609 cv
482.618 58.4609 481.274 57.1177 481.274 55.4609 cv
481.274 53.8042 482.618 52.4609 484.274 52.4609 cv
cp
0 0 0 0 cmyk
f
484.274 52.4609 mo
485.932 52.4609 487.274 53.8042 487.274 55.4609 cv
487.274 57.1177 485.932 58.4609 484.274 58.4609 cv
482.618 58.4609 481.274 57.1177 481.274 55.4609 cv
481.274 53.8042 482.618 52.4609 484.274 52.4609 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
487.271 61.0322 mo
488.928 61.0322 490.271 62.3755 490.271 64.0322 cv
490.271 65.689 488.928 67.0322 487.271 67.0322 cv
485.614 67.0322 484.271 65.689 484.271 64.0322 cv
484.271 62.3755 485.614 61.0322 487.271 61.0322 cv
cp
0 0 0 0 cmyk
f
487.271 61.0322 mo
488.928 61.0322 490.271 62.3755 490.271 64.0322 cv
490.271 65.689 488.928 67.0322 487.271 67.0322 cv
485.614 67.0322 484.271 65.689 484.271 64.0322 cv
484.271 62.3755 485.614 61.0322 487.271 61.0322 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
489.69 46.043 mo
491.347 46.043 492.69 47.3862 492.69 49.043 cv
492.69 50.6997 491.347 52.043 489.69 52.043 cv
488.033 52.043 486.69 50.6997 486.69 49.043 cv
486.69 47.3862 488.033 46.043 489.69 46.043 cv
cp
0 0 0 0 cmyk
f
489.69 46.043 mo
491.347 46.043 492.69 47.3862 492.69 49.043 cv
492.69 50.6997 491.347 52.043 489.69 52.043 cv
488.033 52.043 486.69 50.6997 486.69 49.043 cv
486.69 47.3862 488.033 46.043 489.69 46.043 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
494.492 48.7266 mo
496.148 48.7266 497.492 50.0693 497.492 51.7266 cv
497.492 53.3833 496.148 54.7266 494.492 54.7266 cv
492.835 54.7266 491.492 53.3833 491.492 51.7266 cv
491.492 50.0693 492.835 48.7266 494.492 48.7266 cv
cp
0 0 0 0 cmyk
f
494.492 48.7266 mo
496.148 48.7266 497.492 50.0693 497.492 51.7266 cv
497.492 53.3833 496.148 54.7266 494.492 54.7266 cv
492.835 54.7266 491.492 53.3833 491.492 51.7266 cv
491.492 50.0693 492.835 48.7266 494.492 48.7266 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
500.484 47.1284 mo
502.142 47.1284 503.484 48.4717 503.484 50.1284 cv
503.484 51.7852 502.142 53.1284 500.484 53.1284 cv
498.828 53.1284 497.484 51.7852 497.484 50.1284 cv
497.484 48.4717 498.828 47.1284 500.484 47.1284 cv
cp
0 0 0 0 cmyk
f
500.484 47.1284 mo
502.142 47.1284 503.484 48.4717 503.484 50.1284 cv
503.484 51.7852 502.142 53.1284 500.484 53.1284 cv
498.828 53.1284 497.484 51.7852 497.484 50.1284 cv
497.484 48.4717 498.828 47.1284 500.484 47.1284 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
503.481 41.7783 mo
505.139 41.7783 506.481 43.1216 506.481 44.7783 cv
506.481 46.4351 505.139 47.7783 503.481 47.7783 cv
501.824 47.7783 500.481 46.4351 500.481 44.7783 cv
500.481 43.1216 501.824 41.7783 503.481 41.7783 cv
cp
0 0 0 0 cmyk
f
503.481 41.7783 mo
505.139 41.7783 506.481 43.1216 506.481 44.7783 cv
506.481 46.4351 505.139 47.7783 503.481 47.7783 cv
501.824 47.7783 500.481 46.4351 500.481 44.7783 cv
500.481 43.1216 501.824 41.7783 503.481 41.7783 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
505.864 121.028 mo
507.521 121.028 508.864 122.372 508.864 124.028 cv
508.864 125.684 507.521 127.028 505.864 127.028 cv
504.207 127.028 502.864 125.684 502.864 124.028 cv
502.864 122.372 504.207 121.028 505.864 121.028 cv
cp
0 0 0 0 cmyk
f
505.864 121.028 mo
507.521 121.028 508.864 122.372 508.864 124.028 cv
508.864 125.684 507.521 127.028 505.864 127.028 cv
504.207 127.028 502.864 125.684 502.864 124.028 cv
502.864 122.372 504.207 121.028 505.864 121.028 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
506.478 114.068 mo
508.135 114.068 509.478 115.411 509.478 117.068 cv
509.478 118.725 508.135 120.068 506.478 120.068 cv
504.821 120.068 503.478 118.725 503.478 117.068 cv
503.478 115.411 504.821 114.068 506.478 114.068 cv
cp
0 0 0 0 cmyk
f
506.478 114.068 mo
508.135 114.068 509.478 115.411 509.478 117.068 cv
509.478 118.725 508.135 120.068 506.478 120.068 cv
504.821 120.068 503.478 118.725 503.478 117.068 cv
503.478 115.411 504.821 114.068 506.478 114.068 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
508.283 147.268 mo
509.939 147.268 511.283 148.612 511.283 150.268 cv
511.283 151.925 509.939 153.268 508.283 153.268 cv
506.626 153.268 505.283 151.925 505.283 150.268 cv
505.283 148.612 506.626 147.268 508.283 147.268 cv
cp
0 0 0 0 cmyk
f
508.283 147.268 mo
509.939 147.268 511.283 148.612 511.283 150.268 cv
511.283 151.925 509.939 153.268 508.283 153.268 cv
506.626 153.268 505.283 151.925 505.283 150.268 cv
505.283 148.612 506.626 147.268 508.283 147.268 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
510.088 54.1025 mo
511.745 54.1025 513.088 55.4453 513.088 57.1025 cv
513.088 58.7593 511.745 60.1025 510.088 60.1025 cv
508.432 60.1025 507.088 58.7593 507.088 57.1025 cv
507.088 55.4453 508.432 54.1025 510.088 54.1025 cv
cp
0 0 0 0 cmyk
f
510.088 54.1025 mo
511.745 54.1025 513.088 55.4453 513.088 57.1025 cv
513.088 58.7593 511.745 60.1025 510.088 60.1025 cv
508.432 60.1025 507.088 58.7593 507.088 57.1025 cv
507.088 55.4453 508.432 54.1025 510.088 54.1025 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
511.894 110.862 mo
513.55 110.862 514.894 112.206 514.894 113.862 cv
514.894 115.52 513.55 116.862 511.894 116.862 cv
510.236 116.862 508.894 115.52 508.894 113.862 cv
508.894 112.206 510.236 110.862 511.894 110.862 cv
cp
0 0 0 0 cmyk
f
511.894 110.862 mo
513.55 110.862 514.894 112.206 514.894 113.862 cv
514.894 115.52 513.55 116.862 511.894 116.862 cv
510.236 116.862 508.894 115.52 508.894 113.862 cv
508.894 112.206 510.236 110.862 511.894 110.862 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
512.471 122.643 mo
514.128 122.643 515.471 123.987 515.471 125.643 cv
515.471 127.3 514.128 128.643 512.471 128.643 cv
510.814 128.643 509.471 127.3 509.471 125.643 cv
509.471 123.987 510.814 122.643 512.471 122.643 cv
cp
0 0 0 0 cmyk
f
512.471 122.643 mo
514.128 122.643 515.471 123.987 515.471 125.643 cv
515.471 127.3 514.128 128.643 512.471 128.643 cv
510.814 128.643 509.471 127.3 509.471 125.643 cv
509.471 123.987 510.814 122.643 512.471 122.643 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
513.698 117.826 mo
515.355 117.826 516.698 119.168 516.698 120.826 cv
516.698 122.483 515.355 123.826 513.698 123.826 cv
512.041 123.826 510.698 122.483 510.698 120.826 cv
510.698 119.168 512.041 117.826 513.698 117.826 cv
cp
0 0 0 0 cmyk
f
513.698 117.826 mo
515.355 117.826 516.698 119.168 516.698 120.826 cv
516.698 122.483 515.355 123.826 513.698 123.826 cv
512.041 123.826 510.698 122.483 510.698 120.826 cv
510.698 119.168 512.041 117.826 513.698 117.826 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
513.698 35.3662 mo
515.355 35.3662 516.698 36.7095 516.698 38.3662 cv
516.698 40.0234 515.355 41.3662 513.698 41.3662 cv
512.041 41.3662 510.698 40.0234 510.698 38.3662 cv
510.698 36.7095 512.041 35.3662 513.698 35.3662 cv
cp
0 0 0 0 cmyk
f
513.698 35.3662 mo
515.355 35.3662 516.698 36.7095 516.698 38.3662 cv
516.698 40.0234 515.355 41.3662 513.698 41.3662 cv
512.041 41.3662 510.698 40.0234 510.698 38.3662 cv
510.698 36.7095 512.041 35.3662 513.698 35.3662 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
514.89 50.8965 mo
516.547 50.8965 517.89 52.2393 517.89 53.8965 cv
517.89 55.5532 516.547 56.8965 514.89 56.8965 cv
513.232 56.8965 511.89 55.5532 511.89 53.8965 cv
511.89 52.2393 513.232 50.8965 514.89 50.8965 cv
cp
0 0 0 0 cmyk
f
514.89 50.8965 mo
516.547 50.8965 517.89 52.2393 517.89 53.8965 cv
517.89 55.5532 516.547 56.8965 514.89 56.8965 cv
513.232 56.8965 511.89 55.5532 511.89 53.8965 cv
511.89 52.2393 513.232 50.8965 514.89 50.8965 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
519.691 47.1543 mo
521.349 47.1543 522.691 48.4976 522.691 50.1543 cv
522.691 51.8115 521.349 53.1543 519.691 53.1543 cv
518.034 53.1543 516.691 51.8115 516.691 50.1543 cv
516.691 48.4976 518.034 47.1543 519.691 47.1543 cv
cp
0 0 0 0 cmyk
f
519.691 47.1543 mo
521.349 47.1543 522.691 48.4976 522.691 50.1543 cv
522.691 51.8115 521.349 53.1543 519.691 53.1543 cv
518.034 53.1543 516.691 51.8115 516.691 50.1543 cv
516.691 48.4976 518.034 47.1543 519.691 47.1543 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
519.691 51.4385 mo
521.349 51.4385 522.691 52.7813 522.691 54.4385 cv
522.691 56.0952 521.349 57.4385 519.691 57.4385 cv
518.034 57.4385 516.691 56.0952 516.691 54.4385 cv
516.691 52.7813 518.034 51.4385 519.691 51.4385 cv
cp
0 0 0 0 cmyk
f
519.691 51.4385 mo
521.349 51.4385 522.691 52.7813 522.691 54.4385 cv
522.691 56.0952 521.349 57.4385 519.691 57.4385 cv
518.034 57.4385 516.691 56.0952 516.691 54.4385 cv
516.691 52.7813 518.034 51.4385 519.691 51.4385 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
522.074 117.837 mo
523.731 117.837 525.074 119.18 525.074 120.837 cv
525.074 122.495 523.731 123.837 522.074 123.837 cv
520.417 123.837 519.074 122.495 519.074 120.837 cv
519.074 119.18 520.417 117.837 522.074 117.837 cv
cp
0 0 0 0 cmyk
f
522.074 117.837 mo
523.731 117.837 525.074 119.18 525.074 120.837 cv
525.074 122.495 523.731 123.837 522.074 123.837 cv
520.417 123.837 519.074 122.495 519.074 120.837 cv
519.074 119.18 520.417 117.837 522.074 117.837 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
523.302 110.877 mo
524.959 110.877 526.302 112.221 526.302 113.877 cv
526.302 115.536 524.959 116.877 523.302 116.877 cv
521.645 116.877 520.302 115.536 520.302 113.877 cv
520.302 112.221 521.645 110.877 523.302 110.877 cv
cp
0 0 0 0 cmyk
f
523.302 110.877 mo
524.959 110.877 526.302 112.221 526.302 113.877 cv
526.302 115.536 524.959 116.877 523.302 116.877 cv
521.645 116.877 520.302 115.536 520.302 113.877 cv
520.302 112.221 521.645 110.877 523.302 110.877 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
527.489 117.844 mo
529.146 117.844 530.489 119.188 530.489 120.844 cv
530.489 122.501 529.146 123.844 527.489 123.844 cv
525.833 123.844 524.489 122.501 524.489 120.844 cv
524.489 119.188 525.833 117.844 527.489 117.844 cv
cp
0 0 0 0 cmyk
f
527.489 117.844 mo
529.146 117.844 530.489 119.188 530.489 120.844 cv
530.489 122.501 529.146 123.844 527.489 123.844 cv
525.833 123.844 524.489 122.501 524.489 120.844 cv
524.489 119.188 525.833 117.844 527.489 117.844 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
529.872 114.635 mo
531.529 114.635 532.872 115.979 532.872 117.635 cv
532.872 119.292 531.529 120.635 529.872 120.635 cv
528.216 120.635 526.872 119.292 526.872 117.635 cv
526.872 115.979 528.216 114.635 529.872 114.635 cv
cp
0 0 0 0 cmyk
f
529.872 114.635 mo
531.529 114.635 532.872 115.979 532.872 117.635 cv
532.872 119.292 531.529 120.635 529.872 120.635 cv
528.216 120.635 526.872 119.292 526.872 117.635 cv
526.872 115.979 528.216 114.635 529.872 114.635 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
535.288 117.856 mo
536.944 117.856 538.288 119.199 538.288 120.856 cv
538.288 122.512 536.944 123.856 535.288 123.856 cv
533.631 123.856 532.288 122.512 532.288 120.856 cv
532.288 119.199 533.631 117.856 535.288 117.856 cv
cp
0 0 0 0 cmyk
f
535.288 117.856 mo
536.944 117.856 538.288 119.199 538.288 120.856 cv
538.288 122.512 536.944 123.856 535.288 123.856 cv
533.631 123.856 532.288 122.512 532.288 120.856 cv
532.288 119.199 533.631 117.856 535.288 117.856 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
535.901 110.895 mo
537.559 110.895 538.901 112.239 538.901 113.895 cv
538.901 115.551 537.559 116.895 535.901 116.895 cv
534.244 116.895 532.901 115.551 532.901 113.895 cv
532.901 112.239 534.244 110.895 535.901 110.895 cv
cp
0 0 0 0 cmyk
f
535.901 110.895 mo
537.559 110.895 538.901 112.239 538.901 113.895 cv
538.901 115.551 537.559 116.895 535.901 116.895 cv
534.244 116.895 532.901 115.551 532.901 113.895 cv
532.901 112.239 534.244 110.895 535.901 110.895 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
536.479 104.471 mo
538.136 104.471 539.479 105.814 539.479 107.471 cv
539.479 109.127 538.136 110.471 536.479 110.471 cv
534.822 110.471 533.479 109.127 533.479 107.471 cv
533.479 105.814 534.822 104.471 536.479 104.471 cv
cp
0 0 0 0 cmyk
f
536.479 104.471 mo
538.136 104.471 539.479 105.814 539.479 107.471 cv
539.479 109.127 538.136 110.471 536.479 110.471 cv
534.822 110.471 533.479 109.127 533.479 107.471 cv
533.479 105.814 534.822 104.471 536.479 104.471 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
537.707 68.0615 mo
539.363 68.0615 540.707 69.4048 540.707 71.0615 cv
540.707 72.7188 539.363 74.0615 537.707 74.0615 cv
536.05 74.0615 534.707 72.7188 534.707 71.0615 cv
534.707 69.4048 536.05 68.0615 537.707 68.0615 cv
cp
0 0 0 0 cmyk
f
537.707 68.0615 mo
539.363 68.0615 540.707 69.4048 540.707 71.0615 cv
540.707 72.7188 539.363 74.0615 537.707 74.0615 cv
536.05 74.0615 534.707 72.7188 534.707 71.0615 cv
534.707 69.4048 536.05 68.0615 537.707 68.0615 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
538.284 177.294 mo
539.941 177.294 541.284 178.637 541.284 180.294 cv
541.284 181.952 539.941 183.294 538.284 183.294 cv
536.627 183.294 535.284 181.952 535.284 180.294 cv
535.284 178.637 536.627 177.294 538.284 177.294 cv
cp
0 0 0 0 cmyk
f
538.284 177.294 mo
539.941 177.294 541.284 178.637 541.284 180.294 cv
541.284 181.952 539.941 183.294 538.284 183.294 cv
536.627 183.294 535.284 181.952 535.284 180.294 cv
535.284 178.637 536.627 177.294 538.284 177.294 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
540.703 122.147 mo
542.36 122.147 543.703 123.489 543.703 125.147 cv
543.703 126.803 542.36 128.147 540.703 128.147 cv
539.046 128.147 537.703 126.803 537.703 125.147 cv
537.703 123.489 539.046 122.147 540.703 122.147 cv
cp
0 0 0 0 cmyk
f
540.703 122.147 mo
542.36 122.147 543.703 123.489 543.703 125.147 cv
543.703 126.803 542.36 128.147 540.703 128.147 cv
539.046 128.147 537.703 126.803 537.703 125.147 cv
537.703 123.489 539.046 122.147 540.703 122.147 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
540.703 137.674 mo
542.36 137.674 543.703 139.018 543.703 140.674 cv
543.703 142.331 542.36 143.674 540.703 143.674 cv
539.046 143.674 537.703 142.331 537.703 140.674 cv
537.703 139.018 539.046 137.674 540.703 137.674 cv
cp
0 0 0 0 cmyk
f
540.703 137.674 mo
542.36 137.674 543.703 139.018 543.703 140.674 cv
543.703 142.331 542.36 143.674 540.703 143.674 cv
539.046 143.674 537.703 142.331 537.703 140.674 cv
537.703 139.018 539.046 137.674 540.703 137.674 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
540.703 166.053 mo
542.36 166.053 543.703 167.397 543.703 169.053 cv
543.703 170.709 542.36 172.053 540.703 172.053 cv
539.046 172.053 537.703 170.709 537.703 169.053 cv
537.703 167.397 539.046 166.053 540.703 166.053 cv
cp
0 0 0 0 cmyk
f
540.703 166.053 mo
542.36 166.053 543.703 167.397 543.703 169.053 cv
543.703 170.709 542.36 172.053 540.703 172.053 cv
539.046 172.053 537.703 170.709 537.703 169.053 cv
537.703 167.397 539.046 166.053 540.703 166.053 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
541.895 50.9331 mo
543.552 50.9331 544.895 52.2764 544.895 53.9331 cv
544.895 55.5898 543.552 56.9331 541.895 56.9331 cv
540.237 56.9331 538.895 55.5898 538.895 53.9331 cv
538.895 52.2764 540.237 50.9331 541.895 50.9331 cv
cp
0 0 0 0 cmyk
f
541.895 50.9331 mo
543.552 50.9331 544.895 52.2764 544.895 53.9331 cv
544.895 55.5898 543.552 56.9331 541.895 56.9331 cv
540.237 56.9331 538.895 55.5898 538.895 53.9331 cv
538.895 52.2764 540.237 50.9331 541.895 50.9331 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
543.086 87.8809 mo
544.743 87.8809 546.086 89.2236 546.086 90.8809 cv
546.086 92.5376 544.743 93.8809 543.086 93.8809 cv
541.429 93.8809 540.086 92.5376 540.086 90.8809 cv
540.086 89.2236 541.429 87.8809 543.086 87.8809 cv
cp
0 0 0 0 cmyk
f
543.086 87.8809 mo
544.743 87.8809 546.086 89.2236 546.086 90.8809 cv
546.086 92.5376 544.743 93.8809 543.086 93.8809 cv
541.429 93.8809 540.086 92.5376 540.086 90.8809 cv
540.086 89.2236 541.429 87.8809 543.086 87.8809 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
543.699 80.3853 mo
545.356 80.3853 546.699 81.7285 546.699 83.3853 cv
546.699 85.042 545.356 86.3853 543.699 86.3853 cv
542.043 86.3853 540.699 85.042 540.699 83.3853 cv
540.699 81.7285 542.043 80.3853 543.699 80.3853 cv
cp
0 0 0 0 cmyk
f
543.699 80.3853 mo
545.356 80.3853 546.699 81.7285 546.699 83.3853 cv
546.699 85.042 545.356 86.3853 543.699 86.3853 cv
542.043 86.3853 540.699 85.042 540.699 83.3853 cv
540.699 81.7285 542.043 80.3853 543.699 80.3853 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
544.891 37.5508 mo
546.548 37.5508 547.891 38.894 547.891 40.5508 cv
547.891 42.2075 546.548 43.5508 544.891 43.5508 cv
543.234 43.5508 541.891 42.2075 541.891 40.5508 cv
541.891 38.894 543.234 37.5508 544.891 37.5508 cv
cp
0 0 0 0 cmyk
f
544.891 37.5508 mo
546.548 37.5508 547.891 38.894 547.891 40.5508 cv
547.891 42.2075 546.548 43.5508 544.891 43.5508 cv
543.234 43.5508 541.891 42.2075 541.891 40.5508 cv
541.891 38.894 543.234 37.5508 544.891 37.5508 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
549.079 58.9746 mo
550.735 58.9746 552.079 60.3179 552.079 61.9746 cv
552.079 63.6313 550.735 64.9746 549.079 64.9746 cv
547.422 64.9746 546.079 63.6313 546.079 61.9746 cv
546.079 60.3179 547.422 58.9746 549.079 58.9746 cv
cp
0 0 0 0 cmyk
f
549.079 58.9746 mo
550.735 58.9746 552.079 60.3179 552.079 61.9746 cv
552.079 63.6313 550.735 64.9746 549.079 64.9746 cv
547.422 64.9746 546.079 63.6313 546.079 61.9746 cv
546.079 60.3179 547.422 58.9746 549.079 58.9746 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
552.075 49.3403 mo
553.732 49.3403 555.075 50.6836 555.075 52.3403 cv
555.075 53.9976 553.732 55.3403 552.075 55.3403 cv
550.419 55.3403 549.075 53.9976 549.075 52.3403 cv
549.075 50.6836 550.419 49.3403 552.075 49.3403 cv
cp
0 0 0 0 cmyk
f
552.075 49.3403 mo
553.732 49.3403 555.075 50.6836 555.075 52.3403 cv
555.075 53.9976 553.732 55.3403 552.075 55.3403 cv
550.419 55.3403 549.075 53.9976 549.075 52.3403 cv
549.075 50.6836 550.419 49.3403 552.075 49.3403 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
555.686 57.9126 mo
557.343 57.9126 558.686 59.2559 558.686 60.9126 cv
558.686 62.5693 557.343 63.9126 555.686 63.9126 cv
554.029 63.9126 552.686 62.5693 552.686 60.9126 cv
552.686 59.2559 554.029 57.9126 555.686 57.9126 cv
cp
0 0 0 0 cmyk
f
555.686 57.9126 mo
557.343 57.9126 558.686 59.2559 558.686 60.9126 cv
558.686 62.5693 557.343 63.9126 555.686 63.9126 cv
554.029 63.9126 552.686 62.5693 552.686 60.9126 cv
552.686 59.2559 554.029 57.9126 555.686 57.9126 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
556.3 91.6465 mo
557.956 91.6465 559.3 92.9897 559.3 94.6465 cv
559.3 96.3032 557.956 97.647 556.3 97.647 cv
554.643 97.647 553.3 96.3032 553.3 94.6465 cv
553.3 92.9897 554.643 91.6465 556.3 91.6465 cv
cp
0 0 0 0 cmyk
f
556.3 91.6465 mo
557.956 91.6465 559.3 92.9897 559.3 94.6465 cv
559.3 96.3032 557.956 97.647 556.3 97.647 cv
554.643 97.647 553.3 96.3032 553.3 94.6465 cv
553.3 92.9897 554.643 91.6465 556.3 91.6465 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
556.877 129.665 mo
558.534 129.665 559.877 131.008 559.877 132.665 cv
559.877 134.321 558.534 135.665 556.877 135.665 cv
555.221 135.665 553.877 134.321 553.877 132.665 cv
553.877 131.008 555.221 129.665 556.877 129.665 cv
cp
0 0 0 0 cmyk
f
556.877 129.665 mo
558.534 129.665 559.877 131.008 559.877 132.665 cv
559.877 134.321 558.534 135.665 556.877 135.665 cv
555.221 135.665 553.877 134.321 553.877 132.665 cv
553.877 131.008 555.221 129.665 556.877 129.665 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
558.104 117.886 mo
559.762 117.886 561.104 119.229 561.104 120.886 cv
561.104 122.543 559.762 123.886 558.104 123.886 cv
556.447 123.886 555.104 122.543 555.104 120.886 cv
555.104 119.229 556.447 117.886 558.104 117.886 cv
cp
0 0 0 0 cmyk
f
558.104 117.886 mo
559.762 117.886 561.104 119.229 561.104 120.886 cv
561.104 122.543 559.762 123.886 558.104 123.886 cv
556.447 123.886 555.104 122.543 555.104 120.886 cv
555.104 119.229 556.447 117.886 558.104 117.886 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
560.487 135.559 mo
562.145 135.559 563.487 136.903 563.487 138.559 cv
563.487 140.216 562.145 141.559 560.487 141.559 cv
558.83 141.559 557.487 140.216 557.487 138.559 cv
557.487 136.903 558.83 135.559 560.487 135.559 cv
cp
0 0 0 0 cmyk
f
560.487 135.559 mo
562.145 135.559 563.487 136.903 563.487 138.559 cv
563.487 140.216 562.145 141.559 560.487 141.559 cv
558.83 141.559 557.487 140.216 557.487 138.559 cv
557.487 136.903 558.83 135.559 560.487 135.559 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
561.679 98.6147 mo
563.336 98.6147 564.679 99.9575 564.679 101.615 cv
564.679 103.272 563.336 104.615 561.679 104.615 cv
560.021 104.615 558.679 103.272 558.679 101.615 cv
558.679 99.9575 560.021 98.6147 561.679 98.6147 cv
cp
0 0 0 0 cmyk
f
561.679 98.6147 mo
563.336 98.6147 564.679 99.9575 564.679 101.615 cv
564.679 103.272 563.336 104.615 561.679 104.615 cv
560.021 104.615 558.679 103.272 558.679 101.615 cv
558.679 99.9575 560.021 98.6147 561.679 98.6147 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
562.906 174.116 mo
564.563 174.116 565.906 175.458 565.906 177.116 cv
565.906 178.772 564.563 180.116 562.906 180.116 cv
561.249 180.116 559.906 178.772 559.906 177.116 cv
559.906 175.458 561.249 174.116 562.906 174.116 cv
cp
0 0 0 0 cmyk
f
562.906 174.116 mo
564.563 174.116 565.906 175.458 565.906 177.116 cv
565.906 178.772 564.563 180.116 562.906 180.116 cv
561.249 180.116 559.906 178.772 559.906 177.116 cv
559.906 175.458 561.249 174.116 562.906 174.116 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
563.483 130.209 mo
565.141 130.209 566.483 131.552 566.483 133.209 cv
566.483 134.866 565.141 136.209 563.483 136.209 cv
561.827 136.209 560.483 134.866 560.483 133.209 cv
560.483 131.552 561.827 130.209 563.483 130.209 cv
cp
0 0 0 0 cmyk
f
563.483 130.209 mo
565.141 130.209 566.483 131.552 566.483 133.209 cv
566.483 134.866 565.141 136.209 563.483 136.209 cv
561.827 136.209 560.483 134.866 560.483 133.209 cv
560.483 131.552 561.827 130.209 563.483 130.209 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
564.711 53.106 mo
566.368 53.106 567.711 54.4492 567.711 56.106 cv
567.711 57.7627 566.368 59.106 564.711 59.106 cv
563.055 59.106 561.711 57.7627 561.711 56.106 cv
561.711 54.4492 563.055 53.106 564.711 53.106 cv
cp
0 0 0 0 cmyk
f
564.711 53.106 mo
566.368 53.106 567.711 54.4492 567.711 56.106 cv
567.711 57.7627 566.368 59.106 564.711 59.106 cv
563.055 59.106 561.711 57.7627 561.711 56.106 cv
561.711 54.4492 563.055 53.106 564.711 53.106 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
565.902 91.6597 mo
567.56 91.6597 568.902 93.0029 568.902 94.6597 cv
568.902 96.3169 567.56 97.6597 565.902 97.6597 cv
564.246 97.6597 562.902 96.3169 562.902 94.6597 cv
562.902 93.0029 564.246 91.6597 565.902 91.6597 cv
cp
0 0 0 0 cmyk
f
565.902 91.6597 mo
567.56 91.6597 568.902 93.0029 568.902 94.6597 cv
568.902 96.3169 567.56 97.6597 565.902 97.6597 cv
564.246 97.6597 562.902 96.3169 562.902 94.6597 cv
562.902 93.0029 564.246 91.6597 565.902 91.6597 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
570.091 57.397 mo
571.747 57.397 573.091 58.7402 573.091 60.397 cv
573.091 62.0537 571.747 63.397 570.091 63.397 cv
568.434 63.397 567.091 62.0537 567.091 60.397 cv
567.091 58.7402 568.434 57.397 570.091 57.397 cv
cp
0 0 0 0 cmyk
f
570.091 57.397 mo
571.747 57.397 573.091 58.7402 573.091 60.397 cv
573.091 62.0537 571.747 63.397 570.091 63.397 cv
568.434 63.397 567.091 62.0537 567.091 60.397 cv
567.091 58.7402 568.434 57.397 570.091 57.397 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
576.697 53.1221 mo
578.354 53.1221 579.697 54.4653 579.697 56.1221 cv
579.697 57.7788 578.354 59.1221 576.697 59.1221 cv
575.041 59.1221 573.697 57.7788 573.697 56.1221 cv
573.697 54.4653 575.041 53.1221 576.697 53.1221 cv
cp
0 0 0 0 cmyk
f
576.697 53.1221 mo
578.354 53.1221 579.697 54.4653 579.697 56.1221 cv
579.697 57.7788 578.354 59.1221 576.697 59.1221 cv
575.041 59.1221 573.697 57.7788 573.697 56.1221 cv
573.697 54.4653 575.041 53.1221 576.697 53.1221 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
580.885 60.0889 mo
582.542 60.0889 583.885 61.4321 583.885 63.0889 cv
583.885 64.7461 582.542 66.0889 580.885 66.0889 cv
579.229 66.0889 577.885 64.7461 577.885 63.0889 cv
577.885 61.4321 579.229 60.0889 580.885 60.0889 cv
cp
0 0 0 0 cmyk
f
580.885 60.0889 mo
582.542 60.0889 583.885 61.4321 583.885 63.0889 cv
583.885 64.7461 582.542 66.0889 580.885 66.0889 cv
579.229 66.0889 577.885 64.7461 577.885 63.0889 cv
577.885 61.4321 579.229 60.0889 580.885 60.0889 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
584.495 64.3774 mo
586.152 64.3774 587.495 65.7207 587.495 67.3774 cv
587.495 69.0342 586.152 70.3774 584.495 70.3774 cv
582.839 70.3774 581.495 69.0342 581.495 67.3774 cv
581.495 65.7207 582.839 64.3774 584.495 64.3774 cv
cp
0 0 0 0 cmyk
f
584.495 64.3774 mo
586.152 64.3774 587.495 65.7207 587.495 67.3774 cv
587.495 69.0342 586.152 70.3774 584.495 70.3774 cv
582.839 70.3774 581.495 69.0342 581.495 67.3774 cv
581.495 65.7207 582.839 64.3774 584.495 64.3774 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
588.105 56.8857 mo
589.763 56.8857 591.105 58.229 591.105 59.8857 cv
591.105 61.5425 589.763 62.8857 588.105 62.8857 cv
586.449 62.8857 585.105 61.5425 585.105 59.8857 cv
585.105 58.229 586.449 56.8857 588.105 56.8857 cv
cp
0 0 0 0 cmyk
f
588.105 56.8857 mo
589.763 56.8857 591.105 58.229 591.105 59.8857 cv
591.105 61.5425 589.763 62.8857 588.105 62.8857 cv
586.449 62.8857 585.105 61.5425 585.105 59.8857 cv
585.105 58.229 586.449 56.8857 588.105 56.8857 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
589.911 49.3921 mo
591.567 49.3921 592.911 50.7354 592.911 52.3921 cv
592.911 54.0488 591.567 55.3921 589.911 55.3921 cv
588.254 55.3921 586.911 54.0488 586.911 52.3921 cv
586.911 50.7354 588.254 49.3921 589.911 49.3921 cv
cp
0 0 0 0 cmyk
f
589.911 49.3921 mo
591.567 49.3921 592.911 50.7354 592.911 52.3921 cv
592.911 54.0488 591.567 55.3921 589.911 55.3921 cv
588.254 55.3921 586.911 54.0488 586.911 52.3921 cv
586.911 50.7354 588.254 49.3921 589.911 49.3921 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
593.485 61.7119 mo
595.142 61.7119 596.485 63.0552 596.485 64.7119 cv
596.485 66.3691 595.142 67.7119 593.485 67.7119 cv
591.828 67.7119 590.485 66.3691 590.485 64.7119 cv
590.485 63.0552 591.828 61.7119 593.485 61.7119 cv
cp
0 0 0 0 cmyk
f
593.485 61.7119 mo
595.142 61.7119 596.485 63.0552 596.485 64.7119 cv
596.485 66.3691 595.142 67.7119 593.485 67.7119 cv
591.828 67.7119 590.485 66.3691 590.485 64.7119 cv
590.485 63.0552 591.828 61.7119 593.485 61.7119 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
598.9 55.2944 mo
600.558 55.2944 601.9 56.6377 601.9 58.2944 cv
601.9 59.9512 600.558 61.2944 598.9 61.2944 cv
597.243 61.2944 595.9 59.9512 595.9 58.2944 cv
595.9 56.6377 597.243 55.2944 598.9 55.2944 cv
cp
0 0 0 0 cmyk
f
598.9 55.2944 mo
600.558 55.2944 601.9 56.6377 601.9 58.2944 cv
601.9 59.9512 600.558 61.2944 598.9 61.2944 cv
597.243 61.2944 595.9 59.9512 595.9 58.2944 cv
595.9 56.6377 597.243 55.2944 598.9 55.2944 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
602.511 57.4409 mo
604.168 57.4409 605.511 58.7842 605.511 60.4409 cv
605.511 62.0977 604.168 63.4409 602.511 63.4409 cv
600.854 63.4409 599.511 62.0977 599.511 60.4409 cv
599.511 58.7842 600.854 57.4409 602.511 57.4409 cv
cp
0 0 0 0 cmyk
f
602.511 57.4409 mo
604.168 57.4409 605.511 58.7842 605.511 60.4409 cv
605.511 62.0977 604.168 63.4409 602.511 63.4409 cv
600.854 63.4409 599.511 62.0977 599.511 60.4409 cv
599.511 58.7842 600.854 57.4409 602.511 57.4409 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
606.121 53.1621 mo
607.777 53.1621 609.121 54.5054 609.121 56.1621 cv
609.121 57.8193 607.777 59.1621 606.121 59.1621 cv
604.464 59.1621 603.121 57.8193 603.121 56.1621 cv
603.121 54.5054 604.464 53.1621 606.121 53.1621 cv
cp
0 0 0 0 cmyk
f
606.121 53.1621 mo
607.777 53.1621 609.121 54.5054 609.121 56.1621 cv
609.121 57.8193 607.777 59.1621 606.121 59.1621 cv
604.464 59.1621 603.121 57.8193 603.121 56.1621 cv
603.121 54.5054 604.464 53.1621 606.121 53.1621 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
609.117 52.0957 mo
610.774 52.0957 612.117 53.4385 612.117 55.0957 cv
612.117 56.7524 610.774 58.0957 609.117 58.0957 cv
607.461 58.0957 606.117 56.7524 606.117 55.0957 cv
606.117 53.4385 607.461 52.0957 609.117 52.0957 cv
cp
0 0 0 0 cmyk
f
609.117 52.0957 mo
610.774 52.0957 612.117 53.4385 612.117 55.0957 cv
612.117 56.7524 610.774 58.0957 609.117 58.0957 cv
607.461 58.0957 606.117 56.7524 606.117 55.0957 cv
606.117 53.4385 607.461 52.0957 609.117 52.0957 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
612.691 56.9194 mo
614.349 56.9194 615.691 58.2627 615.691 59.9194 cv
615.691 61.5762 614.349 62.9194 612.691 62.9194 cv
611.035 62.9194 609.691 61.5762 609.691 59.9194 cv
609.691 58.2627 611.035 56.9194 612.691 56.9194 cv
cp
0 0 0 0 cmyk
f
612.691 56.9194 mo
614.349 56.9194 615.691 58.2627 615.691 59.9194 cv
615.691 61.5762 614.349 62.9194 612.691 62.9194 cv
611.035 62.9194 609.691 61.5762 609.691 59.9194 cv
609.691 58.2627 611.035 56.9194 612.691 56.9194 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
616.916 56.9253 mo
618.572 56.9253 619.916 58.2686 619.916 59.9253 cv
619.916 61.582 618.572 62.9253 616.916 62.9253 cv
615.259 62.9253 613.916 61.582 613.916 59.9253 cv
613.916 58.2686 615.259 56.9253 616.916 56.9253 cv
cp
0 0 0 0 cmyk
f
616.916 56.9253 mo
618.572 56.9253 619.916 58.2686 619.916 59.9253 cv
619.916 61.582 618.572 62.9253 616.916 62.9253 cv
615.259 62.9253 613.916 61.582 613.916 59.9253 cv
613.916 58.2686 615.259 56.9253 616.916 56.9253 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
620.49 62.2847 mo
622.146 62.2847 623.49 63.6279 623.49 65.2847 cv
623.49 66.9414 622.146 68.2847 620.49 68.2847 cv
618.833 68.2847 617.49 66.9414 617.49 65.2847 cv
617.49 63.6279 618.833 62.2847 620.49 62.2847 cv
cp
0 0 0 0 cmyk
f
620.49 62.2847 mo
622.146 62.2847 623.49 63.6279 623.49 65.2847 cv
623.49 66.9414 622.146 68.2847 620.49 68.2847 cv
618.833 68.2847 617.49 66.9414 617.49 65.2847 cv
617.49 63.6279 618.833 62.2847 620.49 62.2847 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
621.104 98.6958 mo
622.761 98.6958 624.104 100.04 624.104 101.696 cv
624.104 103.353 622.761 104.696 621.104 104.696 cv
619.446 104.696 618.104 103.353 618.104 101.696 cv
618.104 100.04 619.446 98.6958 621.104 98.6958 cv
cp
0 0 0 0 cmyk
f
621.104 98.6958 mo
622.761 98.6958 624.104 100.04 624.104 101.696 cv
624.104 103.353 622.761 104.696 621.104 104.696 cv
619.446 104.696 618.104 103.353 618.104 101.696 cv
618.104 100.04 619.446 98.6958 621.104 98.6958 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
621.718 118.508 mo
623.374 118.508 624.718 119.852 624.718 121.508 cv
624.718 123.166 623.374 124.508 621.718 124.508 cv
620.061 124.508 618.718 123.166 618.718 121.508 cv
618.718 119.852 620.061 118.508 621.718 118.508 cv
cp
0 0 0 0 cmyk
f
621.718 118.508 mo
623.374 118.508 624.718 119.852 624.718 121.508 cv
624.718 123.166 623.374 124.508 621.718 124.508 cv
620.061 124.508 618.718 123.166 618.718 121.508 cv
618.718 119.852 620.061 118.508 621.718 118.508 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
622.908 126.542 mo
624.565 126.542 625.908 127.885 625.908 129.542 cv
625.908 131.199 624.565 132.542 622.908 132.542 cv
621.252 132.542 619.908 131.199 619.908 129.542 cv
619.908 127.885 621.252 126.542 622.908 126.542 cv
cp
0 0 0 0 cmyk
f
622.908 126.542 mo
624.565 126.542 625.908 127.885 625.908 129.542 cv
625.908 131.199 624.565 132.542 622.908 132.542 cv
621.252 132.542 619.908 131.199 619.908 129.542 cv
619.908 127.885 621.252 126.542 622.908 126.542 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
624.714 139.395 mo
626.371 139.395 627.714 140.739 627.714 142.395 cv
627.714 144.051 626.371 145.395 624.714 145.395 cv
623.057 145.395 621.714 144.051 621.714 142.395 cv
621.714 140.739 623.057 139.395 624.714 139.395 cv
cp
0 0 0 0 cmyk
f
624.714 139.395 mo
626.371 139.395 627.714 140.739 627.714 142.395 cv
627.714 144.051 626.371 145.395 624.714 145.395 cv
623.057 145.395 621.714 144.051 621.714 142.395 cv
621.714 140.739 623.057 139.395 624.714 139.395 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
628.324 121.73 mo
629.98 121.73 631.324 123.073 631.324 124.73 cv
631.324 126.387 629.98 127.73 628.324 127.73 cv
626.667 127.73 625.324 126.387 625.324 124.73 cv
625.324 123.073 626.667 121.73 628.324 121.73 cv
cp
0 0 0 0 cmyk
f
628.324 121.73 mo
629.98 121.73 631.324 123.073 631.324 124.73 cv
631.324 126.387 629.98 127.73 628.324 127.73 cv
626.667 127.73 625.324 126.387 625.324 124.73 cv
625.324 123.073 626.667 121.73 628.324 121.73 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
632.512 127.625 mo
634.169 127.625 635.512 128.969 635.512 130.625 cv
635.512 132.283 634.169 133.625 632.512 133.625 cv
630.855 133.625 629.512 132.283 629.512 130.625 cv
629.512 128.969 630.855 127.625 632.512 127.625 cv
cp
0 0 0 0 cmyk
f
632.512 127.625 mo
634.169 127.625 635.512 128.969 635.512 130.625 cv
635.512 132.283 634.169 133.625 632.512 133.625 cv
630.855 133.625 629.512 132.283 629.512 130.625 cv
629.512 128.969 630.855 127.625 632.512 127.625 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
634.895 105.14 mo
636.552 105.14 637.895 106.483 637.895 108.14 cv
637.895 109.797 636.552 111.14 634.895 111.14 cv
633.238 111.14 631.895 109.797 631.895 108.14 cv
631.895 106.483 633.238 105.14 634.895 105.14 cv
cp
0 0 0 0 cmyk
f
634.895 105.14 mo
636.552 105.14 637.895 106.483 637.895 108.14 cv
637.895 109.797 636.552 111.14 634.895 111.14 cv
633.238 111.14 631.895 109.797 631.895 108.14 cv
631.895 106.483 633.238 105.14 634.895 105.14 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
638.505 138.342 mo
640.162 138.342 641.505 139.686 641.505 141.342 cv
641.505 143 640.162 144.342 638.505 144.342 cv
636.848 144.342 635.505 143 635.505 141.342 cv
635.505 139.686 636.848 138.342 638.505 138.342 cv
cp
0 0 0 0 cmyk
f
638.505 138.342 mo
640.162 138.342 641.505 139.686 641.505 141.342 cv
641.505 143 640.162 144.342 638.505 144.342 cv
636.848 144.342 635.505 143 635.505 141.342 cv
635.505 139.686 636.848 138.342 638.505 138.342 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
640.924 135.133 mo
642.581 135.133 643.924 136.477 643.924 138.133 cv
643.924 139.791 642.581 141.133 640.924 141.133 cv
639.267 141.133 637.924 139.791 637.924 138.133 cv
637.924 136.477 639.267 135.133 640.924 135.133 cv
cp
0 0 0 0 cmyk
f
640.924 135.133 mo
642.581 135.133 643.924 136.477 643.924 138.133 cv
643.924 139.791 642.581 141.133 640.924 141.133 cv
639.267 141.133 637.924 139.791 637.924 138.133 cv
637.924 136.477 639.267 135.133 640.924 135.133 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
641.502 128.709 mo
643.158 128.709 644.502 130.051 644.502 131.709 cv
644.502 133.366 643.158 134.709 641.502 134.709 cv
639.845 134.709 638.502 133.366 638.502 131.709 cv
638.502 130.051 639.845 128.709 641.502 128.709 cv
cp
0 0 0 0 cmyk
f
641.502 128.709 mo
643.158 128.709 644.502 130.051 644.502 131.709 cv
644.502 133.366 643.158 134.709 641.502 134.709 cv
639.845 134.709 638.502 133.366 638.502 131.709 cv
638.502 130.051 639.845 128.709 641.502 128.709 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
646.917 135.141 mo
648.574 135.141 649.917 136.485 649.917 138.141 cv
649.917 139.799 648.574 141.141 646.917 141.141 cv
645.26 141.141 643.917 139.799 643.917 138.141 cv
643.917 136.485 645.26 135.141 646.917 135.141 cv
cp
0 0 0 0 cmyk
f
646.917 135.141 mo
648.574 135.141 649.917 136.485 649.917 138.141 cv
649.917 139.799 648.574 141.141 646.917 141.141 cv
645.26 141.141 643.917 139.799 643.917 138.141 cv
643.917 136.485 645.26 135.141 646.917 135.141 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
649.3 118.545 mo
650.957 118.545 652.3 119.889 652.3 121.545 cv
652.3 123.203 650.957 124.545 649.3 124.545 cv
647.643 124.545 646.3 123.203 646.3 121.545 cv
646.3 119.889 647.643 118.545 649.3 118.545 cv
cp
0 0 0 0 cmyk
f
649.3 118.545 mo
650.957 118.545 652.3 119.889 652.3 121.545 cv
652.3 123.203 650.957 124.545 649.3 124.545 cv
647.643 124.545 646.3 123.203 646.3 121.545 cv
646.3 119.889 647.643 118.545 649.3 118.545 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
649.3 114.797 mo
650.957 114.797 652.3 116.141 652.3 117.797 cv
652.3 119.455 650.957 120.797 649.3 120.797 cv
647.643 120.797 646.3 119.455 646.3 117.797 cv
646.3 116.141 647.643 114.797 649.3 114.797 cv
cp
0 0 0 0 cmyk
f
649.3 114.797 mo
650.957 114.797 652.3 116.141 652.3 117.797 cv
652.3 119.455 650.957 120.797 649.3 120.797 cv
647.643 120.797 646.3 119.455 646.3 117.797 cv
646.3 116.141 647.643 114.797 649.3 114.797 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
650.527 110.516 mo
652.184 110.516 653.527 111.859 653.527 113.516 cv
653.527 115.172 652.184 116.516 650.527 116.516 cv
648.87 116.516 647.527 115.172 647.527 113.516 cv
647.527 111.859 648.87 110.516 650.527 110.516 cv
cp
0 0 0 0 cmyk
f
650.527 110.516 mo
652.184 110.516 653.527 111.859 653.527 113.516 cv
653.527 115.172 652.184 116.516 650.527 116.516 cv
648.87 116.516 647.527 115.172 647.527 113.516 cv
647.527 111.859 648.87 110.516 650.527 110.516 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
651.719 123.368 mo
653.375 123.368 654.719 124.711 654.719 126.368 cv
654.719 128.026 653.375 129.368 651.719 129.368 cv
650.062 129.368 648.719 128.026 648.719 126.368 cv
648.719 124.711 650.062 123.368 651.719 123.368 cv
cp
0 0 0 0 cmyk
f
651.719 123.368 mo
653.375 123.368 654.719 124.711 654.719 126.368 cv
654.719 128.026 653.375 129.368 651.719 129.368 cv
650.062 129.368 648.719 128.026 648.719 126.368 cv
648.719 124.711 650.062 123.368 651.719 123.368 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
652.332 48.4063 mo
653.989 48.4063 655.332 49.7495 655.332 51.4063 cv
655.332 53.063 653.989 54.4063 652.332 54.4063 cv
650.676 54.4063 649.332 53.063 649.332 51.4063 cv
649.332 49.7495 650.676 48.4063 652.332 48.4063 cv
cp
0 0 0 0 cmyk
f
652.332 48.4063 mo
653.989 48.4063 655.332 49.7495 655.332 51.4063 cv
655.332 53.063 653.989 54.4063 652.332 54.4063 cv
650.676 54.4063 649.332 53.063 649.332 51.4063 cv
649.332 49.7495 650.676 48.4063 652.332 48.4063 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
656.521 58.5854 mo
658.177 58.5854 659.521 59.9287 659.521 61.5854 cv
659.521 63.2422 658.177 64.5854 656.521 64.5854 cv
654.863 64.5854 653.521 63.2422 653.521 61.5854 cv
653.521 59.9287 654.863 58.5854 656.521 58.5854 cv
cp
0 0 0 0 cmyk
f
656.521 58.5854 mo
658.177 58.5854 659.521 59.9287 659.521 61.5854 cv
659.521 63.2422 658.177 64.5854 656.521 64.5854 cv
654.863 64.5854 653.521 63.2422 653.521 61.5854 cv
653.521 59.9287 654.863 58.5854 656.521 58.5854 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
660.131 43.5977 mo
661.787 43.5977 663.131 44.9409 663.131 46.5977 cv
663.131 48.2544 661.787 49.5977 660.131 49.5977 cv
658.474 49.5977 657.131 48.2544 657.131 46.5977 cv
657.131 44.9409 658.474 43.5977 660.131 43.5977 cv
cp
0 0 0 0 cmyk
f
660.131 43.5977 mo
661.787 43.5977 663.131 44.9409 663.131 46.5977 cv
663.131 48.2544 661.787 49.5977 660.131 49.5977 cv
658.474 49.5977 657.131 48.2544 657.131 46.5977 cv
657.131 44.9409 658.474 43.5977 660.131 43.5977 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
661.899 133.02 mo
663.557 133.02 664.899 134.364 664.899 136.02 cv
664.899 137.677 663.557 139.02 661.899 139.02 cv
660.242 139.02 658.899 137.677 658.899 136.02 cv
658.899 134.364 660.242 133.02 661.899 133.02 cv
cp
0 0 0 0 cmyk
f
661.899 133.02 mo
663.557 133.02 664.899 134.364 664.899 136.02 cv
664.899 137.677 663.557 139.02 661.899 139.02 cv
660.242 139.02 658.899 137.677 658.899 136.02 cv
658.899 134.364 660.242 133.02 661.899 133.02 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
663.705 122.313 mo
665.361 122.313 666.705 123.657 666.705 125.313 cv
666.705 126.971 665.361 128.313 663.705 128.313 cv
662.048 128.313 660.705 126.971 660.705 125.313 cv
660.705 123.657 662.048 122.313 663.705 122.313 cv
cp
0 0 0 0 cmyk
f
663.705 122.313 mo
665.361 122.313 666.705 123.657 666.705 125.313 cv
666.705 126.971 665.361 128.313 663.705 128.313 cv
662.048 128.313 660.705 126.971 660.705 125.313 cv
660.705 123.657 662.048 122.313 663.705 122.313 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
666.701 128.208 mo
668.358 128.208 669.701 129.551 669.701 131.208 cv
669.701 132.865 668.358 134.208 666.701 134.208 cv
665.044 134.208 663.701 132.865 663.701 131.208 cv
663.701 129.551 665.044 128.208 666.701 128.208 cv
cp
0 0 0 0 cmyk
f
666.701 128.208 mo
668.358 128.208 669.701 129.551 669.701 131.208 cv
669.701 132.865 668.358 134.208 666.701 134.208 cv
665.044 134.208 663.701 132.865 663.701 131.208 cv
663.701 129.551 665.044 128.208 666.701 128.208 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
670.925 116.969 mo
672.582 116.969 673.925 118.313 673.925 119.969 cv
673.925 121.625 672.582 122.969 670.925 122.969 cv
669.269 122.969 667.925 121.625 667.925 119.969 cv
667.925 118.313 669.269 116.969 670.925 116.969 cv
cp
0 0 0 0 cmyk
f
670.925 116.969 mo
672.582 116.969 673.925 118.313 673.925 119.969 cv
673.925 121.625 672.582 122.969 670.925 122.969 cv
669.269 122.969 667.925 121.625 667.925 119.969 cv
667.925 118.313 669.269 116.969 670.925 116.969 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
671.503 124.466 mo
673.16 124.466 674.503 125.809 674.503 127.466 cv
674.503 129.124 673.16 130.466 671.503 130.466 cv
669.846 130.466 668.503 129.124 668.503 127.466 cv
668.503 125.809 669.846 124.466 671.503 124.466 cv
cp
0 0 0 0 cmyk
f
671.503 124.466 mo
673.16 124.466 674.503 125.809 674.503 127.466 cv
674.503 129.124 673.16 130.466 671.503 130.466 cv
669.846 130.466 668.503 129.124 668.503 127.466 cv
668.503 125.809 669.846 124.466 671.503 124.466 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
673.922 106.264 mo
675.578 106.264 676.922 107.608 676.922 109.264 cv
676.922 110.92 675.578 112.264 673.922 112.264 cv
672.265 112.264 670.922 110.92 670.922 109.264 cv
670.922 107.608 672.265 106.264 673.922 106.264 cv
cp
0 0 0 0 cmyk
f
673.922 106.264 mo
675.578 106.264 676.922 107.608 676.922 109.264 cv
676.922 110.92 675.578 112.264 673.922 112.264 cv
672.265 112.264 670.922 110.92 670.922 109.264 cv
670.922 107.608 672.265 106.264 673.922 106.264 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
679.337 125.012 mo
680.994 125.012 682.337 126.356 682.337 128.012 cv
682.337 129.668 680.994 131.012 679.337 131.012 cv
677.681 131.012 676.337 129.668 676.337 128.012 cv
676.337 126.356 677.681 125.012 679.337 125.012 cv
cp
0 0 0 0 cmyk
f
679.337 125.012 mo
680.994 125.012 682.337 126.356 682.337 128.012 cv
682.337 129.668 680.994 131.012 679.337 131.012 cv
677.681 131.012 676.337 129.668 676.337 128.012 cv
676.337 126.356 677.681 125.012 679.337 125.012 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
681.72 122.338 mo
683.377 122.338 684.72 123.682 684.72 125.338 cv
684.72 126.995 683.377 128.338 681.72 128.338 cv
680.063 128.338 678.72 126.995 678.72 125.338 cv
678.72 123.682 680.063 122.338 681.72 122.338 cv
cp
0 0 0 0 cmyk
f
681.72 122.338 mo
683.377 122.338 684.72 123.682 684.72 125.338 cv
684.72 126.995 683.377 128.338 681.72 128.338 cv
680.063 128.338 678.72 126.995 678.72 125.338 cv
678.72 123.682 680.063 122.338 681.72 122.338 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
685.908 116.454 mo
687.564 116.454 688.908 117.797 688.908 119.454 cv
688.908 121.112 687.564 122.454 685.908 122.454 cv
684.251 122.454 682.908 121.112 682.908 119.454 cv
682.908 117.797 684.251 116.454 685.908 116.454 cv
cp
0 0 0 0 cmyk
f
685.908 116.454 mo
687.564 116.454 688.908 117.797 688.908 119.454 cv
688.908 121.112 687.564 122.454 685.908 122.454 cv
684.251 122.454 682.908 121.112 682.908 119.454 cv
682.908 117.797 684.251 116.454 685.908 116.454 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
689.518 121.813 mo
691.175 121.813 692.518 123.157 692.518 124.813 cv
692.518 126.47 691.175 127.813 689.518 127.813 cv
687.861 127.813 686.518 126.47 686.518 124.813 cv
686.518 123.157 687.861 121.813 689.518 121.813 cv
cp
0 0 0 0 cmyk
f
689.518 121.813 mo
691.175 121.813 692.518 123.157 692.518 124.813 cv
692.518 126.47 691.175 127.813 689.518 127.813 cv
687.861 127.813 686.518 126.47 686.518 124.813 cv
686.518 123.157 687.861 121.813 689.518 121.813 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
693.706 121.819 mo
695.363 121.819 696.706 123.163 696.706 124.819 cv
696.706 126.476 695.363 127.819 693.706 127.819 cv
692.049 127.819 690.706 126.476 690.706 124.819 cv
690.706 123.163 692.049 121.819 693.706 121.819 cv
cp
0 0 0 0 cmyk
f
693.706 121.819 mo
695.363 121.819 696.706 123.163 696.706 124.819 cv
696.706 126.476 695.363 127.819 693.706 127.819 cv
692.049 127.819 690.706 126.476 690.706 124.819 cv
690.706 123.163 692.049 121.819 693.706 121.819 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
697.316 120.217 mo
698.973 120.217 700.316 121.561 700.316 123.217 cv
700.316 124.875 698.973 126.217 697.316 126.217 cv
695.659 126.217 694.316 124.875 694.316 123.217 cv
694.316 121.561 695.659 120.217 697.316 120.217 cv
cp
0 0 0 0 cmyk
f
697.316 120.217 mo
698.973 120.217 700.316 121.561 700.316 123.217 cv
700.316 124.875 698.973 126.217 697.316 126.217 cv
695.659 126.217 694.316 124.875 694.316 123.217 cv
694.316 121.561 695.659 120.217 697.316 120.217 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
700.313 123.434 mo
701.97 123.434 703.313 124.778 703.313 126.434 cv
703.313 128.091 701.97 129.434 700.313 129.434 cv
698.656 129.434 697.313 128.091 697.313 126.434 cv
697.313 124.778 698.656 123.434 700.313 123.434 cv
cp
0 0 0 0 cmyk
f
700.313 123.434 mo
701.97 123.434 703.313 124.778 703.313 126.434 cv
703.313 128.091 701.97 129.434 700.313 129.434 cv
698.656 129.434 697.313 128.091 697.313 126.434 cv
697.313 124.778 698.656 123.434 700.313 123.434 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
705.729 124.512 mo
707.385 124.512 708.729 125.856 708.729 127.512 cv
708.729 129.169 707.385 130.512 705.729 130.512 cv
704.071 130.512 702.729 129.169 702.729 127.512 cv
702.729 125.856 704.071 124.512 705.729 124.512 cv
cp
0 0 0 0 cmyk
f
705.729 124.512 mo
707.385 124.512 708.729 125.856 708.729 127.512 cv
708.729 129.169 707.385 130.512 705.729 130.512 cv
704.071 130.512 702.729 129.169 702.729 127.512 cv
702.729 125.856 704.071 124.512 705.729 124.512 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
707.533 136.295 mo
709.19 136.295 710.533 137.638 710.533 139.295 cv
710.533 140.952 709.19 142.295 707.533 142.295 cv
705.876 142.295 704.533 140.952 704.533 139.295 cv
704.533 137.638 705.876 136.295 707.533 136.295 cv
cp
0 0 0 0 cmyk
f
707.533 136.295 mo
709.19 136.295 710.533 137.638 710.533 139.295 cv
710.533 140.952 709.19 142.295 707.533 142.295 cv
705.876 142.295 704.533 140.952 704.533 139.295 cv
704.533 137.638 705.876 136.295 707.533 136.295 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
711.144 140.048 mo
712.801 140.048 714.144 141.391 714.144 143.048 cv
714.144 144.706 712.801 146.048 711.144 146.048 cv
709.486 146.048 708.144 144.706 708.144 143.048 cv
708.144 141.391 709.486 140.048 711.144 140.048 cv
cp
0 0 0 0 cmyk
f
711.144 140.048 mo
712.801 140.048 714.144 141.391 714.144 143.048 cv
714.144 144.706 712.801 146.048 711.144 146.048 cv
709.486 146.048 708.144 144.706 708.144 143.048 cv
708.144 141.391 709.486 140.048 711.144 140.048 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
711.721 133.624 mo
713.378 133.624 714.721 134.967 714.721 136.624 cv
714.721 138.281 713.378 139.624 711.721 139.624 cv
710.064 139.624 708.721 138.281 708.721 136.624 cv
708.721 134.967 710.064 133.624 711.721 133.624 cv
cp
0 0 0 0 cmyk
f
711.721 133.624 mo
713.378 133.624 714.721 134.967 714.721 136.624 cv
714.721 138.281 713.378 139.624 711.721 139.624 cv
710.064 139.624 708.721 138.281 708.721 136.624 cv
708.721 134.967 710.064 133.624 711.721 133.624 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
714.14 92.9326 mo
715.797 92.9326 717.14 94.2759 717.14 95.9326 cv
717.14 97.5894 715.797 98.9321 714.14 98.9321 cv
712.483 98.9321 711.14 97.5894 711.14 95.9326 cv
711.14 94.2759 712.483 92.9326 714.14 92.9326 cv
cp
0 0 0 0 cmyk
f
714.14 92.9326 mo
715.797 92.9326 717.14 94.2759 717.14 95.9326 cv
717.14 97.5894 715.797 98.9321 714.14 98.9321 cv
712.483 98.9321 711.14 97.5894 711.14 95.9326 cv
711.14 94.2759 712.483 92.9326 714.14 92.9326 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
714.718 65.0903 mo
716.375 65.0903 717.718 66.4331 717.718 68.0903 cv
717.718 69.7471 716.375 71.0903 714.718 71.0903 cv
713.061 71.0903 711.718 69.7471 711.718 68.0903 cv
711.718 66.4331 713.061 65.0903 714.718 65.0903 cv
cp
0 0 0 0 cmyk
f
714.718 65.0903 mo
716.375 65.0903 717.718 66.4331 717.718 68.0903 cv
717.718 69.7471 716.375 71.0903 714.718 71.0903 cv
713.061 71.0903 711.718 69.7471 711.718 68.0903 cv
711.718 66.4331 713.061 65.0903 714.718 65.0903 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
715.331 81.1543 mo
716.988 81.1543 718.331 82.4976 718.331 84.1543 cv
718.331 85.811 716.988 87.1543 715.331 87.1543 cv
713.675 87.1543 712.331 85.811 712.331 84.1543 cv
712.331 82.4976 713.675 81.1543 715.331 81.1543 cv
cp
0 0 0 0 cmyk
f
715.331 81.1543 mo
716.988 81.1543 718.331 82.4976 718.331 84.1543 cv
718.331 85.811 716.988 87.1543 715.331 87.1543 cv
713.675 87.1543 712.331 85.811 712.331 84.1543 cv
712.331 82.4976 713.675 81.1543 715.331 81.1543 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
717.137 97.7563 mo
718.793 97.7563 720.137 99.0991 720.137 100.756 cv
720.137 102.413 718.793 103.756 717.137 103.756 cv
715.479 103.756 714.137 102.413 714.137 100.756 cv
714.137 99.0991 715.479 97.7563 717.137 97.7563 cv
cp
0 0 0 0 cmyk
f
717.137 97.7563 mo
718.793 97.7563 720.137 99.0991 720.137 100.756 cv
720.137 102.413 718.793 103.756 717.137 103.756 cv
715.479 103.756 714.137 102.413 714.137 100.756 cv
714.137 99.0991 715.479 97.7563 717.137 97.7563 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
717.714 149.161 mo
719.371 149.161 720.714 150.503 720.714 152.161 cv
720.714 153.817 719.371 155.161 717.714 155.161 cv
716.058 155.161 714.714 153.817 714.714 152.161 cv
714.714 150.503 716.058 149.161 717.714 149.161 cv
cp
0 0 0 0 cmyk
f
717.714 149.161 mo
719.371 149.161 720.714 150.503 720.714 152.161 cv
720.714 153.817 719.371 155.161 717.714 155.161 cv
716.058 155.161 714.714 153.817 714.714 152.161 cv
714.714 150.503 716.058 149.161 717.714 149.161 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
717.714 124.53 mo
719.371 124.53 720.714 125.873 720.714 127.53 cv
720.714 129.186 719.371 130.53 717.714 130.53 cv
716.058 130.53 714.714 129.186 714.714 127.53 cv
714.714 125.873 716.058 124.53 717.714 124.53 cv
cp
0 0 0 0 cmyk
f
717.714 124.53 mo
719.371 124.53 720.714 125.873 720.714 127.53 cv
720.714 129.186 719.371 130.53 717.714 130.53 cv
716.058 130.53 714.714 129.186 714.714 127.53 cv
714.714 125.873 716.058 124.53 717.714 124.53 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
721.938 131.497 mo
723.595 131.497 724.938 132.838 724.938 134.497 cv
724.938 136.153 723.595 137.497 721.938 137.497 cv
720.281 137.497 718.938 136.153 718.938 134.497 cv
718.938 132.838 720.281 131.497 721.938 131.497 cv
cp
0 0 0 0 cmyk
f
721.938 131.497 mo
723.595 131.497 724.938 132.838 724.938 134.497 cv
724.938 136.153 723.595 137.497 721.938 137.497 cv
720.281 137.497 718.938 136.153 718.938 134.497 cv
718.938 132.838 720.281 131.497 721.938 131.497 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
724.321 127.75 mo
725.978 127.75 727.321 129.094 727.321 130.75 cv
727.321 132.408 725.978 133.75 724.321 133.75 cv
722.664 133.75 721.321 132.408 721.321 130.75 cv
721.321 129.094 722.664 127.75 724.321 127.75 cv
cp
0 0 0 0 cmyk
f
724.321 127.75 mo
725.978 127.75 727.321 129.094 727.321 130.75 cv
727.321 132.408 725.978 133.75 724.321 133.75 cv
722.664 133.75 721.321 132.408 721.321 130.75 cv
721.321 129.094 722.664 127.75 724.321 127.75 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
726.126 80.6338 mo
727.783 80.6338 729.126 81.9771 729.126 83.6338 cv
729.126 85.2905 727.783 86.6338 726.126 86.6338 cv
724.469 86.6338 723.126 85.2905 723.126 83.6338 cv
723.126 81.9771 724.469 80.6338 726.126 80.6338 cv
cp
0 0 0 0 cmyk
f
726.126 80.6338 mo
727.783 80.6338 729.126 81.9771 729.126 83.6338 cv
729.126 85.2905 727.783 86.6338 726.126 86.6338 cv
724.469 86.6338 723.126 85.2905 723.126 83.6338 cv
723.126 81.9771 724.469 80.6338 726.126 80.6338 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
726.74 132.573 mo
728.396 132.573 729.74 133.917 729.74 135.573 cv
729.74 137.23 728.396 138.573 726.74 138.573 cv
725.083 138.573 723.74 137.23 723.74 135.573 cv
723.74 133.917 725.083 132.573 726.74 132.573 cv
cp
0 0 0 0 cmyk
f
726.74 132.573 mo
728.396 132.573 729.74 133.917 729.74 135.573 cv
729.74 137.23 728.396 138.573 726.74 138.573 cv
725.083 138.573 723.74 137.23 723.74 135.573 cv
723.74 133.917 725.083 132.573 726.74 132.573 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
726.74 64.5713 mo
728.396 64.5713 729.74 65.9141 729.74 67.5713 cv
729.74 69.228 728.396 70.5713 726.74 70.5713 cv
725.083 70.5713 723.74 69.228 723.74 67.5713 cv
723.74 65.9141 725.083 64.5713 726.74 64.5713 cv
cp
0 0 0 0 cmyk
f
726.74 64.5713 mo
728.396 64.5713 729.74 65.9141 729.74 67.5713 cv
729.74 69.228 728.396 70.5713 726.74 70.5713 cv
725.083 70.5713 723.74 69.228 723.74 67.5713 cv
723.74 65.9141 725.083 64.5713 726.74 64.5713 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
728.545 56.542 mo
730.202 56.542 731.545 57.8853 731.545 59.542 cv
731.545 61.1987 730.202 62.542 728.545 62.542 cv
726.888 62.542 725.545 61.1987 725.545 59.542 cv
725.545 57.8853 726.888 56.542 728.545 56.542 cv
cp
0 0 0 0 cmyk
f
728.545 56.542 mo
730.202 56.542 731.545 57.8853 731.545 59.542 cv
731.545 61.1987 730.202 62.542 728.545 62.542 cv
726.888 62.542 725.545 61.1987 725.545 59.542 cv
725.545 57.8853 726.888 56.542 728.545 56.542 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
733.347 64.5801 mo
735.004 64.5801 736.347 65.9233 736.347 67.5801 cv
736.347 69.2368 735.004 70.5801 733.347 70.5801 cv
731.689 70.5801 730.347 69.2368 730.347 67.5801 cv
730.347 65.9233 731.689 64.5801 733.347 64.5801 cv
cp
0 0 0 0 cmyk
f
733.347 64.5801 mo
735.004 64.5801 736.347 65.9233 736.347 67.5801 cv
736.347 69.2368 735.004 70.5801 733.347 70.5801 cv
731.689 70.5801 730.347 69.2368 730.347 67.5801 cv
730.347 65.9233 731.689 64.5801 733.347 64.5801 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
736.343 62.4424 mo
738 62.4424 739.343 63.7856 739.343 65.4424 cv
739.343 67.0991 738 68.4424 736.343 68.4424 cv
734.687 68.4424 733.343 67.0991 733.343 65.4424 cv
733.343 63.7856 734.687 62.4424 736.343 62.4424 cv
cp
0 0 0 0 cmyk
f
736.343 62.4424 mo
738 62.4424 739.343 63.7856 739.343 65.4424 cv
739.343 67.0991 738 68.4424 736.343 68.4424 cv
734.687 68.4424 733.343 67.0991 733.343 65.4424 cv
733.343 63.7856 734.687 62.4424 736.343 62.4424 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
739.34 65.6592 mo
740.996 65.6592 742.34 67.0024 742.34 68.6592 cv
742.34 70.3159 740.996 71.6592 739.34 71.6592 cv
737.683 71.6592 736.34 70.3159 736.34 68.6592 cv
736.34 67.0024 737.683 65.6592 739.34 65.6592 cv
cp
0 0 0 0 cmyk
f
739.34 65.6592 mo
740.996 65.6592 742.34 67.0024 742.34 68.6592 cv
742.34 70.3159 740.996 71.6592 739.34 71.6592 cv
737.683 71.6592 736.34 70.3159 736.34 68.6592 cv
736.34 67.0024 737.683 65.6592 739.34 65.6592 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
741.723 74.2295 mo
743.379 74.2295 744.723 75.5728 744.723 77.2295 cv
744.723 78.8867 743.379 80.2295 741.723 80.2295 cv
740.065 80.2295 738.723 78.8867 738.723 77.2295 cv
738.723 75.5728 740.065 74.2295 741.723 74.2295 cv
cp
0 0 0 0 cmyk
f
741.723 74.2295 mo
743.379 74.2295 744.723 75.5728 744.723 77.2295 cv
744.723 78.8867 743.379 80.2295 741.723 80.2295 cv
740.065 80.2295 738.723 78.8867 738.723 77.2295 cv
738.723 75.5728 740.065 74.2295 741.723 74.2295 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
746.523 60.3145 mo
748.181 60.3145 749.523 61.6577 749.523 63.3145 cv
749.523 64.9712 748.181 66.3145 746.523 66.3145 cv
744.867 66.3145 743.523 64.9712 743.523 63.3145 cv
743.523 61.6577 744.867 60.3145 746.523 60.3145 cv
cp
0 0 0 0 cmyk
f
746.523 60.3145 mo
748.181 60.3145 749.523 61.6577 749.523 63.3145 cv
749.523 64.9712 748.181 66.3145 746.523 66.3145 cv
744.867 66.3145 743.523 64.9712 743.523 63.3145 cv
743.523 61.6577 744.867 60.3145 746.523 60.3145 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
754.322 65.6797 mo
755.979 65.6797 757.322 67.0225 757.322 68.6797 cv
757.322 70.3364 755.979 71.6797 754.322 71.6797 cv
752.665 71.6797 751.322 70.3364 751.322 68.6797 cv
751.322 67.0225 752.665 65.6797 754.322 65.6797 cv
cp
0 0 0 0 cmyk
f
754.322 65.6797 mo
755.979 65.6797 757.322 67.0225 757.322 68.6797 cv
757.322 70.3364 755.979 71.6797 754.322 71.6797 cv
752.665 71.6797 751.322 70.3364 751.322 68.6797 cv
751.322 67.0225 752.665 65.6797 754.322 65.6797 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
756.741 61.9351 mo
758.398 61.9351 759.741 63.2778 759.741 64.9351 cv
759.741 66.5918 758.398 67.9351 756.741 67.9351 cv
755.084 67.9351 753.741 66.5918 753.741 64.9351 cv
753.741 63.2778 755.084 61.9351 756.741 61.9351 cv
cp
0 0 0 0 cmyk
f
756.741 61.9351 mo
758.398 61.9351 759.741 63.2778 759.741 64.9351 cv
759.741 66.5918 758.398 67.9351 756.741 67.9351 cv
755.084 67.9351 753.741 66.5918 753.741 64.9351 cv
753.741 63.2778 755.084 61.9351 756.741 61.9351 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
760.929 56.0508 mo
762.586 56.0508 763.929 57.3936 763.929 59.0508 cv
763.929 60.7075 762.586 62.0508 760.929 62.0508 cv
759.272 62.0508 757.929 60.7075 757.929 59.0508 cv
757.929 57.3936 759.272 56.0508 760.929 56.0508 cv
cp
0 0 0 0 cmyk
f
760.929 56.0508 mo
762.586 56.0508 763.929 57.3936 763.929 59.0508 cv
763.929 60.7075 762.586 62.0508 760.929 62.0508 cv
759.272 62.0508 757.929 60.7075 757.929 59.0508 cv
757.929 57.3936 759.272 56.0508 760.929 56.0508 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
764.539 58.1973 mo
766.196 58.1973 767.539 59.5405 767.539 61.1973 cv
767.539 62.854 766.196 64.1973 764.539 64.1973 cv
762.883 64.1973 761.539 62.854 761.539 61.1973 cv
761.539 59.5405 762.883 58.1973 764.539 58.1973 cv
cp
0 0 0 0 cmyk
f
764.539 58.1973 mo
766.196 58.1973 767.539 59.5405 767.539 61.1973 cv
767.539 62.854 766.196 64.1973 764.539 64.1973 cv
762.883 64.1973 761.539 62.854 761.539 61.1973 cv
761.539 59.5405 762.883 58.1973 764.539 58.1973 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
768.149 58.7378 mo
769.807 58.7378 771.149 60.0811 771.149 61.7378 cv
771.149 63.3945 769.807 64.7378 768.149 64.7378 cv
766.492 64.7378 765.149 63.3945 765.149 61.7378 cv
765.149 60.0811 766.492 58.7378 768.149 58.7378 cv
cp
0 0 0 0 cmyk
f
768.149 58.7378 mo
769.807 58.7378 771.149 60.0811 771.149 61.7378 cv
771.149 63.3945 769.807 64.7378 768.149 64.7378 cv
766.492 64.7378 765.149 63.3945 765.149 61.7378 cv
765.149 60.0811 766.492 58.7378 768.149 58.7378 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
772.338 60.8853 mo
773.994 60.8853 775.338 62.2285 775.338 63.8853 cv
775.338 65.542 773.994 66.8853 772.338 66.8853 cv
770.681 66.8853 769.338 65.542 769.338 63.8853 cv
769.338 62.2285 770.681 60.8853 772.338 60.8853 cv
cp
0 0 0 0 cmyk
f
772.338 60.8853 mo
773.994 60.8853 775.338 62.2285 775.338 63.8853 cv
775.338 65.542 773.994 66.8853 772.338 66.8853 cv
770.681 66.8853 769.338 65.542 769.338 63.8853 cv
769.338 62.2285 770.681 60.8853 772.338 60.8853 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
775.947 64.1025 mo
777.604 64.1025 778.947 65.4458 778.947 67.1025 cv
778.947 68.7593 777.604 70.1025 775.947 70.1025 cv
774.291 70.1025 772.947 68.7593 772.947 67.1025 cv
772.947 65.4458 774.291 64.1025 775.947 64.1025 cv
cp
0 0 0 0 cmyk
f
775.947 64.1025 mo
777.604 64.1025 778.947 65.4458 778.947 67.1025 cv
778.947 68.7593 777.604 70.1025 775.947 70.1025 cv
774.291 70.1025 772.947 68.7593 772.947 67.1025 cv
772.947 65.4458 774.291 64.1025 775.947 64.1025 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
780.749 61.4321 mo
782.406 61.4321 783.749 62.7754 783.749 64.4321 cv
783.749 66.0889 782.406 67.4321 780.749 67.4321 cv
779.093 67.4321 777.749 66.0889 777.749 64.4321 cv
777.749 62.7754 779.093 61.4321 780.749 61.4321 cv
cp
0 0 0 0 cmyk
f
780.749 61.4321 mo
782.406 61.4321 783.749 62.7754 783.749 64.4321 cv
783.749 66.0889 782.406 67.4321 780.749 67.4321 cv
779.093 67.4321 777.749 66.0889 777.749 64.4321 cv
777.749 62.7754 779.093 61.4321 780.749 61.4321 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
782.555 65.1826 mo
784.211 65.1826 785.555 66.5254 785.555 68.1826 cv
785.555 69.8394 784.211 71.1826 782.555 71.1826 cv
780.897 71.1826 779.555 69.8394 779.555 68.1826 cv
779.555 66.5254 780.897 65.1826 782.555 65.1826 cv
cp
0 0 0 0 cmyk
f
782.555 65.1826 mo
784.211 65.1826 785.555 66.5254 785.555 68.1826 cv
785.555 69.8394 784.211 71.1826 782.555 71.1826 cv
780.897 71.1826 779.555 69.8394 779.555 68.1826 cv
779.555 66.5254 780.897 65.1826 782.555 65.1826 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
783.132 121.941 mo
784.789 121.941 786.132 123.284 786.132 124.941 cv
786.132 126.598 784.789 127.941 783.132 127.941 cv
781.475 127.941 780.132 126.598 780.132 124.941 cv
780.132 123.284 781.475 121.941 783.132 121.941 cv
cp
0 0 0 0 cmyk
f
783.132 121.941 mo
784.789 121.941 786.132 123.284 786.132 124.941 cv
786.132 126.598 784.789 127.941 783.132 127.941 cv
781.475 127.941 780.132 126.598 780.132 124.941 cv
780.132 123.284 781.475 121.941 783.132 121.941 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
783.746 141.218 mo
785.402 141.218 786.746 142.561 786.746 144.218 cv
786.746 145.875 785.402 147.218 783.746 147.218 cv
782.089 147.218 780.746 145.875 780.746 144.218 cv
780.746 142.561 782.089 141.218 783.746 141.218 cv
cp
0 0 0 0 cmyk
f
783.746 141.218 mo
785.402 141.218 786.746 142.561 786.746 144.218 cv
786.746 145.875 785.402 147.218 783.746 147.218 cv
782.089 147.218 780.746 145.875 780.746 144.218 cv
780.746 142.561 782.089 141.218 783.746 141.218 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
785.551 134.26 mo
787.208 134.26 788.551 135.603 788.551 137.26 cv
788.551 138.917 787.208 140.26 785.551 140.26 cv
783.895 140.26 782.551 138.917 782.551 137.26 cv
782.551 135.603 783.895 134.26 785.551 134.26 cv
cp
0 0 0 0 cmyk
f
785.551 134.26 mo
787.208 134.26 788.551 135.603 788.551 137.26 cv
788.551 138.917 787.208 140.26 785.551 140.26 cv
783.895 140.26 782.551 138.917 782.551 137.26 cv
782.551 135.603 783.895 134.26 785.551 134.26 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
786.129 96.2437 mo
787.785 96.2437 789.129 97.5864 789.129 99.2437 cv
789.129 100.901 787.785 102.244 786.129 102.244 cv
784.472 102.244 783.129 100.901 783.129 99.2437 cv
783.129 97.5864 784.472 96.2437 786.129 96.2437 cv
cp
0 0 0 0 cmyk
f
786.129 96.2437 mo
787.785 96.2437 789.129 97.5864 789.129 99.2437 cv
789.129 100.901 787.785 102.244 786.129 102.244 cv
784.472 102.244 783.129 100.901 783.129 99.2437 cv
783.129 97.5864 784.472 96.2437 786.129 96.2437 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
787.356 139.082 mo
789.013 139.082 790.356 140.424 790.356 142.082 cv
790.356 143.739 789.013 145.082 787.356 145.082 cv
785.699 145.082 784.356 143.739 784.356 142.082 cv
784.356 140.424 785.699 139.082 787.356 139.082 cv
cp
0 0 0 0 cmyk
f
787.356 139.082 mo
789.013 139.082 790.356 140.424 790.356 142.082 cv
790.356 143.739 789.013 145.082 787.356 145.082 cv
785.699 145.082 784.356 143.739 784.356 142.082 cv
784.356 140.424 785.699 139.082 787.356 139.082 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
790.93 124.629 mo
792.587 124.629 793.93 125.972 793.93 127.629 cv
793.93 129.286 792.587 130.629 790.93 130.629 cv
789.273 130.629 787.93 129.286 787.93 127.629 cv
787.93 125.972 789.273 124.629 790.93 124.629 cv
cp
0 0 0 0 cmyk
f
790.93 124.629 mo
792.587 124.629 793.93 125.972 793.93 127.629 cv
793.93 129.286 792.587 130.629 790.93 130.629 cv
789.273 130.629 787.93 129.286 787.93 127.629 cv
787.93 125.972 789.273 124.629 790.93 124.629 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
793.963 128.917 mo
795.619 128.917 796.963 130.26 796.963 131.917 cv
796.963 133.573 795.619 134.917 793.963 134.917 cv
792.306 134.917 790.963 133.573 790.963 131.917 cv
790.963 130.26 792.306 128.917 793.963 128.917 cv
cp
0 0 0 0 cmyk
f
793.963 128.917 mo
795.619 128.917 796.963 130.26 796.963 131.917 cv
796.963 133.573 795.619 134.917 793.963 134.917 cv
792.306 134.917 790.963 133.573 790.963 131.917 cv
790.963 130.26 792.306 128.917 793.963 128.917 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
798.765 128.922 mo
800.422 128.922 801.765 130.266 801.765 131.922 cv
801.765 133.581 800.422 134.922 798.765 134.922 cv
797.107 134.922 795.765 133.581 795.765 131.922 cv
795.765 130.266 797.107 128.922 798.765 128.922 cv
cp
0 0 0 0 cmyk
f
798.765 128.922 mo
800.422 128.922 801.765 130.266 801.765 131.922 cv
801.765 133.581 800.422 134.922 798.765 134.922 cv
797.107 134.922 795.765 133.581 795.765 131.922 cv
795.765 130.266 797.107 128.922 798.765 128.922 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
801.147 135.887 mo
802.804 135.887 804.147 137.231 804.147 138.887 cv
804.147 140.544 802.804 141.887 801.147 141.887 cv
799.49 141.887 798.147 140.544 798.147 138.887 cv
798.147 137.231 799.49 135.887 801.147 135.887 cv
cp
0 0 0 0 cmyk
f
801.147 135.887 mo
802.804 135.887 804.147 137.231 804.147 138.887 cv
804.147 140.544 802.804 141.887 801.147 141.887 cv
799.49 141.887 798.147 140.544 798.147 138.887 cv
798.147 137.231 799.49 135.887 801.147 135.887 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
804.758 143.389 mo
806.414 143.389 807.758 144.731 807.758 146.389 cv
807.758 148.045 806.414 149.389 804.758 149.389 cv
803.101 149.389 801.758 148.045 801.758 146.389 cv
801.758 144.731 803.101 143.389 804.758 143.389 cv
cp
0 0 0 0 cmyk
f
804.758 143.389 mo
806.414 143.389 807.758 144.731 807.758 146.389 cv
807.758 148.045 806.414 149.389 804.758 149.389 cv
803.101 149.389 801.758 148.045 801.758 146.389 cv
801.758 144.731 803.101 143.389 804.758 143.389 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
806.563 72.7114 mo
808.22 72.7114 809.563 74.0547 809.563 75.7114 cv
809.563 77.3682 808.22 78.7114 806.563 78.7114 cv
804.906 78.7114 803.563 77.3682 803.563 75.7114 cv
803.563 74.0547 804.906 72.7114 806.563 72.7114 cv
cp
0 0 0 0 cmyk
f
806.563 72.7114 mo
808.22 72.7114 809.563 74.0547 809.563 75.7114 cv
809.563 77.3682 808.22 78.7114 806.563 78.7114 cv
804.906 78.7114 803.563 77.3682 803.563 75.7114 cv
803.563 74.0547 804.906 72.7114 806.563 72.7114 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
807.141 140.715 mo
808.797 140.715 810.141 142.057 810.141 143.715 cv
810.141 145.372 808.797 146.715 807.141 146.715 cv
805.483 146.715 804.141 145.372 804.141 143.715 cv
804.141 142.057 805.483 140.715 807.141 140.715 cv
cp
0 0 0 0 cmyk
f
807.141 140.715 mo
808.797 140.715 810.141 142.057 810.141 143.715 cv
810.141 145.372 808.797 146.715 807.141 146.715 cv
805.483 146.715 804.141 145.372 804.141 143.715 cv
804.141 142.057 805.483 140.715 807.141 140.715 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
807.141 55.5781 mo
808.797 55.5781 810.141 56.9209 810.141 58.5781 cv
810.141 60.2349 808.797 61.5781 807.141 61.5781 cv
805.483 61.5781 804.141 60.2349 804.141 58.5781 cv
804.141 56.9209 805.483 55.5781 807.141 55.5781 cv
cp
0 0 0 0 cmyk
f
807.141 55.5781 mo
808.797 55.5781 810.141 56.9209 810.141 58.5781 cv
810.141 60.2349 808.797 61.5781 807.141 61.5781 cv
805.483 61.5781 804.141 60.2349 804.141 58.5781 cv
804.141 56.9209 805.483 55.5781 807.141 55.5781 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
807.754 67.8945 mo
809.411 67.8945 810.754 69.2373 810.754 70.8945 cv
810.754 72.5513 809.411 73.8945 807.754 73.8945 cv
806.098 73.8945 804.754 72.5513 804.754 70.8945 cv
804.754 69.2373 806.098 67.8945 807.754 67.8945 cv
cp
0 0 0 0 cmyk
f
807.754 67.8945 mo
809.411 67.8945 810.754 69.2373 810.754 70.8945 cv
810.754 72.5513 809.411 73.8945 807.754 73.8945 cv
806.098 73.8945 804.754 72.5513 804.754 70.8945 cv
804.754 69.2373 806.098 67.8945 807.754 67.8945 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
810.137 57.1885 mo
811.794 57.1885 813.137 58.5317 813.137 60.1885 cv
813.137 61.8452 811.794 63.1885 810.137 63.1885 cv
808.48 63.1885 807.137 61.8452 807.137 60.1885 cv
807.137 58.5317 808.48 57.1885 810.137 57.1885 cv
cp
0 0 0 0 cmyk
f
810.137 57.1885 mo
811.794 57.1885 813.137 58.5317 813.137 60.1885 cv
813.137 61.8452 811.794 63.1885 810.137 63.1885 cv
808.48 63.1885 807.137 61.8452 807.137 60.1885 cv
807.137 58.5317 808.48 57.1885 810.137 57.1885 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
811.364 60.4028 mo
813.021 60.4028 814.364 61.7461 814.364 63.4028 cv
814.364 65.0596 813.021 66.4028 811.364 66.4028 cv
809.707 66.4028 808.364 65.0596 808.364 63.4028 cv
808.364 61.7461 809.707 60.4028 811.364 60.4028 cv
cp
0 0 0 0 cmyk
f
811.364 60.4028 mo
813.021 60.4028 814.364 61.7461 814.364 63.4028 cv
814.364 65.0596 813.021 66.4028 811.364 66.4028 cv
809.707 66.4028 808.364 65.0596 808.364 63.4028 cv
808.364 61.7461 809.707 60.4028 811.364 60.4028 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
813.133 55.5859 mo
814.79 55.5859 816.133 56.9292 816.133 58.5859 cv
816.133 60.2432 814.79 61.5859 813.133 61.5859 cv
811.477 61.5859 810.133 60.2432 810.133 58.5859 cv
810.133 56.9292 811.477 55.5859 813.133 55.5859 cv
cp
0 0 0 0 cmyk
f
813.133 55.5859 mo
814.79 55.5859 816.133 56.9292 816.133 58.5859 cv
816.133 60.2432 814.79 61.5859 813.133 61.5859 cv
811.477 61.5859 810.133 60.2432 810.133 58.5859 cv
810.133 56.9292 811.477 55.5859 813.133 55.5859 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
814.361 70.5801 mo
816.018 70.5801 817.361 71.9233 817.361 73.5801 cv
817.361 75.2373 816.018 76.5801 814.361 76.5801 cv
812.704 76.5801 811.361 75.2373 811.361 73.5801 cv
811.361 71.9233 812.704 70.5801 814.361 70.5801 cv
cp
0 0 0 0 cmyk
f
814.361 70.5801 mo
816.018 70.5801 817.361 71.9233 817.361 73.5801 cv
817.361 75.2373 816.018 76.5801 814.361 76.5801 cv
812.704 76.5801 811.361 75.2373 811.361 73.5801 cv
811.361 71.9233 812.704 70.5801 814.361 70.5801 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
815.553 59.873 mo
817.209 59.873 818.553 61.2163 818.553 62.873 cv
818.553 64.5303 817.209 65.873 815.553 65.873 cv
813.896 65.873 812.553 64.5303 812.553 62.873 cv
812.553 61.2163 813.896 59.873 815.553 59.873 cv
cp
0 0 0 0 cmyk
f
815.553 59.873 mo
817.209 59.873 818.553 61.2163 818.553 62.873 cv
818.553 64.5303 817.209 65.873 815.553 65.873 cv
813.896 65.873 812.553 64.5303 812.553 62.873 cv
812.553 61.2163 813.896 59.873 815.553 59.873 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
820.354 57.2021 mo
822.011 57.2021 823.354 58.5454 823.354 60.2021 cv
823.354 61.8594 822.011 63.2021 820.354 63.2021 cv
818.697 63.2021 817.354 61.8594 817.354 60.2021 cv
817.354 58.5454 818.697 57.2021 820.354 57.2021 cv
cp
0 0 0 0 cmyk
f
820.354 57.2021 mo
822.011 57.2021 823.354 58.5454 823.354 60.2021 cv
823.354 61.8594 822.011 63.2021 820.354 63.2021 cv
818.697 63.2021 817.354 61.8594 817.354 60.2021 cv
817.354 58.5454 818.697 57.2021 820.354 57.2021 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
822.736 62.5601 mo
824.394 62.5601 825.736 63.9033 825.736 65.5601 cv
825.736 67.2168 824.394 68.5601 822.736 68.5601 cv
821.08 68.5601 819.736 67.2168 819.736 65.5601 cv
819.736 63.9033 821.08 62.5601 822.736 62.5601 cv
cp
0 0 0 0 cmyk
f
822.736 62.5601 mo
824.394 62.5601 825.736 63.9033 825.736 65.5601 cv
825.736 67.2168 824.394 68.5601 822.736 68.5601 cv
821.08 68.5601 819.736 67.2168 819.736 65.5601 cv
819.736 63.9033 821.08 62.5601 822.736 62.5601 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
825.77 53.9971 mo
827.426 53.9971 828.77 55.3403 828.77 56.9971 cv
828.77 58.6538 827.426 59.9971 825.77 59.9971 cv
824.112 59.9971 822.77 58.6538 822.77 56.9971 cv
822.77 55.3403 824.112 53.9971 825.77 53.9971 cv
cp
0 0 0 0 cmyk
f
825.77 53.9971 mo
827.426 53.9971 828.77 55.3403 828.77 56.9971 cv
828.77 58.6538 827.426 59.9971 825.77 59.9971 cv
824.112 59.9971 822.77 58.6538 822.77 56.9971 cv
822.77 55.3403 824.112 53.9971 825.77 53.9971 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
828.152 50.7876 mo
829.809 50.7876 831.152 52.1309 831.152 53.7876 cv
831.152 55.4443 829.809 56.7876 828.152 56.7876 cv
826.495 56.7876 825.152 55.4443 825.152 53.7876 cv
825.152 52.1309 826.495 50.7876 828.152 50.7876 cv
cp
0 0 0 0 cmyk
f
828.152 50.7876 mo
829.809 50.7876 831.152 52.1309 831.152 53.7876 cv
831.152 55.4443 829.809 56.7876 828.152 56.7876 cv
826.495 56.7876 825.152 55.4443 825.152 53.7876 cv
825.152 52.1309 826.495 50.7876 828.152 50.7876 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
829.344 135.926 mo
831 135.926 832.344 137.268 832.344 138.926 cv
832.344 140.583 831 141.926 829.344 141.926 cv
827.687 141.926 826.344 140.583 826.344 138.926 cv
826.344 137.268 827.687 135.926 829.344 135.926 cv
cp
0 0 0 0 cmyk
f
829.344 135.926 mo
831 135.926 832.344 137.268 832.344 138.926 cv
832.344 140.583 831 141.926 829.344 141.926 cv
827.687 141.926 826.344 140.583 826.344 138.926 cv
826.344 137.268 827.687 135.926 829.344 135.926 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
830.57 123.077 mo
832.228 123.077 833.57 124.42 833.57 126.077 cv
833.57 127.733 832.228 129.077 830.57 129.077 cv
828.914 129.077 827.57 127.733 827.57 126.077 cv
827.57 124.42 828.914 123.077 830.57 123.077 cv
cp
0 0 0 0 cmyk
f
830.57 123.077 mo
832.228 123.077 833.57 124.42 833.57 126.077 cv
833.57 127.733 832.228 129.077 830.57 129.077 cv
828.914 129.077 827.57 127.733 827.57 126.077 cv
827.57 124.42 828.914 123.077 830.57 123.077 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
832.34 127.898 mo
833.997 127.898 835.34 129.241 835.34 130.898 cv
835.34 132.555 833.997 133.898 832.34 133.898 cv
830.684 133.898 829.34 132.555 829.34 130.898 cv
829.34 129.241 830.684 127.898 832.34 127.898 cv
cp
0 0 0 0 cmyk
f
832.34 127.898 mo
833.997 127.898 835.34 129.241 835.34 130.898 cv
835.34 132.555 833.997 133.898 832.34 133.898 cv
830.684 133.898 829.34 132.555 829.34 130.898 cv
829.34 129.241 830.684 127.898 832.34 127.898 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
834.145 120.405 mo
835.802 120.405 837.145 121.747 837.145 123.405 cv
837.145 125.061 835.802 126.405 834.145 126.405 cv
832.488 126.405 831.145 125.061 831.145 123.405 cv
831.145 121.747 832.488 120.405 834.145 120.405 cv
cp
0 0 0 0 cmyk
f
834.145 120.405 mo
835.802 120.405 837.145 121.747 837.145 123.405 cv
837.145 125.061 835.802 126.405 834.145 126.405 cv
832.488 126.405 831.145 125.061 831.145 123.405 cv
831.145 121.747 832.488 120.405 834.145 120.405 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
835.95 129.509 mo
837.607 129.509 838.95 130.852 838.95 132.509 cv
838.95 134.167 837.607 135.509 835.95 135.509 cv
834.293 135.509 832.95 134.167 832.95 132.509 cv
832.95 130.852 834.293 129.509 835.95 129.509 cv
cp
0 0 0 0 cmyk
f
835.95 129.509 mo
837.607 129.509 838.95 130.852 838.95 132.509 cv
838.95 134.167 837.607 135.509 835.95 135.509 cv
834.293 135.509 832.95 134.167 832.95 132.509 cv
832.95 130.852 834.293 129.509 835.95 129.509 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
840.752 127.909 mo
842.408 127.909 843.752 129.252 843.752 130.909 cv
843.752 132.567 842.408 133.909 840.752 133.909 cv
839.095 133.909 837.752 132.567 837.752 130.909 cv
837.752 129.252 839.095 127.909 840.752 127.909 cv
cp
0 0 0 0 cmyk
f
840.752 127.909 mo
842.408 127.909 843.752 129.252 843.752 130.909 cv
843.752 132.567 842.408 133.909 840.752 133.909 cv
839.095 133.909 837.752 132.567 837.752 130.909 cv
837.752 129.252 839.095 127.909 840.752 127.909 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
846.167 128.988 mo
847.824 128.988 849.167 130.331 849.167 131.988 cv
849.167 133.645 847.824 134.988 846.167 134.988 cv
844.51 134.988 843.167 133.645 843.167 131.988 cv
843.167 130.331 844.51 128.988 846.167 128.988 cv
cp
0 0 0 0 cmyk
f
846.167 128.988 mo
847.824 128.988 849.167 130.331 849.167 131.988 cv
849.167 133.645 847.824 134.988 846.167 134.988 cv
844.51 134.988 843.167 133.645 843.167 131.988 cv
843.167 130.331 844.51 128.988 846.167 128.988 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
849.741 130.599 mo
851.398 130.599 852.741 131.942 852.741 133.599 cv
852.741 135.256 851.398 136.599 849.741 136.599 cv
848.084 136.599 846.741 135.256 846.741 133.599 cv
846.741 131.942 848.084 130.599 849.741 130.599 cv
cp
0 0 0 0 cmyk
f
849.741 130.599 mo
851.398 130.599 852.741 131.942 852.741 133.599 cv
852.741 135.256 851.398 136.599 849.741 136.599 cv
848.084 136.599 846.741 135.256 846.741 133.599 cv
846.741 131.942 848.084 130.599 849.741 130.599 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
852.773 126.855 mo
854.431 126.855 855.773 128.198 855.773 129.855 cv
855.773 131.512 854.431 132.855 852.773 132.855 cv
851.117 132.855 849.773 131.512 849.773 129.855 cv
849.773 128.198 851.117 126.855 852.773 126.855 cv
cp
0 0 0 0 cmyk
f
852.773 126.855 mo
854.431 126.855 855.773 128.198 855.773 129.855 cv
855.773 131.512 854.431 132.855 852.773 132.855 cv
851.117 132.855 849.773 131.512 849.773 129.855 cv
849.773 128.198 851.117 126.855 852.773 126.855 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
853.352 58.3184 mo
855.009 58.3184 856.352 59.6616 856.352 61.3184 cv
856.352 62.9751 855.009 64.3184 853.352 64.3184 cv
851.695 64.3184 850.352 62.9751 850.352 61.3184 cv
850.352 59.6616 851.695 58.3184 853.352 58.3184 cv
cp
0 0 0 0 cmyk
f
853.352 58.3184 mo
855.009 58.3184 856.352 59.6616 856.352 61.3184 cv
856.352 62.9751 855.009 64.3184 853.352 64.3184 cv
851.695 64.3184 850.352 62.9751 850.352 61.3184 cv
850.352 59.6616 851.695 58.3184 853.352 58.3184 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
853.965 73.3115 mo
855.622 73.3115 856.965 74.6548 856.965 76.3115 cv
856.965 77.9683 855.622 79.3115 853.965 79.3115 cv
852.309 79.3115 850.965 77.9683 850.965 76.3115 cv
850.965 74.6548 852.309 73.3115 853.965 73.3115 cv
cp
0 0 0 0 cmyk
f
853.965 73.3115 mo
855.622 73.3115 856.965 74.6548 856.965 76.3115 cv
856.965 77.9683 855.622 79.3115 853.965 79.3115 cv
852.309 79.3115 850.965 77.9683 850.965 76.3115 cv
850.965 74.6548 852.309 73.3115 853.965 73.3115 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
855.156 60.9976 mo
856.813 60.9976 858.156 62.3408 858.156 63.9976 cv
858.156 65.6543 856.813 66.9976 855.156 66.9976 cv
853.5 66.9976 852.156 65.6543 852.156 63.9976 cv
852.156 62.3408 853.5 60.9976 855.156 60.9976 cv
cp
0 0 0 0 cmyk
f
855.156 60.9976 mo
856.813 60.9976 858.156 62.3408 858.156 63.9976 cv
858.156 65.6543 856.813 66.9976 855.156 66.9976 cv
853.5 66.9976 852.156 65.6543 852.156 63.9976 cv
852.156 62.3408 853.5 60.9976 855.156 60.9976 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
859.345 55.6489 mo
861.002 55.6489 862.345 56.9922 862.345 58.6489 cv
862.345 60.3057 861.002 61.6489 859.345 61.6489 cv
857.688 61.6489 856.345 60.3057 856.345 58.6489 cv
856.345 56.9922 857.688 55.6489 859.345 55.6489 cv
cp
0 0 0 0 cmyk
f
859.345 55.6489 mo
861.002 55.6489 862.345 56.9922 862.345 58.6489 cv
862.345 60.3057 861.002 61.6489 859.345 61.6489 cv
857.688 61.6489 856.345 60.3057 856.345 58.6489 cv
856.345 56.9922 857.688 55.6489 859.345 55.6489 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
862.377 58.8657 mo
864.034 58.8657 865.377 60.209 865.377 61.8657 cv
865.377 63.5225 864.034 64.8657 862.377 64.8657 cv
860.721 64.8657 859.377 63.5225 859.377 61.8657 cv
859.377 60.209 860.721 58.8657 862.377 58.8657 cv
cp
0 0 0 0 cmyk
f
862.377 58.8657 mo
864.034 58.8657 865.377 60.209 865.377 61.8657 cv
865.377 63.5225 864.034 64.8657 862.377 64.8657 cv
860.721 64.8657 859.377 63.5225 859.377 61.8657 cv
859.377 60.209 860.721 58.8657 862.377 58.8657 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
864.76 61.5464 mo
866.417 61.5464 867.76 62.8896 867.76 64.5464 cv
867.76 66.2031 866.417 67.5464 864.76 67.5464 cv
863.104 67.5464 861.76 66.2031 861.76 64.5464 cv
861.76 62.8896 863.104 61.5464 864.76 61.5464 cv
cp
0 0 0 0 cmyk
f
864.76 61.5464 mo
866.417 61.5464 867.76 62.8896 867.76 64.5464 cv
867.76 66.2031 866.417 67.5464 864.76 67.5464 cv
863.104 67.5464 861.76 66.2031 861.76 64.5464 cv
861.76 62.8896 863.104 61.5464 864.76 61.5464 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
864.76 73.3262 mo
866.417 73.3262 867.76 74.6694 867.76 76.3262 cv
867.76 77.9829 866.417 79.3262 864.76 79.3262 cv
863.104 79.3262 861.76 77.9829 861.76 76.3262 cv
861.76 74.6694 863.104 73.3262 864.76 73.3262 cv
cp
0 0 0 0 cmyk
f
864.76 73.3262 mo
866.417 73.3262 867.76 74.6694 867.76 76.3262 cv
867.76 77.9829 866.417 79.3262 864.76 79.3262 cv
863.104 79.3262 861.76 77.9829 861.76 76.3262 cv
861.76 74.6694 863.104 73.3262 864.76 73.3262 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
865.951 82.9658 mo
867.608 82.9658 868.951 84.3091 868.951 85.9658 cv
868.951 87.623 867.608 88.9658 865.951 88.9658 cv
864.295 88.9658 862.951 87.623 862.951 85.9658 cv
862.951 84.3091 864.295 82.9658 865.951 82.9658 cv
cp
0 0 0 0 cmyk
f
865.951 82.9658 mo
867.608 82.9658 868.951 84.3091 868.951 85.9658 cv
868.951 87.623 867.608 88.9658 865.951 88.9658 cv
864.295 88.9658 862.951 87.623 862.951 85.9658 cv
862.951 84.3091 864.295 82.9658 865.951 82.9658 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
867.179 86.1802 mo
868.836 86.1802 870.179 87.5234 870.179 89.1802 cv
870.179 90.8369 868.836 92.1802 867.179 92.1802 cv
865.521 92.1802 864.179 90.8369 864.179 89.1802 cv
864.179 87.5234 865.521 86.1802 867.179 86.1802 cv
cp
0 0 0 0 cmyk
f
867.179 86.1802 mo
868.836 86.1802 870.179 87.5234 870.179 89.1802 cv
870.179 90.8369 868.836 92.1802 867.179 92.1802 cv
865.521 92.1802 864.179 90.8369 864.179 89.1802 cv
864.179 87.5234 865.521 86.1802 867.179 86.1802 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
867.179 139.19 mo
868.836 139.19 870.179 140.534 870.179 142.19 cv
870.179 143.846 868.836 145.19 867.179 145.19 cv
865.521 145.19 864.179 143.846 864.179 142.19 cv
864.179 140.534 865.521 139.19 867.179 139.19 cv
cp
0 0 0 0 cmyk
f
867.179 139.19 mo
868.836 139.19 870.179 140.534 870.179 142.19 cv
870.179 143.846 868.836 145.19 867.179 145.19 cv
865.521 145.19 864.179 143.846 864.179 142.19 cv
864.179 140.534 865.521 139.19 867.179 139.19 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
868.37 127.412 mo
870.027 127.412 871.37 128.754 871.37 130.412 cv
871.37 132.069 870.027 133.412 868.37 133.412 cv
866.713 133.412 865.37 132.069 865.37 130.412 cv
865.37 128.754 866.713 127.412 868.37 127.412 cv
cp
0 0 0 0 cmyk
f
868.37 127.412 mo
870.027 127.412 871.37 128.754 871.37 130.412 cv
871.37 132.069 870.027 133.412 868.37 133.412 cv
866.713 133.412 865.37 132.069 865.37 130.412 cv
865.37 128.754 866.713 127.412 868.37 127.412 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
870.176 59.9478 mo
871.832 59.9478 873.176 61.2905 873.176 62.9478 cv
873.176 64.6045 871.832 65.9478 870.176 65.9478 cv
868.519 65.9478 867.176 64.6045 867.176 62.9478 cv
867.176 61.2905 868.519 59.9478 870.176 59.9478 cv
cp
0 0 0 0 cmyk
f
870.176 59.9478 mo
871.832 59.9478 873.176 61.2905 873.176 62.9478 cv
873.176 64.6045 871.832 65.9478 870.176 65.9478 cv
868.519 65.9478 867.176 64.6045 867.176 62.9478 cv
867.176 61.2905 868.519 59.9478 870.176 59.9478 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
873.75 57.8105 mo
875.406 57.8105 876.75 59.1538 876.75 60.8105 cv
876.75 62.4678 875.406 63.8105 873.75 63.8105 cv
872.093 63.8105 870.75 62.4678 870.75 60.8105 cv
870.75 59.1538 872.093 57.8105 873.75 57.8105 cv
cp
0 0 0 0 cmyk
f
873.75 57.8105 mo
875.406 57.8105 876.75 59.1538 876.75 60.8105 cv
876.75 62.4678 875.406 63.8105 873.75 63.8105 cv
872.093 63.8105 870.75 62.4678 870.75 60.8105 cv
870.75 59.1538 872.093 57.8105 873.75 57.8105 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
876.168 62.6328 mo
877.825 62.6328 879.168 63.9756 879.168 65.6328 cv
879.168 67.2896 877.825 68.6328 876.168 68.6328 cv
874.512 68.6328 873.168 67.2896 873.168 65.6328 cv
873.168 63.9756 874.512 62.6328 876.168 62.6328 cv
cp
0 0 0 0 cmyk
f
876.168 62.6328 mo
877.825 62.6328 879.168 63.9756 879.168 65.6328 cv
879.168 67.2896 877.825 68.6328 876.168 68.6328 cv
874.512 68.6328 873.168 67.2896 873.168 65.6328 cv
873.168 63.9756 874.512 62.6328 876.168 62.6328 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
880.356 59.4258 mo
882.014 59.4258 883.356 60.769 883.356 62.4258 cv
883.356 64.0825 882.014 65.4258 880.356 65.4258 cv
878.699 65.4258 877.356 64.0825 877.356 62.4258 cv
877.356 60.769 878.699 59.4258 880.356 59.4258 cv
cp
0 0 0 0 cmyk
f
880.356 59.4258 mo
882.014 59.4258 883.356 60.769 883.356 62.4258 cv
883.356 64.0825 882.014 65.4258 880.356 65.4258 cv
878.699 65.4258 877.356 64.0825 877.356 62.4258 cv
877.356 60.769 878.699 59.4258 880.356 59.4258 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
883.967 56.2178 mo
885.623 56.2178 886.967 57.561 886.967 59.2178 cv
886.967 60.875 885.623 62.2178 883.967 62.2178 cv
882.31 62.2178 880.967 60.875 880.967 59.2178 cv
880.967 57.561 882.31 56.2178 883.967 56.2178 cv
cp
0 0 0 0 cmyk
f
883.967 56.2178 mo
885.623 56.2178 886.967 57.561 886.967 59.2178 cv
886.967 60.875 885.623 62.2178 883.967 62.2178 cv
882.31 62.2178 880.967 60.875 880.967 59.2178 cv
880.967 57.561 882.31 56.2178 883.967 56.2178 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
888.154 50.334 mo
889.812 50.334 891.154 51.6768 891.154 53.334 cv
891.154 54.9907 889.812 56.334 888.154 56.334 cv
886.498 56.334 885.154 54.9907 885.154 53.334 cv
885.154 51.6768 886.498 50.334 888.154 50.334 cv
cp
0 0 0 0 cmyk
f
888.154 50.334 mo
889.812 50.334 891.154 51.6768 891.154 53.334 cv
891.154 54.9907 889.812 56.334 888.154 56.334 cv
886.498 56.334 885.154 54.9907 885.154 53.334 cv
885.154 51.6768 886.498 50.334 888.154 50.334 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
891.765 62.1187 mo
893.422 62.1187 894.765 63.4619 894.765 65.1187 cv
894.765 66.7754 893.422 68.1187 891.765 68.1187 cv
890.107 68.1187 888.765 66.7754 888.765 65.1187 cv
888.765 63.4619 890.107 62.1187 891.765 62.1187 cv
cp
0 0 0 0 cmyk
f
891.765 62.1187 mo
893.422 62.1187 894.765 63.4619 894.765 65.1187 cv
894.765 66.7754 893.422 68.1187 891.765 68.1187 cv
890.107 68.1187 888.765 66.7754 888.765 65.1187 cv
888.765 63.4619 890.107 62.1187 891.765 62.1187 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
896.566 61.0542 mo
898.224 61.0542 899.566 62.3975 899.566 64.0542 cv
899.566 65.7109 898.224 67.0542 896.566 67.0542 cv
894.909 67.0542 893.566 65.7109 893.566 64.0542 cv
893.566 62.3975 894.909 61.0542 896.566 61.0542 cv
cp
0 0 0 0 cmyk
f
896.566 61.0542 mo
898.224 61.0542 899.566 62.3975 899.566 64.0542 cv
899.566 65.7109 898.224 67.0542 896.566 67.0542 cv
894.909 67.0542 893.566 65.7109 893.566 64.0542 cv
893.566 62.3975 894.909 61.0542 896.566 61.0542 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
898.985 56.2383 mo
900.643 56.2383 901.985 57.5815 901.985 59.2383 cv
901.985 60.895 900.643 62.2383 898.985 62.2383 cv
897.328 62.2383 895.985 60.895 895.985 59.2383 cv
895.985 57.5815 897.328 56.2383 898.985 56.2383 cv
cp
0 0 0 0 cmyk
f
898.985 56.2383 mo
900.643 56.2383 901.985 57.5815 901.985 59.2383 cv
901.985 60.895 900.643 62.2383 898.985 62.2383 cv
897.328 62.2383 895.985 60.895 895.985 59.2383 cv
895.985 57.5815 897.328 56.2383 898.985 56.2383 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
905.556 61.6021 mo
907.213 61.6021 908.556 62.9453 908.556 64.6021 cv
908.556 66.2588 907.213 67.6021 905.556 67.6021 cv
903.899 67.6021 902.556 66.2588 902.556 64.6021 cv
902.556 62.9453 903.899 61.6021 905.556 61.6021 cv
cp
0 0 0 0 cmyk
f
905.556 61.6021 mo
907.213 61.6021 908.556 62.9453 908.556 64.6021 cv
908.556 66.2588 907.213 67.6021 905.556 67.6021 cv
903.899 67.6021 902.556 66.2588 902.556 64.6021 cv
902.556 62.9453 903.899 61.6021 905.556 61.6021 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
910.357 64.2861 mo
912.015 64.2861 913.357 65.6289 913.357 67.2861 cv
913.357 68.9429 912.015 70.2861 910.357 70.2861 cv
908.701 70.2861 907.357 68.9429 907.357 67.2861 cv
907.357 65.6289 908.701 64.2861 910.357 64.2861 cv
cp
0 0 0 0 cmyk
f
910.357 64.2861 mo
912.015 64.2861 913.357 65.6289 913.357 67.2861 cv
913.357 68.9429 912.015 70.2861 910.357 70.2861 cv
908.701 70.2861 907.357 68.9429 907.357 67.2861 cv
907.357 65.6289 908.701 64.2861 910.357 64.2861 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
914.582 63.7559 mo
916.238 63.7559 917.582 65.0991 917.582 66.7559 cv
917.582 68.4126 916.238 69.7559 914.582 69.7559 cv
912.925 69.7559 911.582 68.4126 911.582 66.7559 cv
911.582 65.0991 912.925 63.7559 914.582 63.7559 cv
cp
0 0 0 0 cmyk
f
914.582 63.7559 mo
916.238 63.7559 917.582 65.0991 917.582 66.7559 cv
917.582 68.4126 916.238 69.7559 914.582 69.7559 cv
912.925 69.7559 911.582 68.4126 911.582 66.7559 cv
911.582 65.0991 912.925 63.7559 914.582 63.7559 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
916.965 60.5464 mo
918.621 60.5464 919.965 61.8896 919.965 63.5464 cv
919.965 65.2036 918.621 66.5464 916.965 66.5464 cv
915.308 66.5464 913.965 65.2036 913.965 63.5464 cv
913.965 61.8896 915.308 60.5464 916.965 60.5464 cv
cp
0 0 0 0 cmyk
f
916.965 60.5464 mo
918.621 60.5464 919.965 61.8896 919.965 63.5464 cv
919.965 65.2036 918.621 66.5464 916.965 66.5464 cv
915.308 66.5464 913.965 65.2036 913.965 63.5464 cv
913.965 61.8896 915.308 60.5464 916.965 60.5464 cv
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
%ADOBeginSubsetFont: ComicSansMS Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /ComicSansMS def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 48 /zero putdef/FontBBox {-69 -292 1187 1102} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/.notdef <1C60D8A8C9B7A73DB6F0B6FAFA7BF3C28FD0A21D0FB70854A4518CFB8D731A1977C1C08A> |-/zero <1C60D8A8C9B7D98F6DA0BC0D56993DFD731859E73082C2D7636333544D763DC27197575AA0521EF215B0E83E609598D159BBB4BC56CDE2CDE3149C3DB2DB921DD2B021218A530AC8F4FD6B7D0FBB9FC522AE09EAE356903AFB4F0709B48EB18E9FA0317579E49D7B062061DF3902491F8FAAFB0B6154A16F4A168AFC4E808A4715BB30BACE27> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/ZIFJVO+ComicSansMS /ComicSansMS findfont ct_VMDictPut/ZIFJVO+ComicSansMS*1 [48{/.notdef}rp /zero 207{/.notdef}rp]ZIFJVO+ComicSansMS nfZIFJVO+ComicSansMS*1 [12 0 0 -12 0 0 ]msf38.4404 196.38 mo(0)sh221.953 183.379 mo
221.953 179.379 li
@
221.953 4.5 mo
221.953 0.5 li
@
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.systemdict beginZIFJVO+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/five <1C60D8A8C9B7D98F6D54D48ED68EA6CF969F0E5B50A1A83CDD96ED54CE7E034617721CFF9E66FC1EED4AF925D2EABE5F3887295B9694FAE87E5068EF00B2E19BB68346DFF7F2616719067C9E31024F97634B80D817FACCB1FF4B22DB7BC4AE86BF0B2C1A9A0C794826FE65E1181EB10541F6D1BC25C237A065541FED0BE699DBCA3EC8C9BDA955EC7075994950DCC22C238275A937278BA07424607EEB10C1AE2226536CB6BDB9CC86C61FE2B4A63BB08CE3F5FF5E415AB86FFD87E55E1E4FB7393915DC53D001D3942F0A19EBE33E976F335D27A4E9FA42922038F9E9924E840CA20833DB114F82CEFD215963C9F09A5A31BEE9615AEB04B263C62CEE55CBD81DC2A323B20160F4BB153DCC4119196063B9B3AFABF0E64C37924ADEBA5A73CF27B225CFA4A00591BD57F0> |-systemdict /gcheck known {setglobal} if end {end} ifendZIFJVO+ComicSansMS /Encoding getdup 53 /five putpop%ADOEndSubsetFont
/ZIFJVO+ComicSansMS*1 [48{/.notdef}rp /zero 4{/.notdef}rp /five 202{/.notdef}rp]ZIFJVO+ComicSansMS nfZIFJVO+ComicSansMS*1 [12 0 0 -12 0 0 ]msf218.953 196.38 mo(5)sh402.466 183.379 mo
402.466 179.379 li
@
402.466 4.5 mo
402.466 0.5 li
@
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.systemdict beginZIFJVO+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/one <1C60D8A8C9B77914873F98803C60EEF5E4A6DBE96AE9B81EFF493D2F1AA3FEEAA37FD443D04034D23BA9D609D2C8CD762F92B8820610EEE88821C53021C3E08017ADDCC0C56E5E2D7504080ABC696FC4B2BC78B7B384642545B6D2D0F5C638D5E5DAF1603C704B0CBDC68673A92C16CF8AB7E549BF3031EC2B504C05A0AE024AB48F99F68753D2CFADD79C925954659602A92A0F92089F7F8763F72499600C23C55121FDAC89B86D3B6C51F53AFAF0B4EDB2432FF0B89CC30A4C8DD2B8E7547AC479FCA4589851D61C952B27> |-systemdict /gcheck known {setglobal} if end {end} ifendZIFJVO+ComicSansMS /Encoding getdup 49 /one putpop%ADOEndSubsetFont
/ZIFJVO+ComicSansMS*1 [48{/.notdef}rp /zero /one 3{/.notdef}rp /five 202{/.notdef}rp]ZIFJVO+ComicSansMS nfZIFJVO+ComicSansMS*1 [12 0 0 -12 0 0 ]msf395.466 196.38 mo(10)[5.40234 0 ]xsh582.979 183.379 mo
582.979 179.379 li
@
582.979 4.5 mo
582.979 0.5 li
@
ZIFJVO+ComicSansMS*1 [12 0 0 -12 0 0 ]msf575.979 196.38 mo(15)[5.40234 0 ]xsh763.492 183.379 mo
763.492 179.379 li
@
763.492 4.5 mo
763.492 0.5 li
@
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.systemdict beginZIFJVO+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B84186EC> |-/parenleft <1C60D8A8C9B72DDD4BDDDEFA1F2E33EFAB2609E3C9DE388E20E9C059C4F1BE51DE95F72A2C12C7492DCC98E0E6966BF3C6ECA33D6154D0170812D5FDFD86FCB61BC83579E6C82B47DC2EF7EFEC0791C5D64493C14198901FA2252477E06D36F6FBD8470D6ECFD0F8931D63CA891EC08EE802E9833B5640A882BF6370D5475D687E5637A4> |-/parenright <1C60D8A8C9B72DDD4BB51EC6C49AB7306C1A14C493E9BA5D78AE2C195B29D94044F912FEED39F75BE34A7150607FEA016A23803EFDD2F9288AF7A180AEFCBFBF998E3FBDAC6F3A4074B0F5D69EFDE59096176B6B29149A14AB78FC2B3577A37D471DCCDE635BBEA2665A37EE893BAA312D5DB22CA01C4916AB9D79F1B336301D84554794> |-/two <1C60D8A8C9B7D98F6D8F3D7AA695A6A6775D351A3C5B32DF9BF22260E9F8506C6C0AFACE341E1E92FBC3EF784C227B64F08462D61DD043B72D0EF946A3AE72A4250C97F9534EA1ECB8D1F844DABC2780EA5497B3400E0115082BCD52CA33A42EB31BAFC00E89283E1398238FF501EF46348166C5D0796F4F302EEFDEF2C569616B35F3A295FC3051C30E10E4927C117B901A9DA57C3B1677644528E481FA057A75ABBC2AFB35C7AE1B05FE0BDF0A1E3241A7236A535A6C63ACD853B32B2C1D37907B8E7DB8A4A38921C6A2C9DE2A43FF89B38C12B866B35B39B6383EDE8BC72433248A45DEF8A4F70A87D3942EB09EC1FED7DD26A9A13A5550450B987E697E0B> |-/C <1C60D8A8C9B7C054165765BAAF0C92CCBE2C6ADFDFC36958D81859F00796D344CC054E333538ED46E12E7F5688AFCF3135F7BCF04A6B81068C72B36BF7E3914834347D57ED2E2D044D0BCFFC5B59F76B5C38341A800AA9211C98073803A5DC16425F7A27A5DB2025E06EF163670F55818C9860E39CE252532EFC51C2C7AAEA1AC0A03F3A9AB8FDAF9C04A014034CBE8449C94C8B8BD9D90AD14C972CEE5EF16F02C7A2122CEBDBE881C9E97730465657789925229B337B911F77129D0B7B7E9920> |-/D <1C60D8A8C9B6079F6CB7E532E9AD798E1A9E0E9D7042D09A7BE48F45147E8A93793F66954E6B8860A43BD585E271E7F03DF5D6C9950D5A044D1FE3254F4EAD6D0257E1F7146FDFA5A3D2A9A61D3334BF45C9B76ED37AA7790CA2367DC42210F7B8AB7BE54697E148355064439150DAAFCAE012FD6A53460284F1817ACDA3BA1D6FE529F583F3DBE567DEFBD6B4F46E74C8B3983FEEE97D9D20161BB1B829D78C7A812DCE9E582CC4E03359DF24245D1A751E847C0CB9A4A968631656593E9133F2157B422B2BC9FC4D97AC> |-/E <1C60D8A8C9B66482B35C34836F0E20BF616040B5436119F91C04A4FFF5928BF58F0C4C7700F085A7A99B7E4AB95D4ACBC471077FA66A9920CF93E9E8B294BF2BA82B4644830E155D21219D4BC7463429B5AC18C39C3AFC8B34640E91D75CD879D617E93EB4ECCBCCFA7E7DBA4AC0D3B3FE1C92681EA5F2AFA04A26FF98D3C2DA3613626D7F9EA9477B5C4BEBB05D104817C8A6FB7298DC7E454AA36F51C94470BAF25DA450E79249D4E1000BED8DE4FC399F6ABAF7C22180F3C650C847B0D1D0C334DC3DA9557C838F1033123A9256A0ECC10CDB90CB3C1395B36FBD696FE5A815B009423A56618570F514642B5B536F239B2B69B839B6454303298864410E01422F330CEFEBD9CF005E8373A6A20653AB17E07B4681DC4045E7792133FA39140E> |-/H <1C60D8A8C9B6F576EA558CA95278D4131994310FCED8C14366F541DE93B82D453F40A9737EA778F2A5E9A19DDE1480CD84CF58AD6BD3A75726B9A9FEF04D62327CD19828A2F4B91B3FE8E1F270D0750624AF4931AEDDD18EA84A0BE440AACD695D81B929928E675C20B5F591A7319C00BE5C9563617384C980A0E256F97B094FC97E9CA0DC206BD62A3226B987E765061256BC6655E10591A45399186F19133D3FB261FE31DED0121C7992A7E6AA3287BA075DC2DACB9D97D74112647020B8C6A076D2669448034DA594DAFD95B7E2C4444BA25DC7D151D826779869E3A5A6F788E61FF9B9D86CE7F4B46487EB9B08EC51B1273045AA127E1ECAEA8A89B169A67E95080E7D11350F0853CBD51B5F525185F1EE04B29D01C1AD840F6C295C4EFD0E47D165F8CCCDB275CB7437060E73477A20AE> |-/I <1C60D8A8C9B799EBD279262C5ABE91CEC2BBD701A188D7C6823FD27FCD2F51B76B7224F8CBE317C7C332084E1F3DBC4A711D1ADF20C7FDE6114505B093E3B642EAF66C4AABFA3FF012FCA9496C1C38B03AB52B6EEAC8C4D7EE94EB8D3602AD9E60C7F45913845D3C417960F3D5F510E09B3EA2AEABD28CA67AB6BD2F1CDF5E0496BB9BA4DD0C764C5D3DB39A134A5E9A4D5617BDB2986358995EDD5131440B1C73BBE9358581D5818F1E654C5952952C32B7FE0AF4922D718878A2ADF4D4FBE7021C0EC3E51586D7490EFA85F2B392FD53DB76FAA8C37544BB395B47769E5D2CC634C1995EC7676339E442D8C17EDB> |-/M <1C60D8A8C9B59575D87BE2168EEA28120D9030AFF41D7AF515ACBF3649BD2F40DE0809DEF2C3B0D88F5433D0339D1594A8BB5B7D6E9E407C9B2CF774E827F6D240DA9788FD58FD6A6693D238D2DD35EBAD61FA6DA2B1B88D98FCBA1CE329DEEDC1A2CF7DB3CFF85E91DB1E05982789211A03C97DDC1A73F165FD37FA7D660E3EF66841B5442F7DA5B28127C6557F4AF9EAE68C31E263F78BC4FE967BBD3724E8E4E7783BD6F3F0D1F9D36FC073BBDC3BB91498E2940FACB05B3E1AAE653273D1E1C1DE5C399F68768F7EC53985E7DF8ED50093CF6E6C7AD007BBE64BE70B06C3BE97174E50F93FE7A1F609DE48AB13B0AFA023A5454E929FDB> |-/N <1C60D8A8C9B6D0A8EAEB10EC6C83A8151ABCF50170663A97AA6C8AF4BBC458891122B79EA456A4FB245891A0A08C3F5C78856E717318934EDB6CFE82EF816E4A49DE50D454AA4D5253D6CA844409A8A10E7CBD876280B093069533B6F6D725480B401381FB0ACCD7E70B82A55671F2BD692AB87154FC02E8EFAA7321920BBE6F8AD18AABE78061D095650FF694ED9E55586C17666B3AF0837B29CC058D114E11672F0F69980A26F4FDC5EA82BD1C53B74B670AE4AB837D81949E7D924709D0FE446761EF57CF343A7B12F8661A2DCF313DA4275B0A14F039CB9570AC5B4F86F1D15CDCD36D311971E0FED3BAAF870242> |-/O <1C60D8A8C9B6D31C06F41A86D5D9300BD7D02F822E86717F4D0B97BB6311DC2CE492A9C52BC1F5FE35479DB8E17A87808209C4624B985EEC3016348440F6486941F1266806F498860565679C5F246F66B0113BD70C71995C473A489D624E210ABCD4FA6434AADAA76367A265B888793300F9060400F8B261C1857545D1A56BA8C48F0A03070E4CBABC> |-/P <1C60D8A8C9B7B202A52865A9F3C88AF95BF7A4F54D680DD7C54822E5BEADA7225F1A1670EB558A170B9E3BA429D4E5C1ADD94CB40C9A15E7A8CCC05E92EA8B0358D5B8430B67FFDFA5F8F742D1081767B654F7EE148ECF84C987C9CA0747CCC899F01600CC34C28344A10C25EBF2F7876BF30D9E25BE938EAB4F41CAF28134848ACEC42218985D0F14D0A3FBFD5555B69192CCF3A02303B11B4686510CE8D8DC6FAE96D370BB0CF07E19B63533C65CA624DEAF822D7CAA14306D7136600E> |-/R <1C60D8A8C9B6699559421F03C3156FD8EA055B7CF36CC63867CEA507552DF000ADFFCCCA7355E525CDBEFF5F068702678190F4222B5C045B197B40B8D83593DA62427C27612B6B2AB09C4F9431042321EE893508AAAEAC5AA0233062887B12C86642E439498A4427C8B6E96402244A9DEB714EA21F1D08D940B3335D0A7759335582DCC87570AC1D46EBC5230DCC3C83F1FA484A290F72531475555A949024CA26AA01460EEFCA5617972EA8FA135B14B899313477DAE4FE3AF85806B96CC76A4776DE79BD94945AE8CF2CB5E13E2BA79EE4EBEA7CB5E9E682BB5F0B24F34F6DF78858E108A53FBD8DAA29F6E723A59B2D2DB122E030DE6B7B25643C43E78E254E3DD4> |-/T <1C60D8A8C9B65DE77A876B2DD8B7FF866491B0F2D61BEA0FBD85AF0D4DE2D949BC150F0F7674372C84451FC040683FB3AA2D326E4537FF474119E83C0987CB5A9ABA0CEE9BCA528F62C1464F5E091F2B82819B07C10C1F1E4E020756FBAC175FEE62F21BE88ABFB0D490716E46C7B7A99793906C4D305D2AF07DDE68078E0E2DC8EB3EE1D506AF796125FCF0E84AE3858A8FA7A22B380BA92E9CC4237A14C737568566385E4CC4D53E33434D25323EAE78F81E4933605E741D0F8ABE8D521FF5FB90669DFD0664D78B93FFDF6561CEE8110A3B3ADAD33CCF470BBB1B9EE08647EF4772037B> |-systemdict /gcheck known {setglobal} if end {end} ifendZIFJVO+ComicSansMS /Encoding getdup 32 /space putdup 40 /parenleft putdup 41 /parenright putdup 50 /two putdup 67 /C putdup 68 /D putdup 69 /E putdup 72 /H putdup 73 /I putdup 77 /M putdup 78 /N putdup 79 /O putdup 80 /P putdup 82 /R putdup 84 /T putpop%ADOEndSubsetFont
/ZIFJVO+ComicSansMS*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one /two 2{/.notdef}rp /five 13{/.notdef}rp /C /D /E 2{/.notdef}rp /H /I 3{/.notdef}rp /M /N /O /P /.notdef /R /.notdef /T 171{/.notdef}rp]ZIFJVO+ComicSansMS nfZIFJVO+ComicSansMS*1 [12 0 0 -12 0 0 ]msf756.492 196.38 mo(20)[7.32422 0 ]xsh937.005 196.38 mo(25)[7.32422 0 ]xsh429.723 212.38 mo(DEPTH IN CORE \(M\))[8.66016 7.49414 6.24609 8.15625 9.2168 3.58594 6.55664 9.5625 3.58594 7.23047 9.58008 7.54102 7.49414 3.58594 4.39453 10.5938 0 ]xsh31.4404 187.88 mo(0)sh940.005 163.06 mo
944.005 163.06 li
@
940.005 142.741 mo
944.005 142.741 li
@
940.005 122.42 mo
944.005 122.42 li
@
940.005 102.1 mo
944.005 102.1 li
@
940.005 81.7803 mo
944.005 81.7803 li
@
41.4404 61.46 mo
45.4404 61.46 li
@
940.005 61.46 mo
944.005 61.46 li
@
41.4404 41.1401 mo
45.4404 41.1401 li
@
940.005 41.1401 mo
944.005 41.1401 li
@
940.005 20.8203 mo
944.005 20.8203 li
@
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.systemdict beginZIFJVO+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/A <1C60D8A8C9B60E3AA4B976610EC61CEC8A66ED90DF0C6331BB14366BB940FB3A6EADFE9FF353ACBE97E7E98B7D39A91DB9BD1132E1F7C1635E17BC2DE18007850C2A2DF892E62C075FF0662C83FB987C80A272CFF2ADD30FDB0F07F6A5B84AFDD4936A7BC33C86ECB86B487A2BCD608A50304B57B513215016A1E69D1C6538A56CD0497EE35010216E663AED5DBCE0EC37B4845C35DBC5DEC6ADC22984448444> |-/L <1C60D8A8C9B794D334770456CCF0A82C129EC023E78036E25CE3966F0B6AAB3C4C83B4F7D0D9A184D63B7096E17BA69777C3186423804DB983F8414E906B2BB350BEAAA6EDA9BB2F576EAE256DA27D8CF69C1D67E4408804E8B236A01E7241FB871846F7D1AC875484813B7B645BDAA48BC0691B0C9FAE688D3DFF8EF2DE5034FD5743EA653CC67389EA1B069F> |-systemdict /gcheck known {setglobal} if end {end} ifendZIFJVO+ComicSansMS /Encoding getdup 65 /A putdup 76 /L putpop%ADOEndSubsetFont
/ZIFJVO+ComicSansMS*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one /two 2{/.notdef}rp /five 11{/.notdef}rp /A /.notdef /C /D /E 2{/.notdef}rp /H /I 2{/.notdef}rp /L /M /N /O /P /.notdef /R /.notdef /T 171{/.notdef}rp]ZIFJVO+ComicSansMS nfZIFJVO+ComicSansMS*1 [7.34764e-16 -12 -12 -7.34764e-16 0 0 ]msf10.4404 135.939 mo(DECLINATION)[-8.66016 -7.49414 -7.23047 -6.60938 -6.55664 -9.5625 -8.77734 -8.15625 -6.55664 -9.58008 0 ]ysh1 lw
2 lc
41.4404 183.379 mo
944.005 183.379 li
944.005 0.5 li
41.4404 0.5 li
41.4404 183.379 li
@
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.systemdict beginZIFJVO+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B7D98F6D4FB14BAE603D1D6590C382ECB216DBFEA05FD170C2FA627835C2BD2D966C4BBBC5D1C9DAB8F42A10D785196B325C66F5EDB7577122F6BE5734AA8078E8259D258866B0D1CC3F87D26DC47B5B233B398C78E29EC5A0D7BC5E21D44AFEF53F0B98F674195B01538429C08074D29DB84F0A6429366C6CB02FEB0C0C8EA9E32C08F04DD1409416FDB44D15BFEDE0E92C7DC71904655EAD8ABAF0C9913206CC1F0EC0B3F568F925BFB8C8C9726A4D41418DE9C62DE485AD8C3563A32C246DC49BA157820C0926A16B416822B6A5A4973C7FC590D71365A1C2D32D080303BF33A9ECFF4425A3324A940804108D640AA1B151> |-/four <1C60D8A8C9B7D98F6D9D19B2E0513FC5E4D92EB9CF4009902AEA1143FA8048680F0116C2DDAB1D204D80A50B6C47E295405ECF6B9D8E67656139D8AB0B99F70F10190AB1B69AE519C94E071FC1BE80E3AF65DBEE53E56F3CA5CE81F21E9C93C6700EB048CAFE7BA1F01073473AC3EB439C41FF3AB8A358FF25E1E33F82DECC7B8D6F2A15E44E1041> |-/six <1C60D8A8C9B7D98F6D410A565F86C07E28623A8A30C45B3B253252287FF35E356C79AC66AD2FE890317E5BEDE13DA65D4DD9FEFA4A8DFF9CB28F7E30962E9383AE3EAD6DEAE2B16B6F1B34D04F870BFED7898255C19B9AFC0426057874C8B988A599BC31593CCD1C2687B840C41197BFB5E2F0C696FA1CFEBDE6A1FAB216E151994B62236FC38B2E21028335BF2980D1D4BCF4B195CB5D36B5C88F8109053C66029BF6146437EE12EF20EAA8182B691161DB7D213B7CE925835ED4E58E76> |-/seven <1C60D8A8C9B7D98F6DCBFF40BE87AB9FDD0BA36CDDAFA5797A3EC657805A2D2808066DB62FEB96BC15A9B900F30543BEF9B54AC71C24DAE32A797EFEB4788F08642C915FB7B2E813E994E738D4370CB6BC7123E1005E0E850794EF1C4BEB3349DE5E24B3A290EB56162B86E7DD2EFC21A5CA16BA54B1764CDAB4897C84591E5E4E579C2F9B60E8450EBEED5E85F939> |-/eight <1C60D8A8C9B7D98F6D411A3FBF3E1364E3BEC4A5E775ACA412F07D5A94C3BEF77D5E53216BEB0522A622C88CA1692970DDC6947BF81796DD7CCB824FA7EE90A4943F8AE44614C58C7911AB9D28D9C0B88A93C3B727D580C159061F84BE60E69517D9839A4A451A2414216CE43B99EFB70961552191831694714DDE8DDC8255990930E16813418A900FE62548470B5CC1B3B6A98598E41570742E202830AFBD33243EC6ABB72886024764019A44EA984D8DED1FCBB31F0E230348D3C16A805BC89F2756CA3905F9B19C15A371AF432FD6D69D1C4299F3A5FC90ECA58C45C9> |-/nine <1C60D8A8C9B7D98F6DB48DCFD6E5B40D8F5B9356D5F4F312E4E079BD1330371F8B16E748B339507FF34EEAEBC76CE6088FFBF43CFA46E360E31F1295C04C348C693DC73173B5940711C217395EF980BC13292FAEA4C08F7DB86E96FFD7F1AC428FC0B70C128D940CEFA088CAA7A81C4303E9CEAB546530F44DECE7661C57649DB55B4A8B030E79BFC310962A75CCD903BEAAEEBB6FAF06B5DB9A5811BA4ABCFE56CD78D8CA81201C1DDB3CE934C1DF4A914CCB604E06ECCF14960D6BEEE038EC27F429644C8ECFDF794CCFAFF5276CC0> |-systemdict /gcheck known {setglobal} if end {end} ifendZIFJVO+ComicSansMS /Encoding getdup 51 /three putdup 52 /four putdup 54 /six putdup 55 /seven putdup 56 /eight putdup 57 /nine putpop%ADOEndSubsetFont
/ZIFJVO+ComicSansMS*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one /two /three /four /five /six /seven /eight /nine 7{/.notdef}rp /A /.notdef /C /D /E 2{/.notdef}rp /H /I 2{/.notdef}rp /L /M /N /O /P /.notdef /R /.notdef /T 171{/.notdef}rp]ZIFJVO+ComicSansMS nfZIFJVO+ComicSansMS*1 [5.38759e-10 -12 -12 -5.38759e-10 0 0 ]msf12.9004 279.294 mo(EPOCH)[-7.49414 -6.24609 -9.58008 -7.23047 0 ]ysh69.9004 265.294 mo(1)sh151.9 265.294 mo(2)sh210.9 265.294 mo(3)sh290.9 265.294 mo(4)sh371.9 265.294 mo(5)sh443.9 265.294 mo(6)sh551.9 265.294 mo(7)sh674.9 265.294 mo(8)sh758.9 265.294 mo(9)sh819.9 265.294 mo(10)[-5.40234 0 ]ysh885.9 265.294 mo(11)[-5.40234 0 ]yshZIFJVO+ComicSansMS*1 [4.84883e-10 -10.8 -10.8 -4.84883e-10 0 0 ]msf37.9004 44.2944 mo(360)[-6.5918 -6.5918 0 ]ysh37.9004 119.294 mo(180)[-4.8623 -6.5918 0 ]ysh0 lc
42.9004 110.294 mo
50.9004 110.294 li
@
42.9004 37.2944 mo
50.9004 37.2944 li
@
102.9 240.294 mo
102.9 274.294 li
@
182.9 240.294 mo
182.9 274.294 li
@
227.9 239.294 mo
227.9 273.294 li
@
344.9 239.294 mo
344.9 273.294 li
@
410.9 239.294 mo
410.9 273.294 li
@
480.9 239.294 mo
480.9 273.294 li
@
619.9 239.294 mo
619.9 273.294 li
@
725.9 239.294 mo
725.9 273.294 li
@
781.9 239.294 mo
781.9 273.294 li
@
850.9 239.294 mo
850.9 273.294 li
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/ZIFJVO+ComicSansMS*1 uf/ZIFJVO+ComicSansMS uf/ComicSansMS ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.2%%For: (Lisa Tauxe) ()%%Title: (opdyke74.eps)%%CreationDate: 9/10/08 4:04 PM%AI9_DataStream%Gb!Q;G@0p`f'*&6Hj<K1%S>l?8.?sq-s3\s,m[BXYg7dD+8<,!.4LIB7QG[bpO2aR,:&IU1TR]:ZSG9gI^,:O`q/ZsipW,&B&`MT%/8hAbGg[Xo,]$4gAc0?Ge;]&Z1)Y]rK8Ba+!h(KgnRrb''+`NJ#Rqh+0)D%T2d\N=7A!ed$B+/#?`!+C5M`mK[egO%FR<p_3aM[,%StC3''B0UI0jhhqMqPVtm*8\A:#]c+ZWp8Ggd%o;mQ0'1a&A"(n?_Q:Sd\Nd)U3BpS+1T>\!cnK5%Te.,Of``K?!Pn!eZ(&JFE:(%ot3NF%(HKY'fWXoJ_M]",Mk`DS(r<!:]Wi!=Vbo0<H<gC3u*]EOq\#t`o;hGQptG]BHdJk,UkblU[@KY#OZrO>4^SCGVT6f@'D5#%[[_Nm*("[&)%B(&&V^XI+bl7HL%\oKW,7oZ#FTfn@ZNs0a[d[n:F*gP69LZd<tb9/R3LEnA+!\Q5_f8_^0[m1(__mK+/:O1YFFR%%"/O:cOpX[R1i3ISKsXV5"qR1Pa$7kiO8o^%Pf,`?/dC)F+\([MSTZ0R..eT5J)U[70)s1u!Il\u)i0?84[BC`!3L"l59.ENH:rGH%95`Ti4J@=]))+Qa?p6Xm:580+B\^nO&;1;kY#/U.)N>jH6\:lE0#YKaJ:n@se2fhn*m[d%aPraG59@n!NWX7q!t@G]+T>/os5Qt.%$*Vt9>So?V]Y^f+%n-XVQc;+h&R`V(G7:aq,jZ,c%YZJFfOA1RY.H-0//aN%/)9%Ur1>k-577;rLZ)ks#!\;CpfT#$=2SJA2]RQr%_dRdK*6*2*(-[_MMT&u(=:G1d`F,`K%(;&4=B=cER=oF-JB-S\1'sRJ-=Nrc'"3DLi$W>@.)8l;!dq:MJ9M>(fS3tr?'^Jhi6s4b%n$=Qo#*0U^(QSeg`-:1(ir*iKk(KA2'q>s8KWX1&`0oV3E(9=1[Xg5dT5`X2-Le?\:@JqrJhr"NYU>AWgbYH4r.OZrJ)OBe-O:Aq%'>oU-i4RtqCr<RJRReM[Ef=Le7>rPfM4_^Ba.p[ba(*$6iQ+G+M(S3]fF#n7I_q[1"nA\a4\RU*(Ueqe'.JmFJtIbgK:hWLS/nIk%r59h8=5YHB"m6+T0blF0@(]tD&>I5JE9&5CLc!$0_cV\r0]#41i0iWQ_i`u!@CWg[O^>POp^afaZP,>4c43$tB8uAsq8#kZ$M-3H%+3"V9(4O+YE-=.;aP!<S@*E$bR(Gd.(3r@02E5a$.@:o>\I`J4nW$+pZ&[dP]YT_g'G9M_`su=1cuJOLH$g_6_^!3bM7FMQ*9.7t%^nQ=GIq<?7ce+b^[*"OXi^r9\bhXK#bPVU;Q?c#cFIC8qQ=W+m&W)m.:WqB%a"!*NKT#`H:XV(RrkZ?O/(2:!L;A)p^\D.]Jq(sn%nNWL!)T>e=^\D.uNdo6%n\7Hns%Xh-fEpMD/r/o:J+::$*rhQ+idWk!Z&#U)J+:9O$3-=kid[3b&*n:-48=ZsMLUQ!n6[k6-;oXf%fch/Bfm&W2dd^QDrf&2n?TJDkjq>0-r#8Gi^JkV>#(C(!phqtjs.Xku>EltM0at]%qhg+_%+nJmp]U)unlbK(IZf^!f93WKEYLDZ%*>Y<Q,1LQ7oe0U)^JI.."QKIN5<*]J3T1ol.t'qJN03VW*)Q\1C"/k&_IeJ37iAiRoP>SdQ$NZ[V]tUHJg$*drk^A1dGm.[DS-8P%#-a"b6G+Xo&n@6s&'"ac'kP&;H".8==30jK-tRehADEl(K>'&eA;oIZMqA1b0\nFC=HWGfhFX,!jP7_"_nO5)TIW@4)!>p$)$BGP%nUGO81.>`"X4e+@(L)]_Qam3=WXMmD6[gDn:`QamO2rp44N6c(mM#C*[hAK;\:P>hM-%*07`GRq+0f2J1c]K*7j8:T7I_$`X9mZ+%nrGn&@b`.B71R7>6#84F)EBHRrfq`JOo[R9KE.WViX0!7E%Y$U`27nel4,pp),Ej7<ROXA.4@#>O]t47&[[at7`$A/G*;/Z:6d,U%e5E6+Uc<CHlNF1Q37jseN,MSmPgmNQ&aLq.#dgP*5o]T@>^fipQT.d7B,+DlN//][c</LgXN\4q$^h'J/Q$1)R3j2E6tqp.6&_VK%0\2V9T:D\OSBM#$)A"g>,@_TsO"9?Gp.S:M*'$<GJkRJIT4@H`iiGSZ&TKGpJXRqV>r>%RMBudb#JW!5dS>sGU8/*['0L1Z<C@74%bDH-RQ33:Z1:@q+5p?&Wr'q=3$2i^YW(/;Z$J&qd0)@)>W[;kQrK+H[[f4-l49bt-.Bgp<<l>XiH(<qr/IeOH3RMIPI0sh*P-9[D%Q"1;_#Zu6Rj[>R]_2a?J7CEA=jN&R%&@R,.3$g#/Skqt>BSg9#Unk1f4d(G^RLXUi.U=E#9o39rJiHh/V\4AO:e\fZ69c,?&`m6d%LuL0iAaM*Z>F'\W[\E_dnOmVn/Up4;27Plfj'lSKP%Bi]a.a(sEKP')Q2IHU].IeB4_7hAbuToaN,M$UOjk"i')A&n\nE5nm?eRd%-5:r@MFk+MUc^(.;Qo)`\5Gp)XHMK3EdQRKqt\+M$SlhF6"4&%N'[$O1GfC=r/OCRKjL/Q+ihPUUQe`_:]-2$LqG'@$.C.p@K/Zt%deLmiAK-M9YHVOh5^U=k^j6=+C%>V6,9qIG>*57@ql^iPO]p0!8V.n;l_4R6JcWn;gD-i6C=k;f=W%m-/^@VP@<>2[A5'oMNTbo"%Y!<An'u`(.#.=gca\b=IMZ0qqZXPKRKo+ifiW%9qikP7-qukD&:$QefX26.ua+DZEe)FVC$B#`tlWd?Bj*AhMA_f$"?N+<sLCpd<%l%HQE#Kg9u=Qm7W!]_l!pQM=&0l[ue"6!Vb.qp@s;^GOZ^#SUGN99&^n/)!QlO-a<%c'j`7-q`Vf^L>U'lAroZ!l8jN[X^:/28kc%@aWZa3:YJm#n.9O#L=TMpj.tmJ>5Z=,o@!H`W+,E,^]0n&'.J,)_bT<*6M+Q$2CSM'<lVD&]]LlW9FQ^MT57BXY;<"*AJ=L*l82Y%VaUt%T2E);I*<5sJ8?CS+31'+R5Fto$[L0,aj<TXPN?#J'pL;'-]tL0H]rT16C)/oWd%,F6/^7kSp&QW/oZc6Doo&]OeBT@<bXo(%SM'M,OjM14?U/omZK3EC*Uu52RZ)CeUmT[U]ORWg_TiG$K.$sK>cd[=)o9inOAF$UN&%,*N1?]Ik`l^&?1s[WC+8Wb-SR.K&M_\]%M0VP#\#l59IES2iP3]cFPn\1)Mps8?cq3PRH._8$QKA:ZZA-+/(,NH5\e<WM)Z4'Upr<'(n*!N1>Aoh92d86ZqV<^RghJtOSoXO8%/G.22s5Mu%>pqWKF$-t=$KZMO4&kEbKCO';%@+O'c'f$rXiJlk(TND<CnXA`M(W\o7D4DdrA!3eb_B'amnd)'K:hV,cMM)6*.$$K%ip`]_nL,bJ3l^!:ELS]1Ah:?XU[Dum"`CrfD&5UpL"(9sLU+`j2n8*ADJBPrUpbpDpG^-J#%2s$([;*MLK82NT>Fa4\3=0f%J;X.%.CTd=]0+$IEYJRNbe!C3D[N_eUK)?]gE>!Q/H>5"n'O2'k.:_5f&\8&49c*sE5#Eb\7$de$Ir5,mV69r/hNujeSIA*aGn-QJ%0c;%[S^D?D7(&W0)38E"'poL*;i"dY54V:r#mu^K'NL1h[R&HP8l.Q2%O\VpSZgbq?j`Jh!\"S"4C,cklME?HPkWZ5\b2F=AQKd>5j41%_+gif-(OdGg$NjS*%"-M?oHt>.C=Uf1*;#iKt&#sK,>K!(j.>-^jVqano]>"0`Ghr)+6f[K_)YED9-oU78"SKJOYMB72e,]Kt=UE%L1;oGJNX"ock=,s$m:0F>0Cs;l`N3]JER5O\fNF]/&3@;:l\r2'(J,?3MRi/Y(TYnNNZ]Qm!:6@]#K`p\5Ag\:RlVL[s5hC*m&:@%nZ;hfe7piN&Pln'bdr3DniP1VB&,W`#V=D+U2?UOB)^WJ2m[4BZNbH[QueHf^C-X>[7Y*76hI8)>&@kVb'jS5ib]],9pOl>"l,f8%Z?M*F0oFdAD^"[PLhqh?B=(ubLHl*%h:Z$1L26`jEjdnf7LPr,VrQ_I5RI1skt]'U=D0f=!g-Ub+Tr7K!Ask'P3YHO_B1Zs5soo"%o"H/hVh=MY(]s;sToCb"-,1:5qEQ!Y6'#f[f0K(eA>h]P^:SP-SW&;Rn3bm6e&cj5]*&ZB/W:mA#Sjo7\nbsBLqp5[d/M;7^H"@h%TjZn0@,XlPc`FUCG!bu-@cgOHapp[R"4.3hg9BBbiLNB71#7@aAU^me?I+B7Rl`Q2oJh2m],oYs;]oBsO'T8MJ(jE+i+d-,(Pf0t%]Aoa.YeLqa\)_qklb+C5+Mkt4"o2AD1L>.b*B!_5*sur4o:+:OhHDJ-deK'9UgXUsd8eiu^B6q-4YX(c0rDE'#n>CGEr>dK%LQmO%%ftJ`Dsk<c"i^aLk]'r;JB!!D'#(gW0Qu133Vdsm;uCE^/WjS)=#66`M(9%6H2:IBq$2-[1\9I\gi1*U#dg;+V>4KRFKm(q.9ut?%ao:)WQUY7J1'*@p!"snE=[qF\[Y/uZmEJLPae@[r7kAE.[(s]1m_$`td<2E]W."aH!e$qF8beb(Bb[Rq;Y:1p`]>i2n%cVglT[Yh%gHsFNn8?S`HO:0q^&XfmGMO-LpY/$ZnI-gRnLeCVgFR0*`7k$`CD/W;JffKXNuRTM#@.+l4^u16^O8rP!P&!sJD.[:cN);c_Ia$B%@0lk4`qBV>FuRnCL[bA@I>dSZ1l@&/7\-kJC0G9"#g7`L16,'8e`['Y)FO`?BVT3g[-B6BB\G->[V]k]D=h\)]JL*1gb,*p"5T(b%fU=.%YRaCT'Y]:_*Hq%(KZg#5eO?%SKs?M>AT>Z@$&QCtB>@kajQ^pa5PXurD=)3qi&#@Yf\M&'J?M2q!l0Q[iuW.[JZn!e9liGS%rVt?c&c*kYogcfojgdBh_q7?.!&N&/pp'f#[26LA5+f#>Is(S;"d$.S)Z%(gVLN`d)mM!-^=$^S#BG]k#pWS%If0er:2c(Lf$bCr%"-D0reoqB/jqo:Hqu>>0!^iV>A9*.J7=W/`XNXCTGpMr&3.'@up6Oo'me3NJ'ui2/jSpJk:]4j-e7$gUR#BqqqO?#]1&GT@fmf"m%;l_NmJY:6iWl$;Jrl=+%N9.ff./t6^F>a!JJ$Cm1LW*XY*V]T3lXD34$o5pq`#a6_\l8R<N]<Df[6e?-jZff!P>O@XMakQqoD7'`%YT?r8QI,,nSX!/NBela(/]m!:4WC@Me7:IeXN]hQ5<TsY:%F3r_)-Ir2/ik:gi/6g#d)<cqjIHco8iNMF0X^$*%L^]a6c*q;ZHA#%B&'sZ!:J4-j%(4NNmiQ@J$?dq6t:Iq&ihpq:"+:USpe7T^g^f#&$AU!'aB>q-md#QmQ,'sj]3W'6PloANrP(o5^'\Af<G.o*5lNK%c.`/VPEE(`Qr8$4hlN0;JT:FhBJ^\DYQl98o'>/,b7Erf=Dr#R_>$GM0gr?*hjps:>sNr>+#&B<^qL`eS$U`n>iQI48!sXHcu7)=%i(]^/dOd,,\#+eC>1*aE1jEoWnUGQP(AIRW?5edSh;3B;?N6.d-?KRJ9$&Zlf>1eZcG)<oDpI3A/4J!thep!@GV^T."*:B$o5PkV%T?*1!]a4ki*05l^[M((rPp-`32IkD\$rlRNl`MS7M6<-P232sZ@mO\G7<TM!a$INs$!.,lGY)(ZfCn!3]o^m.gLBKEIG%nXnZTs=%c*T"--ETq,D98I;6O=8g.c?<fqeFA/-DH6mFW)o%3\LEkpa&U6Y,q<1#':ZmV?gq#9mJSW^gC>r%9TU]STa1E[FnJAd[uPd@#cp7%r7_^jB.RT6+4.1*i!8%FS%/1=h.!Lr9p>@C0BDBNa)_AkYsRb##0]SV*Ff=b1uL323iHlrcD)N+j+3^j>a@;''Ji5B$"GEf^_3Uu%EU,AbTSD54Q[uC;<,"2\g!KFjUM2P*Kd+KTCQR[tPn1`#19ZG5e.3+B4qb<YeciKsP"\O.$9,;M/DT##>KWr)Vp+==_L/(?KOd:t%Zs</fSDI+8\%9fa03\_9)'E9'S[ogR=i?N8XiR`h?0$`JAcmDKO1iVqJO"$e=S;9kiMX%JoMm-`DaY('$U(F#ZDtcLNQ:b!kUFQ\%h;OS/cG7mu"60X&"ofT"*5'Y\01+9)[p&I:;bl]&[,#'n,=d`Ze,CG;:;LfDo9Bn[6(@Ol.f!D>>kpOP"BTP>bbP\ej1'Y3Rm+Sh%l48/"?O$g7"\CQ*X>W4]<f@fi<H-+Z`D$f]Z3p<F:c&WNbdhY"C]?/YpF=g&bh$NJ_4]&;L?>;DhU3dOG,nJa!-a#d(t*4(:#VUH%W>-Q/lL/:\D+h:j5Z=[IE6r!tln;$NX:1td)@SO9pi!1QN<P[kn,OJuH/FcO5cqZi\`g<?#&gQ-R255:#fYbO$oWb3B<DIJ)$jjZ%p31`P\__T*f`,E>7g-D+nr)IOb3:]<BEL2fNQ#!lZ#RRXn&9C+2n1>bOKJL`l`"PoORpB[QB2Cp'ACVdZLZ4[!&6F'>9;:7@(C>P%2X(N/TkEu:n1@g0\1uK:bI+:VU</4294#&8nYiV8`GKT)`mf/aL;Ob82JY3K2;>ts["ea$2?'1k'qqsG6U]Y"OFo9)8?f=,]C)[X%?I-1e3X7R^D><K@?djN-r<qDF2%7D3L'h-Wrd><klcn'1/pQRnRNMqq*!-j9>4DP-fL)PO$73d-FM%l5_J+4.mVN6s$p4Z'D7MZ3%0sW,jfK:AZP,W0W)*kM#GV.<-a@%nr*]=0G%6\s42lJn3,nQ1.HtZo9:c"]q)._lU^p(?#j];Z-Q2MOB9n[u"cra0X(>A<d8(Xh"%W?u)cc!`WL8i^VoNMTKVBM4<<6>Mj,e+**sr,=AL&mXL+c(Hss)3Yn^:Y].<)MKU\VhA,%(DI^$[J[J-L7foJ[1JJj0PlO9/gcU<%6@(M[61"UW62G>m%iIAG3/c7Xr@u`KEl5kB`0!&0PgP-:Odt(Z%R]%=<0/k=Df)19DPG9$D5Bc[,CYil>2-)F-4$Oa&3YI]p`6Tl%C,0)s$SaTU&o7c1./4M^!V=;_TdSDsF'>NT=nLY7=WKm[E1i%Xgd6]aZa?&GYJWX`MCa43Ao[@E3SoRcOhoFnoQDrroLJgg`lZP.%a7Fjje71KHDZmVpGQ/@f/TJPib%YH^<@'h27m7Ro`gl)@s'"oU4JB0)+Blm^C-BU&J.:l5UY!,pTf*\8EIY0S[RA@\Ys]3+4Yf`*%be#iJ9HO6;^If;;^c82&_2BfD3=toY\nh5`;^'Y![!X0_TJ@1SGM_J.Mn^fn7/X++$cYG3XKRAi)gNK8@qdK5b,K8iC3Q@J@5/iH%2tM=q-oE'+7ElP$!F[a-=Q"]->^XJ/dZ?-T0thq25jVQC=G-K1@;X/a%"SInRFO&aA;o&BbJM-WDCe_M_bl'&l3JUpB[)d'on=3!%\&h1aDm(g!:P!tIIQ?Wi\G6K>DBU.=,t?7"TtA5NNFU8Tf,$Nk6U1Ia3;"im(Vn`\f7U8F2Q'LdQJUV/S"u)??s6#[;Ftdl1'4pO%HAf+s'lT'3@dL=F#rlmI+cBf:$#b@&s(fQtmAoY^O9"+ISKnp1-$sh>0+5`]793Se&)&+,W(ZWZm-N&-@p]<:Ylb<j0F8;(gtd0u%4GO;Z"<bH"!0\IpK,NFq$eRn?Z]EN!>Lu(+rdd`:Y[he0a3qBLoLEkFfCL1YA'!J6BQJ^R%2do1."`VFm$meR(>]1rBi<<#T-#_G%*Ib7J^^0Mk>!r_RLh;gJAqAF8Upc(R"Qg4<7@'9,>UF3]pn?Ytmr*--$dQ=^"Tqm[M=eLg$PU+q:n':#4fAKL%/9gZ/1;XY.DeLL%=DK.4<q@(kT&%8Fe6H7JlgB/Ij`bd*KZ^)TGD:BXe+I^%KT_@p0jPA)=<ai>7o9m8,,ll,dBtMVU5$"OZpd1]=?LA*]iHD`T2/tu%'>P!dQ;^O>M(CMs4VOl^VN.Y,FGtqWfSeZo1MP^bM^(W4/;C_Y2?d0ek>[PeZ/AR!j!&^^GCmod?:SaNAX=:Z/_^`i%Eo;7E&701%$*jeF6V`(]#-PLKiVGSI/TQs$n7La]IfAJ&5@:uS\hF&Pn9I0Ycgp2N..o`Igoq:'gJo)7K<)?2A#0l$9k>EiRG5e_WqPklc17?Q%S1QJ)#q$aMS5Rk:pf%+a;eOdAc_*4dp+KM#<L!mDSCrghK,5K_XRk>7qcYluiL5JjAYrfC#$p+jTPB*;J/9lEc;a_L]Is22j<Li/%Ir;]nX`E%<ouNJVSSm(hjQno,1Nbk8SAcXoe'm[M/=mj$TC1UnF0.du8KTA60(k?$:Y:_EC)*97MLO`CFdE>#RhHs'r;s9$*.C#j%o@*'u,rNo-eqI!!PuaR<lb(lJCVSQpQ0T=^",=H<I"$Pt^pipmiq;6`OUi^dc>q1Fko>cCV*!>^SB2k^Y@$Qbn(i[pUiV[D3Q($o%r13l2QS#]gf`JYQAtEm87i2,QG65O=IAL@hKH\fDW#Op?B4%Y.kKP,6F^DT[]^L94X#84QiV5RhMjk;@&`D[5,Fb1s>r1C"m6rEe%HbUQ@j.Y!WSE'LuZu;,%V&oNQS(/0;>MR3:T>T/$2(jQnJA1[CV*!Vuo$_hnL1el93O=G*o]^G=T8]oQ?*<'oVjVd<n``\2%GjuV%n+6^)S!c@SKJG:N.4!#>loB5RLNpu&-_=F*@*PT8NM8X4Di:<,qOD^'??lf&#&em`?;M<)PNn]D8'lHeL.r'5da+a>DI2h!^2R^Y%S%/a)qa1*6R?F0k?@?/frB+Ga0*XXbT88ZYJ3e\XHrPUt)Wbn5!IVrjT\YqFYRq[;f:n:QZ%Gj^'`(fTp)<hmk?>hH?Z?p_rg(-$%f3(;gHb<-4S1fr6H6M/o%\)M9m-dI0gZH^Mg8tiSk%ef&>3aJKVgRPO=(dFUc^hrJ-Pj91cCEd.@HaNg!]+3RpqpJ__b2h9B@U8#%k,kpXc_-/8,9e&t5+qn$)8,]L4`u8EKJKf#2g`qUTB'07lco.Q<1#!$+;3[fGDKN^J`P;gCR_[&3cKO(?g4U8`P-!&L]u46Bsn;W%_s@'Y(WfH1Xd#2!#qHViF3`<L[6[mrF!:'q;_.#l2`0N]Zu:6[`O^iT@#djg?5_)BB,V:KM2p6N+j%"Wo;/?=MEOX*^06V`3>Dfb%HN>utZS[1PRKZ#83sS\Gob>,1V,dGfs7h\6^G=,M)Diqm-Ulo?j\inO959S73T6tARkr[-*Vb/>aWuf?>'lu$>1A^K=)Q'65\Nau%`KVUVgRPTfYb&l,Jh9H!).09='sK^[H%B,kLMWq,NTXf&q@cad6+ZXJ7mN!+YGF2XZQ@?]e+qH:f,D>mJM*rdWInd(^URe+o0E4*%pFmSt^geJLq3\?D_V3F:*4dUS0\XJOCVeHJ91;h=!'p4P'kXf0QS21OIhd<md<"a'fj?2_S`_%tDpuYN1lt0F9f<+SML9nn6`'Af%pN"KTbI!bcmB7&W/r:6L9*f*';nYoIIJNak>8l$t^rc"er#6'*CMqs(I/,Ct=$rXcqkqh(]pZUrRU7uWiGLFFPtb<e6."]Y$#"nD%H(KK@FE5W#.jEk>NI`,Q(M6gaT/t$B,3:W1:1)NZo6@q%4f*&IDcs+*Ss@+3+AZ#%5n8CVBjW4'\!IN5f$0B0kjLW[!^Io5G(g1%%mdGc&i",VF8N-&o_UB\/g^ighab"\;&)c2<&N::?0/4/TGd%e5%tZPeWk0AX00O;2)&.ePi$#qQTjGMO+;?q4e0>rt-f;koK[.rG%&/=oH)F`)9eNdna!B6Z91mb[%iouqT4Ui;m?@e0H*/R8jhYiiWZ'`6Q:k8*3lFIXUq96sJ"]1G:dO+@aKM[dsK#0Li,-o!LL$!:k%&PiaUi-+ZebV+cn+QVoEkfh!Q8^In82mGm3Y2Ug>$V2'S`\:eY=%A7?Q-:`4a?hg.'J3kS\KX_'kTK!r)f$W4nHL^\!J(m'e?]A*%#k4WBPbTCT'MnHTUAtYu_a%Qa87#hA.B/2E#CFD6!@G0A71`#b(_ct58J.mC9G_r'=&b[[$UXXsSsml5'&hqbYS_g*p0pBW&n/?W%@n;b+Ceq,bIR=d#e%db^]dmAQDm&b4S[2H8f)hQCO<G'&1,fHHo"2njh6p7`_]&_ZN8f/_KP9`TB>AR;:9r3DO5GZ]B.$pK:O^Wp%.3mW)kdmH0cB)q!mhpg8+;Rl[1h`Q$mssR.]7,`Tcb"#R'[[\=RXK4ePD.EHiO)diroV</jZ?`8@:$$JS"G'=Gd,Z`N)i:8U"CN2%7nl)0^_aUZh[Q-$hEVYKZn1nKX\_4DB*(KV8EY?W7F#,;aM&D]P\rBN))6^Zp7A2rTc<5aJC#"M[`Ku1(h35UX+Q`EGV$')h*/L7%i4+<8"MFEklQO*$L!TsK8d>PJ(.&\Nl]X:b!2kQ=Aju(`3KYPN`&,P:"<'B`-\?j?Eg'"2XGeO;X8cIf"U_'EGcL=@XQF"F!5R(,%he1iZq0V;F)S*c89pq#Wi/*C]&DLi,eR7qD-f1-9"sOG23!&ugGpWGHXgN3Ba!tJ@+J"l[jalV!'c<R2=Ni9%5WM&gID6ro+2/Oo%o`)B*b12F3M3A&$Fe=C[NB[."?^I*,]k#Q8&\1h`>LNmVdOqV0b.6XklN9q4s3gk$X#cGmF<lQ2[H6KMZ6g0ITV$M#S/+T_NYE=L%V^#+>,7(.c"L=Ylh"j8YdMPG!!D1,Ci%mT+/fjKlM:nlX?oFi(R;N]nE\,P69CG0GQT4m<iB:aFo*pdR`gN>C0PC4-6>q^*^NPgU%De'fGV`hX*#.eM1F8'n'-Q$WW2kGN9!fe)[<.)"925o4a3%_?!*3XrF8>Q[eYp%kl&kfN5Sf^*b;RatR#f$UdFn#X1])ji`(9WM.%lcXZ%+5,^(gAe['-tr,DR7gjc"4E00j>T'DTieDWcgiGB("V^@7tA0s#4[\&0F-1nJRpna`sBsIS5&`AkLo$Fhg&ttCQ<u99E$%t%-a`JG!i$AVhXKATb[]BIj!\JX91aRISQV._-C-_`((fV:biC]6-QS2CQP^!m?4[GrL5#/4*.qCJ^`2bb9"tO0Nu"I;U>(#"YhYuF%L?W`P3^lb@FM`#&ADbjRXE2oM4htU@XPODDK3?VU18"FH`9C?&Yu!I"`[J'1A:ccQJ?rn7QdHNAFj:;<W\d'<C%-ZXSMoZPmBAT*%`4O(.8#c+EHio$$G%?*oT5Mb[N?l4?=uUWe"IM_d6_![Ql@iQb8fn7Olo,Wj$hh1*%6UK^oBii_[,&6'4<6%oV9aIk"+6:?W,RK_%;Vt!Xk9B?T4]$XS$1&$*i5;JGo[VuInTm*Bb=A12K"65Hj#d"^o!(GdSE5fVIR4QidT+*fjYBfJI]IafZgiR7!:?:oC(3AS3^7Dc%S^[1RE<u'!T-hk]`>c;,NLUqZp5p`mm@40J8=j&pc^H'fTFkR"+''\[2`;r+)l2#iPQ/ijSZUKVj;K02[j/>aYor&L7pEf[ig.bR%?,)ZR65Pf572ah6TA_I]G2;$WQd245MsZC'CMJ`M;4l*YnZd=c2er!GNSjC^lDc0Igo"e:nn>#7mu)2-^NcT+ArP0KAsE6BcdlD=%D"f/hQn9pO>le/M42R$%<U?Pe\19[IWH^d4^#0oL^hs(!!(>-3'&K>/'bpl8I9tWtBE:MR#!jB(eQD1$rN2lRdoo^oJd!?ISiVbH%k1?=]4unN&`fAPio??koMh`E\+OejWrFPPC(nu*E<2l>"a=g-2>8UMsS`Ksq%FiMQ>l8)N<u`R%6D[b$IBLG"nqVFsJDL6Ak8'i(%(LTqY/<[VuI_O!X#D9V!-Fb=B)%147890kD[;tfu"*,>B`Spb&=CeK_K[Egqfg>,eRk80c+"CoioQ;c(RcLiFjLd_1Vq-!W9c)F"%BRhEn4isRm\aO?Da`gQfEZ7W-nTYYJ!#IL^<bI<G4Cp21o(7+fbJ_R=?se@i0A7&4_E^ta<\R6t&%LZ_4SpsOD2>n^Z("HBpb2ta%;g1G>_DqiCXk3qA0*k3(P.:MRQl;Xs$s5^tqH_RsM#7)_;9_O#FB%Op@c_[=.f+L..IB-:4p#&,s5mte9QZb2mSAB/R_1s_l%4'\%4Vr)>=032e%U2%$p8Hr/OML24a&gs93iZ?^oQ+:X0)2(D_^9rbr:[q6SJS^g]F)jA,K)7^3JbR@/9\;NZ^7:=`C))K@QEK0J;]PK%i>c\6l#e:pHbm:s#L>*6I"scBV9#Jt@ApF#aT8'EaqOK[4c(S:nI3()nkZD`kJJFd^7&T]RH5kHMkV-n^(!C3(9*T!23rNHP]G/:%oc>RiH5d3+KEh:p1+c4iFMcVkV1*Lr+:!K>%:m"in`DD2B[CYX(:g,C)[aB.25/WU)gG0.GO!`q#*uW=m][t9$F[usd:7PQq+e&C%&@^d^MRd3b!E4DDV1+np(:0:fYLqLBJ.>in1K(cSSYCg*_7T2BhRq\VfE#%9,<q0#cVQ#5/7ccYi^2G4Jbn@L'c<fnBr5DJijRj?%o$cjo9,57c4@Y_*?E$Gk?).]YoGGJ)EmlWG=!^W#@L\TL=ObnjJ,OR6H:jB\1htIQ+=QELr^lGY6o#7D/L;GfC1lS9nk_])o#5Qk%ILa6gT:"sQBm9We5\$.4LtD]bJPU:U>k6EN5(LGpJ5Nr&/J,hb)1]p8[344o'("dtHHLP)+'dW);d\sc#lb\.9$&_s:je\]CJn2n%5[2)S?+TJfD&Au%KuU$i[,B;gNS)N5'E^BO2U06K^.Z")H*rB"hZ;;V'6l"RO0d@?QTCai3BqaZaI1p'nfjc&^?Tc3D7Rb7HHU6D%,Tqg<HJbh)?Z/59$o]00<kSlZ0gn,I/IWl$YrQ=/FKu5Nm3^"g^B'NW2m%Wks2Im^Msp`,J6TfQcOB;5d^Qca57?]Gm@BG;&9F06%S!-T"&I=snLG5T7049h&>Wsn\$t<"n+&@ag<M<;-]a[_EKQWGPhhOFSeS=qK=tE]=#5g3aHX=j$HoqJ>1Oeef)#nLrB_g6dYdqY_%mU7#^<[cqp96TEB3@S!I_LV#Lo1Po[_#bea"#5T]GY1+u;R+HLpSQRrF=0NG37Qj6=d$@Z1mOl4hA)L\)R&\^f-q44/oUICPPU18%;QDO&nrjM0LkHo"3;6_@8cp4!Xk\!f47Y*,A6NW&Ua0hUGC>\WZ1o072=CjsJ;D@JPSsu,Xjl0>Do7$PCdrBI_Vj,OFk/WnZ.c,O%8^[30HL:H520rL-oN)*1m_Q^IHRKTa6I"?g.^OMTFJO:#pm1,-@.t$1GJ+g\+oh.tWK^U-&GD!41;`TTWVa*q!J2n$n]+F4;bUjK%A3JE;Bn1)d?PBP3W8PBtJ+-j.H,][(VV1sk)"SA[<l--Nh.t(?l.BKU&-=WakZ>dl^]jqodhmRA\Ur50lfoIeK1E`CNHG9*hqo26%IY)iFo0aUdCI+'AYHLAQOa5LF4'!B`mrN-HHt5*q`T+)^5Vm0rP@WmP36\Qb-uVaVs8Mt]F]\0k>eTENL)XmIJ:1[<'g,V3!F:G*%hPE!YA3Z^:&mO_914!6uZ5;%Pn=D'.9C^"VU_N(bHf1jXZ7ZtqZB]I)IU.hgo-^m<WUZnd44bsb]L4FVXOmqNY?iO9,[8?F_`1Q1%#ul0:F'&K?fPHNg.*YdAmGAV)XLmS5a.LDS2A-4%+TcM+G\&7a?_e3AcbV+m(ZksI/eld\DMm>Lmq9/29!NF>oN4?3O5sg(IZU(8%S;Y@!T4]rr:o_iq4O?Jk5#HfPGc5$uE#ZB:s,B>kHkTXO(;Q@9nG9t7mK6kV?Q6fIh``D.%DRIT,bU(!FR)R$cTD./UiO!HL;<EQ%Ikt!eQZD+j&\Zj,Dnau+e<8_'YC%-KgqJR$&J'f:`-XDLXcL,h\V\UuM13El=&6L@(%U1,I931d(k,s=l2+F^\oBBO6T6X7=06Td%\-1nbjn.N;$[qi0F;H@)LY0],%WjiDs3p/5c0=`RT*-.Jb_1*A&qRR11J*Y+ct1sai'eXic[B?CXFTPl(+56FqH##6:P9CsNLdbW%bSAj?-/YOK*Nm3LRI7^MIJW3i^M`Lko908oT!.ck3-bg1Ej+"u-$E9r>??rRChTAGJZ!Eu<9:/XOFYpPB[P<XcWL>;#iQ0/o","F%9C!17As"0TijBNI1TN-ubH(N[i@Fq?*:<hBF9J%6:N0@!_a"!33<K#""A[39:+bITJD]q)2trn2e&WdbB0WC&XW/Fc,3-h9'G4Wl%7`!G$;.ct+/"ba4GtJOkgI6-n(TSq_I@@*4Th#ha-Fup9SM/sg^"Wu;UZ_3dU$E'l`IAT7fjM=Uf_@45a14kL">mE/B[6:$Ie"SO%;,[_`j]D*+];.]rTEL1(I`>\5H9a!YdpD6<)edsq[Q8hO2cN$C'Fa^7dZmB=hJT]NqC_W,ZjtI8l06[_>uVbVV#<ojq,eY&d@0A-%qia"/LG'QL5Ugm/YNQ$NB-Q`+$7LQOJ/qJJ1>gYP0`1ag'O!YUhT/$Ch@C1S#XB=]Q\qYKr[EN/*W`Kq-$ppa<T!S4iY+Y_B:Go`%O2sBW(siJuXPBb)$Cm'j`pTd`;a$e%r\HjTBEPpuGu&p"Rp.J;X4(W$3-'=dX^!T%qGeJJ`7+Ec9HW^[JY'+%W!]KJ8Q)sBT@X)^%4*="+d4661m1.)f=tOTajg.ULo=W)&*jt-&Q1#A^\hcJ[3.`@`[.HOj'gd!$=h1j;'a0D:4PDtNJZX$+86,c<pehR.G('*.!,Vtr%WgUl%_;M@Pd)[`m(/gXXa(;J#d-HliU=S`[1kF5U>X]HB2>FfUb<Q)hO^R'o<3u;1d0<b`J(@`qb+T-KFZmIi"_r*:De#n&S[lHL%W@-seW=?3M3,K*ch@!&N:S3t()(;/9''tgOlR_^ZhGV[NX1SqhP4(E#i!W^R!F9%1X\[c`rg^?1Go`RH1$YP2jjOE[pGeb?S9KDb%eE0`Vp%.dOUC21[?+I`CJDO12V-6_(W6GWZooVF`=l3S%c'@J\!iH+H?J)"c)ILos$=fabPBC#BBi=jU>bE39kUELo>/,1ZI[4<G%!9b`4[PXsPgFiPt,eY\#cJdO"&-6A5D>IE?C3)]FnN`B-hT?CG?s=B&"[l!^=KBhR.fBK)cms=^Y5fI]\HY5`-eY$KZW*Wu</$k2%13*$mJVLUa`geECm7IN^]lC!$3gb;C,QLQp#A'Pn-c<Lo/1sR/"?(Z#=K<k_%&WnX=s3D`G\2W8[@TCGe@_]#GB<0X%q\JN,&c:u%G_".OU7C(G*\bM!=Q_=+/kYAS$/^GK=f#P50<&,5bb4jf$NB^UW]aTUo^:k?g7TA5\r3Ne>+faRcO%:_92rTSrLeAD6T#78[EdSe%5Lk-BFU/i5\0%MMfitrBh'hs[p^Luq9fjbPj+n(e[<-GCH?s[<iqmIVMZ@\_krWj\GIL%)T-\P^G7hjOm\o;NWM'!-K6f\?J*>_e%Tfudh]fLApj4),qcnAjEqgO_)I(TaNh9Aig==:(h\&6Z\D`'$%<FMupVNYB2Xj5D/;`]F-am.]!dae5Y)dSEq(\HO:)='CJnBgQp%lFHWEki]U$O^>e;hdogtLWaa[-X[A$1@C%jIa/P,A2F"`;YNJ6T/tD_Rih%0&^S'Bc$\ElG?#LOI/),+ZNoLS6GWI0=bY2iO[dMF%h1M"H^KB<#m?P4e3f24boZlR+68Kdji;"nW#m*[7$n:6(i[`c$'jjVu+LjnGKm^+3.-*`q+*b$#'U7dIEsbDN`pa8TVdUAK7rbd)%\=C9qG!C)<R(GTlq6E<F%T'=GZkS"^L;oQC&!4Sj&dWYY%>D+M:Dh\p,9R1Poijac6_ML>7pr):Y;>QJBEO7$?hAo@Y_/#i:l9,O%mhL#<S1AQ;lf6a&*mcPBT]JG%!'3)(#QC)!Q=$J9.g]lkL#C%qW-0<c/Pd,F4`QZN,L&"^.)5SPK*o4$_%I$.gnk/f7$Aa:Gh3-<%BtpWtg7/KQcPTr\.!Er@$6t=W*`*>88_S4h2ZE\E+"6bOFO:KpOcBhabXDR+IZ(5(.DGj(I1uB<A[1%pC+%3=?H^E:bu0T7:BS)D%g4H<CjBS#gnI_M=DEt#cH7K9VhgNQjrspUr&[Sd]B5.Ajm?^#naA?6b%kX'\jd0lq]6GH=DjeW@!Y,b;o$&_R21jb)U/!*4JE2))%*G@m1$Z2_B'k-1EU.-?>Rk$elPogt'kIFOdke7W-[OOcP)S[$Od`8@]9NTAB^`d>_:>s*?]>3(85/4%VjV\%./1;&XjUo=Zo:Zat%FM\R(OB9ph)NoV*X[,O<Ld@.jnsB:L6bk(pfA$bo,#Q&T:s>&^5(ra*Qs=]]%>XBLCee]!ki4sqJs_#&bJ#j/?YAC6LQ:DgHY?cp%B"3qYXFi(IoXjT9GUV0V&Qo=/q2Oo^Zbl,3Z^9FiSN':)/(,UdcD$'c8UG[*CZ/Q2;Gk?uO*SkLPM1,@[8a)ri*o@P[/EW$!,;/]%W^k8]l;45YVbnePOG9i54e?`5Q.i``qq!<sg_p^OmH?pQ*D3nXi3)_OjNpi[H;]S%+-!7*dFHt=;^8@\S6Y"%!id]P&NnAj4mAe$%Nm!EMC0$!&PBm-IcUqE$I[2C"20n%m65gaHn;bpdKXLWg>Wl0al3]9]6S_gJ*nq&W*ITG4EU1Z,^c;NFj7l*MZeii>B,Y&-Pr[JM%HFY>G4m(@rg_i^)N5RN9jL#"?3u]"*oks_k<c[N17@.RL2Yj?g3GhNST^Y;c4AK@(9/;m,dSq`A_k2,\6R'S4e$]'YQ5UNjD`X)`%heRLG=sT4S^9>WH(.fhZhH8B5<BX_j0-CnZ1JAR37[^u%[8p:r,o"$rV=1'NGL'NZh7Y0Ffq0N1B#qRM\Le5HahK0@oPC?\*\/l!%,^HCO,aia4V_nfVc3t_O;e,Y93k9(hdd9:aMX,F,jfT.B+4/[OpLI];0G:kARF7bp4>(>B*-O5^rOs6X@nNrm5`?.Nman4B9Vp-[%)csuXTZk<T1V]s*Q-$dgY4hLJaZMd)cZ_f.(t<_B[1.3]Y0KuTobcq$C\eBG6BdTX8S&(.Ti?4BPVkD++P_Xr/ugcH2bL:",'J,8%q]7$?;N75BcuL$jD_<N9THPshaOII-[E&HdS@g]n'.mU++H4IPg^>JV@]tRr;2h%AeM^:jbY#<fQ6J]'Ua`4O&c5+EQiJ%hSBqK#%q7-]5TNe]35UWPII&uH?I31pOIHV!YcaC%4@G>?ildJ!3J3mIlk1<+%!'f)@!jEO1lcsG9F'1ag@:/X3V=G?po,1c(]U8#sEYm?7%2ugc:K;h>!8i'"8P$[(A'9e')Vu6O0Ps=erPl\16&TQX2#O5iMX;s`7JLjsBi=j%E!MA15%7?#_:=O-L>md4#:/7m$8.9PGZQ"NV%cSQrKYa&9H:)'(,8Bb#<?tqMA8=96^%IPp<>57B^F_`kJ+[nu&Td5,e6h<K#!6Ps%VhD=g-D\)LH?gU%;a3p!7GhpG)L[[Z%n'(?%/D$e#"ZlIJ)oI%4aiUinnnIIJ(&&*6)JbTg*PQiAl6d6BpGOPI1r/[fH:Z<id05MbFrHC]`"SFT=4LoEn<A)RKZgCD'AcMkXr]5Z%`i(fWo4:o[I\M8D4W=i8Eei*2kt_S+Z8ST_hME5P!34,ofo0W_#r*nsVh#VQda[OVZ4K)i6YC.h'YZ,g$Yem2!;<CM=Gd:>$K.@W%SaP>`KU"RnV0RaeM/m+'AaP__U/pkcYVWt?X&c[Zjtt/gK$JNP4tTN`6:4u*abIG8WTJ1>pL:J_O8"a`i&,N(O7+L'nn[nBki?%G%$1)R(LtoM?ZetjR<4P3VnH^Wi$BOeTFgMkfckSArMH(^70sk>+i4'12IIu+cFIWVm5UNk5q[#(tBuO$i%>6?2O%Q0uCT5;@)GM_L%o(%#6NV9`e>.pC1YO9V>UY,pDAu*hG(5HQ[;(B-,,^ci__hE>09sg\^Dsr.Z1`CN)!qg%lLR=-W:`fM:]qTsBWj&'sH5S;^QQcsr%/o497Dh'Z2X,5.FJgQfo6^g2rkZ`q=!b3:TH;bWiAq^dsp08?JX_W>BABcoWH.#]u-j.5RRXNWTlA_(1mb02XCp2Y*$=Rg*;(PF0%iqk\`OD;p49tD7_Zlc?O]l#K2/uYC0[m8kXoE&dhb.D@PB)CV1>k5#I"Ph[-En/eXG#-7E/2*eVm%2^U&+T*7-@M1siVjE2N3THr%ZXc:'f,B7dG4G$\Ej2dS_u9HUI1e\t($hIH*lX"fI]PN4k+arR%O0D`j[>XR]k[:/>IB4*[Ld0jqBU$a2'd$Ib3`9`63nn!hD'o7%foB#3"*n*d8Ml`]`TAUp)hsq;!6.InN_=pq_)XAXI07=&+h;?a:55;[.c'[*Zt.p1YI+DN@QRH8k1#BH!%jhE8#eV-q#u'7qO&iA%gZ_[)dcUlQnX59$atPRGQZbW*QF:s3R-0ZU%9)"082Jo/VB,,XOc=GrdCT`e+W*DoDHkb]VJ-W"bV#qTYd</QfFVQ[POi'b%%dPH%bDhpT*%^MO8(`/=UWp7L7f]NAJ#j+E?.Xcc&M@m^Q_[`Bi;6s8N[?gq1r/QlWK53NVf&DW3nT\LjB;2?D.OV3XU7+Yo/JUL`YEU<%MP9uak^8+"FAO>,UP;MKW),dX="Upt%@qJBSQmak=:LfR:fK_NG^ThIcl#p3Ok#&=eBf(7cl#djmSlPd>X9b(:d)=CcF=mp'L"hm%h3QtK.d4glim8T)7@JP'Jduh,BapVR6aB#2S).0^h*(9(PsE*r%nS;#$O11NEVjofWEr1j1!-g0HZ"Rd.k85>c/aDo9Q.hVdp@(n%286PoEl5orGZ%Pp-u29CJrM-E/q[Ue9De5nCO?>WRI.nt2EqnjQrM@6St@WNP5G*W+h_Aj-E9'OmE.r*ba$#+1eZt1Q!@oiF4PHX%B1\@MeD!!";F"76%(LGhJfl,`g^I*74`.8^2>@rU"7oN#C@A(?hR:[4Z(#b]jN`TJaN:[=mEgeH/9]LgZRDOnZXPkATAO1q6.V>%%0a=+5aO&En%"V\5WYrlM@8!.?[pWcnbX.SkdRk8CViuJOAuD:<BhP!@e*]dtIgb?j-)Rc*;`[Zi%s*hkeg(EK9Ik6tS2c1nY$[SD%.7:J,8-Fgq`9o-VK<g&>e#<D44=,+j=CQ]c3kiq"aW>]-qs;JjjZT_,4ti>2dN91$>6JHq8ujc;AYVEXo`pHh9mul+mt%rSa(OsP%L7RW)<#Nn#R=X.a%QcHqYh=T6T%%Nk#BaWVDmLD&oN*^>^mKG_rrJ;l+,2L]iYT@;;R+X6];"lH2>f1%^21cuBU9EU0I4oUV+J@j%WXJ2('FI@:ne"GPD(=B!'aqjL)"F!sHg<1\kn\\[]ai?4hV;So7:nuV]G^t@<8"6MDBB4&Xc++84LuhVVW%rE+]Jm7U;M##5o1Ec%PuOp"lCu2;F+G!^(f/5M$EoDso"0gm\gmD`ot@eaE`5^;VK8ZBKk@9:4=.<83ORGcYDCVH0m<<3I]feF]Sn-WIgk9"r*VYG1-="r%UAaVhS_d5K!6Q\4TnG$+Qrh9F%>fmJY'8.3(_''Y9r:t8!)M0%1.Jn)XVA_l$q^EcNm"g[s,0L4NffHlh4T_N@Ct%+B.<SCKo?FH%j"h/aD@Xt5aRT8rk2;1,Qs.G1^UqC0);9NW)-+*&c0!rC$nObED\(F%82[NqgG'qJQ03qqH)B[`QAT_`DNMZ%F0_WJ&ts/TH!-E'%A_hdp<h/9OeQqNr22S=0,OK$G3Q"pZES"'N3`Y",Z][bc</0PgF-@SP?`I:J%bl,i19@P2hR]@[/SJ<h\+?KMXW=FGY"jJiaUWH9%UlEj,'K4hk!fQC:?W'<bYO#I3D:J_Ld\Yg/%^)3RK5Bc@>]_nO*N:*?GSe1^Hg6RUiHB\MfO"5igUj+e7GP06iV)-%\l1b^_%,!?%f#&N->0pfHiV"3VFc3a>W.uUA6\ti.a0TXY%]b@`]m!GSLc`VF)d*\ans4eNe\g&s/)lRo&#YH,oTjXB:Q$GsejBOP12G'[,!f:F%je:^=>1aJp3n%?]fl_MM2qPF@@V&fFoOrLtUj51#-In1n<d7J+b2@Qsd3*oIos=D0Wa[g=EO3Y+GZ0T6r!m,:rQ`d((lDbd4l]P#%@HkI5N'R'iWo!"[+N.,,U*r%&E9Pk`f<:%lB]q2,Xi[`JG]=74]O5/`K;FaIA%W6foj]>'(8=m[cXC92p*'e$+n*!.r>8LhCVEM9%GFS9Segk@VhM.oQ8h8fM#\L$\@A.H`06T)[W5XYDm`C*1!J<fD4s.*Tp%asiWR&V`8:CM$8jt4X&i`KP.d6%D'reF0_t>\LjVS`3%Y^4RJCS95.CE!*HTR[ll1j.tU7R0+El79iX_]LFaW_tfN4a-Hq31EC=IJcu&/\2q:'Q3BPV%R8b<CGEub!Se[Lj'ED(g>XG9&[4a%$NH5d36hAg[;C-'IMsU]`>dd<=QHo:K>ap2KNIqY>H\h!qh8dhX5>]`)+=o>AD#Sh9#6oQN2^,=]^t-7>`B5OfIST4(qlIVWq)7;%aciBb(H3kt97;DMi=8g\(G55$]Bjh8Ae,>qMK@,dcJn>0n0U6t]`sN)ml7u1$ejPm5!7Sin;-_6_qu?=*8X^K#/<$'bCUs8m6mr#%b9S^-UW^W0*3trO;AQmT[0j]c:8(.V&Y_fI/*bD\Y-S:WGcJ(%c.tI.R-7M?H/=N1lqZ3ZJ1aZ?XL8VcfVtSrC:h@Ne#:pD&_.*n%&(QtrWb\k9eX;q];\co)4q('!m^!E,:fXb>4DJ%'<,isdp=[(-.fjE)'t\lm\j._<ULI22kF@3sH?qig#!g@28d/1>*oH_:W@h#f%qe>Co&&!FeR9lMdcJdk\TYLcY!73[0(2l"5e?48CBsg<2"\$UuqPD(rO8Pk2E>#,^c?[SF'a5C>n[hd*eL5WX^?&DW_)BSOk\\+m%NUl@nlJA@#99j^@aIusDj&\+=pKZqnb4LW.dsW8cH9LObE`tiaI]&'KG00M)\QuL[%G/^AWZdLmhdp/ekok'OqtbKo-aQ2$FQ]QA%m[Mm<,?F!*I[Adf82i\E`2e9PgA^9U=dKq>=Gsgr_@r@1[!VkE@A\7PC:\ia0Y:E8BuL*4$[9g03fEH^3O"rI.jq9YQQoJYC":Z!%=nu`-9rF87fA((i:c08E(.i,GhEQ0c24[cLL2R@NX.!ojMnEg_S^oi]?n7:?9rF9R-fY(L<RY[4dTP;YZVr`P<j#^fJR+%^p8Oq<%U+SK2n>OlZqQ$@2XJXIHV:0nJr#sU4l61#Xg%ZuGFBZth<i5VqC-!sCD4`M)BJl?dX.[W'+01i*gUB:g24\<;*E5b2m#!eM`kmL>%D"h[*X^r4FPDf1;VUOf1mt`r824[c"*T!]9b\B2@eIn^VFGsrqZfq'AeTAe],KHg]1UAaTWM\-2L?+=9XdVum)8s\pOfIZQC?bB9%j#]@'9Wd@UO??n:3!EbpLK(;!k-.t_A5uiifc2%$idgXce3c"`0(qK4:=m+^L*tH6D:NmZW>#;6ND'bj<>JCG-tlXElOQTJ,h(1a%j\C/te)cf%;u7"1fG?6?S]'2p83.\=oJDL-Smo=49^028EDYW#j<UO[Li1]SdIoJ6PK]PA>*e,5G?/M1FSAGLn%#adP4*V=S_iUO%MM(?jS=9B,1qcL698.IXG^K.Di<G.pNk)K8b)BbsP-nffbVG(>TY!?;'%@dfPCr9Slp;u%X`;Q*WdQZ`kg%W9&[2Y@\oY=XSu_,g%lR\@P,Ag9Z;`d;t:Y!m"%$<dI.dL%-%L[Uo:&#Au4D^=7[oQ%4C%&7MBi8AQY_g8DIA(pdR^Gk#&3Fl)S8@_K/baF]$nLk,%%YDM%Tlek4?tt/J_Cfjf'GtN%,Wfgb2\biYO0oo6ec$Z7@fYDu#bTCc,?XtdKV]7,O4!:/1%d-lA+=A:X^:(Z?*Kqg,nTgV?-06H.;W>6%N]XRJ==`\l_nt+LcFm4[qnni'-)o=$#&aZuSQYN;b]a1T*rFp/QBW7q]6$p'S84hHjLeR34k*9^9=jV]`XZaY86g'Dp"%ENr@1_e%O*?37j"X=`Ho*HdYU]NGMk(?XeusJn*UHOo?4;%#maBG?D[F5X*-tdG5*Sfb:?%9=nYcT/]T?Qg'jfgFD2TRIAmWPd,m/Yl$$Wnn%;ZD]fS]+FsKY'CnXkrT$4+k\r6c;g$0D#WK%dqA(4d!.9nd_cL&l6Y3=:>X7\5Us)=f;kal\%?po3UAnGO!%KM]46I!O[+DdnpIa%N+th*/?G[DXOP,@X;0=7-O63*/lt5W`\65T<r&]cZCIKBF+sJD-_$r]8&Y!r$>Z86)kHV21%Tkdh[?>7@M3oZ^V5,3F3T`cj[hPG%Ub\h7br)_-lI"77=ikFcn*%2``aiD=o:f7',[2urAP@tQp.UWnE`W<JoZNV,QQlmm"\ljW5q505'+7]Pi=N..Xk8'J\?a$@<5bT'%JOa?#)Hb_L*(*\f\k<p)WFORbD**Kc'ri037ZD3_A['Q,C_fLD4.\uUH(UXd8mQqJ[lW6DW?B3@<o_n<l+WU$B-3u^e5&m*-7<r^%(@5.QGERu6[UkY8?M/,@isLNO_@c?F327BnfceL+Ds*SY"<,cj4O:+TKG(tfA/j+n[9t$4kU5]con,3-YciSWqh!d1nk:7a\S?B+%2aqF!^S78].A)LG1n\8PQrHuHTY$D/h0M&0o+fb._XjUlmsBa`<h7.*J%As^rG$Guh%-Uq'Z`I"]PHfV20O:@hfS^@5R0dAYiV@3%gkE$XDKS#"A-Jp7rQG,1c(pc-lJXl%7<g^<5k(WHbW2s;01i-Ys5]T>4j99h]coS5g^s?mb)3]/6m$*qs7N/qeA\uY,;#SXgpaX8%BN0^fF6Nbf=-"5S/l5(3,L@WYFoegP;B,]5-4n$mGTG!BeCSF/\XC]bgWB,RZ.%UVdS&E'a66(P42FV-&t/Kab39Tr1@?#8S]Vss%m"X+n8<T[Q\8@C2%3eS&Z`nGtdXbR2(TU._R:Jhs:;t]7>,=;+S'tbA4)M+J05P*!7lm'7BQOLeR=ho/8U;m*DlqG6Sbcl_if76D%$jse_Wd+Po;F'7_RNe&6<qo8"kdC$[`0q8l6dn3_<ibYsGA/Mf`B)Fkg<Jd1IFAcJP^]3K[is-'Ve-4pg"m[K<*'tk_u)'b!f;?O%9I]B$3a+\=^[5AIHa$P7>@<go%P)HW['4FR3m&pJ4.s?b`c?O0FH"g:_\te2-0lT.CQ5=opIf1_HUhKZTZIR'c$-@UG,Z96Mcr`-%]<j-Na-<&_kj>dK*qO0ekLMI`QT\B.g^B`VHQ02C3r&-bXo?MHi9h*Hj6MrN;WdeWV!O<_;e8rUM5C&N)0LPYRQmMaM3kV42^nj9%>9TF24Gs<%AP6^Nk?uUSX55Jt3?X*QZnIW=rd,,+GiOZ)Om,WR>.oD7TMj\5Q#[MLe-nqMc&OV=US"pa5"Y7@KfYNfJ[]T!Re=s"%:XRjqXu5Lg/6:F-A#?XregIG#\NC:1VW[41Jh_n0[&n@W:%&X'Cu6^-X#5DCha=,B+D*4teDHg7V$bRa%A5bS]NZ*ng"<5-OEe\%%*`[_kCB,M`p9+NC=N)u2<:5Cp[0k8q%3V=e!EFYNCB/4;cscH%0Y2$&6B&Qi'qk8^[VGl"ou]el=WQO!5-$':*Hij'4I?*/TmZ.,%_LL]E53!=0Ncc`lX;Na4:l]KCT?Xq6'd!BO5'7Y/5BA6FmeOpo4d=:0q3;1*b"$%Yi1N&8q9<@_R?[sqSEb=f]:jn!r=5sjZ?ECC%Q$5S9I]f;*[3N='9(uT*Sb=N"IBK3"k!sYTPh*Bo``XJ08:6J>rNmt`r,/H]cLj!VjC=_GB=p#gbZl07Y+K,KQd[L`A2V.]51S!A%ga/YpJ$,F6e<K,tmXMA]M;r*9!2=nETCITCGGsqRY2;.*aA`'2YHP<XpkR_<T_CM!chPalK%G59\UI#&m\L5`*919gj0\;.DkJjH%f?ZG+e_12?caeL/eJsHFr=1lLcYZ[8:!Ve*I'0+3WI@>uO3_b"Mp6!$erNMO=AVjpV!`Z6hmTRWT'Ah9c>_.@I`A;^OmhYj\NH^"%;40F]V!U5$>X.7Ir?P,R2dGfsY+P6=CUkY^Y]Kc=qCTrP/)PEUs1*Tu#_Y<`N-"rV:\?fpH$j5)_cG+D47"O?np,V<f0/>ilF0tT%L]4i5`_48(]5;aVf?a6](:<8i#j;'KfPoeK^Vd,#9F@O,!eln-Zgo?iF8_'LRh]RU*cS9S!o$q_=PiX3^)].Hkaoh=nB5pp;uI1i%O3^]TD=[CTm;r5L3f7jV,5&`mrQ&gVgSanASC/"pob0upZqpAL\LMGL2b0(Pp,LZ"Ip=\-54G[Kd^ag^f"G6Kf?`/rI#"<ZB7-`:%Np#s"=bWp+Q<WPK*Dd/?T'@[h3Ug:gm@#En<'S(*SF(X*TCMV-V%qbb>X.8.:<Mqeroa,leY:/o]A\+qXOK?=kPFS:[o?h\jBOq8%ETJA,qFQQ;o2NJQG7U_"oeYS5iWP>Fch0);$rQYCKQI*n=QIBGoi"P)lVp*V5IU$kI`D89`SC6^kPA?!fV.L)act:Y^sT?gh<eH3%A)grn`HfCR=Ch0:Xd)@t:#AGSm)%>6&(Q$'L6&;F9'e$Ej^ZFuS;fJaX3)1mgp@c?9O>C5`+]orYuda6Hum_&U+ubK"KHf(0*q=e%]+Q1NE!9>sQ?a<[6gOA=N_V\q)->srL`4*UWf""1kjf5H]C4MU'1!,[B4^-0?N0#5(Ra0V07EB;p9ho("][&NKW*<p+@WQcq]a!3%`\jcDT+"Q(lamYR0X]U'S#T8p&_4N'-`P\ipka<%NJ>pr[@U8lT9gM^3Ul+,?N#p+lD&Q$V`m=PL/d=Z]V`E[0.uPUepYm9Hn!";%hA7"+L7UX"Rngi6ElH@u6h%=7F(*Y&^j&\T=726hm*j#@\&3R\Htf)s/uEo,UKP;k+&/7Q-cs`+qfLP9?:U1Ap"n"f1$o]+/KGf1%133,C8:o%AEbqf<Us?IN\COb)D7Qc9"M19&da\\jPL^_)HojY7!@aN`R*+_;.hr*+f_eWSkt_h[b?_o]4',P3pu4r%?!3'0=7[+f%m,(Y$qV>t1qAJV8b#O2s0CrE=>pf!rW"@^'^m`2gWq7"oTL8]d]O0k".X=pLcaeYTgbUtJ8k_sf4sV3#k71;a/n/l_![6//XLToD%cAII?_sb]ZiO'V[n,DAXQJLE6)cr%b/j++JDdOt(n*_]mC%jP0n2.b.\sr4U]m3(o$hQkrg^VYM<h8SGc+tWMBe7mLF.30eRS2B7%rLEuHSpjO=:PC,C61f9o/3-p5PWK^K5G:ts$f?Cm06j5N_8g[.?,&SudjP&e\H<+0,p6Hk7>*:D(0Hq"PM[W#MI'5lfqPpt<M,mJ%J/267Kn3jq*r-"#K?U0Q\C!Gi>hY_-X[5:e`T1AJYJ_C3+o)?3]tSRINB/ZIp]L_@:8q(cdOS[g+[bO]$\%(NKIugp^((3lqn9e0%^&(&ZV]Ou1os4ZX*bb1%I.c\'59!b9mga@M_)9dSRs9LFc/loJ;4n705b$=;5U"YYBcH^VbUiXRi<;Ff;7Bk*S5A5t*4fu^_Vj)_%5lYQp']/K`!5TNfC=d"'I*#4!!9%FkJRYRI5#6UQ?&rg5'_rnO-<@),Q[:K,'r+jXqUUh(b1u:.k1m:5;6-E44ZA5pA>7:[?!OFT%4V3XN"LEEJ&bi$1Zl!/tn(b/8b4RXPR<D=/p1edrdaYlSHhHY)La#&KC4$M?5)'3Kn%DP>YBK:6hqi&5o7hR`%.l0T)*k<12iPI"%/RO'6_ZX44MS1:#L163s*lu&Dp1a<h#(Bfcg%YM!le5gO4uG9@%]AG)64'<PKk]$s09SQ,Ha)a'o1,e^^:,)Rko$<o(ZDFX;O?cq%hPsE)K2@6Wk]fghT820i.pbN9l&uZW%(uCd*+/P2>ls+.H/mgt+UHne(E>ep&!,Wh8(iuI8d+>[O[3Ae6VMCu8WC6RlOLkWm7rMd%S+<;"Yu<SeqAd/A+k-FZ%h'Ra`EJ&jJ&XLEn_gg:0,&i8'YYp)!IVra1d=-kZZP-lH6bDZo-!%#?_CXc$)75=g!BL;I;`]+";=q]%m1=Z=>+0E#[PM[MN7W'!%A(X/.;k<[Z8ohcr3V=U8M%ipR>H2;?I!/VD^XN8Y@3DCO1_queH\ra9Q:W]gUf9^8Fclp2/F;S.S7T)%$&"iO(JESK07BP+dm?&Op=!`QF><)smtN$p[XNp7%rh"=VH?u-L<mnu-c&ZnCe*FQ+t+X3"qYIn?H2U!WmLap,L?js'gE8XDU.C?%qq8$7Ae(9F]I/q5A.5(p=2AS)hfhb6qUk=0-e8>0I8Iih5agH*\6]Wr=?0==HmfP;4:a&p/-g<W&o5'\hAsYZb/^\ZS1`95(>?pH%&V1:-$.'j_71]ID?A3I>Qf'#PFZES4BJ`9W->X`F;2R_iaoDe!F"2Xei[1>=p?*e^h7m-!0qPna!r48NBRY6+`D,)K<"Irc@:>I3%4P,TEYaRR;fX$o,FYe<TOj8JR`K3LQn#&\3XKPPd0^&YgW=2TYm84_PA\0DTHYiTlAl3Zm],=E&o)`U_ILsZF)jN>eeHMna"5t!T%O+q^^8'i_6oGEH9^EVY7q0hKl#7C#=Hk:gc17agX@h.cSSGTn?6Ni,]p\0<l![o=Z%"hi;@;8e.hb4b[1kXM9cb8:p\.(a?)^pc%%>rH(/V6"gC+%@4WKqYNYE'Yu'dMEZ!C?U,i#e#oWI?ZrV&U*!O/.([_);^VkcJ=bCH><e^LjqR;+;(O8noA]KCSbhs469q/YH&'W%;[h=@a,Au>agTG-?QMEI[,[9?X;I*+-'5+^pDsojngQA!2P0>bes".j*V<bKjN1!jksFB;:f7MS!#4A,"s#c.'[H>Sck>M8nZ$r@%-R`A0/8>Isb!l&jDu-,;?;rKi.B70GQVE,G*Nm3LQ_>M^AYKkP`LTCaZ78,kS<:GC4Z.3(MkDfn,H$8W87+6.r#"k]qV<5mFtq-%%G.]+E=2M$[(%8]M=di9./[7TU'$'euF$k`tH37(p>q_ll&\*brm4L;S/h6$!1.mE\n[ju]Zj["l3sKT]J>#BM#JUG=CE^&?K!0cV%`S^Ti6>JN@,<j6jHmOq1ig`MFBA2l%-ESm<0jbY9\U.s"n%]c1b2<IE<7Zud[iXN+d0Gd\8mfd``!d6(<EAZibZ?saOh!nK:.1G]%Vs4rQ]2\S3T):^&nbZG\2Q^?e-"G;H4RT8ZWD";ENs/rC*3W.k=(O**)?N&6JG/<<0Y0@!H?#;?egmgI@O/VViLYjY'J1O1^4GQJ%7"Y!kBj[!0#mHqH$CL:/#mIL<"b85RGXs*]1V^q#i&BKaSW&0igQYGEk6$48H9iDsdUW%uAKM\M&<qJ?`N]]60FIT&qb<CfPj_BI%b&0VehDf$k3$PE4EsW.+#(-E3D%NuI/p@;g-s4TqMrn9F$O[u2*is<E_*2.\*M>?lCWcgUMZnsQgHtTTKCIIF"/g_,")8t00V</:%%CC"na;@Ac=^1=9<)\R+%Y3mbkbk>h<U&)#m7)FGXX<Dh`V]4&%FaP)-n24HB_5i$qSX6*GoGJ\PT&C7\HAd=$GQs;(S_)#W\N2*%3Y4#X]o.T^*0k9\:t1A7)Z5HE7=-A*5uhgWIDs(X];1J@`,mI%US?DXddA[J'e=+r*2H050WR+P+3J*\dHWFFZmQ!!PrrZhMtps4%E<UF:RKd\!Bc)h<F.sS*`+)h:V:W%)nT"k,*p\e:'3&TQ'2<N8@Zc$/ohH,QbI_;IHbX<H[E&qQ+Y1=Ao"d_8<,6ISaig^C3%<o`%N0YX*hua%rDt/OLF!ff<Q,K3d.<*SUcYg+iKN=2qeJXhiYKu:t$ZF#L[A1jR/h\_;T=O;'YC+SqYu#`GOCKiO9]jnsb,P*Fjr)Kn%m1PHF,(.pEk5k8-NAIa8nXB6u2)f1.dd*Pl_3H+r=*f1lTX?B6A+Q*'ecthOq6;qW5(Eq$jc(d":-U5S"eK_m(Vmd^Vs<K+5VuaU%#`HYEJeV^*b&`lAR)V]:0&cTPg8h`FJ8i^,WDGG8Jh%R%/*TQDPrXB+Jlr8OZ_mq:JS,Vdf:i[eos3;_iN;8#g5^sJHBAotqs6Xi%=8Y>WTDd_rki5]Ka:mDt_S\2:SIXfrMb>5*7+Y&iF%81kKBK[r#t2rAgmL,F\$SguNe)WbUer6c^.mq%q&?4.c9MIS]gL3/`rURM%A'RaAhsP5GcM(o@KY/L;O_O3#/!*b>6fVj2V>\Ln_\B;?)6oMtS/S7G1,,Kue\?c)ITL0iD]3^)J4`m.O%^hcln<ERn\N10)H9(6%s)hJs*uLj1dR'<+V?ramBXSW#Fah2HM*)&f6:N&7W12<u-1*csDXDMm\=o%i_"%?So.5E4!4'hke<eU;j>4Paboa+h.\gR4>A)pQ%>="DjU!m#qpNXMIlbj/s><6$4a)glRE#@?5s!)<mcqbEYHahRP2hQssG5(>NDA4Uf0^O,r@V&Sf]r'3:-WBB`U[VJicHT2(>6-IY%!V'EP)#@j!_+XW]git+h)PE_:(6X%?5nW&r#Xp_8)SBCaJZM$4_RZU)rRuB;Y-V;8/&UXL;fJEuk?l+A@F#[?I?B#(\j`"mFA'?1%XL'p*)h$!6V&'F*j<9<pEb4LSHX"FAQd!P`[":V`EdM#;[?IOFOnjS:4Ds6ti]jS<L.kN5Ki?)o)T^\fSQW7UhEf'`\)\N`0#Q!d%I[<k*m%SSh@dNA-:%s;!)^*tG0rg[g/(4EWj2Q;^,[u`0qlRea'n:O;XIV5mq>m3QSE$Y=GWuQ%5q3Pnh-EI:YB7Jk)J9';4oL]T%VKhLNd?SsfJ_0h1+)WFn@u5FE.]Np%jGcqPFiI]Q@LZC-X\$1^?E&:lq9)h]>%pG$]R#9uGU?<.bP"B]Tn#`QB\t*'!l@qJas;g,%?D\(?a7G47p4@TO6](rERHV":3%r"OYAQYDaLdrF5*6N>jAor.dp@s\;CSlpA)o6Yrtr6L]DpT,Lq>V&^g,s&/)dP,AR;b'2*YO+%nNN9\i*U$J9CG:[rmj5X$4&]o$,OTmGK%cN0X:1Ri9NfbgJ]p/8P)?.;!eq[#BRcio2^q.F(ZB,Ki0V:bo+:^?<mmu2+rk9aQ#g+%8M:eD4!is76n@35G]V9*nlAcCR"^7(E(TfMiW6PXMipK\-_"<D-f70gL>8U&!Ni-h@E'8YI]as,UQVUQP[e*4Y<hP3!1S%`j\p=W%n6Tl1d9ELHY)uL0pj"[%c%?#>'P@D;.bfo'_qPY%4BiB-"P8Ya`fgk`R#eX:NEcP,+_X^TpHr0;'XO7<854g3_arh='5N;M;;Bl3%fu%NRY"=m2)@S()`!cAECG%iVEdYBSBQ)570=_l1D[I-N!]$@Jm"Oe,Mb\E`-U1=q-D7(mKkdLNn95'gLVFc;P,f70>9V_LX'XT$%FbTB!8,JFs:aob*;7sKa[;tkOD#EmChG8f(W*dT>+`Bf2+h'H8;goJM9/\sVf^ntAHsb'<8C0EFB+PLD5*Y_>5]E"#H_I!iLnPWk%TY6&g<r`C4i)Osp[o#jQ`K1H[F:pL7d3ec>"gaQ"$NZqtb.!o>HqK\O#-c1Si9/^Gk]SeL)U`uID-`bHZDTA5J5B]D#3`FY:CuO$%XFSk5!*d)@"<eP@"P^AqG]Aq35df2=R!!9hO,;V_EFI5Fn=fqHf-(JFXLCOk]Ms_<UP'HUWdi*hN;S.JpQZA$.be28NQ^uMR,hg`%AXe7Q\?"mV"@0E!^pOmbV,H[nJ@Jbk.GmG_OGhIbTkN43O5$]#Y2%j<*HaHh0C.SLj)hpM:-VW@:7SJi86&1Fa,/9=T5;)/;]Vb\%?JHi%-gG(,<7LtnX`p*k*K$7T.o(k>V,=%;S2_PO/rV"I6fW9L'T3htl3c/%QBL<m;1o;$,s9N4&`qiVJou`$A[l'7JQmd)/a0X0%<8(sE?p+j-qm-R&Rhn]Y&>1&DB&WU&_)d`O10fm"5@,C0+8,1[iEu7%M988pmn6,rTi=4=R)Q%g17`],2(K1*2h/"<lZIi+]Y]#k%Y[08eQ`=k^]7jH(e-#Sg['8C-5"cWj>"Sh:Mq.G?IT=6k8ca;!mbQ?94"1?02nhZUDC;7\hep$%(0h]m]6F>*YkAB^mG5"?FuH#"%%kq%pHAKIuT`>bT;[87]BU!A3qlapXZi\'gc@RlL\8Z/sm9]p)FV,eSNanIQlO:F/Pj98PK*TT)*OJBp#/UadNN*b+<`4FUUMCNc%l44()81L`s#^Za]2WmgY_O^d[c+-c/Y\/J/^V'Z&#blG,L'XXWJlq34$kSLZDB9ueN%)3.m1pgPWO*Whlkpp2WSAXb+9D\QG[aN5%^araRk5koh49K.P\Eu/d]Siuc1QDpIb#0m$<G[3BdVKU<<)[]Q]&Igr%Z(WKO'.W`PLtD6N&o74q+p)YS)g'TR&s&UOS+Olnm.q%%k[l/@!We%qQ%;8JkL:k;frBOqI?T6ncNV$ErJ`0N#8PsNP%2=$1%nKD++*J1CfsW:NW+P/%h#ip%Gd5Z?][@j71^#!62-;[&f%ed%fbj&A0CNgDq.*N,ef80X1u3#=3"[Boc0kD/X=(>Df):bc<JAcIH3mGe*H!q2B-(W\IYg0i*jS_2W0Q7dMI#8Z4mIuTWNP^'q$*,P%0E1mmfpgm=H2\>HJ*4I/^Inb1?"u4qq@sNsSpL+6s7EMS>1@K*F-0cE3jst=\";A+do-aKrYbBjmlfk5r9<+qTSiC,qeQdG;r4sc%*0otF69(5$3boff&QO3!<Nk@>a)?FshQpR:nEF-o!W9mnq<0IbdQlr5Db61ZZ$b/0N)*d;],Q56qp/u&n_-VQ(&T>ko$dRF'q_tm%5W"$1DO3T$+Q)=/V4Pa*l1XqnI!ROHJZJ+G/`'q!rIrQ]%0->(Dj$(;B7'CRF[IhUIuer([tR=%aI=hZ1\B(M0@#R-4(jgE+s).+%m6o]'po]5M^\AE7W0?q^^]0#th9O;+0ZF!&kG73*#3'S#o#lepMPIQ5Q]0duK(tD!A!lH2M_X+5ao,\04I=iQoaGu6ci8TD<UOBf%RJt$lcWmPL@gr@j$WP':chEut0<oDdIXj$B[D]iU`<l.p2_We9+92!O>R53$<Odsp(3T?6ci3U`cb(*%qWPKQ2YCt[ZgV3"Rep6;%kI%L"_m8#m&V0^h[.^'%l?D+F<Ob,EqO6T=kG?!f9CBtN)EmK_7#u1"m\uQPn]*"ps7DYM54R.kDEm[YRr%iT@^E`n\H]]GJ[n#C%n-;OVqo+DuVRJS"f0L$!43sMC7"8,1L-tmde$$K(X*Xes1F0P/nfKn[Ep*=l+o,]GT&t7,/H0A>O#$b1lXsQ%qqo0.2"Ok=i'+^9%_!ECSV&AFQE#85U]=?qn5%]1pp3GpC^NsVI2]Ed)IIrl)"+0S:Qea`!4\8Z=%tC6$cC`tj"Y*E2Y<;jF=)Eo0fkTC)jmm$T,B#Hs%HLc%q*S]qo8l2TZgO"?`T#eMC6&SHGTJEAL/Y:h&aR&AH4ksMjIWb;[e:S"."gVnAY\0r\9$Se3s4O<b_e%>)hV"F'i&JEbrpjkk%`P.O__hp&]r-uAW4J*pgBKbms(#@7Bb^55>J+MXjiV)a.@Q*b[kAeE-n#u\C51/hJb*T9jPCNGfcXqnRIG8ngpV4bWl^,A8cpcR2%FCsd"+6TBaB$#2i#5@.\FPSLY;I1DndIm3ccHjMCo&<fPs7=KV5PnbeHrf`L='pCQ4n/b:9D+r*WH^T%U!HV"kXd8t^;R4$n?Z(I%4n[-6B`e(M="^Va@V4g^LT"aEDmq@iZd2tQM=B<h(tJR#A)=%RkijB3s&!Pd(Lo9cs7\]Hot>[[c2E(Tg\ul2hQNN\rU_Tsi-YId%^O+u6fDk[K6bb8qZHL-7[0JcHr@#:^qj1Ib'>(Ig#QDOaj_P.3BW'SeXJb?1(7/*%22'7Bbk&'/^$P=fLQ>^0!Y)=_r$RP1E6CFH%Y4r*KO7QA=\@q43?iK$XI$HMgA%Ui*o$I&Zr;^V*G@-._$@Se4rKk,L,Xaph&%;'*Rh'0<r6ZJOS_%Vgn#;8h/PQ)if>"%Gn@e#B%GW_lZ0)#2"A**B;p\sX^ZTqhspm.\@O68QT`9isSP+V[DTdpE+ft1%-!qO&p.!YB<OT!;=Ynr-scjtX"n68X/nlCe%N+JN,s1/ek%s44kbr+BC8jk9MN8#foJLCPnr_ju!9HC7Co?XCXKml%X*od@t9=i<C7rOI$1(0LXr6p?'J9H)f8BB^DlT:bu/.r0<N:Ji>#rF\kR%CekYUj^5->cd+`-T&NgIhKMXAH$P5;oiR]`&%Z@k1%+[]%]+X>]0]VIh_"qPrrG%2F>WTN>lmJ3O):*J^0>FO`T1^XYKr^7q\J"!%PAONGa(iY4b",luf/nHR7!Xd?I#>Z/PIR#;54Y*1>?_%'X`s^.q[`Yp`P1eea7ip-pbC?`5C3([LRS_.hQQc]?L>7@8UdbAIWg>,%d8-RoJ$fAUB.nEVhg0A1KAZ^p!EM;'\0&o=0g=@`624dP*CTGso=DF/5cYoHkP]b/GC9G@Nck?l&DO\K;qLb(;??5Nn=b`ome^@r%i!U;_8&"@KWrSJQANe3.J%]?7I[+XX8fttCT?iU8G%i&uoRG*'`ra'TMXJeSn6MslgS4T&pDk@GkU=)mpX>J-N6.@,mJ,nM*k4CP%q<pDPs5TaOoT1"S[LVo=LA#7AS=b:@"8g@Bb6.*N+tUi[Kc\tYm'jG-+),D<hgta.a#UNAn%eqR!tXe^b9cm)g>@*^%kWiZBReoj%rStXA*.IeaF+#jKhn:f:-q!n/%d]O+h_#E+nPI*o%so:Odb`g:Z?c)9r<'4r4Q=`e]2j8"cd7+Nm!lVbf]0p+@iO.ZG@43M*oG?D%>?_%'%IHB/N#S1nBCQgnp+qoeJc2\u+(/cCK(dE`Ch-l)YC%</qO<'7Lna^TK0jAYp/nl:s3Uc6s8H=lqtgliZ'Y+8LA(?^fK\<*%jgPcf?[VFRhnG5`]p\F^6i6`jm+:u=k0X+Q6OrK0m=g,i=AOB.6i6`jm*UhV[\<YJ#PPd[SqeB@J+[!Vn%^!RC`_?Xrk8L3H*6V@%h5.b@Yh)$%);;!tn,<P%Y10Z+'AX2PhTm^0%hg,IpATg*6Q]PV/cW*LhHG9]ZM>Q.$bt$<65nX,nG_b4p2<1>RlDZKd.u3U'%"+H%=#eV6:(EWfY3'C*ZYB%rs8-lekh#C^j#Oe.cR;!DHHp.F\j-,hPPFOGpTmSCn3R'&huCq!*0&91rnJE@Qo"L:oCq"+<q#kNki3cG%Dhe%->O\m.nt.qW6bf&XJ(l!Tq-:bTD6(/FE9HqCQgd#XfeV"UfmIbt`U>n:J*Ds^qV+f\F/eM9%JFe3h7?kb7i=oTP2:DsGkK9*%]QYZEs$9u(HKGgr]38\"I)h.HO7M/XU?+IC]R#h:Y'A:PJR6!8jq6I^P..&)jM`XO;YP\0l:91%kNpc4Q2*#$DgCO26$^3CN8CZa%+6\sG,JJ"P+rkK,\%;(;eZ7i&ELuEGmuX4`6g6Sh6HE*\!o`Uog.7<Seus?&$r4N2s*<QR*Y,J*S465JjuiCf^U3.9Hl&X?2X8h2%T6]tPYJ8X:1nT7oT9lAXWbB/Zp_`Il5CN@Bk9EqjRSPuZL-8rb(OYDSI:FgRTN],%$l_n57I&\>hYrD5*+-kAe2EXXHNtS?4)T=P%C'du7k&\#Pj&+dk9&HMf!D8er5(t'P0CR6[YugqnMmmHhjf0'a:T`$ZT)J09s7lNXpV6^e040*PFm%=ODE[m>gYRGPje)PJ`n-i4%ri=BFT5S'9kOlUYIK&=e=3k/8qoUR!Hi*2r?iU'#T7?_8lAf\5fA0_p0`m@O7]F4aOhLbWroW+qqQCE:puC[iG+ZFW>t)LKhg,=,%PC4hiQTbAemIu(aT=FLE0Bc2]q"*a,BE%kb0C_rnlVH;Y57_G3T/rH;XofNO#lNFtn$gX#rPKTSXM9V[:Rg;P5JR$2B<U+dlFih'%r(d9a(Y`0?s5rsn5C]/OrR7tMqmZ"dhnJX&YMON_Po$U6kV%kc[d&:ujaPM%e,STjIoB\Ar:OtM5B5l<TDk(6s38S[4E^CZ5FBd%%r<2SmI6b@BdAKdqro,"Q5&p>??i2i(AaJUW$0Og/Is0-VdP\NH26-EM>HTpbpk;ML*34M\j54n[Guno`Ba#Cim&aD0&HW_2+8)g5%5BHNP)o'jFB5CCSKp:J743`FOD-RJ6Ms74;Il`'pD<Z_&qWW(IlQ9HIZZ]S1DKtnErR2^`jU]OS_\_39HGN<=Om?hAju6Y5mS>=l%VlT5Ehlq;';u2"d;5<^E]?cKQlHT&DR[7YVVt&n>JbtP:WMDNqG;H"nr8?tS2DkEB<g=3P4\9!+o:um\FEitadsq@MT-"FmeX%pb%isP_q:U`iXqoRT:j:LP'X+'X=l"nQ)o1s<)q6du'2r5VmllY4BrJ/^*igX$C+5?Jd9:,5rJC`k/I^F0n%j/7K^[B`AKk!u5Vik#D%Sq$Y8EM%0!L[VbYW:jK\;>4_2VoJ)&na>\WTDJV2s/d[:gj\Kh(TREE\(+eW+LQFAcN!OO?fAo<:X@(>YgOjbJ,C*PNLtSm/kJiI%Y'T)UV7APW@sL@m`h(M8YpWim=iR&*r0'A'O2I#cIcCCKGan!q*PNTk_&`MWc[PES2^`lTk_hOK4i7AD?52*.!W2t>?L:q:Is@r1%FPCG(Zgo7Fe/]I(Wla_b)/h0WjH5dQ:2B%hQPZ6ArFaIVdr?llqb=h]]_Uj-$?qC"L\ID&r(1S&g[\t)dXur1o:)3YVp.>K*j:$2%^$>I4%tFFirjISuro`_GONhopBA%K:m"oYPRZ@LIcNbBjIOa=@2c&\?=7gL"(]O7&\n<COp=toJ(>63EWdbZ-T'Rp+ou*&trpY%V%\Gjm1!*W]WG+nDDI/KjK<c4c)Th!,Q@[bhqoM_>*Tn'esj\rEks%BUm^4,d6pV3L.p%deN^]eS.;E,%7q?S88\TL5n`Z%)3;TrKd%4o+`n^No[:j/n\5E1skhF#b(453-cFE]Np'IBa$*/*:Z[eUL)&H[.%"gEP,H]mZ_!iT4_p6!c5`T--:4T)dI?I<dI.eW2r*X!RSU%+5s'Zrr/aCKVtG)IkKpPqukpIC_ACY>l"^ZI!8urD^u&G4nlcOp0uBnZ?#\Od'l0-,S:s7=6,^.oII'JBdL:^jGr5<T0N"^.!>_q%YrX8ZLR9-IJm.uJ0@bksY7KsZWu)4.o17Q-3S9lq"IiTjXVBE\s5)F:!kn4kZbFn`A`KQKT"XSK<)f#&K]:IIh06PCokag;1lF02%O&3Ie*V\[_D^XHj`P.V3J+N<-g$m^ZGS9fb`<1DgVp=]mJ.:P,qTDoejR5:T]4-"'>)F#DZ%jc-4IUQB;E=%ANoI+kgin4iDsQu^%rpXdN"TS(G2rAr3>0HJDGjk$,M^/b5D@aiJroQobgVeSDjkfsPe,!Xdh]#p'3lD8L[dMC9:ClIBqg8(^^SJJB`ZE8_DgqB7K/=H]%);A'%ou!,gIAC\lFnZ?CAaJ@o%KBISf0?2CUPs&lq!?HW+0EP4p6B"?\b*rR:;IO_+/qcM7C:MgebJJ$g:"RV@#rP/%G<rl+["m;%Z#1LQs+O64eN*-F^U/^`AK1OX1k5CXb]n8ULZa+g/^V&cQl0AfC])@?`H.;!f323IYpc#Ii'iABo2>t1_nt\S-VaBUZZ@>TenNct%s#RVX[Ypc-S:>cqrPQ7n8<?".r]>>U5CH^"T4sm&s7"QSJ!kf=9_#>n7C0T0qrk$*<;=/5$g;74r\XXsictU*VN]+ZeM3<QpUn^2%hg4NSr;=OVrRkPL_3b,>R$^cSHu9ur^[q'%i(_/uA`=NPndO8[^[sEJgFicuoe/L<g:6K-k_m,=%(G[P'UiCb?.\@!P2Zb;q<C1>%IsLmU&$Gs10&QT?mk*F8\`<S<)pd7SqM&oOcL[.$/3UeN@4GdQ^#;cIgno>[LlCsZYNq@diNjI&j>-FuaT!;3;K)IsT>dl/Y38ur%FN!8E+cYo!HK^_=^@[nerc,#El0Bj%9Z>EeNSAaOe.tuTjZ&u>d:R7,b9_r0g5GpSpHP62$b+0M"0-Z']ZjTp#2TMg2i)RBLmMI'%IlhLJ?9+q_Vk<tQGAJtuia&O:ZHbf0n(*[q%CA9S+83JLj4/YWi6+&59_dqT6ea#=,CaXGr63fjOKJQ_q7eT>U=+teL>W%'b<N+5%%C_pVP)s%"rlr3mJjB>6X.TFRM_Eudj8XT-odtY>s)[fsr3uAM+50`9R=8\>ms]HG.@.[<\$+Zeo%'#>J+f/2^Nod9lYjN4kEg\r%qL>]?"8)-0hu2d+f<:dX'%u0+lqadU,&?!&8XfX#)uCSh-OYERb?_eJs7c$m.=^G0qUbVRgm&foi-ujKOams\\Pl5YKe%?s[AE*_%+"k#ls6.c&i^^#05rX;k0E(Y`rSqf!h-?eWT3qQbs1#*o60!a0]M!g]<FiT$hCW*$TC9qK&EZcShYoG'ccF,SRu<hS9:9XU4ns%$%lb0LsLQ@_8kK*t$9BUfce2a.^Pl?qP2:XQGV>Je,rb:N$nE/o&R1S2,IiB0[r*7@TlRQ,]B4Uqh;R>lTk=S2chQLb/a&RY>T"2u3%J$45ST$]uVAj$+#j=It>Gt++KWO/,?(fNC_o$SEC`"oYHp(FfK.B/q3EokO$adlo/l-/<(1Ib#a$!Xge<d._^D*'>(/`g]D]nDrA%N=/qd"YK\)Q@;-CSr^WgF!m<s=YVJ(SU*KoTOH$qR;"<_X-Vi#a`"lMo;QT?5;?ZT[$S!Q/`]o5ceGT:b,L0O<_:1E`gQN5G,D+$%]p9T1=sg[3cErqB<D/AFjAS^PQ;"i,fq3Q:0OqJsQ`r:78%6rF/nc[MZrl$TfNCd8?/92Yd8R#-f4*B1C1l6nfNH*scDjJbB7K*:%91rO4mcPHj4"IA*SMd8AF%P3YmcR3ncJ.FrcY<^b[++KU=`1iPq><=oG#iSWkL)toJ%3#eAhg_MZ?Z'\pugA.\)#B:DI*MsgHj!V%*hWWRTS0A<h=B(\A?rba;fgG%hc$>J6Hq`C)g#?8T;_M,Qbf*`h&RGn^,Sq>=3nVZjYp7:rUSQYrr/76rSptOs6>*KqYY/GG!;#A%=`s1qXP2k-9,[uJrfH0RZd7<#h,=KXcCZkQ?IHr\R'0-J-f7"$YN/V;PV>mm0o[(WUK5(k:/F!*)EL5'buPQ6f/S8u&l=qA$fi3.%YjP<#P/X7e;B]b$3`Vdb@Hj#4M(raS8qC6Eg)[sF*&UnJB9YhW&/-bd:P$N.8/e>=H-/Mt3sCe3SiR/Rc:CKY7i2kjUU&UR(m8B>%XH7m'_+AFfN7ASi>,k(5*0mcGLaJ5kqJb5g"3^>U1#D5e&if$3rR<5MacT<.Z$@di>k^tRaB+>^;l7tsj;dc&P`::%Us*J[3O<&g%!5>(1N.TSYlM/FAPqR.26N4n/\POVOl7?#02`-ilL!((4ek0Ko\^r;_,CS<=H(tC,c:K_BkK+T$ZSf\B(X@;'>NIA6EMc&m-3k/6%njt>q91REXU&rK0TVC3VEef^Rcm3BYS-$^+Kj7(HruC>.irFhd]#I<g%tZ[=(d3ca00,dO'nZ`3FUh]79#m95=hXljk1".>j?"&e%n.dSGd6U9d0@^,N1-0d`Z3jqqNYW/Ed8>ora7)sEqC)Z)$Ihh%r>7[]8jk">n/,nL/<^)_h"6S)b9BGV0$q)n>VB21cp&a16'\=A%;?L^4)GhF\F0U&2T[d]NG+in&W9Y`eBLp4(+XJ"[P:7ogp_'"\=cE,P-l/$d!O@(mAALq#NY-akJNdXY$m\e;qAXa*8g,$8,mk.D%\5rUi4FD?PfQi-Es'gr$1mL1<FW@s$8m:;UEP%E=?oq3a]c1)@S<V0GV4mn($>235?E2GHl_k'sL(Y(c@Sc0-Wf@Hm3$fKX1.Gbb%Efg&>8;YFW6\ZRh`Na\nT3C;R6?Rq0(1a0M*F<POV+=i?'%J@lX)J3PSb8l&`Is\M*$*`DjB"N2V/I>h&KNm9>f14:qG,=ZnsQIT%`7Rr/1@iWGV8^h9;X(")8/PIi2NJ'i[J;j;ZFNTtCe:itE[\47C#rPVj9+;Y6Uqb0E"Qh&<UT,TUOo*_)Z:;I0T(oPr'oi3:AG>s%UH8<R?lq6cZ1E1u)Od_jBMq+C&Q",'^81<K(mX?=ZrC_<X2B-QBWek6F\M\<B.TU"KRKeY;QMQ*TLjXn9'*(:[.&"!7Oh#[Q72(K%jNtB6%_tRe=-S,*MtWJEJ+oA)+B:7+..:;k+*.Z^)+88U=!>W"6c6Mb^uHSoSEDPjW':#68u1q2J0[`R[B4M6=$(m4bYL!<BUH)J%cPT.&kjS"@W._Lr0iBMfhi?>u4$sqZLtmBR=J\?W2+kDu[N^,GF?7p/TBMIB`i*rNA1t>J<(RJ`jB46f&c,#ZL*.clk_XX)R^P'H%CdM]nr10dr-#Nu$e`MaO0XZF1\t*53k)fA0NJ]l/BZctMI)BG?MGolqE35iA9_MIX9/W+.;.+J9XFj-@5JsFF-+hiBRYfRJ+UIU,%ma)E;(6jPJk866kko:/-ce]Xc5D]S8oRRo^ZpGi:(^<+-H'Y5FK[mLVP9G="C8Jh`.[eH`H*l_`+4+YOa](';*0\5h*<;'8BZ*pH%'/VOP"`5q.AEil'/;T0fjHFm=5#h>u6"PW%*"P@E6eNqO#Y?%j-&eW%U&pjcN%H_q!CYInCGH@L*02YV_aj7F2q$p31PY>)M&\C+%R5&HA$\.nC^25&qA<'_f(hih(Y[4WBH8GWdN)c)uDYS"'P*A-T\Wsm7^sJ-B:tqE&mp+g5QcAC^l*q1i[5OfF=1$GtTX<1t8"QZ@%"\FSS(bhud#m2)\e6:p:5R!If$+_t17a7Sa:^gpLRQ226O4K3&MT5&E*LV$pBAAeqWeNW"Ql(gt:=:Lgae>LrRcK-9(GJID:uN]*%o4Nm5i_u8=_UO+`J1,GhTGEIp6;J9A"LlHSj'n(0As@'r;AH0P/i#9+).b'cPpHI.bNStf!W&foFY`gDm+M3IdR-j)Jqj+1k>S_0%D!3KcjMoFsC#M0_B[W\N9KWS);or:o)hu;W1kMM=YtKl8K4&QGOYB8aK[I`5e#8JZG+(!;QF36XE-"1<C,?9?O:b8XRDLA:7]]RO%\E--A-,huVBZFR&75YGhFZsUHW\PC@J=-s-6YJ*b$qKQCNCS#"!\ldtJHkO:TJDBSa]%dJ(o+B/r=,*].V/#`8eqrf3MV=;8ZD5N%##usM.B'"j?jo@R$JH(#.(Ip&*cj&Qd_?G^m`=3Wl]nb(`J<E,MX"p<dYtVe5-X5,,rp-LTik2Fh"F*$@G;tU+PLCK:nCrgAI'r'%TS0'TObKJY$[1a8BsPf`iu%Qt)aY+IY/M2O!?6uk-b=N33G/)QMP6rCTak]mTf@..$><*alaOsL[)t3oChF:tZ)k"=4NM"AM+7Xo%;bc>P%?,?jb+uJ;^.B90aJbusU;ac\V8;(<@b/J<J_N>tP@mZ'`cZu[S;U)4i#5^lD?c<:MW%!cV,r%>XL=@)3L7:Pb4T38,DMnf%3AF;a<$3jM+YVqdN5m#tM`%BR1^ti,:j-NB)?s5(>'.'6rrL?=dDjhN:lE4)5.7h-?;5Pq3:9C3`>@VgP4FgH]e)($Q!-]6S5pYh%=ZaX3BR?KK$tIl2o3;(HdPVDTP%J/s+aCTPclH"%-pbeuNagY$q/tYi*Z$epUs[]%,/jf)fJ0rZ%0nie4=\?-9DU+Z7&'R1EAF:U%61Qk/i_31G+\'G9^(1W<;Q^%cl89)lZ!]njKJ@Rd*FiaY3)*!ZI0F=fO;TO?OYJ>d]Jb;V0mC,bnEBWST9)Mf!Yld+lP9Pe53b7b%?&9S(;:GX\O^4--qOYLI*0l!)pg[9f^-54=8N+9'C9$3DaZPdl?Xs8M<NPr1B>?4cj^*VoOs]<=Y)tJF.?tj4Rc/lK]gt_"Wi6@L%3V54sI7oQm#+K39>S/E[;Z3RFVk!:qSk?CAWRTot#q"D4ii]mk/Lae*6dsd&O'S^EU5[.2e#ot"!j(l:*fC9_r/,&>O!<bSO.e=$%-F+eilNO'/\.ujFM8s]0Z"8rP?(^9,RUX+To6>g)DcmJ,\X<lhW16aX1^WBPHIJFX&7$@K+\CEb>rrRW`\L;co#kg&]^A\2?s#Y3%oGQ,Y.`JG5s!WU=e9`5Z!2D9:oN&W1o'WXB:dD7V^f-l^)5@[%(6S4=$eAiWOS'sg-lN:)ls$Q\734orY%:GGK6=H&iG5qS/Jdj\%`j#@gA"##WY7Z\oaH8T/:,LN^2)M$iU*#-:pksGC=i>"%K2W/'$7P`*+31H"0BceO228eD2Wu))'3#%4q,9ro/NLtqplK+-oDqd:%cu_qD5ujB%@`UjK8.%JD!lbC(PAe"=/K!4n;hUI@KZEloZ?;!E?CHBJ$kn$9JR?U![]"T;+#;/uJFPH7Kn*sVMH//f_"M?@SY?bd%AfhPS>/?@ECk`p*`+[Lc&123mQY@_kfdO')UDPJq)(Vf(nG+bK_8:3S]$`'cD<*te[D!&,j8oF),^%m=2Z,T*C/-_t[`5Z%-jrbt%Gu22@g4`-QL,LlQOqh;TfPj*S58ZQqD32K1;mX[-:Yp,V+[nn@^sJQ4)_PXV%1f[YSVU_9,C5d1#AGc@EKS8h-kGiuOf'mW7Ct6#%U)cmo4L%VJ/+E;/.6?VBT%b=TK'6lX<LSf\=B;9O#W`5o\.")']2%`$<V/7)06/J`(fX@d$_>>jfGnZE7F\#<:4bp&pS)#lNe,YW%eHdpg,psN)<"m0lW@J'c)!@Xj%_D[@8*QmGV"ZEB,8Q76kfZo6#]EPB8WJ^)6d+R/o<NUqeTE<P4lP^H;+[.\1K7qMcPd_RA]b@F%A):I`ZG<5Jl7c)D4HC7@fBuB[4(Ob\NO^,K8EGJ.GPXq">I'j*'#8PnXJT'-l_A!;A<dtXBHB`PKEi3UXi_lBNdB!/7p&*\gfel[%T6Rr)[$Bh+ST5Q>OWMGb/ta5S-=#=\+lu:$7lSbpUKE*+riK*jjcMcbFt;?9d8utr0t&Q8%C/tUA.aA_nkF/ZOP;%gLE+?GQ6nAD%LIr"KP2)UP$tO;s!*+R'o6Q-W8*8c/a5@/-@_nu3gil]S7[ZXRbuApnlt70dgLP$&A*STPF.Q];.IUC6i9>/!D'\he*%D\8X]T\H%4KTe]9&YQCBkBLRl_m-P+j!GDXF_3=%T.::*Q.qT&l9e"j(0SWCVGd37(IJprBqA4eYC2e%,@lqL1MlL+M5i`]u07Jc#bsck&hTZ%@*][kaab$PA>nJ\ZFuO?&B%\-rJ1AW^@s96D_'E-gfAh$s,4"ua*>%/lnq[JHZc[_2Q!b68H-U7>QBi<XSeWePBB<u5C%Zm!a%Z1%'B7R'^m(-E</:Cajp^gk0E$7N&h#MX(nbIha0>.t+4p8A23-R,f@]["qZ![5kIr[:9sAOEn']Q@n5AMd4H5>U'Ug'-`XL8nB)$U[%ZK,Xde7]8b\P6?\):g+<88M1Q9B7a>o/iG+aR%dGmdU%sH7g>^/-%lSk[;VU)=ou$Xg/4$I?S$#ELm/:Ql'u81o\5FVV78+odOq+%AW/P](9+fRMAPp(SQ3gCQ>cA=Gl;57q,-87#FUU'Kl1KYk-8H\A]3H1"),J001%:Y&>*ijbbXc$UUp@s70OuHmD=OT\N&c?JE`Ma%g1)s^X/g!8_qE5$Sg7rpi,'ClnQ\X?O*R6d@>7).V?IiMJ`-!R3NP]J.q:p-'dhJ/Lm/RShCM!%7hdSS$Tk*fOkIFmh;RspoupI$%1L"BOqSj;G@@he^+[uEelgJiAMd.qjCt@OSO7D/0"7o3'MSO?LMm[De.U/d,/G]bgRjQIgHC)+Yj#?:\]HS`oi:/4.PpV5AH:'1(%*,\'^8\XLp$g'/oL"'XRau&cO98>ki0eZF,jud93`:Op*XdVppVlsdF_s>L6b:7-WiUnsL$l/@jM]YhVNfh5:N3euBhSd9f7T5D;%9O=-a5&]\ik(&l78bjBj^S&pAXI;h*VlsjH_s>LFg*R3EpML0$/VMI[$dPePQ0$O")5hJXD_2e99[N]^@1"3dkR3ghV1mO29djq9%(*m+i]J7Qbg.kl$A;AKt;q"T=9uH/]<'.NI'arlt<04F@$SkI]PKtUWY_,E;g6bJQ9N.Q--nBSE9U\r70r;QI_pk^.1bIVHn*p1u%E\>)s\Tm\U&!X<:$/qPiLeoUj6X9[P97MB5&=af93UfAp#Dqa9RKdD.HWW\?*e-X7JZ39+C5S/'NLi2Z*'R\H3`NZS!&%9/fnr)3%<u!4;c\O),/kEe*',sHCNQ<WteE/>#Wo_lQ)H)#Sj=dJ'4/4-$h<Cu/mdRdCA;P>j"YRj\R;[f`luoX1^lc%dpUL2h*`*-eDt5/0%=\9\cW_*<eXdi:iB0pmePBXSb1sD@=e)5)G%ThPh2jB3T:a08%5l,OW/Ds(487A&%?)/Y(AeWr_0e_.4(+,qQ;kKQDW)SGkHhf/Q%l^#X(dq>%OAP?[5Y@tMblcU<U.X07tolb@ES&3<*\uQN&TX\+.+QMl.]KWTN.o#g$PK>?(eE8D(2I1B-V;dLa?I0L4<_]I&doSE_%iUqK>&2sslQJk!s?GZh8Yn3J_7I4LFJrJH@f=)NS4uJ:f9K84]9QmHkcZF2]-*:'Za-?;o$ra3kaXl?2n*p1uHB0o)2'VTP0'$Rp%SLB5^V*ca'3Rn9Mf2&Sg/XSVRdSX*N&R72LL:W3ah7,pf;E-aac=Daq1JEcH7#TmUg`8SnZ$X>I=N:)giH$PM-\DKG_MaMBPAV&%%f8JV"M,@gm81$HtY(L@n8hQEek&f;<<@Vg1_?FLZB@7o+bhhLLnG(7S$bXV6E:S5lX4e3p.B$439:lSIDNBtt$k%)!@:A_Zan5Cs%%]<_;mNn6"feOFSq@$<'N2c7;<D@[^IGXSY\q#/,n2g6,WF`sKR51SNS04EEN"5ol:Q-d%a4OO_\.T1uN%7^U*NElJX-D?n\I88h%cDn^f=ME&;iUrZtP!bN+Pjiu^q1@)<MM9PZMJC[%0EOMT#nt5T`e7,OM7aHqFl(QcEKo(N_N$'Mckj,[9qo3t=#J[io-I:)Q:N%j%3)W6uI/@;Z+X`Nn<s9CN7/.lP(a]Jc-5!9@+<'Ml!oIF:hs2ITV<=Ai!7PPIg8%,ph:p^*5/15EZ1*IZ-pG\%4*\Y0c74Oe0UEPC%,IkPP'>od=?5\kY8i-Xb'MIT]!f9OG^*,8IZq\b\;BiGoS%HT$2f#4[/s1>8o.E[;'+;<W,>p3IXM>+g6V]<dbOq!O-k7G"(M>cY%.c]O7PY+$7[+AsC0Zo4J:0lI^LX2;X8l6c]h;bG*^3FQ5@O;P`+H>K7N!N,/[g_l\1Spes,XSFI+]<H?>]UKmM$)#$<,NYL#qXd=%;k#+rftGYdiU`Nr;HB,7QM2XS<Z7>$)%3:><0^+1$SioB_<2Jao1Q]!R%c?1IF6L5Gl(1Wm?lZ4I;W]JAEl7)?.0g#?Xf^?M1p+K%ih!!6%1@RH^<"*XY8o49LnQ/%+./5l,*N<8[)"Tk9a'_UjPhBDG!,2E2Rg#LGo!HiGrn-;ZUDCBrVrD+j(60V(f9,m.ode>"OA^!%RfI`c[h^O<rNJlCOqQ$LHHD=I:#tdh-KTG>rdm2G1J4(Zn87S'TAQ`4$kl,d]I/gM$\nm".)6md6-q6CLCKC@LN((_*4__88J*"K%Me=*]2#qW@bA!4J4.<D*'m9d1ca7t]YJ]$PCQ-Cg0e2XsheFdgY^i9]O_PMAD*^X-9CdXB=^ia09Q;bS^,XRVgfb5:PtF-8[+ArX%>%LBUVlsmI_s9r0dNh[\am05BQoR"S^d:aF'd]s*JrJoinG:)%HFe^VU.fsRR$gpG,#VT28uiZ#m$ojL@epM&<[j58^<PQoop[ha%Cm3L$n2e"qE]5Q-!f9HJ"MEtL1?-d"HP;;M_eifhau&bp9:$nPJI.#N;7N8Om#4i:[aWeag#;NKNc:+?_?eESj_E,[&4Lh7V(mca%AAfS(^9q?TU>.@pDD7JB2q(c3%e"D&.U+5e9V5a.PqePp^7sj%Y?Ouii$DbN#NS*l%Mtg@5_q+VEY>au&</@QY>;5l*+NL<d'llp%c]H87cH-4lP9O@NQjb]t'/Q\RaXl?3n*p2=FW<1-k>!+\H*cQ)GX"P@K)"VOS8pr`O+eqkSuF6c<9bfqR@]p*L.kkW9nOcghs0JO%e`#j@b'T7!n*kK<;+h-.>#h7Imscn0#S%Bc9e9re=!FP1;k(+(Qr!TZaR=BO"`8^$P7j.O[\CkRO"W6cS&FeDO5h^&.`&?>n6dGo%#f8R#AB9T*:JNSP6!rkT02,e.RD(B(;,Q:>X,Bs61)XQt$ra3cWU9=89m:i1H)74W.h1u/iY=A(!_53l&Ka$qnUc_?*Nj<4=Hml_%7c]hJC@d`BS4_asg6D.i,(DnLh\e;>l:t^:FGJ2/=#dcR1]a4mksHg6SPuL;O%CnDGeN/6eq,45?`t6:-o-^hW2WTI.$nREBu?-X%\e]*a[.*^Y[]\j)O"YFQ'R=3M*aqp_o1TRrXph;R+]K7c4O%npCVe$&J.%K<U8cFP]"m:=g*.7C&+#6h6)(2kk=.$kAZ)\EZGYkK%)`h9u+lW#:(Hs1#(NbBGonp0>'cCrY>i/_h/Gk\?;cKWn03Ys.nWt%8^E`:ceG5Y49%8(=\gBLd^:]RBjc-'_nj\cFi#Gk;Rk,`u%,[fqiN45)1"NC:`9Z3;P_%nBJVhk,\nPOUr$9P,(6!r8IV+bLs2LgM6Dq8!o,/8_PO.F<G3u*VY)^$p.FV0L[60.F7lWXR%XP@m/%1*.?01XFQ.J86cZ.H.5ZPY!s*[*rTJ)Dl`hk&%gBBAY9/S)NlN52D1lc$\Vs;Zri?<8Tt,#f9bH6s`<7ZR8]tkc=5mE.<+C^87,Q%(#h4iKR0"@AP6OSe7F^[1jRU5D8$Kmhq6+pGk6Pt35O>]J^_;@&aS$mjlQHFM9He)i9uM&M8hB?YZs)Rk"C!=dUE"\V\5nlCKi,Q%9V5dP<J,"jI%.mglSm#AK[a2rgP#'BOX\Vp+ti4TZppMK5g+b<2\"`ZM:#9/6*H9I-"WN`+XThu:FZ%N8qe9a\=bMAXAUCOI%.mg%lSm#QP=8fM,cB\AKnbEAMT%:+^Z/C#i.D>p2_2uR',oKN()f,FVCjf+nQUq59W2cP-=FD3V"PX"g$1&Ul>ZIfY%Wu2jksu\ioV'C%"r@"d6nb;p4Nju0j#L#IHX[i*"dB<>C/'OaSK^U[(CJTYPhRq'$i8Z0-m^X\\%+SJI^?a-4'ii<-Z?r3fF5Y*YsSjW5j1uO1@B?n%h_M:li>Y;;Cbd0X.l0nJMSOL;hK3"uns3u6Ma#&.Wl[(LhrX=rqT\Rd0_U\"1@RI#T!/(YhS<S/.`Doko``_ZL#M]]<OjYm9\9M]%-@:S/cZGl7M^CfkCmb\dI1r)N9r;Y#/q8Z.DjIl)nXLdEHkNXWatLL=/E.s;Gp/XQ8A&H;+QL^[G^X%W^PJ`^ab9OB_DL/=:,<pI%TZh8<,4BB9$o*0bWE#/(/DoUYnG8-XmZ#9(piZ%PlogkTQk5kd*`%;rLE_Kg)39AVhcd7CTO@:^M9rgDUA:+"Z=Ijc;`(=;gCbB5%l3s.O%Aq,6D=.n+h^kt?j$>JE38Vmu59iDdba4F'4OCV]ocu/Z^j%2%)>J38j`U>TjFb+=1]Hb6cSMt9T9GVH_>pGBK4<JXQ@m)S%2s`og4N%fPb9IBLo";LP(1S:]=Oda\T/NL%$pO^0W&OAQ6TeqSRIjlbI>US%T*i>g0r;aI.9t49G#g&U=h`/<iUn.mM=T4QT,E@+%]=^?bZ'a<<T'YTPbOfG1^XC.E5`ktj+W(G]<JR1q@[:Yg(6N^aOZ#6)TJdWQ4kEOg`Sk"qKcfsKa+JATN4bWL5i[^?'NJn<qcj[[%1@VPX(`$+f5Yn7RPtCWtEm:G;_^q9VXBVQY/G]cRX!X$5^<PQoFa+o3"0*=[i\f&/loj3MSleZXV5Tpnm*CN5Ob)+3k/IFiab3AD%@8_N2Lt>jSAW_jeb@HFn1JFp>9P4)YItuWoUgA*Zh1WAtr:#$q#FcHd.BCsC[!k<2aM@,!`?nC:)AC,-_PI#BOa]QeI@X9@Dj_rX%kVI$YV+bLs2LgM6DoBPe7"-tS+!eVAhS\LKKHaPSKY0F>]-'jZi4OX"bW%UL$B+8J=!`_R;Cu%5@#^)/gC^t(lJ0[`_6b&nc/%?"%p`(fEnof=sJS/=-bFiRc@eN0&]J;VN)BZ9g\R7`=@59"$1`0s`NTsCANl)L.O/l+6n4^W>.5^F[1t1N&^(+f5Y`HG@j/^\TbrUXB%Wl;2ukZoBdc\pW!M80@XJ\NQ:7q%a!1;T<oV"tdVn+nKpj;08`mlG):`:Qc?=uD_lnnn@9YMY.knV2UBQ,:`-H+[T?Z'_jiiVR(t%1_KFJiT4mnaB-+M.q<%<16_!%6s9gs>?RcCHQ+;!9]*e4.V1BY\+r+uI`%cJ^'3rm3^R;llW?%'2h2-&ogkqK>]boTi^="-)]4l!%Bm^(;$mn0Q,"u-NWhkX6rH+514/Qs_?eAL=QkmlSq)c7'GTC!b0r2%"I:D>7cS*kI(!.Z+HJRW'n[:CtVp0p/WXG+dSSh>69,'!l%$Tjh);;8'cRdTZ*]>^%TRg\-J*r@RU(_)D6X&S*JfF&6Y"AY>OUTAQO+G@gY,uSlC8@RMTDlZjm0uXOsimoM(1:t$+4+)K%rf%2p%L\"lH8j2WBEEY1M(-eUn7s-Dc5SXn%JRM\J+<(n&Xte='VoU_3]2I+G<8K@k]fs>g;3P\I^!#6jo,ID,%p=o*E5P4100#:6Jmkp;%+Z423),`m-:7iB31aA!S-558X"4Pbt#b2-WelJcUAMV3r)5^G/VJ5iYItuWo\9_c=jGp+@O^!#>\X<na*0deO.V@]U/jlAS_!)LW%:/<Z',B?C5[CM\6&N@$LM\J\C4<lW"e/>,Q),o5Q/"5nq3S`%M*TJ+mX"oKjeri>('G\KM4e*BH,`<(Y4u!t&iDuoil/b:](+`TJ%"gm3GPhQe\$gQNmW6*P4qO49CHl`k(/NF-4S,9/ILl>QL@1`OqdKm,oZ<r/.,3/mE_PnbP`'WMiOf@q.*Fc?4*,@L4Zsu^TI>/3+%N2Z0o<D@Z3*0,mtnMN&09pMoQ+YXfV"]d2*W)C.o731H@"He8a-Uq-F0l.J29J/`5:6B<E@\pT=8<pb01;L77VD_-mZ[81R_riuF%V]9^?(RN12CpI$/f=%+WMm]Jt?AuiLhhg9W=-IJ3_^\Y^*&F*Y\1T+%W_\am/n;$'1F]eCEYnAYSQ3gCQ>cA=GTC+gAhV^io#X14%3fS@V3<[?2F"0U'-J-Ct7$/WG(l#LM\J(?(DD7JB2q(XWB[-3M.d`VO?CtY@PqePp^7sj%YJX<:g_@JmF)kfgiLl)^L;ap.$>0]c%hocQa1@Vka<$+,$M_Vc>9WCmNCG'1/Z!X;Ah(h]8d:\hM24;\ZD>k$Khh[&m[#H;%*Ra]7Hi23H`KjN(dWh3rs$X06_!;Y,pd_r"%R"@(fIDO?obma\BVGuqe-::J!@FM6ue9:\WVE;F#^\EW.6NQ.#3M9kMPdHI]O(,@/Q1>PAF$Z>;^jCsd%#Lb#9Hr7L&L(5Q#a4-^%=XgD9gCh%)g>'t#,r3*A\N>0k5*,X$GGk7:o6'i@=2Zdo%,Mt%ooromJLi#)npt3q4C9[&6$]?9@*(N2ds<A&[RBP82RbPXo!Fsr%VTB=/F6ea^"F35C-1Nr1<3egZV$OJHQ$a]KAAmL1j.HDNC(_[BKFk+@7BX1FOh6?HaR+6-"`8-idi^EP[s:%tIPWINe$-luUP^9(%AH^8B\.#nC.8mJ]SVRps3'f9sc*7nlW^Nj^O_\i48rdO^ED%!!BT"sAPfW4Jk3ha7%K"a)0@(F+Sn%tZ-+)A8Mn%c;`ktk(j80aX%7>AH_(rfid4XX/F9VsJeF:E#!.BQK^a-?;o$ra3cWU9=89m:iQr=Z\H'WFj?NaPNXk)a$afD%dlW`R#J5XW3*_!;YT,8/U=63JrR%Red`/k*"p&gnIC%/X%?TcS2bA1/5r9q)c6<_]I*ce<Z7n0$9SQ)GKsea!h^\4fVI$n[Ju6+p5#E%*llZBeneQ9WCmNCG'n7U.(GI%GUD[FaUlp6Qs)A8bjoWM%^4c/rUc[g.Ec`h7(cj*ISD5"">)t)jS8/W+[KYsoSL+uVaQB?],sG@9bA6NUn#UPKaW_"7#%'i_pkX,%A;5#DGPM)*r#65L-PUhaoH$(iQ8/XY0hE!$qK*`43=L`g".rAJl?A0Jb(uQ#9l81=H#ad0E`8sg[mYt<3l@glPH!p@'hroISD=g`%oX__-&.+$>DBTl53UAXs<Eq:./!<=*hO>?QRhUju'U3=s$^M81W%G2NI`LM&kjpm:-<&[`CRX\\3ke2q1bHSt@%'rNf+DkdC?WUo%cQP_5iIk?u+\lRdl\o6m7)H>[',F@J;c9#ukn%_kpJoB)R/@,9IV72==tJRnn*iBN:7jC@$cj^;*Ug6ZqIae&)jYG1/9,d>I`f3f%'r`BuI;?Y+Gp,Oi0O\7HV5Ct`885mT@["nQScu*Z.W9,A4O`SDh@>V(OI%g'.X`pa(Hm+-+TcF:/0X#X8E#g9hc;"Z$p6^.Wc"N(%UeE,=9Yge3c?.@+YVHu@h_6Y'e@/i7Wl\4aqPpDS]FM^Kf]E!"\Ybg7OJ-0-X]XS8$scoW*F=b3&197&Smn',-QfLM$)*`?8bFNa%FBC.'B2X3!j=f`g40+Uf/DoUYn2e2l?!UW3Ng`IEa'tsI"sk6o';6\&oG/^0$ou-XInH::h+$H0O_Jkm)3p03UL0kgQH0V9B:'TK%9P(-*BY)+E$.5%Md[9d1I93%B/6#Cr+^V<B+l5j@/)iu%:05Y`)FOg[AP@I]'hhPu,18fRlKTj![S.?;oGON,9r;Y#/q8Z.DqMrj%nqdJF4H]*5-9b+XqOq$.q^*LU"*?."'.>%+Vb\kk\#5YC655\uWf&YR3@<82(Fec#cBo"pI>/3+N2Z3pF\R&S>af39;h7IL5-rG3%@ruB0#F'2eQt7K0#@f<'87`BXHpTfN>hbP6+<DZsW3-/W^Dl%HQnmG<T@"K2FW$tZ9qH(j-=;P7DamYfc5d)GLU/;@[UKOTc@[s5%o_n^i"He5@(%S8Q=3HPWRcZmlF=D1Rm7Sod/jc^ZGU?h0-8b*e)DcZ&YJ]%42NBfYd;fI0XlD9`"Qc"Q@TTcJ24Sn:GX75.^iL/^%dZlFY;44;qB^%:(_5otC7hdVTM`[\uW:.*99m6:o+kCWQV]EeqpOi]f4<HPfK\,0OWlf&H"j)(6I)4a#:9H@LTM/;A4EHOGd;&!*%'X"$t1DsZu$ra3cWU9>cj,CTq*M29&W4:m04/j[e5!mSM,m;.%W@G*n01ZZmG^X&]T'=*+Q"fNAQ4EX$asuIq7.,Xf[kgX5qG(8H%A;AK0^hK!P45Y723")<m/l]_dW%*MaaC8J<+>RoQ`8D+(k/rA&=-usZ,1kVUUt4QUj`aDtJj-rU8t!ooD>k$Khlqn3!#!k`CZkX2%e6"n,1pIa`9!qU?QmWhN6j?tb(k(AqlIE`cQ"fNAQ7c')?!X;DN[\5[(NrhRVS:O22;R56DNdGS3"6%H>4/ZiI*:3I`/bd$$ATW8%#0M["Ob";q<_a.F;iD$<'ST-O.<<]#9rl+6;K9_k0Be<UX-C^WhraCs3dEmJG!I^no+V;!GYWKEV<;_uMG^0oD\LNF(8QfrH,6`/%JUf(EiI,MhE[m5a1+F3AN@0lW$=1UgOTD?(0XXK/(;%&d4+)LpI]D$V*UP7;SkmIJn4[\'&V46)CU+3.mi[+8[g.L$atPtZ%XoNd%3*=N)NATVTH>'@<gT\2Y*k/CbE%JGhkND?>q%u'i!^E8f5#uKGY[dD^g[?J=?[ReW&a2m>E\]W:\"@@MrsTdS@<"@lDI\NDR'#QI%3ID5W<sb(Fg6-L8A^uUVct1*mE[lcQK/"9r>0&J[!Q2.Kh=8Gh'1Q'?V"uEYc)%G)\dG8S;;/'Lb`!H.B(mp%LX0nk^H"BU)49p)%LANIi?!*eRW95@XZULjsL_gr=>VT$li9[;=0G,?@B;2A"&SVn^a+lFL]Hs#fU<YGMC,/N$GI]e_%\M3_V2<Gs`J[*snAq,i(H]pS%.@*jK;Rj3*Z!2'9'cAuZ@T;5=1bpESk/&tJ.<<\pNfPD<;J"$^M!6]hXdVr4nm25)YMVm/b\t,R_2?C]Xh];/a(e^CKR8ggntb2q%30AdD(#p)96bP6%4LH>+W_X5s3jm[MO[?*rc8:YPT4)KbA2;?;q)c5!Y@E2@arZ4OI#:(Lio#2</>]@EeB''2qF$4^_!;Z/ehhE*%0U\Xj9mtF;Ki;bH).uira5eo;o/j!";r?j*RdTZk69+iZjJ"t:r!Z6X!;il:Q4S[5NZH3rdGc&W7>AH_=?$K@ehSR2QqX-Akr?b5%%]`Rc1)XQt$ra3cWU06l9m:hFadWX*>>Cf]Gb#bjL(jTEV4<8S[C@3KB0iQ=_!;ZO*>7^S9dVE3$^9jSjI/`0_q>6XP,B$q-::J!%@FH];1<[0&41l',B+0H(=0gd;-bNb]`JmtON2></MAf1Go83[5JbLMRWF<i8ilOSun\M$t'TpfVG[\mn_N$'Mckgk+.?doKc/7K&%GTA<o4DsHUHu&7m.;WIm"I6j3'V$X0A=acH0^=W\<`G#lS4d/[fh#0n)bhA^Ro3h@A;KJ+9W^(I^=1\p'<]gMAXkF7IP5ZicVtJB%B8i>t9;SR$c7(`f,#Mn/onhYp,MZEV-DsO9T<iVr"m:"JPB&`3G<qkU=Z)Vi:1)CjLY(K6*rb0B75)\%$PlB51b=op;Ggof/k?Nk%G[Y&l"HAqTN6-9T;LOEF>s>e_Nlhg1\7:C4oYmA$b%-fVo65HXAp=[[g,.OBF5u?SMWHLX$qiGdW;s]?Zm&L\a:!_;M7dIpGik6Y%VERGO\WkKDXKPN5b@HFn1JFp>9[iQ<rXQ-8?DfhP?`'H@?*VA@LqQd>Ee%?uOe^kg=?Z>7=nZCsAM?i,MQC,CWNp(j`:TJLeLE(6%@B31d_s98!;bgr7LmnjO,=4Z?'1t-_$mKb#A8FeI&\*3T1fs6-Li,=mn4[,*VXjYl`Y;i/SZs"e<>dX\;4=f@<(<V"e]UIVYD"FO%RBHj-IRNk/33lp_':ID*<)NJE*FnYCR8fe&Mnc1:o]7>R`7,Y_NDbi7XYrTXT<CG&Q,Z"qT(uVGo;8:4A8GosP!ipT3OUXSVJTc4%au&d:9/g*5Kr-dVOWgUIY\B=7eXa.KaUXrhYC`Mtc%WCuHt)54hTK52hQ)I60(1W.9/t6O?/CbXW=otK>X!k=1FJ;.VTpm'8U)#O%[s:%t%ZfWZ'7L4rab0p@8&.QBRVH60G*Tq6#^ur_Lqn'F6hof$OkV,g8i5'%98CQoa6Tfo.di\`"atB+e0JcjF\S&?5#3/'^Nk*1%3ciC9eAdpHM5:tVMN8PL:faBL$ou-XhY83H-kg@b?ud`\Ai_C[XnfCrEHqF<-::J!@;;&_/XC>HGBb-7a"`']&TQc*%a?h85029Y%`*kH)b&a64$(t^<&NG2JNT9>"*jj=I-`KYAACP8d&6:6p-1VkZq5m5@B<ccP\&77cnQJE'-9cq[O-`f9XW%IW%Ol-rnSHU),`r\*%%kO5[_o@usH"EH@]VUPWG0V;nG>/!f5/4F=1=_r0Wp("sUFp_8I(\KK:gpQZ;t2IXQ<I4d7a6(4.oJb>?C2Rh``eJ00pn[j9mtF;%nbK,t8qe9a\=bMAXI;h2VlsmI_s:Pl+cQTCTiU#\6-r;4$q^f:.72Ma7pH*S,`<'k_6>?*2^8Z^aL$Yh$kGD/OB8Eg,>*<*L8e%i%e9:\WVE90cg)2+g:XdOf-1uQP0c62f@Srr\aec3C?:<^m`BopO$:]]lCJ6S8.3_M?[F\D.n!NZPT4,X98MohkjmMX6%9H;c]#Y*a%]Ne)t35saC@>X,@6OJ&;EBqp5+>Rp4`$h+c8^S(r*/P4ReYe5q$4.:^9hL#>Y=s\<5/YmMa^g]Uo65F"?4Wr=Yj%*VU,ZfhY>`c'%AaYC$9UnMnbHuIZSB/M3MM3D'*uP_%\-eGb;ae3N/t9="Kb!mJBd/I!_kpGVA<q0*GBeQ/H5N8not"UFrX?NB?H6nYr8Z#e#hp6C%]H3>PlALsGH<mAklcNaol!)?NY\GrdS\D8k%^2X-Q?/g7!/K$Cj/an9_I`2;&Kgf6.M+uLY#>UC14*8?\D:bcThBrP/p+7;[,iat%[QJH2bAHWD)DcZ&YJ]$P;CusTm^7B__-sUla$-3HS'')B.Z`L7;HO&3Qk7./GkCcp-Ou`I/'_,d0A0N1RBWFmHX1&md,aFq?%&M0%S=OWV[n&I$p$gh?N4fM2(8t?TV;DmEhNa6>+Gn&0/V=++WJ/<LN2cB:#j!4V%a?tear-3;:6qiK>I1Q`XfAD#%TgP8*$A>"EI#mE%`r9%4L1P0sMA2&^CQ0k(6jDLK%!N-geS&I`<LHgY,"RJ0Y\Xk5F\ZJ'WEZT@e0$NY\%+SJ%\Jg"JuAu=[`gq]V_V^m16f&b+[V"$%9HE2G,a!ZD-AKU`?4)DuGpSp5]HtH-`fO7N[j,o0e@D,IPH"!B<D@]4*,b<E,(.>JO!aP4ciBsj_m4&F$MO]KbVc2R%(n8K]P-@&%PqeE)#*\=NjI474rEip._N$'Mckgk+.?doKc/7LQ)tn6p=JWa_PO9oI*D]J+IOLNPoX%0JD3N[T,`<)D0JU4b-UhMV"XTW&JgEd#%+RHD&<88,*$ejUcVFf9\lC+S3HnJ-6Q?U,cicpNP?`"7g0R.Y07Cb^k+C8TskCOkCDKk3bQoNr?m8p/\&K(oElGt.aG>.OY^::LA%REY5=rXQ-Ll[4&HpF9s7d_'f#L+X=/&V6!s4<Dc3#2i3+8<=3+eE!;BUM4;dW%J7liJepY1nh;<8NU2b9m\531jPRo_q?uD>'^LX%(H[D8a]+0*,%44tj+T"GU@'q[YTcADi9uMb<O#K/3ggPNNL?Y-7:Zr@q':YcPqA1CVU$s(C,/N,GPO>5:0shVOTV*EW>(@MOKnSs%YD<[EH:*t6nMBG^(F69l>X"j3f5;]fH/.>G]%ftJ6ZmLZ;oJ'*gg69#fqUB8X/V%GLT@c%2KG-_KHhsnp=S-&#3FcBLngW0'q(cD%(Mq#gT1!Na>W6M:`aqXXnbg7i8YmG)g8d#'NLEPin6PGlT9IUk>RB<9`<p>BgSYojIfmRA/!f]bM+HU(U!"sL70ZMZ(uF&@QIq"F%&l!LW-::0L?AY4NG\?,sa8j\$R+c(=D5XON]#3^tVc(Q$_\TeS@g+[,A6?i8VFXQ/RP8nC,`3"X4u$f56\3]6P>e?XcWN:I=nu(;%ms+a6D16-Hi$g`n78k3JLR1')KCH:"aO.gZFqoA+L?7Vu.\7:)4%$[%O:Mb@-]^&4`e:7fR;(qbjI/_Di4#"G.d`VO?CtY@eRY,7%n+([IS\-!U]MB'#92)i8,DY`W:l\,$JcoFb&?heY$u9,M\P4:=jrdQ=MHk3?j61n<L$')oM'fO,1JEds9P4&XGDFL_`)16e2U=8P%g)D(e_Qq2"Ei^`ZI:it:7C("MknE+E:In3WTM/9kY]N/H>8A[&A+CH.q41NLWU9=89m:hFa"2.0PXO%InGt%_0C^Q&MWNJiMG1oN%rrjhq"#!=VmiD1F[4k$\ReibT9CaLN+r,8piI\eJZYD8gS\D8k%^2Wcp/9t=EC=;aO1eU]1+:2G6:=Efd1BP,@2V%5@L2`oL+<kN%9e/V#7>`D/3b^7J<88))$gQ`sW55hX^<PKmo>Tl]h@![qY/p6HV@O^Z1Nc"Y+nF1BR:jFF:5<IUTp_dV7%/seP>!=k=Q3XegtAIA%At$BSe`#e_d1?P.S;%,\P-:'2-+k0]Z(/I!"UUL*+AQIg#8;/qS6D:RGa"A[VERFZ#iL+@X&Rq29k;XaQs)A8VWGGf*F?M>MA]@U%PMtkIIr\:Z+d(*&rXIhS8mDp1#IC$Z/Pf4NK;A8'b.,,GQ\K0fr2je!)T(;$k>XXoO#CV(I5pfAOdN;kNAh*N\9(Dc(F4m^lIXri%\C.ht\Nsckge;;iRSm]aA:SAM9PlPZZ;Xg]h;NEmAde<lBe!%*?TH7c*)?DqUgc>1PsR$C^Atbm&G[s)Jl1E]f7o9@K;kcrdYgf-%FH5'X*u?B5Zfb#:R(eDOUQijdhWF7q3IHj8/LMXQ`YR7jm1^*7F(..PQ,;LuS6$tl%%K72S1-ktTL;o:(*ZbVLm41m8,1XY't6U$%K!r1q8Vt[ZD=.n+hlqST7q=(fq^3Vq0g?/I=O)@$-&Jp;5h)/^#'l'WZd?3J1Ng6rMXjk4ha<l"H,DE=dkr;Va(WUr=#m#SXNm,>%`R*a_(uCPib)4$!6OJ$];d,;31?.bRiO5*=<st329W$.\FK(93asNC_9SSou_pg/G.Q`&IdiDc@)7QfDgsr/q`*GA)=o2M7b;g*4%JFcBU"fdBoknD7<ecQAi-P9fu$^%GfjI-HZkL\.Z'`*T+-::J!@;;#>RGHWQ*Bo8)j2on-Wg8a+n5P;]7PX']7&[0J#`/pe7mt9!%aqAK0deGY4<7:iCBun-P7E4^sgg69#fqU[Yj@uce=5U6?C*$g/;rK=t4Pm*,=O)=#dD4@B/TUtg,iF1RiA^n20V(&]Ud6eY.3M?:%_g-o(-uO=i?<>q9UGQTR-=;P7ak;@TIduH9Fsu-u(HcTbMIA2V85Z:A2aS<+M%'3qY^gpfl'!'M=/MtCcZE,;fOlOrl^#X(dq>%O%AP@6EYA1YdlVQ?:QVNjd7(dtPE)3ET_f@1UKtI$1GVI'o%(r_[/o3EsISD/hY_,O?.<<\0/:),:S!;Y^\I88hc73B\bI@:/]FM,T%ha-,88sr1dKgn@q\LL#=fcedS8_S^3!qcF=JhW\lq'S`JP,TgDRY!\ae/"1R,tV<('2_\eUi5ntOll-fHO%$^jJ0f0K,Vfs3>n,u%<2h2p=US+q#+hD'?HPMLC.qKmVS5%=;1A<TWCap)k=gVt5/Yl"A*Q.(?.0g#c\Pqcq\o6Mh$<KH#]2LTqJIcO+.A-lOXr9WqSYjN%c%RSpe'o0b?,VGYZ:]fk;n/JRm&ZXLD5XRO]#3k'Pf0oGH?SHW]X_G_7+\r"jlTPmamH_E#pM`C0Pj-]1a[l?B;VY(O_ZR\&nTCb%ns7B/dq>%O24:?']DN[U^Ca8L,(4V^Q0e/l_jlSFQ;jm+_\3DU6j?ti(nRJ<d6V9"au&c[91PcB31du".JW1uaUlp6fX,BKoprh"%kmjo[[R=`-&pZLHWc=C17W^,F:C4WJ$PGl4hO>?KmGQ?K0f`g6qOFC?)M`$!KcO+%TJ,Z5RS7:jY@tMblg-&1L4cm)\@anD'ZRos%jR1(GWNQ#T'l-182oWfr+J0Po?C2^742!Bir"JKJ,:(V1HeoAP13=A+AkW]>o/n+MCZ3urWd#5di(*m?QbCGRi[q0eA_aR+WI/^m%4&^l%Ob&Q@2BK&-R)\0oM`s)K+]`KZI?c9d-::J!@;;&^Q(>X`kmjo7;\JYW#2)"/Q&Zc7Bj`nTW,[rilYQ[.8AO<o;1IDAeBDTX%dTETKREB4P-5C9D__V>Beb[jg8^k,ZR\i-9ST43ZBBdn?D?.>/pOtpk$qEO;<&um!7^O9_kQ3k*0gGB2N6*NteE8AgdO47V<894I%$i8l.Wl\4`qMM.3]FI_/3"2f>U%7f?G_N)LBFl4.)F@QUij5Kq8Kr5(CVa]D,\Ki:aG\E>c"f)!$jk<i;Ir5&+N`&sNDU'^h<Cu/%mdN5CORfNs31+n6i,]<n`\XlYiLo\%noDRi&74l:M4Hi8-9E!_KKtF3V"tdf_NJC;X-DKrq$[&sc73B\bI@:/]RIa>Nm2"Z'DTPF%HgEl8O3A"<8&9t>dq?Q4_,JZS>VMjt8q@NM.hAck1QUf>!)d6n/<rXNltF7B=4eCd4O`Fe^(+enfc$Ufa8N=Tm-Q^*F=;lO8j`qO%((c#@O<cUN_8L$FhJ)o#0R75uqRiXt&urj&if5En:`"=F.8eo8X.&DE3BfnaZ1?_^.NNf4RY@ab#Yl6I#omf\@7@D^J^87j*_A&O%GT(KE%Z*0n9M_WUg2Wpj*^eEmA*FpqrH+QQ)*Z&`#A1-8S6FrAF?Vc)1#,Y8LI[,!504H4"JU^fd1ZmeS,#MC8`U)<WH0kd6\m?g%VbARYR1(fuL(0o:W9i"K9m6<e^']$,>%qV5=3TH&a!$$<#pQ]:^#JMgh[,`Hmt8`pct>E2eWe3\-::J!@;=>'R[3F5GBj'uGY/$G%N/2k/"<8ck-RL2L-)-.\3)78)]K:b9KXNe-es'e1;F!9k5,r9_m&$%\!iBa"C<r\1P;i:uS:*2@jQ2@TT/g9q+5Q+I98^i";*WnQ%PGjc\M'<%O:Q3;!4j30]K?5RkeE8Ag(dXK^b3t_q"ati4eRU-kI7;U*?ADmdfu%ll5'a-d1_r\0)TESE3a]G$]ls;/jR;mC""C.t%;S&;:#fn_[b%V"BQtbcV0sjq-DHPmn:Y]&-3#5`Eo5j\oI#MX[mcA$:P\!sWL!-hg]QGMe\6GNhMI_hm#8e6<(n)$?-(<Q)9SUM"%4?$nNGg><=a:M9_Ql9O0D5XRO]#3^Dd5[`YG*sTLn-'<7,VUt0>9#<5<Zf`k<08:>9F,W3Rk0LPNC6"UniT>^c\QA:0L@`M6>=W,%G.K#rp*bog]Zo'em$lrYn+is'jS5At<hfAJl,9eH3Ma_D-0,dI+p3<jN30[[7/YcN&.NaqJa7:C0XaE-4gbn?@+l#fS!7TkH^hXb%k;Vbb?D8uhH:1S[cY7tES2Ul2bsR?m7f:>\+]2e.o8-=KHF;*ZV4#Jr-)*,\.qOj[nY:fXI[VV$VEL-?m$&5ZGPIZnA];4brPNur%FooF4Llmj03'&ah&>LPK'lbE"f-qK^AbIW!$<;p^SKd(`*l_sjOE+PLG<q_Qfq_#JpGR5NcYqIN&aq[M*hk=SEbof=5G8^Zb-\Dr%D+J(I\6qYaB]rfJio$69i_5&CNa*?fYbMMO?"%BmjQTlSIAAoo%?L:=!A/_:f45\fr'iK9C)F*i%k/JWJdW!,,""P](`n+eiV@#!%FYHO<MF^7!AQ`V;V&`LglSD5:RS;3$?2b>;hlqmV)q#"<(UtF)[J\O<@=0Y6?^g,U.gltY#%!phQZ.3XP8d2mccpRmR2AH[4f%Y7%aUlp6Qs+&pAZ)_F]#3hj]!5WlR8&J.6I:QKq_"fUFbr(k[NM/1i,XP@JnW'sHh(S4baqa=!t^63TDTm3[PSXP>m@8oP=KKHk3I![%%9I1FXU7%M-Dqmtej6T#N41B-$E)Bo=cjm`nFslLWB/8?N@?@+e/)aYEf<MEF-@g*D3t_dI>4_$`mf5/\u%R%5/0__*Y6Heea!m<%ri?BLLoVJL\0`thf.0TW'n#r$KTf0JV"td.]P^X4:Lc/uoM'.*24;\ZD>k$KhaeR=\i^-0>3-nh,3Yhc%4d6n,uTPULI%1K;.SVX%M0ZZ.ZS4CNReiPN_Zca<#b_bm-SiWi))dIPU9`6K1tgi/5#0O;S]_1ce;2G7U_XC!o-7P8VO%K':8!II*2a?+X>r]BT]&mMTd`>S%=Xrch`3p#l/Pk0fMHbE3c!p5j?\bu4g%`!5jg$po@cg3DmMo9r#E`,ZNL5#o&"b\g#9kulQNF4o9djn)ia,^Ag,$oGhWRkqE:sb<%aO_j1'-b^8PIIk[[HP;4GSP<kiAFI`>T-L.L4!B2,0OtFd?rp$14=/>96^TPPZ=`"R1(fuL8e1me9Cc#VE;F#^Ef_$b-3^NO1e$l%`NYN#8l9e(+)jZCaM@*T6T>j?QAs!8e(!Pm3bf(<8q)mpFj"<Okqc#818_A+=#AalFhHe)gXtDB;7c9k_jj]=@<fq=8C>p'S-r4_%#%!o=C++C9@uADcogMLi:7^:^0IabHne^roSQ1lQn+:`sGBb-WOg%>1S46mU4N/kfQkV']X-=]%ek?4m<Ct9L"fi83d?sFS].hKK%:rUlArdR\D<894I$i8l..V1BY\+r+u:0pHcX&e=t`kX7LQU7J1'Y@d5,<Vd#<],8*6]/sH(C[&W>&hp5R%c?1IF6L%L"UJ5?_jXu%CmYVcI>1Is-<&gdl^I823mN:<-QO@18p,I=J67]fe@,]l&r`aB-P/]JY#>VTBago!`[Qo4EgFkk;[A;Cg[_kf0"86$dZgl:U8\W8%j.g.Vcm0S6%D;U>nqb8](d'gSoPMp2`%Eh)mt&k_3b&FQR:9#?eYe4J>[h]@PhRq'$i8Z(.V1BY\+r+uI`(ihnJJa`bU*H6\s)k$%O+\5uV5dKXeVa#N6]/t#$PT:<Eu@]g@#E)`ogMMDs5Z=%PO^d^ImK^a=Z)WD:1)UpLY&@1NY5EUL:H5cKYmBdQ-rV;Q6C"/+[or"%KScCWis=WiMFo_578&@K%]-7)@7M"aW!b\^-<&gdl^I82\^XB7jcCd#)LUC;W>IsL.YCP<W-<t!OWbe`k/J_(_8ARC_)$3_,(5&=%3Nl=pa-65N$r`WBe$OIg\&77,a)MpJaTR$:8eLZkCF<HR18'HEl>T8-5j4J)'*jMrMDNe)P=_Sk:YKS?Cm\a$IAa5`ZGYSkX!#'G%a0*tbpI(l/Bde)'D6<C8SB!CC__^toZCO"#C*#K9QQh@*(TFe%8UG</WD/Rjg:b\aiUIlTI!`n3-+4UMp^^V2Z;2.N:!XtM'-`2l%Xs&ori:%'3D?rQk)35FPe)`Dd_;Q^4_,D\!BagE@$rV_:VegL@Om6mD4Q7<K5qH\/IaJXSCFM*XGRQ0%'bAch'e(=/InqVT%<>s9%au&e1R1B$%\CrX59&26?@epL3X,O%HoQ<lPGTC.fFt?=Q,6*2FEL*GG_r/iaKr\UlXN:0lG^WtNg=P8d(+*$kqV4bGE0_f77B4ih%P9HgL0X]&jb"c<kFGJJE4a&dpd8)&X53,meQDJ320KU=Rm1fEn]8-T;4u"$;*Ad0#':!3FMj=iC=jeM4D=SR,+f<Ph@?T(2SZ],P%%Y+)M7R`-A7\@qJ50@2Ga:kmG]S%Fp1`n?["Can;))uMC2!iL),Yt/-6rR<oA;T#MIjPnS7.Gl?\2.kT[@P%/kmj>DUQSm4je0*D%o7dng_'!u4#[r>Gnqn]T+X\+]IN>!K,k?T/[/$,kid:iOekN/\M$u+]L8e%i<-S2=VE9/87nLYQen<p\Q;/l;]h:(ZY9?mX,VcAk%R?8EtUQH@"oer\G9N,<*FS&RXO*+(F^1B(<oGKQhRS8.-Y90GWc0I2gmT>dp;hS#n\<?UII^W_\e3b^V4J!a!O<?=JhS]uH#ufm+%KSKeX3GdtZ7(ch>?8aYi[psFpoXUMmb%-fVo65Fb]Ir4iO2b&noS-G@a2;tW_4O(%N@Jga)j3TY]KWPBTlLqrY=qle[rgRCK8Zdp%gG-5HqV9Ara]*K\Whqkj/jlBZ-_Nem>7<VNo$K-/#UR#4h"`^_+[or"Ko'5UmE3tr'U<CtMj>uU]b-G84/Qs_?eAL=RJKZcf5uf"%d3[pU,l/.*1;N.1qN:]/YXgZ_E1Fbb"`]Mja9;bk:i_hBbJN;Fn4[*iOJ+oMGgLWVU`E1`l'fsUB_&+HgO($e^>Wg0/!d=N.A`.^%]M3iJ&W9_Jn\ngsWoF\:6aFeKh\1q=lI<Zb#*\9Z1EAK1V#;d.[nMOD5/Yl"@qn)R:"(+hkKDV?*uKn`=6*7'Xp:6^fH"IL<El93%CeHF;',c%#1!2`oY:C90c\4s`.3]d!9W]jD\9<>H1m(5!@;=>'1<[0&41p"ug>aR^cRV55Kkhl`K3Bc0GDZsOA0XL/!:r3$KCFsN%J+#thPX]f+RAqF=%gNGA+`<EDSdCde$)p'W;ms9[nGnk8)](<8S:QT,<DL)fhbk>s0H&o)&<W^/DFC!A6bLLUhhj8o@eS5,#SVJn%0W@6)A,tP/MMkGL>Gd6.q@&io.?doKc/7LQS'`(6kq%h$f]bAeg(t/J>p=s3*Bl#>&.,jA+du2n.[L^##'4[U)7gND&O9#NI2='9%j`,WQDJP<]R)thF*R9DGBsc?[/@P(O"*hG;[kAH5"jS9F.u*)Ek<OpG>i/^=549V&p]aY:-Q,Tbe9&2T-uWI[<8'('S\>7H<\7!n%VlsmI_s>sni[9;fiT!I:*#^Jk;[@oXM)Ag_5.J!8nLOa./(?OlhZt"=4D:pVm%FlN2H,;A!Fj3]*KAh>E]\o<BA1#?fAUO*)qR4#%(`W3#hX7;)Hnc%\)MSsNLsCPs,3/gC_F^2Ial<VeC%F-K)ja>9WO*sDHYnKHPDlF-ZrKhDGT6`AE_j!5g#W-Hof-k(%'!Fc'Hp94%0^MA,UiqlOa!ZTYarSkj##QsEUtQNnk47&4bDVU#>9ZF.h8H0fPK=6jk3h_!I%J@n5+Fe%/[E^-3Z=`$e8,UDb^^t#bXAJP_!)NU%;SA'HWombfI>V9N)3[^G-5C\tiI\eJZV$Y0nnn@9YJ]\Um.%-<*Cl$tBd`)/@Rpr'71-n!e.kP+667g/dXWi@8J)jo1oAB1,!V["%1mt^\8NToVWBJ7"\%:iqFgr>Bb"Xe3;[r*Y&4RdZ`G12r.*55k!C8!hCP?F_74n%pd831mBSJ,CUeQqqgf"L5>\?/40O5>iHR=`?%]ZJdaCcHb]6BSlN2,p#(f3h\iZCm=Y8b)uL*HJVZITB\lJo`duIG^0ofFLM#ROI3hWsQ^%I6?\QX'SM8AhA0JNeAWkJF%FXRJ;ka%`GPLhk6(ui@o0.ZP665%MTF/R2_:S+K*.&]%OTX@B0+n_N..$A>:)^2T4)K"1%h*OY3?G"='WKMUYBk<<l];seW>[#efka"UooMd%&U7P(qRWpW#Rq]rS=)i(%H*\5(Zd_312b.lp8Zon*p&e:DfU!1qF4`NMl](P`nOlY<cV(nW5bu,;1`:08.ZZK?t.dZ`*c`)>#uou%VT:W]XB`bkplL@pU3Jt0g_lq^B)"9.LX0nk;%i/Ql:g/2YaW4ZE#Vou[JE)L1t\WYTS`l_?pZ\3EX7@ZBeY0K)V(Ya*/CS(WNAKu%__V>B2'KA?dS,k6q)Y$?c;&)lXlW2]I,T`nbD<?r=A<p/iUco9=/:]^r&lbo.aUS-1;T<oV"tdfE[$Wd:!2plquqLtB9b6?jkK\R%?GBoEjjp8g24Wc]fD>iiV-(u;V/R^\/'s#qOWc@p7UJ+Yl<5Q6D1cQf;rjB?R=sKRWO-/-H[UXJ<Kh-#^<>EmFa+o7?W#,JUaD"5%jK$9ZoG"@ZX&M7XKNoCX70[(j=Hk4n$W@m9VD$/8#r0)5?`!=R.IZpIVH+R5gZ`LBmdN9O9(Nm3KglCEnLN,B<:SD;@drQBWZ9N5%!O@N;dg(V.[?[eH-k%:u(M:7s_6h*0Q+'GAQp/EB;+B&YlC'%]Hk*VFLVkJ?%pX(D+#pI^MN:(]a!'M`[MPL2+]W(2o8.%8V`'BZ%;BjYga>K<qR!i,50KM0@1;qZ[VFF9,1OP\(_ritRElRVr]>SW?o2<Pt<jA*W8n!,dMqEb0Ob(t/(<6NO`oND!lLU<:T/rH>>X-Q%%$o*0b9rfU>h<Cu/mdPPIe4&r?Jmk0CJCj<N&\h+#0PVD(.\46HECGK#^j?_6B+^)ZC?&]"I>UQ/;+i@=<7ipZ$i7`c.V1BY\+r+u%%^0AJd`Zto):=VhlNO>cXVb)3:am;"H(#*o8.ca1Jmer3JZ5t1`PH*]i_5^3eqcn_/X%?TcS2cLR/0Qbf5uf"i>7?76=XYgTF.mC%&\(97>*;K<H+:kUfL6!NT,8$>>+rLXA;WgD<1b@*LE$6#02f>tR1(fu'/Q\RaXl?3n*iBNN[9dOq'ln(j7.K4_O%H\<O-:/ePkaG%5SaqkDdk[r)UUrHU7anQ?*JG@e.Wn119%Kf$5`>gX\k:\mF4!fG5*&;EWIhEH:5YpicAiJ)b+4me`p-AFfI'ElQSYZ0T<#EB29rg%%CUq'W`'&7/#UGh*_\'PR.=S@`71_W2!s/]mdU%sW15t[C(`[hHsX'kag7[l_4<rnNq'J"=_,J8"/ENehT3PJ#*\9Z1EH:kV\E43%]O`k:oGON,),o;SCRX\\HEC<L(`0QYcXWk_!@5)[eQPt-a?,Cn9uM#^b:]Cu\mZ#J-BB[07s,7@WN]dedj!gr1k)XOmgN*cC%EZY%LU5rUNTPc1Wn8eJ>9dE(<bkbcS0>hu,=AcX^]tOJ5.+h'D+m6`VS6I&dYR'o;K9_k0Be<UX!Ud"l"caUn@F#_IegOEHX/AtBCqr'%9a>kS3HKL0e^3pQoV+b&$,t=e=&#[(@u;)p`N<!0A9Mm4GPM)j>N:;P=u8l%KnjU-]$SGa^OYVLgYT@)>*9iF0BdnqRfT==Nqe(=%Wu5"@A-fDJafotYj%a)85WrVaA0:()c,aF-nrQA'gs_^`7IBN&'9(/8W!BA\9K"gYq%b^GgjhqKZ257Rf21r3+IOF675U$g2WLgp%9<S^Lm368*UPP^T,%Z[2At-tRS9i[0_KE3\66B'o/-m_-`Ks50dC@T8,*"[&=tniP*_U(3dcaT6P/\/gn+sb+3kqrjY,',OcS3I5%Pr/)Bq_$LhF<8o(,L$-+4,qPQ->Ntr<b^QSk6boPUAJ^sAe&'I/9+[E74CnVM\i`@XalM^ast#d+VrBXai]k%&[+d<bOsT/[5']_%?^*XeE(+W6>*<=%'k(O4$Bd1j1C('5L:8=ToV>/0Lm#acf$;Sfl\sp8-2/[V40hb\G/S1EmW-"h0QG.@;feF0G`3D.a%*@kO[[L2%9ET[>2T.=_\0)X6/#p1U8iRbm8`D2i8k3$eZUj.fV*c]&nI1V_7*.2K[dS88:(Cbn35/j\],lAtlR7g#U1(J,8IDq]6>6XKB#*sD%dBWr>7B$]tFT<;9-,;#OF:g/m(K0+3"B]+^,l+BtVS$j!AbM[bV6K_!frA\oa)/AsDHQ:'=Q;dU26MaJ%fB@DSEj9ub*78e-&EuT%]L/+RRMT#*]94<QcS3I5Pq;NTq_$Lhdj`?+<N2uA>fR*3"ff6AWUfn,$^-n[dhPNbkW97`&IK_Xd=O6njSi7^Q90cTPAoq\8sS*B%Y=Z@Lo@i`b!L)b&(BiWdiAj)UTX-.NF+1F34;Sg01?\>TK&ugI>*[*Q`a?,2SfiEb`.A$Z`la'752n/]?:RCT1-`8:Eh-Jh%^c`J%b%f;`g,M#\5I`Yii9+WZ7DZV:^,(I;T,?j>33Yfl(M6f06.g9cRaP;`;d,9#mIFab-7!l/>Bb@AT4]P:;l@J+]p%UrH&AS4JrR\q%.unLI/R_'tF'uRgjVGiH0;aCK7p/FC$1^\iQ<<YT9/&Oo=/?)"euijmR?D-qDr9Y;>fY$I_WQNkU_C7%p1Bqlc3S3g$Z"Ng;/O8`%]J'EmXt,69a18jM&sZ!7-&EuT+"cMm40GZ0.)dS(ifTKS=m#VT?*<),iJ,Vjol!\>D7K$(lEh8CReO\9icJT44B$t@L1+ej5-F?(%KT8&!BfJCd*o<E](8nG.Y%3@-1MeD76CRYRFdM:/F"]o/j':7VSu5dA2!/U`UGF6l`96lr"f]^sl&(Hb0`U$p`]g"e&l0'&=CQGb%A[t1M4c/?^X@1/chm`&prD$+IMeJcTEo\V@L*<@8p7;R0B8a!5j0!Aj!d!:O@O!BFa441T`_TN)iX,0J7p5$<H"Fr^.6`S)O/tak%1>fS0EdbHX)ktNgf'BjCU"DWJ2_03&/Qfn,.V?rng4BIi$l9>id'V3f=!?5<65!$)5$5hb<*EE!f_-FuJ427fE`+((Hf)EXF*O9o%<-9jeRQZ'^DfSQPXGq!FP>D?G0)nEg^i+dY.;h7O0.K^r,a>W9j&$/o/gS3tpbS5ndSZ:8LFUa9ZC3?Pr7/@+NI9Lt?(&AM4Gf,G%i+.e1eWmWg%ZI[a'u=A.4^_o\auBd&U2fsX(l#&KQp*!YFD.I5NZjRDWm#:gmC>>#*ll(B1d(Z!+3_`'EMCUAK!gu"jgbes+h1b&%#:7:-o9`>6>Z<$)5?US;$%d>1Y>i)Q$Yp_*S!"p1:GL$bPUuESq_$Lhj=n9>`Yd+SBWP^]Ru_GXMt7rIIG)JBmKKT6JTltd<:*:2%U4[U-=[up-nk)DXY:0<V/:ZmY-dhjSP:0SjqmKdj_st_gR^"f"j@Aam7oP`_)d*G^>WTn?H3"XWL'`TCGZ)Fr5_]+MZ>a.)N<:Ca%>`Of/&#FZn1MeCL6M1UcV:jrjp.F@f_BKdt)P/=h25/?a'8)j>'tE2MJiMnsl&</2@RhCVU,;R(.qq+3q"d85ZPQ[!Pn[B\)(&Lc%P%K/ZhrX^*:X=jR<CXeGc`W>@?n^3;EDmY(\:D.+<l?d!Xp]sf&Q&8TPYf[.:IuIB!j?]OaitAX4!.H:=^i6q)2XA"]l2V93#g.C%2Ho%ji%R:=!NLafb/lu*fe5VX9OY[`L,"Lg>BFTl*Jl,a.pZ,anqXM[gOp!>BSpLrU17?pgNGT+VpdXp9G/mdItu=0VjhIhYq&pD%JKAE_*YB/!?BE5JGc)BBAB's)aGH"5F4P/D"20jr<pZ<;!>`p6bt3W3&["[:bB(B3(VY\PPVIV_hR/Bt>(SU_--*+Wi.MT*!JMul%:9cYL^#oK-$:PQTE7*Bn>G`Tm`q"nJIhL)r8Z>NN_KBR9H-Vc:3&9c?;D('b>jFg5fK!)gk70/dSF=Xu:Ft?HQ82X.Jgb?G@-usu%UPSNYnqWBX'$hY&WDYh;2/.9FY'Yk/=_*tEWa7-OIaZCMn+2.h'hP9:SI8J:SM%&hKQf"!,iJl/9OCnN(\1@rq'.7!ZFoq6]0(l3%UK8/ooi<-]pgn6\r7r%rCSPN)=c$2s>EHXjiIYKer8G[[=!ar96V87m&3a,=XZ^R'Z7?f%nI1V_<(Sl1[dS6b\3?L5;OCfB;iHE8%+.]63]jYb?lqA14T/cQR.EmA/MW%T@`mrV(U*s`gW9o<q'a(%dK`[6p8qpG1_^$a2l:8K>m4R#L9*fcR=\s=adIeM;h&9U'$J'50%(5cnY'o5P7l&)/;lTA:HO:rcHkH#]hX1,IAgnEf#`,g9'.TDFI7@IMRA$:i(T36j[`O"LuGk+0g`F.k>7:'5-5s05@FN1OK'rnF)%&f)0o-&EuTh\UZ--f8%o:i]@k\K`V%ZHW(1]3J]KD^aW]g4S^CR@e=Y-e7>Yg6o3l?;Z`bXIe#f3YG/KeT5626chKJkI-mKa0OR2%m;i,"mM6L%7Rcp3!f_iTUGq7]1T][r=`)_e?'*2KGbE]ja_FF"M3>djjHYb:hJ-:uiD9kWie8U-;6nF?mCQUFY)g2.8pG^1W2:J,%0B7_*0e:aCC6O8ONjs9_K(I:86aK(DCU'9;:12M4=;0TpKkdb?B,i:gN$0*4+\bLM2!8_f0!k#qUVI6]eE#j_*9sQs?4:VG#RaX9%>$;Na*;HY'j#:Ht<1=.b3'kn""ajqls2f;nOF%Vb*BAt<jh5TgjnYHqMETGFbTY@^)&16Z\Jj$k(D]K+qm%?^.,r#G`NZQm^2p8O%c(ZKR"@5+C3^@g0A&Uea5)C):X@1/chm`&prD!i`h1U\u5kgWec`?)g$Au7VKf-KdL6TuRiIYKTgg'/)pJ_ILpde!:#m0kjebao^%G9K=)S77qO#\i/9em4jXcYL2`@^A%j3a4e>F_S:F?k)j5,2l56$PEUe1LR^XJL?:-1/;@*QEsV`a.Ft0\*LO[QJ;".RBjj_dcrU"%@AW-P.j0hpSkIRQCNsVQ(CV[m[3R;NT#Lq5&R8qa)'0VQp2Il-/QKXkS!>7j+RfkZc0,PIY\MpX%'b&7Bi_6ERIAmS\UGo]>B7CA%ke*6l!SD9\_caj@nH;6iM%'d#H"/^F#^;4X(E$2(,8l=p!Ak-gP1_h_:iU+rGN9u0Re!meQdr;Yh\@l!W+3nWUt9Jn?T3!`XO0Y)%?st5+Nfdn-2!,2W$nFI1d$2O&B-iNb#TkCu#/@J7Tp3lJL.PFGUmW=ZGI`/MVl7B[/Nq^1N_5A-\!4L5XX@Q9'aWZ@)j6Tkf+grf%(nH.ZP_(;t]V+YHBt]5-YZfeH%'b&38QM_<Nd+:P?*:Z^f0/I7H>*E/$XYJ#CV<G?`G:b#s3(U*/l9L@&0)Ic&k#/T"`"jne_@Qu%'R$$d`X5p2Wm^T;9c@;<[uNsl$pAK^hc.=>dnt=?C&eOj0rUUF#tpYM'oC.[IC!=Qhe4W7DS?@`GYZu#?=s]IA!Kc&6)(b;>?6Y[%3T:cfGIcSdkYJ+nB9[0gYdpMAK1k(*::8LXpN^NopVmAVb^o)3;)^PpBFuQ?C1eiL-cdeYA[,`/\?Xh_jIX;27ol?pRIAmS\IR6W%kgq`\kZ4-]go8e0mL"*\oO6$i#]o%O\0->N_ZGI0I\W=ri5pfUM)>;t:j`dfiM8gf*O-$9KN(H^hRDf+qbGGbQnTHHmJ%Ac#mTk(%@GM/sTk#D$/I4h44$Ma76a=T5Q7-1/3[nc*6!if+lb3.[<H]ZU/=p=>Pq$M1a7`fAhs&>ndIYk7R`<=Le)W[23^t2F/+RM_"dr@i%iOWKY-]+6((9M*nM'iSa)r"Rq=BM`o8qpG1_^$a4ZHW(1]3N+slS6,"37P:4V/LA!U=bJmY]Gs?]t[g&^_HKi@\.?8Le]!3WMq\+%.Ip(I)aBq"(D^;?++t'-E/)W-6tf/=hmU_uqn++7?AGD5aGu=:@98@q*@!t?ji;Z0rISFE;Ma\M@Z:U=RF8SV:F1iF#knCF)*;EW%2>KP[&<!HRAL0s7q7_9DlZ^&e#Flf[n.UeAJ6*3G(Fdp`R4OdO=R1iDk.j.!$EpjG8h#U[`"V3smO#L@\?an`jIX;27ol?pRIAmS%\UGo];k?>h4fVo(-hk7adBN&>Yfc/4pU2963H.9ha9rP48jS[u?EeUJ5E;Z)L#igks!41#Z;RNB`,!fhEkPs6Gj&BL1$;NXp!,Al%'^NRCbMRpGI6hO<fn<3M$T@F^(p.7>ZsYKYkTufCI#Yr6_hF<cTmVSn9Tp)4c26/)bO[gm<+`gK\pk49WT%c1L3;#!.^Sh$h^o;Z%b^nr7738nA-j<JrGX:(mIY#[^@8ZRO#:2_gSmg>c:o/?RCXVWk]oP[O<g)es)?n_[]k&[A.p,;1ChA\*le;bWVSI;mL/f)V\-N6M%dW!%V-(9IjOMW.TSqIJu:863t?qjg1Nl.`U.Sg6V=>h4\G:qjJ=H@p:BM-*sZ65,e_ZReGk-<qt';][jAgNEa#eWOd(RhS$XF)GX%1S/$<Pq$M1a7`fAhoVj`;1N*IQtiPH&j=6=p6b%i=H?$U@<@FKF[[9ki;1C]_!UXm;jB,PJZt:R::58?([gL,?<F^J4=UZC`\U;p%RS$68qt=<uhoXhD`K"`n($OS%k*7S6la5LkZ/X#`SlWcc#OVn!qQ5%U7oQ846qQAEJp)B-MRW2sEefg)'$hS$M3;GaDr9[QS^,QC%*3Ui`$@c)F*@@f\,?U",=Q>6pG,>>'.54%B9F8`AP6j5]dW!Lc"YTU\,_$*q-fOupPN\5U=HQXNj0i#CUr8N'_^Atq@Ze$L2^O>h%Y_jqAIQ&g1dDOsfb>Uo?9jhsF.K306B./8j1M&E'D6#:in+5[7'8`qeD.g%B-ci(K.i<Z(/A)*9D++eQf^4O?>)S;:'IA_TXkgK2%G<AbBb9'@U8N_K5V+U]Bf;7<b3h;U:<sPMAH=kbJcgXu:-RZ!8Q=YHl0VgC8\7!t!J&d;uY:@MjAFZD&)cqXHA0FWYV*c]&nI1V_%9W9-(]!T(SLG*@(%+3q5NFnZt4^*25Z(AV4:]d`#5\(3q="K=(@k/?=2h`fQdrl<RY@2P`A*%"<&;t2R9Zi%2&["[2bB#j/0u.>T%oQ"lA4NF@<bU+%*V^O*tNeI]\7<ifT:SoXsqloB>VSl-ZqA5&;a=A9TZn.BFkkog)1;r0$VHKm]A\N*?jnaCsT!%D/htLZQVkkji%e5HuTk)$e[''Hpa"nM7#CH?@uBIkO5icl#UGS;2>3]A-k%+//]8OB:Qp/pFFH)tT_^(4\_E:eO4-Q]3/:et4R(jSs4MBnq3Ck\NQ%Q[[KT;b(>CD1rMWfc)=4?,dG8AWS773d$K`B<05BSgqL]U7P)S_YiGVBUk5&?m&Rt:0;So^k*9_$kEacrN1TG=f)n2P/W@5/tq4s%*0E9bktjub4MrEp;sHlc0't:CiCf(cZk[)/k^&75=rk#q-e*2K%\BD">7jXF=>!Fhi26%?A3.-'NlILfN,(@ZHX/UBQVk\1)'fNf%No[ikf4FZH4Y!D>dDrAT(1HDeh=Bb1.F`DS%b@Mp2:`=/'UUH`qGbkYCsg)C'%2nE'6p>UM`u55#:;UV-t9FidY("YF5F@k1Aaff%Tbr*lg;%qd#."[R3`iEG2G*`,11"fH&=ERR"N!iaNnpfm:1PW9ZW<2]Y:l]Ul\%&pf^ht.ZH"HCl7s<EU_J*]@*#^Z0mr$0/qWcO%-OX9-I9D-@'Nh"FHG[T5+aaE(+UKO;.pY`V[#;3KTbO-;MgJ>GA9mWJGBj\El`HE.Bh>jt+5a^-kTs5I=>*EOJZE?7LhG!e5qrd<%aZdA)P&F8jisG9Ka.8tYZc5Um;EEhU-<[=2Aq"RRjnbND:TBq;Glp$#L?f"!K1\#&QQRil^lE+t$?P.:@d#)r[AYOnWFYOn[`b%'%Ln:0Bb-#92`A:2n18TH<ldG3A*PR2[Z/;81.b5kk:[X4>afo*7YVOPf>`d#H\?6\*MoM)PaGH"5F4r0TE>0tQTIb0n*eXs+BSK)R%-<-"E7G;%=GH>7>eNLq*;JMqQ3\"jkd'3n"/6Tfbd2bQ/aah;D33LnqoGD):3aQnbR($[p0cJ3WEefa''$fl)WDGap<G?V:4taLW%QE_nfY'i1V*PGk+.$f>uXB-dNE>=Js0c<lV1JBJRnOgZV;Og>p05A+NH)#FSj(+uR.@ou;PH7HW+7ZqL]3Oh"2I5IVnq0Zgp6p5N%Y[SV[VjUQ[]CUVbk.l,Y`cG&uO2QrS&1*;PX;qKtoX(pZU#_f`F%992e;ecJg0LlU.`Io?/M9Sk\!pV\Jb7ZMK$gA;X@OTD*)O]e%UG67LA_`Nt85:,c=j0GtnPG'TW-IBu3b=@PAuj*iZA@Xc\FE,?WQ1%qBR&L4=Dra^SkA@f"fTW^"t5^S['ZpV?nNYF81XdJl*-lc%%2VpqF;1r]$;!E2UFGZdFdYD:DN5fcnP6D*>5&`FH.S3f]gZ@<joIph)NpKj^D4YFJc;q\"VK1%6(=Q=DkH-CR"\!!*eXs+BSK)R%-Ie&p:"imEj"tj(n^+UC6^aOti2^;"-"2M4J+;<(LgpoW(Mn3FK#cYa<C6G:PpDqDHlkoO;H?r.m7N6enI1V_<66oQ\*nA9:(@M4%mCeL>DW<\Bpho?Za%=-/W[$[%+_jE%.h\6Pf+gY9ABY$2,pu;'cWN?ZE9q.E@5Qu=Os(Ue0[34Taq:gJ]?Bl-&rJ..i8;r@V:m(@%U58QuMY5PS214Y1WtpB&F`GqQ_f2s$6r?t$J0n<[G_5EBU:0>g<]lW+PBcW=8sCmuIJYYKn*F#M6%SD=IA802/qM[alTGNS@$,]K%,+1I/"iE#C"Ad1;'W.&4$efLRQ?i.;A!L?A&;t1gA7\C#LtAHYjZ7d'\atp#&nq[%Nf&[BmU<tY:Vn$@X.Ias"QmLB`S?Hm(TJ$I%aC$.t-O?/L!Z>kXb!OG?6-'%aAsh^+6C.A[FdM9lkNM6mg)iEnbhPUiaeuEgN]F0'k^baA$WA?t'h1e.:QX+KAZ;<%UrX1p0[33#%T=DoTjDt2o%_I\o(AKlK)ngmiGXoJ5UN[t/4GW)7n4\CWK&JKj5%oc]5(p/!`"M-rNk3lj_`!h8Fki0gDU1jq/EqT+0#-l9D5`i=%Kb'b-nl_Q&4efNr@(k16)BKT]l"*Cq%ST^#gg\.tEE1.aPU)hCg^beiYJF??;"@EAq'.CeZHW(1]3J]KVa?6)]6P]iq+1`*0f[sM%`15A#(N2%VPuX*^-tte^mDLMbq*W7gM<Br$<2gr/WjKBCLG,WK*Z\*.=,%X]@G7kN]f.+.W\-c=),ch(',8VKn+!o`6;`Cm>-qn(%V\1YaE!V.FiPL_A.eP#mQZe_YI!3foW&.lM4dee^-5H-t3MC#U=L^\=2W3nj'c\6pMV4UKk*`Z2o[4<5%.D'U8r$;*!\W-LCJh*%%]IN;$j2n<e3_qYn2.fJ;"Y&@l_#[!`NB8Z)Tr_(!(0Rj!kf7s4C/cdbRRW:b[%gSkQdtPT_6QS5"Y&$*DOE(Kr=%>TiT38674#:E%LNB>LVusscnC.jd:_DPtJFs:Oa>8b0(D,K8d'6p,YVsp/PGeO[e%$%Db&aJLHPY/&fnnFg%K!S?LB&=r;S7!S(Mdp[&A[q5(_-,_%45lH/o(`;X9S+&b7Xd5,MKof?T\c-K4Gu0O]QC0M-W(>;j@lYH6*%B*%Y1fcn[5CdjPF2M*rm^f)+$3"5\]enXAX:2.[0&r:iK[6%?2$"1(m`[=@M2Y5=$Go4lXAncG,Q:c6o@f(;mBmAp+<rf!'1,L0b*aI3sHuk:7d@3iFtm!!B&hE-+k-<TZAZF!YiT2W0gml25b1-%eLaK?Qgn@,iD^32U4tHc<@__3,#,7.J1T`<MHJB0cq$dt:fj9h4:4%j0>**>3]oZY=YR`Ya6RLlC06XMeMO9kjC@:dNsdN]@KnDM%%FjH,bdQH^dd$nK!>+`hCjsV=]sIa+66(W/""KL(F,nD#7-9U.Jt_C4`+`j^:8K51>8j4I>\aj,GA+N7&`&S98sLW1ObT4oA/;c#%FAGT;b/;"a#71JJ'c^%_)XadWVnF4<3TPg#<#^_M&h2VbVppYR#W9QcXL17=ih7*Z7#XWB,./]2D<'_?S<#)aOQTGs(+Ap5\e$#8%2NTI@]PhNO!=D5H%u-)-ithNtB[n_=&of,F&Ci-(643Zf1<9M8ApI*"bC/-^bBNLtcU#2^B'Y_cob#M`o7flq8D6cVT!WQ@&:,>"%I-"?:o9MN+FHOG%=I,,+K$4=o3Egd]B^*l9B10Qe09rj(pMIR5L\&WK.%]mu.Ek^Sc-IdF%O_W:h"Z;T+c].T]mpsp>3W:r`@s>r%MFgWqk$^%ue7n$`G,Qjs7Q"#+'<u*Vp+<rfJ3,j4,?)WWFcOg7MPIdW^#TJ0W!Y3LGaK5'1Ak\erN/"KAuM.s23$meVI=T/CO"e5%;p@OblHefrXdi83pDgC.o.PUTrGUTll&UJa?@Mms&+ABRgUCO>2[K'5g\:/cp$LB"rl"j:k)\DJpp9nu%r^=/L!0!RIt%?n]_pig%0E:S2T>K3I7^jn'C<+m%'ruAVrT<q<f>"We.TK=OM@]Lddf]=hjo>%flhtJL]fBIkaa2[T?a9(3HW=h6]aON9mbZ9qGH2femlL=>%bMHO/n%3dDC>$3,p;?:Rn6,I&l],&J?M<f=IG_`=;Tmp&YTIcO`rH(qrS,<?1\$OUb+DM2r)KjpdV1+Pp1)++Q4N5R_^!f(>AWjI%]gH@H<db-97=^K0GfiAR!C'#'dJ%WtgOP-/$MfiT-RZ>mI/uPr!;A`mS`@Na=cA,AOAD#9U2IMkrrBD"9Zr.=Yf)sA,+g"P<S_ut%T/&Y[[obOu(&T6Cr#]p"nh:%<r@Tb^je%RrU%a&qZ0CKTf(%gC5$e-CpKTq,gs_'D_6T<#cV].K"s8<gm5H[_q<G"6?XNirrP*gU%a1%`@V.WO^p<uOh,5dWPP#%8!a6*!S7f?K]H#dj'XSG!C++2XeT(Fa$CHhD]Q;@C?jn&5X+FRcaiCA(i#u;U_5ANGYm_#/JT-)bN%on/c?mN[$5^:KY_V([(i*fi?Zo'c$;[faBHf@SpQ?i1t>Hc]%;j52\>Y53M;&&7/^a5?LP+CUu@q>9qG@>:6KNnH,0n+cY9G>s3%%I`K26^DHY648s[']oMO2niQi!pq>e!rf2IMIdaGC^Z44lhs3XWr;6!\YJ5DT`L"?^s7qRk^]*o\5JR*bZ_+r,ier;3qoub1IX(b%%hnT'Xk*nTJrSMfPDnl5dp:pLnn]T*7+5Zs)*),g-rpX:Ph1:M36N?&'?i9LKhu"S%q<ko~>%AI9_PrivateDataEnd
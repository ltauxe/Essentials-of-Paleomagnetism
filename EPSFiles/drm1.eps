%!PS-Adobe-3.1 EPSF-3.0%%Title: drm [Converted].eps%%Creator: Adobe Illustrator(R) 11%%AI8_CreatorVersion: 11.0.0%AI9_PrintingDataBegin%%For: Lisa Tauxe%%CreationDate: 2/27/07%%BoundingBox: 0 0 360 252%%HiResBoundingBox: 0 0 359.0479 251.4190%%CropBox: 0 0 359.0479 251.4190%%LanguageLevel: 2%%DocumentData: Clean7Bit%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)%%+ procset Adobe_CoolType_Utility_T42 (1.0 0)%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.19 0)%%+ procset Adobe_CoolType_Core (2.23 0)%%+ procset Adobe_AGM_Core (2.0 0)%%+ procset Adobe_AGM_Utils (1.0 0)%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors:  Cyan Magenta Black%%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 92 8%%BeginData: 6690 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD06FF7D7DFFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FD0AFFA8FFA852FD727D52FD09FFA8FF7D52FD72FFA8A8FD0AFF%7D7DFD72FF7DA8FD0AFFA852FD72FFA8A8FD0AFF7D7DFD72FF7DA8FD0AFF%A852FD72FFA8A8FD0AFF7D7DFD72FF7DFD0BFFA87DFD72FFA8A8FD0AFF7D%7DFD72FF7DFD0BFF7D52FD72FFA8A8FD08FF7DFF7D7DFD72FF7DA8FD07FF%A87DA8A852FD72FFA8A8FD07FFA87DA87D7DFD5EFFCACBCBFD11FF7DA8FD%08FFA8FFA852FD5DFFCACBCBCBFD11FFA8A8FD0AFF7D7DFD12FFCACBCBFD%05FF7DFFA8A8A8FFFFA8FD3BFFCBA2CBCAFD11FF7DFD0BFFA87DFD12FFCB%CBCBFD04FFFD04A87DA87DA87DFD3DFFCBFD12FFA8A8FD0AFF7D7DFD12FF%C4FFC4FD05FF7DA8FD047D52A8FD50FF7DFD0BFF7D52FD13FFC4FD06FFA8%A8FFFFFFA8FD3FFFA8FD07FFA8A8FD09FFA8A8FD0AFF7D7DFD5EFFA8A8FD%06FF7DA8A8FD09FF7DA8FD0AFFA852FD5EFFA852FD04FFA87DFD0CFFA8A8%FD0AFF7D7DFD24FFA8FD07FFA8FD05FFA8A8FD2AFFA87DFFFFA87DA8FD0D%FF7DA8FD07FFA8A8FFA87DFD12FF7D52A8FD05FFA8A87D7DFFFFFF7DFD07%A8FFFF7D7DFD06FF7DFD2AFFA852A87DA8FD0FFFA8A8FFFFA8FD04FFA87D%A87D52A8FD10FFA8F8F827FD05FF7D7D7DA87DFD04A87D7D7D527D7DFF7D%A87DFF7DA8FFFFFF7DA8FD28FFA8F8F8F8FD11FF7DFD04FF7DA8FFFFFD04%A852FD11FFA8F8F852FD05FFA87DFFFFA8A8FF7DA87DA87DA852A8A8FFFF%A8A8A87DFFA8FF7DFD29FF7DF8F852FD11FFA8A8FFFFFFA87DA8FFFF7DFF%7D7DFD12FF7D52A8FD05FFA8FD06FFA8A8FFFFFFA8FFA8A8FFFF7DFFA8A8%527DA87DA8FD27FF7DA87D52A8FD11FF7DFFFFFFA87DFD06FF7D52FD31FF%A8FFA8FD26FFA87DFD16FFA8A8FFFF7D7D7DFD05FF7D7DFD58FF7DA8A8FD%17FF7DA8FFFFFFA8A8FD05FFA852FD56FFA87DA8FD19FFA8A8FFFFFF7D7D%FD05FF7D7DFD54FFA8A87DFD1BFF7DA8FFFFFF7DA8FD05FFA852FD53FFA8%A8A8FD1CFFA8A8FFFFA87DA8FD05FF7D7DFD38FFCACBCAFD16FFA87DA8FD%1EFF7DFD04FF7DA8FD05FFA87DFD37FFFD04CBFD14FFA8A8A8FD20FFA8A8%FFFFFF7DA8FFFFFFA8FF7D7DFD38FFCACBCAFD10FFA87DFF7DA8A8FD21FF%7DFD04FF52A8FFFFFF7DA8A852FD39FFCBFD10FFA8F8F852FD24FFA8A8FF%FFA87D7DFFFFA852A87D52A8FD49FF52F8F852FD24FF7DA8FFFFA87DFD06%FFA87DFD49FF7DA85252A8FD24FFA8A8FFFFFFA8A8FD05FF7D7DFD38FFA8%A8FD0DFFA87DFD29FF7DA8FFFFFF7DA8FD05FFA87DFD38FFA8A8FD0BFFA8%A8A8FFFFFFA8A8FD25FFA8A8FFFF7DA87DFD05FF7D7DFD38FFA8FD0AFFA8%7DA8FD05FF7D52FD25FF7DFD0BFFA87DFD38FFA8FD09FFA8A8FD07FFA8A8%FD25FFA8A8FD0AFF7D7DFD38FF7DA8FD06FFA87DA8FD09FFA8FD25FF7DFD%04FFA8FD06FF7D52FD38FF7D7DFD04FFA87DA8FD0AFFA8FD26FFA8A8FFFF%A8527DFD05FF7D7DFD38FFA8FFFFFFA8A87DFD0CFFA8A8FD25FF7DA8FFFF%FF7DA8FD05FFA87DFD3BFFA8A8A8FD0DFFCBFD26FFA8A8FFFFFFA87DFFFF%FF52A87D52FD37FF7DF8277DA8FD0EFFCACBC4FD25FF7DA8FFFFFF7DA8FF%FFFFA8A8A852FD37FF27F8F87DFD0FFFCBFFCBCAFD24FFA8A8FFFFA8A8A8%FFFFA87DA87D7DFD36FF7D7DF827A8FD0FFFCACBC4FD25FF7DFFFFFFA8A8%A8FD05FFA87DFD34FFA87DFD3CFFA8A8FFFFA87D7DFD05FF7D7DFD32FFA8%A8A8FD3DFF7DFD04FF7DA8FD05FF7D52FD31FF7DA8FD3FFFA8A8FFFFA8A8%7DFD05FF7D7DFD2EFFA8A87DFD41FF7DA8FFFFA87DA8FD05FFA852FD2DFF%A8A8A8FD42FFA8A8FFFFFF7D7DFD05FF7D7DFD2BFFA87DA8FD44FF7DA8FF%FFFF7DA8FD05FFA87DFD29FFA8A87DFD46FFA8A8FFFF7DA8A8FD05FF7D7D%FD10FFCBCAA2FD15FFA87DA8FD47FF7DFFFFFF7D7DA8FFFFFD04A87DFD11%FFCAFFCAFD10FF7DF8527DA8FD49FFA8A8FFFFA8A8A8FFFFFFA8A87D52A8%FD10FFCBC4FD11FFF8F8F8A8FD4AFF7DFD08FFA87DFFA852FD23FFA827F8%27FD4BFFA8A8FD08FFA8FF7D7DFD12FFA8FD0EFFA87DFD04A8FD4BFF7DA8%FD0AFFA852FD12FFA8FD0CFFA8A8A8FD50FFA8A8FD0AFF7D7DFD12FFA8FD%0BFF7DA8A8FFFFFFA852A8FD4BFF7DA8FD0AFFA87DFD11FFA8A8FD09FFA8%7DFD07FF7DA8FD4BFFA8A8FD0AFF7D7DFD12FF7DFD07FFA87DA8FD08FFA8%A8FD4BFF7DFD0BFFA87DFD11FF7D7DFD06FF7DA8FD57FFA8A8FD0AFF7D7D%FD11FFA87DFD04FFA87DFD0BFFCACBC4FD4BFF7DFD0BFF7D52FD15FFA8A8%A8FD0CFFCBFFCBCAFD4AFFA8A8FD08FF7DFF7D7DFD11FF7D27A87DA8FD0E%FFA8CBC4FD4BFF7DA8FD08FFA8FFA852FD11FFF8F8F8FD5EFFA8A8FD08FF%A8FF7D52FD10FF7DF8F827FD5EFF7DA8FD0AFFA87DFD0FFF7DA87D7DA8FD%5EFFA8A8FD0AFF7D7DFD0CFFA87D7DFD63FF7DFD0BFFA87DFD0BFFA8A8A8%FD64FFA8A8FD0AFF7D7DFD09FFA87DA8FD66FF7DFD0BFF7D52FD07FFA8A8%A8FD68FFA8A8FD0AFF7D7DFD06FF7DA8A8FD69FF7DA8FD0AFFA852FD04FF%A87DFD6CFFA8A8FD0AFF7D7DFFFFA87D7DFD6DFF7DA8FD08FFA8FFA87DFF%A8A8FD22FFA8FD39FFA8FD12FFA8A8FD07FFA87DA87D27527D7DA87D7D7D%A87D7D7DA87D7D7DA87D7D52A87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D%7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA8527D7DA87D7D7DA87D7D7D%A87D7D7DA8FD047D52A87DA87D7D7DA87D7D7DA87D7D7DA8FD077DA87D7D%7DA87D7D7DA87D7D7DA87DA852FD08FFA8FFA8FFA8A87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA8FD09FF7DA8FD80FFA8A8FD11FFA8%FFA8FD12FFA8A8FD0FFFA8FFA8A8FD0FFFA8A8FFA8FD11FFA8FFA8FD0DFF%A8FFFFA8A8FFA8FD08FF7DA8A8FD0FFFA8A87DA87DFD0EFFA852A87DA8A8%FD0DFFA87D7DA87DFD0FFF527D7DA8A8FD0DFF7DA87DA87DA87DFD0CFFA8%7DFF7D7D7DA8FD08FFA8A8FD10FFFD05A8FD0EFFA87D7DA8A8FD0EFFA87D%FD04A8FD0DFFA87D7DA8A8A8FD0EFFA8A8A87DA8A8FD0DFFA8FFFD04A8FD%08FFA8A8FD10FF7DFD04A8FD0FFFA8FF7DA8FD0EFFFD05A8FD0FFFFD04A8%FD0EFFA8FFFD05A8FD0DFFA8FF7DFFA8A8FDBCFFA8FFA8FFFFFFA8FFFFFF%A8A8A8FD73FFA87DA8FFFFA8A8FFFFFF7DA8A8FD73FF7DA87DFFFFA8FFA8%7DFFA8FF7DFD73FFA87DA8FFFFA8A87D7DA8FFFFA8FD75FFA8FFFFFF7DA8%FD04FFA8FD36FFFF%%EndData%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 68 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 	exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/bdict{	mark}bdf/edict{	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end}def/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup () cvn eq{						pop (Process)					}if				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust	AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse	AGMUTIL_GSTATE_flt setflat	end}def/get_gstate_and_matrix{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_ctm matrix currentmatrix def	end	get_gstate}def/set_gstate_and_matrix{	set_gstate	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_ctm setmatrix	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/agm_sethalftone{ 	dup	begin		/_Data load		/Thresholds xdf	end	level3 	{ sethalftone }{		dup /HalftoneType get 3 eq {			sethalftone		} {pop} ifelse	}ifelse} def /rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		exch () /SubFileDecode filter	}	{		exch pop	}	ifelse	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/filter_indexed_devn{	cvi Names length mul names_index add Lookup exch get} bdf/filter_devn{		4 dict begin	/srcStr xdf	/dstStr xdf	dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch		[			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx			currentdict /srcStr get /readstring cvx /pop cvx			/dup cvx /length cvx 0 /gt cvx [				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx				names_index Names length currentdict /srcStr get length 1 sub {					1 /index cvx /exch cvx /get cvx					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx				} for				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx			] cvx /if cvx			/end cvx		] cvx		bind		/exec cvx	] cvx	end} bdf/AGMUTIL_imagefile nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	10 dict begin	/imageDict xdf	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def	/imbufIdx 0 def	/origDataSource imageDict /DataSource get def	/origMultipleDataSources imageDict /MultipleDataSources get def	/origDecode imageDict /Decode get def	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def	/srcDataStrs [ imageDict begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi string		} repeat		end ] def	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse	{		/imbufCnt imageDict /DataSource get length def		/imbufs imbufCnt array def		0 1 imbufCnt 1 sub {			/imbufIdx xdf			imbufs imbufIdx imbufLen string put			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put		} for		DeviceN_PS2 {			imageDict begin		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def			/MultipleDataSources false def			/Decode [0 1] def			end		} if	}{		/imbuf imbufLen string def		Indexed_DeviceN level3 not and DeviceN_NoneName or {			imageDict begin		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def			/Decode [0 1] def			end		}{			imageDict /DataSource {AGMUTIL_imagefile imbuf readstring pop} put		} ifelse	} ifelse	imageDict exch	load exec	imageDict /DataSource origDataSource put	imageDict /MultipleDataSources origMultipleDataSources put	imageDict /Decode origDecode put		end} bdf/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		2 dict begin		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {			/imbuf imbufLen string def		}if		1 1 Height { 			pop			MultipleDataSources {			 	0 1 DataSource length 1 sub {					DataSource type dup					/arraytype eq {						pop DataSource exch get exec					}{						/filetype eq {							DataSource exch get imbuf readstring pop						}{							DataSource exch get						} ifelse					} ifelse					AGMUTIL_imagefile exch writestring				} for			}{				DataSource type dup				/arraytype eq {					pop DataSource exec				}{					/filetype eq {						DataSource imbuf readstring pop					}{						DataSource					} ifelse				} ifelse				AGMUTIL_imagefile exch writestring			} ifelse		}for		end		true	}ifelse	end} bdf/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}defstatusdict /product known userdict /AGMP_current_show known not and{	/pstr statusdict /product get def	pstr (HP LaserJet 2200) eq 		pstr (HP LaserJet 4000 Series) eq or	pstr (HP LaserJet 4050 Series ) eq or	pstr (HP LaserJet 8000 Series) eq or	pstr (HP LaserJet 8100 Series) eq or	pstr (HP LaserJet 8150 Series) eq or	pstr (HP LaserJet 5000 Series) eq or	pstr (HP LaserJet 5100 Series) eq or	pstr (HP Color LaserJet 4500) eq or	pstr (HP Color LaserJet 4600) eq or	pstr (HP LaserJet 5Si) eq or	pstr (HP LaserJet 1200 Series) eq or	pstr (HP LaserJet 1300 Series) eq or	pstr (HP LaserJet 4100 Series) eq or 	{ 		userdict /AGMP_current_show /show load put		userdict /show {		  currentcolorspace 0 get		  /Pattern eq		  {false charpath f}		  {AGMP_current_show} ifelse		} put	}if	currentdict /pstr undef} if/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		1 dict begin		/flushbuffer Width cvi string def		1 1 Height cvi			{			pop			0 1 DataSource length 1 sub				{				DataSource exch get				dup type dup 				/filetype eq					{					exch flushbuffer readstring pop pop					}if				/arraytype eq					{					exec pop					}if				}for			}for		end		}		{		/DataSource load type dup 		/filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 div mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		/arraytype eq			{			1 1 Height { pop DataSource pop } for			}if		}ifelse	end}bdf/addprocs{	  2{/exec load}repeat	  3 1 roll	  [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin	 currentdict 2 index known{	 	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse		 addprocs /TransferFunction xdf 		 currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/clonearray{	dup xcheck exch	dup length array exch	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 	{	Adobe_AGM_Core/AGMCORE_tmp AGMCORE_tmp 1 add ddf 	dup type /dicttype eq		{			AGMCORE_tmp			exch			clonedict			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	dup type /arraytype eq		{			AGMCORE_tmp exch			clonearray			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	exch dup	AGMCORE_tmp 4 -1 roll put	}forall	exch {cvx} if}bdf/clonedict{	dup length dict	begin		{		dup type /dicttype eq			{				clonedict			} if		dup type /arraytype eq			{				clonearray			} if		def		}forall	currentdict	end}bdf/DeviceN_PS2{	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and} bdf/Indexed_DeviceN{	/indexed_colorspace_dict AGMCORE_gget dup null ne {		/CSD known	}{		pop false	} ifelse} bdf/DeviceN_NoneName{		/Names where {		pop		false Names		{			(None) eq or		} forall	}{		false	}ifelse} bdf/DeviceN_PS2_inRip_seps{	/AGMCORE_in_rip_sep where	{		pop dup type dup /arraytype eq exch /packedarraytype eq or		{			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and			{				/currentcolorspace exch AGMCORE_gput				false			}			{				true			}ifelse		}		{			true		} ifelse	}	{		true	} ifelse} bdf/base_colorspace_type{	dup type /arraytype eq {0 get} if} bdf/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 216 dict dup begin put/nd{	null def}bind def/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSA_cache 0 dict def/AGMCORE_CSD_cache 0 dict def/AGMCORE_pattern_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_ovp nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/AGMCORE_Default_PageSize nd/AGMCORE_currentbg nd/AGMCORE_currentucr nd/AGMCORE_gradientcache 32 dict def/AGMCORE_in_pattern false def/knockout_unitsq nd/AGMCORE_CRD_cache where{	pop}{	/AGMCORE_CRD_cache 0 dict def}ifelse/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	2 dict begin	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	end	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/npth_clp{	newpath clip} def/add_grad{	AGMCORE_gradientcache 3 1 roll put}bdf/exec_grad{	AGMCORE_gradientcache exch get exec}bdf/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/dictstackcount countdictstack def	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	dictstackcount 1 countdictstack 1 sub {end}for	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont	/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto	/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show			0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp xpt				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf	errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if	/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def	AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if	/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_currentbg currentblackgeneration def	/AGMCORE_currentucr currentundercolorremoval def	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	level2 not{		/xput{			dup load dup length exch maxlength eq{				dup dup load dup				length dup 0 eq {pop 1} if 2 mul dict copy def			}if			load begin				def 			end		}def	}{		/xput{			load 3 1 roll put		}def	}ifelse	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_tmpmatrix matrix def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 10 def		/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr xpt			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr xpt		}def		/grestoreall {			AGMCORE_&grestoreall			Adobe_AGM_Core			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core begin				/AGMCORE_gstackptr exch def				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def			end			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and	{		/AGMCORE_&sysshfill systemdict/shfill get def		/AGMCORE_&usrshfill /shfill load def		/AGMCORE_&sysmakepattern systemdict/makepattern get def		/AGMCORE_&usrmakepattern /makepattern load def	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/devicen_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	<<	/MaxPatternItem currentsystemparams /MaxPatternCache get	>>	setuserparams	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_have_reported_unsupported_color_space false def	/AGMCORE_report_unsupported_color_space	{		AGMCORE_have_reported_unsupported_color_space false eq		{			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf		} if	}def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def	/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/LeaveColorUnchanged eq					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			dup map_alias {				/Name get exch pop			} if			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor						currentgray 0 eq					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						Adobe_AGM_Core/AGMCORE_name xddf						false						Adobe_AGM_Core/AGMCORE_in_pattern known {Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse						not currentpagedevice/OverrideSeparations known and							{							currentpagedevice/OverrideSeparations get								{								/HqnSpots /ProcSet resourcestatus									{									pop pop pop true									}if								}if							}if												{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not							}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace							false							currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall							not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				dup true exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or						{pop}						{convert_spot_to_process and}ifelse					}				forall					{					true exch						{						dup (Cyan) eq exch						dup (Magenta) eq 3 -1 roll or exch						dup (Yellow) eq 3 -1 roll or exch						(Black) eq or and						}forall						not					}{pop false}ifelse				}{				false exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or					{pop}					{convert_spot_to_process or}ifelse					}				forall				}ifelse			}ifelse		}def	}ifelse		/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	AGMCORE_host_sep{		/setcolortransfer		{ 			AGMCORE_cyan_plate{				pop pop pop			}{			  	AGMCORE_magenta_plate{			  		4 3 roll pop pop pop			  	}{			  		AGMCORE_yellow_plate{			  			4 2 roll pop pop pop			  		}{			  			4 1 roll pop pop pop			  		}ifelse			  	}ifelse			}ifelse			settransfer  		}			def		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/AGMCORE_RemoveProcessColorNames			{			1 dict begin			/filtername				{				dup /Cyan eq 1 index (Cyan) eq or					{pop (_cyan_)}if				dup /Magenta eq 1 index (Magenta) eq or					{pop (_magenta_)}if				dup /Yellow eq 1 index (Yellow) eq or					{pop (_yellow_)}if				dup /Black eq 1 index (Black) eq or					{pop (_black_)}if				}def			dup type /arraytype eq				{[exch {filtername}forall]}				{filtername}ifelse			end			}def		/AGMCORE_IsSeparationAProcessColor			{			dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or			}def		level3 {			/AGMCORE_IsCurrentColor				{				gsave				false setoverprint				1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor				currentgray 0 eq 				grestore				}def			/AGMCORE_filter_functiondatasource				{					5 dict begin				/data_in xdf				data_in type /stringtype eq					{					/ncomp xdf					/comp xdf					/string_out data_in length ncomp idiv string def					0 ncomp data_in length 1 sub						{						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put						}for					string_out					}{					string /string_in xdf					/string_out 1 string def					/component xdf					[					data_in string_in /readstring cvx						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx						[/pop cvx ()]cvx /ifelse cvx					]cvx /ReusableStreamDecode filter				}ifelse				end				}def			/AGMCORE_separateShadingFunction				{				2 dict begin				/paint? xdf				/channel xdf					begin					FunctionType 0 eq						{						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def						currentdict /Decode known							{/Decode Decode channel 2 mul 2 getinterval def}if						paint? not							{/Decode [1 1]def}if						}if					FunctionType 2 eq						{						paint?							{							/C0 [C0 channel get 1 exch sub] def							/C1 [C1 channel get 1 exch sub] def							}{							/C0 [1] def							/C1 [1] def							}ifelse									}if					FunctionType 3 eq						{						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def									}if					currentdict /Range known						{/Range [0 1] def}if					currentdict					end				end				}def			/AGMCORE_separateShading				{				3 -1 roll begin				currentdict /Function known					{					currentdict /Background known						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf					/ColorSpace [/DeviceGray] def					}{					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq						{						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def						}{						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put						}ifelse					ColorSpace 0 get /Separation eq						{							{								[1 /exch cvx /sub cvx]cvx							}{								[/pop cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll put							pop						}{							{								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx							}{								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll bind put						}ifelse					ColorSpace 2 /DeviceGray put																							}ifelse				end				}def			/AGMCORE_separateShadingDict				{				dup /ColorSpace get				dup type /arraytype ne					{[exch]}if				dup 0 get /DeviceCMYK eq					{					exch begin 					currentdict					AGMCORE_cyan_plate						{0 true}if					AGMCORE_magenta_plate						{1 true}if					AGMCORE_yellow_plate						{2 true}if					AGMCORE_black_plate						{3 true}if					AGMCORE_plate_ndx 4 eq						{0 false}if							dup not currentoverprint and						{/AGMCORE_ignoreshade true def}if					AGMCORE_separateShading					currentdict					end exch					}if				dup 0 get /Separation eq					{					exch begin					ColorSpace 1 get dup /None ne exch /All ne and						{						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and							{							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 								{								/ColorSpace									[									/Separation									ColorSpace 1 get									/DeviceGray										[										ColorSpace 3 get /exec cvx										4 AGMCORE_plate_ndx sub -1 /roll cvx										4 1 /roll cvx										3 [/pop cvx]cvx /repeat cvx										1 /exch cvx /sub cvx										]cvx																		]def								}{								AGMCORE_report_unsupported_color_space								AGMCORE_black_plate not									{									currentdict 0 false AGMCORE_separateShading									}if								}ifelse							}{							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor							0 exch 							dup not currentoverprint and								{/AGMCORE_ignoreshade true def}if							AGMCORE_separateShading							}ifelse							}if								currentdict					end exch					}if				dup 0 get /DeviceN eq					{					exch begin					ColorSpace 1 get convert_to_process						{						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 							{							/ColorSpace								[								/DeviceN								ColorSpace 1 get								/DeviceGray									[									ColorSpace 3 get /exec cvx									4 AGMCORE_plate_ndx sub -1 /roll cvx									4 1 /roll cvx									3 [/pop cvx]cvx /repeat cvx									1 /exch cvx /sub cvx									]cvx																	]def							}{							AGMCORE_report_unsupported_color_space							AGMCORE_black_plate not								{								currentdict 0 false AGMCORE_separateShading								/ColorSpace [/DeviceGray] def								}if							}ifelse						}{						currentdict						false -1 ColorSpace 1 get							{							AGMCORE_IsCurrentColor								{								1 add								exch pop true exch exit								}if							1 add							}forall						exch 						dup not currentoverprint and							{/AGMCORE_ignoreshade true def}if						AGMCORE_separateShading						}ifelse					currentdict					end exch					}if				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not					{					exch begin					ColorSpace dup type /arraytype eq						{0 get}if					/DeviceGray ne						{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate not							{							ColorSpace 0 get /CIEBasedA eq								{								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def								}if							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or								{								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def								}if							ColorSpace 0 get /CIEBasedDEFG eq								{								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}]								}if							currentdict 0 false AGMCORE_separateShading							}if						}if					currentdict					end exch					}if				pop				dup /AGMCORE_ignoreshade known					{					begin					/ColorSpace [/Separation (None) /DeviceGray {}] def					currentdict end					}if				}def			/shfill				{				clonedict				AGMCORE_separateShadingDict 				dup /AGMCORE_ignoreshade known					{pop}					{AGMCORE_&sysshfill}ifelse				}def			/makepattern				{				exch				dup /PatternType get 2 eq					{					clonedict					begin					/Shading Shading AGMCORE_separateShadingDict def					currentdict end					exch AGMCORE_&sysmakepattern					}{					exch AGMCORE_&usrmakepattern					}ifelse				}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf	/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def	/map_index	{		1 index mul exch getinterval {255 div} forall	} bdf	/map_indexed_devn	{		Lookup Names length 3 -1 roll cvi map_index	} bdf	/n_color_components	{		base_colorspace_type		dup /DeviceGray eq{			pop 1		}{			/DeviceCMYK eq{				4			}{				3			}ifelse		}ifelse	}bdf	level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		/level2ScreenFreq{			begin			60			HalftoneType 1 eq{				pop Frequency			}if			HalftoneType 2 eq{				pop GrayFrequency			}if			HalftoneType 5 eq{				pop Default level2ScreenFreq			}if			 end		}def		/currentScreenFreq{			currenthalftone level2ScreenFreq		}def		level2 /setcolorspace AGMCORE_key_known not and{			/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get dup /Separation eq					{						pop						dup length array copy						dup dup 1 get						current_spot_alias						{							dup map_alias							{								begin								/sep_colorspace_dict currentdict AGMCORE_gput								pop pop	pop								[ 									/Separation Name 									CSA map_csa									dup /MappedCSA xdf 									/sep_colorspace_proc load								]								dup Name								end							}if						}if						map_reserved_ink_name 1 xpt					}{						/DeviceN eq 						{							dup length array copy							dup dup 1 get [ 								exch {									current_spot_alias{										dup map_alias{											/Name get exch pop										}if									}if									map_reserved_ink_name								} forall 							] 1 xpt						}if					}ifelse				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if			}def		}if		}{		/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/currentScreenFreq{			currentscreen pop pop		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def		/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def		/setcolor_devicecolor		{			base_colorspace_type			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def		/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse	/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/devn /setdevicencolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/devncs /setdevicencolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/f /fill ldf	/ef /eofill ldf	/@ /stroke ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall	/currentpagedevice currentpagedevice def/getrampcolor {/indx exch def0 1 NumComp 1 sub {dupSamples exch getdup type /stringtype eq { indx get } ifexchScaling exch get aload pop3 1 rollmul add} forColorSpaceFamily /Separation eq	{	sep	}	{	ColorSpaceFamily /DeviceN eq		{		devn		}		{		setcolor		}ifelse	}ifelse} bind def/sssetbackground { aload pop setcolor } bind def/RadialShade {40 dict begin/ColorSpaceFamily exch def/background exch def/ext1 exch def/ext0 exch def/BBox exch def/r2 exch def/c2y exch def/c2x exch def/r1 exch def/c1y exch def/c1x exch def/rampdict exch def/setinkoverprint where {pop /setinkoverprint{pop}def}ifgsaveBBox length 0 gt {newpathBBox 0 get BBox 1 get movetoBBox 2 get BBox 0 get sub 0 rlineto0 BBox 3 get BBox 1 get sub rlinetoBBox 2 get BBox 0 get sub neg 0 rlinetoclosepathclipnewpath} ifc1x c2x eq{c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse}{/slope c2y c1y sub c2x c1x sub div def/theta slope 1 atan defc2x c1x lt c2y c1y ge and { /theta theta 180 sub def} ifc2x c1x lt c2y c1y lt and { /theta theta 180 add def} if}ifelsegsaveclippathc1x c1y translatetheta rotate-90 rotate{ pathbbox } stopped{ 0 0 0 0 } if/yMax exch def/xMax exch def/yMin exch def/xMin exch defgrestorexMax xMin eq yMax yMin eq or{grestoreend}{/max { 2 copy gt { pop } {exch pop} ifelse } bind def/min { 2 copy lt { pop } {exch pop} ifelse } bind deframpdict begin40 dict beginbackground length 0 gt { background sssetbackground gsave clippath fill grestore } ifgsavec1x c1y translatetheta rotate-90 rotate/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def/c1y 0 def/c1x 0 def/c2x 0 defext0 {0 getrampcolorc2y r2 add r1 sub 0.0001 lt{c1x c1y r1 360 0 arcnpathbbox/aymax exch def/axmax exch def/aymin exch def/axmin exch def/bxMin xMin axmin min def/byMin yMin aymin min def/bxMax xMax axmax max def/byMax yMax aymax max defbxMin byMin movetobxMax byMin linetobxMax byMax linetobxMin byMax linetobxMin byMin linetoeofill}{c2y r1 add r2 le{c1x c1y r1 0 360 arcfill}{c2x c2y r2 0 360 arc fillr1 r2 eq{/p1x r1 neg def/p1y c1y def/p2x r1 def/p2y c1y defp1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin linetofill}{/AA r2 r1 sub c2y div def/theta AA 1 AA dup mul sub sqrt div 1 atan def/SS1 90 theta add dup sin exch cos div def/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def/p1y p1x SS1 div neg def/SS2 90 theta sub dup sin exch cos div def/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def/p2y p2x SS2 div neg defr1 r2 gt{/L1maxX p1x yMin p1y sub SS1 div add def/L2maxX p2x yMin p2y sub SS2 div add def}{/L1maxX 0 def/L2maxX 0 def}ifelsep1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add linetoL1maxX L1maxX p1x sub SS1 mul p1y add linetofill}ifelse}ifelse} ifelse} ifc1x c2x sub dup mulc1y c2y sub dup muladd 0.5 exp0 dtransformdup mul exch dup mul add 0.5 exp 72 div0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt1 index 1 index lt { exch } if pop/hires exch defhires mul/numpix exch def/numsteps NumSamples def/rampIndxInc 1 def/subsampling false defnumpix 0 ne{NumSamples numpix div 0.5 gt{/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def/rampIndxInc NumSamples 1 sub numsteps div def/subsampling true def} if} if/xInc c2x c1x sub numsteps div def/yInc c2y c1y sub numsteps div def/rInc r2 r1 sub numsteps div def/cx c1x def/cy c1y def/radius r1 defnewpathxInc 0 eq yInc 0 eq rInc 0 eq and and{0 getrampcolorcx cy radius 0 360 arcstrokeNumSamples 1 sub getrampcolorcx cy radius 72 hires div add 0 360 arc0 setlinewidthstroke}{0numsteps{dupsubsampling { round cvi } ifgetrampcolorcx cy radius 0 360 arc/cx cx xInc add def/cy cy yInc add def/radius radius rInc add defcx cy radius 360 0 arcneofillrampIndxInc add}repeatpop} ifelseext1 {c2y r2 add r1 lt{c2x c2y r2 0 360 arcfill}{c2y r1 add r2 sub 0.0001 le{c2x c2y r2 360 0 arcnpathbbox/aymax exch def/axmax exch def/aymin exch def/axmin exch def/bxMin xMin axmin min def/byMin yMin aymin min def/bxMax xMax axmax max def/byMax yMax aymax max defbxMin byMin movetobxMax byMin linetobxMax byMax linetobxMin byMax linetobxMin byMin linetoeofill}{c2x c2y r2 0 360 arc fillr1 r2 eq{/p1x r2 neg def/p1y c2y def/p2x r2 def/p2y c2y defp1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax linetofill}{/AA r2 r1 sub c2y div def/theta AA 1 AA dup mul sub sqrt div 1 atan def/SS1 90 theta add dup sin exch cos div def/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def/p1y c2y p1x SS1 div sub def/SS2 90 theta sub dup sin exch cos div def/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def/p2y c2y p2x SS2 div sub defr1 r2 lt{/L1maxX p1x yMax p1y sub SS1 div add def/L2maxX p2x yMax p2y sub SS2 div add def}{/L1maxX 0 def/L2maxX 0 def}ifelsep1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add linetoL1maxX L1maxX p1x sub SS1 mul p1y add linetofill}ifelse}ifelse} ifelse} ifgrestoregrestoreendendend} ifelse} bind def/GenStrips {40 dict begin/ColorSpaceFamily exch def/background exch def/ext1 exch def/ext0 exch def/BBox exch def/y2 exch def/x2 exch def/y1 exch def/x1 exch def/rampdict exch def/setinkoverprint where {pop /setinkoverprint{pop}def}ifgsaveBBox length 0 gt {newpathBBox 0 get BBox 1 get movetoBBox 2 get BBox 0 get sub 0 rlineto0 BBox 3 get BBox 1 get sub rlinetoBBox 2 get BBox 0 get sub neg 0 rlinetoclosepathclipnewpath} ifx1 x2 eq{y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse}{/slope y2 y1 sub x2 x1 sub div def/theta slope 1 atan defx2 x1 lt y2 y1 ge and { /theta theta 180 sub def} ifx2 x1 lt y2 y1 lt and { /theta theta 180 add def} if}ifelsegsaveclippathx1 y1 translatetheta rotate{ pathbbox } stopped{ 0 0 0 0 } if/yMax exch def/xMax exch def/yMin exch def/xMin exch defgrestorexMax xMin eq yMax yMin eq or{grestoreend}{rampdict begin20 dict beginbackground length 0 gt { background sssetbackground gsave clippath fill grestore } ifgsavex1 y1 translatetheta rotate/xStart 0 def/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def/ySpan yMax yMin sub def/numsteps NumSamples def/rampIndxInc 1 def/subsampling false defxStart 0 transformxEnd 0 transform3 -1 rollsub dup mul3 1 rollsub dup muladd 0.5 exp 72 div0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt1 index 1 index lt { exch } if popmul/numpix exch defnumpix 0 ne{NumSamples numpix div 0.5 gt{/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def/rampIndxInc NumSamples 1 sub numsteps div def/subsampling true def} if} ifext0 {0 getrampcolorxMin xStart lt{ xMin yMin xMin neg ySpan rectfill } if} if/xInc xEnd xStart sub numsteps div def/x xStart def0numsteps{dupsubsampling { round cvi } ifgetrampcolorx yMin xInc ySpan rectfill/x x xInc add deframpIndxInc add}repeatpopext1 {xMax xEnd gt{ xEnd yMin xMax xEnd sub ySpan rectfill } if} ifgrestoregrestoreendendend} ifelse} bind def}def/page_trailer{	end}def/doc_trailer{}defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA map_csa setcolorspace_opt		set_crd	end}def/setsepcolor{ 	/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/setdevicencolor{ 	/devicen_colorspace_dict AGMCORE_gget begin		Names length copy		Names length 1 sub -1 0		{			/devicen_tints AGMCORE_gget 3 1 roll xpt		} for		TintProc	end} def/sep_colorspace_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 	current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	/MappedCSA CSA map_csa def	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf	AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx							AGMCORE_host_sep{								AGMCORE_is_cmyk_sep								/Name cvx 								/AGMCORE_IsSeparationAProcessColor load /exec cvx								/not cvx /and cvx 							}{								Name inRip_spot_has_ink not							}ifelse							[		 						/pop cvx 1							] cvx /if cvx							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc /setcolor ldf						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/additive_blend{  	3 dict begin  	/numarrays xdf  	/numcolors xdf  	0 1 numcolors 1 sub  		{  		/c1 xdf  		1  		0 1 numarrays 1 sub  			{			1 exch add /index cvx  			c1 /get cvx /mul cvx  			}for 		numarrays 1 add 1 /roll cvx   		}for 	numarrays [/pop cvx] cvx /repeat cvx  	end}def/subtractive_blend{	3 dict begin	/numarrays xdf	/numcolors xdf	0 1 numcolors 1 sub		{		/c1 xdf		1 1		0 1 numarrays 1 sub			{			1 3 3 -1 roll add /index cvx  			c1 /get cvx /sub cvx /mul cvx			}for		/sub cvx		numarrays 1 add 1 /roll cvx		}for	numarrays [/pop cvx] cvx /repeat cvx	end}def/exec_tint_transform{	/TintProc [		/TintTransform cvx /setcolor cvx	] cvx bdf	MappedCSA setcolorspace_opt} bdf/devn_makecustomcolor{	2 dict begin	/names_index xdf	/Names xdf	1 1 1 1 Names names_index get findcmykcustomcolor	/devicen_tints AGMCORE_gget names_index get setcustomcolor	Names length {pop} repeat	end} bdf/setdevicencolorspace{ 	dup /AliasedColorants known {false}{true}ifelse 	current_spot_alias and {		6 dict begin		/names_index 0 def		dup /names_len exch /Names get length def		/new_names names_len array def		/new_LookupTables names_len array def		/alias_cnt 0 def		dup /Names get		{			dup map_alias {				exch pop				dup /ColorLookup known {					dup begin					new_LookupTables names_index ColorLookup put					end				}{					dup /Components known {						dup begin						new_LookupTables names_index Components put						end					}{						dup begin						new_LookupTables names_index [null null null null] put						end					} ifelse				} ifelse				new_names names_index 3 -1 roll /Name get put				/alias_cnt alias_cnt 1 add def 			}{				/name xdf								new_names names_index name put				dup /LookupTables known {					dup begin					new_LookupTables names_index LookupTables names_index get put					end				}{					dup begin					new_LookupTables names_index [null null null null] put					end				} ifelse			} ifelse			/names_index names_index 1 add def 		} forall		alias_cnt 0 gt {			/AliasedColorants true def			0 1 names_len 1 sub {				/names_index xdf				new_LookupTables names_index get 0 get null eq {					dup /Names get names_index get /name xdf					name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq					or or or not {						/AliasedColorants false def						exit					} if				} if			} for			AliasedColorants {				dup begin				/Names new_names def				/AliasedColorants true def				/LookupTables new_LookupTables def				currentdict /TTTablesIdx known not {					/TTTablesIdx -1 def				} if				currentdict /NComponents known not {					/NComponents TintMethod /Subtractive eq {4}{3}ifelse def				} if				end			} if		}if		end	} if	dup /devicen_colorspace_dict exch AGMCORE_gput	begin	/MappedCSA CSA map_csa def	currentdict /AliasedColorants known {		AliasedColorants	}{		false	} ifelse	/TintTransform load type /nulltype eq or {		/TintTransform [			0 1 Names length 1 sub				{				/TTTablesIdx TTTablesIdx 1 add def				dup LookupTables exch get dup 0 get null eq					{					1 index					Names exch get					dup (Cyan) eq						{						pop exch						LookupTables length exch sub						/index cvx						0 0 0						}						{						dup (Magenta) eq							{							pop exch							LookupTables length exch sub							/index cvx							0 /exch cvx 0 0							}							{							(Yellow) eq								{								exch								LookupTables length exch sub								/index cvx								0 0 3 -1 /roll cvx 0								}								{								exch								LookupTables length exch sub								/index cvx								0 0 0 4 -1 /roll cvx								} ifelse							} ifelse						} ifelse					5 -1 /roll cvx /astore cvx					}					{					dup length 1 sub					LookupTables length 4 -1 roll sub 1 add					/index cvx /mul cvx /round cvx /cvi cvx /get cvx					} ifelse					Names length TTTablesIdx add 1 add 1 /roll cvx				} for			Names length [/pop cvx] cvx /repeat cvx			NComponents Names length  			TintMethod /Subtractive eq  				{  				subtractive_blend  				}  				{  				additive_blend  				} ifelse		] cvx bdf	} if	AGMCORE_host_sep {		Names convert_to_process {			exec_tint_transform		}		{				currentdict /AliasedColorants known {				AliasedColorants not			}{				false			} ifelse			5 dict begin			/AvoidAliasedColorants xdf			/painted? false def			/names_index 0 def			/names_len Names length def			Names {				AvoidAliasedColorants {					/currentspotalias current_spot_alias def					false set_spot_alias				} if				AGMCORE_is_cmyk_sep {					dup (Cyan) eq AGMCORE_cyan_plate and exch					dup (Magenta) eq AGMCORE_magenta_plate and exch					dup (Yellow) eq AGMCORE_yellow_plate and exch					(Black) eq AGMCORE_black_plate and or or or {						/devicen_colorspace_dict AGMCORE_gget /TintProc [							Names names_index /devn_makecustomcolor cvx						] cvx ddf						/painted? true def					} if					painted? {exit} if				}{					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {					/devicen_colorspace_dict AGMCORE_gget /TintProc [						Names names_index /devn_makecustomcolor cvx					] cvx ddf					/painted? true def					exit					} if				} ifelse				AvoidAliasedColorants {					currentspotalias set_spot_alias				} if				/names_index names_index 1 add def			} forall			painted? {				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put			}{				/devicen_colorspace_dict AGMCORE_gget /TintProc [					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx					0 0 0 0 () /findcmykcustomcolor cvx 0 /setcustomcolor cvx				] cvx ddf			} ifelse			end		} ifelse	}	{		AGMCORE_in_rip_sep {			Names convert_to_process not		}{			level3		} ifelse		{			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt			/TintProc level3 not AGMCORE_in_rip_sep and {				[					Names /length cvx [/pop cvx] cvx /repeat cvx				] cvx bdf			}{				/setcolor ldf			} ifelse		}{			exec_tint_transform		} ifelse	} ifelse	set_crd	/AliasedColorants false def	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		currentdict /CSD known {			CSD get_csd /Names known {				CSD get_csd begin				currentdict devncs				AGMCORE_host_sep{					4 dict begin					/devnCompCnt Names length def					/NewLookup HiVal 1 add string def					0 1 HiVal {						/tableIndex xdf						Lookup dup type /stringtype eq {							devnCompCnt tableIndex map_index						}{							exec						} ifelse						setdevicencolor						currentgray						tableIndex exch						HiVal mul cvi 						NewLookup 3 1 roll put					} for					[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt					end				}{					level3					{					[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt					}{					[/Indexed MappedCSA HiVal						[						Lookup dup type /stringtype eq							{/exch cvx CSD get_csd /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}							{/exec cvx}ifelse							/TintTransform load /exec cvx						]cvx					]setcolorspace_opt					}ifelse				} ifelse				end			}{			} ifelse			set_crd		}		{			/MappedCSA CSA map_csa def			AGMCORE_host_sep level2 not and{				0 0 0 0 setcmykcolor			}{				[/Indexed MappedCSA 				level2 not has_color not and{					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{						pop [/DeviceGray]					}if					HiVal GrayLookup				}{					HiVal 					currentdict/RangeArray known{						{ 							/indexed_colorspace_dict AGMCORE_gget begin							Lookup exch 							dup HiVal gt{								pop HiVal							}if							NComponents mul NComponents getinterval {} forall							NComponents 1 sub -1 0{								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range								NComponents 1 roll							}for							end						} bind					}{						Lookup					}ifelse				}ifelse				] setcolorspace_opt				set_crd			}ifelse		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep {		/indexed_colorspace_dict AGMCORE_gget dup /CSD known {			begin			CSD get_csd begin			map_indexed_devn			devn			end			end		}{			AGMCORE_gget/Lookup get 4 3 -1 roll map_index			pop setcmykcolor		} ifelse	}{		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSD known and {			/indexed_colorspace_dict AGMCORE_gget /CSD get get_csd begin			map_indexed_devn			devn			end		}		{			setcolor		} ifelse	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave		dup clonedict begin		1 setgray		/Decode [0 1] def		/DataSource <FF> def		/MultipleDataSources false def		/BitsPerComponent 8 def		currentdict end		systemdict /image get exec		grestore		}if	consumeimagedata}def/add_csa{	Adobe_AGM_Core begin			/AGMCORE_CSA_cache xput	end}def/get_csa_by_name{	dup type dup /nametype eq exch /stringtype eq or{		Adobe_AGM_Core begin		1 dict begin		/name xdf		AGMCORE_CSA_cache		{			0 get name eq {				exit			}{				pop			} ifelse		}forall		end		end	}{		pop	} ifelse}def/map_csa{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get	}if}def/add_csd{	Adobe_AGM_Core begin		/AGMCORE_CSD_cache xput	end}def/get_csd{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get	}if}def/pattern_buf_init{	/count get 0 0 put} def/pattern_buf_next{	dup /count get dup 0 get	dup 3 1 roll	1 add 0 xpt	get				} def/cachepattern_compress{	5 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	/string_size 16000 def	/readbuffer string_size string def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	/LZWFilter 	{		exch		dup length 0 eq {			pop		}{			patarray dup length 1 sub 3 -1 roll put		} ifelse		{string_size}{0}ifelse string	} /LZWEncode filter def	{ 				ReadFilter readbuffer readstring		exch LZWFilter exch writestring		not {exit} if	} loop	LZWFilter closefile	patarray					end}def/cachepattern{	2 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	{		ReadFilter 16000 string readstring exch		patarray dup length 1 sub 3 -1 roll put		not {exit} if	} loop	patarray dup dup length 1 sub () put						end	}def/add_pattern{	Adobe_AGM_Core begin		/AGMCORE_pattern_cache xput	end}def/get_pattern{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get		dup wrap_paintproc	}if}def/wrap_paintproc{   statusdict /currentfilenameextend known{	  begin		/OldPaintProc /PaintProc load def		/PaintProc		{		  mark exch		  dup /OldPaintProc get stopped		  {closefile restore end} if		  cleartomark		}  def	  end  } {pop} ifelse} def/make_pattern{	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix			  1 index begin		BBox 0 get XStep div cvi XStep mul /xshift exch neg def		BBox 1 get YStep div cvi YStep mul /yshift exch neg def		BBox 0 get xshift add		BBox 1 get yshift add		BBox 2 get xshift add		BBox 3 get yshift add		4 array astore		/BBox exch def		[ xshift yshift /translate load null /exec load ] dup		3 /PaintProc load put cvx /PaintProc exch def		end	gsave 0 setgray	makepattern	grestore}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{	currentcolorrendering/Intent known{		currentcolorrendering/Intent get	}{		null	}ifelse	Intent ne{		false  		Intent		AGMCORE_CRD_cache {			exch pop 			begin				dup Intent eq{					currentdict setcolorrendering_opt					end 					exch pop true exch						exit				}if			end		} forall		pop		not{			systemdict /findcolorrendering known{				Intent findcolorrendering pop				/ColorRendering findresource 				dup length dict copy				setcolorrendering_opt			}if		}if	}if} def/add_crd{	AGMCORE_CRD_cache 3 1 roll put}def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict/CRD known{			AGMCORE_CRD_cache CRD get dup null ne{				setcolorrendering_opt			}{				pop			}ifelse		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse		currentcolorspace dup type /arraytype eq			{0 get}if		/DeviceRGB eq			{			currentdict/UCR known				{/UCR}{/AGMCORE_currentucr}ifelse			load setundercolorremoval			currentdict/BG known 				{/BG}{/AGMCORE_currentbg}ifelse			load setblackgeneration			}if	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cpaint_gcomp{	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/path_rez{	dup 0 ne{		AGMCORE_deviceDPI exch div 		dup 1 lt{			pop 1		}if		setflat	}{		pop	}ifelse 	}def/set_spot_alias_ary{	/AGMCORE_SpotAliasAry where{		pop pop	}{		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf		true set_spot_alias	}ifelse}def/set_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry{				dup/Name get AGMCORE_name eq{					save exch					/Adobe_AGM_Core currentdict def					/CSD get get_csd					exch restore					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias	/AGMCORE_&setcustomcolor AGMCORE_key_known not {		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput	Adobe_AGM_Core begin	/setcustomcolor	{		dup /customcolor_tint exch AGMCORE_gput		current_spot_alias{			1 index 4 get map_alias{				mark 3 1 roll				setsepcolorspace				counttomark 0 ne{					setsepcolor				}if				pop				pop			}{				AGMCORE_&setcustomcolor			}ifelse		}{			AGMCORE_&setcustomcolor		}ifelse	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		initializepage		/initializepage{}def		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if	/mysetup where {		/mysetup [1 0 0 1 0 0] put	}if	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put	level2		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if}def/driver_check_media_override{	/PrepsDict where		{pop}		{		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq			{			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and			}if			{			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix			}if		}ifelse}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defendendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.23 0%%Copyright: Copyright 1997-2003 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.23 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }ifuserdict /Adobe_CoolType_Core 60 dict dup begin put/Adobe_CoolType_Version 2.23 def/Level2?	systemdict /languagelevel known dup		{ pop systemdict /languagelevel get 2 ge }	if defLevel2? not	{	/currentglobal false def	/setglobal /pop load def	/gcheck { pop false } bind def	/currentpacking false def	/setpacking /pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpacking/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel		2 copy known not			{ 2 copy 3 dict dup /args 7 index 5 add array put put get }			{			get dup /args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch /args exch put				}				{ pop }			ifelse			}		ifelse			begin			count 2 sub 1 index lt				{ pop count 1 sub }			if			dup /argCount exch def			dup 0 gt				{				exch 1 index 2 add 1 roll				args exch 0 exch getinterval 			astore pop				}				{ pop }			ifelse			count 1 sub /restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		end	} bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{ { pop } repeat }				{ pop }			ifelse			args 0 argCount getinterval {} forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{ { end } repeat }		{ pop }	ifelse	} bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	} bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	} bind def/@ReRaise	{	cvx $error /errorname get errordict exch get exec	stop	} bind def/@Stopped	{	0 @#Stopped	} bind def/@#Stopped	{	@_SaveStackLevels	stopped		{ @_RestoreStackLevels true }		{ @_PopStackLevels false }	ifelse	} bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get /args get exch get		end	} bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup begin		mark			{				(*) { pop stop } 128 string /Category			resourceforall			}		stopped		cleartomark		currentdict eq dup			{ end }		if		not		}		{ false }	ifelse	def/CTHasResourceStatusBug	Level2?		{		mark			{ /steveamerige /Category resourcestatus }		stopped			{ cleartomark true }			{ cleartomark currentglobal not }		ifelse		}		{ false }	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec				{ cleartomark false }				{ { 3 2 roll pop true } { cleartomark false } ifelse }			ifelse			end		} bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad /ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup /CMap CTHasResourceStatusBug						{ CTResourceStatus }						{ resourcestatus }					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup /CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{ exit }								{ stop }							ifelse							}						ifelse						}						{ pop }					ifelse					}				128 string /CMap resourceforall				}			stopped				{ cleartomark }			stopped pop			setglobal			}		if		}	if	} bind def/doc_setup	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mov /moveto load def		/nfnt /newencodedfont load def		/mfnt /makefont load def		/sfnt /setfont load def		/ufnt /undefinefont load def		/chp /charpath load def		/awsh /awidthshow load def		/wsh /widthshow load def		/ash /ashow load def		/sh /show load def		end	userdict /Adobe_CoolType_Data 10 dict dup		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end put	} bind def/doc_trailer	{	currentdict Adobe_CoolType_Core eq		{ end }	if	} bind def/page_setup	{	Adobe_CoolType_Core begin	} bind def/page_trailer	{	end	} bind def/unload	{	systemdict /languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{ undef }				{ pop pop }			ifelse			}		if		}	if	} bind def/ndf	{	1 index where		{ pop pop pop }		{ dup xcheck { bind } if def }	ifelse	} def/findfont systemdict	begin	userdict		begin		/globaldict where { /globaldict get begin } if			dup where pop exch get		/globaldict where { pop end } if		end	endAdobe_CoolType_Core_Defined	{ /systemfindfont exch def }	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{ pop } ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq { 0 } { dup length } ifelse	2 index length add 1 add dict		begin		exch			{			1 index /FID eq				{ pop pop }				{ def }			ifelse			}		forall		dup null eq			{ pop }			{ { def } forall }		ifelse		currentdict		end	exch setglobal	} bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	} bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index  known			{ SharedFontDirectory 3 index get /FontReferenced known }			{ false }		ifelse		}		{		FontDirectory 3 index known			{ FontDirectory 3 index get /FontReferenced known }			{			SharedFontDirectory 3 index known				{ SharedFontDirectory 3 index get /FontReferenced known }				{ false }			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont /FontReferenced get		2 index dup type /nametype eq			{findfont}		if ne			{ pop false }		if		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{ 2 copy get 3 index 3 1 roll put }		for		pop pop pop		}		{		dup type /nametype eq		  { findfont }	  if		dup dup maxlength 2 add dict			begin			exch				{				1 index /FID ne					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type /stringtype eq { cvn } if def dup			currentdict			end		definefont def		}	ifelse	} bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type /dicttype ne			{ 0 dict }		if		currentdict /$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{ def } forall					{ def } forall					currentdict					dup /$Init known						{ dup /$Init get exec }					if					end				/$Strategy exch def				}				{ pop pop pop }			ifelse			}			{ pop pop }		ifelse		end	} bind def/scff	{	$SubstituteFont		begin		dup type /stringtype eq			{ dup length exch }			{ null }		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{ $sname }			ifelse def		end		{ findfont }	@Stopped		{		dup length 8 add string exch		1 index 0 (BadFont:) putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{ findfont }		@Stopped			{ pop /Courier findfont }		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	} bind def/isWidthsOnlyFont	{	dup /WidthsOnly known		{ pop pop true }		{		dup /FDepVector known			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }			{			dup /FDArray known				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }				{ pop }			ifelse			}		ifelse		}	ifelse	} bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 4 index def		/$doSmartSub false def		end	3 index	currentglobal false setglobal exch	/CompatibleFonts /ProcSet resourcestatus		{		pop pop		/CompatibleFonts /ProcSet findresource			begin			dup /CompatibleFont currentexception			1 index /CompatibleFont true setexception			1 index /Font resourcestatus				{				pop pop				3 2 roll setglobal				end				exch				dup findfont				/CompatibleFonts /ProcSet findresource					begin					3 1 roll exch /CompatibleFont exch setexception					end				}				{				3 2 roll setglobal				1 index exch /CompatibleFont exch setexception				end				findfont				$SubstituteFont /$substituteFound true put				}			ifelse		}		{ exch setglobal findfont }	ifelse	$SubstituteFont		begin		$substituteFound			{		 false		 (%%[Using embedded font ) print		 5 index ?str1 cvs print		 ( to avoid the font substitution problem noted earlier.]%%\n) print		 }			{			dup /FontName known				{				dup /FontName get $fontname eq				1 index /DistillerFauxFont known not and				/currentdistillerparams where					{ pop false 2 index isWidthsOnlyFont not and }				if				}				{ false }			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		exch pop exch pop exch		2 dict dup /Found 3 index put		exch findfont exch		}		{		exch exec		exch dup findfont		dup /FontType get 3 eq	  {		  exch ?str1 cvs		  dup length 1 sub		  -1 0		{			  exch dup 2 index get 42 eq			{				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop				 exit			  }			  {exch pop} ifelse		  }for		}		{		 exch pop	  } ifelse		2 dict dup /Downloaded 6 5 roll put		}	ifelse	dup /FontName 4 index put copyfont definefont pop	} bind def/?str2 256 string def/?add	{	1 index type /integertype eq		{ exch true 4 2 }		{ false 3 1 }	ifelse	roll	1 index findfont	dup /Widths known		{		Adobe_CoolType_Data /AddWidths? true put		gsave dup 1000 scalefont setfont		}	if	/Downloaded known		{		exec		exch			{			exch ?str2 cvs exch			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length			?str1 1 index 1 add 3 index putinterval			exch length 1 add 1 index add			?str1 2 index (*) putinterval			?str1 0 2 index getinterval cvn findfont 			?str1 3 index (+) putinterval			2 dict dup /FontName ?str1 0 6 index getinterval cvn put			dup /Downloaded Downloaded put end copyfont			dup /FontName get exch definefont pop pop pop			}			{			pop			}		ifelse		}		{		pop		exch			{			findfont			dup /Found get			dup length exch ?str1 cvs pop			?str1 1 index (+) putinterval			?str1 1 index 1 add 4 index ?str2 cvs putinterval			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn			1 dict exch 1 index exch /FontName exch put copyfont			dup /FontName get exch definefont pop			}			{			pop			}		ifelse		}	ifelse	Adobe_CoolType_Data /AddWidths? get		{ grestore Adobe_CoolType_Data /AddWidths? false put }	if	} bind def/?sh	{	currentfont /Downloaded known { exch } if pop	} bind def/?chp	{	currentfont /Downloaded known { pop } { false chp } ifelse	} bind def/?mv 	{	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse	} bind defsetpackinguserdict /$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{ get }			{ pop pop { pop /Courier } bind }		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams /CannotEmbedFontPolicy 2 copy known			{ get /Error eq }			{ pop pop false }		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup /WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type /stringtype eq { cvn } if def								/FontType 3 def								/FontMatrix [ .001 0 0 .001 0 0 ] def								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def								/FontBBox [ 0 0 0 0 ] def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth /y exch def /x exch def											x y setcharwidth											$SubstituteFont /$Strategy get /$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									} bind def								currentdict								end							exch setglobal							} bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup /WMode known										{ dup /WMode get }										{ 0 }									ifelse									/$WMode exch def									$fontname exch									dup /FontName known										{										dup /FontName get										dup type /stringtype eq { cvn } if										}										{ /unnamedfont }									ifelse									exch									Adobe_CoolType_Data /InVMDeepCopiedFonts get									1 index /FontName get known										{										pop										Adobe_CoolType_Data /InVMDeepCopiedFonts get										1 index get										null copyfont										}										{ $deepcopyfont }									ifelse									exch 1 index exch /FontBasedOn exch put									dup /FontName $fontname dup type /stringtype eq { cvn } if put									definefont									Adobe_CoolType_Data /InVMDeepCopiedFonts get										begin										dup /FontBasedOn get 1 index def										end									} bind def								/$Underprint									{									gsave									x abs y abs gt										{ /y 1000 def }										{ /x -1000 def 500 120 translate }									ifelse									Level2?										{										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]										setcolorspace										}										{ 0 setgray }									ifelse									10 setlinewidth									x .8 mul									[ 7 3 ]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{ .2 setcolor }											{ .8 setgray }										ifelse										fill grestore										stroke										}									forall									pop									grestore									} bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict /FontName known											{											FontName											dup type /stringtype eq { cvn } if											}											{ /unnamedfont }										ifelse										def										/FontName $fontname dup type /stringtype eq { cvn } if def										/currentdistillerparams where											{ pop }											{											/FontInfo currentdict /FontInfo known												{ FontInfo null copyfont }												{ 2 dict }											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									} bind def								end def						/$None							1 dict dup								begin								/$BuildFont {} bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type /stringtype eq { cvn } if						dup /$fontname exch def						$sname null eq							{ $str cvs dup length $slen sub $slen getinterval }							{ pop $sname }						ifelse						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont /$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{ /$match exch def exit }							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont /$dstack get								{								exch									{									1 index eq										{ pop false }										{ true }									ifelse									}									{ begin false }								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{ $match (fonts/) anchorsearch pop pop cvn }							{ /Courier }						ifelse						} bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1  [ /Ryumin-Light /HeiseiMin-W3										  /GothicBBB-Medium /HeiseiKakuGo-W5										  /HeiseiMaruGo-W4 /Jun101-Light ] def							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def							/GB1	  [ /STSong-Light /STHeiti-Regular ] def							/CNS1	 [ /MKai-Medium /MHei-Medium ] def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup /FontType get 0 eq							{							1 dict dup /FontName /copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup /FontName /copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{ $Strategies /$Type3Underprint get exec }						ifelse						} bind def					/$buildfontname						{						dup /CIDFont findresource /CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index (-) putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy (-) putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }							{ pop pop pop pop pop }						ifelse						length						$str 1 index (-) putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						} bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{ get }								{ pop pop [] }							ifelse							}							{ pop pop [] }						ifelse						false exch							{							dup /CIDFont resourcestatus								{								pop pop								save								1 index /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get }									{ false }								ifelse								exch pop								exch restore									{ pop }									{ exch pop true exit }								ifelse								}								{ pop }							ifelse							}						forall							{ $str cvs $buildfontname }							{							false (*)								{								save exch								dup /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get not }									{ true }								ifelse								exch /CIDSystemInfo get								dup /Registry get Registry eq								exch /Ordering get Ordering eq and and									{ exch restore exch pop true exit }									{ pop restore }								ifelse								}							$str /CIDFont resourceforall								{ $buildfontname }								{ $fontname $findfontByEnum }							ifelse							}						ifelse						} bind def					end				end				currentdict /$error known currentdict /languagelevel known and dup					{ pop $error /SubstituteFont known }				if				dup					{ $error }					{ Adobe_CoolType_Core }				ifelse				begin					{					/SubstituteFont					/CMap /Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{ dup $str cvs dup length $slen sub $slen getinterval cvn }									{ $sname }								ifelse								Adobe_CoolType_Data /InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{ exch pop true exit }												{ pop }											ifelse											}											{											FontDirectory 1 index known												{ exch pop true exit }												{												GlobalFontDirectory 1 index known													{ exch pop true exit }													{ pop }												ifelse												}											ifelse											}										ifelse										}									forall									}									{ pop pop false }								ifelse									{									exch pop exch pop									}									{									dup /CMap resourcestatus										{										pop pop										dup /$cmapname exch def										/CMap findresource /CIDSystemInfo get { def } forall										$findfontByROS										}										{										128 string cvs										dup (-) search											{											3 1 roll search												{												3 1 roll pop													{ dup cvi }												stopped													{ pop pop pop pop pop $findfontByEnum }													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup /CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup /$cmapname exch def															/CMap findresource /CIDSystemInfo get { def } forall															$findfontByROS															true exit															}															{ pop }														ifelse														}													for													dup type /booleantype eq														{ pop }														{ pop pop pop $findfontByEnum }													ifelse													}												ifelse												}												{ pop pop pop $findfontByEnum }											ifelse											}											{ pop pop $findfontByEnum }										ifelse										}									ifelse									}								ifelse								}								{ //SubstituteFont exec }							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{ $findfontByEnum }								{ //SubstituteFont exec }							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core /scfindfont /systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup /FontName known								{ dup /FontName get dup 3 index ne }								{ /noname true }							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def /$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{ 1 index /FID eq { pop pop } { def } ifelse }										forall										currentdict										end									definefont									dup /FontName known { dup /FontName get } { null } ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using ) print										dup /FontName known											{ dup /FontName get } { (unspecified font) }										ifelse										$str cvs print (.\n) print										}									if									}									{ exch pop }								ifelse								}								{ exch pop }							ifelse							end						} bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core /findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type /stringtype ne { $str cvs } if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{ dup $inVMIndex $AddInVMFont }						if						$doSmartSub							{							currentdict /$Strategy known								{ $Strategy /$BuildFont get exec }							if							}						if						}					if					end				} bind put			}		if		}	if	end/$AddInVMFont	{	exch /FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data /InVMFontsByCMap get exch		$DictAdd		}		{ pop pop pop }	ifelse	} bind def/$DictAdd	{	2 copy known not		{ 2 copy 4 index length dict put }	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get { forall } def				2 copy currentdict put				end			}			{ pop }		ifelse		}	if	get		begin			{ def }		forall		end	} bind defendend%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.%%Version: 1.19 0systemdict /languagelevel known dup	{ currentglobal false setglobal }	{ false }ifelseexchuserdict /Adobe_CoolType_Utility 2 copy known	{ 2 copy get dup maxlength 25 add dict copy }	{ 25 dict }ifelse putAdobe_CoolType_Utility	begin	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch /eCCRun known not			ct_Level2? and or defct_Level2?	{ globaldict begin currentglobal true setglobal }if	/ct_AddStdCIDMap		ct_Level2?			{ {			((Hex) 57 StartData			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec			} }			{ {			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec			} }		ifelse bind defuserdict /cid_extensions knowndup { cid_extensions /cid_UpdateDB known and } if	 {	 cid_extensions	 begin	 /cid_GetCIDSystemInfo		 {		 1 index type /stringtype eq			 { exch cvn exch }		 if		 cid_extensions			 begin			 dup load 2 index known				 {				 2 copy				 cid_GetStatusInfo				 dup null ne					 {					 1 index load					 3 index get					 dup null eq						  { pop pop cid_UpdateDB }						  {						  exch						  1 index /Created get eq							  { exch pop exch pop }							  { pop cid_UpdateDB }						  ifelse						  }					 ifelse					 }					 { pop cid_UpdateDB }				 ifelse				 }				 { cid_UpdateDB }			 ifelse			 end		 } bind def	 end	 }ifct_Level2?	{ end setglobal }if	/ct_UseNativeCapability?  systemdict /composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring () def		/usewidths? true def		end def	ct_Level2? { setglobal } { pop } ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict /languagelevel known				{ pop /CIDFont findresource /GlyphDirectory get }				{				1 index /CIDFont findresource /GlyphDirectory				get dup type /dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			} def		/+			{			systemdict /languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{ 1 dict begin }			ifelse			/$ exch def			systemdict /languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			? { $ begin } if			} def		/? { $ type /dicttype eq } def		/| {			userdict /Adobe_CoolType_Data known				{			Adobe_CoolType_Data /AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					  begin						AddWidths?								{								Adobe_CoolType_Data /CC 3 index put								? { def } { $ 3 1 roll put } ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont /Widths get exch CC exch put								}								{ ? { def } { $ 3 1 roll put } ifelse }							ifelse					end				end				}				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse				}				{ ? { def } { $ 3 1 roll put } ifelse }			ifelse			} def		/!			{			? { end } if			systemdict /languagelevel known				{ gvm setglobal }			if			end			} def		/: { string currentfile exch readstring pop } executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx [.001 0 0 .001 0 0] def		/ct_1000Mtx [1000 0 0 1000 0 0] def		/ct_raise {exch cvx exch errordict exch get exec stop} bind def		/ct_reraise			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print					errordict exch get exec stop			} bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			} bind def		/ct_GetInterval			{			Adobe_CoolType_Utility /ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{ dup string /dst_string exch def }				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex  get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string  dst_index 2 index putinterval						length dst_index add /dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string  dst_index 2 index putinterval						pop dup dst_index add /dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							  { arrayIndex get }							  {							  pop							  exit							  }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			} bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{ /unknowninstancename /Category resourcestatus }			stopped				{ cleartomark setglobal true }				{ cleartomark currentglobal not exch setglobal }			ifelse				{					{					mark 3 1 roll /Category findresource						begin						ct_Vars /vm currentglobal put						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec							{ cleartomark false }							{ { 3 2 roll pop true } { cleartomark false } ifelse }						ifelse						ct_Vars /vm get setglobal						end					}				}				{ { resourcestatus } }			ifelse bind def			/CIDFont /Category ct_resourcestatus				{ pop pop }				{				currentglobal  true setglobal				/Generic /Category findresource				dup length dict copy				dup /InstanceType /dicttype put				/CIDFont exch /Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit /ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				  /Registry (Adobe) def				  /Ordering (Identity) def				  /Supplement 0 def				end def				/CMapName /Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000> <FFFF>				endcodespacerange				1 begincidrange				<0000> <FFFF> 0				endcidrange				endcmap				CMapName currentdict /CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont  10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{ pop pop /defineresource /undefined ct_raise }				ifelse				} bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{ get 3 1 roll pop pop}						{ pop pop /findresource /undefinedresource ct_raise }					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/ct_resourcestatus /resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup (Binary) eq						{						pop						null						currentfile						ct_Level2?							{								{ cid_BYTE_COUNT () /SubFileDecode filter }							stopped								{ pop pop pop }							if							}						if						/readstring load						exit						}					if					dup (Hex) eq						{						pop						currentfile						ct_Level2?							{								{ null exch /ASCIIHexDecode filter /readstring }							stopped								{ pop exch pop (>) exch /readhexstring }							if							}							{ (>) exch /readhexstring }						ifelse						load						exit						}					if					/StartData /typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch /GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop /readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				} bind def			/StartData				{				mark					{					currentdict					dup /FDArray get 0 get /FontMatrix get					0 get 0.001 eq						{						dup /CDevProc known not							{							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known								{ get }								{								pop pop								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }								}							ifelse							def							}						if						}						{						 /CDevProc							 {							 pop pop pop pop pop							 0							 1 cid_temp /cid_CIDFONT get							 /FDArray get 0 get							 /FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							 } def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup /cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup /SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup /SubrMapOffset undef										dup /SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{ pop }								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict /CIDFont defineresource pop					end end					}				stopped					{ cleartomark /StartData ct_reraise }				if				} bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit /ProcSet ct_resourcestatus				{ true }				{ /CIDInitC /ProcSet ct_resourcestatus }			ifelse				{				pop pop				/CIDInit /ProcSet findresource				ct_UseNativeCapability?					{ pop null }					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }				ifelse				}				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }			ifelse			ct_Vars exch /ct_oldCIDInit exch put			} bind def		/ct_restoreCIDInit			{			ct_Vars /ct_oldCIDInit get dup null ne				{ /CIDInit exch /ProcSet defineresource pop }				{ pop }			ifelse			} bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility /ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{ pop 0 }						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{ get }								{ pop pop nullstring }							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{ 0 FDBytes ct_cvnsi }									{ pop 0 }								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{ /charstring nullstring def exit }								if								/cid 0 def								}							ifelse							}						loop			} def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			} def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont /Widths get cid					2 copy known						{ get exch pop aload pop }						{ pop pop stringwidth }					ifelse					}					{ stringwidth }				ifelse				setcharwidth				0 0 moveto				}			ifelse			} def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{ get }				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup /FontMatrix 2 copy known						{ get }						{ pop pop ct_defaultFontMtx }					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont /Widths get def					/CharStrings 1 dict dup /.notdef						<d841272cf18f54fc13> dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup /CharStrings get 1 index /Encoding get			ct_dfCharCode get charstring put			rootfont /WMode 2 copy known				{ get }				{ pop pop 0 }			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ ct_str1 show }			ifelse			} def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ ct_1000Mtx matrix concatmatrix concat }				{ pop }			ifelse			/Private get			Adobe_CoolType_Utility /ct_Level2? get not				{				ct_dfDict /Private				3 -1 roll					{ put }				1183615869 internaldict /superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility /ct_Level2? get				{ 1 index }				{ 3 index /Private get mark 6 1 roll }			ifelse			dup /RunInt known				{ /RunInt get }				{ pop /CCRun }			ifelse			get exec			Adobe_CoolType_Utility /ct_Level2? get not				{ cleartomark }			if			} bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility /ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{ stop }			if			end			end			end			end			} bind def		/BaseFontNameStr (BF00) def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/BuildChar /ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString /ct_Type3ShowCharString load def				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup /lenIV 4 put def				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def				/PaintType 0 def				/ct_ShowCharString /ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{ exit }				if				}			for			exch pop exch pop			} bind def		/ct_makeocf			{			15 dict				begin				exch /WMode exch def				exch /FontName exch def				/FontType 0 def				/FMapType 2 def			dup /FontMatrix known				{ dup /FontMatrix get /FontMatrix exch def }				{ /FontMatrix matrix def }			ifelse				/bfCount 1 index /CIDCount get 256 idiv 1 add					dup 256 gt { pop 256} if def				/Encoding					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for					bfCount 1 255 { 2 copy bfCount put pop } for					def				/FDepVector bfCount dup 256 lt { 1 add } if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont /FontBBox known						{ CIDFont /FontBBox get /FontBBox exch def }					if					CIDFont /CDevProc known						{ CIDFont /CDevProc get /CDevProc exch def }					if					currentdict					end				BaseFontNameStr 3 (0) putinterval				0 1 bfCount dup 256 eq { 1 sub } if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup /CIDFirstByte exch 256 mul def						FontType 3 eq							{ /ct_FDDict 2 dict def }						if						currentdict						end					1 index  16					BaseFontNameStr  2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont /Widths get						begin						exch /CIDFont get /GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{ exch pop }			ifelse			} bind def		/ct_ComposeFont			{			ct_UseNativeCapability?				{				2 index /CMap ct_resourcestatus					{ pop pop exch pop }					{					/CIDInit /ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch /WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry (Adobe) def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-) search									{									pop pop									(-) search										{										dup length string copy										exch pop exch pop										}										{ pop (Identity)}									ifelse									}									{ pop  (Identity)  }								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000> <FFFF>							endcodespacerange							1 begincidrange							<0000> <FFFF> 0							endcidrange							endcmap							CMapName currentdict /CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index /CMap ct_resourcestatus					{ pop pop }					{					/CIDInit /ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry (Adobe) def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-) search							{							pop pop							(-) search								{ dup length string copy exch pop exch pop }								{ pop (Identity) }							ifelse							}							{ pop (Identity) }						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000> <FFFF>					endcodespacerange					1 begincidrange					<0000> <FFFF> 0					endcidrange					endcmap					CMapName currentdict /CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		currentdict readonly pop		end	end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.%%Version: 1.0 0userdict /ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{  version  cvi  2015  ge} bind def/AllocGlyphStorage{  Is2015?  {			pop  }   { 		{string} forall  } ifelse} bind def/Type42DictBegin{	25 dict begin  /FontName exch def  /CharStrings 256 dict 	begin		  /.notdef 0 def		  currentdict 	end def  /Encoding exch def  /PaintType 0 def  /FontType 42 def  /FontMatrix [1 0 0 1 0 0] def  4 array  astore cvx /FontBBox exch def  /sfnts} bind def/Type42DictEnd  {	 currentdict dup /FontName get exch definefont end	ct_T42Dict exch	dup /FontName get exch put} bind def/RD {string currentfile exch readstring pop} executeonly def/PrepFor2015{	Is2015?	{		  		 /GlyphDirectory 		 16		 dict def		 sfnts 0 get		 dup		 2 index		 (glyx)		 putinterval		 2 index  		 (locx)		 putinterval		 pop		 pop	}	{		 pop		 pop	} ifelse			} bind def/AddT42Char{	Is2015?	{		/GlyphDirectory get 		begin		def		end		pop		pop	}	{		/sfnts get		4 index		get		3 index	  2 index		putinterval		pop		pop		pop		pop	} ifelse} bind defend%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 75 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd/AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/AGMIMG_maskSource nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/devnimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/devnimg /devn_imageormask ldf	/idximg /indexed_imageormask ldf	/_ctype 7 def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				use_mask {					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse				}{					AGMIMG_&image				}ifelse			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		cleartomark restore	end}def/overprint_plate{	currentoverprint {		0 get dup type /nametype eq {			dup /DeviceGray eq{				pop AGMCORE_black_plate not			}{				/DeviceCMYK eq{					AGMCORE_is_cmyk_sep not				}if			}ifelse		}{			false exch			{				 AGMOHS_sepink eq or			} forall			not		} ifelse	}{		pop false	}ifelse}def/process_mask_L3{	dup begin	/ImageType 1 def	end	4 dict begin		/DataDict exch def		/ImageType 3 def		/InterleaveType 3 def		/MaskDict 9 dict begin			/ImageType 1 def			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def			/ImageMatrix [Width 0 0 Height neg 0 Height] def			/NComponents 1 def			/BitsPerComponent 1 def			/Decode [0 1] def			/DataSource AGMIMG_maskSource def		currentdict end def	currentdict end}def/use_mask{	dup type /dicttype eq	{		dup /Mask known	{			dup /Mask get {				level3				{true}				{					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse					3 -1 roll and				} ifelse			}			{false} ifelse		}		{false} ifelse	}	{false} ifelse}def/make_line_source{	begin	MultipleDataSources {		[		Decode length 2 div cvi {Width string} repeat		]	}{		Width Decode length 2 div mul cvi string	}ifelse	end}def/datasource_to_str{	exch dup type	dup /filetype eq {		pop exch readstring	}{		/arraytype eq {			exec exch copy		}{			pop		}ifelse	}ifelse	pop}def/masked_image_simulation{	3 dict begin	dup make_line_source /line_source xdf	/mask_source AGMIMG_maskSource /LZWDecode filter def	dup /Width get 8 div ceiling cvi string /mask_str xdf	begin	gsave	0 1 translate 1 -1 Height div scale	1 1 Height {		pop		gsave		MultipleDataSources {			0 1 DataSource length 1 sub {				dup DataSource exch get				exch line_source exch get				datasource_to_str			} for		}{			DataSource line_source datasource_to_str		} ifelse		<<			/PatternType 1			/PaintProc [				/pop cvx				<<					/ImageType 1					/Width Width					/Height 1					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix					/MultipleDataSources MultipleDataSources					/DataSource line_source					/BitsPerComponent BitsPerComponent					/Decode Decode				>>				/image cvx			] cvx			/BBox [0 0 Width 1]			/XStep Width			/YStep 1			/PaintType 1			/TilingType 2		>>		matrix makepattern set_pattern		<<			/ImageType 1			/Width Width			/Height 1			/ImageMatrix Width 1 matrix scale			/MultipleDataSources false			/DataSource mask_source mask_str readstring pop			/BitsPerComponent 1			/Decode [0 1]		>>		imagemask		grestore		0 1 translate	} for	grestore	end	end}def/imageormask{	begin		SkipImageProc {			currentdict consumeimagedata		}		{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq DeviceN_PS2 not and {					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					use_mask {						level3 {process_mask_L3 image}{masked_image_simulation}ifelse					}{						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 						{							Names convert_to_process not {								2 dict begin								/imageDict xdf								/names_index 0 def								gsave								imageDict write_image_file {									Names {										dup (None) ne {											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace											Operator imageDict read_image_file											names_index 0 eq {true setoverprint} if											/names_index names_index 1 add def										}{											pop										} ifelse									} forall									close_image_file								} if								grestore								end							}{								Operator /imagemask eq {									imagemask								}{									image								} ifelse							} ifelse						}{							Operator /imagemask eq {								imagemask							}{								image							} ifelse						} ifelse					}ifelse				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					/Adobe_AGM_OnHost_Seps where {						pop imagemask					}{						currentgray 1 ne{							currentdict imageormask_sys						}{							currentoverprint not{								1 AGMCORE_&setgray								currentdict imageormask_sys							}{								currentdict ignoreimagedata							}ifelse				 								}ifelse					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								AGMCORE_is_cmyk_sep{									MultipleDataSources{										/DataSource [											DataSource 0 get /exec cvx											DataSource 1 get /exec cvx											DataSource 2 get /exec cvx											DataSource 3 get /exec cvx											/AGMCORE_get_ink_data cvx										] cvx def									}{										/DataSource 										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 										/DataSource load										filter_cmyk 0 () /SubFileDecode filter def									}ifelse									/Decode [ Decode 0 get Decode 1 get ] def									/MultipleDataSources false def									/NComponents 1 def									/Operator /image def									invert_image_samples						 			1 AGMCORE_&setgray									currentdict imageormask_sys								}{									currentoverprint not Operator/imagemask eq and{  			 							1 AGMCORE_&setgray  			 							currentdict imageormask_sys  			 						}{  			 							currentdict ignoreimagedata  			 						}ifelse								}ifelse							}{									MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not Operator/imagemask ne and{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								use_mask {									level3 {process_mask_L3 image}{masked_image_simulation}ifelse								}{									image								}ifelse							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentcolorspace overprint_plate not{									knockout_unitsq								}if							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}ifelse	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	/MappedCSA CSA map_csa def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentdict/ImageMatrix get concat						knockout_unitsq					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{	 								[ /Separation Name [/DeviceGray]	 								{ 	 									sep_colorspace_proc AGMCORE_get_ink_data										1 exch sub	 								} bind									] AGMCORE_&setcolorspace									/sep_tint AGMCORE_gget AGMCORE_&setcolor 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{ 							currentoverprint not Name (All) eq or Operator/imagemask eq and{								currentdict imageormask_sys 								}{								currentoverprint not									{ 									gsave  									knockout_unitsq 									grestore									}if								currentdict consumeimagedata 		 					}ifelse 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}ifelse	end	end}def/decode_image_sample{	4 1 roll exch dup 5 1 roll	sub 2 4 -1 roll exp 1 sub div mul add} bdf/colorSpaceElemCnt{	currentcolorspace 0 get dup /DeviceCMYK eq {		pop 4	}	{		/DeviceRGB eq {			pop 3		}{			1		} ifelse	} ifelse} bdf/devn_sep_datasource{	1 dict begin	/dataSource xdf	[		0 1 dataSource length 1 sub {			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx		} for	] cvx bind	end} bdf		/devn_alt_datasource{	11 dict begin	/srcDataStrs xdf	/dstDataStr xdf	/convProc xdf	/origcolorSpaceElemCnt xdf	/origMultipleDataSources xdf	/origBitsPerComponent xdf	/origDecode xdf	/origDataSource xdf	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def	/samplesNeedDecoding		0 0 1 origDecode length 1 sub {			origDecode exch get add		} for		origDecode length 2 div div		dup 1 eq {			/decodeDivisor 2 origBitsPerComponent exp 1 sub def		} if		2 origBitsPerComponent exp 1 sub ne	def	[		0 1 dsCnt 1 sub [			currentdict /origMultipleDataSources get {				dup currentdict /origDataSource get exch get dup type			}{				currentdict /origDataSource get dup type			} ifelse			dup /filetype eq {				pop currentdict /srcDataStrs get 3 -1 /roll cvx /get cvx /readstring cvx /pop cvx			}{				/stringtype ne {					/exec cvx				} if				currentdict /srcDataStrs get /exch cvx 3 -1 /roll cvx /xpt cvx			} ifelse		] cvx /for cvx		currentdict /srcDataStrs get 0 /get cvx /length cvx 0 /ne cvx [			0 1 Width 1 sub [				Adobe_AGM_Utils /AGMUTIL_ndx /xddf cvx				currentdict /origMultipleDataSources get {					0 1 dsCnt 1 sub [						Adobe_AGM_Utils /AGMUTIL_ndx1 /xddf cvx						currentdict /srcDataStrs get /AGMUTIL_ndx1 /load cvx /get cvx /AGMUTIL_ndx /load cvx /get cvx						samplesNeedDecoding {							currentdict /decodeDivisor known {								currentdict /decodeDivisor get /div cvx							}{								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvxs								BitsPerComponent /decode_image_sample load /exec cvx							} ifelse						} if					] cvx /for cvx				}{					Adobe_AGM_Utils /AGMUTIL_ndx1 0 /ddf cvx					currentdict /srcDataStrs get 0 /get cvx /AGMUTIL_ndx /load cvx							currentdict /origDecode get length 2 idiv dup 3 1 /roll cvx /mul cvx /exch cvx /getinterval cvx 					[						samplesNeedDecoding {							currentdict /decodeDivisor known {								currentdict /decodeDivisor get /div cvx							}{								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvx								BitsPerComponent /decode_image_sample load /exec cvx								Adobe_AGM_Utils /AGMUTIL_ndx1 /AGMUTIL_ndx1 /load cvx 1 /add cvx /ddf cvx							} ifelse						} if					] cvx /forall cvx				} ifelse				currentdict /convProc get /exec cvx				currentdict /origcolorSpaceElemCnt get 1 sub -1 0 [					currentdict /dstDataStr get 3 1 /roll cvx /AGMUTIL_ndx /load cvx currentdict /origcolorSpaceElemCnt get /mul cvx /add cvx /exch cvx					currentdict /convProc get /filter_indexed_devn load ne {						255 /mul cvx /cvi cvx 					} if					/put cvx 				] cvx /for cvx			] cvx /for cvx			currentdict /dstDataStr get		] cvx /if cvx	] cvx bind	end} bdf/devn_imageormask{ 	/devicen_colorspace_dict AGMCORE_gget begin	/MappedCSA CSA map_csa def	2 dict begin	dup dup	/dstDataStr exch /Width get colorSpaceElemCnt mul string def	/srcDataStrs [ 3 -1 roll begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi string		} repeat		end ] def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_producing_seps not {			level3 not {				Operator /imagemask ne {					/DataSource [						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 						dstDataStr srcDataStrs devn_alt_datasource /exec cvx						] cvx 0 () /SubFileDecode filter def					/MultipleDataSources false def					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				} if			}if			currentdict imageormask 		}{			AGMCORE_host_sep{				Names convert_to_process {					CSA map_csa 0 get /DeviceCMYK eq {						/DataSource							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 							[							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 							dstDataStr srcDataStrs devn_alt_datasource /exec cvx							] cvx						filter_cmyk 0 () /SubFileDecode filter def						/MultipleDataSources false def						/Decode [1 0] def						/DeviceGray setcolorspace			 			currentdict imageormask_sys 					}{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate {							/DataSource [								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse								CSA map_csa 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get								dstDataStr srcDataStrs devn_alt_datasource /exec cvx								] cvx 0 () /SubFileDecode filter def							/MultipleDataSources false def							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				 			currentdict imageormask_sys				 		}						{	 						gsave 	 						knockout_unitsq	 						grestore							currentdict consumeimagedata 						} ifelse 					} ifelse				}				{						/devicen_colorspace_dict AGMCORE_gget /names_index known {	 					Operator/imagemask ne{	 						MultipleDataSources {		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def								/MultipleDataSources false def	 						}{								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def	 						} ifelse							invert_image_samples	 					} if			 			currentdict imageormask_sys	 				}{	 					currentoverprint not Operator/imagemask eq and{							currentdict imageormask_sys 							}{							currentoverprint not								{	 							gsave 	 							knockout_unitsq	 							grestore								}if							currentdict consumeimagedata 			 			}ifelse	 				}ifelse	 			}ifelse 			}{				currentdict imageormask			}ifelse		}ifelse		cleartomark restore	}ifelse	end	end	end}def/imageormask_l2_overprint{	currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 						currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace				AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 						mark exch						dup	dup dup						AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse			imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark  		currentdict 		AGMCORE_host_sep{			Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {					/CSA get map_csa				}{					/CSD get get_csd /Names get				} ifelse				overprint_plate not{					knockout_unitsq				}if			}{				Indexed_DeviceN {					/devicen_colorspace_dict AGMCORE_gget /names_index known {			 			indexed_image_lev2_sep					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					} ifelse				}{		 			AGMCORE_is_cmyk_sep{						Operator /imagemask eq{							imageormask_sys						}{							level2{								indexed_image_lev2_sep							}{								indexed_image_lev1_sep							}ifelse						}ifelse					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					}ifelse				}ifelse			}ifelse 		}{			level2{				Indexed_DeviceN {					/indexed_colorspace_dict AGMCORE_gget begin					CSD get_csd begin				}{					/indexed_colorspace_dict AGMCORE_gget begin					CSA map_csa 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]						setcolorspace					} if					end				} ifelse				imageormask				Indexed_DeviceN {					end					end				} if			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin		Indexed_DeviceN not {			currentcolorspace 			dup 1 /DeviceGray put			dup 3			currentcolorspace 2 get 1 add string			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub			{			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put			}for 			put	setcolorspace		} if		currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			use_mask {				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse			}{				AGMIMG_&image			}ifelse		}ifelse	end end}def  /OPIimage  {  	dup type /dicttype ne{  		10 dict begin  			/DataSource xdf  			/ImageMatrix xdf  			/BitsPerComponent xdf  			/Height xdf  			/Width xdf  			/ImageType 1 def  			/Decode [0 1 def]  			currentdict  		end  	}if  	dup begin  		/NComponents 1 cdndf  		/MultipleDataSources false cdndf  		/SkipImageProc {false} cdndf  		/HostSepColorImage false cdndf  		/Decode [  				0   				currentcolorspace 0 get /Indexed eq{  					2 BitsPerComponent exp 1 sub  				}{  					1  				}ifelse  		] cdndf  		/Operator /image cdndf  	end  	/sep_colorspace_dict AGMCORE_gget null eq{  		imageormask  	}{  		gsave  		dup begin invert_image_samples end  		sep_imageormask  		grestore  	}ifelse  }def/cachemask_level2{	3 dict begin	/LZWEncode filter /WriteFilter xdf	/readBuffer 256 string def	/ReadFilter		currentfile		0 (%EndMask) /SubFileDecode filter		/ASCII85Decode filter		/RunLengthDecode filter	def	{		ReadFilter readBuffer readstring exch		WriteFilter exch writestring		not {exit} if	}loop	WriteFilter closefile	end}def/cachemask_level3{	currentfile	<<		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]		/Intent 1	>>	/ReusableStreamDecode filter}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		bdict			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		edict		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		dup 4 get map_alias{			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}def/snap_to_device{	6 dict begin	matrix currentmatrix	dup 0 get 0 eq 1 index 3 get 0 eq and	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop	{		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def		0 0 transform		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def		1 1 transform		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def					[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat	}{	}ifelse	end} deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse					Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 						currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{					MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop				Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 				{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{				MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResourcecurrentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetupAdobe_AGM_Utils begin2 2010 Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get execcurrentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: (drm [Converted].eps) 1%%EndPageComments%%BeginPageSetup/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?><x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 3.0-29, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>

 <rdf:Description rdf:about=''
  xmlns:pdf='http://ns.adobe.com/pdf/1.3/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:tiff='http://ns.adobe.com/tiff/1.0/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:xap='http://ns.adobe.com/xap/1.0/'
  xmlns:xapGImg='http://ns.adobe.com/xap/1.0/g/img/'>
  <xap:CreateDate>2007-02-28T01:06:59Z</xap:CreateDate>
  <xap:ModifyDate>2007-02-28T01:06:59Z</xap:ModifyDate>
  <xap:CreatorTool>Illustrator</xap:CreatorTool>
  <xap:Thumbnails>
   <rdf:Alt>
    <rdf:li rdf:parseType='Resource'>
     <xapGImg:format>JPEG</xapGImg:format>
     <xapGImg:width>256</xapGImg:width>
     <xapGImg:height>180</xapGImg:height>
     <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAtAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qkmueX4NU1PS5ZbSB&#xA;47SYXM1y6qZgbch4I0Yjmv74iQkH9mn7WKsZ8sy+ZfMmr+aZJfMV7p9vpOszabZ2VnFp/pCGK2gc&#xA;FjcWtxKXLSsSedPYYqyH/DOtf9TZqv8AyK0r/shxV3+Gda/6mzVf+RWlf9kOKu/wzrX/AFNmq/8A&#xA;IrSv+yHFXf4Z1r/qbNV/5FaV/wBkOKu/wzrX/U2ar/yK0r/shxV3+Gda/wCps1X/AJFaV/2Q4q7/&#xA;AAzrX/U2ar/yK0r/ALIcVd/hnWv+ps1X/kVpX/ZDirv8M61/1Nmq/wDIrSv+yHFXf4Z1r/qbNV/5&#xA;FaV/2Q4q7/DOtf8AU2ar/wAitK/7IcVd/hnWv+ps1X/kVpX/AGQ4q7/DOtf9TZqv/IrSv+yHFXf4&#xA;Z1r/AKmzVf8AkVpX/ZDirv8ADOtf9TZqv/IrSv8AshxV3+Gda/6mzVf+RWlf9kOKu/wzrX/U2ar/&#xA;AMitK/7IcVd/hnWv+ps1X/kVpX/ZDirv8M61/wBTZqv/ACK0r/shxV3+Gda/6mzVf+RWlf8AZDir&#xA;v8M61/1Nmq/8itK/7IcVd/hnWv8AqbNV/wCRWlf9kOKu/wAM61/1Nmq/8itK/wCyHFXf4Z1r/qbN&#xA;V/5FaV/2Q4q7/DOtf9TZqv8AyK0r/shxV3+Gda/6mzVf+RWlf9kOKu/wzrX/AFNmq/8AIrSv+yHF&#xA;Xf4Z1r/qbNV/5FaV/wBkOKqvk68vrrRGa9uGu7iC91C0Ny6xq7paX01vGzCJY05cIlrxUCvbFU7x&#xA;V2KsD/Kz/e7z3/4FF1/1CWmKs8xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2Ksf8j/APHFuf8Atq6x/wB1W5xVkGKoG61mwtb2CxlaQ3NxQokcUsoALBA0&#xA;jRqyxqWNAXIH3HFWI/lZ/vd57/8AAouv+oS0xVnmKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVj/kf/ji3P8A21dY/wC6rc4qyDFWP635RttT1mz1QvGk&#xA;1s0BdnhWWTjbT/WEEEhKmEs1Vc0PJdqDrirG/wArtPsG1rzzfNbRNep5mu0S6KKZVX6pa/CHpyA3&#xA;O1cVeiYq7FXYq7FUNDqNhNcPbRXEclxHXnErAsOJo2w/lOx8MkYkC22WGcY8RBESici1JNH5v0CW&#xA;3jninkkEzIkcSW9w0zepG0qEQiP1eLJGzBuPE0O+Kq0XmXQpoDcRXsbwiW3ty4qR6t4sTW6jbf1B&#xA;cRkfP54qmeKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVbIzLGzIvJwCVXpU02GITEC90p0fULi4m&#xA;jU3H1pHg9W4Pp+n6MtVpFSlVryb4Hqy8dzvls4gObqcMYg7cPqob3Y7/ANo2N7JxlTguxV2KuxVj&#xA;/kf/AI4tz/21dY/7qtzirIMVdirA/wArP97vPf8A4FF1/wBQlpirPMVdirsVdiqWWukSxSWwknV7&#xA;ayZmtY1j4OCysg5vyYNRHP7Iqdzlhn9rlZNSCDQ9Uue/x2FbbjvKZ5W4rDY/y+lmtreHUdUd/q0M&#xA;Fsklisti/pW1tcQLR0mdw5N4zFuVNgOPU4qpR/loq6lbXzX6j0Xsp5LeK3EUTTafHFFCyKHPBQgn&#xA;HHf+8X/ffxKs3xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVBWOpxXd1f26hQbKYQ1DBi4MMUv&#xA;Knahl4/RiqIurq1tLeS5upkt7aJS0s0rBERR1LMxAA+eKpdY6veahdI1pZMmljl6l7c8oWk2IX0I&#xA;SvMjl1aTiKbryBriqbYq7FWP+R/+OLc/9tXWP+6rc4qncd1bSyzQxSpJNbkLPGrAtGzKHUOBupKk&#xA;EV7YqlOq+YbjT9XtLRrFmsZzEkmofvSqSTy+lGgWOKUE8uNSzKByHapCrFvyuv7Vda882TPS5fzN&#xA;dusdDuv1S13rSnbxxV6JirsVdiqhfXkNlZXF5OSILaN5pSBU8I1LNQfIYq8W/J7/AJyatvzE85T+&#xA;XH0JtM5QyXFjcCcTcliIqsq8I+JKmuxPh74q9wxVg+h+ePMeqtbJaaKtxz+oS3sheWzENteiUySK&#xA;tzGpm9H0hT09nqQDVTiqYv55sLqKWPSSk15HLBFwkZeA9e5jt+R9Nmb4fUriqX3Hn7UYNRlsGs4z&#xA;c20kMEip67xyzTyukaJOkbRRclRf70j4zw6jFUV5d89rq+rRaY0Cw3KW95cagvMkwehcxw29agbT&#xA;xu0g8APfFVOLzVqDatZ3VxItvoU9lqephBGWka1tGtEgdj9oF1neWgWtCqkVBxVkel6qmoLcf6PL&#xA;azWsvoTwThA6uY0lG8bSIQUlU7N+OKoDStTv5fNWt6bPIslrZxWc1qAoVl+setzUkH4v7oUxVPcV&#xA;dirsVdirsVdirsVdirsVUby7hs7Oe7nJENvG8spAqeKKWagHXYYq+dPyd/PzSvM3n/V9I0Tyy1jq&#xA;HmCRrq1nnvOUP7iOriRFi/dAqHlonKrsRWh5BV7za+XUa4jvdXnOp38TB4S68LeBh3t7erKhG9HY&#xA;tJuRzptiqcYq7FXYqx/yP/xxbn/tq6x/3VbnFWPxWE2ueao7+9snglUA2GoxS6gjw2zW6yKsX+i2&#xA;0ILSn4xK5PVCD9nFWZXmi6beXcV3cRs80JQrSSRUYxP6kfqRqwST03+JOYPE7jFWI/lZ/vd57/8A&#xA;Aouv+oS0xVnmKuxV2KtEBgQRUHYg9CMVYl5U/KX8uvKWrXWr+XdDg0/UbwMs06NI1FZuTJGsjOsS&#xA;kgfDGFGKsuxVA6Zoek6WGGn2qW/NUjYqNykVfTSpqeK8jxHQVPjiqve2NpfWzW13GJYGKsyNWlUY&#xA;Op28GUEYqh4dC0aG3a2is4VgdVVowgoQrtKtfEiSRnr15GvXFUNc+UtAmjuUW0jgN6oivJIVVXlh&#xA;qnOJzQ1SRYwjd+PQjY4qq3ug2l5qtpqMrvW1trqza1pG0E0N4YjIsqujMaG3WnFh3rUYqlN/+X2l&#xA;TyKbSafTogS7w2k08KvIxHKSQRyIHYqirVq/CKdNsVTTSvL8en6jeagbqe6ur6O3im9bhxVbYOE4&#xA;cVVt/UYnkzHFU1xV2KuxV2KuxV2KuxV2KpXqHmC0tLj6lCkl9qZAYWFsA0gU1o0hJVIVNDRpGUHo&#xA;KnbFUN+hNQ1QctfmU25/6U9qzfVqeE8hCSXHeoIWMg0KHriqX+Vfyn/Lvynq91rHl7Q4NP1G8UpN&#xA;PGZGojEMVjV2ZYlJAqIwBirLcVdirsVdirH/ACP/AMcW5/7ausf91W5xVJbOHT5vzKv5Bc1u7aeM&#xA;/V3lgDKTp6q3pRf3xSRZFLn+ZB2XdVnWKsD/ACs/3u89/wDgUXX/AFCWmKs8xV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxVC3eo29tIsbrJJIytJwiRpCEWgLEKD47dz2rkhElux4JTFigPM1+PxavFLHLE&#xA;ksbB45FDI46FWFQRkSGqUSDR5hfih2KuxV2KoLU9Y07TIlkvJeBkJWCFVaSaVgK8IokDSSNQV4qp&#xA;OKpf6XmDVj++LaLpx/3TGytfSiu4eRS0cCnwTk9DUOh2xVM9O0yw023+r2UCwRFi7hd2d2+07sas&#xA;7t+0zEk9ziqKxV2KuxV2KuxV2Ksf8j/8cW5/7ausf91W5xVJ9OuNSuPPt1PFdXraZJJEotZba+ij&#xA;iMNo4ZP3wW3CO8qvzHxFgBxP2sVTXzHqfmO21rSINPspX0x5l/SF2noNXmSiw8ZHVwBu7uF7KBWr&#xA;UVSD8r3v/wBM+d0WGI2R8y3ZeYysJQ31S22EXplSOm/qD5Yq9CxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxVBX1nFJKsv1l7SVh6PqRsilw24X41YVr9mm47ZISpux5uEUQJDnv+AioYYoIY4Yl4xRKEjU&#xA;dlUUA+7ATbXKRkSTzK/AxdiqldXVraW8lzdTJb20SlpZpWCIijqWZiAB88VfKl7+cf52XX5+/wCH&#xA;dOaaHR5tRFta6a1ovA6aZOAvKyRiTeP99zJoP9XbFX0/pmhWNhI1wOdzqEqhJ9QuD6lw468eVAES&#xA;u/poFQHooxVMcVdirsVdirsVdirsVdirH/I//HFuf+2rrH/dVucVQumWOrf4rutQntZo7S5fnH66&#xA;xExBYEi4LJHeyDizR8qeh1Y/PFWVYqwT8rv97fPX/gT3f/ULa4qzvFXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FUp12rT6RCOst8tD2HpQyzH8IqYqm2KuxVJJfMT3Uj22gwDUZkJSW7LcLKJgSCGnAbmyl&#xA;SCkQYg7NwrXFV9r5dRriO91ec6nfxMHhLrwt4GHe3t6sqEb0di0m5HOm2KqLa1rP+Mk0oWI/RH1U&#xA;u95yHqeuTVSF5UEIUFCftcyNuIriqfYq7FXYq7FXYq7FXYq7FXYqx/yP/wAcW5/7ausf91W5xVqP&#xA;zRet5suNCbS5VgiaL09Q/elHjkgkleT+6EYVJEWL+8NS3bpirIcVYJ+V3+9vnr/wJ7v/AKhbXFWd&#xA;4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqx/zNot9qGo6HcWup/o9bK6Z7iI7+tFJCyMsYqKS/sq37&#xA;Ks1N6YqjNQ8wWlpcfUoUkvtTIDCwtgGkCmtGkJKpCpoaNIyg9BU7Yqhv0JqGqfFr8ym3P/SntWYW&#xA;1PCeQhJLjvUELGQaFD1xVOoooookiiRY4o1CxxqAqqqigAA2AAxVfiqAFnP+nTeUAgFqIQa7lzIW&#xA;O3sBiqPxV2KuxV2KuxV2KuxV2KuxVj/kf/ji3P8A21dY/wC6rc4qkmkXlhe+dfri3tmbpwIprKwv&#xA;S/74Wqs/rxxQJ9Y4fZSSWTiopRQ22Kpr5q0ebU9Q0kx6f6r2N5bXcWoA25WMRyj145FlrJQxbp6Y&#xA;Px0Pw8QcVSP8r7aY6z53uBdyrEvmW7U2gEXpMfqlt8RJQy137PT2xV6FirsVdirsVdirsVdirsVd&#xA;irsVdirsVQWp6xp2mRLJeS8DISsEKq0k0rAV4RRIGkkagrxVScVfNX5/fk9+b/n3ztYa7otpTTVh&#xA;jgtrea7hiksyjEtK68uK82PL90zt4+AVfRvlfRF0TQbLTiUkuYYYxe3KrQz3AQLLO5PxM8jDkWbc&#xA;98VTXFXYq7FUki0i4XUlnMEIZbiSZ78MfWeN+XGIjjXbkFoWIoBTfYWmYpz5amJx1Z+kDh6A7b8/&#xA;jyuz8zvKnAdirsVdirsVdirsVdirsVY/5H/44tz/ANtXWP8Auq3OKpXYvcXHnaSWK5uVtzN65ikG&#xA;oxL6f1MQeg0Esa2oHqoZhJyqTsB3xVmmKsE/K7/e3z1/4E93/wBQtrirO8VdirsVdirsVdirsVdi&#xA;rsVdiqldXVraW8lzdTJb20SlpZpWCIijqWZiAB88VSf9J6xqp46RD9Tsjs2qXkbBmFaH6vbNxduh&#xA;o8nFejASLiqM0zQrGwka4HO51CVQk+oXB9S4cdePKgCJXf00CoD0UYqmOKuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2Ksf8j/8AHFuf+2rrH/dVucVYf5SvtI1vz3Lq8HppdXSwXksS3lrLHtZtFCyK&#xA;sS3LTLFKyyoTwXrybYYq9Bvdc02yu4bS4eQTTlFThDLIimVxHH6kiIyR83PFeZFe3TFWJ/ld/vb5&#xA;6/8AAnu/+oW1xVneKuxV2Koa/u3toVZEEkkkiRRqzcF5O1BVqNT7slEW24cYmdzQAJ7+TVhePcCd&#xA;JY1jmt5fSlVH9Ra8FcUYhD9lx1A3xkKTmxiNEGxIX3d48+5FZFpdirsVYz57/Mfyf5E06HUPM1/9&#xA;TguZPRtlVHlkkcCpCpGrNRRuT0H0jFVulee7HzJp0F55QT9L29yodL9w8FpGDUfHI682cUIMaKzA&#xA;7NwrXFUwtfLqNcR3urznU7+Jg8JdeFvAw729vVlQjejsWk3I502xVOMVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVY/5H/wCOLc/9tXWP+6rc4qyDFUl1XQ7+/wBZ0+8+uoun2JEh054WdZJu&#xA;W0pdZY/iRf7sMrKrfFQsF4qsX/K/T7BtZ873zW0TXqeZbtEuiimUL9UtvhD05AbnauKvQsVdirsV&#xA;WTQwzxNFNGssTbNG4DKfmDthBplGRibBoobSJbKfS7W4sYhDaXESTwxhRHRZVDiqjYH4t8SSeazn&#xA;KRuRsozAxdiqV6h5gtLS4+pQpJfamQGFhbANIFNaNISVSFTQ0aRlB6Cp2xV5p+cX5Ln8ydJtbrzH&#xA;rkWgz6QZZLV4IxNawRTcPWEzytA0pPpL8dYwP5T1KrOfy48iad5E8n2HlnT5pLiCzDlriWgeSSVz&#xA;I7EDZfibYDoMVZNirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVY/wCR/wDji3P/AG1d&#xA;Y/7qtzirIMVdirBPyu/3t89f+BPd/wDULa4qzvFXYq7FVG8uktLSa6kV3jgRpHWNS7lVFTxUbsad&#xA;hucVSbyDqVrqPkzRrm1JaA2kMaOQQG9NAjMteq8lND364qmWp6xp2mRLJeS8DISsEKq0k0rAV4RR&#xA;IGkkagrxVScVS/0vMGrH98W0XTj/ALpjZWvpRXcPIpaOBT4JyehqHQ7YqmenaZYabb/V7KBYIixd&#xA;wu7O7fad2NWd2/aZiSe5xVA+btCttd8u32mXIRknicKspIi9QKfSMlK/CsnFvmMUgXyTKzt4bazg&#xA;t4SzQwxpHGzs0jFUUAFnYlmNB1JqcUK2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;j/kf/ji3P/bV1j/uq3OKsgxVAX+pTWuoaZarb+pFfyyQyXHMKIikLzL8NCW5emR2p49AVWGflfew&#xA;rrPnezKy+q/mW7cMIZTFT6pbdZgvpA7dC1cVehYq7FXYqxL80/zDs/y/8l3nmW5tXvfq7RxQWiNw&#xA;MksrBVBejcF7k0/HFWH/AJOfnFf/AJn6NcrpWmQ6DLpbpDfO7/WESOQH0vq0YWLkSqMPjoE22fpi&#xA;r0zTNCsbCRrgc7nUJVCT6hcH1Lhx148qAIld/TQKgPRRiqY4q7FUDqtlJdJblFjkNvMJjDNURvRW&#xA;WhIDUoW5D4TuBk4SpyNPlECbsWKscxy/s9xXaVZvaWnpOEVmeSQxx19NPUctxSoGwr4D5DpgnKyj&#xA;UZROVjuA35mh1RmRaHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqx/yP/wAcW5/7ausf&#xA;91W5xVkGKqctvDK8LyIGeBzJCT+y5RkqP9i7D6cVYR+V3+9vnr/wJ7v/AKhbXFWd4q7FUkl8xPdS&#xA;PbaDANRmQlJbstwsomBIIacBubKVIKRBiDs3CtcVQmo+Q9I16ymtvNgGvLcLxeCZTHax1p/cQKx9&#xA;Mg9HLNIK050xVEeTvI3lPyZpZ0vyzpyadYtIZZI0Z3Z5CACzySs7saAD4mxVPsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVY/5H/44tz/ANtXWP8Auq3OKsgxV2KsE/K7&#xA;/e3z1/4E93/1C2uKsn1DzBaWlx9ShSS+1MgMLC2AaQKa0aQkqkKmho0jKD0FTtiqG/Qmoap8WvzK&#xA;bc/9Ke1ZhbU8J5CEkuO9QQsZBoUPXFU6iiiiiSKJFjijULHGoCqqqKAADYADFV+KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ksf8AI/8Axxbn/tq6x/3VbnFWQYqx&#xA;bX9Wv7fzBb20d61sjGx+rWgSNhdma7Md2PjVnPowBWPpleNeTbdFWMw+VPzP0rWNfXSv0ZNoetap&#xA;Lqhdr64s72ksMEXo8lsrtI1/ctUp8RqCrIRiqe6cvn/Tbf6vZeWdCgiLF3C6zdlndvtO7HSyzu37&#xA;TMST3OKor9I/md/1YNE/7jV3/wB4rFXfpH8zv+rBon/cau/+8Virv0j+Z3/Vg0T/ALjV3/3isVQ+&#xA;n3P5qW1hbW8+jaNczQxJHLcNrN2DIyqAzn/cWd2Ir1xVEfpH8zv+rBon/cau/wDvFYq79I/md/1Y&#xA;NE/7jV3/AN4rFXfpH8zv+rBon/cau/8AvFYqh9QufzUubC5t4NG0a2mmieOK4XWbsmNmUhXA/RY3&#xA;UmvXFUR+kfzO/wCrBon/AHGrv/vFYq79I/md/wBWDRP+41d/94rFXfpH8zv+rBon/cau/wDvFYq7&#xA;9I/md/1YNE/7jV3/AN4rFUPc3P5qSzWrx6No0SQSmSZBrN3SVTE6cD/uLGwZ1f8A2OKoj9I/md/1&#xA;YNE/7jV3/wB4rFXfpH8zv+rBon/cau/+8Virv0j+Z3/Vg0T/ALjV3/3isVd+kfzO/wCrBon/AHGr&#xA;v/vFYqh3ufzUa/huBo2jLDHFLG9v+mbujtI0ZVyf0X1QRsOn7WKoj9I/md/1YNE/7jV3/wB4rFXf&#xA;pH8zv+rBon/cau/+8Virv0j+Z3/Vg0T/ALjV3/3isVd+kfzO/wCrBon/AHGrv/vFYqh7a5/NSKa6&#xA;eTRtGlSeUSQodZu6RKIkTgP9xZ2LIz/7LFUR+kfzO/6sGif9xq7/AO8Virv0j+Z3/Vg0T/uNXf8A&#xA;3isVd+kfzO/6sGif9xq7/wC8Virv0j+Z3/Vg0T/uNXf/AHisVRnk3S9V03Q/Q1UQrfzXl/eTR20j&#xA;zRIL29mukRZJI4GfgkwWpRdx0xVPMVdirFvJl9qly84vJriYi1tJLhbiP0xFeuZhdRJ8CbJwT4dw&#xA;NvHFWU4q7FXYqxnzzqE9raW0Vrd3Fre3TPFavCnKJZONRNcNwkpHF9rjtzNF3xVZol/qUvmOaGaa&#xA;4daX31mCSIrFF6V1GllwYov24GZvtHl17YqynFXYq7FWL+Yb7zTD5i0tNPtJH0sGT13j9Jllla3n&#xA;KrLydHSONkQ/D9ot240ZVU8m3t5cxTepcXF3brHbn6xdxejJ9ZeMm4QKUi+FfgP2dmLL2oFWSYq7&#xA;FXYq8+uNY8zLq2qRyvcpCszJ+4RnW3tVurZPUCmDiWa3kkkVldqUaoNOMarK/LFxcz6Oklw8kjet&#xA;crFLMvCR4EuJFgYii/aiVTWm/XFU2xV2KrZHKRs4UuVBPBftGg6CtN8VeX6LrHmn9HR/pnUbpYWE&#xA;bz31lBJIyytaSEx0kg5q3qpyZOHEHgtfiKlV6Tpkl5JptpJeoI7x4Y2uYx0WUqC6ihPRq4qicVdi&#xA;qWaz9eWXTntZpI1F2i3McaqwkiYMCHLKxCjrVSN+9NsVYk2qa79YCPeXq27TONbkWAA2YW6Kwrb/&#xA;ALvdJF+B2HKkYElQfiZVlvlue7n0S1lumd5WVuMkq+nK8YYiKSRKLxd4+LMKChOKpnirsVSbUXvo&#xA;tZRxczRaedPu2lVI1dI5Y5IeEo+BnL8Xei1INPs4qw+XWNcbTGuoL6/WF472bTx6QknFxHHbi0gn&#xA;pFu0jGWT06U34k/Dir0nFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWM6V5wmvtfbS5LH0Iy14&#xA;kVxWf4vqU/ok/vLeKFuXWiSsR4dSFUdqeuixvZzKUi03TbJ9Q1W4cFmWP4vTEYU/8UyMxoegFPiq&#xA;FVlz5gnN7ZwadDDc29xeSWM9w8rxmOSKKSSTigicScfSZT8a/FtiqL0K/nvtMSa5VVuUea3uRHX0&#xA;zLbStBIyVqeDPGStd6dcVTDFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYqx/S/8M/piT6p6313nc09X616Pqer/pPoet+45epXl6Xv74qlnnv9B+sP0j9Y&#xA;+r/Vv9zHo8fQ+ofWIuX1rlvxrypx+Lh6tO+Kozy3/gr6ov6B4cfrs3p19Xn9e9J/Wr63xc+Pqc69&#xA;+VfiriqZeV/qv6Ctfq/q0+P1/rHH1/rHqN9Y9bh8Hqetz58fh5Vptiqa4q7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq/wD/2Q==</xapGImg:image>
    </rdf:li>
   </rdf:Alt>
  </xap:Thumbnails>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:dc='http://purl.org/dc/elements/1.1/'>
  <dc:format>application/postscript</dc:format>
 </rdf:Description>

</rdf:RDF>
</x:xmpmeta>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                <?xpacket end='w'?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -251.419 translate[1 0 0 1 0 0 ]  concat% page clipgsavenewpathgsave % PSGState0 0 mo0 251.419 li359.048 251.419 li359.048 0 liclp[1 0 0 1 0 0 ] concat25.6128 219.97 mo25.6128 219.885 25.5474 219.829 25.4683 219.829 cv25.3887 219.829 25.3238 219.885 25.3238 219.97 cv25.3238 220.055 25.3887 220.112 25.4683 220.112 cv25.5474 220.112 25.6128 220.055 25.6128 219.97 cvfalse sop/0 [/DeviceCMYK] add_csa0 0 0 1 cmykef0.75 lw0 lc2 lj10 ml[] 0 dshtrue sadj25.4683 3.9751 mo349.46 3.9751 li349.46 219.97 li25.4683 219.97 li25.4683 3.9751 li@25.4683 3.39991 mo350.056 3.39991 li350.056 219.404 li26.0435 219.404 li26.0435 3.39991 li@25.4683 219.97 mo25.4683 215.237 li@25.1792 227.17 mo24.0992 227.454 li23.4527 228.559 li23.0928 230.204 li23.0928 231.281 li23.4527 232.924 li24.0992 234.03 li25.1792 234.371 li25.7574 234.371 li26.8375 234.03 li27.4839 232.924 li27.8438 231.281 li27.8438 230.204 li27.4839 228.559 li26.8375 227.454 li25.7574 227.17 li25.1792 227.17 li@25.4683 219.97 mo79.4683 219.97 li79.4683 215.237 li@73.9239 228.843 mo73.9239 228.559 li74.2837 227.823 li74.6436 227.454 li75.293 227.17 li76.6592 227.17 li77.3794 227.454 li77.7393 227.823 li78.0284 228.559 li78.0284 229.183 li77.7393 229.92 li77.0191 230.912 li73.6373 234.371 li78.3882 234.371 li@82.4927 227.17 mo81.4839 227.454 li80.8374 228.559 li80.4776 230.204 li80.4776 231.281 li80.8374 232.924 li81.4839 234.03 li82.4927 234.371 li83.2129 234.371 li84.2193 234.03 li84.939 232.924 li85.2286 231.281 li85.2286 230.204 li84.939 228.559 li84.2193 227.454 li83.2129 227.17 li82.4927 227.17 li@79.4683 219.97 mo133.469 219.97 li133.469 215.237 li@131.02 227.17 mo127.638 231.932 li132.749 231.932 li@131.02 227.17 mo131.02 234.371 li@136.494 227.17 mo135.484 227.454 li134.835 228.559 li134.475 230.204 li134.475 231.281 li134.835 232.924 li135.484 234.03 li136.494 234.371 li137.213 234.371 li138.22 234.03 li138.94 232.924 li139.229 231.281 li139.229 230.204 li138.94 228.559 li138.22 227.454 li137.213 227.17 li136.494 227.17 li@133.469 219.97 mo187.469 219.97 li187.469 215.237 li@186.029 228.191 mo185.74 227.454 li184.66 227.17 li184.013 227.17 li183.004 227.454 li182.285 228.559 li181.924 230.204 li181.924 231.932 li182.285 233.293 li183.004 234.03 li184.013 234.371 li184.374 234.371 li185.379 234.03 li186.029 233.293 li186.389 232.301 li186.389 231.932 li186.029 230.912 li185.379 230.204 li184.374 229.92 li184.013 229.92 li183.004 230.204 li182.285 230.912 li181.924 231.932 li@190.494 227.17 mo189.485 227.454 li188.835 228.559 li188.475 230.204 li188.475 231.281 li188.835 232.924 li189.485 234.03 li190.494 234.371 li191.213 234.371 li192.22 234.03 li192.94 232.924 li193.229 231.281 li193.229 230.204 li192.94 228.559 li192.22 227.454 li191.213 227.17 li190.494 227.17 li@187.469 219.97 mo241.46 219.97 li241.46 215.237 li@237.293 227.17 mo236.273 227.454 li235.933 228.191 li235.933 228.843 li236.273 229.551 li237.01 229.92 li238.371 230.204 li239.391 230.572 li240.043 231.281 li240.383 231.932 li240.383 232.924 li240.043 233.662 li239.731 234.03 li238.654 234.371 li237.293 234.371 li236.273 234.03 li235.933 233.662 li235.65 232.924 li235.65 231.932 li235.933 231.281 li236.642 230.572 li237.663 230.204 li239.023 229.92 li239.731 229.551 li240.043 228.843 li240.043 228.191 li239.731 227.454 li238.654 227.17 li237.293 227.17 li@244.494 227.17 mo243.473 227.454 li242.849 228.559 li242.481 230.204 li242.481 231.281 li242.849 232.924 li243.473 234.03 li244.494 234.371 li245.203 234.371 li246.223 234.03 li246.931 232.924 li247.244 231.281 li247.244 230.204 li246.931 228.559 li246.223 227.454 li245.203 227.17 li244.494 227.17 li@241.46 219.97 mo295.46 219.97 li295.46 215.237 li@287.183 228.559 mo287.92 228.191 li288.913 227.17 li288.913 234.371 li@295.121 227.17 mo294.043 227.454 li293.391 228.559 li293.023 230.204 li293.023 231.281 li293.391 232.924 li294.043 234.03 li295.121 234.371 li295.744 234.371 li296.85 234.03 li297.473 232.924 li297.841 231.281 li297.841 230.204 li297.473 228.559 li296.85 227.454 li295.744 227.17 li295.121 227.17 li@301.952 227.17 mo300.931 227.454 li300.223 228.559 li299.854 230.204 li299.854 231.281 li300.223 232.924 li300.931 234.03 li301.952 234.371 li302.661 234.371 li303.681 234.03 li304.334 232.924 li304.673 231.281 li304.673 230.204 li304.334 228.559 li303.681 227.454 li302.661 227.17 li301.952 227.17 li@295.46 219.97 mo349.46 219.97 li349.46 215.237 li@341.183 228.559 mo341.92 228.191 li342.913 227.17 li342.913 234.371 li@347.391 228.843 mo347.391 228.559 li347.732 227.823 li348.043 227.454 li348.752 227.17 li350.113 227.17 li350.85 227.454 li351.133 227.823 li351.473 228.559 li351.473 229.183 li351.133 229.92 li350.481 230.912 li347.023 234.371 li351.842 234.371 li@355.952 227.17 mo354.932 227.454 li354.223 228.559 li353.854 230.204 li353.854 231.281 li354.223 232.924 li354.932 234.03 li355.952 234.371 li356.661 234.371 li357.681 234.03 li358.334 232.924 li358.673 231.281 li358.673 230.204 li358.334 228.559 li357.681 227.454 li356.661 227.17 li355.952 227.17 li@349.46 219.97 mo349.46 219.404 li25.4683 219.404 li@25.4683 219.97 mo30.2193 219.97 li@18.1236 216.371 mo17.1172 216.739 li16.3975 217.816 li16.1084 219.46 li16.1084 220.481 li16.3975 222.125 li17.1172 223.23 li18.1236 223.571 li18.8438 223.571 li19.8526 223.23 li20.4991 222.125 li20.8589 220.481 li20.8589 219.46 li20.4991 217.816 li19.8526 216.739 li18.8438 216.371 li18.1236 216.371 li@25.4683 219.97 mo25.4683 189.158 li30.2193 189.158 li@17.1172 186.918 mo17.7637 186.579 li18.8438 185.558 li18.8438 192.757 li@25.4683 189.158 mo25.4683 158.26 li30.2193 158.26 li@16.3975 156.389 mo16.3975 156.049 li16.7574 155.397 li17.1172 155.029 li17.7637 154.66 li19.1329 154.66 li19.8526 155.029 li20.2129 155.397 li20.4991 156.049 li20.4991 156.757 li20.2129 157.41 li19.4927 158.487 li16.1084 161.86 li20.8589 161.86 li@25.4683 158.26 mo25.4683 127.448 li30.2193 127.448 li@16.7574 123.847 mo20.4991 123.847 li18.4839 126.597 li19.4927 126.597 li20.2129 126.965 li20.4991 127.249 li20.8589 128.326 li20.8589 128.978 li20.4991 129.97 li19.8526 130.708 li18.8438 131.047 li17.7637 131.047 li16.7574 130.708 li16.3975 130.338 li16.1084 129.687 li@25.4683 127.448 mo25.4683 96.5777 li30.2193 96.5777 li@19.4927 92.9776 mo16.1084 97.7964 li21.2193 97.7964 li@19.4927 92.9776 mo19.4927 100.178 li@25.4683 96.5777 mo25.4683 65.751 li30.2193 65.751 li@20.2129 62.1509 mo16.7574 62.1509 li16.3975 65.1753 li16.7574 64.8892 li17.7637 64.5289 li18.8438 64.5289 li19.8526 64.8892 li20.4991 65.5352 li20.8589 66.6153 li20.8589 67.2647 li20.4991 68.2706 li19.8526 68.9908 li18.8438 69.3506 li17.7637 69.3506 li16.7574 68.9908 li16.3975 68.6309 li16.1084 67.9844 li@25.4683 65.751 mo25.4683 34.8643 li30.2193 34.8643 li@20.4991 32.2706 mo20.2129 31.6246 li19.1329 31.2647 li18.4839 31.2647 li17.4776 31.6246 li16.7574 32.6309 li16.3975 34.3599 li16.3975 36.0889 li16.7574 37.4551 li17.4776 38.1045 li18.4839 38.4644 li18.8438 38.4644 li19.8526 38.1045 li20.4991 37.4551 li20.8589 36.375 li20.8589 36.0889 li20.4991 35.0088 li19.8526 34.3599 li18.8438 34 li18.4839 34 li17.4776 34.3599 li16.7574 35.0088 li16.3975 36.0889 li@25.4683 34.8643 mo25.4683 3.9751 li30.2193 3.9751 li@20.8589 0.375 mo17.4776 7.5752 li@16.1084 0.375 mo20.8589 0.375 li@25.4683 3.9751 mo24.8926 3.9751 li24.8926 219.97 li25.4683 3.9751 lief81.1236 69.8555 mo79.0376 68.7754 li78.0284 66.7598 li78.0284 64.671 li79.0376 62.6553 li81.1236 61.649 li83.1392 61.649 li85.2286 62.6553 li86.2374 64.671 li86.2374 66.7598 li85.2286 68.7754 li83.1392 69.8555 li81.1236 69.8555 lief79.0376 66.7598 mo79.0376 64.671 li79.0376 66.7598 lief80.044 67.7691 mo80.044 63.6646 li80.044 67.7691 lief81.1236 68.7754 mo81.1236 62.6553 li81.1236 68.7754 lief82.1329 68.7754 mo82.1329 62.6553 li82.1329 68.7754 lief83.1392 68.7754 mo83.1392 62.6553 li83.1392 68.7754 lief84.2193 67.7691 mo84.2193 63.6646 li84.2193 67.7691 lief85.2286 66.7598 mo85.2286 64.671 li85.2286 66.7598 lief78.3882 193.268 mo76.3731 192.248 li75.293 190.178 li75.293 188.166 li76.3731 186.068 li78.3882 185.047 li80.4776 185.047 li82.4927 186.068 li83.5728 188.166 li83.5728 190.178 li82.4927 192.248 li80.4776 193.268 li78.3882 193.268 lief76.3731 190.178 mo76.3731 188.166 li76.3731 190.178 lief77.3794 191.17 mo77.3794 187.06 li77.3794 191.17 lief78.3882 192.248 mo78.3882 186.068 li78.3882 192.248 lief79.4683 192.248 mo79.4683 186.068 li79.4683 192.248 lief80.4776 192.248 mo80.4776 186.068 li80.4776 192.248 lief81.4839 191.17 mo81.4839 187.06 li81.4839 191.17 lief82.4927 190.178 mo82.4927 188.166 li82.4927 190.178 lief132.389 162.371 mo130.374 161.378 li129.293 159.366 li129.293 157.268 li130.374 155.17 li132.389 154.178 li134.475 154.178 li136.494 155.17 li137.573 157.268 li137.573 159.366 li136.494 161.378 li134.475 162.371 li132.389 162.371 lief130.374 159.366 mo130.374 157.268 li130.374 159.366 lief131.38 160.358 mo131.38 156.248 li131.38 160.358 lief132.389 161.378 mo132.389 155.17 li132.389 161.378 lief133.469 161.378 mo133.469 155.17 li133.469 161.378 lief134.475 161.378 mo134.475 155.17 li134.475 161.378 lief135.484 160.358 mo135.484 156.248 li135.484 160.358 lief136.494 159.366 mo136.494 157.268 li136.494 159.366 lief186.389 131.558 mo184.374 130.566 li183.293 128.468 li183.293 126.371 li184.374 124.357 li186.389 123.366 li188.475 123.366 li190.494 124.357 li191.574 126.371 li191.574 128.468 li190.494 130.566 li188.475 131.558 li186.389 131.558 lief184.374 128.468 mo184.374 126.371 li184.374 128.468 lief185.379 129.46 mo185.379 125.378 li185.379 129.46 lief186.389 130.566 mo186.389 124.357 li186.389 130.566 lief187.469 130.566 mo187.469 124.357 li187.469 130.566 lief188.475 130.566 mo188.475 124.357 li188.475 130.566 lief189.485 129.46 mo189.485 125.378 li189.485 129.46 lief190.494 128.468 mo190.494 126.371 li190.494 128.468 lief240.383 100.66 mo238.371 99.6675 li237.293 97.5699 li237.293 95.5572 li238.371 93.4595 li240.383 92.4673 li242.481 92.4673 li244.494 93.4595 li245.571 95.5572 li245.571 97.5699 li244.494 99.6675 li242.481 100.66 li240.383 100.66 lief238.371 97.5699 mo238.371 95.5572 li238.371 97.5699 lief239.391 98.647 mo239.391 94.565 li239.391 98.647 lief240.383 99.6675 mo240.383 93.4595 li240.383 99.6675 lief241.46 99.6675 mo241.46 93.4595 li241.46 99.6675 lief242.481 99.6675 mo242.481 93.4595 li242.481 99.6675 lief243.473 98.647 mo243.473 94.565 li243.473 98.647 lief244.494 97.5699 mo244.494 95.5572 li244.494 97.5699 lief294.383 69.8555 mo292.371 68.7754 li291.293 66.7598 li291.293 64.671 li292.371 62.6553 li294.383 61.649 li296.481 61.649 li298.494 62.6553 li299.571 64.671 li299.571 66.7598 li298.494 68.7754 li296.481 69.8555 li294.383 69.8555 lief292.371 66.7598 mo292.371 64.671 li292.371 66.7598 lief293.391 67.7691 mo293.391 63.6646 li293.391 67.7691 lief294.383 68.7754 mo294.383 62.6553 li294.383 68.7754 lief295.46 68.7754 mo295.46 62.6553 li295.46 68.7754 lief296.481 68.7754 mo296.481 62.6553 li296.481 68.7754 lief297.473 67.7691 mo297.473 63.6646 li297.473 67.7691 lief298.494 66.7598 mo298.494 64.671 li298.494 66.7598 lief298.635 64.671 mo298.635 64.5914 298.579 64.5289 298.494 64.5289 cv298.409 64.5289 298.352 64.5914 298.352 64.671 cv298.352 64.75 298.409 64.8155 298.494 64.8155 cv298.579 64.8155 298.635 64.75 298.635 64.671 cvef25.4683 219.97 mo322.475 50.2706 li@0.628418 156.757 mo7.82813 156.757 li@0.628418 156.757 mo0.628418 153.668 li0.988282 152.647 li1.34815 152.307 li1.99756 151.939 li2.71729 151.939 li3.36377 152.307 li3.72364 152.647 li4.0835 153.668 li4.0835 156.757 li@4.0835 154.376 mo7.82813 151.939 li@5.09278 149.926 mo5.09278 145.816 li4.44385 145.816 li3.72364 146.099 li3.36377 146.468 li3.07715 147.176 li3.07715 148.197 li3.36377 148.849 li4.0835 149.558 li5.09278 149.926 li5.81299 149.926 li6.81885 149.558 li7.46827 148.849 li7.82813 148.197 li7.82813 147.176 li7.46827 146.468 li6.81885 145.816 li@0.628418 143.378 mo7.82813 143.378 li@3.07715 136.887 mo7.82813 136.887 li@4.0835 136.887 mo3.36377 137.539 li3.07715 138.248 li3.07715 139.268 li3.36377 139.976 li4.0835 140.628 li5.09278 140.997 li5.81299 140.997 li6.81885 140.628 li7.46827 139.976 li7.82813 139.268 li7.82813 138.248 li7.46827 137.539 li6.81885 136.887 li@0.628418 133.797 mo6.45899 133.797 li7.46827 133.428 li7.82813 132.777 li7.82813 132.068 li@3.07715 134.79 mo3.07715 132.436 li@0.628418 130.338 mo0.988282 129.97 li0.628418 129.687 li0.268067 129.97 li0.628418 130.338 li@3.07715 129.97 mo7.82813 129.97 li@3.07715 127.958 mo7.82813 125.86 li@3.07715 123.847 mo7.82813 125.86 li@5.09278 122.118 mo5.09278 118.036 li4.44385 118.036 li3.72364 118.376 li3.36377 118.66 li3.07715 119.397 li3.07715 120.389 li3.36377 121.126 li4.0835 121.778 li5.09278 122.118 li5.81299 122.118 li6.81885 121.778 li7.46827 121.126 li7.82813 120.389 li7.82813 119.397 li7.46827 118.66 li6.81885 118.036 li@0.628418 108.739 mo7.82813 108.739 li@3.07715 105.989 mo7.82813 105.989 li@4.44385 105.989 mo3.36377 104.997 li3.07715 104.26 li3.07715 103.268 li3.36377 102.616 li4.44385 102.248 li7.82813 102.248 li@0.628418 99.1573 mo6.45899 99.1573 li7.46827 98.7886 li7.82813 98.1651 li7.82813 97.4278 li@3.07715 100.178 mo3.07715 97.7964 li@5.09278 95.6988 mo5.09278 91.6002 li4.44385 91.6002 li3.72364 91.9571 li3.36377 92.3257 li3.07715 92.9776 li3.07715 93.9698 li3.36377 94.7066 li4.0835 95.4156 li5.09278 95.6988 li5.81299 95.6988 li6.81885 95.4156 li7.46827 94.7066 li7.82813 93.9698 li7.82813 92.9776 li7.46827 92.3257 li6.81885 91.6002 li@3.07715 89.2247 mo7.82813 89.2247 li@4.44385 89.2247 mo3.36377 88.2154 li3.07715 87.4952 li3.07715 86.4893 li3.36377 85.7691 li4.44385 85.4092 li7.82813 85.4092 li@4.0835 79.2891 mo3.36377 79.5752 li3.07715 80.6553 li3.07715 81.6646 li3.36377 82.671 li4.0835 83.0308 li4.73292 82.671 li5.09278 82.0245 li5.45264 80.2955 li5.81299 79.5752 li6.45899 79.2891 li6.81885 79.2891 li7.46827 79.5752 li7.82813 80.6553 li7.82813 81.6646 li7.46827 82.671 li6.81885 83.0308 li@0.628418 77.1998 mo0.988282 76.8399 li0.628418 76.5508 li0.268067 76.8399 li0.628418 77.1998 li@3.07715 76.8399 mo7.82813 76.8399 li@0.628418 73.8155 mo6.45899 73.8155 li7.46827 73.4551 li7.82813 72.7354 li7.82813 72.0889 li@3.07715 74.8243 mo3.07715 72.3755 li@3.07715 70.7198 mo7.82813 68.6309 li@3.07715 66.6153 mo7.82813 68.6309 li9.19727 69.3506 li9.91749 70 li10.2774 70.7198 li10.2774 71.0088 li@170.62 241.571 mo170.62 248.77 li@170.62 241.571 mo173.715 241.571 li174.724 241.854 li175.084 242.222 li175.445 242.959 li175.445 243.583 li175.084 244.32 li174.724 244.603 li173.715 244.972 li@170.62 244.972 mo173.715 244.972 li174.724 245.312 li175.084 245.68 li175.445 246.333 li175.445 247.325 li175.084 248.062 li174.724 248.43 li173.715 248.77 li170.62 248.77 li@187.109 240.125 mo186.389 240.862 li185.74 241.854 li185.02 243.243 li184.66 244.972 li184.66 246.333 li185.02 248.062 li185.74 249.422 li186.389 250.443 li187.109 251.152 li@190.494 243.952 mo188.475 251.152 li@190.205 245.312 mo189.844 247.042 li189.844 248.062 li190.494 248.77 li191.213 248.77 li191.86 248.43 li192.58 247.693 li193.229 246.333 li@193.949 243.952 mo193.229 246.333 li192.94 247.693 li192.94 248.43 li193.229 248.77 li193.949 248.77 li194.669 248.062 li194.956 247.325 li@198.053 241.571 mo198.053 248.77 li@195.675 241.571 mo200.429 241.571 li@201.869 240.125 mo202.515 240.862 li203.235 241.854 li203.884 243.243 li204.245 244.972 li204.245 246.333 li203.884 248.062 li203.235 249.422 li202.515 250.443 li201.869 251.152 li@81.4839 176.119 mo79.4683 179.86 li77.1636 176.204 li@79.4683 179.86 mo79.0376 164.751 li@78.2437 158.119 mo77.3082 157.834 li76.4439 157.183 li75.8682 156.333 li75.5792 155.454 li75.5792 154.32 li75.8682 153.384 li76.4439 152.505 li77.3082 151.939 li78.2437 151.656 li79.3975 151.656 li80.2593 151.939 li81.1973 152.505 li81.773 153.384 li82.0591 154.32 li82.0591 155.454 li81.773 156.333 li81.1973 157.183 li80.2593 157.834 li79.3975 158.119 li78.2437 158.119 li0.0117648 0.956863 0 0 cmyk@131.454 171.384 mo133.469 167.558 li135.773 171.158 li0 0 0 1 cmyk@133.469 167.558 mo133.758 175.268 li@133.54 185.841 mo132.678 185.558 li131.813 184.991 li131.238 184.112 li130.949 183.261 li130.949 182.042 li131.238 181.164 li131.813 180.314 li132.678 179.718 li133.54 179.435 li134.764 179.435 li135.629 179.718 li136.494 180.314 li137.069 181.164 li137.429 182.042 li137.429 183.261 li137.069 184.112 li136.494 184.991 li135.629 185.558 li134.764 185.841 li133.54 185.841 li0.0117648 0.956863 0 0 cmyk@189.7 114.493 mo187.469 118.178 li185.379 114.351 li0 0 0 1 cmyk@187.469 118.178 mo187.973 99.9507 li@187.54 93.3179 mo186.675 93.0342 li185.814 92.3824 li185.235 91.5289 li184.949 90.6646 li184.949 89.5108 li185.235 88.5752 li185.814 87.711 li186.675 87.1353 li187.54 86.8492 li188.764 86.8492 li189.629 87.1353 li190.494 87.711 li191.069 88.5752 li191.429 89.5108 li191.429 90.6646 li191.069 91.5289 li190.494 92.3824 li189.629 93.0342 li188.764 93.3179 li187.54 93.3179 li0.0117648 0.956863 0 0 cmyk@239.165 109.532 mo241.46 105.847 li243.473 109.674 li0 0 0 1 cmyk@241.46 105.847 mo241.036 119.766 li@240.242 130.338 mo239.306 130.055 li238.456 129.46 li237.861 128.525 li237.577 127.674 li237.577 126.512 li237.861 125.662 li238.456 124.726 li239.306 124.159 li240.242 123.847 li241.404 123.847 li242.254 124.159 li243.19 124.726 li243.785 125.662 li244.069 126.512 li244.069 127.674 li243.785 128.525 li243.19 129.46 li242.254 130.055 li241.404 130.338 li240.242 130.338 li0.0117648 0.956863 0 0 cmyk@297.473 55.7447 mo295.46 59.5596 li293.165 55.8892 li0 0 0 1 cmyk@295.46 59.5596 mo295.121 50.6309 li@294.242 43.9356 mo293.306 43.649 li292.456 43.0708 li291.861 42.1353 li291.578 41.2706 li291.578 40.1197 li291.861 39.2554 li292.456 38.3199 li293.306 37.7442 li294.242 37.4551 li295.404 37.4551 li296.254 37.7442 li297.19 38.3199 li297.785 39.2554 li298.069 40.1197 li298.069 41.2706 li297.785 42.1353 li297.19 43.0708 li296.254 43.649 li295.404 43.9356 li294.242 43.9356 li0.0117648 0.956863 0 0 cmyk@82.2774 50.129 mo81.4131 49.8399 li80.4776 49.1905 li79.8995 48.3292 li79.6128 47.4644 li79.6128 46.3106 li79.8995 45.375 li80.4776 44.5108 li81.4131 43.9356 li82.2774 43.649 li83.4283 43.649 li84.3638 43.9356 li85.2286 44.5108 li85.8038 45.375 li86.0928 46.3106 li86.0928 47.4644 li85.8038 48.3292 li85.2286 49.1905 li84.3638 49.8399 li83.4283 50.129 li82.2774 50.129 li@101.358 43.0708 mo101.358 50.2706 li0 0 0 1 cmyk@101.358 43.0708 mo103.804 43.0708 li104.813 43.4307 li105.459 44.1509 li105.82 44.7999 li106.18 45.8091 li106.18 47.5352 li105.82 48.6153 li105.459 49.2647 li104.813 49.9844 li103.804 50.2706 li101.358 50.2706 li@108.558 43.0708 mo108.558 50.2706 li@108.558 43.0708 mo111.653 43.0708 li112.66 43.4307 li113.02 43.7906 li113.38 44.44 li113.38 45.1597 li113.02 45.8091 li112.66 46.169 li111.653 46.5289 li108.558 46.5289 li@111.004 46.5289 mo113.38 50.2706 li@115.758 43.0708 mo115.758 50.2706 li@115.758 43.0708 mo118.494 50.2706 li@121.229 43.0708 mo118.494 50.2706 li@121.229 43.0708 mo121.229 50.2706 li@101.358 61.5752 mo101.358 68.7754 li@101.358 61.5752 mo104.454 61.5752 li105.459 61.9356 li105.82 62.2955 li106.18 63.0152 li106.18 63.6646 li105.82 64.3843 li105.459 64.671 li104.454 65.0308 li@101.358 65.0308 mo104.454 65.0308 li105.459 65.3907 li105.82 65.751 li106.18 66.4 li106.18 67.4092 li105.82 68.129 li105.459 68.4893 li104.454 68.7754 li101.358 68.7754 li@109.278 61.3599 mo109.278 64.4551 li@107.98 62.1509 mo110.573 63.6646 li@110.573 62.1509 mo107.98 63.6646 li@112.66 64.671 mo118.854 64.671 li@112.66 66.7598 mo118.854 66.7598 li@121.589 61.5752 mo121.589 68.7754 li@121.589 61.5752 mo124.038 61.5752 li125.044 61.9356 li125.693 62.6553 li126.053 63.3047 li126.414 64.3843 li126.414 66.0401 li126.053 67.1202 li125.693 67.7691 li125.044 68.4893 li124.038 68.7754 li121.589 68.7754 li@128.789 61.5752 mo128.789 68.7754 li@128.789 61.5752 mo131.884 61.5752 li132.894 61.9356 li133.253 62.2955 li133.613 63.0152 li133.613 63.6646 li133.253 64.3843 li132.894 64.671 li131.884 65.0308 li128.789 65.0308 li@131.238 65.0308 mo133.613 68.7754 li@135.989 61.5752 mo135.989 68.7754 li@135.989 61.5752 mo138.724 68.7754 li@141.46 61.5752 mo138.724 68.7754 li@141.46 61.5752 mo141.46 68.7754 li@149.74 60.209 mo143.549 71.2247 li@151.755 60.209 mo151.755 71.2247 li@152.116 60.209 mo152.116 71.2247 li@151.755 60.209 mo154.205 60.209 li@151.755 71.2247 mo154.205 71.2247 li@160.325 64.0245 mo160.325 68.7754 li@160.325 65.0308 mo159.675 64.3843 li158.956 64.0245 li157.949 64.0245 li157.229 64.3843 li156.58 65.0308 li156.22 66.0401 li156.22 66.7598 li156.58 67.7691 li157.229 68.4893 li157.949 68.7754 li158.956 68.7754 li159.675 68.4893 li160.325 67.7691 li@162.774 68.7754 mo162.774 72.3755 li@162.774 69.8555 mo163.494 69.0645 li164.069 68.7754 li164.789 68.7754 li165.293 69.0645 li165.58 69.8555 li165.58 72.3755 li@165.58 69.8555 mo166.374 69.0645 li166.876 68.7754 li167.668 68.7754 li168.173 69.0645 li168.389 69.8555 li168.389 72.3755 li@172.494 60.209 mo172.494 71.2247 li@172.854 60.209 mo172.854 71.2247 li@170.475 60.209 mo172.854 60.209 li@170.475 71.2247 mo172.854 71.2247 li@%ADOBeginClientInjection: EndPageContent "AI11EPS"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI11EPS"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5Adobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%%TrailerAdobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 11.0%%AI8_CreatorVersion: 11.0.0%%For: (Lisa Tauxe) (SIO)%%Title: (drm.eps)%%CreationDate: 2/27/07 5:07 PM%AI9_DataStream%Gb"-6CMt68OWaK.l9Fc2"(P`.W60<&K*BPQB4c>O#Ah_H0*VeOUK6-\.nU7npNXBdrl.%+Wq)5ceMCuJLaA0Gaf;GdaEU3cjB#\/%5Q(<US%%kdGl7'GIt"`6GiM]8#pnFrkGGGsqT$([H1V".T%i7p`uAs?Z:)2agm1&UnAoY9r#F\+o7tp^5.l1@_ll:RGl?e%mnY%^%IJEU9cYlR.H1h1!(U*fDIsH0XI.uq!s-gY_r)<O2jmBZ=QOb/[?N"i,DeEnXJ"UHRq0TUhT#9Hrq4HNYIeVk]Dgi-+^\R#a*oPB%%iudh6kkEuKq;DPq.D0DH;4N+*s8;V?"@'Yhkur!(mU(J8k)XGqs5E"=+5VHks$)"QIK/`[_ftQUrU>OglK<7.Dg[Q>^&9R-_LMe0%nF(O?3;j0aagL!d,#`/OGk:BBhu*<50_O%9huE3)q`jW;If8stci<M)LYoiE5;:IfrT3=Sof#+LHh6d"hnT*jVF+(C+8a$4Dr/.%%)9T:PGHYu.3k8BH^>X:>55t)s&$V'9hYi8:rV90Uj\NYhn_sJt?f$2.?@&Z%psjS,hZ*#]s.Ibgm1P@)'^0R?_L.Q6"KP;$82nB,%gD5+1$jIfoLUG_BX70n,QX>/gqo?27J%cVANgK&R5/-umX]BU(Ktl%)DbKi>l@0iu9_O5`hRo0ek<Jn4:Hq&@g\Y&j&L+C5<9OHk%HA(C.It%(..tD?6o?BM6q;4-O^\iW'1;fIQpcTr$?7UIhS[?por96BDeU.4pp\`Xd"eXqT;Sp%D_GBZUMVms,PV*d>ZW=`:<kP?I%(Hu+ThGl)_KtlSj]^'[V]1s`$noVa`S5+=Tjaquq>Z/G:0,OQ`jhf@5Lj?Wq*e#@6'qa!jHTuq4hsi=h'7S!6E)&GmrYs,g^Z.I:%,Q*Sn<_2_d3%+WaT5[9p*ID6TER-Thr/UBgT@f$B_KRalq>GOSc3qDI4dQPbl2'>Z)9*(RL(\su-[Fi:H6,//NSfa@f/:u<p^?Q-%q;HPaM-#dOc%"ag_k2/ic;.N/Tu,.8r9uds_V+JUj*)P)[buAB$g3<&Gnh2i(p<dcI&#[$Na2*Ef8Rbj:rg0bD@.2O3KG4OcK!pY%EmM='I#!104ZGOB9Um+ec*QQIir&:-hSo8Lo4+0WZhPR0_:_Oi.:t*t0]`!<N89B/MCXR$3-*"Q`W`1H>uQJ>O,fpZmq'#faE9pn%DEN*T9Ae%.oCMm(ro0%rAMQ18RPSciLC8Mbr\eNSB;Vks=rV$%S/UfOFt;E.r55EO%On6`<E:NWFheS<,k:+'%3;L0=5V4"nrq6P%dhi!oY.2Q>F8VBuPJ9HBcg<*09jbl\/aXp8jij@O:];ht5F8,50(O-En6amFr]2+rF8O'ddoY]g\$Ve*Fa(lugJ@g;m>Ld#XrVuS%FlgsGM1<D?>W@F^3R7]AI*QAB5Et@/a-Cr,SU\USTBCk+*o5qJ>s@;p\T03MappZ#h:#F..;I,jf#Rd8d=!.mT=>P<NqbPMl0lK5%YOC5*O@DBXGNO,0VqhV6^CUA);t1@]k\rSSNgK@CBFfVlV2&&5lWnhoG!:h"rP6mE7tu4r0+<=@F#Y0N%dlCAgNj-%+$^:jb8fFp%po^CRHT[>LaS1_7!)LLRnGg^BTK<3A%Y'E.(7L/J]+\Z^O&j7N58e)*>M[%/+inLSn&4\EHabuPpCc$\Sb7Bik5eMn?<udPc*QAX%h*IXFkXr^!c\Ub$obm$(W]GXsV9qMe+R?]9h)l'n'0[j.?aOG`PK\StNSgtaoJa9beht69jr4$NGW1[LT9dmJQtW'[Hb,FO>=*N]%Hr:kmSA]a\]!7#&;g6,(*%CW4:GY+t#Jb\#h6\QIoh,O.L7<1<4bOQB3c))t8f,R2F[Y`MXCDr(npKi,\gfZd^[T>?9eP*kVuA9R%QI53/1u+V8>&k-n_:WFGRMp&q[@[d!7@;g*%>n)'mr?+&?*@RKN;>^1f[T?N?@<E7EmT(\B3O^]R*\n2ln`,TEJS$#kNlfUYr4@A%RDBhT`?0f$>BmjW]sL8['@4s*iCn<RM(\!C=V<1F.:)IYLPgNRcfbXWmIb2-Qa)pMD/WO[A=JkR2;f,$LTB%XWBEUca)8l-ra"kF%9ua\gVt*!(=rS."05`eb4jj%?DHtTGf'u7;Ctp%SLb-"o!(U'Rg8N%m>kqI!)[J;YmXR,TR%(pdkMZ2CI<knHA&HDk,amD+$H<U(%=tt^#)L7Lhd\BG%Y^WML`d#dIdcZ2!!.N=?0D+B7j*HbNr.I8iZimQn,E+l6_>=*>,(aTIc6hfRL>k.RFZjs<k7Nt<rl8mTZ6$VS%W:fECg+%ef9iYucjN^I<^qHmXPO1osZ1S[F)WochGI8C+MEe9n(%E8(#Hl/Lj\G1!OW/sVQE'QjY.KeWFJ/Z`$a(1:(ZlP"p$K"#%ENFM2@*-;aQ_$C^3iG69n022!3&Q,<P!0k4XgE(Jf$bIGRh!7.j7lU>&Ljl,T,O9=H*$7e`cX+??5d0frG1j1VmRQnfV4P5T>Tqg%HC&&7a&Dds.kPpIlVTKo]^;+p^,250DoY=MIG^d$`YFK(H9)OkIKc0G^uI_l<SkQtUjknLDG?a$h5b8"F&C1L`\XZuKK'P3p+W+5%6E'hMH8?u@HLpUID]q.\f0lR60R1=?eOaH_[3eQ1mq)!9VmiRThN$nHHKmM]G0bC1/=lP)bf3k;D?P$o8?-67RCUQ<Z"hJ[m_4C)%Z@pl>YCEjLqXg?EGE1P9CoPJO_7AcBQN$bC"g0@[]smY/^HVV%s*rj#pD.3m*lgB/]G<YRoN"@mM7$uLF.SX`q`Eq8pRa*%XHbU-%RL2PK.n2HI<p\2BXQQ?89K`!r@=jIVGm2@&?5cpqnsS>TH<lg)B_U`3gH@"mS(C!aete9lYA$cj&sK-`mQ9_hp2<csm;bC^)TJfU%TXl?)OhL:Z:-31Zce`bU>>p9F]P5_[PPWcrD!s5!.XJ6n4IWJAhLC0_,Q@*&i;nRUheQ3Uf,m5iqs[,TS,H*3q<aXnIf,3.@J'@+%^\e(U^O;//Y3D;FQh#o=^\\WBoFE$.r:o)4^&RfDoQQ(/55a0)RpTZ)lf7kL]n]toFE@BTj7e&7q;$f:ms]Gd^-Vb:^#0tsrm9R$%kW@_Zli";Q?I\`6e[p$Ds7l-7GCOr9HIVoOn+N>gcT_3BbI^gthm>T2U]#T4aksfZ:l\#Urf_IgGiJ6Pr8lnp5.l7>rBon\CMCOJ%Kb:Ocn(t_Wk'QEK5IQ.!^\r@nI(ZfWRr:N=I-?l^>4:>JqjVdO^?`RJ/[+#\F7V&g5(7^X>9)J.Dr6$H;#0L>Dh!#\(AbqdGF1('%o@lLCq@9!=G;=jPp%7nHp",69::`I"n,E4q+('Hf(.e#Z2h+=h"TRTG?iC0Khu!\I?bt/!>AofHGB<[oqU]GYlgLbIe%V-KQfDl0%?f^e6'inE&Xs@)7X3al:Rc)pdXs74"\B]3P_0*SPL*1IT\3+#)M/XcN10eCiE#mjt:<RW;/SDT]Q4".BER&j>Jr;7l$s.H!*Sf&5%**@aZ!eXk<#4I2*55FQ'YQ!I@roDE)DXnU2cOsLP+bU\1aJ"8*%cJ,Ii@\ACL+`<>@Z!13=Q;--i]1=Q`\.'$;bA@dFA/TS#I@d7%luUB"Q[Hk%i7s[)'OP=kV3YUOQOD$Vf3!)We5O$_aS8+bjMTpVCA`'3L1<DJFFg(>.A$+p0EJE+q$>mcGNJ5q!:uP!W>E))Ek[(F%Rf4h1!jMVbpiqDQ"8oE/1>EQs!H*(IjT;1DmdBLjGIflm*UYD!Pjd%+KJ*4o]3F\ge=H'RkO[qc4<MlA>UGOmkoA"MCiK^L#5N_Z%4.T.p1cJ2&<+'AG"rL)V#.g<ih`fm;5sQKP`rf#.^bjIo_K>_'_6i@hE&l\oc7mEdbdE%-bD-3V%krJ<CCBE(]rPdraUoXoCB4\e%J5ZG]3IhtQpMpN.3rp$+!6[+u8.tt]!-fLa))UQ)#67!M,CmMF!b>DfQiemq"#L'25M[V^i*i_tY[Sni=M'q%XJ,erS#:LfGHeG%%=Q0E6FFaTk0uD@c5_155O9L:s"(E5N4Y!*r#'>]P2BL4X$+%DA42@g/i77pJXA".\$'6b>ni8tPfj+S$c[_BQ5gTjoRK6tETWSMF%`Y=pNT_006r!9f=!Uhg@5Qkik5SqTF6k9Y3U]\sJJc_#6[3_J2GVtQa7R=e^_A?2HJdPj]@>bKOk,U]d5GIFN8TkL+'+mIEhgRY8%onVM`No*XuZoi)Y?Ir!?rX-slc_`+i_DBbo:*74Im`e6uHfQ",-aT]ApCdRmY9I&F/'/OjdP"C_,LH$.)@J.7"U.)m#-S=3a*$A,%5Za5Od$<]bE^eD#!\GIC\I#YS<*Di?Qt\]:[&1@5B2V*9D/j]<IJG@gW[,-LX>g.Q';_^j/qb,Q/3b<Y,6=M>?UmBe^'^P;UIHHh%.2%L<Oq8j?&PGVH7P/D%\H@.<!PRi6`\ZFEW9=9@1t$+!PC\+KJ=)"?LkLN.5XS&9UBAk?:J$"5Ep<qqe.G\*X3aD<,HaLDQ'O!r%[T6_$7gQ4E2I2-K+ups\4+T=UR\2(QM-(EGVT+ph.J6MD6[6\3VQ9&s`/op(!AlG4:$"sdPpQ^t%[+km3G"m%^O]j(;?oL;JtfQN%*fA+E'Wl_8<`JdE`JVD597l0gd=Y7afhk0$\rj/jl8g2BR#Dpn*AnNd*HoptQQsM\YjK=t#k:a*c4ekY-b7lI;(JNt<Os])=6_Cm%OXBlMCbEK6h!c5LCJ<+fE%Z]$b^b+qnfSHnNCUe+'*uf<@-:h/d%Ct+#\I>qJ@#P`S,em33NXcDVbJ:b6&("C##tZ!nqH4cJ9AdO%&VlHm!A-Tn"*W_:5c>bQM<tF4*c)P#cn7Vo/JB`lnlI#G^fA_iOKANS_'.gM5\n.gcn@YB!7U(`4uZ_GA=S11TP"DCF/0$`RL(tj%bRB5^0>j\I:%!s`&2"u4"nGq0)GC,o-6e(/D?cO=_?6]jK>b6i$&W9N/RmZB?q+nm*Q65b6SE-=/S+5PZM0I"U!7d(X7$Jc\BrYW%fqJ'TaSs@JgD+-*UlKWV*E[nLTVWmL&qD8R?k!:jmJt$b&R2sOlYm%2G/2&u/T@:pI<f[*[&U^7:0'0u3m&qp!a]R)FQ&rF)(sN\%ZF.Pl>%i`o/P`%ZWNn(b,T!c9(Kq5RLeK<qBa#(EG6GmI@=?\/5'E7"6@K%2kmH);5R3D>+MNVTQj2Ii!.+_1&Y&mEdg"#8+;9_.%&0AZST\D<1^RrsPe4'<8na!>`;u_EOoBJARY+o8-];f*a[*(kcVHkJ8-!chE0eYl7OW[h0(m-dEJTOCKkq(g70%BDZ^cqLn?Fc<"%nWbJ:i5X8P3jCqO'[@O*U'$9T,)O1d``-"m'8_-&%76/?I6WlEE"j(8+Jf)<B<kVH+W(/k73Rg`$T?3shf/!kMuBFfGDKW&'2?/`%&^)JD80"6=,Vhu&R#!)\N'N/7'cAQa3mmkV/3sV-&m'#t.kcS'8&4Od-=?hTT?7!m"#Zb1LXZpXm$g;PSC-2_BSg]r4!`Tga2)n#%?+$Bj`0^m5>+t+:"D.3.Sj\Cf;"Gg\8"!%n8n)Zp1LmOPodWoV;bntLfCYsI<@F;_HMT-&Y-PX=?&-PKr$^/g/eXtUZifp<9;L-*%Ct+;b+,HIWH4+;q:W-=7Q8*SHPEBf-m0@nfEESE=b%ShY%G:'$"JDdQo<,\Uf;67[4E^MMdToU#r=Up6$R1CH`rKMbO,^rm6iuaH%64LofR7%u4Or%$TfYhkWk#fu!_N@OOXq:.D#aJ.9p*R^5Rer#uojdGQ%:r^'k'NGBkE$d1il)FH??l(X:Rr05O;"3jn73-%8HHSf%s.)=BJZ(#?rqDrgIR8kbU2C.'1C8dDklik?V'GBC$dD/g&i.il'Dd:PKqkl.1[>Kp>u5lU4aA3ON2=0ZHBn1RnQ"k\j;7'!)?Bd2%,TT-N9VOWcOuFr#?iiplg*6rJ;O\Z*9UXBVA=T<iU.\51dmV>m-D_D:0K^VnqMn[eQmBntKiIIWaZ&1;CO4T/lY8K47,Vl2Qe3!R%*G\$Wg(Rf#Bl1hH`[qN_Dj;*E8jd*h87]Y<cU4QZ/9U5oHY'1IrRdU4l9jmNB[)UHO=>E%Q="^0_.4naVJZ6F7)b']@kc?S7WM+?%,BDP$S._A*T#SO&&0R/ZPG&WK=i+V2,.c];,qQL/ffWDb9J<8A^,TG"a8iD3[nO>+]r)V6'eVQSGF\u/[HFU7;,bM6M`KBgd3@.&%)0\4MIq9ZOI$QEAR[)b[cXji6?c"6=o*o<BPSGu95+'&u>aAGFfEs+gm+5%aDRF(b`?X[oCpGe;b9fp9!gPpLCuNMuA!f[IP7W%u%>o!J!;$anXUL"R%O[M2)C+S9[cBDF=_J,DW1b4MFCu_WFYnGP+lV4[8]#c5/80sP]e6?STT,!:2fkC/7g;L8*e9]koU2XflIa]i+%Ze8HCkZ=rp3u*')m5<$jM`IK@[XM/51L#sO(NN_7V^/%5deL.fk\7r1CU\$p@FU3L%]Nsi#LsW,OZKAa'!SL!Y0B<!nk$jl['>oe%Sr)<#<l)o;;?\<ba=%]4lpeR]:c963BGR@?N$^7t`![L$cdRA-0qi$%4L\a<Xkdo"kF?hbel`K2VF+:bH53K(8Iqh;&Je,Ip;>S=%NTtstMhGCf1dm>(]SJ\<E2XfB*[O.W&Ifa2=uq?1-55=+2F=+?KRsI4N@\C,3B:#c&L35OA&Kd*V7bb\Z,T3"Ld2PB:Z;J3Tpgt0%UgT!R)b[P70J\is&h,(DbT^=`O.+`OV#]VFS:O0;;]\Ki.d/J.'Wt-hkm/!3oOLc@@+]A1O<&_G+QeOS3$'K4=\5;sCDK:+E?[WE%VoY_[#d])/Tbur53Rpk=krb,5[$'+#&^O-_=JWH>+H_H;>UBl0Ou7W\H(QMqMNQ7qkN*gN"pH'2\Lc6!+moX>3PoSV^[K9L&I7k6%(XdBToaq#1E/P/!Z!iP#GOaWU6JQ%g(+#Q`5d?!"%J7J%4r^^`?JHaE/S7[Rj%7,-/TBK3`tgcafP0uf`K+4+\VhV,>o:*UP$9>[%*$8sBDl<E:mQ48_V^]FI+IO^q/\'TVa'+#H=`j"JZ@G[lAo<03$8m<ilMiG+om=T-(i^YSD)&/V"aW21eH`RNfkYg_[ij:E--i?l%Y/OjU''8D1>XpMm1oqum:QhB9?^X*-5J__gkM,Q5N4$"12Y"VLfW^8E:1g&f\h&WbKsPno:9:hZ:=GmQMn[/%@Vn0mV%$]Hm5VO$%iL4s6c9jPghQhgn:L,sNfGU$hGo?I7UTM=\pn^9)4a8%E8fN%i1pMrf?IP7pond$CNK/`G+eog]e%cuXmP_mC7tO/3G^Tk$BGbZN%31`P/kRpCpl;FSITJk*8,MG3B&n8'-L%[ire>oCO*%/n+U];\%<8LIj4UtcW3>U#IR*I*tVNIDbgM*oKM4RES_US):S]tL(*P7E0%L+?h]1bkS&OQkgtAo`udd$><UNEL[IaD1#&[>kJq1ls&jLl70=U=8$lkS.\3'.l]<#1#YTrkUeE7l,Qs^5q`ck20:PX3h.1_.8"K%47VF(loK;kT*MaJ"DZUT_##JK+1Hel;G_RWAl,8Gk-2S+*20]L$CrO&RE$pCU39*qRO6Dp-'IK[%0F7>S!a%O,'I!6&`b(W4$e>^%"M#mW^6j@l,Y?kR\4L_lX=g;mW[M3^o<gPrhF-uRKI5)&;'jEX8VHpunYd8j>N)/&:(el9aE9L5-O_Atnm*R'BJ&G7Q*B`KN=qZ?%Z-P=+Ys4W^!BaeUX;Nl31MVpP"Urp7<5)3%.\q3\c8Cg"L"[=->+fS([Q:L#'iD2+]ok65:qY6iP!Fu1:=V0NdAIQRPGqJj:[XYA%]rl'I#jrotGYFHmRPG&N^0B\D'o<9AqUA!0C<9!^9q+2_MUMnn4HF[Y38X.PC$@p\<:rgLFA8W2l#l3QL=V2K9s[Hm,U*ufJXs2a%4_q0<m5'^0g/jnYFA`XcdB5i\e]h)P=5I3AWgNWN,kgbDIZS(GOmJH:GsY9]ZU(mNU')0OQSVSej+JC9S2k[8$^UC>=pEA*Y]c1i%_O3eDQRIuIbS`j6;`'X0I$!Vq-V7CujJ"`E[lM9\0"8tY$5+pcP&!J=7[#);WJ!H-g/1L*\eEa]9>8Rn*8,O-85U"^&gef68k#IR%(rk(f^?l"ZlQ%A-&C!6rAeh842An:9*1>N-rcW!2CYtb/s!DacXW;rXI$n!S%%4aq#;#ZPQYD^DZd,(DkKZ2]V.A<$eE*"Hk2(4n%<_;G6='%LGime>g%X@U$Wo)AbO8JQ`4+j,"@%+620YK#gBtBnPoWeUsWR"sUV1IOL^j9q]>C\DUY?7`FSitUQFZ!Rk;W&bo_r\C(%qL7]#Qqi+r.QnNQ__+gqpsbH?IKI@HiJ6S;h4+j;>[i'S$_O>@HbKrU",@5aNd%B=mgdnX4Ho_\?$s6*h2>Y2n7osn!Uq?*O5Ym2%QjaE`q>Gt2m;YeT?`!Dln4:8Xr/o"2\;5P8p!AcX(L5gndXjsdOSKA/$[Hi.rP%c@L/]c2aiosLJaN^l_^/($6?Asuo4+p*d\f;)%.9dL8q;L4<rG:I8!%b>.'28$V3P2];>?#Sa4kPVYWTtnt%!dh1X90):4&ZSrj=T"3M```"VG_4N&_lVTW8perjf)!FSR:W1)J!;q%?SMW&2=O]nkipU@B3s%3Is`jk<b%\l25.:QBR!7`#4k-g(i.gC=>dtL8&q*,*f/s8A93Z]mrMaB.b$?GMujp9o@1rr;kPtSrHNAW%>"l8q5#6TM[n,d"596e#9jfoBD5hJQe"K0MDj@9')T<m_Ql9PH8$$o1R^1gb;r/5T/0:Co8^pg3emd@>lHPtT=)n$UeX+ftK"H/'%^?(!RF)RG,5FG#[S!;gYndbhhSiQK=C,XR`=mYG%s10^CH*,MkVeuDi@/Glq*-fT4Hu@#:&9O<c5dh064;N+N(3ktgbG;BZ$RVI"%+YdUQ_biP?dZRJDB=H.Ao>4p;ULEFY^b'&cbtZrC=P.F,df>@g("R7+5II`J`duSdPpLJe5+\l,0q<*tmX!@2B\QJ?\$Y"uZqtk;%gI]tOF:R-0^"g.8>+f@B[@)2(S&6^pZWBWUNp.(,!56-rm]tTuGr7b"5FW7^Asi%.Bd=d/P:\h4$9%N&)u?AXI4gLdAX-C:e7=tD%RL@YYk-hqX4u8O`4)cZ[O;u=dE$^_NI^480BB&a.nIq`M[;lb;\3"a)"7^JDkDn3i2Dk[iYK:fpWZ&UkVUY^.XI5G2q\%p=Bu17)%>;UK>r/@)p^Wu/sb^R1$*D=*3(ht-Al/O%;PiQ3gATgbJe;h?NGN7G<E&5YY[Nb@q@<g>Y<H_H88A=;a\KpJkl,C7fp4DM\%In*N%,SGqg-^u=*,kWYV[(q#387EW;LaLp^@@JAh/2k)R*,U3c"*ZBW^1Gp`;>-,u+D0IrWd\trZr=uU>0-1@n5\OK\Gm=M-ADBS%d<jb%hRX+t%@g9R1E]3Kc-r-bgM+(]'A4K53L':&?KO>DaAEY9\/[(]ZF7XRoT&hXq&"-+k$5JN]b(3W3r1<0m&@(gCO')&_dJr-.IW<5%T,HhMp)/GY[.d5V=]4-TbN1k5pDupX%jXh2R1rbEIs!:mkMHKS%kFPrB0]01:@D9SqU*=10A.TM\_/4^AB3kD...PMN<qO\OT1bt%]!m^/JV1+'djTWaT?,Zfe*^sZ%G=/*dN%`L$'2^:a*-jbgp@HqptaIE1TUH3VT%V/C,'J4W_8a2f4hJRAPN3bCg^mNk!"Y!JD*Z>%iE!)"%J#)#l[7,T1:BKGhmT%phqL21S'>.qE7GK$-Ed3>eJkXikXBZHO\^;WRC_.3m4MSHEA.J?S(A0f.<.5>lckc#!2I0j*Ql^?%T:CQj]CRM!?L;&L5a(00K4XI3J*$j_HR=4t]3K"@?CPS3r3.u()C,)4pR^oA4oQnUaPZp5n`Dd6hS0$!%tFT3[/'ps8a;c2N*SZX%qOM]PS=We#B!8gh>1tr-GEiaI:RHehnY!aM70DaE//`i%MSLu5dh&&%ZRcGc&>0kB9Og,Nc31qRJFb#C8$:a7h%4b5b[+F81O<X(%biFJs'7U8T5#J#:9WXd&40s&d0KC;<EW[R)OE8RsJu"&ZaWb6NM3?aC;O^ieT64;/<nO>-P&uh2EARDK=aIc6GF/<Jg?i5FriGGM%%Nk]hD-#MOL"59Kaj[Tjk]@,=WCmBCX4UF-=.(V?4j2m19FEqVg5o6G&fFhH:Vc2IY\RRM/^uZi,MR\H&m>1T,HF$tT&"Lj2T/6E%mA<(tmRjA4:U1Akkp4VG^RiM5I6(*q'<f0f%QE\Q[LDJ7?VbhNW3A+^?cuIbN&tgLY&1_[P9]@7gPp*a3ERQ"-+Mf+.qDB:p$WWP%rE^StmIIfhnq>ge300Q,O3mh/d%$4<q="G:nP!5,Sac%;npF;Aca7^PNEf,i0<$TN1icMlLRR[h@r(/'BuZF68.^^6G!W5m:TFK:%[,^o*E>LMdO<e623nsA0DJRhQafmafU&Pq]_k&('`pY$V4mgHtQ"5(]_`Z#D%'o1)EpEc^b=f3>@Z:IEFdP]hTnMDWo]@e2-nc^)%U3V\n,)B>0Tb+62"85FJa%7:Z&3VRh7[kqZH'%JcfQd!0UPKNN0h<+H/I1$33DUbu:oIn;-n%hC,YA-g$SEVj:kGqL:g39ua"#nm%\l'`qgr<'.po@nqs7m]7LJkqF7#,.)Lk!U;d!k9.ZCU!ZNB@Zf3a7I:LpW`L0TFU9$_,?.Y,gZ9VX&^EL3PjWTlJ)\)b4_IOhIat%THnJ1Iu/JEL)ZSZNH3S!X*1lk<47R^9=JTHLr_!3"qe1V8ls`D.0s@B2cZV+a#6uak3CH5Z)3GTL$TBN$,<WeW/?_;M'q&>hR93j%2Pj1b]PM$"I`3-jf2u).jD6qo,,V1fX%4Bj?rn*Ebd<(6-BAp4rrV\aR>T(j-OX_2@e>_O=NGL/LP<D':,ZcrMZ,VnrZPpRijWZ/%.qBsI8<Ah0b6f*mYRdgoK%pHRLO-%Z`;J+lL!0U$KuWnL9e_c-(9q<[O0T#4-hqI21]Qofpt)_'r'ts%dc-2^l&5FQ]?t\e9=g/,%Kao%[q!_@=&PqB'UDWN#q41%@e4uWp%>"s<9XqCa\)BW6$&T,h*p0>L2#U!&W'88aGdl#(3K:JX5G#O#gXJFUm'FGq8b&XpQBS_k%#4Ao#2@]65VNpUdf`[MiBu0*@d5Em.l#;h7R<kD^f6M=Pmo`rFj*uOKg:_B%cfsrq8[\%(IQc@m1FKp3)nu(d:kN"#-ss19[a,P5%EZ<>7)fsH&@VP2&mSX\$Co;UQG,NUIVGHI?ak]k\0#l@d[$/3/h2Bd@kP[TSVg"S49&k)[\"/b#g2r7pmjl\#4YjS>`q55L3,M@e%Sk1>gpk]j+MqCD=du2kr($:%Z@Cf@S@E]^oZN`"`,_tl*fgB6ZcXdQO&j*49@TSsOJpa&I47a7mo8B_rl$'O3DB`s+#<\^)_41hQ%D9HUjq_N,e]YPLbg\u);X*OGbfAGVt;,7@78cQfPK=4-/FZhm:)iojL=\GdTU?R]3+3q8U37IH'XA%D<rS.fV^@td`S+H7C2Erd3%nol0?I/!@-X*6M;rUKj\DgqK7Ztk4&UM]CIM/Mj>G4E([0p:NlCepY*]^m"fY/`$0j'0-fP?gB-M>bp\5N-p7-h`a6)N=17onURE%#gjeBWUa#j&FEYZkk0b>-IHplVG2S)0o86E</U'd:Xpul3aL%<$e?uV<Z\\EU1UX(_5[\i)m!qam@PaU!2Ea`Gn[,o!tA3O%5j5Y%P22dYK](PWKH@+5:pljf=Um0C[R6;FHTA(;1e[5cb9X>W%Pf'$N%499jbo0aBucsTYLm,]6>iN9O#RrI]#L5f%U>4eV:Y3:0-0$%%CV@dU\^s#mCY,q9i9d[CbRg@lDp<@+?-_s%U@@MFQcSgC=N??6ri2K3_qFr8Npq)k:bN,14f8(6nio9d[`uqp=IT<8#]TafT#jV'%+.qEBe*ZI(fDXu,=%o[4$2_t1B0PgA"C=1TWB]OEN6Z[:\>k6'o;(,hoVa.>E01NX<NC5XjhgfVV_^mVEh?+4^MK%t(N^Q0?$\O:%TBjsdZc[HVm]s$Q^9+lGs-*\4d^jmfhtT$7i#EW"C3bPtB'5p,C2Ha\6-iNFVC+DCl#DbF`2:fC54.'bn4L6\T<qeH^]Q:XCXkPZ%fO#m%<LLV6?&b<9g]%BAIsUGmba2H3P83ZcBl&8K/p#rLZHVao>5_ZpIr4kZh1'$*U$[0jWu,rpS=d0QbEkK2s*k(V^!LF9jR!0<%a)1<'gTaTIY,mM&]p1k7f]&"5n)$0L6p-C.:;]#MI2gKfYbriO_l1`1UZ-3\8"8&4<k<_UFjgocXWn<#R#sKl/#:k>6tg0YT;c#7%cpF>J5]5,8pujiJN,)KLM/D6a$gSZS9TF4Ta<]>T&\:YFiEGJ]3ro%l#H-i1n]e&ZDLF"-1j(2;p;`dH3nit:LFh9?I'&:S;6))o%2/=3YD`,q/Y,9:2<'8bfkB0]la\I4Rc9AAq-ai52Xa3H=m@%=QZuBYHPH:kVZmr#Z`[%Fjs6.]\qa1JWr)@A3S7If]/14Ck-JHl\%a>0`*PFtORO?.un80oSCNm<B#F=J91+/jRWANpRg*LVp$UP$&E7,:+>"'#d?1u-2MDR-+XWZg1i4XAqPB/tiUZ1(VoXAm\13\_'9%M5F!P<csNa6g6.WL:QL2&*p_k[qSPd:Ft<&nWr?$8YT*dD=Q%k?Ka<CYG+"DEM\HHp#ae1GFG\'=.qiI[kk3_c+LW(cHu57_l@hA%kc-pkf+,XGo5rN'R]MHU.jWb>$+=;pXY+[Vg>76T5q+=?):$^)ea[Ml]NadkX>RVl\DTpcFnau$SJ:7a1UN<GjmL92[mJl:XoNYr%]fdi&-lMO'.fFd[Ib$FD[=*2WA(kan$X="B07?9qn+P8qY1YHhj;/hWI1C'p+[-:>(.$N80I5K"@7SgikL8\;FF#Fmh'>M=l#Cf6%E'V`A$Z^-AlVF:>oB>W'4M$`I6jNKA=\4TA:1/!QH:6G@n.\XQdDghK7f5*r#BtE=oAd>7_LsK^PTC,X_LaWTX>++)-LeSLa5!9o%4KT*_9(VnX-7u[r+/q02oP<V:*S$V4k51f8Jg(:/Mk)/Pm&>u?HC:6*oJ>dUM)LO88TH#7KQWH3Pec-EE['?#0!nPRURm)lXU[U5%*ms*m3=aA!jms#8rHT+%Kj:76SOAB&3K(qAI@]QH;8U9mK,d-\3bQQk,qo'I@<0hsFK[_O%sGP(h3VRi?SYHd`AT@IOf<2A>2,Ir%l@)pp\N;4IQ!]^1P1*]D1r4*RnQf2-pr640aW6O,e*8pBj$rn+Q1T'%XSQB=8'aDbdncmliMUkkBm8uZ48#tOGhUG)D5WrI=f2oT%Fh.oj[r\HN,eKU2ogC?X=p;6&Q?nI![jZDXCL,uP:*\AS)=6bKc\'p:+SY^qZ]pEe28Wb6Nm94Y>g)8tDsb2hF\^BVT6WKZ`lD<A%/H.!Y>MpgdRFsORVk0/+']X%^5+eB$,klB;S;3Bn?HL(lRdUpl5f&dmf%/l*mujeV!nC1eOY`&^XnK5P8fH-mr9<SZDuRr)n_L7t%s6F=HqBJ_)&s26&5@,o*=4`^H0\<Y$7SZBnQE<eMY)>^9lE#0lY4n2^qnoMC@PgWiWB5T8O0%cMXl_5Co.1b=>nqtYN-/,SZ;pWY%>BQ!?7A3#@5\W06-_tiaTfo@`Q2D^?X65$P_&Ye\;\A3q0KM<64]([/'1`?uS$!57!%WW!RXpM9O@M*_J7RbH^6kHubg)L,q#qMI%TY_LEpjri?B@O[kWh[ci;7b@#a+#,%(,eBt=P2ZUf?j#B?[d8"l]5uAs7#a\+2@fd;hk-59Y^K8s5Ni-^OGjn%rXYG#;,30It%=j%k2nUAa7l5Poq-,l]8c_?(AS.Zr/jIJoD8Dmki7/F?iOJHr:<Xmq8LUnrm1E&)f#EODr=.Ok<V=0L\L;[H>]A=LATMBpusqapmXco%qgX*G5;'F<ZMtek$+'@'TUu:5!mCAY]A!nZH:*\a!rD:A4q=2o?+;&"cNNVEn%oU75UW4*lOu9mBCm/"VXL2_l;8X<K>[T#f)ZeO%kS*XE&(a:_*NZX4"*UH"Q$VZ63gf[L-M1"SC,`?99&FHdIU8)CXdqVS0=NCo1SGlq_0K>t\"SM,9]&2H%*c=%Y''L;$HF4[PHHAu%[$l+>aLm.j4L?.9IF<8gLY@V)1?bd;JY(GJgA"\n2IrIV]!aM+)t8$`qPZT_?3U0oQZb7,p%2=ITb6KUD/cQ7)F!Z8o6RnUg$D:Y%GoNA>[)PcDpUhPe\*df`iW`/+W84O"DN""WT6,3i<E9cO\64"5;XUb-adU^PLD"]eTnL.;)X*YSe8ATPfMI/`klTUqD8=orl>V_K%X;58>mJS$VdpGCq7\C:"_6&H-.)@jgles`WC*P/jMs0uZ)EHCP?TOERduqGFJR'@4j3nV?o5r"S&gXK5a.^:2]mBJCj1"J`rUC?<%bO,H=m-N]gMhE?>rBNT@&!V:fQ2\5=08oa=;>;XSKo'U%0C51.TEqrOpq@GYe6?m)h="_84!(sCm1&HZ2ND_?25#r&CWH$,T5s3E%Frn/7E\A.Dj95PP&?<E554Ud%]$84+bpRpVHa:>4iH`N7[tP@/>p:=">NGgij<X2#5Wr5>Jl=jegUt>Kl`ENUR(Fq]nbNPg!H^n"%"DM"HDVbJ1h7C,li,;9^.]T]rhkI_'mm?3Ym^$,8k6fj5&l@?"/HGh^c7RdH!.Yc9hN(ArAU_pTi4%+YEVD3Dc2lE<@Y)s,DtE='%E>Ouib\[/:GZ`&*YL'.o43*S'@.XasI/OYU"uLH,OZ!AFqVYcr)/P,b`raQl-\J.j[.&p`iAN!sloml=gT5AUVL"0ZVAif-q!==[%lnb<U$,o794V5U[(o&2GDI=bHQjD94II:ETD)*G?K@Lh3F$D0jPDQmW";^t8EsFaC;s6OiAI3AV\ZLoNkn:j0(GK+fT0"U.2F/%D%DLDt6pUNdOCL^n.+(0)Rh8^"n[7q7i+i!Q"cQ0u,Rue?V!S19+II8L]RtP<pH%hj_j$K]k8AF\Tl5'#;4(]:LB""509ahDS(]S?g%F0:@R"<\%ZTZf^_"25>7!5K04=rpGDO55>oak-e'R2Q:%HVU;P!]tWSR+6*K\VIr-nIblJ@+O$!,HW]\Ksi]W,fCi[g?\`ZLJ-2f%pdY!g4:$?3\O0M8'!)QT!)h;6F&*\)-I`]jgV^&[5'I^>D8o.4d^`9MT6o.`D8H`mEKs\J8)Z#(!hr'r:&5H>%W2:gkIKIYj/B2d%qDkD,[(r&cpM$,WK?@[,nJ1biTl7_CGt-P=S'MSB1XF-?2]lIoV(fiq%5ab)i9]qAF!(.K5nR@6IZ(V-5g;9=l>ka1o_I&Qjl>(W%6/MaK'S0hkjE@/$"dYtd8_X6AEoPJJP]GO)J:_*0Og]fjO:"g*FMIoRdV_9>cuTga@r9DkGL.uC.u1Lu5%e!s'G\jAjDSfd2nHMM%8OPcu?SR#&Cur4=i]hm:s5ku<5<Si_W/Btd<5WJP$sMS+&QgGhBUOE,?qh7T0D-OfERX)<f-^IEn2Kf>[HY$lKDr;3(f+eWK-j\P%U3Q!,/S'<fj$nf_,B$8o"_O/)pH!F:U]>?;Y3,&?=<3Vai9N2'Sbqj&"b^Mr;G7,`5?^go9:Pe'[P,<1<?DrdNrgH/<nfsD^^+H#%Oe['gBBG[@U*9Yl?U3@okh6$gkH_2G('(%?IMi,G,?]57Bp3_K)J9%d>o;/IQaX/K,30d0?\'K=&caV=(]fodb.q3!\<&V%.B(&V%h4k*u*YpG_OB4A4$[&k+9],V3YbU\lg`#P5ecAb-eq)Yp<,u)l?(6.Zg,M0uDdW?MYQOj"&m3;Akeu6X%QpMVA.&d)gCUF6)r9sF%%'#1;$Nj%EI@mrF:F3-7eT\\@c_8m#e7f\+qMaRlKQ_fdl^*1f"_'+UTR^T$ehHJTD:@qLB>Nf4TKP**YM]1cJ--Ge6PnkDiZ+^R%8DgumP']A?EA:**^pFee-i>BCG4C:&QVm86ATaKN;0P%mO6TqV#l+`h4$[*P![qB6/D::^c#nlDJS+$RCp>dgmVgQ4mB1dm?lFkW%XNasV%!p:q@&YYD_2FdI1QZq8CKh<KIC9AEic3TN?e]nbDr:FYkeh16!F)RZ^:*]B[@nf>(WLiQB>>4Jr]Y2:rer/FZNU:X4DFED%cXu\b=a1E,(8'N=Z.9YJ#9#!^?u>6d,6fea9CHe_VS9P,><e=rURE6XE4$-t1d's+IpGGq='dWSr\eKn=g-Y`7S7;\`YG9;ms>Z9%<I"8R="U9SQaZQ`23jj;^+(o:IG39H[sd^X.Q9Nc[B54b^9.RQW\XNig=Co,7bWECqcY$=F#E:`p>c$7^3aqmgE/VnrU(+a/iO5I%\UY)Ydk/9bBZ\Rbn8D2"CA6I,pm1T^<Ig74IArh>:TM.U4?krkPeFHbPMi*F@7GnS(H]i(rq6hNj/b5V5KOTB"Jm(ueBALr$iSJJ%$^eN+O7r9P&HCb72fI[,O0@ETH1h1!GAl@NS4B][HNcZ7YdRqS%\3Y2<Kp$LOr&\!e)Nf2P$XESFt`-MoYLEQ?Q0OP.c=(i*rmSf%&A@@o_Aubg.SP(<SstD2U+1cq7_R&MOR7ZI=']B8Ta*laUV!?34n<!n:fAgse@j8"=AMH#ru-XgrF7OX2c5A4dl_H"_"GL/!21+0%^3_\+QYq_^Ub#S3M_OWOJa%WmDM)#@JmaXcifBK$dGE6ip'G.,)k5BA/(Cf`)@BnO,U&]?dU&.t6Q%#s`oDT]@9]>:%D-/V;UVkP%g[Gqe\0r&9Q<+Xl'@u>bAknDic5$p3Y2IL]9nVtt-TFV1WiBGS`)q?6YM87M@W9]#cpf7B[LnfhF,Bni-J#;_:97:)Psk2[nHRd(%AX'$K<^PLSWdX*"7`>6._/FWuJ8ZV*0SZ*<T0^p3k'c!n*CCJ]pFom>)Aqho2[u-afCWph(p^R\?.4V\StNhmDl\.?B$g.)Sf*?_%)`2EBaI9A]MPp7$J,/m)iU&S&@G.hXrtY,`l3gPZ>#k[s6NbjK]2/@j+M0l`mi45iB%N9op0WoO\e5iPfK>>Fg"uM,h=s`J`,/t)%-'2#?5B7'n@DMp=,s9o?9;&u3XR"`,MX4GDG5SL'V;)\.')gEb>jK'BJ(K%G";;;NVjWC%pXo]Hh[TR)+:[9%#Sqi/p1N@!*'aGt%rL^Hh^\d,^5MsP;S)n;3Huji<^]3otj0[S]^7/./Vs*8N;E_l/\p^-#&)Q<C_Ah9\#h*%d"@iKoHYeDT*Aij>F5+n:oH&`Bo2'ln%@Bb`7@te"rrA*i1RcP4Sj1sumT^rFsmpOWQ/e71>d(`@a,66%=0k,lk?[/N`h"k2gA/0pRh*>388Bqh%b&,.&Yn<1!i-k"gfD'ae%n.$9i1bX#j!?k=>"2,Ki]f*`s!.uu^\8'$.<\+<A>[bq.@C*_fHu']g`^j+k7Sl_b29&i:ZicA5d_MN$`XF;2-5S!eL0Mn%Q:;+R%L)U4ENRYI7U^UJTjR`gU/>*.HNOX:Wp=pK>Yfe0UArrNJ`e0P;Z_YFsmQA&sZS%QbN?0*P\F]c4cV*;9$ZK)5!1H:)IS$hdj&0J,%Cn:`'MfC+d0K`(1Aq`3q(.7!1m,s)BJ1dX$S4jaf*TG</l.ZM-)WYI$]Yfc#7PH=i&GZQKV*aHm[Djp.g,d59JgE!FRdH*ul'.Uo%llAe2YY^*P8<sj4E3WrlJ@Ufo15G9t3k'iQqPF_a!<tNMKFfp^).R"D*;jAa''tC&iE\:mjK-a=qO*\$<GN(f08;)i[]jXE0W41;%5mQ9.L,k*'er@J_ZIiiKbF=4;.;Tc+-bNUW%cV?a@:g3L*j$9_qknM/m3G=M=8<aW8B\qr3lj`odM7uk2Ca,jZYRbAeh.g9XO\9:%B=%HuU2-f:$nI7<'=o<SaecrAZlW<6(,%[snb-;E![s%YQdY'tGI:;q)D&!NHZ$es+G;oJ[_OA$,NbjW7YJbC-&o*^g(^dYhM+02%is'dg4:6Wknc[>[fB=#hZ2E1t)GqH`pZjD)KC^lD-7tthNj*+2:."3)ZK7HO*XB2B^tdpE,GlX;>p7T=3=cFGcQr4s_gjR3^EK=X%60]ToN$r6?jJrYD>.WN>n(58c`K9hQ\^Z/)]g-$`e5k)[FZ2)&jrM8<['%m/2)6-am#\_IN*s^^p?ZA6Fd?6^RGVa@))L'2'>6e@%<qp!%911^+KadELY-G3C"O0C16Sb)8OQRU;Ba?J.is'M7HVmq.H_#/>Nbc]E2OLg[V^&q)(f[u%q\9pc@<iJ?:XL@b$ca"qD4?<'%i4)-ZG1`Q0E.^:o@iVf/kAY$!Zlr&%-?F%`cf<6QT*FEkP2XCN]>GK;oAG@/c:FY&@5l(6AL3h+BrReM]hK]c)]cEh$\h-`ED&kp%*Pgt^+u;]9'eX@Jf]X8]p,5t/BpHKLGZ:>..L2!?;+I?bR4Gc@gZ'!)+]Yr+g!hVk;N/46QJlc(M!(dqRkB7NERg1f>CcZ]]j1@#%=iGRC)ljhGT.@!XaOZ(SE6g)E/)S0VLcQb#]7Q&1e/]b/#fbKIA%6Qk7G]YF0,fR=Gf[$XXSjHN[n#enlmj!YAacV;6rZra9uO,h%0Zc_o<Kle%/SY*p-htiW</"U,Xu,\9m9S,$Tda&''Dpj5O6T[-SjuW2X[.*!@Z@55-"/B/Zf%5F\s?pd>Ls66'A0HLcZWg!A]utB%P4,r>/c0G!5!s@.RG*,SZ^GQT4um5S6gd%sdsI\#BCuJ&+mKJulj?&hO`uWD,7n3dNo@kBep+t#9nWu;`CR3A7*s,ZoR*-DnVluQ%(Q"RYgbl/"YTar*i/5+Y=X5"6arIlIWu\;*HXN]Q-../F?MnI>2Y4p1Hrm^uY4f$\b_-IrM><ltTm3&..+W)dS8:GCTfl2a2E6.L%af@P$W@im3[4FnG5B'qC%"PVBgoJ(B"IanX#B.mN7_[<@E",IIEJlre1Xg]jUUFX92/LXrYP2ZY$C(S/*&*e5%j:&J^)&^f,2`KX%Tu\]^VDPKr>[3N0i(cAR*Dg6c[h@_FRe$`-l9JeY3XdkLnT=1f`Zd#g[)3&sUVS"5=tr1FF%g/"i"V-ZLmN*P.O-WS>nZ&RZs*YZ%qITAAff<d9hVq&K^QbbD]Xl&&02jRmfBb;YKb@M7o$THhMPg)h1`&h6Y/mq*%XM#RO2IFM[p0%2"5^P!)rp_9QE]T#HZ?[0H$7nH%=HAr`HWA-K'c#/o9,h\4EbEkF8n^9*%Wjphg_M6E?%p;EL7E2+,_u;>aEdMbHFjNUpPZ#?%![R`.CBdS4CGTL21i=gU;%(5(<9Wu%<H?9u?t(k8>OEMY\,-ZVf+nK'3NPNi08!#Q-N+PZ\)g$`!1#S[R,_e'Yc9"1)t+ZM_A,*Wo;oZEkna@9U>R*0fr;2@hC&9A[)fon%1\.nQ.<LQLMum.KotBQ!#XsC]D*/o`[?o:U"Q/.HdZM;G:B4^i;d(DPa@a-OUbVT2=^0e1Cq5:F_&LsI6,gWsq?HIVAX/G]Y&i2G%9%5>@.2&u+3orP*AQi28ASV[GG)Y4nB)UaqKPb<uYgW1UI3XZf<SWU(^CBAJ>a8Yf^Y6?[=3tX>-=^03\D^QG]j\A"C<H'a[9q4a%FthW>UDl0_E$):1BIu_i^.45If!K\d0Ub.`HXDVl&*)oL_##P:]#L6m2EQfUmN]IC5]@s'+nCW?FH=g&[PU$Y"BM*8ef$PdPZ%Hq%[UkK1T^ZUAa[0CcRp!>g\lFB)L"^Ni4"?&m;J/cZEbEi(&Fj>f<`DVL*JcT76P-0Se#5t^hq0a#gb]J8kCSFt46V)^FDVDBLE/Gf%8.:&rAKaNY(6\sB]#@D+fkOI]RURhaTVg0Z_.O;$/J\"r1*brEa?=2p"XkD!g'Un[3YW6;kMH@E"Y#mCIOUm09"G%m]Z*g(]_<>:%*qAkGpYSW$]`;cV2am6L4U`b%A_A3cG+i^gc'\o:<b]fTU"bg+E5!MC_`2"9S_=`ZWE^_M<K5%Bq*JfcL3?j?;-GmG8_TT>pbgoB%^<\^".B\Y)M%3Eh#=8:m"3^dOdb8CAjO1Pf1q07R]-9"`JbgH>()-lBEtocL1Lq\1'@<tI=J4:p,O"]SjAd/3d0Z<%OfP<&Be!&R%ZP:rl1!4E$cZW^CqW'N2iM)Z.bl/XBb@bK/]2YnuMR6+D)CBu?cP>3.kn'OYPIWU?4a8"Kj=[EJS:3@e<I;:"YUDR5HmPJZ0#QUl%h>q]:(NgV,,fB^cc;Gf)_T,ErFp=[OY-j:I>%:'BRC1!c+]c$jR1M`PrM4J5jcC4PX];scX9q:\R?h\M>7R.:C8KTlooS%nUPW#m%1DO/=mliZt)n0?+e(##A;K=ZG+'-/<d<5@qZXBE!47"<)8a>X(1BuYHb/4B#Xk\Af[s9u^k1_RAE0rmMc8?T>-&rTT#FTZ![I9:F%7d50pe@k8'pGb<(T/!&LORh.?-o<dCZPP;_;056C%7T&K)"%RjQAg04+*)rVcPX!T+X\3!X:`!J-*7akmKn'KQG'"HPfR@f4co9m%:B*H,S%njRc0tZ9I\X:E]D(3aP2;gr$boGk+6LBm_^tR,Si8dRLJTBhXCOTqIr2pW1bZ<q`R6-Omp#-UcA;K8r;YfS)iqVRMS'W4%Ir6ec$1F_<Vb@T)d/8uX0(+QCEhoqPHMo[%5#]mT'lRUh2+]_:b=Cei'CdH_(XFAd7aP$1%H$Dc&VmHgKeXU;$,(S.Sof4GM"hT=%B<Tc@.V5WRK+Ub3SRcmmbgIIni<]+54$@gb0P>f`edbT;hVJda00W"%9'ir:72nCD''N=.bjlagZ47lO'%'OGSW+c8]m^Go)QA<2%]0fM!XFgttFX>tn*!E]q$,or^01falI9g`4H'5lq"g<n7b6ocZs.gZCN@_fQjs]sNn"^%^p9fOt#Ym:b/D)'Vk+TU(`o_)CZkG2T%)47o]6Q3"d3egdgM:Q1b0M.pc<Q!E;Lk(I:8I#N^b;c^-g`l'NAc4=ue];6?;&Y;GE2*Z:T&f_2P;LlVClUT:3XB>=K)mBR5T]\\%G'?/Ao:3*__-H+k3[mWTX"&e*%ZNA%EjH-Kmp0tb\O@OBig&\aSD"!!<*<n9V^M4J4H`PTpk:Q9]Z?XS($Z^&U?Jr%`1t9WK0gPq%Fj_+"et<"(qK2p^d's-2,\88UL,`si%14$K<<eaeWAd2sSt87R&,79l]QJsA(DT%Ul0H:MeOCQ6OEe!,aK8F1UX@)Vk^]=&8h-3V%Wrtf/D>8Q%PW>N%6Knb0EO"Y#-V=Rc@Z/V=1<0W6%L,&9"t9VWiC^MdLjRdB6rQq=S7/+5FJ1>"W0r&sbQaWr)V$:![A,Kug-N\e%+"T7S$GjS@e/<h%eb$*jR`o_W$;T#Fja@UVc%@q+7<l*31:b8!.W3JRU5ajMm!AX5c-Alt9Is!)23gUWFZ72=aN1S&V>Pn3-P%cM%N^;gt[a&Tq"`hUqYVCA+O%;Z4gbTH(0G\kq%Y1XF7*u1VNH7]I[Sgb(M=ibR"\i"+5;n;M0J-B3_3V3(-4P?&EjG,!_1`no3=7gd%=k9\V^X1VG-p@pXC@SS>PhViR%uY06Uc'Wa.%ffK7Z47jP#mdFGb^T[\0.<:RUC=b"*D&UB^//W^PP'kq'ZqkPrI6d\5[lk*LIl^%(&b2hMrg5!/m7``,,_R!-UA;@[k[\I`&BM6YHh_7/=^m^e536jMG0=V6Hu6^_(=a0"ii<k*)&RGX``HTYS,a&@&d"m<OKb.!EGOO%XKq>3CduTNA-#=Ugf0ApmDoF(c$>^b^jX0LGs90cFWuPZBn%ABCM#'9`_r%d'N_AgjCW*a!l/L@,-6(0dLFu&L#mTYfkUi6;k;>?%P(MI>r"*0MF-+DQbfV]j<5W>%d*0a-d<j?J=R9@_)Ero0Sh<;bUa2=fA"o^*Hn4CAB6<<_NR/>QkkOJ</4;l>DH%5H>BG#P1au:c%\!WeCDK@O9QgM>*G>Q[-U9FVSaJr;_Xe=D+Mdi['TXGa>L8;+I_Jb%/XZ%JVrU#7UMi(U4:"S.[K_X,'(./oZ=/l>*mJD$2;3S3q%?r$>LCn:O!@!%<WI'Ige1)#_M6Y(>"q*NIT;ss#+@(5UVEFBl#'t2sZDZ^+(f2Kch[-h+VJ9tKp]fXMo:;ujRP4$6>aZ)oN<"2;\%UtGui(AgA@(i2T_2%(t@.,+IYQs@\B#sb;'Wl?\5-gK6lHkd*cKMGfgPfc%J-LYJG"nCHJ.Zqk,1b`3;<'Q>HNPKL:\MT]r.b6qP%@Gu$s@]>cA851Gsa>0*/9fE3mIF1O00Z-uBU+ehu@+oGA$nn]T<odTXY!?L"^#!NYaL*67JN"pa)-&";YbZ8F<$V[E*mF&QWop4s%JhfDEguVT*)2),P)N4(TSS/QgQ</<tRKW3p<=IC&I.1U0?jP@1]9br<1b,%>=VpDT7l0Qnrs9W9kN#i[f#@,Q8_(b`W#>c_ZRLc3%j=_8L?HaZi4=JQ_I?ZZZ-9lD!S0lPpM&RBQY)De&Cja@0WMLU8J'`XW2DGhFM-!S)iWVkNGb=H+3?/"FKK<@@@>r<U2pEVb4+gun%AT2AhdBl*V/_\(<^4eTqD5<7'Z_a\)'PN5dPF&gB/%5WB<j`0>]JbM3<TMC6M!FVO9\+e!*$-<;1CJ6RTZ5sma=#Vs3j.1j">3$D%]P)hPUcB)j7b(W2F0=S``C;OT]h7+^7"_kD)Ad%:+XJso&'A^M``W9d8rcf/\A\abB'l6q)H#=3ABtn'#u(lrJ25Gq^;r`g@`dDJ%S.^Q.`:"Psc5Q<0*)&uIaXf'JH+\67:ts4!*h+J?5VU[Qo0()l4\=cSSM)KK*>3jAWf<[^c5khl:VA[k]/Q!Xe]M.'1c?ihN<+IA%,d4L@``b@-`s^8jm'6oE"^nDc.ZYo%P/a>um,9c%C7H**BN:%<9Wj@I0Kuce"S4Z#]@+$LJK'eS3j(ZI4Meg@<lV8UCh3*0@tlC9%\?RV0WECbuK!@I2^GIZT1e1Q+\-#>3>sYo,KgVao1V4ZkDi5gK(M0C!V^P`RMomJPHR@E@cDe+0^[^"hq&4,VHb^Mf1ML1F7>1DI%1T4PU8R#E&@V+r7%95d(,C>MQ'l/gi^.;8-L<o4PW:1G1/q.r,^r`Xh^$<h17Yg.a.qF5M(1`*^bSG7tc/RHs7U\bgeCn8\lr31L%=VP?)L*h\h1+oa;Mg4d&&O!fTks0[1ib4[u@-\pJlmg)=+KDI4<*nZPR]AHDLlk;>;C=m_;5nK0ZkPV+8\%`.ROiNXW/B7p3Rp^O%/$7kf(tQB[f*=1=nB_^emSZadTc(p6UfLL,-$].i@r)&fEaqY8q28eL`dRmpaC$J@;Ku/+@]!6Y\jXsOh!;AqWCduNFb%Q.>#%O7%X5:IEreWtbl,u?LZ<l--BOoYLORW!1<9$fThukd`He"JmQF>7Od#"hp%@qB(RP+8>]t$W7)un]lrZja";-PQ.&p96Kqk]/$`I(()%\JX33>+rOG14*Kg:@D2_;C7WOT[GIJ/eT&JFlp9kgo^>X8hhFnF.*kDV\Omfi[\M^2U:?*k:SYjiGuriA[W)=Kqs*5*K^9=c(Z@J%@uAE(,f:]tFMN<iX>i-(5dGT)+&6il&4ZnMe:d]GlVq=%r-Ye0$pqD&$j/qokesLb_ZeBQ;*0q%@r>2&Rb;4u.m'KjJc[W-[=^oU%FO`D0:/!#H&V;>dG7ZK]5cB/*5qU":m)Yp/iVj>YHc=@'%oL"t=WBd4A)SUuKna$5F0T+@YjjY(h6FQ9O-cq1SMX^X<O15WIYR>M%TgInN!k+;eMI"?@$g:N2]&7.#Fe$CHp8bGBa+bIAJ]9J7AR^:(k/$tq;O<+m;&qj=\aQB*WFL[>V&NMLpKk\C:W3d#s)>`,m2igI%k_/Io7cdd\8jKRZjE9a]8fTI8``Ud10Lna86Q/\Yb7hAE8P.Mf6!Z!cY6jAChS_JH\OgW]Zifb3(Fauq)kC%P>uZPT3E]'WB2S'"%R]c&1m#YYD"ei5s<$iccKmjAKWFjcOb:7Ct<rSr`AS<@/0"R[DN-2CSd?>8t.CrXu8%m*rR0hg(h8mo(9*&uO_7CG#4^0V]po5XO%FNRh\SJ!W'<NN7iI)V#@9O`'HP[CIt>g_3Sq5X%]L0G)t;&8+^ABVV6Viu4pl]$%L7P\\c"0`h'n1!5,)S3?(-sj;emDQ*$4eLQ)%JMZgdTYtW^G[3]eT=PE.i;d%HQ;bV5Y[Y%6`-Wn&<IEuTSu6,BLW=,?)>Z`=dR@%-*$&KIlrRLq=!>NCZUf0PHjVc3Z>-gU-JHT.%Xail7JJTU'b$Sqj1n/Qbjt7oPE`"lbp!0^mN5p0GLl'q.[I>%E$ocRX.jdtnFPT($[<+*'K;pgVk"X+<7LN^iI@qVAc2_G/>:W_U%<d(AcW*RKBGlt;REtUP-Xap5j-U/=:6#[&\9MA+%*FQW#23L?Fl9JT_6*2;HCu,5M91uTG6/AA"j8Mra?_b,3i)S<ZP,<XmCGpC4%.&>@,2>]=O<rP4NkL&gS4<D;TM(lmgXk8GfYHs2rB=#qJ,Y4q&elb(R(6&g8MV+kIMSL3b)qE)pKLY>oh&*X&J87d*]i!.G67G%J%C4U<ZCC?+N>NQ(sZ7E7b0MZHN6c:<0X4&T',O/T97K\6EbY4/*C!:<%emoX'JRb<E*^H%FXj\6tBV(,CiN'9S`3'_M%9]a3<_T7_%cHcgAP^ap2Y=W=`Fic,YbrR\=S+=7oe^/9[dqc,^R_!IX>]^*Cl7!Vu_g$0Ao&HuRMT"BQD)nSmV3*WKoOcj3`LrJIe"t$%ED2[b%V>3<rU<JtRda7](;D"WAM=<sNM\"7+9GTXHDWC5VqWc-c^)qRIH<5T!i9f7PHW_-#$$D6d/&g3OlD25(U>GZKk&*&8"*EHD-&)/P%_0GR#()r([ZUpaG*i'%;(/$D-V>aeiFeqs1XBi/h!t$plD)G[jA0^PMVrNl0[EK['6[9Y<.b%/f29^6DUd>2J\Wn+"EtUO>GQBRU%BM;GW3R"cd=-tQ-bf1,lU7j$UO/!b0bKia>eEG*pj\-"t"ORnT77lAY3Xpee-Z11N/i54t#7WELD[RI=g-KB5<e%Gm':Wh=5m;*p%&%/Eo[_g##TY@\[@ea`E)B6"]P-O(%CaK<T3'l'Wc'X_)E-(:!^SJX1iu63a9qiBJM\\&/(bh6Jj'i3:GCUW1K>r*\R<e4KePucF%iN*M161ihkW*ZsR;\a^uN%H$9H!1UD2Gj`475@Q@\VXJrV?&^KH#qETalCR]ToYq.21C#=SEStL`l=<D6js;>>;4oJ*h>,8ZcFBU%B%VZHmkg_3N@H3tGV0@>4Aa!d_Kjd)Jq;==]r]j7HP"_YU)d3Sm6htGn)gIs$5_#L/DiIskEG^4lTFd@8C\J'A[a]Y[bqd4.,4i8%?teVmoM"78GQM_<fqe<C1hI,08ieP;K3]\[X@=Emc_=%+KdpOLe,ian9hJu"$L7dL#(_$dia.Q<Ts.NKXtD`H3&H%"bDTiH=\qU@%Ag%Ku>$@0ZL]J%*>h$6VS"uD5Nt$IZ1VYDO7E+VNDVLR>!NgJ;)0]Hq-6TX:i.AqhR*T_m$dVIO$9.Q7P%+,*2qG>QVmYo=F-d5$%:.oD.pb6\r4^;@M/Y.Vg%M8'DR=6L%Np``HrA\E5(+8asaQ+3Pg^liD=9m8(HNh*b=($cuNG9#\<QH13CkM;l=XF?aIo*sG0."_l%CYD/6gbiEm_QbedR-4E!J;?4c\9%#;a$u%D8LjI+OObD)EKM3Rq0>8MWnJl4RHXuN$"OnigQisfB!pE0YsuSMH$udF6!JoY-7Cce%Cg86]1`#18X[!NIU0#f0XA-9Mc5YhNP'O*I4(2)XMd#:[3kAkd&tb&qf>s@YC1/-dR5-$R9Qqj7g-h%US$\sK?:AX/m&D6sAd"-2%*oN"S1+1kaTH26+Qr<*r+>*@pRPh\4fmp?.R\C1@GIlIEiJ@5SFj;XhedaNgJbk)nWein&M_Q/'FpTRM9D?jSk@SaHm:*=OU9]HN%M@8%YU(O2;3f[E\(P(c[Z-u.[3DQ>TChne^o@S6S(X'5,`]U:<=dKqiTg$f'kp"e3OBM$gYusu88%OrM=NTq/^g-"fRjDe\1qlV`%'@l;HVKQguP)5KtgJb%P8J;IY[J(o-U$^LdK=%Z))-W<'AW:Y"@LP0'OBtut'(oSU/kS=[^#!e77-4uHlF3eEY-hQcpU+C*Vlm3A%^%a%ZU697URsS-mmX)&Cn[6)j#MkUsg9l3olD4T:?0=\;f:k1/:/.cjM&5toRN(N),JP>oEA+ALI+.^.4io!mq/R5bUh6qC[F--T%/o'Uo_;>Y^Q$N.4G*_0)HS)pnAQ&hHM;2mIj_KL:c,HQ3mW`QQMF"`B^=XX2SkL0]j4SANOH!b(G+5G!*`M4'Pc=7e=nW(X2mG1I%2oXSfQM_n1c_u)3Nf"Jof4-T-+g<]#h3LNaI'>am028[-7NACh]/8e2GMMXieY,sm`IZ:&\:=`QUb#O0'LW9!;3f"0;-].p.4e=9%7O$WG<&@i9Tbo>^O67)(p2$66dD_r<N@o#',AdPZReA%oU4c5Z-[1)I3f^1/FgDlF"^4Vh?Wcf*nY#%AdpPhbdQNcK(,X,F)`:&D%n2XHTdjAa&\4-8CEc+ji8>VglBb$Qmb%b@YYt0am\CFD1[XsIejG(UBm@tsB@/2Z/nUl9@(%[a(MS$)M?T1Mj(YuZD3)Dc,XEGA6%(A)kZb,q6Wobf=(4g:WYNrpe@o`K+=Tis*ThR/Ss=Lh;7g4WS>-CPj?"Fcr[FFjQlS^DYI4Wt2W+<,>h.rng_-S=V^'mG"uPNA'1%LpXPl?qgOeWNW9`*,SjkXL:SJXslb$lOmT.8Tj@!Y(a8/X0/JOa1IRFD^^E*ppP+)E>TU($HeH_*[9$8F'0.4YaH2';:HA.>^%h8%cMG?rZfsWh8`Z8qDq7Jq^HcJ[;9okB-7Xj3P*Vma36N%U$]B$hITOLR=Ok--&C?A#X9Vq1<GaJJ>:1=UnDr@Z`6@p;@"><nhj:pV%Lf%tkhi]BVCZD=Vq,RSDA?gN=>n<+"5se(>oRj$j?o:?OkXr:K\pJhg[M_nX<>qnN]2^c[IAR-bHa=2o"e[-6@r6jaS\J9<,]uP%%:4D-a?"Y`K-`%cKcEgH'[/Jc+"];@Q42@U*<S*R6*&U2!RR1l@W-?Zj/a`TikA2m9jE(O9LTFW/hQ^d%<p;bH;)5--7s9[#/?.g=%)aSPG:^2YL_&((L(.<-WZq,%7V@SY98hb&0.S8/uOgIPiL4tMUg!`uFh-k;WZnYKb1mKnb*T]VSNauigfW;e@h+308`@SPLe[2Qc%C)19:gUYsP<ii8^oZpT3@:rX%qQ(d^*-alXCHDisPBl98q'nDHf[u:gQEHa)N+u7k_hk%_lq![mcrb.?2X0ti!PhN#]!J[bNQJ5"%Jf6Mu_mW(q6L&_@aU>kmIPk-"W4SpoB0l\o<"Ee:RP_A3%M<O?XkH5S_lo@>TdW+2PCkrQWHD%=\HJs?=YV(*F(m<b,"QSSW?n"<%?`t]YS9\q2ft>rM#XC_#k/rk7HB_`n1J+VX&FJ0M2qh`aNLG4T=%*oW=R7o&NQoaOFuQ<r,Hl1F4RP66DoCRYq[@],4)0pl'pTH!%C(7J]g_bVi>dk@AA3$S<:Veu%m(.Da\&*%11e(_iO_]2t6+7#:ep?I1@oRK^L,Od.gX?(*;3PZ"-WV+:)D1hep8Uubd;pe?%Eqo0%CSEGa<niMAD:B'$f*GgVhdWqRkY&o:2T@`B"u]6Aia.i2*9s+,'UgU8:9A`$gKKi]BJU&)B8q10fijZoc-0&p)/H`-F5Y>IPJ,I7%Pq1[oMmkToO5tT6o?KB3V9P?E<37>g<rHddb=0da13[1E$DW6nk.C-&P+YsYh+Ra7hQ&_3eU*,[>1-F#"9DKaCc@kN0[/lf&Fhr"%*M0RDLmAo".hB(S?^f55EibsT,D^Qg!n%E'W6I>D=@n>bC^ei<O?tb%bDHfO8Qet;W*K2IPL@/.dn@,4bK^I0Q'UFOl%u@dCQaou%.oDM'eW->2r4Q8`=_%A4d">"4Q'bn-XH6PaQaLCb[5jd(3Qts`A[F\OI,Jjfe7`8ig,c,PW*dPc8g64BNZK6Y(&^5aVC5l;RacmW%Si]A4/?@RbbcI1nH%[@][7h2OTr.j$;73YkQ[&o)\19,Blcl2g<S=RA+6d#*F4BLjCF%4?)h$;e+A:Y3AlX8JD&9I9B@tpRQ,O'E%Wm#;_7IG#<88*b(5nsMg`QCs5ZM%/T@3f0=&3[3,bOV)3>pS!UKm??jSBYH[Ee^^mLl#B:bufqRH1aT?B@^dulHE?lNl7UoMr#3C%6/pA"U"%3CoT4?9ejO%0_6@*!kRK)LZn<>EGq=qe?F8k`k&kM\S"=I:;0*qP@X@#9d01B$4GLO?5H?r5d];nCfj@&jYl&_6)u8i4%r2hr`FS/(A4K-G=Z!'DeJmdsXB:GrDq/[>t%*c8Hc)f:jj4pVNZ]lTmIK8XXb[#6i1;>OR_CNS;j&0MpD4ra[Jf8_To?PEY2;JBC%,#IIUn]#E\-&9LR1i#Q`cjCLiEB@e*$Ke?g\6Vr5ZN:jf98OU&-8bXhC&h.\+>q:O$uFE&'TmOUP71hWDe0[RNYUqL<sGKHlcF1I%hh4a?8M(`0n>93S=)+RSW9=]`JBuL"!0c\3F;RSK#94JXj)2Q4?"E]R]efiN7W*BQg:5H9Pk<Hl,ql".9=&rD260Y#[Vco9aVde@%^d_0CKB[8UcQd,S9U!&4[d'SSLh0nohq?d*?F1"imZKEplabdR2JQJL0EQ=11RgXg$'M-<[17&#Mc=&X_Q;ni9,:g/nhM,?.'f#B%V$2TSTsS!T:?W&(A&Xh.@?Y6b+13@dfd0=O2U^`C_87fnn!+pjfVk:JU3\#gd#duO/$_2D\l(m4Tq.HQZrC4/P425q7;On8^8hjR%/o=[-7VWk2%%NFm+g43tD9Te#qHfUJcT%@@%&%5O!i2%j05XT4cm1q]"m]6bpB4[ma3H0@iDm=5Y(7A9^oNKj0)F'U>6j!H9%[kB%)O0Mu88A79TU!%nmqp+UB(T!3)08;#*..b'dpkeYArCZ8js?Z]_qo=u^faYihIf*WZLffm\^H&::!C12WGMjYM@i\r(KSjMi*kjU%]N5MC=*ntRN#FPKT?:ln)C^KRV%oI=(c;@Sjtj13q,lGpCmG^#Lc$e3j'StN+7"J7:!_9*&lopY_?FY9h)rUj/Haabb?sM,nHdKa%MKR9<;NSYFH$)bGe,8Bn\l;(q/i'MJ&61Kb-'T%?8au>/0GmE"C:U3l@gBFS]nji:9*n-pTtnE7UNtn4Aa!Ni##kQ'J9BfrnWgIq%QCQk55@7O80qYeX\QF<t.Jm']jOqZ[@"&D<00G?I"J43c7bFe["nD_PG[IrbR7M0)"Cm:@V+PuJ(4u^M]X3<?#j4W=$gX)=P\c+X%@A<tMG8c8#3Oj]`<[W-m>`APS(X7pe(S+S:<j,ZQ_D-9RJYI?B5:)UdOJ#V?U.2\1Ulk/AkTY2RMEl!"-Jb`Bh<A73N)@&?;.EQt%!q$qEL,5#Bis@&joo*%l1hAe=;Kud&]nk/dr%BhkQc>tJqP8@o-dQ?==^Hmm$Rj4f3`*^X[jYZq%mP9"/a5B4`B.nch;(B_"I.]S%\=j:fk-iSlG*W:IO]YSdj=Tf,4q_+]QC3IT/-\g`B[11*cDHqcm>3,?KR6."Yl(AqbQ&I%2Qh<XAZ+0-o/$XuFD^_p:mY0;,!Zhg%.a9H[=r-)tN0\UA-YaM9Q4CJ8+$,W=h$2mf<[hqS2O^uj"9!SsDHG"&JqgRpUh\mYE$%cO=`44ogoC2.6-J1q,Cn,"n;G!gO@</]%_[tT70Br%)lS)-?MrkHoDiIJjnl8trA[_/GJ[^/=UU+L[fFBWWS^MA%n$-#r[m]%s?-&KQKNh#6`Bjd0@_T<BLY>o/1@YSaY;Q1`%6]6'?&nGgJ-?lMjEL'E@C*An-Pf3T'Hl%:;Uc1&seN?\$M&\KH-6UifeeONoo"&[$.H!o!BUEP\?Bjn0<_b#?"X[eBlB]G1ZL#(g%%O6j<jH.6$[Y*D]aq9>hn[LBS,8/8W<*DJ$lk3cO_n,lIb%J=dp$Cf&nD1U-2X!iP,2*mW^7g0tBQ4koTkddG`idl:c]-Z4P?^AB%L@hM_Sb_2OoQ[AU8D6:dLJEq`NiQ?pj+>rP$s8D,WUVNJLJ[?U4QL(T?\HQN/Lp97He]k0]V%rV2Gt6MdB+_ZpG&W0%8YXg[2T(j%j;jd4DYZ.O)VO*(*JkB0,"6^##,X%m_VOLM%8;Z;fH,=be7G3(]2,>t=AFJ7Ko3$C-*;H8^_e*2Vp0Al7FF_LGNdX"i\*?E#@3/`%691i,e%m;_e"&uoING(P0g:_3)b,$B!ZEK2kGU]rZ_S;bo8Y/mS9(1**NN+C*H^j^n<Us;(>6B(bHj#uGn=5)EUG/(V2'LoJT$_J%hQI)YAIC_;qRF4oJM&-3CBL^T.*;1Vc+:#PQ"]L7!N`CB*VCOHF^'BG`j%%p8Tk=s":\)&Q7@iKBQ/Q0C:du\?n&.)#S&Eo<*Gu(%Zj,[Pbg?Zc(RZl/%[j)m=SS;<4k;O76?PSn:)dOj3tSc6pGV61jWI'3(mNFd(]ck.K9!S*_]mS=k&-lF+mU1U00f,?O'i=l!A]\^%G)tWt(iP^.0n6rcj+SOJnesd5T\DeY%sqKC/atjU),](C,%&3k%(-d,P[hg!Df+XVbioL;^l]!e+r8AYY<7"JeZd+XHV1L`hkJj6%U;aW`3s-(96J5DU7Qo8N.roFc#4C<\+kXK2&OJk]V2P9<Bjh,=7Q-7?H6DPSp@:SWp2mFP+7Oe(\(G\ddkk<nqs!DB%9Ij0a_Lm%%*lE:%1m">;GV<^q^;Gtk[3.Jn?)GmE@OY)>NBnL0(/9dk`=O?[)6HR?!FdU<4get'@Z'O('THFd%;"5C]S9>L1/>Dm3kV3kY%8B_%*Q$U1Tprr;^7W6-G>tMWGsJW%g>;@Ndkh3,ZA/JULC5u,j>DIH6+;R=(A>U%[_V>Kb_R!nf[`\jJ$/&JcACA;&#*]0/gJr;o5`so%"`YR30HMDgF4O&FZR('DZ`Dp-Qk^Zg_dfm>XV$U?`_"QZ;ED(sW+ILI#((YV9AC-0_\aFHr4O&pE8]J2mUs8drl[%(Np(dRgsaFa%'den/ku6g:WO`B`7,&lAgJF`0&iOO>g+9XMYtaQ(cF2gY[.?_^n[2%gX%IL.2IA21f=5Yl<*?eB`)bO?e44Vqo1k>!%V,spZ8cGX%Z>;b]du4%OShM5*&67'dL=6@@=F@0=qE.e&C3S%WMWe;9RbP%kcJ</004GR#V-,6sR*GAibZE3B%^Bssg"*TA?ZSLe?-J>DO<fcm%<Tt:mL7NLk^4.lFmnrsj)ST0l_V3+9&tE9(AF\DSPK(kI.3@B)mm6Q&(X%XP;o]VF\jCNao%Zq57I,ue-X7g!:-g5"@@Wr1VqlpG%+N:-k7sD<q3P%fWL=jUCN$PVD4p7tmcG!ZVPiL04ic:dY[Nqa7\7/0EKFXee.BmS;1n`^%`8r$pn]Z$e;P\Clh"h^aSr3!35C(!7%eo\]EI[tYrqT9%2-J?s-e=TnbCqi;\]Q7<MmNC`%lDm:IK9]I#mZ#LWgQ&#bXk1`JL)l5s0=Z_u#jV9jdZDVk=fCYpG:X50O<`rA%HKdI\gX%7UF5QAuHF0DNY?n^76Tj%se;L/E2B>U)<S'Vhg#I_74nHsXCgJPa/QM79<UW%fc*LRWkUPM,9Y<<!/s'bk+`c]1Y;p#Z%#^gbEI,so&3C/,Abg2$6HIR>'a)Tt8!Ss;0D4#G/l%g6RCQX7I[Yc$[X#kRV-D!faJqoph%[g>!H\MW"#%d&+_+I*)i;X[,bmosK%ib'jO'N-.if1/1#d&=PVYH0%)g0#Glh3Sa<_ej:=&q/9PYS<I@4Fq/:2$F@6l5I;=Y@^L3%X&1Nd0+,toLUK$2kWugRZf-^(olWo%8d)*4"cI@&9b-DWK`S;$-q6]Vn-H>Rm6bkLi,mS<ifJRpA$n\44CmA3B"sZ5CFs4\k9GQqPKn^"L=A2W>g6E"[Nlrr_6rCY0C05N%p;iso]T%#79&47aA"DS9IPK8>Sr6&@Y!(;u.!k<km?fO;GfWm61ZD)T/uF3X%5fWgm4!6Iin(]VOE6A*b_R@S7'j7B;i8kck3e?5%@sE/K+'aWeJ`JIn:f)>[@t9\?s"M7P1]i8S8Xq=LAVUn6(eJoVT]7D'\u0@9M,K90leY:e%VB=H0DW"tLpLn8YkkfaER.qG0Fhr%%NFt0@W.c:8s,'dsi=KRc`aLh_kk5&dI1!dDepXWCY_`1!#P$,Z-guYn\pF6=mP*_6%hDmoGeL&U+79_KLao/k?3A7cFP"@AO"cW(%dA+5Eb8n``8cq,g>W'@]26Dt#3YtN9[adc##ao,GbR+1<e$IR0O)h$,2pr;ce>O[MnuO9EfGM7jH*\hu`mSEEV4^*UN-\&]P@V*Y%Ah6TVCDD8h<QoT:l>2`G>"C_U$[&jbCok<ug]Fs+F"2n3hL2J!)n/e8\HB5APgFKX"*,2Yf0eWn/+sjlj)1$L(k3'X&a752*\YTR%l#t7OX1nu>lfo#/"GR3d_q]lQR_h%X@3:A607Ji5O5p,L>_)5$$Xbn_@#mMs9H.F%\*J"!$C-D2RK+7`WkDLr9geKaT,o0;+jghq%_iU,lREc)oYE?hlLirp1?&H.8HO^2H82QCGGb6,Pj,8n<D[0B9VUgBE2POb-[KJ2k(:4,YZ>Y=i[@p&`64W--P<32I8:sip;%dRt%5<MH\Xqd!>DD$d3Sgt%dU;%u7-;p\M%a&=`,cs)SKft:603",E]&>i\4Vg%[N*$SF;iOXt6t;O126BqPeR=VfbUVr?#ca,7@'9`q%Z?_ju?'OtoB6C*fge,INC^9MIWLPF%.GhT',R?>'?HWXaG!d`r5F*:1MocfMdEE+MML`>l0rA@l#T&dtTj,$;-cb/=N1uGENX4r0%B]E(Hs3VIXX.JX3_jq#LL$']+*"/j,id@qOJLk"t*q/7g)$(u92F87YPC/JS&elHp83/b*N))`4s'qggZ;"dDg0UI^aL0),)orkm%lsa9P3<]so2rlR!\LNSI\(IB$/(cjF#egPY<F],ae7QEJ(ZTiF;8aCtdh(n).&mSD)j'>1LYs7,e8CG1!+Z)@*LLtWRmk_U%?Q'1%-3KEWM2dp+PMt;W3X=E;.m*d:pbGstd#uJqG&^r14kZspcYnkd\o2bQT-Hb\,Q2==h##F%*27>KaYOb/H4Y_'n1iPYTJ5ss>&=EO%'<5t]f#"r*ms%mr_&=BOp)U6miAE5a>*Wfb`f#Moe`b]tp>thtCQ#oRKr0D0L,0hEDN^H:[QtL"J/Y*0&Fjr(I9D63kcV9tkZ@tI%8o*7ZKki#VUJJJ[HEiE14m-W=]68qOC3HoqJA5rM'9P2c$cK#!bQ1MnK2m&,rH>CuO6c5kTQ.!JBZ@sHbYT\$_/u7CQ6_3LZ_OhT%Gc[N'i0Ye,>NsO`BLN1n4.'Q`Jf3X9Zr?jBdAi,anls@$UnQut=0V,P>=9"@;BVS*ln,ZN-PS]u'YVD-<lBI"pFjk/fY'VVI5%17%G]bt7UgeL1pUgZdc97Io&):E+Hck(%ok?PBqp3L&kRA&-7OcB`)KY8Ro2GH\DJY*Tl&I-5j3"7&R;5$)o.I-%cUbe&]L%B;(f'9R%X6[R7'g5g(=0tScX19T)q),_o$"JaTVt#"=Zsm^cnGJGoh&doT+d5L(eK?GEVZo/E=@8UB6@j^;=\dVn<<ak3)`:P\Nq!J(:<"]*%L.:Bb3oo'bm)_o#HPNB5%i,R&m&RsLP:C6n3aZUaF0BH2W5nP5mFl`tTNT'5[E6sFim+pDPjNd?)tat1"]k'Q3"omQ98WR0`*_rm%hG<]N\d"42J6N-/[`bhuFG9\?U`UHR<u_C)3u*)"mp$SgYg&Wl:KQ0:nWdtoHa.f_b`t.f@IJa73t/d8P'h,QmTl&<Vc;r;GA.bl%]8=6p^M)8GetTHa[XIJ/,K4Xn1gQp,:noeOUQU:t\H]cm1GiNlMN7p48CfWCimm"BiZA&sgk"'UU2ZHA9tD.KM%_J=?eW%K.k7fo%LGb@hW=V@2r"M6m)guA7)d5&L$,KSn>b[>pTc6V:S)Gj0g^NW/)>Rh%#?d-$e[X/sj1'=A$#OeR8p\GK("H,Y0Fou%f.f$j7*&H#%NS(j6Oj"gK(0kK(1tVO\!,[7c@I+Gi]q6A)a@"g4L!T4!!_O!36dff$6BEb:?l%BEWi<tN1nin\UHVo8JN`0rL:k>f`?$T?DF]WV%(?[0iO-UB+KEesc"GZ2i<0.L#Yj+Y4NkW>uf=!>X1M%6&,Oe7_^1RaR^M&AT,2QkcXNoat1,S@/(^V-I&rr"1:)Q&<m&C=q"5SL6%?_H@U%[R(Ja(T;qiSds&_Rju=DTEEnE6f]*]u#u:;#?>1%!]i)F$<``CM2:p<JPM?A3AP2*p"eo/W1hE_oPm/(p$8?XKrS72@="A%$*g`'Xm0%>#[eCKXjY&0`XKV]Q(%!6\@7@M.k0nf$K9.2/r+NA*r)B7->ROJ;!KCRIT"M+A>)p15k?b6KF?kr!H^TL!M^Kbi$542%[LiEZi%O!JYn):GN7ZQg,,=**#C^NQU\Mrr8BYaUTAc<dMk2YaiAsAFFtgD$#8,hed]@GTD"YKGH4fU[`PNaS98DH_6eZekOKD[Y%P0UaF<EJCgZo-hq;dm^;&?I9X&N7UV`-CDhYuk9=bdcZ&a=,T]LD,-I^CWCK*tX@XnE-;!##@(8BFnge&s8Re9(j=%g@#UN')&'R%;Tr5:_pso@4,0IICBN]Ti_hjmFrKD,7[OG(Eb,8AM`jIe0ad<p9aA,cJ'.!K]Q24r#9<N:.Nu+#+YkSjZ4)YHGUnu5A]g4,ZWfu&%f9Uc!.H8'[:[MB?;d;EF<tc+`L8<*@OUpq#'t%H\%59/"\cKBp1c$k*9g.\ZnK$9/?W</#`CXG4DVXhFabbOZMk&'uku_L+cH$m$%R'\LIYi>>/.S@#PZM]Vq3I/'/=r?G7@E7rU"qrP)LYQ$V1.aW'N1A#+!*Tble-rW=s!$0n*;Dt%DGK&un%$\?9#@;&Y.C,89C-9D%jJfO]WPk<n7\H\pPDi83E>1uh2ssgT8S,3<aJ$167FT*h40h>!<:Rd;qBDrM,<O/#ADceNHhUH98=EmX+^@!^'50/-"Z[8:5Brra%Ykc)D+UqONT.qei+t(&-4Qb<Z%j'4A3oMF01EZ&S2'9h)`>sKB!+p2`ALo!#?:dt)\bu5<l'KRUqRTcd6_XnJn\.u\W7C1";eh#i%83A3-giPSm!]s6--:kO2HC5bM?8OO,L.)?,^D95q9jp!bXb2C^9rFS5:1--+*X6(UTS:$d(,k#DL[S?pJVoCpZ^WP3^!<Q_qHE:U%(95->AS;C.6u0XNmr%fCG.<VsqA^uVDsFADkYD"r1Wh/:0HH+ka^aOgGLF;Y#Eb`u<RB9J06:<DA!,g7EEEe`*oIOTB>kNbE<P`C%O%PeOipo/:BT<lL'V4_(TFb58Q&hXLGT<:l>Z&gI_B,Z2g"3TPJWE<t[95%*;Y>30"M3()r]fi-A_34naU\3"q[Y\!5RP(kIm9_@%H$X^)&h&8TTlHnYo\_QW7X"n0H\L-Vb9HY?36>bgCSEF\,Khj&Dg-8HF*fPr=I]Ns/aX\mRcB5#>-5EDP3UgIk2\Ol@ZF8pm)L_,%ChTs<#GLkdHh=MM'fanX-I<No2$/.!D>iJ:B(sAY0TmT$])e>P&mC`qG7PVgD;,&QoO53U<U>:g?Xd2s#ckC@ZUEKpmYf8O;DP=V%Htp='f'cO/OMs::g&N^)A`<\qc$i>e](L[JC'7n1SLb0lpOTH>1Y'T.i``mkYBEpRc@+`'C(.0aMogff:tOi(MM*6B%rlV?dENDV%[`or)e]53Eo&Na-;$7aC+O3K7K[JKA_"LX-ND2u](r4if;U1Y\[r</[WBs<CM"Y%>X`f'+:<^l7F8h=Xl[9F`!U>q/]&mb3go=;b%EPP:jPKlB5:^(5Lrfbaje%i8(cFCWWf>lsm^hsQNlM<%"[$NB>r&b9+LNfPY0>tWR%KHKpc)!1/1t:ir),d@YT)Y';#;hM%RNWT"%,Di#.bsJALYPqPjFS/jL[7P)4Ill#gS#)9MJ]hDM]TB%h<@XLG,i:sV"cVDIWO6haS[qn^j]RTpG*ih[KDE!:eRH[I)`cXL>5<rm%,0u*S%ZT1=1S(OB3!CCbp%hEk%NT$Wi(c<&XqoD=>$g\T?k2HthJt^:?>_k&f=*$Mbd1\J;/lCP?TS*FTKT3Wi6hl^3l=^E0pRQK%N\;QH]#b0R.6jlPP&7>B[+S*oOul%CZM4/;p;!"C#1;VH4bR^0b@Z"T*r7Us2i[kM8^#@b5.X'R7a?cbbM-K9J./e.?UA4[`_oYJ%iQIM$n]h4D&d*K8X3;h_;.a<%rY5,2-6BV2f\:G-NSSGPT][a(kX;o;0E-A#XFa#=@:OL;E>Oql/&FU*H=sd:AabIA^0lJi<D!R*%4@VI.#UGp>+ul'm>)\mmZ<hkrJ6?Z25,`Pa/f[fRYs"b^hcM#X(gN<+YK&jRCTIj!\;G.\kCa<O+;,4D)!%o=$]0!am>p,cCqb=A%"Jc]*/1:87lie+DnUb)&oi?e4$pPW;<J`_a+?C(9ZU#']QgNF[$#K_G"R;?R/:M@B9Kd`\s5+k85gC4(F`O'dU=BR7\bRIbj>OG#%Q&0-cDc2%:<&Q`t<-r7r:'TDJf&NJD?8%^#UAo3?i)I>$=XBH7.,-J9#WPEcocI,MC=b=Uf@&51^`7f<EfK/O6k%_#fUrjAZ9Z&o%Jj@KPg')E3(<SGeH/$i!cBilKf+e0\F4GQS\?'Dj"<0JiQ>IcQ?X"l@RLtlI`8q-C%NAenb8,.PNU?'*:=O=iUeeGMF9;V=8iBnX%K.L_e_i",D%=fI,#+BCB@s8^$]Zl#.BKmA@ZU.[UfHtC`b8W:_1$@"9E$G4FQb*>1-F\La3d,]Ka&BpkrkJkVf;poW%/Ef*Hc:$<%oI:jp-_?.3Do,$-8E#bt(1'f+='hV]`nmRhlF,)o9:V!VrcfU4JThcjLp4c1bn0eO#Q!:l.Df!*@V1\Q=d[/mU`C08C]F^tUj\C"%T=X0;T0<M\[4j#'K"?r*H'N84n8uKnGd(_hf+QC6*IENLc4>t[S?O'Tmu;c_<PEA9lZ9/JphGDq(tpVipks.k@Y4WL4UD)`+91m"%^]'l*qmW)&]EcgspL!/Q3)k>?s2WD*MO$9/P']f]=(NO2kTkYlON1JM1-T%Lq1a87j<$D*-]c/RQT/OE3X2&(lkn-]K5;F`a/sIS%Zq-O5H>KEV][I8&Z@^&JB&Q.BI5op7rA_>+X<@N=YYGO]LYA1g*2_LOYrDVE1#8Dcm\<R@LPZQ>=tqhMM;Ej>Vq#RS^HF3l*S&FW%LSen*;/$8:RgnlH:_B3+.Hj/0ibctF'=%CW=PN0H\290!SN25jd/\<,&\Z0WFlR;f"Dg^YF&3uhiig0O7r$-<\&\;c@4#KC@E[h8%\VW/)SQqBC5R5]@Z0N_k@ofIgR@&)j?Z'Z_E=ref6W!(&6O7N?8'O"4_p$(.U?gaP3.l*<TTf-08[*GFk,9=%"7\A6,gHg"]p%8p%iT+HY,>PUgn_$[<rkY6SrNWGU#,G!8r%u<5"#4^YT?FLCkALkNe;6c\;.>*b6d<e80aU,Z-bFQs8TM0"J08d&RF06NjYYnm3mi!b%S9Q%#am!]dc/mhEK"rbUY(g?t/hrp\0/(>iA-8n/0WrYnj(=4a3-fD30G?&3MB>5(ZVGVpALFA21bmHq#J]YLpHD0o=^Orp@.Wb?%[kro9N)&@\f\_[t:#kBum+ods!;NoBmjr.SV'[B%[Oo'k,Us<&?o];f_'o(_X]5qgD$f3AP"9]9:(8lrLr]>=T6k225qHhiJ_s7P%*I#>Be=UrhCDShlr?QY*oW"+e7+F,hAV2sCn>0="2M`<nJ,"3[&nET1HaFb\C]:fO7a7;P@5Ki,1.RjuCE[1=qp+[%-56ue`!"Ka%NToGjmi[hZ-]u?!h6L6k,u=e`dloL`E65+%:NI"MBH'A.:Zo[6FI2>2_saN;K=/Usj[nT?]!0.9.8+Ipaee`D1QpDD$$KMg8CBE-%:!C`IatoZR9.Bb7<R*b[X7F<nBHq,n3,7nd`-/;6^^[eHWVaUp.h\CTX?%.cSQNXl'u\nf'J*K=-TAIMp=js#CCQu(akVB:hi:_`%Aif[Pi3^5/VSCI&q#^*-M3ATgQii01:^F>dD=Fec-WT9]n-Tj@&"U8sFSDq&n%'Qp?DYF2:c7[(]fR>XkEWNO\#u?A&1)M5C>1HC%h_5FNPWJUuVGqeO=rDWT1XAN#-tsbg(W!ai1Y-<N5qZX3g`edm.caX64ZMYl_TBcKrSY+0Z@0n$htuD1n7=,;%N\dVK#2_SI;<_@%8FMZu!tS\/ZMT8MNCWI,<1'?@%!'od_>A5%_PB"jUC;R/\o9$CQ7Lj]MXtQGnjUl)3f1rhbjq3L?$m/;/<JfsGN(6(Nikc;7[Y7S%Ycr9?$OS;Plr^542R*j&!tb(db*MGd0+LfulKf82>n]3NeZe*&%/<9*=QlhbG5>sgUjr*XA%t`3JCnn:6p"L&rDQ%R..u#(4hVB3%_mA/i9TgDY1s'0RG]-M%,6h6aT8)6*$g$jIKMi^&M(*6'<O6R&\u7pj1K+i@a@ub95$!CZ[P`[r*r)E`R%`Q_\l8f/BS6,d%E1,%%!OOBP)i/8h`uK?M15h\_dj1%UU):@^^]0=iA-H`ID8h.fco:)-E8mHcJdq_`h+E*Ggn8)C2Tl,)*/0%/5qr5d?Mq*hFr=[=C>;Wt%%\`tdiK/:kqaTS]4"e>o4;bjlV,K1iKAiScd`J]O@eGS7ipI4h@K2R+**W9A86s0uGN)/Y2mms9@!nA/K,bH5+QG%pAMIV1hYOHI%ZIDWY/\:4gi9WM8[lkuPp>i\m8lepCY46'3O;gjoN/L3D<gNFQ)(3aDmV[A\JU"Lqe"M.1VAaiE>kpc6!2+mf8;fcVdEaY*)$et9%P6-Z*j49(-+Bpl/Li`@*RptWAkaf4DJ-"+.4k#_\Ke$umUr^U;f+8At\C;GKmCuB#r4''(30_'d40Xn!a])A9(j\HbM5fU:-`Lqp%GEpsSo/mMjleCiZ"Qua@''IhXGXS!MT?kuJC>uJJ>d!u?d`J)fO^g=;7.9`U>9mG4f\Eb0<\jZ.pr3C*`^G:9[N-`5P;d)5<E]OG%l`tZ3qrYm-%qXen_'lSi<c>7O9IXh><Y6Fe]+f&_o5oN895#]RPZZ\CRH3X*/dL%YK]58NX`WlPHS=e%1FU5%;,b'kkWC)fRZ;Uq%:@s':<1m$:`0EktW_h(d>C0:_!XtG09,Zg,9Lo9+O7b2mL+_d1d[>ima__]e>?D,U>ekp1FODdVE]`h7+9.V>PgKiXI/Xm:aM1</%^r'bMU,bdrG*NPHPW;&F=d[s[4.=%KhPg?n%n;\K_!qSPO]2hZqWDC"27OUKo0SraNfK!e>:3H<JAMu>E@:6_1$YH:%M6gdRb"4P%4-0LV1[(=hBqCk3rPjY1MYP1o>mQ@[CoUEh)3fCi`keq&.m."U_6N.j]%7_'jg2CBVD4ZW>kW_F)Jo%eJ-$gb/'B6&f^bcuhJ4Vr%^i;n*J6VQ.9VkZSQ]ou>-&=Ug]ocaWpn4sNLk=A/(7\Qd*)RZ;YV.FG]CSIi\`n+j4)ntJrp.4ZH"A_cQK-)*[!KqtdAh9mhO\6,%OeadX^*6$(m6Uor*OcKg7fuFU&<k%=j+:-DaR#2<!HOOV7e%Occus5DT>*P[5g2gY,TH5RI$%ZL,oQ\T-[Ie^'A)=BQ,7.#<`UDu%.bT(l\YPo"(.>D>a`0+V>`('_oe)Co=j4;2Z3c/N'9%ZsNmCK/pr/L5W8FgY>Eq6LoMh92Bke*5\S%qYP6\CH)I4NX55=m%HgL3(%_s6<S2N?gmD**JCBhQHEKtY`h'/hstE)M/`09N;"X[Xpfn=:Di!NIP;/?YmRC[=rD8h>8#]9d2-/c6<.,_Zgc<"pQDKf#Nj><GW=%LW<R/i3k0`idHr*q/Y1NhkoZ&)$SbGrR_GhfAq5@1j';6e^IS0]6UK[9QW-%E'+CK%QtJ@i\k:s&T1ZknNg`pRag#)ng/6kT)NQt%f?ArdB5"DWckc@R3"Q=b>->e1l5A5)S-]Gj\<k^MN*Ko&,>/4Ci(\2+B5%?i76toKq5+2H/FoQRa;18I>t#$h!^5=pF]+N#]&9dq%H?@A6:e&YoEp.`L_un`fG!4(sf)Q5tfXRu>hjmPKNp"3HiUY1PJR3K=-EJ5ZfERudho>dcag;OR2KIfO(XAO$OBL/XTM%L`jq7FI%l)GEJWKjjT;]79kha#n?)d5tO4[o3o3DD)"ZYG$)P-fR3@5s(?#n9WepI`gk:ST/P>P/lp7c(qoL`pf$I:7R/&@puDn]S.RBuab$%>%PaE@GnqCEg2QG0AEE+pdj%Am8_n`030=g3Pd:SQ@51<>_l=jXV7;O@]`hMMJ1%t6/5I1\R#2`=;hK1>r*<BUYdi5[areBm4ag9%AMGMT&nAZKQ"/U62_US?k*$`EEp""*aae:?Ie/C]$c48O,lqW$8*&l-mfIcGaq&]sBHcQ.[-QpA/kaN"Lb#fk1c`$u++K=BY[)i1%D)Tr4'VnK!iD,"`@_aLu&53m29AAgL;CVs9GJsal0,l[hSCh!edMd(-mP?iIcp$jmRALWR#R6d<JcJR6me`^nB^S*4/"]/6gfDeE%`<_-J4:e"6K4#\Kh-!K8'uRKeS==^B*,/DG&%iobg&k#aq'7I'_OO)5\Xqll1kgAi)`_G9Oef_iSEA3DE+djsPoOf]n'+5\_&3l"%W*?&*HBfX0,s<HKL\OPjR_0TNSrgWdePGE1Gl)d2b7aF*[Mb4j$hBBo-S94j-dp9o2/9<Qe<ddA>+!dSm.ohF9<:'TUDJ@'LbKO%%87hQ[X`M43-7@,o-#75/,B^PcfD0c"?NsYEJi1VXnAN4[RE+9feoQ<;2,2!JlsU3'Pims8R`4tE>D^'+c1$uA'CVV@qTFZ-As*kO%Z6DCt5lJMC+7`EWANtub`sJ&mdjs^0KLVpR,l-#.Z@cuf]&o_CIK"[^(`+QJCTbaZYkOu:9e*V?ib=:DL/$a_Gd4>=m)TUAA3CLd%EY&0WV7S2+95gLMXSj>Q<sehX/sBELKu"G#Vl3kMQSP?I=Oib^0M*Jc/Qec[>"S\'mB!aD"N(_W.EV0rg($i2:=$^U[ks<%/d7%5%L5?f"4VZR*N+q3c1DEt?QeS1bL(p\t)/*bVEC>.9F6D&m<lE8(*N%lL(]U]%nrpQtktkS8$o%<%pU545:8`'Sn1tABdtqDsU=17R%U:IA(R@')$X#]XEj7p%cY0DjdnZH(iHcp,3>o9%n=Ra!D`5B<@R:sMK;.?Au<1/d<2C_LU25l3,@!5g#+,YV&cs;ACUD"/RO3pKF%$h;u-BCZqG7[2]:)E5o;Ca/<2nNZr"Nd4Vo'D\c)no@JH`**jQG"k=+N*I5PW\o6!nQ6/`6h;=$*chi8eK+goWlWTuP:uKaG%23o%S6_=H$#/_[aY+\2CBe8_=7:X%>%I"_@31l4KF5,:W<6F0/fJlVlgK=B_\;qT(.Hp3E&Wg!)0r3?\Fo`5X;(j0V(;U,O0'C5(.S"5%LYp]55B>fb`*rAZT8c,uIm`aC??4fg7`O6/X:B<0Zk(ZnI#6!/1Op2MHa$=dq%gnS1=HDSZC"](RGF!46"0s&4_:#`S>cZ\>/WBf%Go\auS3bgP3Yq\3r3\0C9*5"=C4Xsq_K*0`$?ER=oek'$5r@WnH'$>h]c\E@:5%H]F*-Mn\4RdZZoGgtV0kH;_U5J[4A:3"CJ`NZ%41qd-6%ro_4k>C+,#Y4&bXr!-3h-]j:tsoJBcXM*IVe5`,-Tp="s5QW]m=:Tmh/QoB@@lX<?j/A'C9])4@n8,AK?bQ:/0t$0*<oB%\f!rfe0Zin=GnQHH8b-2&(0*s"X"TVYRo[UY/-8/,KiAbA7gX"'4#;$4i09MU_Cq-;q%I")e<,ZI["j9Xe%48:n'1OX('d_6Dd;"%>!3Ocd/QMi_*4uRlnU^62!+^YZo#dppPAI0LR16U6ULEi)Qa<]f:]7q'a)NGfE7kja_+)('L;Q#&t/p?H1iOhF*g/PMfHcMRJp!7%+(cY\+;QrX]mY@lQaNu;JAYd=+?+1T=!ZI4V/+G_2eU[@4PiiY,YoG#HO2O^mHGWdPjBC;495gWWi/?T7a-CnLh8kPZJZ-R/=:4X%2b\j.n/-Up`t^rsQQkEnL*s_)MD%@C5a8`n!KAOg%/h`CqT(HKc(Dg43+sk!o!`HQp:</MB?h-,GWtK?i)X1*`5'(0=eVZ0c5.]]%3lY,@aL2e$UFcOg)!MYgl\t@n'Us/d`*6q(SP?P*7A&/1j$>'785LRO&lU2W(($Ag]Ju?\Ai?<Yq-tY_^\$Zd>=[p)kihFmg]_G7%%>Xk>A6B64r^t;BJ,L8&.$iBL1#p/e!*a*I@MLun?gAk=%.[/oHa#I'94UiKEcMLUC/I8RZH!0$m&/=Re*c5Yo@T\onQu[A9H4sr%r0NnMdqc1r4S(XECl=+dCp66.pG#@Fd0bSbNW=Im8`^f)SJqK;k+-jhJ_m:q\G(Y(H,^j%#cFBU7"7CMr>EN&f_qPkS(2NQ*cdGL%`=jhKUaR5MQ']F22s(AFr"Ps7-[j`bSPgY?7c&Un>i"P]*6=lPU3&u?;jO<78$#HO6&Uo/PPR=penh$&7>Uf11i'/mLl#OtPZ7OG%Z`YjbEM=Z*'nLrI%\O29OY0=:([!p_ni-`R]1,W-HOStne=#7*mP*!O8X9t:@4m$nNhL%ILlQC5p:j/D*R!:OMs6P3D0l,er#*gi%4c&6:fEK4AjnGu'@/'C7\^=>hD&:uH1SW)Z[-$]tXqGYBAk^Ci9N\P(>^eH*jWA"9\uZd$qe,<>:/i)Y(JiR8EiqO-=kWMWY)YSe%k5cH=Yd<ldF@B=AZB\&(@OA&fBlD`6jghHfCc(`!*l\^#OHE[akp-i.D8h?6b^FXYMau"3R[*SYNM@_@@5G0aH-I5a@p+XA`0i\e%*Ga:Fc]]!&X=0[;`!T;*5tNj"ZRuPdc,)c+a$XiUq_9Smm%=Jjj"9&bn^@K^DS,7&Mnl&u^+eTeLosrl)tsUZa<!-]*@+G8iI]g(%=a^tR"u4](9fR8#`AcK\MoV%^*)J/]99Y>!i?kj?5j+4!;_]bm?'^%n3;)YUS^rHqO&`P2P:6Oe`Q3oPL=1!.rKPu&\;e$C(Jl#A%o#*mG.$ODJ9Sqg@U=[j)%8[WF;!FAPf^Z)fU`jrF&Z'`ZEXjOPBIL.$B!n;uRPNmbXNr^J`2/3X>Z3j%QY_06jNPg[Z`i.KCdb,&%]Q$_KeeH_2?$4f.Idt'^VR92*k>.7>>PbqS/Uef&1F+]fVULD(FpMQ\n9<m^CkK9`R\^VpnHBN)Q4ZW%g9Sk_WK@pQncgOW6N)uZ%_.EVCWY.MTmbf`tG7%TSf(Gk2f0OPj'2*s5@AcMN7sB<Kdg?bddDt>VODaIaKD9#9"?_H26j.4tQOk5_G6gqs)62]3$Nm5*-<@It%`'1Y;,bm?BaGg\o/iD@>Zs;sXB"S0,c'$3+2GGS!QLCn^o%$C&8G[<$%G#XBSmN0fbD!u11o^7[Y,*&A0]q,5-u(SboaW0OcNfP7%RcnHB@`h@0687/>OCN?LXPm<`4)C78guPX]B9bXMXr).QGt^#!Rrp5s`/&8lB6@SHS%RPGPN3?Of0\/*7(t=UZ$Mq-j;m])XV[68%g$LEZaBm=Oh<4+`JpHJWV<VSi,b8$>P1E0a>LLn9!Q5WE.XYJr%%jX>a465gDW,_]A@O4B[AIbh-rqt)l8jo7(Xj)NFihV\V(jUA%QM_5Zj\&i)V1!X+\7-<+AWA&@Ag&QLJ,bsM_4%f4.9=[p-XS.N2Q<p'\ga`<pX6O/I]6BCS/QB*\^Xi[qqMpp8Zg"&k*)5OW]cks%%)i8<<-CY#SlM!.+k%rX>.J]X9!>`X5uI?^!3@Ctr^HBM1(s6)=TZH6WkrEn,rt`_-g-,3Iep[:dldGC$\,<aX;9W'r/'i[QOK0g%(N(oQY?5j;Q7SUR&^*q5C<^crA8ubC0t'V5?@u$7S8]COW`IFdlMBPG=ub*#:=(4i^5#fNLl",I%K:;UT`")8kM(eEnt=8+O%3]n%Quh5O=qQiS%fm?NX^GV[]p[f^o8_3sJVGfG^Qh[g#YHd*bA*gt;G`apA47k7L5npBQiMaZ,Q,BY7VHJN^WN1C\MdF!5r)%hN6G[u%%=gQdo:aQABiWJJ3RIb7BRnds`)@(V\MhC,.kTBm6rmXLhW1LfFq+8djB/ag'e90ZiP>QW>MH+0NZP*C+>OE^D&bX*9j4bp0@*K4%e?)s?k;=Zo:48&0d-a@=dGH2^PLO89Qd>`6&p>'2OsM[i8Oqo(VmXBSb2d@IYV0UDJnA?GV<i/5Mg<.+[-4iLa0Y?PJf/a+k8]^9%"V-shl[5c\]O.*-o9@JL`[A\O9?W<SCH-qpjr/4Sbp[6f*$s`s]!ufr@dBL+UP,])P#aF@\aa[@VAh?UY)?F1p?g4"mYMo/f$2k5%:5\r!*YB1)T6uO?4YNb\#J!87_qB21D`0te7(eL1$1#Db3n";G)?@NO,%-\$46h6".t;tJ(n&ps&dR$qjVg1YXSK0C.lD#+!QP!'%9)LIe1aREG]^r]=?oF#?;c;!G(`.CO%"q1uqLTBohGO_P8@[F27;D&,:e>8N46%1/Ef"bdY&ms=5mVa[mXB1]<DU!Ce?F*G;fUe)%;9l\3+M9%u&<&Wui"tl[p%Ct%gMGJ(A`o!QN_Ki#%rB9iUPQZTKn8XY^4_@5k7u_[iB'Mh_ih<QJ]_r5m&NcN&&%`\p.1_C9^`K%%_#>&i`KB7^]CL[MWU\Rr/n4U:L_J9eW=*n\o`m-EO/QOQGQVaB?/+m7'#FOp8L:E2m]gjlpIBXoN1G&GC\O8TV(*-]DCK!=>%L7P%M*&@6B)9"IBKa!8P`+\NEm1l]iY2s%YLdjY,0&4aoC+ohNZ!Al:9g;92Q[rTG[&$Tk_WJ2L1HXBQkqm23GcB0=L2m5a\X4B`@ilj%@Zc@_%8lBE[0EoWmQt\dM_mmnRt7<%d>6`t#='/_OZfOnUTVN9qM51/QJgTSIoEBfqi<VW3Hj&T'a>`\:RV)(=g$#+*hf4P?[p)*%f*4?dRNto]FFT-_[l*[;^bpDaTPK228^m9ISI$q3QES@tKSt=TYr:RAH2RJV),S]6&4_+CqTFkg-3&D"4t4=4Hr:'A!p$Lf@o']6%Hli/hG*t\(=oIF#3F=&4<idO*>_47L'jIM*e%Q>:.l^%]>sZf/09Q(/Q`))d@TD9G>k'\l/)b22+jMCV$JP[Ae"Q+7KdQ7%pc)ne%Q#ksa<6WS7r8O\ZnbV+V^+>BE8m$JC"fg(S7>4`9;)$XsZH.hJdN0V0`l@C$<If%DA\[=[e[+d4]@:*:*3O-7f-upT,rn7'b527]%TKFHqeVZL)]ZUlh1bFf0-V%RtZI'Mf[>o"goO-N(l1IN#Wb\UP_\BY^<Q&>PRRC\`fM<6M2V+9LAZ!1!<d<`/'I(`8VQ1n".A*JB%ep>Ua9dRP4Kcc:XMotlcN5369&Jnd5gu+-%qS2%Zp1sT.a\5P.o/V^-I-Js9.sX%S;#NE@G#*I]3b+AJ"d/F6gA:VM-?(rs&ljXs%'=ilT9p0H#NP@4mF$*Z)7T1UWr/RR_B!Ws7mM(XEH9;0+\?JXo<Aoj(oM@1a<S1L$dA`;t(AZ:"Jst,/Q10n&/Vja<lDStt,)R,+%`rHJn-C?BCH`V"";0K&],^Jo;o\<K*=8h+Y,A'd:B$CZ_qkc&T?psWP;)+_UTS!(^IP%$)"NNPj(AFm&&Pb\=n!H&]'3F6Oe6CfT%,MF,gWR+Ej(PNI%*3II*NH,rK=mKU0Ilbr-qsrRjau=14^]U?Dm;HQs.F+UO>:=PfUnd.f"Knk##!#LT,[X`[Ye!Si9?PTDY9e/*%rFeBu<cYiSn3T*[WJndffI^Hr(UsX:jU[3]o;M9STol;agjW"&<LL@6s2'E^?U6=:PFY9g[4,"bUsN)JP(cPijUfsp133@Ka7]F)%+2NgKg7FYBC'p_D$3`F?nOD!\IdoOid[Ks5B8c;Bmn:66,iG+`^pFP_-\=;h&2LAS.9s887GC=LhV=LZ]gu0A^(K0tnCd4V;[(9g%^,!6`CkMSYEp@??>ZP`A39-jIECQ"Xk;'@"E)gr&Ub(i*^#d*p?N_Vuqo;TXDI]1a'+]n7ffA]8`g>KRllCtQ+ZpO>hcU6spH^cb%g+$j)e;h76p*;+8HfooTI2s=MeJ@(WOE9j$-Pc#Yj&S&(DFK6KrDrH(%c_J@1dIIc;,_fqQZD:QpZD)Cld+4[&t4Hn3&F;<-,Db!%g(,N/)7etDhZqQm<C,Q^aO_6M*=8f:B"bKugJee^(q_ZaOofZM3@l#0e@\4IpDb5M*u.E8I0Sm)P`;:HWRJ^c]L&04m#/SS)3224%8bFs7l[7n3FS;Md_\fXO@Alj(^X(iugtJ`_5=aecP_lEW:V?e+3DfUtCt0%*mIJk,)_)jK3=>UVB8MN$'stGWs+npa3_BP3fZ^;*%/<T^Os8"itr8-bd8i[D7RP:0+2>VU*ArePLk!Tu1YgH$/]D^(=Z$#;'aOtn(02Ya31VFe[h/.iuC+%0Y=C@j_dJZJlPU^]bF9WZ-%0t',Y$X8sml>6U#EJ,f<pQ6l1`bg\R/s>_V_7+'qdYCN,c,aj(;%Ugt!$+A&l<c@%*Vp.!V?V:9^cA[]f#kA^\[1plAI2.=Mp+c%%J`5O#b#l(e=0/o;P(;ARLjI2ZWNQ6pKtim/1s5[u5%6>@]NtsJbnip!C9[.jLa=d@Yd"JN4cG;%K78,'[3"A.VR$oX'gK-iNl]r`%cDeW8Y`ZU^TVe"[@Y,8m@3dTP30C>^T::r:o2>!u+87ULdAG.eKd6&@B-UCdj0DLi2,_>_*9@Y(6-dkje%@i%q7JVBWL07`WF=qj%RUfaj,eji+dE<$5Ca-Ub7Ih?Qk)S&e-?a6H%Pg:[`*G4gBGb1=g%_Zh^%PrX\'7HC^X(g_;ui?O<[+Npp$?AZ=B)EC>;%(;$(F'E%9?U;\e"@2U.s:5H7WQM7DTcoZfbCX6D\3t4+q=5B`6S+9L#\ZU9G4D+L"rT6hj=u=Z*&enD?lpbMMn%FSeM_XQ_"U2<&"NAHAq\Y%"&1@=EO+e9dOFaQPKMZFbO+\4<].OR?O-CS"''^EVghp?oRAY*iCet#ZI!dhD!$1E8jcn?g#N$+$/d]55Q;+bDLhWu^[a_er)Z_u%Z00*f#H\%<m#,CmHOMZ\ik;))@0A]?$`oUg0CML1-&b$0m!ntWAOg=AN]Nk]S29s8="ibqq+nfA=uk;DIW'LR]K+34q+`ad5b=K<%k\8@`8]2iE`-8pHRRA`R!S@&Am1eEPNs_P70"<0#J4SmJ<bUG&D#8t'O.5[LESkU&)nuXfCL*;+o#SBqU:3!FBj3B`\qo<_3HO"B%6EQ/;,offQY,i<6$(o5*Mtfpb!AMdkgLXN?9;;R?`\:?Sm$ba9i:W)WT0L'GPK2MVAu?_H`T-c>k8+uhb-;>(H"NU,=omc#?"I%a%126JT?=.<b1-[Y;E9rEQ(Z8)@;>Fg-(P\@C)l#t=UV2uUoijdkG;R^jW)eb=0OJ`Hf#[%a+#2q/,h;e#M#=K2O.6*m_0A(1O2pY-%?gL%Ma3+DPbgS5^T?ZMC7+68<8MnX-1-oTDfJi?^JU[[Zd$O$ak!,1?Q>,i$M_k+?Z@d<eY[<\ki\0l*!e]Y+X^r"F2ol5p`9q[W%/:Tl!r4\<Fm$]H?J-JB0>SR7]?\lu.$ue9/Z.6>4npIUS3J3CUp$lSMFpr^Y9p\"Ma;<])n3?F<Bg]Vf]7a]#LI1]ZdnbL,RN'_,%i:@!kXVFlILUA02;-Ro:W/a_dXU>OK)RCnTo>b,+IU)u2g3k/"?,,2$F`UN4gj"+76X7=K^rhTjY0XOiV`ja4Fg]bKn,,9f[Dt*!%FFJ(nCqSLTjY0oQj2WD-^?)YQ[Q*R@QiM^(`/Si4j'@3ac2i+X,E<)7_hjOEnIDoNmn;8>QUmQuWAPfHrR*^UhM,:?-L706P13,0%?fl'6!'.77'n*F+O/Lt4gcV+35QA61%TagunBQ_XG(%D6m#+/-Aau$`gH+u7Fu$Mf$W3Eg('&XYFom6bFjrq45&S6dDVb'[c_5_F%6TfLUVu`fS(ur\>D`YO2!*]p'q6b<=#<[/b+B>(7!8PnVUIkQ0GM5WQYQVQ*bI9#OHl_l<hiGC8r:Ue4"?]EA@H+abL-D)3g6N1A%DR%,!2*/:>CNlBRLomhh[?IPs47M_)[nS?+O.(1s)nBK8.-E%,@u8^c8+o)"qI*=Zo]4c\^SLXH7h.=^:+IP'dQAL9cC?@9`U/>U%@@in8b3L^=.$aj*qrQQN;"O*2eD!RA2P39u]liA"=Rs8X8,e"E=-*7TGQMb&];`q3k)$!]V$XG[[=(p]&g4G7Jf:YeAW7_k`XZ*7%+ccmh&Pt,6X=!HR3OP/GQKu!`n_Vkp1RrQW5p#PWH!SAcHuBr;Wr7>Z+1M-:U[`Sf*Y7%c^Gf0g`mZT@"Ol.kNi0qMnN.U2/KbPT%QE'U9bG'-/(T^YL,$<g=k#ET1H(k?G1FL%O*Tl/&DbDHT>NN]uf5J!77X\7qq/.X)4p.IZJ.+9O\c[6,bFMm6]e&K'kUaL^DF`X?%le?E)4BUJ\_T)cUGdMBnG12^pbS/(m"/DKsjI>Nmojmn=Rj%Y/8^r\(r)h,B36%oBUOtsV(gkLmg-G](8fV_aWaZ,Lr_$f(8,G&k%'".OXVXaA^Kmk&Qp,]4MM7MaJ14^]0S^4ZYRl?Qf>>p+3qT[uE4D<&2o&9AXC!*nBC6'G2n]86g(2n_r*n4Z,o9k*aPClYW1,"0=%q[BoYM8kP\Sk$_>>A'(@kCjTK>E]>ekPRcuZUM7TlaIU_B<S(r=ObM&$8RKGBBsu4`nS(r2u2u+4J&'u;g.HK\)k^^qnS(ZVL??i%lZRh0AFMBR%&WALOR_$^4fY+uMSX['Y2<8:3dMh>)[8NE`oFKjCiLlJQCccWc8,LB;9n]$T0YdHc,F2#U1\ZsNJ0t.OXhEF_i)*S%0%JZH<YC>RTf]O>=:FLq,*>^>WjdG/)m56jcu$thi3pnjI,C4O>&^/>>NY^,C6\q1M7[`*QG0pjPsUjAcN8,ma!SY9Y,>XW\fYPZ%c!%hapEP_?\bX6j:$ds6_V.^U)rgBY2mT;WZq[G!MY8_H+44D>or]k'LDMoFJ./WAT_$MCGpYe2]+CU$4bMSZXBC:G95Nf]il';h%W[p*G'Igu&\gY\)ogCtT&&HM=b#A#OIJYk+a0!&rM&SOjkM)QB2dX1uanJebrV2[GO1`-q?)ui,AX)j0[&TlsEjJQoj;C[t7%V$c%q5if6!If@4BHI:uf1t*:SFei6n?L`C3Js+gf^qPAndK)3n>eORV=6^N-jIW"\atR:R^>_s4Vdd$ruY%Z_l7r^POC$uqXNt<+8L$=%km(ANnD+Rn4^2/YlhXs,ae_[O.Tql]Lq/@jBiH9eNu^;DO_T=B>U&YSILNN-YcF]7$!kS-:oS,t1,KnPOtctfNCj+iN!Z/%,FWBY%,`gtPbI/`uo$#A7TTN;tflSFd0Ut+[5N6j1Z5a>J"!G>5&'ORLH8pM[9(IDh?U)89dN^ig@D)h8l2]Ml$00'N/'YP'+Z6@R^&(`G%`6hYfrEuF>^.%RU^843:>?Q,geB0Z(nS]FA-XCJq:%Yfl+04j$c?Mhf=tde]Yu8bB6-M^qi+<GGZM\nQ/qV[%pY1PG_YJ*@+-4O]%H$VMtY=eA&JR:XUji'/`HfVE!btDUD;n\:MK-5U$<o\FNp*TKXoN39s)Vn?"FZU)XFPr)XR`>BAXN%6n0ua]'\PTBL/aW5_OTt*X%3$I78)q<F-qpmmW[5IDE]F2J+%789Z[E@rTnDdr%4>upI(+SllD-oNAA]#b1SpB(P!p?3<N'M3c$tnqe%e[2O1uc>)V68k9JI1Jf%$A35hJZf^tV>,8Fqm[;8>B\oZ:ljc@k_5KLDQu0F<g"-N0#VRbZoJ,=2!s,[^,42mhQI8GLu)RmM1G*eTC[A#-QY3uC8.EVPd#E"%_$"aO^YX,s$64<bq7`oML788=^YP-M6ih'mDW93g):!DX["/hDKQhVOh/>8<AD$VGLHg:dc6OKuo=4E_2LWKi2s+UZf#PRuEI5t&%!_l>:CG\g%VKNB@:0S5GW)*>;=-@L:!/;E=Q:k5mdF,`;H"XpMmqfc$7.16<,7Kr["sAFHgUug&nb("i_G3RdnNjNg&=*6HQ:8uY%K>sZLW$1'-n+4T/>Q&prDX@.aFl+nKQ!<]\nssd[B:`uj=jsF'.KM)K@b4\Wr&IoGoOM<--^Nhfd71#1?l!;0pkGRMk0Juq;4kHU%;%2KX(G7*F4AI[uBm5Te>UTR]%3UMTVtPPrQ<;.D#9UGORq(u1K"a6[Dqobb-/TU2p#B9=IDb3V/bpMZ4YURJ(Q^]T8TJ"[kY?)/%'$CiK^@ga3Wft@EDl0?r1f)E&%TKECJ@=EC=m'UbgdhA7G5Ac[CST1t'C!aLNTf3Mk]QFic%ss7@a]b69?c=;!b,a8e+.ad*mW]E%Q@#8#f8jj:q8eY1k#igq0=']5@t8!:9"0&Y@iYHbdgD3QLq2(O"!fkM]2cE%;tInPi7L)XD&h?9P`4!0EJFb@R.phlqW`$Z&+B<]%8(q"lMnp94I]4BR:>Xf6FAk3`\$^,FglVqk&0KD33nTH<8)o"n5C\'ms%b$(ku>?r^\=RSrV2[Q:]1-Fop5+8Qd>AchP\c_R-Xtc%Jj?+]D^dP*[htbJ(E3!O4Q*T_bb*/h-:8,44C`$rb1KiDYPt12I[Jm<B5`bg(T]5j3>7aoX>:-2h9\b;Z:=%uL=J!I]QCT?qL7TL%:W_XBH8p8Fs5)B%p#CC"]JJmnc8M>+q1k.DVpPKUn&1A4l%U)$*m!pOH#aE+X!YaM@HGp2"tBn-qb1Xplh@pd\.apMp9;<*s.1[e%Ao(TL\ZZ6Y?LJ3MrsePZaT!VCT?X>r#;<I<W&].>=L,P?MgVX#R6-4rg^%AM1ZYBYiG1<$,Wpj0;p<j.4EKMUW+l=93l)u(TX[em%?bNt%pg9VZp7<*!h;Z]Lk@n>4p_</kWq0mSbuL@Q1u0-1#=)R8=K_!30"7-!^.n()kMupobt<#$XfP3L:6H6)$aX/(IQVU"_?!G+%I:W@:>P5M.NsFU&?gi9fGLjmtf@+>6`f!=I*8QPSRAXuEfuQiePOJZ`h\lJh"LtO(Bi#E8.UZ%PBa^LJ&/u7Ug4H(27&D_BQuZ1%%SSjs`8,mR1T!n*-V]S^R2s9@`@5gFENH\jrRZb^XR9O%d`\#n[Sj#EKg`WQ[J%$J^Q#h.l"[qJ]RZ>iE'm0$_2p#\taZ?\L5E?gV%h5%GF?*]tDSVE"fs4"CP5CYf`MTCi?porB-S;V=2d)0S0EVEa+^N1Z*Sp0TcZ2(gQ+*7XFO`VL<b7(Zmjb(38pefK![mcl.HZM+6%IEc!V(5P3]#rBeT\kDL"s5J;V>e7=?-k"6POY'If)2!^.a4q["fP0Zif!MZi4\s(,SkX[>lI\0%A3_G%dEQ#0gX#rMj=Qpc31'+<%-VlAY-XP0KaU7UV+ac8O%k%8:gjWah4K!Dc4gXsR/[8k$)B=MDPoEk?+X82R-:EU,;/<SY!6fL>NJ`uONR2CRSj'A+k+m^"f+Vcc%Mn[q5[#fKg8)HEndrfq/Dek:jR/c#34J6)*3.DqNfu[o*6cKQ&TDK7Nk>XR8TVnRYE%5f*mC+sqL\efI8'ZP#j^Do"%L<b<;jPVb%8Q%=X&\H()9j-jh0)Ua\B24aId&^^'*@[OJfHB>+WLJ46XutLHmsBo,R,*18l7?;9_`V`e=Q%FY<h,@9r1M`f8P!L##'7Itld.ce%pU9nV8:5K'D?oQNEo5IBp#B7_4EBg.%bmK)H.P3-%`DLX<+h.#@NC_g=^@HA=<eXmCcdB>)S=?UEA@7c*JY_\j)Nrtp,EcbAK@-Q%d6;EsAaUB0b?=:-i\!oX<s$r&&K*IU(d52UC&jJTZ)k"\AuMqE3V$3JlH8Up.E=!l$'.<rrS-@+J%[;YpL!]i/%J\,RI?DeGiqSc%,^6gb%-=sV.,3IkI$Xp-B?AUHZEKH*!YkokN:O!riJREPW53#Wk-X1;S.e72\brrZ2ideGpR^%8`ijS4qTcZ.BM]CsY7Uu,E$\pY%L3Nc/6O_;BkX$*IN*:mppjqEFLH+pE)q$]2A9P,dHq%$_@GjhK`@T?NS^F&oIV2TNG40.?*tQ>7a6/Fh2_XobFn0R^dT'%OXq&!t%%pam"D_V!d@)*=LQ1R)==-"j:_su4pM=eBKCEc?,p3J?E^9$-P,)?K/2GZ:O"VLo*._m:F,ZAeRFZu*<PB?r`[mefe*IQN*DpH<\%BB\<]h:R'qF5L(LVd/LZH"^'+?s.G9V(A4rn^H=&LMUhB1&d("7[6ou@_0#>$JXXA=LYc-,nZEVQWWu=r$-])qRiX$h>+7ac/W+n%m-6MWi:40:SuWgJhXd$$C]F8$*LiYqH0>,2h5?%A,al,A0/+@OARPkjJ,0JD.+Er*:=lloQDRoe(&h-QRHor?Jdd[7M=<U5:s>,q%&>Cf6jZ>ds*UfK.0rCK0hH.jpiEe-k6+pUKpJfdhLkm0e@jTD0Wo,`2hh@<VR$qq7SB]g+F/k?$q!iT0,ShHHe`-s`33BBam;;)p%5JH1+,<rs'I7MV"S4774G1TZie/40?:[=ZQGf&8k+lB]u'.ODNbTJ.aCu;Cm^r*7;3<QuS&bS_L(WoZ,q/%)+]dXcbESNigQ9NpS%?0E,G+9N#fQ-Q2)<qH3jIlJe4*2rV<GIjqq9DeSU/K5`Kp'l)TcBSJpa6&>tgo3G=@*er?"X][>l'DGZBeiJ;3@p1OR(2-19)]j^%54$+0]CinEJ,\t&s3&6M^O*)Cl&f.]Yea1,\']To,l_t9\u2V+gquX2&hO2S'&Z)7AITqb0k_4I_0#f'+pkotl1smegJZeO5qfV2%mpF0!>gG\hX1E?P])UZM4Zc"aZEi;b-nTt+A[2cjZT64eAT4S#G%aETNu?5>9TI6B(7q68A4o7rcCfli!k>@mBSj^VQ>-ts&uj,8%gJJLM:B9BY$Pp<j5LT@E.8<!%(Nc4YA4hAnFQU_Gah#**^e`C.4qH+8<R)huT#Q2K_=t:LYO%AVhsp#h\'M\UZsV-@qfi;d\Y[3N%c$-P)\ukT64.lau?KYY=8>k7)%N'UKaCYEj6Zoe:1GQ11:6BM^$`G.3]l\o>@?nT:!*_^b.j?r]M(+W^^JmmQT76S.<n-G<Jnj>T%742^uFPjbNS^,k,&)NAr9**GpO/^CF_o*U_nBGtq=nB_QD]&J`3KMqiYhX/"o>niTL0pbj.rZKX/ZZa'`'=b5&#1ZJ_5`-G8h-5a%j#G=oa84FV_i*-E\seEk1LeMH+;d+>aCfG$8pJ:uKnf1`=Y&_'@8%![>P5^XfPQO?1XM7j2:LY%gY%/pLDHJJ[ci\U4A\(,[j?M%%s'^ca_qY+Ps7'u:YKb)djhI_PfJ1>h+D:/qWqNQoTo7\trd5kn4'gHN5$nNiL3slWg6"tH=B@6cp\3PX:m0%rF'S-dVCK]1MsLBJ%$:<GHFn+=FNplV:QJR;)f]]L8dp#bSYt.jg\iKp7cqu.?L]9u,`fr:UBJ*ghJ2i?gB\B-]4<Y\%a+P_j;dFkcW=1\c[)NZH+HrBT%pVFT"a(kDH%Q*e+EU"&4D1WV'D](HD!u,o?@8YCfhQa/qLtA@*QY)&XGoWnaD5ub&=5*6-L71;P:LYP,!g*L,HOpo<7iTMiDug_L%BS*$R"E8DN'4H2"JBG1E#X5oJ62h]#hBV+,R)T?\QKQNlR6(r_4X57b;1-qiTOJ:2oHL),p;V=3l-4,eci0i[USj[8c-\U6p^.LP%5oh?ig^ZQNB<6fYr>_<\Ee9L#ZhQN85(LJPGpgWtG6R+I.;b_^r\>=1mt>P['FuELrd*'@`7YnsDLME[F$5I"oQ.K=JNmmtEq<[[%<1E/BpNaHOa.gj"Ce,]G$)CKiDt8ph)<)2-WpCC64]@4&>g1sK!D6^Ms%JqZ_a5XOmJY=F0fpj--iEYUEN)Kis63)HUT*eYBY"B'%Nojs:o%aQQ\R8=?[roq@\lTg+CepEp""N-lI+na32gStdOo\sLH$2KH)&XQaW<QJ6&U@P1-7<9^RW^'CTi2o"doJAR*DBRYU-Bej%/-'B3;-8WThF7&XLT'tSM#+40\;L?%6cboqN&Il*Z.IM2G:.@U:"-pJ\r/Oo7NC.^[02Z#]JK23E$\8@_pY2^l_7Ik-(>r;n1V_F%5(8$p!ga]D%M#5B%j3@*GIMWs)%ls&`UW\.nB/khi!R4&I[ZmD40'>D`20(9%05`;a<:'UnAd4cbF5eR_#Z=1V>"BpjTAU#cQFXQ%Y!@H@:826<>J(K6&Ml.0]hS)f,/liCE<Zj8$92PH2*Ef<(K?k`N1J\KZ2b#SYb9H)\S'j<3mbiFZ[&,n_ctcFLA09s5/?U6]Ka<G%iQD:;U%dt6&V]&@70l^be0_3IFN1*I8b-kZM(Ag/%iZSIVT]Kbna%T56>>3aKtq;1einm7g;\H_+%3:e!\mV3(qq+9lZtge:U[P5%bY\PQbR$90FD4RJ0KEBMTjtCGd&kCpde-)FS8CA!<r^2]Z42rAGi<;.!hCfmg=GuhNAh)HB5cL?/T6)XJE*RAg$3f\1r-7gGZb.D%X#>SbMhk$i?L<?B/W@]@OcnH!6GLG?@0\G"(&jqPgo6Gf<:LU:6t\Gb9,sLj>ModaO>%FQ*W]!m.,YSXL[BU<i2ip8((0Gc12Li.%FUh_W#HXg0gA*g`I2**rG9=X50OBA4etF6!U-eqKNnY[i%/9XfmPb2a_Sj27Cpp'"J^#k@,;'"6>=6Ck<m+ldr"JER"o+1%bh'>J%[,SPk*):Y0\ilBH^cq(2?A.V1V5X<81d[%EM?o#n7b9pG=[8T>?N>Erc@DON`C.a/0HPImV/F!2J\M=LdaWn4;!P?oK;"*A7lY[c%&u!qf8`N81AgWf'SnR,nF&(2p9V$+tWF["-N`:Zg!JY)e-'h7'o'fhSK7iB6X8""]DbG8Jgbk>PkgQ]Kk9JmkNoa?VOoqqZ55UKS%L80RnYAapL@s+dV[oX#+a]S]0F)^q@rak(bg"TIU^\,Gg&G'32j!d?9^ttqk]4Si#>9R>oH?!p/Dq<3h4:d56EtAcf<-O;2.5VKl%$2Tsa)Zei2p&K$9fEf]ZfjH;g3eeP-GG)o&7eWPGk(&`RGSgl=BaUqfc4c;MX?oUJ7RZ;gf^Y1D)LYf)#M]MJ!>TE&/c>,,WeTTX%d[hrY72o5H/+.2a^Q#AmV\K1>:TdO5E,nQLc.4u+q<?WF!3_d\4Fo(?)D(j8!+!k#-c%h1a*&'o'k)tNpdo/E*3GcZ[`;AqqV@b(%A2`aTGck``L@S"P!3HSQC)J-k,&7<J^KS8O-I'ES8A15Nd7>,nK!I:9D@ne5(R/D63<`g^lRr*%;temP3s4VTAT#g2675tn@$+-^%?U3S=BN7M^!'G-$I5*`3,EO&"99$9X6&bNg"Ed&)?'\<b%C*$R^(A7E0FkqBRFEp"ec$IZEeVjh(-C6'\'%?4e3S9HO-@7"!^m#,%!D*PphnCY$7-Etk%WEEY8Uj9`Sl$L(Qf%AR(Pbl!3_hkp5N$B-?WLrbk7re6P:[!T_r,\kQ1EajW5@G4m/oF;*]bcnQN.joBJ\,_%l7[&CbaC7H[RT-],;+ZjBuD33A(M_b35?A&BJBU8_JI#i![(db[-m,@`,\%PX?cK:O=:Z'oXm0Dc=`l:_0L;t2I@[6!s<RNgL8t\%$mV/YT]m`;jg5[k[foCC"WV3m"85k0.apS4a38<aGj,WBmACn*X\0f/<dRq^I@d)?F7<C8;?<kb\h#\sVrn^ge#?V6Ke1I.mi0d!%_Z0"YJ^R3sgS1Qb_1bAHXdV%q)l^D&cF\W(r&FuUP$f5p_KgT="dtoY])-qbL[G*HpU%('q&9?,//Zq@^h49]eVt+>MLVZo+fK][%>pl_%$KLE#HmlKeQ,/`XSD`c/da#9j2c62lIE+Ya0E"SkXJ\"eGMc'(+SX0s&'cJ/5\HpH0L&:kg8q8.9[(_PDSJ.rli-nH$>a)]%O8\)=Op.&O[I@`>Whm]4iP3PBDEY'/\4oGWZ=oXFft@nVUFuBZ=[R>Za?*X<\6_&ni?Ae9"gj<+C33lP)0tJq8l()Im"B+dr16_C%n!h,K=Zu7D3ku-;W0&WG[iO+M&05Tg-b-M!-!VQ3OHBu4.j'/*KRquW:\iJQ/OE"mBUjneZ"h_fW7V-]9qc+@8fJXrn=8.oQoAJ7%r\&Xd1-Y#HJ2W*iHb#<?p+,YL9s:p9OF][W4ZIb$5*PQ900uh7HF&ag,%,a$,a;rF6$-+;<pITB1"39_3$=%'&j!UZ57094cH"@<%Y#BlDmUsH-n94%`A4g5#U3%#Fq`s/8;"?)/g$bEOd\]_?[`q9Y[7\f'<mB\/Xi`M2a.<k3Vj1juY_AXZ)W8[geWO6i,&B,u1Bho0%3O9CbQ<5`HM:dZk6_J?'M.DW`!@P(R-h%7=pFMK"Y/F!/XKG_+U?:'YF!q=PT5YWa+Wa]G./iL`YNDD@*+3!:pZ11S5'GZ^*f4OA%GeZiE(_'k#)?d;oddW=F49aE&@QK[,TT,/IX:CuX>a#92`HdO]rF:;ASHUU5]GOI$-Zq$P+Ou$uh-*HhcG8F3"M7sD8O;Em/s0M8%;J,.%9a@@$$4+M$m$S)$$BKKVTE1e!qCho/,G/`1$U1Os*fHHqaUDhOP)"#h19X2_eNqL/L3I.N&_dBXW<2V9*)q4S%XU\_\FrU$%9/o?kifO&MY9jME!oF1GHaN;R_`Ol:&]jtn^a!&'Y[j+?G#I[1R!FE9<Ys<RHa9;m?:MTe+2-^6++NW3AKn4clgTgCb6B2ZAO].*%*b[IkAef0<=4`;>0KIC5odiD(%]#+'EFcr.A6)"O-h)["j3+_@RK@l!4OLHE,soED+@K4K@bnd\1Y-6nmq#IH(NXfqTP!n1jLs@s%TUBrAedW=)Y*3Mb60O`el;ha#VrcC3Q9#rb(IkKk&2%oY4cOgfi']6RH*&bV1.p"H^RZLa:>Vp@Ycme)6%0b@-rrnK'39hR(4lo5%_\eiiR7,%_I$;FZ-r[,-6%l&1\u>M1qRru!M3X2NqaGNqgSgC4;:\#Q-quJVR:.lZTRtf=qL\kied;Y<1b9Sgkh@#o[i(:Tk3D9L%H:l5dYl]dDJ54CDpTAB+p$e$)$#2l(cPs,<=n$9-rgYjkl^eQj1=-D/UH>B?K.aXYeRYj.8(FV,fP&:)(kM-bFX2%!]c.csY,FR=%d<ato5sRV.J28u5(k&r,8&:AZGm%m1;8"GQ!`nP+jMb"e,GMBL%De4Wqm[_f."hVSSonC+`>HKXEP&Z/phj3JI2hHT9S#'8j6KCK%Et;f4GF9hiM^SpY*SQUPCOJ<?MC5nc=@^YDDhmp11)_S[3O-*CWsUeAp8/!*ij#.rncoCBR"k&KmrM^5QWs]uW>qUG"C]=*k9]Pb%$[-RJ9"s44Pi8U@<afCG\0+fpH'r;%GBLm-k\=N9$o8nf1dD-G8rNO@Zsr)PV)%E7%'CPA\h:=(g,e&I,dZt=bI9M.<F<J!:.@]j%9p.leYcQ1K0^>u(@1suS*$LC8"D2,c4tY_<,V.W7gTd2>rU*8E:Q3N758U&^h]cn)`'[V[Qh)lX8h'*Y_7GeYfuqNDY"O2The)B8%&3U],.jUl^kbn9jf_SR#CZ)+R[d<P.DdtGT,gY?$M3`-P^6LhB*&g0Er?AdKo2%*N16oYhc:4L=_A76f&>ep[gnKH7./q`g!XTeG%ec,<8kIg/pX$EC1^`nl?`h(RINeScJSr%YlSJ@.:K36iGO2LP_X9BP`994S-6iA`[&Y*8Ri6F`F^-,4BaKQki\b,YT[D74dCRl(;%V5;e'C&@Xss$5<;:To4=4mO`H.#TUU[.jQ293nk>On]?b>J8)JlBEud@9"\]&+*m4+dLS8FG'3VbnqfGbme8Tos)U)Q">TDWDY0g%bHP'']`i4/1Wqd7[7E-B\+FG&-nXa7O#!,HQDIb,M9\]&3[F:WCH,J#4RGkpCRF6^&`;`Lf#aRR'cF>7^!KTHQgJ9>=nLT\QU\$Q%)o760%@$q]_"lOCVc>RW&WBtM0#.2fpu;cl70bZ=3.^+ejU[Y$YnLCh[lRlai*ePl/$;9e))$ljB>nG[3:iRT%H*-AlKD'c:H`h)%'<o\-'%'UnV:k.s"?%*/\Ah(*F[^ap:eHMRd?`UF,C6_c-%O%c#+.t<@*PW)K:1-\,t+He+UZ!3A.<i`gAn(oZ^)?^bcJu3'D#K^%@/u];<XK4*+S0g`d+%WJ.(^kb7.Ft\$W#ZI+l]2&;5$">".L3fhLs0l-k7aGcWN&"Q3`loJpmr*rgD*$B:ZPd)@-o-XC@blEiZtd%mmL2sEnCrC^A]OLSh_ouqW*O\i[^O%j*2+_)UtpC1h_l\BNc\5P9<C&To$YE9VQ/AdC@En/ETF*1)'5c'Gd;m@1\mcm$#TAM9BoU%fHK`U>A,n_^p'4K\o,g>P#TA7qR?`@_a.AZgA-W12oS5WZ\>.PM/e<aPAR!MXfY&H2P:Dc_hPI;1Q<oMWC;9N3=X=ZfFf];G&Zss%1aO<MQJDpPf@_g-`Fu;BiRfWYNcnlAnYbmu%2[8NP:f5bgA(!*G6DA@Zh`.Hb04ZG88&C9a4"X$%IVq*ENV3$7NR"6D#s"4A&JMV%WCK<E*ru1L_RQ--K#+`f!UIAapN:a*N!f36#I?O0;1HmbP,k-$,HE6DnlkjDRi58r$<uDS)6;b61UbY+YbEai.3$ip[HIa<mT^1I%26<g2]uD,+Wc0+XZLjii7[]t+h!T*FS_]FSL(#UqZ--g[_%`<6o=21`eH`TN3nkNgitU4QC?bu,b9bCY=fSV";p]F*\V(:p'>UQX%OtQ@B!@h9V\De^&"fl$$Z+J8I)Sf>.Q6"jH:2T2hnI`<.c^TU10k0j"Bm-NJ#h>us-?%:b`*RuDVq/I:"7M2#$dMZG!Tda`YYZeM%H]-Y/bLC8210LSXD\_Bs+uA+b-8`LdnsTmLa+u-1[#7CdKg"fWl.37FU=oEgHIl:[-Y(hdrdo\L*KqL;1k7u!7LMTqH'-;uAXXlD%YiG@qJ/#-&9h"']A-bQQ;9uqsRT*_DRDRS='JW%_B&6]!;<Lm<42!4MChuWOa)]RXhe4le!e$VhSsioFK2r-7T\Mu^2>db\3&d8l%ip6E)'kD99\AR<%oWl^So#[C?1:R`^[YV,HSJb2=>L.cR7G+AY"6/R5;2K#m/mp$(a\BHtaAY@k1U&t-&o=s[?@3+f;Dp`6pEq#l%QTtKA3pR/X<`\a57Q2]Aj*(LbDW-b]*:7mMq#FArS*VWP$((P+]Hmuj/r*A2(VKZ-TZ=$\fr02;;&ic5="Y;(061,u1jl^6fg9:Q%/bdWZRcuR-;.K"/2"Yr/$\-0o^.)*dS_E0,!G^Ft[[qf+MgoJHFP1iB")nbiJfafUZ?k-9nYNX_d(#ic>^?',E\><XdBW,QB&kXc%!sSkOGSKLn$"D'R]'_laQ+Hc!//F#<FEN+>0u2JAadVFpVJk"JFbCu"#MclORl$+^(A^8KZ(TQ/j&X&FaXjc?eJ%\n=rj:7b;sX:%7Y$l[Q>t7u(`O-fB:i;7a*6El)B-d0T!%IM>AVnonnTWne1O[Mko(/rM&i`3T[V<[cR.#3DHQ@0+RZa6;Uh+9RK3HD1]ZDiHa[cu%^m:]Y*4CS2S]b3$F<*!e6=(if&!49P_72Lq*uXG`6/85i1<g:Bk-JB)N>n9(T^lnq:G\_&%oD%nDMY[6j]o$L8a?N<4.ib$^*QhA%*S3dZM6/*/i8q,/lWpt#Q?3+FU^nXM.."&W!OJ37TYBA<OTqJ:H7=?\]q'i2nC*6+eCR,Vo30u>U#s5UJ8=k0ZjO.p'VU\Di4*ge%*2J:50rT34PQO$h$DbX8Q7ei[dkbNkQW*\5Bh;Khh))9!a](^)8t6HJI`F8ucTT*.?<k3=WlY!r>;)#=[i)Rs=BJaalLDhKHq(+[%$2maZ!5WjG0XABX7j^'mHiST5D71-SM*D6lQ&8*'d0a?H<7c58KK/C]XK#;8fs8Us;pT4mW#n`Q(V^"D.hQ8]7W"b,`k*^b1C778%fgh;$%]W?T;)uKCYQ:UfAXh#=Q0G"\qK3;eRORe_assW5R]o'4?LJe_8.r*$Wf'.`MBo#Agk=N/dZMk-h[Wj/dYm8E#t;Q6BW<YG%?$"#@D%AD7BdT^Gp+TJY0.u`H?^/[N4JQM6!iCC@;;k<SDO0.DOOT9kC7L7tILQ*3.f^gIAbhLFP'@+BS-'>/eh<2\2>21DPO!-F%LhoEDGB)rhjF47]\kK/"S\qcaRe;AB'WL)P)mQ%A!8g]P=u-G!ch'M=g_B:QOo#HSI&`gT1$_pm,%#>b!Jo'op9!SFMZkA7:t-Z0%Y*\=6^Caaqd,,N9_H!!Q3,#jS$J\c,ZFc9,g3H#P.L8infO=j"5AL[8)9BHud:1b&`_A3TI@.+R6'_gTL^Eg(TS_&a'6@g$#PU#Q%F=fqR%`tU#6E#`(?c55j!EURW9))3N+n[Y>4t1+A/Q$n!@B#,LT#`FrQ8@=1AR(-Y90XN8hB2ZBp,hp\WrDN(jGlr5',&?.D@3ah%JOLB*3\(cDfI&Clr6UFZII9':C*r,98kYCoA:=!7[R#%d:Q\\;lOeL!IS.sF_j%1jJ:P^!/:KdW&+d.VVHe2$1T5m1kDl*bAd&.5%$H1g\Bg)pG'lBs$[;4=2b8t):(LSWTmo*Q/K@km\-HIeejISa!G?md+%+85$X4,Q6[C3s(h*(9&\O/4"(#g!)(;Ll"3B&_@r-s$u%>crNp#+bo^+e&%5l#`r4kj7S:$L?5!n;c^QQ([WoM*qN29+jVoM>E\fS&L7)cfdJSJ_"$`T2.2rn[)D7Kjt8gZl"<J2%\H7g@Y[C%krfGe4o9d1C/'Cr4^U?Y2ME4+WYu.I"(F9D1QQqtYa\:nFoommjfJ@VUXLk82S/LKh/02*-fch<H#;e[frCju;I"JIqn.6Qk;5P^%rq(rj$\5C<[B^Y$<!/,\n:T7D()`@.S-3;,;P$!ONr`,qi.^PLn7-.&^WP5i.ga_Y'g79?*G&L,JO;Aqg&27T<Tk+(#1Q)2*_<#+%>9\!UpCd8Z!:5]X1:jiFGb4EDHiYI0)+-'ePq,O3HZ!;%%.;bC&A%!f"BHk-2WKLL"Topl^/^?C7XNX-<UO_R3$9]_6#Z0(N^cT[%F5%s4D!ta;i]_uS8a[i+/-FI\VlOa\Q>c-Ff8ZRq?omN&K5N37@[G@Eq-3XL[bM9g<R2?rPMsYG434r\3+Q(qXI[C$D1,*=S5gRW%km=Hr^&d1Jlu]UXU;sR=Y;*jsT4hJ$TH"O,Q5dZ8OJAr,pB_Lm2sNBUb]'oAQ:*'!WXk,U=rCj4QTLHKAd*^]#`e]hO>T)QlF>nJ%b]@4Q&u=iP9O"qCn8Btj'qU"(T8.4&(a*'<2Qn!3)X#idX>T3=AV,0q8.8n&I!T&I/\SUFYg_oI?k/<id?kN)EKqN\2PgU5^%,Bp%Z<#pQfpA`F/%NfK[/`Zd6<Po1A5ZRJQQtjo1R;J5e*+1DcpJ4LOdB<+gcC7&LUT=<Va&U.G&Sr8I.@Z-mt/rkLE6hiGJ9Xd72s59%+Kd<t555?3%*/Q^UTQS18boq55@HOld9mS]Y<aDXE+@6=dd8aqqjNaIBjd#s':?*ad<6Y9"*i*Xbn6q^^F'EBrIi@GOu8SmIt7\q%*3oa$)nT9Co&*d!Y\^QQfM.9Co6i5Qic"PK+^q(G9?-NONi^#/Xl!1egi*3nf*g+=,jM:,nDRnm=XN9EW0SmkBa`\<4IY?'bBs21%=d`f=0nNs?MMO:mPQX-H&OU"Sm@/3rH=gWmrM1$,&[*a="_-dYg?tX/`<"96WEeB8/gD'pKW$,O,CJN=qID>-KHf@s-;,4b@\n;L%4a/E("\^2LaYrP\#fh[J]9Tb..#r.DaCs=r\M[M.[!n$*MZK3?je/JF5=U:XdRJQ2I\5l]-*inSa1BR*>JELt3p0>&N\VW,Q4#I;%%d/+%Eg"J^cYR3RbD,t6[%_9^O(C.[Rnr+PlZru:?S5Roa9$)l[]C0^7E=(mIYd0?8k.tQaZ#>n-?(IRb'%W[!Waoe1Gd^`^)E"D%S7.Vsn,*_WqA/(lg;[<]1i$V+P)ZsbPAF,fFIIE>Ga$U5)l.2-#T<Cn1TEi:$\5,q>8rUeb0gsE6fp5UWXED@d"\e?i14n6,hKP9%&a=BkVl?7ZA1O`8X3lS*Abr/BO0UO@-^phuZRJo-d)(_u(%k7_*_c`Q.J7`bie6Q_:m5_r-4S]0,r'\d>nn9.Z$_JbNW94IYYa_/%;6MYtn+)902pgEZp;!.8rhQNdX=Q2)J1:lSh]hX"Ddbk(*I/r\S,KQZPWZBdE036Jc^tE7QdW4G,+gng!c6X=(RpgNBTm8Qb<ghI%7RFipiK]C8/_Q4lD"2h/F[Pe/3-tdiEbd'XE2&Ej9@dX2buF@$P=fV3W*s0#i_6/@aD@>c`g+JO<\i\4hRK9$Ki%[)[QB_[CjK8>%Sq\6B[[``F2d4ku/-YRGlm2k/K1Xb<T-R(2fFV9\j@#"3#!!@U)7?jL`BBL@51^RjCAcjb9AVZ1CVu!+$paib&`L4nIFr1Y]aA7E%0M?J"+e2uZ1[k1+2GJ3mVP=-cXA:K,Wq3+$&3XH)".Y_.@rEK]N!XE6OtXt&43tk6o+c5raX>1lR%TZt_iNJ32Ehui^F>@+c[H1M%kq":oE(0*UeRr`G&ASP5[H;6e66@r>EY>j7F_0u\^'s$7l*^Vk<VA*_bT!1]NCt!P'sRrBZ@o2qTb_bBG&\8rm2!A%8@9%t$Cl#[%b<hSYXST-WKpM/+_TI`mEmb(Q%iRj>6s8-Kj3Cs5Qtj/7?Ug5i9g(gC8jR=`HJqLmVK?:.CnMh_\?ha4+0Z!?W;K5FF>`.gT:RGU%YJc[j:;t,F0@UuqT+lFU?Rea>cK4tFKk*6Q(rV.s]@l/6iX[3r3f-B*rqgl&QbK;Kcd'm/H`]6Thm95nf1H=UaPqn@AOqD"3('S:%>Kjm0W^[$"_!DiT$]('\V6g-"'+'?RO<'\/-k(4`\>K*r$V0e+ZKqW]FB2?fFe!,nbj7&s%9-'fm5t_OU>u1MoQW2Y[sSjSs#/<e%GXd9W<XQ_ISi^To\XM_VJOu?k!U.TL;6GF^P*7b%\H3K`BXYS^O7B0+4'S/!QlMkLk\<=PGG5bO'(`)R>#mp@//`,eG'kA3Hl7lp%*$hBsr^==$c]R=o8t3&4M(,`X:noLcBqC0Srak(p52TR;cCgZ%`QL60!f$]'`=+#&)gX7g3@42N=BJYW%LRKQanOA0/fqtL)6RHL%WflO9!/FmA5C'nH;%%4,*D_[A5IPN(XoAUs&n[#spi\)URn:&U:KIk1L51BY&<eo4;J]Gi<<X"f"YVYfe\.Mm4:IcHU/Y]lc2rZ^%oig'cA;$SGP>g.O`9jt-a9_+F-KW,g3;uYh'1he&FkGt^rl0XrH>u/fVG:,]f2>3L9#ia(fn`MMG^8Dc*VZX;;+@$L9sU`K(ZTA<%.bX)ZX>-3[1e(K'el/CdarRZ4E+PFt.M7H/"uIPtTap2Hf]0`tkng/q8np*dJB-/q.S[TNm,QM3I]5@rIQ[.LZq::jVfmtgB3>1m%Ok^1M-)Mt-79Z^<>/*Tl7itTnARn9C1?(JA^L\sE5*,Yf*iTan%]8oqc->b?aZXb'5fYmc=N=83R:jo6ALljFFj[$)iH9MgFI^;$%#tRU_+_.Te!8#c<8m[(4^1>m+pJ:tQXE#FD["j:!;JYlJi0tTh&LLBmKruX'!(Z7l;7X3!bDC"2LQ].aFDrC*c[;i4Du=(e[,lHS%K'kO9'p4>J@\j:m_'$]/mDla#&SVY8Pco)O]eNTeGWGT^IJ7KkZ/@0Y*FVFI<hkgZq.Qj=Be'cH",RX,H%sUo)rrR5fDB3?jodKu%(aGHoLI3gr)*]PDFLTUtcp!5gkfgOkEZQAc(bXY]j&QJ6(A1H`((sg69A/Wi!D_;[BfNRJOE9"PLRRBo=26Jh##$cE6$VUO$4OT)%5nu-)LmG,b.OTA]1K1B",*X.?n:f%2Z>RrU$aBCEd04S3G51iKC,LB.;L<<);#c)dOj>)FqN=:,J@+]7RgS&bms:\26k]VO1Qa'T%@3U*F!8NH(S2N!^,8k?X"sf&JZZJIeE)k%b0d=VXf!=+uE*4,qR2=)t0=h=_*UbeP@g__Nh8<Md`m;>#+O28`K-skmo?/_@Otr-3%iI<*$02@'Ii*g,j@%+"i.elf1ko$[gqKQ>ujdE?(QB&G\8;eNV:Mr@<gi/B00^\%p4#2p+kMm(Fa*&6Tc\ihDrO<JY1JXeL"\@d0%X6;HKm9\>$CB#K>(gC"/^O%$ER6)NU`AeHRXUgpA_!%or2!tSRBQ8pB*PKHuiR<V<V0],4Pcsdpgcpu=o&1/V>uut6Pr=G0G0?3u%2r?_Nc4oiJ9>WZ0Dr[FZRq%TVDCgTbXGWYAbWopcXdUd"+%E&/H!I[^F`<h3V#1KtY57ddLA1*oJ]g,\UHhQ4MD(.S5\GF<.$[rG%@rh`LrptDscVRdA;R"MTj"HSW)W!.p5=oI:TZL:7o6HG@"gd9E3g<g0eZkqTXHCOeZWuV9^[pHk-D*8]gcWh-[,7uVZ`TGqd%3';%kpg&WRJ/GhX>L3\b!hRG[moeU%58uGjI7%.&Dq+/Ik(oTbNbt%`I)m%<lF)%lHgah<Ssg\HRXtc^I2eF0!RqDqkD7LiJnX%LafX=%/JB?Q1OEE5>[#U_j]J?DOi7lX#SZ)XARk%.c$!]>o\:Xf)qcb`Ca021'UREMTG9/gas*9+=Ek.9dbS(O]]Pn\'cQrr`W0b/ESX#?%FF'ClT63k2bEWWO'WAQ7,ng?7,Vj9`Kc8X50UEIeNO5lm]@L$U/`X\h'r?f<i`4ZN").`us#Z_up1"]3gh/h*2`"hf\Lg)jO;@YX%-PkR0#8[\gat`@k,5u\`J6k9Cc=FJV1m0@Pb&9E&fe&@Lq^$#+&EoV5!&H_D\:'ja`HcE]ib:9o*6RFI7udoLFCn^V[+:sT&tJ\^%Jt,eAj-m8[SMHF6FW/:rK:E.4\_sl:LG#VC5;c'HEqE5m`DDMXn]+g4:Z[Uqd]kDBg.TO#X_ahY1E,U?ooXCa?o9'eFCo2:,_'EZ%foK,J.pP@p]*<4>esO;#nT-WML^m:6jXNXP1644Ei>=*E^6`MsQGTOrP[3K9%p89sAY4:O!F<c*em<bto?q*`IG$r0;d#2@QT..X%1T4/+E#V.#N?-!NSdo(%q!5%FPqm5OO],5g1<Etk94hdnPYpb+gmT]ME`R%RP-`T/<"*r>J@a2dj@D%7.B,C'N@LH?nO:_o#I(a9%B"OgVo;4's1kE_[0/hc7^"0iGqQ7a*:6s;9]?f^cA^&N,g-]Jj8^-tQ2YESOFf=dhoT8CZE]H@V#J"Llb)8M?Tt.;u$YMMoqA%:k%%@$VH"0ns[/lgF<hhL7O:a$isG2MqrfZ^)fgj?Q3(!5-$@U;-\]FAnAhP0r!A&]Em'hrKs6=O!q.g>BHr"irENjG3?5)ZPr<7'N'%V$5"hpJrk,1UB\&E>bLpfqRUiQ4k&4!LQ.9AW]%N9jn=(c%137V--M'L!lZf3(?s?]QCbOT[@Of7ng@i)a]ur"*g+X=K\G&isPo;%hJF^Q]!-[C-U=$UkFeD-0.5.N>GPi2bMdjWFa6^<8^6a,itohF.=I,CR43$?N(I?_'h_*%2a@*3V5hSe-"*t:Wb0*XJ/G?V*<!p'%C"sJXmgNNjSMBedW:\3=f:g&H:Ctn1ldf8&5h$WrK;5NbdCs+!;mdC-r^'8o?)=H?#19So1)&MD=uJ/g!GdK/6uBAkM7G8+!'FVM%98M$a1HNC-]TaS&WmOP_TCsTQlmRm1OQ,0h784CM*deT9;9'^6A`n62ei!340.N_j*nM[<L8pE%`qd!F+di368HPq/k_aI>^BBtF%Gr-f[Wo2QZ\L;UPc^ZVE3^R[_*NBuN/h5^RoF%d7T&_oNO?W->\ifaDkut\Z3bd'g."^q6ihYE8.ZdC;oUJM<KLs(Y3\kK/4dC!Q%JQi</%L#S+_3Nj0;Dc!GqqW.rI1u)*nA;\Yl_OM1H=-h32/JHIkJ"7R30(p+YcK%%(/8A*DqS4!)Eh]QmMe;-]@c$XDn:h+e!W=.%J[3/Q(:A)L^Fs6r<-dYb>LCM\*^'1,K#k<D,HBI:6Mga;g.1cQSP$A$4-ITR1n@bj;`3p]hca+Z]mPo'N`D\`g>5]M@A@FOO?<5I%!\#%1W>[[,i*M+DIX_OAQ4@m]C8r#Q?;\%OkFqh@:%+PLMg-[?]B!@H(6I6$<:iTJVdRV"IN(]?m?/@X&ukBg'_;7l:h88W`Eg_K%[*r]M2C!0Tj;d%IQ.9;QZ1Zm=,9Hgs>&!eZFD8@\KLU&N,E4=&H8U/W`JF*6rJ??FB1a%_KLo^P^9ckkpCeBWM.2ESo9HT1e7Hor%c[I#E64uL`e5=P>KBaC"*_\9Mo6D:X>&?b[lP95!?R2s]>rd`eY,X+!l=CVdI\+t)O%3.pH>j9Q9GZlFFuW"A<S_;\_eC`-SJ,r0%L>sM^0n&lS5"'kJ9`oQt\46q_'bpRV&XXU*:nG^(h2%upB8s-i45YW:4%<24Qm]VgW/=^^K/iurKHi1ba,K_<L1&#B((F@`T%(!o%6p7,BZnNtXmURu>lPlaN;%lnU@$+eg*GP'@m$_E]<AsC6E,'oJ#&#[gL^!i%(\71+^/`b)J.(Z@a$7H#ot9?#]n9nd.VMJVbtjLN%n,0XIJU83cN"N\iq>!/H-\0cY+qFCNU&CN/iWr=cM58H83Nh5^M%B)skH;-EKrRn=F]gVn)NW^'rp7V+R\=LqnfES7l:/+k=K$\c%j,Tis2o1TjTLdi3]K-d4ma7<Pp\+3I=-!^($<Z[KObXje.:co+hXfi5&tdoo0H&E^6XN<&AlSU#B\#FjO,rI<I7@l.e)kV-6CigO%e8<@A<1%e=gFFZE$hdBuM7#f)bi?1tELGe/HCTPT*a9D$QRgSnK"adYn7T:%"6[T09VsqR8hhd\ii&9m&';Q1d;bffI=&CO\lQ/M%cJVcCX[f5#\%!1)kU9IdiD5as8M0V`YMYc%7*R&j_$H$1e]X"XKp?VHJJ+^J`RjDFS1g&iE-)bJ;4=;bKA./sf_mK$p+3A+MVE7C%0u2MDl-fH;aY'o,9'X2NH$"u^/[Ma_$#``gH`_CoBjP+BXn\Bd"!f*\;51-S7IH*HWsT3[KP^P_W+M6_UmC3XO[:n^-h%^(4-!GY%a!;.s/okc.L,'dX>'la@atFNAf/$Ku9pRWD2'O$V*pa,/cBa-\'&QBBhk%Lig$6Ui)hjQ-ms/)gJhfoD\G*4p$Ho?W"I1r?:1PBX%4)?%NS<tR46>*crQ`eJ\hr[^t=a=P[.PF6<d7#IUFkpsLdu6r,K?BP)QWE$nk6Y[l]`;43ja$ALeMP0&s$HnLBTmANa3Wq@'D+R[%k^Gr8`tuj9'f[\7;)-a[L4;Ztl;fIJjBcHinbdHs8%h#bo*j[2kRCPNW`S&-UfBPk67Q.Bp^iTRpMmSASj4BYePL"@omp'5oJn.J%dj(Mb?NO,D@q[_EHE%\/]1(RP;qiFu.on^Ofu_*XR"%:1,!2hpla(V3Pcpc(<hkXpoq^$@0ZliZ\beuj;eI$Q!Q8)4FpKP-qX5)Z%-aH)aa1n!.+7^+P\O0"De_@((rT'nJ2FD-NX`)mWni#pV\%kf>-FfuQDhWN>pm+9S)/u:%o/XBhT#;]Yo&gC+GeZR(81nC7;_LN9%,H(9hro?%LhFeC#MA<=U+\j!^X;8Z4<hS4eb2H$II-`(h&j;)md1Ru.DZgnm"dkF-cA_i[>1O]^9?!?`!+UO=GBiD3ZfU)Ujo]Sd%']8%X83Gbba\gXo(qQR@Nth`s;U<DaSJ4>X_.t,nqtf]6AZ6mH<.>AL5st$'%[#m,U6QR7!:(0G2?n-ed9d#Io41E7!$*1g(gmMO%/cU!".=g;;!Ra`_VM&h!+Kk*nPpmr'_tV;pe:[Jb\q>hl?gP3;9_k'P"84=;=Rb;A"5-nX3ViHRI]Koq\aDeC4H"UnUg>L8:0tPp%N(u*&FAuj[bdee`_u^?W&V%Ka9aA&30(?ZDgKgSKgTM82-06C]"p7<&4odWj3AI]_jLRe@3]hXQJ/lt#^rc#""M'U!-]p_"7)??9%c9;T3n7+mHSB'rbM%eN2Bm1bPqQ,a+eLl+D4s;=do"[rW</$Pu)Mrmn/eI&"cN/2:K^>D#@(+U+DDR)dGC_`0Bp^*:gn>4%:;lgJ%D<uBF1Nb3;F[/Wp._>(:"'"l=&R?'Z-C$j^ZZ^K%PF1KIQVfV*T)gg@B79Y8R5Rq"7^XM5Fq0Uk:iHHG#lm<XG4%&umUUDX@=X>,%bYT\!A,m"m$M-PZ,h(^Sk7/<=r6dW`iBZ@^PPYtJUgjaa=:%(HXM<[90prN+0,Zu08>tQTjA"F[$/fYFk",tQJ][d(lm-n5)$>+A%67*7Q8bgkPPV^]E1N7V`8,b;`1sLaJ6-.8VFcnI`+13AACUFA1Zo*@p3\cdEE;=SU2q;>Q(Q#\D"bs3YbN41e!m0ta@pBQU6`kl`%4:7KASr*6b%+/L6KhhS!r%cZ@9a6j1+=79S]Zi56U:'IT`,2sI37=s&q@&HcgLh=9-Kj??F/#QFpm5=NL]M>\C;p'I>4>p24=\o]%ChCt#!8H.Dj\@m^YT5.dAH6ddk4(nT%ue"gYH\K3[PRmd*q0?aX,6u]8nH>0(CmbA!s];IRnde8D;F?hSfNl<)Znp)rGY#),7fR_%E+6)B<[VdZH!YrW6k,5P]6=\c>t83jSL=!/4W.g_fOqAM+Wt.YIG=@Q!L)?D?Ojn?!"b&_r_hFADs/9dR]:;74murRPVm,(L2P7p%3C(OV9H\+p+RtjD2RI&+4DJHi/GPk:YQ+)6s660UmN6oVo0<0)J,K1nqL="l?OtT"ZVGOrYc[s)\,YrIr:</O_a".^[t".ErmQAp%p$5u!rqHHhc[Tl*rqkUPQfH!`mJ&>75Z7aO5?%YZ?-dOW;@XEq4&.gZZY,#M)/lpH.n]f5#5S0AB7*]_*=$qYdGnHk7;RRrhJ)K+%XUZ34bI7S]H:D-f@QVo;T5SfH=/hPMe*R^bGZ0P,'Z5Q:d>:^RULF4U:7,t_gIkqIM4J;1D-S)A?\4n'$P,o:Nq7L!mV>NB]'Ah,%K9*e+&NTO(l':47_Cu2n\c)E-"*/kVI_Qg:,Q'jJK2BJmMZ.a=dQW)"eLg1?O"[iO%IqK`c89/!20'`E9s6WZ[#nu)N[AlD4=LZO%0)tNgO?[i=k>-C7UAG'$Gk1iVH(K5s]`5eG*IK"*(k'*N8%ca3\$,\qo7?7\r.,grBl.<(_0:Otd0cLGG?0+JaQE]pKDZ/^W'L`X%Y2_b/an.2NQaQ7[j]2:394+d]1U=J0CqK8[]rDlaTlmu2d7Fnbgnl%-50qTfN`!:)%%suo9c\(R8.3@-9u\lY<diGB%(0il\G,pO%NutRdb?V.sGTEspb+/Wa6h-QbK'A9N+J8#?QG7poU\Zsk+*E1+m>^QMfr=QsM`/\$q>K(4rEGiF3OoosIODc$Em>Q@ZI4%\,X!+d%h"kpnq#'YC`2U#q\)B')DL5aD+10@]o.8q%2h-rPB$Qa>I$.`lAqFn]:@u7[Y7'UaY+;Kcj2X7Wnu[B-L%mR25B,"+r+.NOAVRtg%EcnSCG4!@":JQ*SaE3D!9;8GqDippr1kS#1F_8*Z3*.A$I(e2b(&^*WCia+u%i__OpAX/cmh(Z5BG^6!8ATPC_&p'GkX9RVMZKlV%?4KBV[22>=\2@Xd&:./;D?F8in-W@*g33.thIl<_m[^1<b]3Hp09XqSf6Mc#aPLY.o/=ZKA.J/8SiPK2jY0GF*'"nP3D.M&%!ZOl%IhJkTP)-;kDU,F/6i$DArm3Um<Q-BC_PtC.j&o_r,gWpaWuIuGoQ,#5&'>$GfQ*b5XK=o+UKFm9QA^NX7(UG"M`Z_q9&&UOC35CV%jQ!P+7ZZi>7*M<W-d33=(MOm5QK?I\oO3u9g)DDd0+Xt_1!@Q1$=`7?>C(V)gPEh;)\%*W4cdL:(A6K:*o2H[<W``m(-SibJ\6LB%LUju`eqnNEGqQREpDH!FQI.FsJ8>B#E0AA;Ma83`OGD8^ROV?Gc,jWFgU^:VYC'pV,)]m+_S=/S8aLsdk^[l[9?A\b`<IFIA5(X4%_pU]<kimDSLZi[=#D#"H326G?\&*BTrPRHf;uS?Za^DQ&Zo`8n*4#T]gqTOp^C=4^e_;9!%g(L$@JGTQT&2$/iP\J-3\Mls@H]G2%"4UK25+RFT;La%`^u%hjIWHuWk5RD$iT>#9F*[9i?a`fq56#T_e(*7JD9M;L,"0A'4\jpR-rOE\k-A127Hp.-Hp3&Ya$!Sus'tLZ%'UqXZ7GeX>+%.fM?o,'#L?qGd?negh99O,m#2(bpbT?3(^TQ)BPGF<lT<gK34j.,'4WUQ7X".7F6!W!0J27Lc>lu:&Kj=ZacGa<a%A2:6;=K]JQg*jpnFBd$rNo1c'<++H?b.'%">JuhA)@6uiao\j8C!78%PH,?.F!fi>5n[a_=nsCG2m0qt.6e<"*s]kZ^gtf\4s3'D%Rn*;!U(5hP`0t$5#X/tqN%YK8Hq9!^AUGP!//nL!8rV-_,h>NiP-F48RcQ]",:eJQ9;s^-3GDe6-^G$S<B$KoDe)@[%iX.grQMMc%Q"T)f8dLk]G!9E=Xm1+jaM[4Gk%57OGD9L:k+V.3YqTk=0F(:%0eoG=3<IStB32R^*Ftj(*),^HW_JmgF(ntP>I+C>-OCfG19ObG%!b\k\CT[f$]u'87=DjS5!<drj(TW)u?`Wt\<$#h(Pa:;b9_5/2"_PGU?ka87M4mbHcToTTUqmB5*$Z;QQO2jh)F+O\=m\$W?+d]M%N#eT%5fX1i[0$:p6m>qWK0D+7+C93m`kJh0&s.#m_!hjS/69]DUQ[Qu"8!u5<BEEH##Y]!V+*e.[?*.]RY2j%'$+?R5g5^Q5YN.K%-j[WM?%[Q8>`2#gYHXBAO\*c&MG>#HRVYZ@cFc8spt4SO7HB2SnTeh`^d3cheATtde.`CJdIY:^a./(pJY=Ib3=,3HO_;X$19o%^%Mm6=hDbA9%;\YH2`q'=il%#+Oef6"!K<])F.(O$0R)LU1$g.$]U#G4F6YHl?$Q)j*b.89HWut6=6m3E='d5O:[lFM!1*t[5GNp;!%_Gg0XKb<%B0s2^#I)(o(3f"s3g?/t8W+]R,5!%2ED$rdE<QZ>\!&"fd5L:okcSD@-2)?qa)7%5Y`9Y@''iit6@B:;:Agipt'_+O2%6u9.1E9Pc?)e5kLOFZEh6bW=Eq*6t@#j+Gs"%qRHL(BSC\Z7U7UCGVd5Y,0+q@\=8F#ehNnf:=hMR!C.pus"2#Pgo#\kQ!,%XaQJ%gFD9:#]5ER`/NkiF@18r`8**KZBUU.`<_8NIkE=lJO!YSL9U&'!uYF8,p:;9M.g!JT$AHXoSS9ccRZUL5`ICZq]m8L$m,8%Ha[X_%;+ag9k@tZ`5L]uV=s3U`88&%%8u=>1ek\_.GX>^:>i1bP(Kr3\\:]IE/ku.h7N\ECN!e&G;RN2B#(R?Kn"L^+.Ko6=gP?\?L\+&j%M$Mb*3#a8_/b+TqC&t`%JPnr(r)@0)TbJ<?05#8/O=A61g#=leF33\P==\3CS71q7$7T0e!5WXih6^_'!!KDJ:!:KV>crT6&<\!)%mUh%U*d-UUO1']A/L[;="S,NC]nOsr:_>TQ"bcc%JYPlR%j4o=TI&7DE]ja2`oKmKqH6_4`)op/JbY[4#G=2<'ts?JSB>@+-$YU#%2In3B;[61/lnJu(B.ee8eh?`sdN#kb/]0PU*KF*"EcL%$HSD7P,Wtdmcb4&@P%J)]%cF!X@MffG?ULLTd8;N;61a-@aEsQ,,6:+L%$qt*N8h/C]78T$XBkInk'>s-\[NV%2!\$*KqU.9ULc%7njnNoX*gKk2m'\:sUC3sk":.s]qY`_M;Gq[I,$VXCi-`fQ=CJ5i/B9e#%@(h8q+dYS^(.PQLZfl6K`];9<qGL0G"==H&MU4=r5[JC"a(/A_a5_pUEEQP!J:Mn"&?$598l2lY:icM5<--Hm!^HDMS16pI7ae?a%O"pd_;!A%+KsVCN=HJrank"Q$cp[rS_J8Z]!9o?8Pin+("kHj'YY&'eNerf+$&r)qOm=rfNFaDe@"<GD(%,:d4<+AT%SGJ"j$_)g%fGE.bQC8gki1!YfaPLMm5;j-]5t_&'ABnDa2So18.45.hX7R%oP%2[#k!G2n"go(Rm-lObned/1Q4i\L+(Tn*(<K(Zj>]XJ[TR2R%`5M75,$'SK7^*s@gHt?$#\<o[%h)IXS;_A'*7S([WPdjk^X@htOfX]UMo[@;Y[ecH;miTTYs@"i'XCsHZCbo-J3i:iJ48+qRUN:k%()s_Uk!_8hc$8Ld/7ON!6R7C=IpVnKn]rJ=,_.Zck)DP3$d#]tUm\mB[bTL9"cq_7EfONoDZ5q^/GL&l[:gkaNAh3^TC]":@(7U6%3VYZ-ecArWf=DDadGMTdY/8,+;;k>[iT"&%Y5grq!Md;n5F%U).Pc<W2?WcpJ^>HR%"8YePI0uJPBTtI"$X8@0Fl0p\i9f#X\aIm%T9kIf%CHrF<-'iM4-oE"G&`%1r"ao>_)d15/Ag1f9^8AU)#>s[n<gUOqIQjL3LJ6u7s6E,JS;L4[e5>@\Noj[!3gJ:cKPor-rNC@%'.WChV@,&$kG`%N,tq\j;4D)md$*NdQE-r5WlK0a!,.3A6UnOm3ZtZ*4a8M5a9eWW];$@g/c3UgbIgYb.$@NtGTIY,s4KTk_IeIg%`8\#jS.g"F"H@hL@``ai"/\9EB[om]4Cl-m1%C>RcR`FcY)&^ONH)`nbg_gOI'70sPI!?s1fTb`oKPj5q=u`;b]A\R!`00%E+uY(%_!:,($LT72J8pcgS$@Fl9)doubh$dN'0J8<ETc\PcYI+X\aE_=^1`?Hcf))nod#<$Nga-G/$ssL[7)ihM.)F=gU;Z]l3]=,>;h`A%*1>Ad)=3j>*s"D^YfF[^-G_toqj33Zp[gMe^G(:#Shj#Tq$iS=.99(&-7>mRcUj''/b("10hi/(@;g<!-sbtqJiN&VNWPLtj,kaJ%F4L3OH3Xh*LYP1(Eu;Pi!b9=><iM9$0R%Q'2`;"Bm'+9\Ko=/R/$`!#R47^+,#^c=b-qi5Qt7#4jVc9^Rp:-[=e3Kr'po`[R$4/4%$hV!^D2o"I/O\f"%VLJ5S1Qme$chRr)f%)S/gBa&Qa]qZ4.2l,5NF&Q+]0"&LIs8o"G)3$/I))_0?So?S]m@Go!1OAPYBcr^_/c*%E05r@n4iCS*i7p)%X6++PKR?<RZK`aGrX5?C&Id4L;Z(M6/WP=&g&kGF8+e+I)me.6nAjFfanT$`A%ab)d1*a&_N6"3U:%h\R;PB%J:MIFE0Aru3"EiXn<8O.cA#1("o-LkaPhlOlDFfb%+CS4ghXnbA/PDhnrA?^$c';.@^.<eX9T#XG<(DWN)NlQmRW1ta:gEM<Wb4^%<LtU-WC!N/D7rJVD-fi7>#7ce."Pc?]o^Wo.W'Q-.,!;e#+4V,QF:iAXVApUO9Cq30t\k$`'#,SRY[]NZjH^<?HUnpCkPDMmQu3!%kYZ.[l.JB1S3b2kTI`YRIgu.@"dDV4Y95=^_&W4$>YI/kL\\CtF-[%(_(W0e,De0<@fk1`!m?o"4bB*;iSLSPI?r*1-d$a4nJsA%%C[1';&`C<cA\ln/6Lff_G7KpD!WbB<d!2q.=3L<[5j?(9P=Q`[8;,p-ZI\5NmH$/_BBrlg,CGn43d:[`LD$K^0cCgYqW->h:fNe_%klL)#?o9d4kiPSLW8%^oeS*'30!#uSRgq!s8B`qbJfrquqEkYT[u5CUX\@Y;!/$N6lB/mhXc]Q8QVNH\a@0,Nbd>_?AMl_+NQeDM%02D'TbVdZCi`afB:E5[nAJ-6ue]VGF2/stgqH`bOZmDI`4E[7K(>12b7)`@Aq17?;$T=G8O4&=+_('BT*2A`RW,h.:fS9n/4aOH:%,sW.?1f]7]>m$;/>Z$]8!TG0bc#u/s%JK2uH"(a=pO-\,6j-m-*qgEPN'r`LP(Ci$X1FKTo#-:YPp$ZlbDh]>5J]\PPiHV\3go#\%@o'&[c.M4\lu?QTnWk&>P.dWi">T$&'SEku`R^"6ic#VK/[`,S9(P25*APno:C]@UHau+&JR!8#\b-rOaZ_D4D3?7jV:6tT<m0;\%qjb2u\D6QNjpXFmYu"UcB?U99e&qjh!$n86Y/r[]k.o-45M(TK9BP@ZY$^:Ic.1]3$<?:`:AgZ:D(p4;Cd#fmB(/J#P9TjE<+""E%#C;,+Ya!o]Ro>+c&1SgS&iu["=:UpD]uF+<-r"N\pEWU=kfgTqDP!aqDX/2pG&io%#CJ4JAI^FTA8m]W@I_.+H<DkJB]s*>PHtr+%+>^%EE)(skJ25RDgiWXfn)GrR*#KK&Oq/$?b$"<+7,2X<[aHpuA;iOK0j,GG,8qVXP`m4fBKiJ1A*/X/@Eq5Cl?82]dngH@4KVQ>%,Y>;UhX#bEm#,74Z=sq/OOTTE7:j5TF;Zp<%o<]:4N\0PS7,G'V4cNr--:\eZ/fPk3.3F\0kiiR_c3ph6q6PQ^/X1U&OdU-9dA\>%#jM=b"iE>maY>c*.bL9;1laqC3K2CFJSAkH('=ngJ`2SUB8!+mK>LU(2%q^If8Af+QX&uK%E-m:RR%49mpXZZ'^AQ8&"B*tT_'?E%?HX1UT*>LXg>`drI:LqOiY@^=)UuA4puHRV.;n\'"SYF4kQLi\n:3-iU-I]AJ9H.0r#WD(WRum>=f-ciMZ-LBW1F'_3-MU:$;_Ut%J>"(SUbF<nFMN&_"na*>6!:4ldZ!gUE<qAO-ku')1YI`PIHN>HEDH0V'[CE>Wq-@c11P8]CW>9X"a?/h.O@P&eW_7AaT>BEP+Z$)%-u>_5'c:d(2.4nR;/NmPh)WuE%(MB*ep9DgE!g-;^mLrT8MSD_']A[@.^8&D@4H/OjYbXn"NDE[e3Rn7Q_H=(M1GlR5`n<c<1(Ee%0P\b0l3cf`&ZE!cJPgs>U+7!U:N)rX5aj+Olpg:YqbemSen-BYC2b"]?#\)p%BrMAk>PA7cZ`5"GatD^j-6;Ak#/=Qmju?]B5IiN%?"9tMPM#?Q3%Zus;lL#^F4ID`r9&m*J?geH\KFYu%[gVIN2<m4jGW]-!01$gL4g;a@k;#9__pkt:0@ot6a(JD#geoEo+RMW^8%NT%:7puDB&=7tp,GrL*>sC40;mO5]?++iXq)6^aTF!B3UUi!Q!m\)Sj^<J8?*:,)/h=1m"7=-`ZUSj[.5P?N=kO,A&LiA18__\Ig9T5%pP`in7=s/gab`d[.HdEm$$qX?@RGbP$52N+QLK2L(%)qm:#hd:KOLG+^g%-Z.OcT,jBuS-@#BP+"rL595-+u=`F:!I3L$A<JeoRF%)2%iT^=3bF0/D@^aK7S,'\D2mjA^RPWW'GG#UCVcV/2m"mgr;De&&\Le:EdB^hPN%!t93(`X181_8:m+["WA5-5J)fT9sL(<M#j%%-'1&CO]c+p*PTrn`%)+'.AI0\Ar9,l.[A%&@SlE&nid2M09r+D.BkZHeA5%0d.aeu(]]u"!&4!h"pR@='m$03$%VF<>U'dao<MK@%WlO6R8u3@J,2KncJJ;P2FF(;Bc]`B%=NR<&%*e0a!Z*#V"47oV*dS)*9:7\N52d*D\3mE!kJNF/LJ>U=<s``A3eIFn3iMb@-/`!;%C=Qa\;o0c`I'M0<N3M^r!&<2hX8)2n1aef%Z"?tSGd7pD.41BRGmX[0G#PEE_B!m,=tP@RVLsE`*E5)m'4,Pj,RhU8?A'p`o*I"^%:hB^OFM]g>U+kN6:3AoRO&^c"\aCab6c)2UM6RW9AY]<"7:Hl<LQfT8=G(GVl81lQBZD)Q%-6RWmS%BBP=Y45//]]R6kHfF*FppX%+?%[m;W0C=WNBu/?rN8OMMff%6g4TWOAt1HNhfpBS4gJ1.QB_g:G*"^l#H6uoXP_N*sa?A%M^\-KIYIkN0ok,QoA@Z<^p%pf+4g'%!2GkfQtdb0F_0pX[K@lR0Gl(F-=CFH^]Yh]j;c\QoE(ncOF3M-<)/oW5cb>Z5d#4r6Zc?SeN%-=L?(jhY_CgEeaalDg!=1_.M1W-%TXkic6uPod+GaM0:,C?W8`^;+(75sh'VtAgpu"jkkF")%+tu[lSo'kJ)'nA&;Mc<`XV*+Z\9Km491dlk\19fFcRDR:+Z)%bV''N9%,r/KE0L/nn];Y#R\ZRmVCH\*#;b>K:.Xun8aiF2k9)1ap%"luZ<1`YjkDiEl"p3g]mT>PW-O=Pk3F#Ib*-sL>m/Up6&0#.OGs,D6%Q5#?fr?:[S1#trQ\1aO_3/3Q:N_Q3-R$X<Z?DnUQZC!+Pq@I<cP!nF=5NOD!Sp_I^LoO_JJ2]n/"gY>a*d<..hm=`&k6ZT0&[*8A%^(X?5]h#)F*mHtM7EGrN70UDQi,OI+Q.k8I6L$7:Mp:fe9g7g.J[)HMjCLeG.[hWQZ0?e2r7#43PYuZ8SeRGX"(3Yj)[ZrE3Lj`u%CuR1X^l]aMmQbcW;a2MhN;7<:*Iq4GTNgOs=RAFI>nN0VliFDWbTMGiDa"\tE]r<q,Hi^<$quOs\1K&EisdBq&n$QA+`CWA0#2d'%;/%_V>1fa1H;.,gK]Q1#Q75aK/"Qp;$h9T9V#5Un"!`l3k_A;al[hWMY>s&YZHrC;/*:$GW`ff:AlI4V!_bgj=VNql$##_J8R?sU%I'!s=M/'QL`2Inn;AI\WTOPM_2n!f6`ZCMaiHj+U4,B.l[cVg%^MtaBJQ]G/98NL>\EDMN85)Es!$r?R\Ai1@"^F]el6L*95ro1g%^f8]#'k%Sd#,:d/O%\+SAq*t\%)<Qtio:GV;ckaISN=PWJ$B*sg-a9pUk[i;\-hfG&35P<ID:FMk#3pB2'gan`XX+a9M2Bs5Z7en%8ng3qW7_FZJlp4b1$^P+M.oA19ArAl"XgrIT0\8h0s<sG6sbOk6ksb<=.D")NIh9>EMWSam^\'[@"PI;3$HS#UbJr#T*4<4aDB,c%bg[tmnn9b[*OP9!PrtmHGqbkDX4gJ*"0?2e2.%T\(ZmA)-P(VE)>5BejA;b:=V0p>4ZO(3+/OA:U6$#\BlHa)'[BGt;I18^iW4JM%1,;?r#K#Fcm9J)f!gKKlIIcKJK]"sA3ZEs`M_SmJBJ+YqHW"+:=[]d#;'Ha1+c@LLT8]QL"GXd&5r'sip?RE)?LsE,P:3r/_24u%%1):UhkKP5W.Mg3<FoX+i][r#/aUD&[51>%pFSFk<#XU.E.)iIMJ`Ae_&?QUcVZAd:Z,.]DSHi=jGd9jI^aSld@Ue88Vi[KHb0=O4%@[WJ%FHCJgEZ['&,uVgHX&f*?kfR$;9IXZ5ONbWkoGW9pkjrQ&cu<):#t9tDEmt^."_M3MZZlMHFI1_#8L1$f(A1+W_3'Nl$u41K%PqHcC";_F*OWkWSAL/aRh#LT7e@YJ">6YHCQm(uV[7[uH+InK_.PLpYZ"RFY+&[(`."i1o.BA;`5p0*,cnAtIAjI&GjYL#k*9b2!%\/;*aDu`jl2Sd=(#>lhHnO1E_3OP%QY-RDFX.7[X7S\B8<SOsZf:!RVcF.b!PrJc!LO^aao_D+'+SmW?n[aBG5+EbtnPrh(h4Fs"%)+CV7OSJRo>YpKfDA!M,(%%d:3f2)1H,U&Y=?6_eW3g45C<.YJea#@tGOra8`>p4Y\'M!B/ciqcOI6fW#SqSFj5`[c(sf/WN!;0d%<?h$Q.Pr/6Ym=TNb^q,d^'Mu^mcDFa4qHbo8f8nS9]!<Z[Lo;sd7,CCq<AEu%6\-7KMA]9?3k0dG+]?&<caRp'!P\13F)qI#mn,5%e])/IlN;9;GdS5X)(\d%<9cV]Vq'>uXc!hSA;pm/$!SgXMSM$"G/WO_eC`&3Hb_a?:0eOTPN*!r&.BskC^=gXAM910O^f(kgF?6u%b`asnI3<dl%1t3DU#,3#'mf"Um7(cY_5FMb7s&-8^P-Dq<9hY<7dsFg*'nZMSF8'*^'o!F4X+)h'X(9Ngq=]7+d86>H>*'Hg+QYQ%4QoECA_/a52$<[_l@&GcVChXKTE3D+1B9`<X^3Vo^&LPj,t(+oq@Ta\ZA(&ar+cWW8h=h3b&BmZW_aQC"UHd_J-L`nADr]%b!/jA%Wk`Fl5-@^(NdqhJOBN/h'i>_QWC_UFJ[>Isk`[2ioV\(0;hIHYT-P2g+At<=7Q/Voam99sWhFiaRB?R'&HtL(=`OL#N)`VTWro=>%YY/.l0eW_E432S@`ZD4'K4k:GNVS#f&2"FXrJ&HK*e''G63!:ljf21="<`\SN%]$AXs>i$aD\i6gaDs.kZJ'gO.4eRN7Nl_mK9F6%YJiWf2:@7+MOAjG+_eME35Y;#!;#<!a?`A.R383qH(&O@d,7],qk=Fo/;dEJ*Yb\H^7ibp6B;S3F"*8_c*:bm8Eq=lYY51X:^`\b%"$CC]16RSr!5q!G4AiP@7Njd^lY/ZSHR:&S2.Hl^.Sq`0pC6f`A(!>f5Itgk5t7i`1tZsOeWF@K(MLVrMZNem-8@r,8kUsR,:&S@%7;Y``Vc!)@)+#&^0uRV"Uc?=P%+Y<<+r)p(TbS$ml80'\gInX`%^`Xr0.S"TLoX;_>qu,?0aOaA@K>)t4Z<8W$5nt^JsQ2?&GqMW%kqb)$JQjKC<fid0d$ftk/Z6FXM.DMhDumJ*@7"eQ&f[7d:)6/g9'1qLWl4'eqJft)_"P]]"_^Q?5bK^18qiJ(;DG>!<"g%`=ESqJ%_8tGc*;iDOe>a]hMk4VRJO#kB7BeHgnK79&8XC00<rb7X;)\U<M7ldEC!.\$U9YA&*h!7hAn=r_!Pql/5f5jD*codAJgIEfk$Dg>%aKUu'JB7"C#/hE.7><X'o-?'<CS,;n84=p[qN1*,/'C;2>p%m:6D%bS;)#mrEOQ[`ZU:t7i[]q$T`)q[9@-_ADhfOL/ti^"7Unt5%)j!E_b3GILZbn.>fQfge6a8*l)kk;D7@UJ)Y-j9+4!8jC!]'#eFUK@G>]'Q-m>^K:S2`ZT>u77W#o.$4g1-YK5#*5VN;YZ/iZK.8%&A(VZ5R@/SP*hi,(j$%1Xj%WK\In(^CZ$0Ep#&XP@Mq:[$7tc3/-]hlX<`DI%Aa*\J]JY\!O@Vmj;i!)&:H8qItUa>^<BE*<`#nf%Un!6>.j6laIk'4fUs:G(mgk*1buQ!M&D=g_0!,%YZ1eM88n'cF&*8%U@t;u?a/V6'$I*+*N#6:TdO'QEC5Vk^(b2ePZ7>tuFX6E1%\`V95E!(s(Z*+<O!d=R#1!uk-4UatN;+?hRp)(!W*CE0MJESC(gWLE^2QcN[lr@st:\0Xkmm^t1"KOm*YpE?+*sHBcI&%2jbgopm%"Bmu),qCHr1b^0iRln%*(?budP6#X-o_)mOh[Rqt<"[g2S-8_B":8()5f+<NM*d19h%?aN5[(%L0S2,"PLt_L1_,V97A(l9m4mCT%N+kEMPiAcRdbE]B'_O^&M1Phm(phHs$J?!L7/,q2<oCq'"+;JA1/.k!PRbM-RU";!Et;D:(dDLD#"ScP)a\#74oUs3`@*W$!eEn8%^a#>6-30!\)FVLU8-b%EOiTat100bTf`Rj]JYAe?&a2aEPS6HZAIBN"$TRX1r'lNY,&7/JN<PUSF@F2!_3>0?l]Ee(Wo+N]jk)lt%(b(t^YiG;No-o!;"gKVBe#F%c$Pncl?M2F;,7dR")&FNBEDn@HLX.VQaT=0Yb8$YM0FO:)%dELNBq#Nn*b9'\;ko;fkZ85=\10>7%!Fdmj_VBc?V!TR"[Ks%#nPTH,guejAe.]iZe`:+28-7bO@ulqqA+$TK,Y4&%nWdZDJ.`J*/XgE^nmc2h5p$,s81t.Nj7N79T%8^"%%59(NQ%D?sOJn#gU+?j),g`7fG6$pCQsUE1q?!tEisV!/_80,5YZJLmY[d9i9A=nj17^`a"oCk^C*I4]:m4?q+u^/>DrnbWB;*1[%/([?%f]`O/ZMjKC[:;*%W-R;.=pG+,T'33liN%4Ed#;'dI;@5H83l66R?j$(0ZH^lI-K*>@p0-k<.Ll#bXaN[5g@>^"I']ZAi2RU%9rRY,Ws+S-,,TZ=r7JtXlA4A_q8*oOT5paKS&XptUnE>#q]<u^BGcSN&M)B,$'&['TLh`NFolM*W<4CgQ&9]8!tc*BKapo.CZ6QX%$Z[>eE54tKaL'8Jp%X=jA0?c6Ag2C069u1tL*H>jV)L@L[44j)i!r(."bs")fgG;.!h_2YX3`%QKi6MWMk9,VJ3^BqL6+/;jLmtu%%jC29[3QNMh4un7M%Y1Log=h\r$I(._Aj5C6&,bme!)Ph?p_up7-*D;Gmb'ls"D.gHLPDLJ``sM#N4^+0j+$^e3O;t+"UiFCqA*Z%cH$t4<V^*Leg!`2L.!f$Fs72GJg<%kCuA\(7(4FPHkT:,`GfG18.rk*I[#B*$Q',ciPRZP`2tG6&?(4`>d&atki[IbaA?<I;/\Kd%KEVZ,$@JZ[;@-V7TeKn)`]AP81O;Dc-EOf'H`^:rm57T<Ynr['TQpT%</Oj.?gie@0!`9hLYsp^S9`>@JB0"/hM4)^9T8VbO<cT"%$kOO66Z:1eAg([*:kpTt=X(Km_B^Pf'7VfuoGqQV)1M#\&YRAZ'!BSICSVmPk8.AoIW=+uXH]Z<n:b7X/I/q*RLj#@/VkgVRNk,G%"EW#.oeA`s"4TZ2JJT+Dpf-AbcWlWX0lo:B@ghMA@%G9oHu48:1]a9`E@mt%3,eGC-7gV:j[@m\pQhCfRZ]#;UFP#M-2+3h)ZVqV%*g8WR$8/j$^j$G.<C;Ws0A%WYW?CgX3%um<crc_UE*aZCs5LYcHujYf4pYo'/7>U_bK'QjmP.FF!OG34ETo83d8(YL?`f#gFk"`!%h`Ag6eR%u`?baJ8*j(Y*H1=ICP?5M[]5GD7\>S8)#7e`uKe7rtJhk,c\!jG!ki@lI<WcQh13jJn?@ZAR][a**"X"#R,>\Eq+sK!m%[3Hja'Ep#'@&.'11;LgFqBBbcL`]K-6l@WhI8@kg&-t@+_S@Fmf2HG+i?!>TU^Nlj[6-ttq7Ion9$s.E>!iJ3?Ud=(08*j+%jH9D%W.5-U'An(0IS8E`fE.Hl8C0O=CZ54&l*b7J^QWVXA*[6[-6f,eUr<FVTMXegJe'gKi1Q\W)M.WjO"Z46K>a/VU0&*8n@!X_bWu,M%]4dH>0JWXE_F?no-V<6bP(m9k^mJ@U5iEFqhj@OD-8[<@Q%fl+ej2p6$8WA1b7Hp5PgluFm",VK7`p#\33SGUQ7QOs+Uh6(ViMIJ%(43^I?53!F'uCb2O^rGo;<I"M2DPD)M=Jng&G%-`JTrq!1=]6+Oh@BV9YqeeAHb2S?G\X.'O(UiGfQlHgDc74VL\]66N:&Y`X7[7%!.bMMmuZ[.5_B=8'm!M$ZaM7qHjK[7jL^.B,!Pl:V?R0j]`$e=b4:NC(i]E[iGk"`hb5F1bdM-qEE1!e!^"*u0N.-+!]Lt]bfFX$%jP1CQi_5A;<_-jT>\;Rrd(PV@&?`-TDh/Qo](f+L\Yd7ghnr#bQKnfZ3K,k.iD:6Y?3784rg(!gDh?`\r+C[(=g:)gWB<J?N0SpX%.%78kDgOh#T>+1kV%4:gqB`VE9WfMV%a4UFV*ZU$Q4,&3,cGTkFLj`1`>4":eSU7[85J:a*?<lc@"VV$!^&Q$'k-#k]YO=4W]Uc^%->d7E,'RG321Wa.OA+<n+:&E@WlP8\DC[g>KSc'u:gZR@,&D$EDZcliheSWI&CPi8q%hIZ)9MWg>QjChWItNZ,N=PG#bDaARHR[B%ZUHa8@N/H^@"F[8D,l$)=Iu+_'bkb%do.NP=6S5&a;)_98@ibN1k=m1PBo@q-R-.)&b20tlO#D.,1.R2_Tmp1m9'?RZWJd0W0@u6%@DJSM+QasA/GKoa8D(h-L_9"rRb3s'F!lVu2:#P.'tjZWnKBc95t_FVSf];hmA-P1=5FIIQB1*KE3r<'eT+)P`&N)Q5PTs\8mj@@%^_[W>qQN->^PJCRK95G:]WO5&fcpn]n]t`?!H)g&3(OGq;T9_$KKq9<E-6^[QSJC[Om"oP5.GU:2(5o-EL^XR?fKiDHsn#c*CaI9%Y$mu$joj>VK]3YJV;ZPk=JdR=K"^HedAuq8=ICOD=H6Gfo$'@70Geu"%n.F0$>lT]R9V1!3?kMs0<alZ][J%G5<WU'1R2oh<8I3A%_4h#O&[<^V-gro,%>Ii'!Z&%'V""`3B%er7+Ria>4UoK"#+NlK%H"QlHXI\e[^!@9laA"'6eDpYodMr\Q`*n%&Y=""nWe>:!YA7J%raIC.V@%%2?a,*<W/JNOZk^D>j&-<HVF[k'!Afpk@'i<G.YYoq)kN3>"@<;M:&S)*T5;'b=+m,WJB41(g'E]*9IAji$;h&EoTTLq%UAh,h;?-cF$tUMI:f_5AV-lS4)nccJ*FB_;,)(?'a@mabf!Buj&!I`=oFZ0.3>BXf+uoW?:_\d4^j7i0]dA66$:kiVOME=B=TRb5%%nhuD25i+-WDFZg5.R@aJ+u4[PZZ]CY(f>AnB4Mh`;ommFAq+J!E-&lb@Y>q7Kj#o4B1WdgF+rsf#Pes"u2mOP7#qs,`tH!hG;d;%r@EK@(iiY%&"/NV6dr3V^/QWkU+7KR=+Q0Z^^Yfmi$!__MG=9!JPBaBH3#r-Hn]7LOpEY3Qo5m'.8^.8LD+XCN-ppT4Y!%:`f8E"%Q%Zqk*/_le<T6Te/2bR,k\15>9aJ-?1l,R$V$9rUr^,+&+MW2`2)hnR+FUR1nD*6O"ABDbal)Jq??3cp+DObJ(_U%^]OmfY@QOZ?%%)Pi0#'+R2kp3H2R(4o1Z#".hPDEg-5pYP[<3*SX%gI;QU@gZGj$j,@hLtiE:uG`S$JDo-*mMbbUBOUgRQ!A9(jVQSbY25aWJdh^%TS+:O2#89/E<CQ3)V_AikYt#n3)I$)=QVkU;VcW4e[Me'VJd&Z-pcr<Bcl:G!RKD*g]^3@LXmUQcqG$:n:UlQ0iC(Pl[6U)K$YHG%<"1=&F9fR+%d]DnA>GKoSF>q"0*)35'E@M<+^d=EfPW"T#Aa[A'+[)\!,;HWMY*c)7Pl1*DGP6YYh3p70/5Y"LTF/_Pt"#?QJ+eB%A>e29o)fo]<3]%]PQGi4[PFO['#.Y9b7oYD`a!LS:7l$No0rWY>0X5?0mLfqX@i2Fnd['<m'.dsW%/L$H,f+.2>Y9B<m"od9<i**%N#bAFd9/XGkQ6@A#Oq/;p&HtrUk`PMHPBCR9Crj<%:VpqJe(X$iCEfdLQTL0J;Tf?aI2#B^a;fKSfj^dnm=^sM)#5`"Vp\I+)IS\%4l]lS7>*)i!KL(sfiuLj*T3"]0;3&d;+X:5+8hJt*;D]N0D1,\Q.?Ar4/kb,LnZd4Lk1]En1Z2\*KEc*bH&`.>G5PR!O2p@P)uJ(%nIbCV:K2Zi2iYaj%2+GP\tEP",mns^pt#8X-W1pFd;XZHF+ZQ36oLs;_he)bP4@?E'/M`_YpUU[CeG!,SiDs:!E9>tQQ\E:M(tN3%33jp*ZR2^O<?bQgd)CUh<X%c9&Vr\,7bXHd7N-nDM9=K,``"-3U(S5c'jLbqO_=;*b_[lA]5BGZjPkua;gqr.qaWhK*ml5r2Xr?n%H8*mFH]s&O#*d6DbPuc#rWaKu.Q]fge=je>s6]X^]KP.l**1jrH4Jd*c/ogYVmuVsF!-)Vkg;BX-cd^[Q^j7J+eg7?KK7rnandf4%0k\hPLc"&,[7B9t$)QZB*ZK?H1<G,n&Ni@YX]e2lCCm73q\VVMer2bcXf;M';JbdCkZOul(pOT-;T8Z98=E(&rqBf136b1W5_#GD%+I*q(H%ApQ^pA#i1UN.>X=Hq(&IJY3OD"YW-I<a;Rp%FCeC/p^;QBp?a?YYU.<$$h:L7iOUE!<o-F-`9>M*QJ>;liOJ:*U[cjA9Z%.#C$>$aJY`6%E$eEDOaHS195]B/.@*"efV-0c16)(pWBNUifB\egRq7qb!S&^`>NQe[UJ^:(JQ1GbG\6:+l,$Ue$Y1#&MZOfrbr<%abU/T^jm;Md.!.r3[.Xdb.TkO$h]#4i.'<<Qq.bfDo;S[D>4gh;b7KHOXA;_6<F5u/#,/CO4_u*&4%D$E)7Td^^,"7OHu?2Is<=u%>.AE77SC&!E'>buh?4I1K)lsd;=W>:#rtMsrY_,g'bZcZq?g!579]`^W_UAjrGTR"">]M^"r5$3$g;L*1OIDgp`$89+de#4a0;VW%Kd`#K<&SL'$q\DsT'=-pkKe2#LQf;e4N/tB'R_PipF%B5%O)Hs&9'K7K@3:J@.X>`_E?i+HK#S.68C80QV[dEmE1`2H6it+V,>J6%QRKuq]nEALZ:n0@q5c<+`"48H3QCsTgOR6C:!uWl&S"ij8bEnq^:[M10299IJ^:K9AM?PKJ>#oIqb^39"JU%#;Im&EEoN!#%a'eM%Vt.bbM&^!21)Pt?P5l!Wn"4QP5%VWpW;6iT9e</4!sGZlEY:\*^PHpf`o=31Bg5.,%GqDR9/?06b.NPR<e0M%8I6/iG8K=+8u)Lg%RN:Vh:acpYOAZsnTd^B-PLmG"D(q$)aEJ6*+mD4#$Lp2gl@t$NSj!Xf^u6g(l!q"A,+10>rF4FeM$/A:*h7++11;O[V-%tG'>"jU%N%u@"U,(\D+C/);$&LfCd*i2<I#5.#9q[(@"Z3:0R/n?AT7btI^d:O,*RG@Rq/GT:UL,-eJ5/.W<fbHLMA*$%OI^JnB'ct*ait99%ou1VRP=EqSoShB>A/M)n..Ibi#A*)?XIf4Zi6)bccPI4Q"f*:EglnWt`9WW)#jcmT0XfA%Qo6,:8>>$R9IQ+o-MXQF,C-bkcj)QY%?n+Z<s/%"1!H=3d@aM:"(eC@_.7DBLOod9CKgF:3LYY"]'R2?oKoi3d:5T0Bbp:OKJo@If.0'r!(**VfA%Ap&KCV=b.oK;.q;Tj=%BB2I3a;%pZimR>'k:nVKiD&7i8qNLbd^nH.MAV8>LZlV(71OlFMMD&an8p*C?&9r#MKl^geOVfsUO9Xd_\,aS,k,pORH_LgWB"6P%\=g&53MbTtMN-ta$3EbH8IJqkXYSp&Wre-BZA0sU,e3ps0%%GNc6OH`,:4#,[H(k\=:r@%J;CK:!:;d.%OT8:0ReB1GcCbZfO891%$j6GS(8>14MrLfo3*lcdlK`Hgp35j1Z_rB/m%Mn]13Bu]-S0rN%BpE*Z&m6Q$dl_AS+V]`X?S(=eh=>7'cf6(hNpjX1o5XoLgNQ-%F-m2"RRQ_la)3b[jQ%aI@-M4&\o4+Xf]>K;1sYJ"e)PY>#No3+h/>RXp,-7BA?3:[LV8HmD4E72EcSi@OK^9W_=T?Q8WoI4Z91r\%p'5l\"e=#Bo"A4V3G/O)g_6QK/,D5B"/g[#l.#iV1U(8"[^K7M>pUK['5E!s>nR9p'TaQtgk)4DQn!VA/C@D7N$fL;*5k,(&E[ls%Zkun5N76?1eoke9\`#-ibgZ4JY,AXM7LHg*A6$kt7AY_nYaq^dgeH"#%`k''L"c@W*hA#=d;qk+-Td7G[*U^oOFO0,"3V-lTk9mn%7s@+m[?lt!VtI8J/UN;EC"Yl?!8U$/JF+M'HF8O\R=RB:GpGFf/[h3V/MK*c$[-,tHZdn>_SKP%_81NpS[ac8Dq_ZA13H$WEo&kc%M)"ZOe+6DacrWTrn]CGOA`n#)R#`m-I?T`<-c\ghAYpgT5F9M&R'OY`ng:4H"b=\u3tj<F='">#T:&Yk/f=F3[s4!l+ZcK%4X<$6%F/3r5Y&H@/HFqCBKc^qK+$5mP+G_-rUI1,C@@/f0f1A.L`eg7C&+T+OZ4PJqV3&I76q*o9>F!b?X!S:S'!UpHIlYmKLJ\?d-)DiM%`R:ChdT$HW<WpI7UjiC_;Ftsd(k#-C'5(NA'5WJ<*/9-.J-8hk\W1,\9Y_5W@)l%?X9:.u;F^;sj-`BUPDM:IV=K^2RE?=ISD4]M%XL>qKMe^6Qb1o5kd=djKKKAiiK&VW)AFA@^=6VtBh\U@?ba3FN;j+:C0q".I6(PMd=YNZ%#bnY!Eu?0oDH6Ej4U'<Ej#i[==ZKl^%oR)734JKnD=+QQk?BH9Z0r$]_o8@u[Co&9oSes#>OQE:O:hg;EV7@_Vo3nj@U%nQpf?*#VY3M^:'Wb>WD_Mr%UE"1njYl>Ej3C6h%>d2\d:Y@jf@+0<U,*[o&<,lT8kXmj.H_.m=@ERM5-YIeFP/7qqod*OceKkU?_B$f#jMRuJL>X:hh9K#iI!h2-V\CQ7<G%V;%$>))%7!E'T\Pjokp8U3J"#9VGB-q?,1*R=.mkE(eL%'^;Y<s"tV]q.hVU"E3j!l`oR7fjRV<aDdTB6]?N."Bj@s9_;VH%VUHPE;$8rB%o%_Gl]?3>r-RE49'%UMZPfZENnbH)PeA/l6A9+eH!>7T;XN(7\E=HMHhNB*QHs']q4Y'@skX3=-4u4#B&FD[TZl`AkIN^YV0/_`[M=%Q%Oe\h51],e!tE=N&6+_dXuLURRQXg?^R!H!L5+RCVi"ZUXEJE&N7s0,*D2aSb=XL9.9L=pL)^@qW764Mf8GGR]\')`6FqV:PE<a%jMXSMBLC[84`J^a";CB_M+"+hmqs,&Psu;sR.:e[Cr8L_]+`=rZ.,tqW*4hMLM7u,Em5jAbfNI"aT]."]:_D<.q&okl;t9:qNBB`%j`r:J.'j"2`H1_q_F](IA5>>"IhDB>d*1jK!sL>)0B*iS#$RN!cclig4TPrMU"gIHe*U:\U%W.dL.3h[*AQT>qTY/75b)@-4pg>F%"O,DfeT/[D'LOQE)m0Nd:rZd=gPh2/B$gmKQFA'UMSgW(EPGo!PqA$_YuJ/e&9?BZ(<S09_Y.[Rn79Z7"I2ejUOWiYU3r-0&U[QC%F6S'Jjo?9XAIa:%MP*"mCE&]OG2$a<NXmTFG1&9(.sB$#*13cAg$9:*6g`)KNXaPQ^-qV==K%Vikcb[KAnN`/Bf@?uB.Of]Zn!JD%0-oR*,$kKG;E=&'."p\O6@F+$OPUp^$YVmNgL7:34?AZ,Z46:gV#1?CSBqTV.Q`f^PgVf]7AG)dQ+5)GUo[ZjNW\uKapqunDA:eU%#;*?*7n$n6=&_+O[YSW%(cT:I:j/81+>h@P30_P$!AqhE1RnlLnF`Ss@L0O9&:l??,W^2B(74D!9OfV8-qb/+ChsCj3'!E:ouqrL%PoH87HIXtjJfQq?$cV]@_Jfq5glB0ueBG%Ij<Nf<0^&WEHToE"I:>gDaa"%k)P9[((a]5F62A?>kRV3`Z1LP(Jkbs%A/7C\B:cKK%Tb@WG@/&ho!SLjZ[d\>V6NSd9VOdko[RZ3:@YWqf32>9Q]up"fUd)lm_Z`=27n>3A6sO2[RBqY+,N=?\[[N>cf^Q((d177tO:$ro%]*2o8jK*?9%+mSVRI5\jEBt7JqBue$]L6@.%*>n%4tEn[S-`se6UDR+^m#Kk`u>Y+-3?*g!`JI^@W!plo.io'"F&29&(B9k)hM<B%k62#$36h@63-L+IOuLUuO\i!/YQWQ:PO\QIenkmK*B8DQg]K2(:IpK%X%$C@EB<-J3TeT9\`20QPM5%,oSakWkP7_:p\?SjGiZ"K%NLs$'*ok11AP-E;#^h6AO2jZ_SS<f'"<p4u,"m^M7:Wub%bhK8'+$2I7cQ:mEqdTIlp+t\U#E:4OfDmRg.0.W<C8?Pblh\;g*5RN%K:?Rkhb[sfm]JhF2ctW@pQ(h%JPMDp$<78S(f8kKG1pg#8kCmJT@+;WnRU^4n!f0T:1a8S1cO$m80=B[=%jt%JlJ^0d<kspgd11m%PnOpj11fOYRZeA;^YGjUcZ-@;hM`Cca*K.G@-BdR0bgaZnh^"<`,$ls"HW]5MR4f6f&VEsTGI`kofWjR%Jl=sf^hN(+(WB45RJ1&%oPe_Kc>JP,l^PR.i*&Q@FnGY,1KT`N$EkkOZk.[=B*(jo,YCCg#ri7U;&<]Zq3o+b16!kfGO=.E&[j8$ZEsms-05nU1VkG6\r[^L%EfMIJ/hP)#lf^5r]S7%sR`'r/n<Xg30e)-5Q<:TDDI>jY":;0R:-i8YC,N\Y!IMiKX+(g^ZB?RJQo"/bj]J4MZ@'`V@lR>A@gp;\%1,22AS9TE&8jMQb;nb60JKLK+'!o?,g#_HeK87:RYWsq&2IAiUO,CpjQ6IgD6aSk<Es(-;5;<oj'j*.)4othq&cBI>SFY,SSG1dF%p-LZQ@E(b;9;PXh0iG)qZOeXNU?f+8do_]aH",%m<-&0lX?aWkF%"].QBQn5L,i6q5BP>_ZV/RW>/[6cK.LST?QeiJ$6u^hl6u@W%ZUhTX.Ipn(&Po-nTX63!Jfq9id1?PZM]dIT^e$)ddl2Fd-j`7=SS1-"a@%dIQbcR_2`&RpSE79,B6fcD`L*GN"M)uX!V"Z"jKfU@%d6Fo^_\DA9q'hF>i$srWEmZU+29qn9!0j0<O@Rfo%/FTC"lOL=8@r>H`/0G7j:bWL/?M'Jg(l]I,;T)s$WbOb<L0H"'_a.k;+OmW%:f3M!.\R]aTl`np]$2jYp;M?MK*JUun/(gd=\NPo;^_[:[CJm0#FmcW,$Z?g8t_n;p6Jsu5bp&$k8)MoY.'!n_me!Kl3+`qHtAIR%(Vu&)WL^Y$4mb%%lGmu9ge:rl"oT_`VA!$Fn,LkN]1%q>b\jJKs#k"k0bC.^@@Cgl$P5d`CXEk5<_g]3h_%S7`X0O2;co"3qBF&m%N=!4UjiJ!m+gNjr%WI?RBnp!63Q;'s=!OjkO@jh-&9(Mr1^j<IOhA.hg<P<rXdK*Tdj0Nb16jVY0rqu!X</(40*&s[`!,-oI^%8e%f9l>YPW>@J!:K`>![`5Ee\i_889n+tV[+ns_?!giTUN29A3YoEPZA9QBnDbBVMnJ^5*%.\X7E+(L&fhm>=p<j=8K&deN->!&4k$4%K.mkZF%_IYTbq%+:AMh(Q.B>1%13JI1FqVCnh;+qau*4C.\7mPAO$a>P1EjfS`EA,'\t3NQA%\nM5)1/.[4la6qBq(!3'EeYRhk$%r^8*:2P?*$nc1<KBfai9'*T$[+&l'M;2-o(O_;B.dj,SYS)(>7R(=P#eN\Uhai'O^3$A&m@ICpt;X2P8)3oO0_0fFh"F4urFXSUH%5#Q1oP]IuWkYd9_L6*o%R3*gk_>^0kA0(c&h5!,fLPP;^gGUAb!8GKoa4ir:$^(3=hJJ7E\V,!"6X1@]S:_iF14>mD8h:QL.e8ta%_n39&njnX,ZJ;mVg^[^#GR#rnO`>H?X%n%nc`.74K>\H$6*X+d;sUe!M90"4(.(j8?imW/'5FjpblZ7+0k(4,8@R/"Jh\C3JAT?]%69c,^M?JTbKSpV=dfWoOGHo0D0=A?&;3*2Ri1$/n)"ng;hI:J*C<L-*\8KUeW*@Ea"I)hS3XE#N.s,0$:p@W%`^Lqa*0V2%UesY4%Fi&:b6]U74+>H,`%65"ZFHB#fBM"$h:nCVLR=bMgC!Rb])L%KD!97O_6LLL0<VZY*.9$p?-j[dL0MKc+7+E.9HYI6@$-)pTE?96V%*HQcC8(<)!_9G[Q?rT<_)0-BEQ:VsOKKYG*CBrrr6EsslO!]n,+Y%FBPZ0cc>qe&?,Y4"u$S5pA0u--EF!G,WV0jAi[1".$63-/b%-L3MG8_?IhJeLaJTDOe(+$p"]&`&ji/;G=g7P)PrH[Sb@-t-ePjp7]P<@Hh@J_BuE&N:jd'FNo["_AH)fktCEi-'m?'?M:;OMso@%&8*]Se62tnj\$GCA<o1B),U6MNJ2boH335c;A"u.j-=DG!XkK0bD,FhI"DEj*uU^dF;$A[Oj^.YA.qR3USV1o0@WD!p&%qRcRp+M%@hU4b7g.<oL.-_n(*N-Kb%.Yqg+'s[*Z1)AU"DYA?4Tl);6!cq/E+^HcpFl;#ZYHV<jGO89QMnD!h5;kXoU=4+]Tj$_S]/!(8p8P%#$GG,_]P<iB986)j;$4BYu!VOcTnGgGahgD*gd&4V[i%sASVkf8gl(ML/p4f;aT&Vg_S7S,!a#`akOXJ2R%WB:Y(jK*+g>07HXE0%QL]J3`u(0WW%t=s";VU,QO!pFaPc&k.%!=6-.Z>YPAgt6D@X`FaV?05'Gc450Gq$]d&U9?5HnLk2M`Ud9+s!ALic:\MPpPNFrVN4%P&A?t(G:N%k[B![-3:uR;ctEDm'4IaVGt@NE8?aB+"es3jT@O]hl2Ur[D5Jg@ff<K"j[nL!kfE349B@ST-HL`IOa$O*#%V[%/A%=%K`.'Qm3/kpdJ@G]?mp`<<]XV3,I,@SXY>iUNe/H/"FH\]+;5.-L@Mpu'Uj=\G[01Ff*[u$FkN!]!gs-*-:U5C<V6L=RiNG$+so]C%PDE3=2_._`XQ;MTE3:d/2L'<*LJ!E?bDd0S?j=L_&TO6E_TNe>H\&lQMp6)B>RO6M&o'JcVhYPeX=H'lEb<*Rb8ujA:,rSBK0Gbk%2`!K3RAD0sA5:.b:MpRPDG%;GDbD9:7q,khA'3(H%@d`(\#nl$ApduT,%5aa:8W`Rq2dU;9S&bP5]Hke[["PWboe<f(1cSb/q)\R%.:l"aF,pB[agE5b/I<E>00ua<lkuZb+H*:5Fr!!(Qf(l86NM,5.U1AS+De&rDN+`,g^B:5IXUsFa[s_C"gL>S9[(&,M=&)b]@:0!%aCR0$V,0PD2fc+.oP-$MR7OD:<*@3@r:I(?ZopB.)BBfG?!8F+Wq5!f>0i3L7Gi:W70!(1pNq+&e66,1n*bF&c1eSdeG7f=[%@m&%]7VWoIr!MoCRnf#i9R%Wr9[mQ>JBCsHT0YeqfpV>ffqLN^G2VMQ1e*k&_egL^Y.q3g>gms;r<59c[U(`DH#o%\pY^g-hj`eolu-q%dGu[)&UQ9SBtCX+RtRoJ.quSpEHouIDfn-KWnL(OQ_")-cI&T(1[5C=G1]fon\^R.c;AqpgT;H%>&Et^6TLoAh5o4Fhk1/(2h,rA%UV1`-n8Z-.1[Jk)cp*hN.tc7@,:JkBCV&=bg,nMXDhD>tIHq=8qOIpe2c'.Zj'#hl2qmSMh_<1BI6Hfd3rf%^gVt;^S\7>(f7Tp,%hfK&-SR%5tXmXTgd5UlgDeI$3qPl0q\`tj4s),#aL>TT>HA`%,+5P&25O\Nk2o;_t>&O(]^Q5rnI=N[=]%60ULBlJ^T#Gr&qjl#@%?h\oD]kiL&NgS%Y.$]j`VE<'DdXUlC2_$BoqHALE+)G,3:LPS/aES2f)#Z3V2Iq,Un@Z2jg3`dYVVl-c?TJ%,ghNaXI/Y%ER=Eth%'uV!A%ag>/idhOsdf3Z=6F<1<`\l-@2&"=@9nER#Bhh^:6'TF)Uj?l,gMQ,a*(tWl.F5STRft2N=+L>+0LfR0kd8$HLB$l-4XhLG%5``on2rV<@f7Ht7OoN(FVaKJ]-bHGk]29M8<^Np?IF.-[hJ^02_YGG-TtgD7`.UaOU;DL<GYC!`_LJqZn0$p$_R/s<e+U]WJEG1#%RdNP.T;NdX!S)!4`,7;%)5@62#>CAUE[8ZMDP!Z#ju%o_)!1m$V#SgI+iaP9*r[*PT'C,:>;cY?ee^>\7rb#UWLqkJaRLsj6VI.,%O^>"Ws.8?!Q:GIja(AF5Zbb=SCmd1$=g(oS;PONsfAJL21ot8/C"RS9f_1"72H]?/00poEA2u?Td;?GBiJk;D6R7K:2&S43N7b.u%"g`*#8HeH,4K/2ZQA;f<$ZMShM.HWmC_2Y2R"Ol-HRD*A4AWhBli5cSWFs."-5SXS`\Jh,Yk\FbH0=I[CUeT0NUN,b?82n0m4V?,%(OYf0T.LOtPIrnld[2>Se5IO[N*Tjco;p-/R/7%gQqK&63e=2U6H1QOb@FUsiC<A8)72&t/;!f`j=ME^8U<#oq\9M"B>5Tj3ZNXj%dP3hFab%SS)5h@SkHeLs$)-CW+4pLTN5$U[DO-nCE[=AX#3D)-S!n#$oSY&A4/:]Hm]^ioa\i*,,Q(43Ao$q?p$S0l8T47[MAESk%!nu712g,Z@O*b/H;H^2r3]2=Q^HLpn^NF%uUSlh[eS=!gPL0=OVlSE^-Tc=egRVYP,8o[M]kaLPpt&1;lYn]E5a?6#2EgK4<J#,W%PukEha1$[ufD3[2QWdY]FnU:2DoNSI`_$C8h)pa58Lj<bI.^moq9:#W<9Vr3lL[8d%XN5DmD&/8f"osVUUKc*$73CAg#@A`fPIs>%dZmt3;+NGj[pN15oiA=Pc\>(FGdmm=naHoOYPWl@ob]Gh\iI1Fo$'I-mmOmX6N:q<[N+BUO`)9dGW!:`-aUX-;Kj&T:W@^B0>?cG%HMtTQpTuf2AgInQ,A049&#=9@W]2RBg[0B/T*-U#bmEbfAL!?(AVtS!]OC[-$23WHR*JRg@2WCS7@W<7+LES;c\)*TY<=(7@hE'K%0a*&1*GqJ@<GaM>7;&*(j/D`)3HI^9%W6I`J^0O@O`,<FUsA+"o?p2SjCXq?9f>g#g<8ou3D4TV'ebcrW,JPDET;F5WgAP-q'*N6%h3/k,g,\sT;ou6X\(l$e+?8ihTK@fWf^0%:;EiGI5f:/uXAHbMh6s0-Tg'e/HkCGsi\m]4`&n@`S/.t'[[iS!'Dd6f-'*n?c\Or=%G!Zu6QkYSQ<p@5X%[3)_8+?fD7jeE;:rj2bb`ECgFpR)nh8-qb#=h")KejCjrd-C`\M&?o428?s?l7&6#r<sd&22qo\*&ChdFW:8%mPAR6,rLch0XL?J8!E@*iMlV2l>A+ce+7RmbqFbsfCgXrrMj4je^[]o.J4g-EqLAnL-Js^@m`$0oHs35q1Y6l>6"@7coJNBBk4r(%q-[3HF`=\qjDO=^\X$5'HIi,HREu0r0n[4ZoT):cC%%Q3%>"M>rOC?\pTsY%]<AIoco]eF*49,oB[5U0XqUZp0;li$mGjZ(TYp0S%K?iGlI^<?sA,,\)s/>gAYCF(:kZarBI/Nd#kc6mg>1ttrDRbG\-d^,,k&jJ6oK$r/)g($sLX0'$lXZ[7Q=e+)9d/+pGHebqpc;j@%VI<oB1^E47XX1Cf)pH/Lq]>^CoD<L9hh,hG++n]+"^k'f4P09*hT94#BXHV6F]o0FDTL]m3t6[$fE2>b1\a[oJ,=?R=b"2EIp'Fg%cYYO,%_HoV[Cu@=_qpMnYQTH+P]9-5kmO,`J,e'87i!"Rm2M,YR(8hZ^Q83B)_:bq=3][-46l1uM4]4urbN8C`S-ZLmV)AkR)FK%%%f]9Tgp1ej^)ck>#J^^PY;isc6S7I2%X(W;0[]4]e+N98D@S`N<l1-s2fENm-08bJhb9X(ih`F/VnJ;QW.0&mVQhr?i8;-UZA.pn%i"%br2-ZY9LVnW,ia<5IRiKHd:Ouia5-E3C+d6lQHZ6?qJ+rtgW,bs:4q,.(h@G^>-EZ`-ZQoL_[E7d]ne=b`$i\87V'2#mCEJ$$%q`jcU%XSG-s!++">f]\?A?aZk"k3*.E_Z?Ys.23h!(r+DIb_[-ZE%Q>J'(Xg?2<DQ>`BiDPT9+`[@2SFXlf))rR&*2.ge!b4N[S2%/)n[;=7r['MNu<(0(tVV5Q.K394hO;f5?)6fu'r[QdPE@JJJbD+3!r5eUIOjZaB9)Ap?iBa.n:)KE"9uMe5FJU_*;34Y3ARi+mQ/%+.pR5m>V@?rP;q*h^N*]p`:FJT7T@MXl&FT-I13>LRmB$jNE>MYkc]_05TYJrUY9H_m)kqqq$AGs/1u$BBJ;erB0?:%RuYM($/H>%qEMJ<1[jmtNX,NdKC3]'n8#>Vq+nV9\[bd(KtW\db+[sJ-PJW2+83F\;_Kf*HaqhdJ$cYm4m7AUkl(81\'k3#;OiIR)ErM3T?.$T%dbJu0O$oS[GdQ>g9`1)&<-eK74VRhqA^0_fhuCrD2?*\nO.X'p^rk'8Pt*p*J$dgR#KQ45IIP)/m<8d32>^POHc-jgI6;oMFK7"6%&gCNQ\qAt2mU1]cY1R08%j(EL#QN==)Ta@\M<;Qu4m]?=m,W)!A`)^\k)ojs>docSp3J+`RUnP`KFJkoj?\8g^T@9a@kC4<p::^1%7*FCG4<FH-lh5YB]X1N.afG)!5X^+c#diV]G]_U6g3q[8IV#ZMd%L&4Ih+uaAga7%7W_WU/@;$mp*rr,[e\tABYXTAE+6H27gK&L%-b8m@_<ullZ5$u=jjq)nq#qID;a1i%L].nPEdL<_Z;mAjs%OG/$_F&J>]6XGr2M?:oMNEqCUtqj.V);$WfJ?q?Sp;7nP!;hRD);g%X6EHJ(=(<p'2a1N$>9PGntbm<2>`%R=M;]6^No9nI%I56/>u&:`:(P\^T0@q'>KH`gK'7,8n,*W5Q9JFmHjfH3ku$.W]!QDZ0`Z(%@]N\GIC`_;MgghFQF;!4G/*ZrkU2.EblL(8#)G@b2f:j$ja@A(lR0`!c(1!/lIG;]I=+Je@$$!Mpg@<3>-:GWpfAR0WX$kQDIlq(%cf4P*S$Z#n!n!bf=WWf2$G]=il)UPUXh#t+$XsCAf'5)n6&G+9b5Yd5_oBHOqh#LM8emkOn)o!W3GrbXNkV+C]_]Yra/'HE5M4Or%H$AbYgO@]Of;QBfIk^/tmht3SZREuM*Tk`&H\bJ44V7S8`0OcPK="M1?,L6o5np-f9`mJ.M(P8)9Ph=F;P9>F'q`jS4W8F&L;t=Z%,ObT^_]A*QLFs;WZtJddcEY*!_h5jjT#9uLT$_F@UZX#"j-*@;AS4!f%Tl0VIb>b8HRJM+5L+]KZoe1Di<q<Js2(,3%s0>3hO8j\%Itb.eIiS.UIe<<oi(WaQ>5Sb5,>Sf?!C,Yd:&0$#Gj;5SUeu]`E9'if3bD`/Se7S#k4aoIQ4(%doF?cQkHHc?_.Zl$Z/a./^2jb<%.jq++_4L#.k?K^ErP_HUJF/YOFn\B%aR"(rSYNmh?KXN")!`1^Fk\-hf:')e@LQK:<QR,T"7^*/%usWhdeD_$7b`SLNoejdIru":%i2gV5O[dT%IfS@$V/9o'Gh*s2o<[9O)ce;u1"[QVQcV7f86S[23_)\g.l5SUPo@cUL;Q,B/2o[Og7-HbHN_'*qi-WCqshF]QcgkJ%6A,:-rlKft_b!#Xp%)^nciB*Cp]g[A^#^J"=(B;1QM.C(WMsV=WneYO$,)dnK4<"LY&9W=:6dnj9`%#&f6&<4<q>Vt.U-`cXeT$l%meHd-rZ6rF@iK.;NR07lCn&=Pe;68?\Z4I_pT#Y%^W(K+HN88O(K`K`m]UN3^6:3?UZLIVmVpCeTZMZOGjqQu1:f?f%f?-4A#Vlj%f>A]RLRl8B@K4N;AMPPjDXR#7%9ehha,SjI\mHuiC)Umad+pA#\j>pM=$N[lR<=.j\QP9n*nhgYZJ-7U45A2#hulDBBR6`tbCcQC%rCJ4ES<[&4_1chI8D-nMi;N'[GSM6#O_S?aNPG437gC89L5fn<:Q`&'e4t&jHFsQ$EplLuX1c@KnjmiS_I6I#+D<RdgH-<t)6(l#%Dst0QVj-^@brWQ+numf8^5Y-rd&K>*.Xd:n_u3OHG\D-Q+!-A*AC*s;p[P`li4m:@l44@];`Wg\me$e-L>COZn>^JFjeY*-O2bEC%BPC%DodS?;E<:1]/TqXoLRmJb"'O4o=4%o67h(p\a.I;!DO:;5a#2Z@%M-8p9g\UEnR*4<U2afL)L^'[%)]Bj2uC3iZZ"Y+A<o9G%84%DC]4VH"pdm"#P&?&TQ/$-dB9V(3c[d0sDee-\8Ib&SOCYan>n!_/*ZYqpd3r\6:Z5>a8>9uYRF<7<HJIf\Ge\\qBZ;9cG4cm@%-?(Vb<PDA-[W(fLK;4UtX)</s01(8S/YQn^rUffp-mi*ep6JRjkapKYd^TbW<.t<W(9Qli-4FL.>]l#1RM?eN]D[:X%ot8!=q6$%%*,A`'oOAM^"(m(Y?H_Y]gu!OU)$OYq<i_r6D/A[JT,.XXS1]KLCk5!e1)RD\8,K*c)QO>+Y9"*5qsZ`+=/6q;'10o%U]\-sL1L23%3n^+&cEd9s.k0#Wfr:1uW>QU@f3"2ckt:M@Zn'M@(mU!IC7pU`<q^GR*233/?=^BlV%[K?ET@3>@;$!e"9ceaXW%7a+`N<?G1I]t%9&k'Mmlk7s=h&WV/R?"R]^kdoqNJsH?T,+##ZgBn>lD/Lh0].sDXp<]mGI3c>WBU8hKkuCoZb]d-^Qd<?2Meq^olL?Z[9RtHD>`H%jf?X-pMV+&aOHjInB]\&mA8-uII'XgGAF^oF7OWsj_4DSOMA@'o5Ng5*uc"#K=d\L#JE(RG?7!nIBg(urQ,"Xl^n,'?,*UnZE_.;%nGNUYlIt&U`s^9K]_LL?]l0YW-dl130U4(6EbBUXqXLo4pRc!6]BR5fIk5O3s,>gA(,cBcs7FnBgjJj2o?PLL]rLn`4hbt6=:an?%Be?i>kO\Q@ao0gAannm&e@T4?Hh5[D[lkdNDroFDQfBUqb,`RX'+8S-&G4*!.jNlrj-0/tkML.f#1<9u(T?rGpYT64\OatnDnE?$%ATXoXEW*e])lr7ME1Zt&gqQ&jg`!oTo=b.Eo9[2K[)fhdqJr^m=r=-+UGp$0rf9_;7JH)TptXSgkL&Z52d]k&o29uUI.2m"Qc#pV%\9@V_\P(=((d?KVH'9l<(o@h<o]N@FqQEu'Gl*iaXlfq;5PXa?r<jTET<\<uqV1(@I.Pb+jiTkR?@91]4/b2bnmJ/+d+6'AE;SGM%@-B6PWn'4)\,H'Kq;CDcW^2E,Y<Q<m))V?$fX^ot!s`ZpPh$aYH%54)nF]63T]\6u7MfAQpU7(+oeomDgohX'[@i:T(G6a<Y2$!G%E:iRn\,#.=:A(7jcJ?4q5Q:;TEmP%%K3(#\h#0![K0Sh=qM^('=''Q(o"4b=i;LdR/K"+\Gu#76Kn&dn.sfR=lZQ)f$6>rpDjAqc%IJInlco=5eFBgcgVnn.,8$?Y3^#)]/k!d%m:`,LZd_3s[lNVc^0jMBa^3\/\k<9;-I-\Kt%&t`b%JsW%b2&[+&%APC]lpH#o5;gG%n[GRnrk/9DHI1m34)ZqHT'8%3[FXr=?^$C$%tj%FK6j"/5&AdYW\,k#3-r/:(fZP?_fiZtf0@$L*qY#mEk/fL]W4Hhked">4QsDR%`<(AS4cAa@Dp_k`2r=SebcUQagYPu:jMRY"97oFpp=7@3;P49fQAR3KqWlI&@8Iqtf:)Wihu$S8kdpN\lA)Hecpp<=hZ#cap9J_c%SQhFJI4MAMW\-EumY"okTRSP=4.i[GY9*>X_sXkGrk,OM#Al%P_nN[/oX/khSSp/Fn(%sE^jG\6pic>'>N%naiUu@3gNP.!qW@SC%q:\-lI!Ta\<&a#^muMfkf'T,V/^CRrmr!OLpu92Hb!A6Ss7*%2d-pG_rQUcsheQukI2M[DWn7+6qsiY:/.F*7rUadfW-6P(_ToQ1%G#3G&gq3F:gGh0?>WHKoD!Cl.q]D+^oUt/`n^<qT8j;d<]A]$lV.hMdq/`TX'o*5Nhd(Vs?gF$Pq<H3>)"_]S:u1O5T0i2#NT-VK%rhV\=kigk\]eB2hSpTAjlO"*4qTaST-\^.W_q0+Y_4^PG2!NDNXRrr.(fY#3f#.*:L:ub7=XoNMlc7C/H>16S2qOY^#JE)6FEW^Q%d+.,J#:nWESDI7o`emQ;r;@tW2"tn%==t`kI)#RS'tpU&c6nmLd_j\'55&nqrJE7Kr:&MMs6rb=fAF5rT,17;J(:?=rDLnDH3Z'.%>?bKMl#jabPJZc<ofpR2LHj5HY=IKq^TIGlfm\&7^&>@Gqe:$Bjlb@$dr1e<QYV(V#ql1e=7n*80O*.hmKL"*Ds]agEi\ockNDS_%+4g@Y5.pOWp?SD[m*"L_=lJ\uf+*HsrSjHa=o<F:n]k#!YA`!qr>=0o9,RP9@J@dPg9:O$^OGcLmB<,u4sh)HIV"Id+)N)aXSr"9%RpbnXmB;:02Xc*rqc0EV`N@d#XShtU+M.HYp=I!Qh4:[Z?S@t^o]Z8(HAl.`=F%L4Xo8*9E::GHpZou4i8U#k[2=fDH5h(2b,TA4%hC@=FCTh%Qn+!SsbI7ko^A@cclAGISFT!KsPSYUhXY!gae%Ff+pu@.;YMWZ7>4$H6mbH&.?A+O8a!+1"p\&LULjd1MpYU@D]sI:p%e\WD!U/kS`h2aHTK>/2)XnIOr/546PS\^qbOj;eTdrWisR%:kcjHb;`qYJB"c<YqkETc-M:]%?@/cKnS"TE1@+2K%7kE_]eMT\?F%]<<_<_OXZPHL7/e:A[9*`?b<^P5*ScSB-s;d`kR_pRV2jNrAS8O0;iFASIJ@=8M5)oeF.ASI[@1ftP)T]t1J!pC>-0^BBJFm98!P%UoeH\95JhHk1X22-FVB4f^?_F5A[s_6>aoH$b+IT-haJk1gQ$*`KHQh4uDKni_asd;hK6$cOZUj)QZA5J4G$k6'%?Sm4NmRFr(WI%f=j@BD`iI':%Ver?<Beum"H]0?dXqpQeQUW]OB/kH*q\"krk'%X)r/CrLp(L33Wps3r^gY](+t?cS%3emd+7WJ#]W+/2nrC#3Gqm%>Nu08I0D#mGtY:khYX?4IX3,0IqUUJo:):^=0#.Z4`Br6mHqd_.X*+`[f3gPE_%eLo\P"21qa,1<KkNfG]D\<LZbk1?MZ@"=DDjM%mcF5ckqbe5qs;Fo-I^`%GeIg1\%].hrPq@__2ELr%PHPLSf?VAmG]"qktK(2*.M5nnnL=@.7^VLgNKFmp"02+*HZ65Y'CH\eNA>1%=QGKT*;%t0rb)B<4[uf'_9)XoCYtj^]J#`(]R.<*Z+'[(M-BH8ai<2LmTY8L*IkBoB`F+TPVu<`afQB*[m@J?QsX4;Iq^)(8+oL"%qYH8t[<jiVE8)DT@X.;.h2TU([Q@Q!Nm"rt]>oj,6WVau'o]NJY7&%/f,*iT=5]WVg$,%HCi6%%DfDW#p3p>[]7$Z^7tJ]SN>DHt%r8GWnF^gj5bZ8Y0l`Mnf+8QuTTf_"0/8aYAba.0Bej7E^R:!tFUK,*@/3&-pa>Z?`gqN#8Xh!]pS8*(h/&tD'2ge^b]o'p;XdpH5%Kr6kG1-IanGUg8Ea(a@M:MbNdqm?g_J%VT=P4#2V\QZMs)Sb(Y1qRc'r/=."Bl[oH*c)q8+oVfbklO^&obcB72sK/b_<Yqi3F,h(%5D%)Q]LOZ<8#E='6M\'TDZ&+thA7ad]kP!k%1Zb&^Uj8ie+9p@qu-$`T>89K=u<gK=5L[JeV+2&,J)#6&lf,r$cL<9KAiuiVHZ\f%&_LiAgE+$-Go?fhDOaQ0I.Eo-^*"2B_<RZGA'eHB:cK0k.k',p.Z.hUjh'j!74`f++4k,"BH&Xp#8SQ^,$3gc_37MGo#o23hg#0K%<7n8HpdV\tfIJ69XbBp[TBl$l\HY4f+.]n,J=q\*]Dljq]Qiba<c5)n>cuk_me62thNnS.h7NLBl$P1nI]_R(?>;2XXJQFK2aC70%8)\leIS-^GR+-0*8PPS8Q<E*F9r[-SS:i8.dZjU[mT:5+8HIY6a()!U[f"`ZN*W`jLjOJGGq%3Y/QCN_SM;,+DGYZM-f87cQcf3;%=iFKCCqSl3rk]`0Ya4UY[6Qn3>MOJOkU8HPbgWY^7dB(J@5bS)H'lI^>>2)#^Ds8E'@Ai?1`29B\1bBK@@+.3*^)2M5IQ!<Y:a+0%qV]p$n,&]kqYogWo#oY:XgoNDem5s1=IR0HA_!8,SrM"fpi\XrNGC-,%cV"_lUO")So8BrN:$.G5+J9k`I;@\)YJ>fpStn3<MpTN%561*Mj!%2M]^/A2Mql$o].i]%aY(kc?a</Lbr#<\%d5L8`6s/IMF_<elTkuVh1&hCf%.]?[]9^sipD3aVI-qqRO6@$%H!BkRB`],%/PNm5"2ApIo#&qLZG=@kA2`IUVa9G4&72Vu>kZ[!q<PmRB]OT[cKK-jiNa=?qp;XR'@)tVm44Ta@.ior,1B\KN0Y]1<:BhM?6a0)%m+!Xpls:q-d7ee6BSGWu@dMqH9Cp!Ph-i+fA#-(ZLJBsj4q8*HNi%sZCSs"sN*Iqm^m*[r:GjH(n5`>b&RB*)V,)_5G<[`hf.kf_%+'()GA+X8#_VVhg2a+j=DJq22,Tk>a#9S]4X)$UULWA^VT);h.@grqErK4R=\[-k.BIu%W_U2Sdi])E)*_daWXb@+P4KQB@pIA0M%Pt\>\FRta]N@(kU;n[O[L#Bj^U%&_n'!hth/IU6+F@rsQ0tMP=l/Z#BFp!+'?;IU&Ei#6F9tn*H5,oe<ZQHo"J[)m`o.JTjq+'IF%BJ-44oJfXM6:26k7R.(ZU(ZiM#Xe`,oZ>=*r)#,#ht%qV`0l?0Zq=']j+7n\7dWinn`Jh"gac+>-7dI^ghts.Eq+"TrKVPUipApW%4M;*(#%Mp)g<:DWIX:,Q15im3n8SOF>-$n`_UGI1fZHRFW`,WdNMj9?-2i]Y3:f.98aaN4Z(Z_h[Pa(f@$d)?NY1g<c0\B!&b-0t%o8SJC`Q@t'I0)&q[8"q<cC^Zf-NtMlc*_411?5Ld4ao@nIF@2N_&q]EQ13YrRu<!6d_'/!.fIL9U]PZU].u$u<P65U*:/$U(W*J3%G8:7QVtB*AcaU;\b#o?):9&QnRSKh)n&(qncY]dB[[Ni6mGGH(McK/dWn)GsM#)(<0&.pqka%7Bh5S*!ZP_O?C`iKm+,1:54T>i0%S2EIuW5p&\e$5cg/fa3sNOat[S6l"l_Ar#$0s+0[]n!Q\hO@SBS*g2#Zs?h)XFY;1n*k.X[!>BtQe.>_'op&I9s66eiY<uRSbe:N%.2g,U:.2/Il\dna[F,feF3[mAmGm6Q0t++f4%E!e]%03#V[dnMeS36%7Rk\JE>k"N0S*b$J,6lQZkZ@$YsPDjr8na;la.Gugs2@c%#WE]/M[&SoDdT9$Ji*;1G@UDX!eE-T\Z'..'7f<b*`u&Eb6)gU?m0>WSR03^R>7jF;n?#\Dt5(q_JT^D!kpSEVdH(D-l*:^=Yi(e%qspVFil[e:fX3K:EV0Cs$(3^l:SaJ1[Y\%VSCtF&>]]utef'S-=fU@5]),E/4P'-8Ns8PM>+Ii[c[4O>bM+ssocha=/1;R>]Ejt^%S;m:3M[Is;['^[h*I#3QEtMm>IF4sfX@Je#IFSfi&mmX&m<_d.4e2>,c/a4Qr@DF]2tU3^D)dNW!D(j#I$RtE<M%F'\84%@8X!d)%I<t(M4bS+XbpZ9WBDMMPWLi5&"AK$C0fo!69GHWM3BbQ38kW11EfJ=Qr8m77Ila.p>ci`KYA[ano)#%E@HO7R6tFh3bEdpOp0"Qh%kGilpiC+M(^Lkg_Vnna5q;u.-C>%ZNes#uHP-Ed`]tR>m-.Nl6hnH5^llYPqB^bZ?X]h1kBe]:*s6Y3krD/%phYfK`<IVR1>U=CZ%)epSO48m^oqI#L7.mhJ5Bqk)Aqu5Zgho+!O9'[:p^4!JB>//WTfeWU$h0cVZi2:,YIPh@R8lnnu+c<(n_D9Q\Q..r4X)EKX+2="U%)/60Qe.Z]!<-HcK)IkY%@@6)RB_\4DaAe<N])1rb^W9-0md@<p?B=cd+6T@$\@XJX^#kMg1qf+Arp&66'9ru;a)o7/rnZaMbOQ@J%2\/)YJ%N"-rG@&GjjEL[eYTYQ]S%Yr6`ZS+.i<^u[rh9%;elE.V`2mQXb7eB/NqB;3,n_6p?p`/Dr4p<+3OZ=KM^tlN44NM'":qc%IN3gif_a^c*iroT+u8&XGBWClD-e)B"SM'!bF@f^QHhi3Fi9d_"^#\-I'pY-D&?Tb0<MhWIJ;./maD&SYjJcD0C<)*Bt&N.bJh0G%[sW1:]0X'Falhc^WckLuEm'r$PEF10I]Vn@gi!-]ZaH=\r8)DRj06p7+@0&`W5f-9RFA;k;Kab,H#;d++fQ"5NS]-=1AM7A!dS^V%?`X^t"e14P-2qq;l!:oLlgX#Saf,XaI]AV+f(*,hBDbi;)"#3I!T]agbhML!HIZDLQaXK_p*U)2G70V`dVEEAqm.)W)rT#rGkTaA%"rl<#a9DRp:[c9HJ^IQfgi1P@j*5Br`kF=\TWJB1rK(r2Q9h8rgGC=Z(:N)V^U^o%iAluO8KAi?gqS7kH4,/9hRI`OIsL.dJ+!mW%4#pYUZ,W/@2GXMjjaAWhe8t+Z6IYY)_`B`8Fj&<0n/T0r0T<:Oc^:'t*)!#A0WgBS/ZD[;9Wh,_g:gP'o&N'$g;sAL.0XOY`drWQ%6Ju$#7b1?YEc#0$*1,,*L:>A?:3T\.(>eFOrFS7QRclU:=hZeJ^L`VHf/,6/cOeYtI9.8m-Qj!!/]U;.2f_H\KKpB.;-:+.T&P>9%*6Z>ifSr1)'h*InrMYaND,<^K#*N^WMY?Ia-"3BO"93@NH3FaHEn/jtFcUT`/<eoIGlMZ5SD-S)q/31['lOkH9lH5pp9Y&l8lO![%`(4QiL$)hYKdemd]Jl8.,VP"#X\_1#l7ES-jl*5o9=lkOG;na;h;?K+gtiA[P22dnH['$Vb&2I<Z&`@Hd&g$llW)b%c3IRI.@dJL%mVFe@Li69EI:<>?k-sg27.BP-YRs"X@n)p-S5'L8i3(_$cmV_r&R/D[[oN:t4_U4bVf=+tA)8tj&*dY_.g$W01qAHfOkZ5nlZ;?>%R@FCng3m\TZ;.e\bq];o'<PLr>ChOi1s)..>'Y-6;ers[fT:A1U=*SAYIZR8EWS*`-1`g@b_aokBi/SSR`<An:+_iomf';6#&W.2%nKFE.0H]+&5(dujbcpfkkMY[DWC.5[;l-ku%iZ.klbm(V%R,?E]paPX$LrCRiH]OKprq'C1%`te$c\Wt*m9Vp*JP`mb47VW7WPT&%daU$mmA.l/_+%@D1l>mCNT`ue.9W'Ur8#[lfJNk*0J\nuAubN6"UTNRR[`=jokA;-%)3RK(g7<2L%$f_cjdI`eM'\jB2RraC2sL$%qtEV@>tq5.5BVIkjtt<j2^s2+pb5mQc`g6L;]6=E4UlD!jD,2jbHkl4.\n#XacFFTM!:71i'Jp""'*!l@mZJ#]P"A;'d&(D$!4bT%JX%5AUT3P%.1qs-4^&45S`r?[ed:;r:TZt,8(RQ59&dm-EP2hPO%jc/FcV_dBW^FER29f<`=rP576bLF9aJjU*XUZXmp]2IET8I+%nJMf[&pbUM?*+9teEMBXGtKqDZmi;O\GQ$qUmqd#N3A`@[[lKWosW_5#U,lN@sK!Wn"7hfbj9XD8._o\`&jr<.YN/PPKTe-2cJfO%/O\aPVF$Y&QKQAKI`te/>F;@<D&<Rr;B\"8hAO5;S(tDPZgd<[\hLJ'&!Lbf"PV3+oLZI0C._:59#p&\_cdNjE^=n522]ClG&\\&%FLfJ7c'0LSjuo!_b)*C'%27PX[9mo&;KshIJ,sN]:R^_N,d]G:?*tT)0:t.oLq%F52K#%_G[dIm8][M!N(oQTTf"jW(OBm=k$.YM%djX<Chs]C?g<']XrhV\NiqVk-BAWU@$j>J"',)]g1cH#uBBC$fO#OO2f#FoZrbaR<gJcj:<W)]dMUsT99d)p4Ur04D(6.*>i0e[\%`'RmEM_f7>aLSQe"JT22:1e$]C*JAT[[%e`Hc,YiD8P5mP('ake%SEKo&LK][Hh>FDo7nhL+5$?oNn-H)65J3(X0mZQ"RCp5"'fp%MSlN;-%K'5@Yfm'=74qI0cX\Rl6MofCC6!?K6P?lmTNJ[]J`bQKLYJRQ[]52oHID<p"d`8&N%'ZmuGR0`L6;6X\De0@:J`sRsn:m%DpnLEPoGT)]h@(sREsOHap?6<)=5\AWF"#kB6eT9>V9^7(!cDReq.@PmUH)CqP1m5Cn`m.50KMgT,RRM\^0iV8E'A,b8P6fHuc2p%nFDrZ\WD)W;Y]gAcZ2TEK&OmoHBpYUT?\nW,U.$PZOHF(FHN16D,W[BNAZUJj8?GAOEJdRgiB6i7aLY'_=V`>eSE:I!`/!]=;CR5%U<1".DNh(hc/8JhMpYeeI6GIi(Rr/9%C1FMbkDfkT+*(9:P7e)]JX]$XR!e!rhbgMNT32Uhg+6X^ACiR]&pAK]>K6O0.0mf.-hk\%I_k=(rKE'uLSo5?Ku!/GF9R\9Ucr3Qc*>nA2H;7cc9Cu?hV%(8LQ0iA:!scX/LOKPrFR4r;s1ckhrJM#'f<GtqXgC<>lh_;oP@[a%E*'^Y='kUhG?0(4PJc/,]_.=#f>86%/siA?I!IGtM!5q9R,2R0S6JUP5#iAu^A;S5bugpU:o:h3E$g:=$Y??#o$>'IFeN)ViCjSY%(Wo^<?d$ZIWb^3Af0\#A1=_JCiX?/o=&o*gJ"c/EjB;q(;Q0Fq^.bq@b?5OZ/kcatYk'MI>prW'Z#=\9<*^nN%:3d^:oLrZ-re5N%K0n*B#H(8'd43AL:j)d1EAd7W/6"d7kO=-Yb*kZI'p_7CZT2TjlFP(PV50uBWga3S&"CQ-c;pmTcsJe7k<tH58YPFK@X+@WWh+T;%BJ#2O<AtCjcBkN5pU=sbpaQYO:\M7[D5$5%"P-WMT$hn349?[==/0;o9eT&PWl@e6KO&'jQ;f5qZ33i4HcLhQce6H>';"#FDc`qe%4idJG2E8<_FbWJZV;m37VpW?3KP/V_Z2(3>/Hf^Y`[]-iflQYoBb6ll?qRp^V[Lgg&=d$]Yo/g-28RsD;0nhU(!=AG23j,t$.!MU%UNig.linB9=t<D?nE^@qg%JIl*1ku:b13YkH$FMmWo^,cc`Yp=@W6KR%l6Y8'4ViZ?EkrsZ^k$!(S!X#?^c^^:U)RN#g]Zl@c#Zi%Q[P:CrD&c]ZRS*7oG-#JKP*5O2JcBjRDZ?M"D>?tK[WE%f*>s7QIS)6T%sC3FoKK]KP*4LcCW`>=q8kr&8GJ3f/I8cG(\`>$$kKu%KP*4LcH^dmbS6X31WH;NTUZjh4mB[;#Wlqn9",^6C<Gb`_N^"gmHifbjXF4)NLr6o]4#7K.DrJ>#A:Z_f!*_Cd;cD\8uj`9R+g4n%3P+&3g!+$Wa48IQ<):/HfQ\EF.`>FHS_fU=ZR:%Pc_krpI?CS2B@"40\_>_r1[1I1G'4T*4"cQ)&PH&+DJa7_Dp8p*9FO>0-u,"@%B@,s==$+#L=(c"G2Ig9dk>h:XMMu>@^-o:pNh69mfgUkOA87ZV`-;A9g`.NXbH[dS&M[UQZ$AftcQU27K8B&p)%KFY1%+mCSR'0Y%PDTRBNu2e0E&a:^`-BsfkU[pt9nZe`Yjo@M`bhMjddX!U&huRc%D1jK`lDS*?4l5UT0.Je<7?ZnU@%Vi,/u,XlfT<DhE2UjBd1Rg%;/'YX0g<m,FFFh^;ro'j3F]Y0>1Qq'`oe#%1aum]MR]H\7#[I[i6NZXHk'ej6,\#Kq<NBbM"07<40sb5Bkl5F*\gu"Z[U13j-UE8%BPLhD2.F5+:p,(-s+p2*`E5ij(jA_qo?akD,K<=,=3'mU.q5$YMf<!9WsMLi543QZM",69`OmG8kBFqg[d8&&_'qb#VMl@19dRBp%)DPRBfl]1bj7SgDk8?!lU7X%scG)8)`;"%eh)(00D`&qfI<oKmWg5RLBfSW#G[4UHq*p=(5@`f2nS.$qF4l*oMa#?<@N9-%=8>M8%2e&:lUn6FeCOF'FOi!V_`-?('-=RGsj+bGGkF5KuSKVHi`nXBh7Z<DUON]Fg>]\pPB)G=H`pm37Y5g?(LiHW"A;XR,;b)d*Y`-dL%@_>$"3eN6.h#5rGid!tO4&O<u("P0/N6dgKE8$-<W?h#%,K;6S7%?Q]3(==iR:gB4SCW`G``ii$-19q80s9,;@`H_H@_C,E1A?TE%CDgif<h(=B*<#_K9AIiD@bfc;[H6K9,/u!Tg<V3WI&d*S1ImDUj<#<_0j_lKR##a<%>PkWB,)G)A&Iuq5I9QmgC>o\<mfm7?#/Ec%U;P$TAR<dC[U!\-m%VC7Y\gr!p\^c'D/?_A)OQ"r\=Hm-$M0d__ja*GT/JaC&6XKPdGY``lfSm$DSrh=c[TQSiANT!hNtR)%d,45%p[ppam*)3A/Ruk"d[<LYfD35.2`eUe_jjSGGYtA\2UULTX->Oq3dc[,Yo0:Ra&Xja>BIB7%A1J7[rHN"?#F6(N&a=^=*ShZ6$.@J%8,(f6_lXf'6Cc#oU;O%-Uq&pL$gt%S/C#A!g`iLNnN>&;*F=W^4d5+!B)Z;<N=L0G#gP%`]H$Tl(=D+$Hkb`[*BqT^4.k_U)]LuW%g\+UoiH6!,DfiLK%<(5d4DT%`NVDA$UVlJ'cd<_F&fkj%?-''#fB@2>N7;#j]BJb<[ELKhgr>'bce(@T_s;T8Gt*Qj]jgSo%Ni#1%F,UU<Z/P<1Qb(W$Vq@=b8p?>YpeDhMDE#1ZkFYt#\D:u*M4[dipnT=`q*^#$A?dqK%W@S5_>CMQ]cW/)7rQ0NGO<J3K1'K@>U0fk%o`]_EhgV*0!9g33]DqQ_]E3?tB%=,hI3jZHfCu%;"lR_C8'kK]CqoWj*2V2p5Dr[LV[DN:@;O(_c8pnAc$(l[A*(qL;rm;f/Zi',%T5$u38c7)Z*GKQ-oNG^(n(1X!V^[6hF4+i4;DVj'X#"j+"nnh`Sdfpn=D>m$#?I;Rq(!``H;=Lsiqf=.dsk>Ydna8'H(u(.<^Z\P%7JkB+FKE^iY,>>6MGL!heGUsm;42!idd^2:dW)oAD#J6VT'F`tOHL[0QBH8nA:9/)f]c"YRg64+0TXEahb*>(Gm)^Ji>mQd0ok"r%#d!,r+F&<tF')oT_C,u.5"V>Rgf;"K'cs-fY@D&!_Md)ePK8Jj3nV?j<P(JJ=5`,L=8dJ.hhhW,8sCt%Cn]2+htsbtRoo0`RGJRN%Vrq#(oeCc?TAFK+Vc;X??'VCs!M1Y'RIVtW'['G<U'8C!V_!o*s(cu-[:G_<;>:DZ#>n>q^rZTjfc3jD-Nji#MR(i?J+g-s<Sc-[%28`h3ID5$\f!B7P%b4S0h%b:4G;N:cB!*2'Q:H1dhR<D<b<+PcCT\`)7pgfB(H1@b6r`fjS@Y>!n%"(ug[$"gSDO*jK(hfn/Z8R]%MBt[(fH1d+[sjE,p9QE$,#Wp4m3XR%XZ54X5LLtn2>TAVo:;&*V<^?;#9<VhJ]?F\#n'iR)maPaq8I',$iRTVB.Wja:%?QtgokYO%d.`[SDf\d"bJ-7UJYh[ApQ>gN5CI8?mcGl-4H06C'`1B:mmn$l?X^scp&F$Z#[Xn[hST<hWWoM-:]GVop=n=\md=*K$QJX8a"m@H%jRLqST#i5TM!4'u;&T-&(S0Q7m<.K28A>[F,DL:)aS])J,U8=!o3`elq5hkDncpDZeu$_-m,_)50ZUF>P(/OH_DV.AlYYu9HNWc?%r^?NN3pqdh/DpO'l.\!YW_K$7ljpiopeU!]-bZ^!;a]@?[M4)V+3g^>5FG*`IoDhojk%@PqUbTJX4G%h:&V&M/Ij't7%HkUAKZs,%Apqn6)0LW1TMSAf`n?b2hWY#$cAbL5eLQu_T,<9%5)7duSG_ZOX=l)]J,&Eb+%OSkr;BFK\3h6cpYNgOmj"J&lFj:&$aE-Cm@PJ7%(mUg0C[liQV=T3,5/_la''n-Kl-ZRl@`?$U)!<+AiQ!Wl`)5KS3#VV4P7`!PCTF55jgr$h^H!lqGV*::IsipKidSG-3;n\81[\Ef%nI>kEs/5b^-eC,SHbKFiHnIsuOk9.XpV6ZOpQ%1[[In"TjSF@L/S"T6>g*/`/"4+crQB!P=#.5Um/mkDY2uk$=o[Abb<m=>%(iB,%?H[lZnP;ibaL+-V/Z7K5b<N.7<E@OBs'*HWkaUbmf<6.not>k(s,ZXIh!@fYPXpNQM-lM!^]*c&`NUY;q?oea0]GXW7GK"MW-\IB%R`,'qn+ZfW.bJ7DIQ*+e]RKV9,6V@Xi]m&2[7]+jCddp5N-KC%X-2VcmiG^>BAegKi(\j15J%YchGK6T8c"'DnLQTUnt082Au4fX%^QF$>\atLsX4O)3B>h1mRp,Fp%k`P0rn1*Fr4fK`eYRuqQJ5G`oX/i7dJi9RY[A>UI2=)D]cQ>P7aCa\M##-fjGQ'M`t@RGI8maa%BQOWcND-N`G6U-k4+L%*lnf_7^\"gU=e2&='8K5U0O8S0V=_W*rHqi?)6>)`GouCIB_0taeQauo[9<T*[eGY"0;4_UlNb]";WTYA%l`8?4;[5c8s'E@0`QAm4%S5euUP^;ak800h#$;t\mU[$[K1`gZ:P:[YI^tTQH`/c=/,T:ZnPMj$[JL1:R:L3hXRFdFgR8(dgfWbL%m`(DGlV5]t>J6CbT1EdGV@nUJiPNOd[?I)[eL/P^Qe0sb9_7d+j4(NpDqp\7m<8KjG5$!W=nDUJbOtUnRf9bGW]_CcFcP&hFp9<Q%CT6!VS'l]Lq94<ElgE(P[`4JKoB5qqI^1jne*ic)M2>QF[uf+:*Z%c<gPqDBIsu$RjaF/@SMP-oQODNqdR:jbRbLW^?*3K>N8e/V%I^*>C[Ap[HU/d9><GcTY\#ZXum6:7@:TKo_i,JoqbE&(`mX<[Ap2brAA:'&rOMgoI.iEPXqUopk93]AqHSEd'[pc+'7t<tu@6Whi%KpXt-cH3>%m#qgVViIC:moTfS]r=CYBAC`OjHhXf(,'?n.D?nDe$u/W[E%=,pO<+lfc<^4lFU9lhiMMjS"6";:7glLH&J5&Ekf&k%3HJEZ=LS.l*=#VF9GEL&mT6YYrb-b++]Cnlh#-0^Ff2l441iYLNdZ)D<DM>=r^V<V;DSe8-O]?B^00=VY+FcsDc]RD:Hk;247AHA%pQ>.C2\2M@mNll`pVMAND2PTofG7OMl?_'@cKA*idFgS`?@?&pJ/@n*3#B]HZ(lE5];c>Rl,VscI.-(U\roVQe5$aaRC`cQj^Jo'%Z^AfJbl'qA@JUnq[$&MC*aC&S)d+9)@2BE7/nZ[.g7ld1G3c%!^g=`_s&s5Fmm"\R>G$UL9ePC?_!A,'EjOY!(V7<I%p2j1*FTK/%;DBngJ"A358l'X=\u'o2:7(GDDKZCoqQ2\`3B:B#`hsJ(hu#'hJ&Ad!In4AOojkA\h7N6XV8D.Cs7W/DM_BO^3/r$Vd?pHI05eM>%[bog8A4Dbp$pH'1rQ0hD1#mD"216h%0%:dqK>PHpG>dYtZJ2=V:,urkY?UhX?Ko"@Rq[B7QWC5!\[[(9^pU[^am/9<hHSs;Hu=JE%VjGRYm0oW[n9)0?r:;h]j<XT3/Q*54>tX4fCW4Tb9Ek_`7S_[VQhOajGYjcJMUptg7<Q%_X-[%YM`l7Shc_.%&"bi,=h/ZTGDi#>%a2AQm4=F'Q]P%^o47hS<b/"i\*lKS8=fq%\Gh#4YYZe_3?#2NnDqFm%X49$LP*fPP]Qq,E<Lm<<->sCVo8D?0HrkN0ZFmTQmR$Ba%ChT?l)8Vh`*uFoR/N#=#7E^-S0bFsZ4\_4`1E-kjPM)b4pl'S"G%1T8n*9N+FE13K?/O;Um1opCjc,8t["9m<NO+u2qXNl5T?e@E%ARLW2'<6n1mQ=hj%U8=L\[=,6;e\q>XKng5/V$*d>'[m,<Td9EH"SmV>,sL.9:=-NG7BqHprZi3$HM/LcJ\iG_.=_G+t0_&XkYDW%]kZ4a2aEJM[]:,f"Zd&8LG=)GOuJ:,chpSPmIgP7dNhuBf(iL1+MV00?Y<UGQ<YEjqh+/B#fG>PAgSk;Ed$oVba8\4=KB%n<B*O>%[:'s@ApO"A@iFdIjX\SH2`jGU?[l__X/>X:3cHpHIMVYL9J'Yt_qP4PDpY;)hoq_"NpCYWc>4:-cIOgA$moI9i8A%Q<kVbqDAMq<%`O#-d7cItBLUOY5G5(QD-@P3MD'.rAf?L;$nj[8@\(p9A=89UC0%QnXmIPso`R\G3KS"OWHQP0of<3a<-6"P_%ZK/MV75-il>8"P%`c0[=JE+W(94e+er6q&bmG/2Ej?.ek?WO(4jGd6r0.1QfQWM@3>Esn_4#;4jn/OAk/Y=&[JSab.Apc3Hr;C1'FE+Y>W)m%bf(Q/R%-YETZVN*4_;T1sS1UU08=ahq+VaY+mUNga^G?ess%^#oJGd$L-ZZ:P7MRq_Held,jf1M;qlSB*'Xg:deTq8ER>6c6/GR,Bm.sc]F%SA'?j'qApZ$[57m\b>@51#QWhQCAts<^=9Mjg3DWFA(*8riFtP:NEDR*`01/fFCeVX+OY0HH<\r?VN$,mZ>osB$tGYdG50-Z?VDG%l!-BgHd?nrQZK"?natfmCP!p-iO+\o2N+-ed8?n!r^[%34!%kn<>tRJb!#!*YGkgeSfCuT_10%?eYT[320OX-=DkU]plp-:p0-s<%4r\<)Qlb\<k#:_X/\-'#>e*)!fP3*"a,7p_l.t)#@krpPXkZ$5RI\\Yiet(3&6HpK$pOIW;!_^'kJ?l&8cc"K%<?>d@.2E"=0DtE%a1]%!mLh`aB-3]u.X-*F^Z'/K4\jLtook_iJ#s)^6gFN@S3:[*m+8J=?c(:fWmlJ[\cI5jYT0^[k(kf5Ni!+B:lhOFMnSO]EUWMe%A$MFp^2gi$j.k5+hJNj9<,R5<"UnU\n$:EJ1(!6?4-Q0%)&B0gmjIpbcaiVZDd,m(YGKMA_T1C\r33M1*o-/O_%4_i<Ia<'Tld\&%\^&\SpEVQ";n_"TFoth+>9U&U-L*:(R/tIMT[Gf,Almt8gg*R$gm([VK+60-9Ts`QE1\5WNTMiO:,A#UQ2*G<jX`XRDcH-\q$knm%Z*h;rQGoHh[Y'1OU!B<Hh?2*]O4a=`ln'jBqkka;`kq/PB&OSTD_Mo9.<A_\WAhFO^UMQ>e3;aoKrss2a+TMin82B_*ko?n<plmK%DUt.-brSpXpYJi.ine'T(6>]mEpJ&2AUX,g/IQ4gAK@BFHEYV350j:=H<N#=i.+BAlrbpRTEE)5?mso_]5mnM4UJ%\bU2iRI2^V%%Ze<3(kA@BMG^9$LmjVddW[DsE_.H61_kE]p?rFi_'j=A_kFWT"fQ*DILEAt-17u"hG+IaFk`q!>V4;QN/Yap*rTIr2:spCN+e!X,%Aocu^IQYdQJ19,E^]9-'KnJ4DF2;T%)GC:daj8:GHmQSoPrIkYVI55B)q"<s7C]C\r4[;pEO_5s04.c'BkO$mR]D3:p$1o9ePkSD%[Pb#-DeIII>>1?lMROr!b0,R>2WHtfFZ9@:5=+tu9DG&mj)VDMS9cYChC&09Gqh2H;,-FBjlTY"PP*Ak96%,i]H*MDDa#7)q-5e&%-\%M6"6F9OSKR9iX7diQ@9Z-T!Lq,LX6!*F?[oSjMpCM:kAp6mZ]N8k.Z=0-IrQt`pm^]&`mGi,$f,&k]Qr#`$YL(L``Smphdr\U%+0!_Go%)t!D+Qt[IT-u%[7oe><Z=#9K*GP%deYDQ\644,mi(<Qj\EECs*/sP47JR3R7^9$c2qZOomtjVf:RrTkIjgHMn)Kj^)s92%N81i3\_S(:\@;M3"H#ljg4/N</cn=jolBFd.sALB)8:6Y>(,7@CAn/&!hOFrTWb`2F=-Nm0Q*a]gHG3Xeeq_3LD/4fffnU\V9B9F%.f'$@5]])@G)<*c*hKQ"YC'HqZ^o&_TP$?KIkOLXo1S>'#PQX`o+4U04+eQM5iN(pAsDoSPBXK*d=f8Z<LR*nI(.OFA!;-OA(N2C%T)<c.]t'7U79b_P'eK2lEN2]sjl-"FI_*s\\T-#.<W_iGX.o!6#]98"l'a5q9uWWB^[QoBg)ZUkcg3i*kCNEeIOfHnZ!S=%M<$I>%)=5p&FuC/J?js3jk[uI+-O$rZ\%/)1Sb8OQ,r=G*;jPtN;`]\\n_DIB&!@U2IBQk?,TJ%5DXOK'IY8@=cW\!PBCYaj0=K=-o?tNJ%I4)7?="7o@f6f7peprYPg/PW53\[E'ROVsV)sKe.[?Z7h$eOZ]p@h>9He%H*?4Zc<Y'O18gc0pRZOU%8`WM1+D_iI@^9S$5pY3Z0%@;gMk*#8=&lE*pf\Vr*lFq6H?I;_qgqfJ;r]::l)^FhG<G2OFqn"C5tl/0<Kh"]h&0K!6WX-5LA'N4;s*0&B8+7@f!P[H'_WU`RH%$`#i(]*tZGU9m/@ALPB_4G4Du4`Y`lS\f:ZmXjPB1RZR;A9u>loud2Mmg..*h7:CO\(7^J)M]X,m5`3=B9]!RMt=3;*d3NYi?Bn(%PW.dg-Atp\.&+PW'l"ho2%ZdA6"k[l'7NXbi(hrf7853f/UF$AahFN^hpVTRC:-lU%*8O5S.g&*mPH[JXCZ@?e)SRH\ao`H:'Zt$%m/odV3+4(8nU&:1EF]gM)bF"r1gcle@jo/O94(2<*D>B"V3`1$K=StE3:Vmd2!@7Z4/5W`NhA4pN2+<^V"!KjX5B[/QGg(th4Gna%O!qi4r#;Fcg6qg9E?t;XcOQaXmX7cS_EhVFr*&s9QGX1-=hTcb<,BW6;eU_k+\%u]fT90Y?gVpeE,qSkE;+)uM>UXFmPhWs*W#_6%EIS[P4#'7O._Z"lWC/5IQ9T6#O]tV#J##oK9%hEQ+#Dn;!UfuS(WtIl+RVK(h-s^seZpphT"9=H_)[K6EpU$*cKY:spYR(m_VY:o%gZHPt@C9jtfc*M7O,7UU$Y&,5_tF`CGZf#kA%&FAbKu"Bflk&GO5-l['5Qo&2CRG'YoEE'Fi:MDRkKMu50'5rR%kK,)a)-!/g7_(%V!XLlne[-J_>IQ/7i,><PYu?2FT0gSEpMq(VUSdPRt<d[]><=:8"6+u\Dc!ni34Cm&+=""Y2M9'oB:?R]%+EOrDIs35G&X-E<b0d%a=hG%[YX/gG+AoR?"G4P4.UdLB"WS^H!EK#Bc$EHop(<U;DdZJ)J:KqT^C?/C\_rlc!Ki!?:kaNFgaj/I?D86`TC$q0)[uP``V#b%3bo:D*%fC6R;2Q.F^&S(-#2qI3=U/7;laFAR:GcbH!$WndZW^OkP'jaSKBW;4r=XoM,lRg.rE$C:K8<.$MJpgkOt]G_DPrjFV8MZ%j/MT=kO_6s'B(pqC#O2_mTh#D/A>pbpUPc)0F$gU@cu\n<B*$"9nA7?C`F@uYnlIZ.^cFFX4LFP$Sm`ONj@@3='N:'"A#I9?*GDc%n#4-+[o3?CVU/:i"i30$<e6a_rH'uT9em?I>0F)h&3nB:H>;i8aaoD?i$dot/<59?Ec(ijXA(jH@]FJ[Cc]I(mdDWHPt"U$:B9.E%_cP&Wb"5_U'V0h3cXS(KKOGj*Ah*&?`\R%[POEmbR[9L&YSj<9`7&KR?E^Co]q`b[^%daGA]4+\(3ZNXF1j*!F?@Ie7H5s2#-`?l%P/5WGp%*7mUTD+83f@5*0-u_,]a7_e`=*?)e:A<Zh8.'"H)',bU^$M"Zbj5qj.i:D^aK]4/9j.LI\08QElc<-pKF3$F8%f\'E5gr%T3>fNm>,G4e'HW<>DInq?/&koPeck9Ui4(AU>_QQ'>?=Y+c"b.187]"^)5Q!pjgQ*e-Bg-LIujNoY?HZjLqCL&)bW(H0.uB8ma2R%^h%5.G."VV\@S],biPUbJ8@K(V4!D,2$R<gM_@0`;pIf(k+Fc%noX!qAg^9GpU4=*TbeKQJ\AhpE=&",/kt@%o>PmJF&?cG;Yuof%>2?C;0:]dG!X[/_o5J"rJ(RHdJ-.Xmo3;Ho;bL0>Id/u/W1?Vepa<"-/%ORR$QR&,%SM#J<YH"q5nG=ZHBgdBiIZm*%jj^q.5^G,%:HJGWW"#W$\?d:&Z'YAtm;j@EkGPeoV#@hgeQf^IpY+9`$'<lmfH)P+%M%h#gtQt/H^6CJJmjm2(8;tG;%21n4-tCk*aoJ#V8=gW%.B/CV+>>3\^ZFkk8#>6HZ/\Q)EX,@tDVNGiG#q9[GZ$[TG3n:Epp5=j4JkCMc<6Nh;)Z_B$POt5/?.NFDko371](>-g\TPRmaUWP%38<&4Sn+^IfZp"ZkEhbEr)lHX<:+\ro;UN84.I];7VA>l<b)r-M\Y]/G-t*3?\6FHr.pB\rUBcsNM48O_X%0VXh$fC`2\nJ4V[Uf%)EU'caRSPC_Q@k1H%p+oCm+=LGt59AJouLU*GX7KjPTQ]V;T6)r/NjOc8IV+;P1i^1Z_YGAfi\;'6+IFh2,pXGD20812'9BD'JZ(%'5hmBo'0M8).pg`mMcf4_IEk&m]l>C@>6'@d4c&FfkUN_U<eE4^_`AS&[$_3-NB4nB%E,Fo8*oW:!@1p27&l1;*Sf9>sUn]p57[@%Z.",g!;0lF8rD4*T5%lrFK4,".!>s*oQCc*08%2Q:q>Pl>R\KV85s'I?I"A*KZj$:It)dD"Tif%%^h3A3'Wb$MZZ%s-&GG(Mh#7G%J1(Q9XZMLha!D!^iGqHlJ5.Rq8oC7rp%E!Ib,N/B2M0F&rO<0?=QeD2E)c&GM+_c![W6RNq,t)kp7$q2q=]Di?Z&&G^;+dX\;S^X%f"B&Op@cCNEPJ<AQ].p($UAE5V-tWOOrW9S]>o+#jisWn#$\&\;1.0$22Y2!4$0Bp(&8Ad.J[:qaK9PmoBD%lKtE3]_WtqtJ!;NA%;:+`U\:VXR"rF1I8IXW<MsEm47im'd![-.s]/=/1KSM\iho_>PH1na\Hg^[GiLnZdn+E=,:TrgCZ,Nu%_M538^HV:irFYZ"q0tWP%]uH`"I/P&2N@tu\-+MObN,%u+Ra=/7$>q\(.LT(L,lKJR)@g>N45FsW"b7IVIZq,5J_?Br_"[PXMP^T_e<RYt[EcncIIVLDTMS1o%l;rnEqMA:FHl,i*V=i"^_:Q/02:#Cq#H7P%OlcI,qJCF4^ZBsHGjA#qCpeJ)Tu,3l4P.a=e[)%9EacKjLQ;]r1YjYPa8_$S=;7H*%M2O#kpC"rtZ(>U%ja?ChBXb56h!Y.i^:a.0aV$Y=:_!G1ke'Z`#Ngc]NK:9DGL"@c`@fO>&/Jr3e)%!algTbA\<pd"?=iHdl#qE-%ad>:#\&6ZmH#%20B!FAVm,NI0W./W96-r>9I`m2%jMI)dY$<r)At,0jL.C\(;db,tmQcmfYA=(2dC&P1$t>JSRak<`TAqX5[Z?gC%A_gt$pfC4PnNfuUUtI2d8\oFOqSGS?4@/r+BPA(gVt?6[]icf>NQrjY>=D2#SX$P(I;^-"N:Yn$poa!VMo-'7e,Bgo)u4q-43b-S%G,u*bM(u'i4M,cZ3L_NVC\u/iQ4""ae`'8pZ".b8mU2;%0T+?PS[T&_I+ZBQkk+.%Klq$@Wj@].X?>RLeai_8!f9Y;b\RJ`IMigN%3bPB*p`V5%EN7Z*(A3'!n*M5'G-uL@@Sq^I5L"8WWCFII$JM0H_K+_!pf.`3ff]j%(*1miNkmRM8E]kGNKc]3cnB<:cR6Z'93Gl(%dfhVcPA>)8f9lVaRG#*Zm2W?H3M)+Zl/;J,A4e_qFOKPg\N69B.,$$RT0i?$^-mpHXanPJ=+@F!DO_b?k3N4bTUG]^dq=4.(dSrr%`R2@E7n/jqM&UWc$tjsm+-tM/;jk[P9Hr/eYWXVFTu=>hZdN8_Ok?,ckJk`gloJu]pKQbQr72n7<("8l>!5ND`lcgWX?M%N5m]1.%KCcQ"bU(IK?Y0gUfm^bf`dq(W<jL$/cu0Cu/sfY_Qb0*UC8'$m@/AMn`:RJ0B[3EVeJECD0.'mr4^GE!`<29NVYAs!fq"-I;D-jD%DB@sW<sPA?6jE=4UTP#\OP^""?gM=XF+sQ^CE)fDZ1J32O^,#]2M`Vnba+haQ?6.p&2"]W4IK(Uo_RFfhT/8cGm[:Ck=M50@r&QH%/Ian.*<eAWZ_[5IacE:oj2F3#jBb!nZ9CSN(oEP>phPs9GJ."M>F[#*p!`)+]s&Ot@0gZBX9S%6S%"/c=N6#rg_n>GMbc]M[Kl$&%!L#el^#!A_9)U3gUrdE5BaGFt5_jo_<\^kRe<L>S@+@>[6]NG^_l!>A<_j;"%Wo1<UNaAZcHr'O_12Dn>)BM4KTZ.%\>%h,(Rmq(%LN(r'Fe`Leb`3>1^+/:'+$JC!?rH;g^MeKp-W3UL<[+k(F+WZ<jht-O>E[\%X8'SE,5qMLLHhkLo(bWs]lUcVR!YIl"(-5SQk'?6%E-Yd5WYX9VbhpMN<DNO49%d[SZdu;Ag\FKODs>7<a.[ZB8t#^ab._R*ZHW/</<M+>m6;mH1U#74J<G?n9jJ!0@$^R[NTY,>ZHM"!%ZX)3:/<d-aW9'c,?)?]A%df3%o@t8'e$JGaIJ0AVbUOY9LTC7r0W+[oCI.rCZ'YNL@jNdKdUoD0`.F9=>4-*RjfF5_@$<+X`2X>E%Vq>Noq!6,T-ebdbBI1i;BDMGAlY<.!K'#btMEl5segf;_CWH8F<r5lZK(*mYRH9^d:[-Xs>$&DS;132^EpL@q=N_:fl-:!9<5hMM%Gt,cP+"1(Y5J.\27&)@U.eh&?qrm8QF=N2@NRTN0oj6'^bOnmbY8NNWX\.mTXpt-ld7<<2q)L$EbuQU7A3W:eMG.XE$Lh2)6t-m!%bu*Sf*A\*.)MqnbF*HBB`Q-`(bMlIZo!WRgE$f^b+?uu3^KiiLFs^Or/0,1Y[o<J$`qF\pHC=`m0%HL3bfbLQ7,EPgqP^ee0Z.hi%Jc*4e3F+1o>5&E6q5*a^('e%PE``G3k.kHO^QtI_N]tLH9[gf;H:KF[]V#B9\W:LjXNr?t?E6`L#<f*6F5)3\L96f3M75>0Tgo%B%B]H7!nID##'XfK@C*V'2lm&F@+Or9.X'kNpe<%c_/3Lb,aGHCnI;gd%d#R.La&'C`,c@-,c`>4dLH-rIYcmYpo&&S&25[?)p2t6i%I_PC2bC$:Q+66&u_8Sh%F7t7;<=J%`BcEE'X9e<EPu'ELhg^]g'V3"Ra:4'O4>F+H](Y5XO$fOjr%^3)X"<X<^0,/k_Hn(i;Sddq%N8h_"G:@\#e*FA[C3=C-SBX+Xgm?@T1L:q1r(q%8*@k/&pDs:I3s!>mq3blKac*D`F*d@CB5)$7$14/5<L\/T0p58.qMlkIDbt>D%_-Y8Y<so8h%iK5!k\Jde%ITbP5,rlIQ.5?D#?Pb.rB/$fFq^q:ROjc)$@OT_mC$3.ckCAJ'X-Ju,XpVL\rkAp=egE7X-bH.an5=D%k+?+g=$'cEM:(2[cgj+dU4bQ9%2A:13@$d&&3ih*>ra)2inq)omO$LC,3_HE[/=bB&cI591&FR-aBff'-6JYheiEY$qSJ&i#lL")%T2R+-V3Us_Y0s>aq%8D1=RoP(0)q='6D*bB8EKP0s."P5:r6\_^SftZoY*ML^>AbW8Kto6NZriMlLq-dS"hb4@PbSt3[pQl?ZNa;%p3Bn4='TM,5Nd-Jbiln_RH8PPB%-e[jXj-ns%]N\8#J/^*A`g^m(^,._BRN@hO]33WiK"]9MnB@>Kc5=8"J,<?R@Ym\``6"Y\ecQ%-2"JR))RMbG]kfVf[aCXqb7F[5Ao)#,c`l8QL<?rj`hc[`sc0;'<a1N'KE_cCDf8dg+Tpd6g-M_/(DiXT1.d`kF(/N]I%-tZuF9[%k2GTa.ol6a,Y<Ahp]'EVIi6'$Wp]o5<WDuBk\obcs'54]QMa&)s866)r`OgKGBNq8Y562gV/P]!s'54mdn3*\rVsFnT;BMV=82aX%Wdd^ZqmPqmcW1#/\b`c&J,ZWOrtlRL[dO1A<W=brpN?N-J$&Rf[$#@nrr66r%r;!Tmf1U5s(Lm$p9B2+=8`MFc^/eSJ$/X'[<u?U%s6$D3ojl8_FoQroqT"cuT^G&,C*iP4gQ>Q[=DDCqYnHI8OLBU\DDq.j30`]jPd5?@rBaTEdeUlQ7Uu6^[?N+O?D3[6R8Rb%gt=T*%B'iRC+-LL'8d8V8"rA<8HQI\9k$;<:lO-K%qpR<;i^PuRfnJ*Z@><b-Y54gLR$USPqnZqNIY!-p8QflU@i>SUF`+'@:gjmI#]ATF%GY&X^o@%?"YcZG7bl7%l0Ze[t-tb0pBe8A>]igd'W(`O!0?nT)>8aqE\Aj[](C`%N7Kkd""7i>p5ob/qs,[CmBN/H;P*&Uui,]Z'%\t;7XGmUrQ9"p+BGO\l%h<C7^)%%h7GAF*F-j2F\RN*jbDcd,`0/WWBkHS]uS3G2R@/2"6=DP/9"MWu?;/TE0B7L7;$+euqhJW']%0\durMbdRQO2)baWoEQ#Xs<\e!4J0s74$EccF1B$/<[cgR!A1=NbgP7T=1QKpKO].OYS4mCAG<.*IOBom;k)q5A9;u;.]T\AUp(N%1[AXqG,q98Lq.o9Z2c7cnU?bhQ9-YO+<h]rqu"j8=0%Wc%gN,b70"US'?>p(H??4^s&R,T6&[^DrMK/^5]b&eP"C2RR\'\0Sn,aQ%.5opVYM4:$g[(!cj8=BFr"&hnqW#0GN>o;8J(P%_^)rhUD9)>!q"F#Unn+TBs"$Al5+d/)GQ%O^cN-QY?RYVoSakCM7]fi9YPd:e%?N5):G<>)LQYNoB-EqpOmc<Wml+YUT[9koLffn7@O6=MC%QApU,50Tq)o)N(ipC.82e1Qd!WMQ[J&Y.krn3'Vmu;%%Aba$h].rls%s2#kIn;h2^rQhu2^,(4XV2[\>9hl5>FBd'pVQGoKR[uAVboQ8-@A[VJis7@[hdI'h1JA!-I*G]R#4#pcRNHFD>>BDc!FW8(?36q7%[Po6G7b<&O4;ie@DA"8K8tmn-$88P:<X!4X7d3ni1OqSkf!U&q\i.9T"QmX2o@gdF"^/*\30n>m%F6^BXJ90DT$CFDk9u;]XbEI?%WB%dGSdSFG@3#Nh&O"%^K+U6O#TF!nI;:S4F=GGZqS&ftQK)QMMl,b4\D^Xpc%.4gg@DSaTj%LQZ``V_3#B@=fCArSA0"bG)9g;#%X=K6<"O."0#=I.4&aJV+=[:CA@!i.hkbIB3YSrOYkJ4A[.tH;*n3-sW"Dls)pGHr(,;]Y@*6/AZ,!Z9>forL1c9Tr60bJNm`6`B9%r='lr<(7.Pn3fX8pjUf%*1c&!Jg;I7-nN0_d'TmW3=JVTo8EZ[3Ns_6l3?!%[R&:t1a?d]N5Yp3,!Fb$?ScIZCl)[41[E_1?@iN8%BpS(?qn`iojh.1]RfLn;jtkH&dOa,`1#C8.4;oaXirX"0^gWc?U(g]sEs33`k)Ngn_9r@Iq]6IP"]KH9qC6J_F"":l\5:EJXC`Za%#u&s$-qq!J?\#\I*YMUC#IJ;!N/N?$S7Q'52E;#=J\Zt[3D)N3m')!A<Gd4fBGHI3X^O<4<A29(fN8pHI>739XKMk5-s0aTirU=[%?bhCA^k#dbgK(8\UCU"JUB)1e0U2WMpl6GjVM#P]bJ&WkEXorTM$r:N@h).^@gu'2^jq>O.<Fia$'6iuZfk'6AdqC``.^at&H+R!%UYP9tR6$iD^.nhsJI)9MOO7J1_fQ[[WN1(b^]faKTej^l$2$tR%.`>.$aUISE7.m2\L).6i'`f?;(s;*W\9Ij2r3sCMB*<E`APS9%pMD\pds2JX<N_rfTc77I614T(mtP6X4[hGX,-!ZEdNgI11f`$M+A"^_'hLPG71?#SOj;>)K"nj<L0/.!D(UE0\!DUpEE7LQfW."\%;4XD_AV-Wih--]DJ]pRXi=50*=SL1f;D=!62mfpP'U/[ed)I!$*iE^_'*1ZFG=[]=Y_Y>J_B'3Eh`([BZb@0cX%bRG>aq;NC_qgK%JKiL84`sl!04:AcK]ECK'AYUK&8C&F13CEHEWl-3&\pX:2*thri(DPdn1IZo`=g_QL"!mTF4do5dd@Y_d"t+nTHX_sM5AV6Jcp0*%YSQ#MGUOEF=nX.W"3&A:,;aqOcEe_%ZJbQda=M$Tej`4aBL#]G@?QbY-XjKW$B`+I;%].ll"\*tgVK]j![C5.!&Z@(k9J4#!kdXk%"H:buoVHXEEtFp6>R9e'*86:c:m[.721R&DGRbP2jKS.g/eUWmQ@6m/j;`gW&f3mf+o8IW4g^?fU,2G8btVT.bmh6<fFZQ8l8"`B%)2/#*S=-Mt`^mq?$Bet6=l1u$]XHasP;3lS'4J_+QLk0:9?D$92[*.P<IGT(e/X?Q$5\CB;T!\E#V84aeCPD?UZO8WKJW94/eUWm%Q@6m/j;`gW&f3mf+o3?n/H]la+F&^BL*It$N9CP(+uA!C:YQ7e-t%-CU+]fWR"J:+i'JmV_'p(p[%E&7_gP6U,]'@-W&Xiiq0&.*%&k6i+IHfJ(*0^X/(J<4+rA[fP];6J4AKe;A%Y?i'["B>W\qApW)VRIi7X'pt-\pIlJb:%8M0/n/8E!Iq(h#eDbdG7QYsN(YY/WCP%-Ob'NV%[7Nc$2M9E/,a/_?0=uoT_?H_LdtVC4_aeLu#2o#0(^(992);4FMGjGj%s[_jGf)n1J\YiE[R77.Okq,,'#e,0:H6K"5M&%mfLfTh?BK.]F+]tZjS.<i%4bg[E1EW%?07O0LS,XF&@dTliQ2:P=A^U$[bFK?9a2aKOc/.?9cVd'+UsYC)3][HMn868`+,6b;Zs"%%Lj0q]oF4b3cfUM3],<q,LU_B#`Q;p8Op\m\a@dA'7bC_IPV08n,W=k">90[>(MltJFKME]MMCcA:ln*a98`"4PcZD8-hL>kXjA?%N#u4a7mg1Q'1912W@qX+lq,gi%S4DJ"fi6XRhk?_KDT%BSikb?0K;p'MNWh[)En>`Ja8b%&$VFT@KQt=mfm*5JW593#g\nGX*]D6%">Dp<Hb'lpPBfQa\nZsZbdDjdYa@'H@(*+oKs7=$";<njI3!39d4#4m-mfR=#qD%>E$QBC$Kh3%ot$HcLIBbfZ_7*X+fS>C=ptQ`%<H6W;&KWH)NDL#$g@S'6<IqW0ERHNgP6pE)@g4W<2hd+]!R,NL0HFP5*tKF((-&>p;_nb:lp-YC?PUPA/:lOW7*qY0#9_h181cep%@</oSWt6J*H+r6ja:HbRQK^n1/P&E'%>l$@#`k.;^r-6iO:3uY[`#>;$["h[%+t$+&L8p[d]k#f(cl4;2iOlWJmrNM+HjGZ_H+Kf%MNJY[Rt`3S.dBSBTq6tUJ2'ToN%i]fKKS/s_H_3G/#J"c!H1>2!uX?,*Bu)*Q47?f_6agZEe_tr:g];?-ThK=DYdd0i;.JB5E%7H%a`W`KErGL&mt[\D&M_Y%($::E1Z\k?"`V>32Ca7akn/h>hjkEs<R)me%33WdLDYUg'nY6\Jsea:5eDpH_>&%&@XY2b\69">LRk83%qP']m>N%$Hr\p?$-?.NrN_ZQL6%V\(Vd)?P5]@]B+4%C_0T7,%qnaLo6mRaE9OIo/R2K8Q&n(j*lO)#b=?i3_Qqid%=n7s$!X[.E%=U57K"'K$T[)"5&9CF@CCp;D0Rr+CYP/^>ABQ&ITLg[rUh5dK&1bc&dT\\gt(WJ[iI1q9oK=+goM^^Qo#LRtUAH=dCPs3r?(5b*Y%o&3_Z\Npp._VcoQI3'l%I50_kMi_*r"dk4>/j`FLUK\n/#^=\13iFdA+.bj9'J?C=_-,("Qe!$\D(MVSQOun',"p^3$!E!k/J_ph%:^AWg*7M#41`X<X6##pMA[G`*/B#),a^#73,<m?r0W`7QSGZKa,>&dj1"n6$etO]<,>&dj1"n6$el&bJ8k0%`F<#$3%r5%i;7op`%,'M@WnZ\=:@%.?3`F8TF7_`(7#M!sh/$q&mDjjS%+L&Y>fcbc0qq'6M7AAk?km5O,`j8%:+QaX.$b@pr3QMm96nf39.E5g$Z*I-K%C?&_S\rL/68se3'&o<;2/X<eQR[VA)O>*ohd3mb,Bbq9fnLdpdQdRpLrffI]YSN)!dh)bBNYlUL%r5#pO:`f-ab\>fnZ\>%E!Xig%_?_0WmG_P+.X-Qt&k7*dD&3^uYoEh:1'[aa*#Ftk^nh+8&^N?P5+qcB*TZG>,8Ys";FY5)YWBa,j;dAd%'U=(![1YW8#LcDBPmgN%.3qGm,'sr]jU>U0SX@sI_ch.&_(:g'Z0N]X)2@++DQkns1!_`1J.cBa;2R8i"bdd0/@eC[*CG4sb[FV3,V7:S"cSHYD&3^u;&6)B%(#oUaU[@&L/X8(XLo<RrLs]h>TGEeP`FT2t+r>)4%r8/'";?b.QebOpdfAcW`t=.4I-^Q@3\^(O0^0#k>u>#h6\uB<jTm3!Gl]'j%&3UQsF`Hm&iAi/WiM-0@PiWTgAY#4=`ktu%+i,EI]#61f+>XFAWLOIjF>-d,QbmP^1rJ_?@?buPU:V*R7t3ss+](hn.?Mp[KFAW6%'F/>Lp8YACL^Y&5((4lVm#VeC,`Ig;g+FGtU@LY'.q++Ed<>&aQHF-]i$$9al`(p3*b=>?o,p<EA!WPsL7tG[MVrs1'r,C;G_aRp%)(MM>\?gDiKo&>Xl0?,oJds_#K7YOG<*+dXS0;!9-YBLNYSLM60M.'MEQ]Y=)2>Ou%LND]D+oED;OE)',B>BQmG_OtcLF>I.4BrI%MDR\nQHBK+UIgOc/^c*ae=tGoUIgOc/^c*ae5Ego+kfL)Tj>$24KLsT7e'QrLp0>&`PYk1p<JLE>nNHQ^]d$WJ/2AkI*X41Mnl.%%7f#_=P>!.U%_*u`0+,#e"DM4)fJR1L"]Mq0^'\L1LN#!WXYpsEU<AY\.=oGiQ]Pbqel);_`.THkBgN?>Mhd!G-d@#?M^(G0bqQ5q%EW\WQ8f/F#g+FGtU+@E38f/F#g+FGt;L'URNXDZI37KQ%etSn6Gcb@Am%Wn,@=1JEacW.++clfCb@29RVHGB<&=SeK)QXnLc%]Ed%Y3CX1Oq9MlmjDP0(W8r,80W^3VaCIQ-#jQ7"P.UXd)rTZ7q^]/?^Lc=d(ACZ/HeVcK,K5!)9tdrem&r'm#L<W\q&2b=2Dp\HqOW1%Z!^'M_E=A,/0K<]F4%k8%[OQB5eb(0I/rk\1t^J9bb>nmj4bmg^FBe.jIR%Q#fi@PU9A<Z*s7(#(_$cZ/ODc)9,K"g>VU*R-O7O2%.t<pmTiip-.RCKKZie7^a9)H7$j!/n\jmRr>!g-Dja+XZ0plQW&K#,j>9OopR(OY6j3)Ca))mUcM]hfF7(&T&N3$ORHFU!n#Rm+f%;MAMQ?j^Do=050@+_X4(a*!(b8d9Bkb$-)Yn6c?$4KpA@$<W[dUno3##<dGU0ieAp_E]D$>o9!0/*n5!P,4E:5^V)kRo1.i"t!PO%8lM+M!pqJ97A`mS;j\u#_H?J2.oUMBa<F1B\QR)a2Dl=B*_+$N/2SQ4?SgL,bT7206cobu$R]289e`-WmKipsmG58L#X0G+hBg2F%M9`/F13AO1c.C/Om:=k?ioA3l:LUDPLKX`[>io]F/T$XoTj"H9L\R0%-nop:k7R:cA8,E\q3FNH$ORQfKnYe&GU=k26r79;85q-6%PR>Sf>U_e=L%`GW]'r;4WmXS3MQjm^MD0_jnY0:kTcl2tMGQDL9VSS6W`=ln#XO9^=CB^dlm4uA#uc&8+9P`c#3a:iecAGuM3FR=%'EeL_fJ!DqP63jKhpm]?b`/21W/lg(!]>U#2f=/(KEX;n>c4:DR`%[\0M4?U_,^pa&ZBaS?KVkNf[*J6):EFt?mJ[(hL&uA!8$J[%LUj[Macjd+=p[k0Zf1MX7EC.bH-H[(ZUdLk_-FCs799_8DF,^+,3S2+^&'(h7%?Uu+`+Nd,d!M%O\oP]?j^Do=050@+c/P2&I\3^%1trOtW.7HO8]$YAJeAo1d$^n/"uW`iBnq`P'<Yh<V[A)gg-R/71Y=IL9]74)6;.R)0crZNoYI1#$M"AMgm0;2%YB`p$jVKI-T$<1%K8HHG:QGMrD9N?]m0'1m1dg=!*l)GiN/b1?VQGW@:U$&[8h>QLMo#TqBjX.EZ8+j$[5-F%U+GG'98i#jQ3HQ<WHn,>6l90I%__9A%()5HCCN3<82I9MX6q]"UWd")'Z<X9<d/tftKkTPiKGl_Fa7G3V0OJCr&<(!PNVS)1bepNF84+?;Y(pq;Ou*n:i^@*SHtsb@>LS!^%Pb&%4fCZTu6_s"787ImG&^2;I"fXPj0ef]=!b>^(2^\<C.1FD#2#iK"+?uMh-l>Dt1k(B-biC'L!:l7S#h$)Q&/;MjbUdqr:i^\?%%!+`(R"7[%_M+jCQ%_m4B!/u9gD)2W);7@_,saSBG%4a>&T*oSo><@o]pBMNg&d9<(eU1;4,!H^DW&V+JiQ)!db&dI(J3n:o!>VV%h;C:f+O`HtRKOK::t<AjAFu#W^5<)?T\^f*IEr:f!#%[IQs-0JWtqJ-!(k[&?IUE#!CP]94?\47PQ@Yl4t3:lopJo7iVFm\98$L7%6#4`\W`d.\*d&%,!/Ln7#ZaJijZJ]rWa7LjF"i<9YQmfq5mapNGd\Kk8<g)'$IouX"Z/QH)/cD\>3UhU7V7s7$&3I1"Z*A8#`Fng%M?1_S*f*&c1e6BE[HSH-TW#)G[Uo8VDe!8kPgFRi!sA(@p-OFq9K:P;=:7d!J]hL2P*-+o([j^@R4N9m#tq.I.;GlsAG'sM-(,A\%,+0'T.VgMV_SZ3R_[NAr=Lt`*0_r]^cn^/q5p_D5&gQ,!,c[9r.hg%E/Fa:sF4aW7>1e?HF,jhZp1.r]iW"JNC,'q#L(u2^G@W2A%i1HmdUWo\)Lc7K,;hmM$&A7t8o;/`:!_te/4Vjht/9RSt9bP8&=\JUCTkuf-GRfg?_rb)r&f9Ma+t3=<XiqQg$U.:?dl^\,TXq`4%U'o6(_EGsq7L1@1:Z`Rg(eY]KRI!Qp+Qjl3P,JqL8sBG#G@J(u)&i0f@e']f(a^XC$tYkBJa_L+6&L16TP&&?&nSR!n'+f,61+eY%Y4`5P_AWbOkBUj?a1Tab,nO8"Jlm)8)H6pYim1r`0$j#D9p`Wl`)B[gH%[k2[G<MF2.b)DosG>Sf*]cRWis^[1-AsrfX`5t2rVgZ%$oX)i15(uQ:m`=!<(LAa@%kT\\p@<m.2ouc_iCCj?triM03Q#ZJriQu6HCTQ(,YKun0(h]n2dlbk(`uCR]]0O!7:$Cj?C\E"DejP%L#UgF2!4aB5:E"O@otnlnma,c+W0odAGS?.MOD\riUVN/mQ9Fi$t(h$LjPF8F;&g[>O:_-KlY%`"tNjZH\B1bdCSe$qP%E8m2Inf%kf^F&Mi8"'$WrR\+!e3!S?]0=e&?qV]\7qR^s]TPQF(S'6A4K?\3u!hES:"%6<Si[b!]#t!AO\QPe_rM<+%7*hhg;]]I^;r-Q'fh%MYUTBkmMS_"Z9(*[Yu]-mI9(h>OoSBB=lqpAiW0:rQh<rj`$VGFfhr110!Jbl,b!1j/E7f*of)>"SSeS)%KI>i79_LZ9@Uo%1jm@%$Wn$(,U*'=l4F@`LQf,'Ma+QkEIm`)eO<q9J?u9^#,K'c.Ko@9$S*2AI=3B#)kM[^Tib`.r8=ZM3(k)kS*Wd]+QjlSP.2'l8t;^s%HC,eZEhq]j5T^A6+;tK.FT1J,O*#GgK6BOT;_=kX=&o$*J5=k;5F!J[cL@-Bf0"<'G_[u86(iRp`thdI]'YD,"XXUZq&JaEMl!eS%1%+nk+HS6!W86`46!$3(o\g""&7PhPIH[,EL4NjoiO^?F0?=qHX.gY))!"3nAoQ%LqO3qlF:QOJ5Y7WYTO,r>)1o2Jad'u>AGpNQ%677TrTr5h2d(L+1$a*HUJa:-@lTfZG>\4'YIhk\*dR)XX(4-93d(N\:iIV5sZM&l508]B#60/f3_'u;ZI^lR5WdVqsN]<a>-5'sC%Z)\4BI'+8^(hOS1+VL^T">U-%\P1-[-3.NC5_?3CWHH=CCADUl5pV9iTqoUaTQhi=$h68.Mg5,PrETbo+o(hUIXnSc*5g8-IjU8u%opNC"T\ksDj]kkd<$KOP2]Iq)13kGVo-#oI!.,0hHj);p=X<6ILhI!\6Pm^k";b?C-n:I6Q,Tkjfla5<TPd3MX'hXNK_Vu.^(@)q%M;rSo98GPKJ!:ORQH:G*q2C^iK1u)'n!V$L*g.^q$,P[B@&Z1lC_\Rg:dGB4&ggZIn5mip03pVcGi_uq1+-A<Jgor@D'tKABKK9d%q`hHOYV7FNLHu;\WZ.4BPtr*q.'>GI+C*Z!0Ih%M0@'\KQseYO%Xo_>/<N-[.q,G_9(g04(S.d,P9ME/Mkcg7"R?'ANGV6V`1h^k%4bK/6Bf*ZQ'!L%&R&oR#I8,"VW&Y7ufHIc'o!2@=)!LSbKCWeYG1rcH7pMA4&gN/4#D1rPP[2`K&[k/ZUn-ikC+/e99%Gb",f:,^%5jT0;>*Z4hehRJ(lkBk"BMM+$'T>p4[\YWL)O1HZROCd-&r84&lB,OA(-LM3nI9q&ZI8/+1k`(^(b!7M;"#U>>,YD&i>GTtT>F!9%>[a]n*kP`J9,7f\][3)^/@n>]>J",j%T1<"/(kF$;'lFS&_`u[j6?d#UC*mlW9R$s-Ke3P<8jQpT#-o`>N%*+qc:s8V#i/;=La?l%=i%ghBa)?@+j)T6:NsQl*T'c3U--:@$=5rqq.k`1lZphbXRV[BN$C,0:rgG+C>)k.BPZ`g`mid79+Hlg*#]Jt2o<(VKS<Wfrj66M%9[COfeG3]c@GNPi;/.PYiiHbtNX?spT#JC/E^YSKJMSP[P6J4sYJD6h<6dUY4dS`aYlq&3=k-I<@Prel`<m9dM\X57-<E\58d`X"%!ngs70A)sl?j.c`<RO^p`d>Elmah3G]j>(u;hVB.7G#BmNj"?\FkP<s"W_,6\cbkuU?sY;(t?IOd6JfH,F$$b_gK^b_L+T#iM*Bl%K4u#3!=C"0"j88[/R]f"of`;a=/7-tKj-T(`beu(cpj-La[V+-F1]N.%T.M"@,G//AB'eSrO[7EW.4QkC%fU$+*[a_3I^`!gAAP[%Cqd_=j6_<ej0R?UNdj1brWaUn75Rde.sogOrsq518?W~>%AI9_PrivateDataEnd
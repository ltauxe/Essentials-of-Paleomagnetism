%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 3dirm [Converted].eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Lisa Tauxe
%%CreationDate: 5/19/09
%%BoundingBox: 0 0 408 466
%%HiResBoundingBox: 0 0 407.5191 465.2750
%%CropBox: 0 0 407.5191 465.2750
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 112 128 8%%BeginData: 8342 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD05FFA8FD6DFF7D7DA8A8FD07FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD04FF7DA87D%FD06FF7D52FD607DA852FD04FFA8FD07FF52A8FD61FFA8FD0CFF7DA8FD4B%FFA8FFFFFFA8FFFFFFA8FFA8FFFD06A87DFFFFFF7DFD0CFF52A8FD2CFFA8%FFFFFFA8FFA8FFA8FFA8FFFD08A87DA8A8A87DA8A8A87DA8A8A87DA8A8A8%7DFD04A8FFA8A8A8FFA8FFA8A8FFFFFFA8FD0CFF7DA8FD1DFFA87DA8FFFD%19A8FFA8FFA8FFFFFFA8FFFFFFA8FD1BFF7DFD07FFA87DFF7DA852A8FD18%FFA8A87DA87D7D7DFD04A8FFA8FFA8FFA8FFA8FFFFFFA8FD32FF7DFD07FF%A8A8FFA8A87D7DFD15FFFD05A8FD47FF7DFD07FFA8A8FFA8FF52A8FD10FF%7D7D7DA8A8FFA8FD4AFF7DFD0CFF7D7DFD0DFFA8A87DA8A8FD4FFF7DFD0C%FF52A8FD0AFFA87D52A8A8FD52FFA8FD0CFF7DA8FD09FF527DA8FD55FF7D%FD0CFF52A8FD07FF7D52A8FD57FFA8FFFFFFA8FD08FF7DA8FD06FFA852FD%59FF7DFFFF527D52FFFFA87DFF7DA852A8FD06FF52A8FD59FF7DFF7D7DA8%FFA8FFFD05A87D7DFD05FFA8A8FD5AFF7D7D7D52A8FFFFFFA87DFF7DFF52%A8FD05FF7D52FD5AFF7DFFA8A8FD09FF7DA8FD05FF7DA8FD5AFF7DFFFF7D%527DFD07FF52A8FD05FFA8A8FD5AFFA8FFFF7D27A8FD07FF7DA8FD05FFA8%FD5BFF7DFFFF7D527DFD07FF52A8FD04FFA8A8FD5BFFA8FFFFFF7DA8FD07%FF7DA8FD05FFA8FD5BFF7DFFFFF827A8FFFFFFA8FFA8FF52A8FD04FF7D7D%FD5BFF7DFFA8A8527DA8FFA8A8FFA8A87D7DFD04FFA87DFD5BFF7DFFFF7D%7D52FFFFFFA8FF7DA852A8FD04FFA8FD5CFF7DFD0CFF7DA8FD04FFA8FD5C%FF7DFFFF7D7D7DFD07FF52A8FD04FF7DFD5CFFA8FFA852277DFD07FF7DA8%FD04FF52A8FD5BFF7DFFFF27277DFD07FF52A8FD04FF7DFD5CFFA8FFFF7D%277DFD07FF7DA8FD04FFA8FD5CFF7DFFA85227A8FFFFFFA8FFA8FF52A8FD%04FF7DFD5CFF7DFFA87D7D7DFFFFA8A8FFA8A87D7DFD04FFA8FD5CFF7DFF%7D525252FFFFFF7DFF7DA8527DFD04FFA8FD5CFF7DFFFD04A8FD04FFA8FF%FF7DA8FFFFFFA87DFD5CFF7DFD0CFF52A8FFFFFFA852FD5CFFA8FD0CFF7D%A8FD61FF7DFD0CFF52A8FFFFFFA8A8FD5CFFA8FD0CFF7DA8FFFFFFA8FD5D%FF7DFD0CFF52A8FFFFFFA8A8FD5CFF7DFD07FFA8A8FFA8A87DA8FFFFFFA8%FD5DFF7DFD06FFA8A87DFF7DA8527DFFFFFFA8A8FD5CFF7DFD07FFFD05A8%7D7DFFFFFF52A8FD5CFF7DFD0CFF52A8FFFFFFA8A8FD5CFFA8FD0CFF7DA8%FFFFFFA8FD5DFF7DFD0CFF52A8FFFFFFA8A8FD5CFFA8FD0CFF7DA8FFFFFF%A8FD5DFF7DFD0CFF52A8FFFFA8A8FD5DFF7DFD07FFA8A8FFA8A87DA8FFFF%FFA8FD5DFF7DFD06FFA8A87DFF7DA8527DFFFFA87DFD5DFF7DFD07FFFD05%A87D7DFFFFFFA8FD5DFFA8FD08FFA8FFA8FF5252527D5252527D527D527D%527D527D527D527D527D527D527D5252527D527D527D527D527D527D527D%527D527D527D527D277D527D527D527D527D527D527D527D527D527D527D%527D527D527D527D527D527D527D527D527D527D527D52527D7D7D52FD0D%FF7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D%A87DA87DA87DA87DA87DFD12FFA8FD13FFA8FD2FFFA8FD15FFA8FD12FF7D%A8FF7DA8FD11FFFD04A87DFD12FFA8A8FF7DA8FD12FF7DFFA87DFD12FFA8%A8FF7DA8FD10FFA87D7DA87DA8FD11FFA87DA8A87DA8FD11FFA8A8A87D7D%FD12FFA8A8A852FD12FF7D7DA852A8FD11FFA8FD19FFA8FD15FFA8FD29FF%A8FDA9FFA8A8FFFFA87D7DA8FD68FF7D27A8A87D52527D7DFD67FF5227FD%04A87DFF52FD67FF7D52FFA87DA8A87D7DFD6BFFA8FFFFA8FDAAFFA8FD6C%FFA87DA8A8A8FD6CFF52A8A8FD06FFA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DFD04FFA8A8%FD06FF527DA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8%FFA8A8A8FFA8A8A8FFA8A8A87DFD0CFF7DA8FFFFA87DFD5DFF7DFD0CFF52%A8FFFF7D5252FD5CFFA8FD0CFF7DA8FD05FF7DA8A8FD42FFA8A8FF7DFFFF%A87DFD0FFF7DFD0CFF52A8FD06FFA8A87DA8FD3CFF527DFFFF7DA8A8A87D%FFA87DFD0FFF7DFD07FFA8A8FFA8A87DA8FD09FF7DA8A8FD3AFFA87DFFFF%7DA8A87DFFFFFFA8FD0FFF7DFD07FFA87DFF7DA8527DFD0AFFA8A87DFD54%FF7DFD07FF7DFD04A87D7DFD0DFFA8A8A8FD3AFFA8A8FFA8FFFFFFA8FD0F%FF7DFD0CFF52A8FD0EFFA8A8527DA8FD33FF527DFFFF7DA8FF52A8FFA8A8%FD0FFFA8FD0CFF7DA8FD10FF7D52A8FD37FFA8A8FF7DFFFFFFA8FD0FFF7D%FD0CFF52A8FD12FF7DA8FD38FFA8FD14FFA8FFFFFFA8FD08FF7DA8FD13FF%A8A8FD31FFA8FFFFFFA8A8FFA8FFA8FFFFA8A8FD0DFF7DFFFF7D5252A8FD%06FF52A8FD14FFA87DA8FD2FFF527DFFFF7DA8FF7DA87DA8FF7DA8FD0DFF%7DFD05FFA8FD06FF7DA8FD15FFA8A8FD2FFFA8A8FFFF7DA8FFA8FF7DFFFF%FFA8FD0DFF7DA87D527DFD08FF52A8FD16FFA85252FD31FFA8FFFFFFA8FD%12FF7DFF7DA8A8FFFFFFA8FFFFA8FF7DA8FD17FF7D7D7DFD47FF7DFFFF52%FFA8FFFFA87DFF7DA8527DA8FD19FF7D7DA8FD44FFA8FFFFA8277DFFFFFF%FD04A87D7DFD1BFFFD05A8FD41FF7DFFFFA8277DFD05FFA8FF7DA8FD1DFF%A85252A8FD40FFA8FFFFA8527DFD07FF7DA8FD1EFFA87DA87DFD3FFF7DFF%FF27F87DFD07FF52A8FD22FF7DFD04A8FD3AFF7DFFFFFF7DA8FD07FF7DA8%FD24FFA82752FD3AFF7DFFFF7DA852A8FD06FF52A8FD25FF7D52A8FD39FF%7DFFFFFF7DA8FD07FF7D7DFD27FFA8A8FD38FF7DFFFF7DA87DFD07FF52A8%FD28FFA87DA8FD36FFA8FFFF7D277DFD07FF7DA8FD2AFFA8A8FD35FF7DFF%FF522752FFFFA87DFF7DA8527DFD2BFFA8277DFD33FFA8FFFFA87D7DFFFF%FD05A87D7DFD2CFF7D52A8FD32FF7DFFFF52527DFFFFFFA8FFA8FF52A8FD%2EFFA87DA8FD30FF7DFFA87D527DFD07FF7DA8FD30FFA87DFD2FFF7DFFFF%527D52FD07FF52A8FD32FF7D527DFD2CFF7DFFA8527D52FD07FF7D7DFD33%FF527DA8FD2BFF7DFD0CFF52A8FD34FFA8A87DFD2AFFA8FD0CFF7DA8FD37%FF7DA8FD28FF7DFD0CFF52A8FD38FFA87D52A8FD25FFA8FD0CFF7DA8FD39%FFA85252FD25FF7DFD07FFA87DFF7DA852A8FD3AFFA8FF7DA8A8FD22FF7D%FD07FFFD05A87D7DFFFFFF7DFD39FFA8A8A8FD21FF7DFD07FFA87DFFA8FF%52A8FFFFA87D7DA87DFD37FFA8A87D7DA8FD1EFF7DFD0CFF7D7DFD06FFA8%7DFD04A8FD34FFA8277DA8FD1DFF7DFD0CFF52A8FD08FFA8FFA8A87DA8A8%FD05FFA8FFA87D7DFD27FFFD04A87DA8A8FFA8FD18FFA8FD0CFF7DA8FD0D%FFA8A8A87D7DFD05A87D7DA8A8A8FD29FFA8A852527DFD17FF7DFD0CFF52%A8FFFFA852A8FFFD0AA827F87DA87DFFA8A87DFFA8A87D7DF827FD057D27%27A87DA87DA8277DA8A8A8FFFFFFA8FD12FFA8527D7DA8A8FD14FFA8FD0C%FF7DA8FFFF7D27A8A8FFA8FFA8FFFFFFA8FFFFA87DFFFFFFA8A852277DFF%A8FFFFA87DFFA8FFA8A8277DA8A87DA8A82727A8FD047DF8527DA87DA87D%5252A8A8FFFFFFA8FD09FFA8A8A8FFA8FD11FF7DFD0CFF52A8FFFFA8FD15%FFA8FD13FF7DA8A8FFA8FFA8527DA87DA87D7DF8527D7D527D52F827FD05%7DF8527DA8A87D272752FFA8FFFFA87DFD0AFF7DFD0CFF7DA8FD41FF7DA8%FFFFA8FFA8527DA87DA87D7DF852527D527D52277DA87DA8A87D27FFFFFF%7DFD07FFA87DFF7DA87DA8FD52FFA8FFA852F8FD04527D27F8A8FFFF7DFD%07FF7DFD04A87D7DFD56FFA8FD04FFA87D52FFFFFF7DFD07FFA87DA87DFF%527DA8A8A87DFD0CA87D7DFD0BA8FF7DFD0DA87DFD0CA8FF7DFD0DA87DFD%0DA87DFFFD09A87DFD0CFFA852FD627DFD81FF7DFD0BFFA8A87DA8A8FD09%FF7DA87DA8A8FD08FFA87DA87DA8A8FD08FFA87DFD04A8FD08FF7DA8A87D%A8A8FD07FFA87DFD05A8FD18FF7D7DA8FD09FFA8A8A87D7DA8A8FD07FFA8%FD047DA8A8FD07FFA8FD047DA8FD08FF52FD047DA8FD08FF7D7DA87D7DA8%FD07FFA852FD047DA8FD19FFA8FD0DFFA8A8A8FD08FFFD06A8FD08FFFD06%A8FD09FFFD05A8FD08FFFD05A8FD09FFFD05A8FDFCFFFD19FFA8FFA8FD15%FFA87DA8FFA8FD54FF527DFD0CFFA8A8FD06FFA85227FD047DFD53FF7D7D%525252277D525227FD0552277DFD0452A87D7D7D52A8FF52A8FD52FF7DA8%27FD0552275227A87D527D7D2752A87D27FF7DA8FFA852A852FD56FFA8FF%A8A852FFA8FFFFFFA8FFA8A8A8FFFFA8FFA87DFFFFA8A87DFD25FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2009-05-19T08:51:27+08:00</xap:CreateDate>
         <xap:ModifyDate>2009-05-19T08:51:27+08:00</xap:ModifyDate>
         <xap:MetadataDate>2009-05-19T08:51:27+08:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>224</xapGImg:width>
                  <xapGImg:height>256</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADgAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9N63HqkmlzLpUgivjw9N&#xA;yVBoHBcKXSVAxTkFLIRXriqW+VbLVreS5k1FeM8kNot5JVeM99HABc3KBVQcX+BPsLUoTxApVVkG&#xA;KsO03zl5o1Zr+TS/L8MtnZ313p6zTX/pO7WU727vwED8QzRkj4sVRn6Y8+/9S3af9xP/ALNsVd+m&#xA;PPv/AFLdp/3E/wDs2xV36Y8+/wDUt2n/AHE/+zbFXfpjz7/1Ldp/3E/+zbFXfpjz7/1Ldp/3E/8A&#xA;s2xV36Y8+/8AUt2n/cT/AOzbFXfpjz7/ANS3af8AcT/7NsVd+mPPv/Ut2n/cT/7NsVd+mPPv/Ut2&#xA;n/cT/wCzbFXfpjz7/wBS3af9xP8A7NsVd+mPPv8A1Ldp/wBxP/s2xV36Y8+/9S3af9xP/s2xV36Y&#xA;8+/9S3af9xP/ALNsVd+mPPv/AFLdp/3E/wDs2xV36Y8+/wDUt2n/AHE/+zbFXfpjz7/1Ldp/3E/+&#xA;zbFXfpjz7/1Ldp/3E/8As2xV36Y8+/8AUt2n/cT/AOzbFXfpjz7/ANS3af8AcT/7NsVd+mPPv/Ut&#xA;2n/cT/7NsVd+mPPv/Ut2n/cT/wCzbFXfpjz7/wBS3af9xP8A7NsVd+mPPv8A1Ldp/wBxP/s2xVDa&#xA;p5n87abpt3qM/lu2MFnDJcShdSq3CJC7UH1brQYqy7FVK6uYbW3kuJiRFEpZyqs7UHgqhmY+AAqc&#xA;VS9/NOhJ9QD3JVtTkaGyQxy8mkRgjqy8aoVY0bnSh64qkf5Xf8cjWf8AwIdc/wC6lPirMcVdirsV&#xA;dirsVad0jQvIwRFFWZjQAeJJxVJpfOPl4JI1tdfpFo1LPFpyPfOKditssvGvvTFVPT/NhvrGK6TR&#xA;dUgaUErbXFuIZQakcWDuAp+ZpiqJ/TWpf9WG+/4Ox/7KsVa/TWpVA/QF/Tx52NP+orFW/wBKay5r&#xA;HosyKP8Af89urV9hG8wp9OKuF35nb4k0y0VT0WW9dX+kJbSL9zHFWvrPmun/ABzrCvh9empX/pEx&#xA;Vsz+am+EWVjFX/dn1qaWn+w+rx1/4IYq7h5qc09exgH83pTTV9uPqQ0+dcVd9W81V/46NjT/AJgZ&#xA;v+yvFXfVvNX/AFcbH2/0Gb/srxVr9H+YCKtq6hj14WyBRX+UMzmnzJxVs6LqX/V+vh/sLH/slxV3&#xA;6F1L/q/X3/AWP/ZLirv0Fcsf32sX0tPsjlBFT/kTDFX6cVd/hu0bea6vpW/m+u3Me3hxheNfwriq&#xA;E1LyPo2oWptp59QEZdHNNQvCaowYfblYdR4bdqHFVbzv/wAoXr//AGzbv/kw+Kp1iqhqFobyyntR&#xA;PLamdGj+sW7BZU5CnKNiG4sOxptiqVHylamztLM3dx9Vs+CrCogRGSMoyoVWJQorGN04t4HFUk/K&#xA;uys47LXbpII0upfMGtrLOqKJGC6lPQMwFSB74qzfFXYqkWo+ddDstaj0NWlu9YljaRLG1jaVwFFa&#xA;OwpHFUdPUZR79MVUb2Xz7eS2p0yGx0q2EoNyb8vdTmGm49GAxxq1fCc/wKqM/QV9MP8ATtYu5Vbe&#xA;SCD07WP/AGLRKLhR/wA9sVbTyp5dEiyy2Md1cIQUuLyt1MpHSktwZHH34qmwAAoNgOgxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVJfO/wDyhev/APbNu/8Akw+Kt6/5x8teX2hj1e/S3nnB&#xA;aC3AeWZ1UgMyxRB5CqkircaDFURZeZNBvtIOs2l/BNpahy94rj019MkOHJ+yUIowO4OKrm1/RFjt&#xA;ZWv4FjvmCWjGRQJWLBaJU7nkwX5kDrirHfyu/wCORrP/AIEOuf8AdSnxVmOKsBEGsefLnWLS9abT&#xA;fJsMr2CQIrW99dXFrIBLJ6vx0t+alV4EMxFDQVDKs20/TrHTrSOzsYEtraIUSKMBVHifcnue+Koj&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqkvnf/lC9f8A+2bd/wDJh8VYTrkL&#xA;eXPNsGp695v1G00rmbtri5+pw2MgEj+lplY4I5pGo7Oq+odgfhPXFWfGO11TRZJdJuRbJqkQmh1C&#xA;BEL/AL1BxmAdSC3GlOQxVLz5OQwWcJvZFjtEMPFEjAeF3jkdWLB25O8Ckvy5de5riqVflXZ2yWWu&#xA;3SpSeXzBrayPU7galPTatMVZL5nu7qz8tatd2kgiu7eyuJbeUgMFkSJmRipqDRhWmKrvL2my6XoO&#xA;nadPKJ7i0tooZ7gDj6sqIBJJTxd6sfniqYYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYqkvnf8A5QvX/wDtm3f/ACYfFWDfnxqvlMadpGi6zqdxp1/cXsd1pq29rNOZnjVovT5K&#xA;0MS19bflKPH3xVnvlS1az8saXbuksTQ2sSyJcALKrBBy9RRJOFavUeo1PHFUdNqOnw+h61zFH9aY&#xA;Jbc3VfVZvsrHU/ETXamKsW/K7/jkaz/4EOuf91KfFU185XlpBovoXMyQpqNzbaeObBeYu50idFqR&#xA;VvTZjQeGKp5irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVSXzv/yhev8A&#xA;/bNu/wDkw+KpF+Zeh6RqNoBqnmC10q0eMpNaapHa3FjIqGvqeldcCsic6CRHXrvX4aKpv5M0uxg8&#xA;rW9tFqp8w2E8f7u+kaOWKSEqEVI/T+D0gi8QN69ySScVU5vKV01rpNtHexxrpSRRJOIZBOUjEfLg&#xA;6ToFLmHeqstNiDiqWflXaRJZa7chpDJL5g1tWVpZGjAGpT/ZjLFFPuq4qnnmW0tby40O2uYI5421&#xA;FJF9RFfg8FvNOjqG6MGiG+Kp3irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVSXzv/AMoXr/8A2zbv/kw+KvIv+clVspJtO/0pbe5tIfrFw8VnayXcUDTLGkkN3KwnjYyt8KwK&#xA;zbM1Ph3Veu+Skv08o6Mt/U3gs4fXLXH1ti3AbtcUX1Se7d/E9cVTrFWHfld/xyNZ/wDAh1z/ALqU&#xA;+Kphr2laffeZ/Lc88Qe60+W6ubZ+TAqPQ9J/hBAIJkXcjw8cVZDirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVSXzv/yhev8A/bNu/wDkw+Kse84/l/q/mDzTDqUV5Yw6fDYi&#xA;3EV5ZR6g3reszsyxy8UUFSByrXbpiqe+T9BvNM8k6ToWrvHc3VpYxWd66EtG7JGEehIUkH5Yql95&#xA;5Ovri00W2Mls40qGKAPIrsVKGBjcRDtKv1dlT2fr2KqG/KuCVbLXZjcyPG/mDWwtswj9NCNSn3Uh&#xA;A9T/AJTHFU2vNR4efdKsfq1w3qabfP8AWljrbr++tvhaSuzfB09xirIcVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdiqS+d/8AlC9f/wC2bd/8mHxVOsVdirsVYd+V3/HI1n/w&#xA;Idc/7qU+Kp237zzWnf6rYP06D6zMv2vn9X2+RxVNsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdiqS+d/+UL1//tm3f/Jh8VTrFUDrlnd3mlXFtaOEnkC8au0YYBgWjMiBmQSK&#xA;ChZRUVqMVY3L5c80vBpiLLFFLY3Dy8hdyOqxPcLKsZWS2f1RFGDGu6Gg6ryNFVL8q4rgWOvSPNyh&#xA;bzBrQjh4gcSNSnqeXU1xVNrKfUj581aGS3RbFdOsTFcCSrs3q3OxSm2/L7h1r8KrIcVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqS+d/+UL1/wD7Zt3/AMmHxVOsVdirsVYd&#xA;+V3/AByNZ/8AAh1z/upT4qndgfU8xatLX+7jtbbbpRBJLv8A5X7/AO6mKptirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVSXzv/yhev8A/bNu/wDkw+Kp1iqA1+G+m0i5jsSw&#xA;uWUcRG/pSMoYF0jkNODulVVuxIOKsblsfNzwadGsd0hgklIP1pOS87hHt2uGD1mWG2DxyA8+Tdn+&#xA;2FUg/L7zr5X0pfMFpq/mTSbJk1/WStjcTwwXCE6jMauZJtww3HwDFUy0D8wvJcOr+YZLvzhor21x&#xA;exvaKLy2SgFrCpoxkPIUCiv8wb5BVPP+Vmflv/1Nej/9xC1/6qYq7/lZn5b/APU16P8A9xC1/wCq&#xA;mKu/5WZ+W/8A1Nej/wDcQtf+qmKu/wCVmflv/wBTXo//AHELX/qpiqjd/mr+W1taTXJ80aVKIY2k&#xA;MUV9atI3AE8UX1N2NNhiqt/ysz8t/wDqa9H/AO4ha/8AVTFXf8rM/Lf/AKmvR/8AuIWv/VTFXf8A&#xA;KzPy3/6mvR/+4ha/9VMVd/ysz8t/+pr0f/uIWv8A1UxV3/KzPy3/AOpr0f8A7iFr/wBVMVUW/NX8&#xA;tlu47b/FGlEyRvIJRfWvpj0yi8Wb1Nmb1PhHeh8MVVv+Vmflv/1Nej/9xC1/6qYq7/lZn5b/APU1&#xA;6P8A9xC1/wCqmKu/5WZ+W/8A1Nej/wDcQtf+qmKu/wCVmflv/wBTXo//AHELX/qpirv+Vmflv/1N&#xA;ej/9xC1/6qYqo2v5q/ltcRmQeaNKj4ySR8ZL61Un0pGj5Aep9luNVPcUOKq3/KzPy3/6mvR/+4ha&#xA;/wDVTFXf8rM/Lf8A6mvR/wDuIWv/AFUxV3/KzPy3/wCpr0f/ALiFr/1UxV3/ACsz8t/+pr0f/uIW&#xA;v/VTFVK5/NT8t4I1f/E+lS8pI4wsd9as1ZZFjDU9T7K8qsewqcVS7zl+YXkCbyhrkMPmbSpJpNPu&#xA;kjjS+tmZmaFgFUB6kk4qzrFXYq7FWP8AmWy0Gx0+fUpNLsZJjJEsk1xFGEBnmWNpZX4k8U582PgM&#xA;VY5+l/LLLonpaPpLvqfpicARMA0k1tFxhIj+P4LsSitKpQ9GqFWY/wCGPLX/AFabP/pHi/5pxV3+&#xA;GPLX/Vps/wDpHi/5pxV3+GPLX/Vps/8ApHi/5pxV3+GPLX/Vps/+keL/AJpxVjuryeV9O8wW+mza&#xA;VpcdvJGkkskyRRyFXExdo1KcWWEQcpDXZTX5qr/Lg8uatqWr2MmjaekmmzFB6UdrKDH600SljGX4&#xA;ufq55IwUr0xVP/8ADHlr/q02f/SPF/zTirv8MeWv+rTZ/wDSPF/zTirv8MeWv+rTZ/8ASPF/zTir&#xA;v8MeWv8Aq02f/SPF/wA04qxu9k8u2um3U82j6Tb3UN59VjSURCP0TdRW5nZjGrUVZ1ZxSgPw8u+K&#xA;pvomk+W9S0aw1E6PYob22huCiwxOo9WMPQNwFQOXWmKo3/DHlr/q02f/AEjxf804q7/DHlr/AKtN&#xA;n/0jxf8ANOKu/wAMeWv+rTZ/9I8X/NOKoDW9I0LT9Nku4NEsJnjaMGN4o4xxaRVY1Eb7hSSBTc7V&#xA;HXFUsml8qp5ts9ETStMkhu0bhKi2rSesv1guhi5CQBfqjDlwI5VGxBxVkX+GPLX/AFabP/pHi/5p&#xA;xV3+GPLX/Vps/wDpHi/5pxV3+GPLX/Vps/8ApHi/5pxV3+GPLX/Vps/+keL/AJpxVIH/AMLL5rfR&#xA;H0vSjFHCkk0nCLnFJI6LAkgZFUPMzHggJO1f2gMVa8l/4c8xaZLeNo+mDhJGg+rJFMn7y2huKFuC&#xA;0ZPX4Ee1fYKsyxV2KuxVxAYEEVB2IPQjFWuCHjVR8O67dDSm30HFW8VdirsVdirRVSwYgFh0PcVx&#xA;VwVQSQACxqxHc0pU/QMVbxVAa/rdjoWiX+tX5YWWnQSXNwUHJuESlm4r3O22KpXB590SbQl1dUuF&#xA;DXY036i8XG6F6Zhb/VzGTTkJDueXECrV474qgNL/ADS0i+uDFJpmpWCJfR6XLc3cCLEl3LtHE7JJ&#xA;JQs7In+s6j5KsxKIVZSoKtXkpGxr1rireKuxV2KuxVxAIodweoxVrivINQcgCA3cA0qPwxVvFXYq&#xA;7FXYqs+rwet6/pr6xHEy8Ryp4cuuKrwABQCg3O3idzirsVdirsVdirsVdirsVdirsVdirsVdiqV+&#xA;adAt/MXlvU9CuJXhg1O2ltZJo6c0EqFeS12qK4qxiz/K+LSPK+naRpF2Xn0rU01e2a5VUhMnqFpo&#xA;ligVEhidJHChF+EnlRjWqqO1PyFFPayWVpOUtdQ1uDW9VM3xMfq8sVwIoeITiGktY13Oy8uppirL&#xA;cVdirsVdirsVdirsVdirsVdirsVdirsVSvzN+mP0NKdHDtfrJAyLH6Zcos6GUKJXhjJ9INszjFUL&#xA;5ZfVXuLx75JI2aO0NzG1fTW+MNbpberP+6A9P7LFefLevLFU+xVi9l55m1Brw6b5d1O9t7O7ubB7&#xA;mNtPRGltJmgl4Ca7ik480NCVGKoj/E2tf9Snqv8AyN0r/suxV3+Jta/6lPVf+Rulf9l2Ku/xNrX/&#xA;AFKeq/8AI3Sv+y7FXf4m1r/qU9V/5G6V/wBl2Ku/xNrX/Up6r/yN0r/suxV3+Jta/wCpT1X/AJG6&#xA;V/2XYq7/ABNrX/Up6r/yN0r/ALLsVd/ibWv+pT1X/kbpX/Zdirv8Ta1/1Keq/wDI3Sv+y7FXf4m1&#xA;r/qU9V/5G6V/2XYq7/E2tf8AUp6r/wAjdK/7LsVd/ibWv+pT1X/kbpX/AGXYq7/E2tf9Snqv/I3S&#xA;v+y7FXf4m1r/AKlPVf8AkbpX/Zdirv8AE2tf9Snqv/I3Sv8AsuxV3+Jta/6lPVf+Rulf9l2Ku/xN&#xA;rX/Up6r/AMjdK/7LsVd/ibWv+pT1X/kbpX/Zdirv8Ta1/wBSnqv/ACN0r/suxV3+Jta/6lPVf+Ru&#xA;lf8AZdirv8Ta1/1Keq/8jdK/7LsVd/ibWv8AqU9V/wCRulf9l2Ku/wATa1/1Keq/8jdK/wCy7FVC&#xA;/wDOeo2FjcX115V1aO2tYnnnf1NLbjHGpZjQXxJoB2xVk+KuxV2KsO/K7/jkaz/4EOuf91KfFVtj&#xA;5R8zaNq97qmmapHexXRJfS7xWQSkuX9R7pDI6yqG9NW9Nl4KF4gBeKqdWXmiyluo7C/jk0rU5DSO&#xA;zvAq+qRv+4lUtFNtvRGLAfaAxVOcVdirsVdirsVdirsVdirsVdirsVdirsVdirsVSny/5r8u+YVu&#xA;m0W+jvVspTBdGOvwSAV4moG+KqMPmy2msWuEsrr6wLgWiaeVjFw0pjEwABk4D903M8mHEAhqEUxV&#xA;XufMNvFpVnqdvbzXlrfG3EJh9NWAumVYmYTPFsTIte48MVTXFXYq7FUl87/8oXr/AP2zbv8A5MPi&#xA;qdYqg9ZiuJdKu4raEXFw8TrFA0r24diNlMsfxoD4jFWMS+XPMr2mjwqyn6nUTyPdyo6u0sUnrBER&#xA;lb0xG6JGXpxanKlcVU/yriuRZa7I0/KBvMGtiODiBxI1Kep5dTXFWb4qoXtjZX9rJaX1vHdWsopJ&#xA;BMiyIw67qwIOKpWNJ1fTAP0Pc/WLZdhpt+7soHhFdUeVPH4xIOw4jFVG6896DpwRNaaXSLlzQW9z&#xA;GxJAFWdHi9SN40X4pHViI13fjirIFZWUMpDKwqrDcEHuMVbxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;pF5UvPKVymqL5bSFEtNQuLTVBBCYQL6EgThgVTkwqPiFQexxVIIrryTF5OuNRa3voNM09jKsElxc&#xA;fWDJOkVyjRH12PqSiRCp5ggswPHk+Ksl1eSx0zTLWH9HyXNnHNawQ29t6a+mwmRbc/vJIhxWTh0J&#xA;+VMVTfFXYq7FUl87/wDKF6//ANs27/5MPiqtr/mjQPL8MUusXqWgnYpboeTySMo5MI40DO9BueI2&#xA;xVfoXmLRNfsjeaReR3lujmKQpUNHItCUkRgHRwCDxYA0IOKpjirDvyu/45Gs/wDgQ65/3Up8VZji&#xA;rsVdiqU+Y/KmgeY7aO21m0FzFE3JPieNhWnJeUZVirUHJa0NB4DFUJBeXegPHZ6o5n0gkR2erNTl&#xA;F0VIbulOpNElA4no9GoXVZDirsVdirsVdirsVdirsVdirsVdirTuqIzseKqCWJ6ADriqWeXvMmm6&#xA;9ayXFjzAicJJHKvFxzjWaNiATtJFIjjvRtwGqAqx2yXyXceU7+5OlT/oiNK3djPWYskltA6tw9SV&#xA;Txt/T4GtY1FBx3xVP7a8069u59FNlJCun+hLGrqqRlY5T6LRhGLKqyQfDyVa0+GoxVE6Xqv6Q+s/&#xA;6LNbfVpmgb1vS+Nk6lfSeTb50xVHYq7FUl87/wDKF6//ANs27/5MPirGvMEnnSHzdbW6a/p1lb3J&#xA;e5s0fTWaUafazWv1yKS8e4KRs/rBR+636/CeirNoprEwSahahJllX1GmtwHMoQUFCv2ztQYql1x5&#xA;rsIYdJnME7wauEaGZVUJEsnDi07Myqn96B3qdhXFUi/Ku9s5LLXbVJ42uovMGttLArqZFDalPQso&#xA;NQD74qzfFXYq7FXYqtkjjljaORQ8bgq6MAVZSKEEHqDirB00/wA86J5oA01GvfJ8a/utOVoA0MZQ&#xA;AxxNKVkZxLuiFljSKoBJKqqrLNL1vTNTEotJazQELcW0itFPET0EkUgWRK9RUbjcbYqjsVdirsVd&#xA;irsVdirsVdirsVdiqjaWVnZxGK0gjtomd5WjiRUUvIxd3IUAcmYkk9ziqBsvK+h2VnLZW1twtZ1d&#xA;JYjJI4ZJESMqeTNsI4lRR+yo4rQbYqiLPR7Czu7u7t1dZ75/Vui0srqzhQvLg7MinioHwgbADFUR&#xA;DbwQep6SBPVcySU7u3U/hiqpirsVSXzv/wAoXr//AGzbv/kw+KsB/wCckNW8vQeSYdM1a7W1kvru&#xA;GW2EsEs0UgtJFlljZkinRCybfHT6QDirNPy4sbyw8kaTa3ts9pdRxMZLaXhzQtIzAHgFUbHpTbFU&#xA;wfyzozrboYX9O1CLDGJpggWMKFQoH4sn7tfhYEGlTiqRfld/xyNZ/wDAh1z/ALqU+KsxxV2KuxV2&#xA;KuxV2KoHUtF07UeDXMX7+KvoXUTNFPFy6+nKhV1r3od++KsY8t6f+YOhfWv0pOvmK2kkqnGUJd1F&#xA;eUqrKI4P3pYfuQ6JGF+HkScVZFaeZdFuRKDci2mt0aW5troG3mjjT7UjxyhGEY/n+yexxVMY5I5Y&#xA;1kjYPG4DI6kFWUioII6g4quxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVJfO//AChev/8AbNu/+TD4&#xA;qlf5iJK1iiyXmjDTpVeO80zzAq/VJxsVdZKgo0Z8VYGvY74qiPy6jKeV4DHfWN9YszDTzpRZ7OKB&#xA;D6Yhild5WlCsjfESP5QAAMVZNirDvyu/45Gs/wDgQ65/3Up8VZjirsVdirsVdirsVdirsVSbzb5U&#xA;0zzPo76bfqQOaTW8605xTRsGSRK+BHTuNsVSrQ7G48j6XBpkzy6h5ft+RTUmHK4t/UcyN9YRRRoQ&#xA;7Hi8aj01oGXipfFWWQzRTRJNC6yRSKHjkQhlZWFQykbEEYquxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KpL53/5QvX/+2bd/8mHxVgH/ADkFpek6jpmmRXmqQ6XOjTOk7aal/MkK+n60yzUZ7OOKq+pMo25L&#xA;3pirLvy1S/k/LrSEuprhbl7YhbqaRp7gozN6Upe4jRixTiwDx7dCDiqy8fze1poixJdC4SGL9INF&#xA;9X4tckwVMvM/3QX1ufD6N+OKob8q/rn1LXefp/Vf8Qa36XHl6lf0lPXlXanyxVm+KuxV2KuxV2Ku&#xA;xV2KuxV2KuxVg3mXQ/Oen6hbXXkqRI7OR2e90l/TW3aYmvqEyVMUbDkZBCKs1DQFmkVVlGma9ZX8&#xA;r23GS11CJec2n3ICTotacqAsrpXb1I2ZK9GxVMcVdirsVdirsVdirsVdirsVdirsVSXzv/yhev8A&#xA;/bNu/wDkw+KsU/MvyTrHmbzBpX1fTLC+02Gxvort7+aeBec0ltwj5WpErBkR/hpw61344qyL8u9O&#xA;1jTfJ2n2OsxCHUbf1kliV/VAHruY6PVuQ9PjSu/jirI8VYd+V3/HI1n/AMCHXP8AupT4qzHFXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FUHqWkafqUaJeQ8zEeUEylklicinOKVCrxtTaqkHFWH21z+Y+k+aZhfp&#xA;JqvlWNSFuI0gacIRWNxHEI5ZJVbkJQq048eCluRKrNbG/sr+2W6sp0uLd6hZIyCKg0YHwIOxB3Bx&#xA;VXxV2KuxV2KuxV2KuxV2KuxVJfO//KF6/wD9s27/AOTD4qnWKqN7e21jaS3d0/p28Cl5GoWNB4Ko&#xA;LMT2AFSdhiqBPmjQwLD/AEg11J2is09OXmzowR1ZOPKMoxo/MDietMVSL8rv+ORrP/gQ65/3Up8V&#xA;ZjirsVdirsVdirsVdirsVdirsVdirsVdiqTat5f9R5tR0l/qOuFDwuFPGOZlHwJdIAyyptSpUuor&#xA;wIxVI/KPmXzNBFJb+drb6hK03p2OoMEWGYnZkb0yyQ0faMOfiBADSEc2VZrirsVdirsVdirsVdir&#xA;sVSXzv8A8oXr/wD2zbv/AJMPiqdYqhtT0+LULGW0kd4xJQrLEQJI3Rg6SISGHJHUMKg7jFUpbyda&#xA;PBBBLe3MsUMrTsH9AmR3lWeTkfSqOcq8jw4kVotBQYqk/wCVdlZx2Wu3SQRrdS+YNbWWdUUSMF1K&#xA;egZgKkD3xVNofK+p2ep6jqVl5gvnfUZVl+oX3p3VlBxXjwgiCwyxr3osvXfFUSL3zNail1p0d+o2&#xA;9WwlVJGP8xguTEiD/nuxxVtPNmh1C3U7adIxosd+j2hZunFDMEWT/YE4qm4IIqNwehxV2KoU6tpQ&#xA;1QaSb2D9KmH6yNP9VPrBgDcPV9KvPhy25UpXFUVirsVdirsVdirsVdirsVWzQxTRPDMiyRSKUkjc&#xA;BlZWFCrA7EEYqw3zRH5m8saYbryqPrVt6irNp1zHLdpbRMTylt0iZZ2C9PRDFRtx9NVOKpnpvm+D&#xA;6hbSeYLd9AvnjVrmG7FIEkIFUW7H+jt7Dny9sVT76xBWNfUWs39yOQq9By+Hx232xVfirsVdirsV&#xA;diqS+d/+UL1//tm3f/Jh8VTrFXYq7FWHfld/xyNZ/wDAh1z/ALqU+KtaJe/mlJretR6lp1hHpKT8&#xA;dIma4ZZPSqfiZUjk57UO5X+Cqp56fmtyB69hAB1b0ZpiT4cfVhp864q01n5odWR7+wZGBBU2MxBB&#xA;FCDW73xVg3nX8rfNeqWVnF5d1uDy/JDdR3FyNLjutOSZFNWV1huWRq9ala++KsjHky/oDdTWWqUA&#xA;/dX0N3OpPehuLy6C9eyYqxufy15iPnm2VfIvlt9EFs6S6kRH6pY0agf6uXQc/wBnga179VVZH/hb&#xA;zKBysNUXRnp9mNri/QV/ZWO6kEShf8mMfRiqWeVfL35yWkeoR655rsLv1blpLSU6cXkSI9FX05rZ&#xA;FHsUb54qq+arD83YtAv/ANA6vZ3Gq+kRZt9WWEhzsG4yGdPh671riq/Q7b83V0i0XVZ7B9RSNUu5&#xA;BKAHkUUZwEtOI5kVoOmKpH5z1f8AN6wv9Ai0mCeVZr1TqJgt7S5ie3RSZIiXkt2Xl1Bqp26jfFWU&#xA;/pbz9EQf0OL3xj429p4ft/Xrv/iGKsdsfzY82zedb7y7P5MnjhsbaOeS7ineU83pVAogUHr2b76j&#xA;FWRN5+kiVjL5d1hyoJ/0ezkkBAH+WImr7ccVSLyV+dtj5n0x9Q/w5rNlDHNJC0jW3rRAKaoxkjJ+&#xA;0hVjt8NepWjFVMdb/Or8uNEsJb3UtSkgjh+1G1rdCSp6KEMQNTX5YqmNp+Z35d3lslxH5i09YZUD&#xA;p688cBKsKj4ZijfMU274qwDzRL+Stx5u0i4g82WmkagSpiGmTwcSyyB1cFecMTu9BIzIeaChoACF&#xA;WeW3mm4hhEv1qx16zG31rT54o5vphkkMTU/aZZgfBMVWeW/zS8m+YteutC027Y6jaqzGGZGhZxGw&#xA;SXij8ZB6bsFPNVr+zUVOKsrkkjijaSRgkaAs7sQFVQKkknoBiq22ura6hSe2lSaFwGSSNgykEVBB&#xA;GKr2ZVFWIAqBU7bk0A+/FUm87/8AKF6//wBs27/5MPiqdYql+v3l5ZaPc3NmnO4jUcKo0oUFgGkM&#xA;aFWcRqS/FTVqUGKsbk81a96Gm+mg9WWWVJz9UuCJwlzHFAFFR6P1iBzKC1eNPAHFVn5Vy3Jstdja&#xA;DjAvmDWzHPyB5E6lPUceopirMoLuCeW4ijbk9rIIpxQijmNZQN+vwSKdsVVcVdiqldXcFrEss7cU&#xA;aSOIGhPxzSLEg28XcDFVXFXYq7FVG2u4Ln1fSNfRkaGTYijr1G/zxVWxV2KqM93BBLbxSGj3Uhhh&#xA;FCauI3lI9vgjbFVbFXUFa9/HFXYqoWdxazws9tT0xLLG1Bx/eRyskmxA/wB2K2/fFVmp6Xp2qWUl&#xA;jqNtHd2ktPUhlUMpoag0PQgioPUHcYqiIYYoYkhhRY4o1CRxoAqqqigVQNgAMVSrVtG8s32radca&#xA;nYwXWpQep+jZpohI8e1ZODEHjUUr44q648neUbiVpbjQ9Pmlb7UklrCzH5kqTirG/wDlRf5T/pG9&#xA;1AeXLdbi/Km4CNIkfwig4Ro6pGPHiBU4qh9W/I7yZPp9zb6QJ9GuZonjjnhledELLQH0bkzRin+Q&#xA;FPvirHPy7/JrXdG8q2dvY+bri3tZa3EEcCu1IpRyRTKDaNJseXxRilaYqpfmN+VP5i6lo1naab5g&#xA;mu2iuopJZxJciZVU9VhlujC58SWG30nFXpHmaK4h/LvVorjiLiPSLhZhGzOnNbZg3Fn+MivQtv44&#xA;qyPFXYq7FWOXX5bfl1d3U13d+VtIuLq4dpbi4lsLV5JJHJZ3d2jLMzMaknriqRaP5N/K/UdQvbT/&#xA;AARosP1Yt6cn1GzcuqXE1sxYCL4D6ls1ASaqR35BVU4/5VZ+WP8A1KGif9w60/6p4q7/AJVZ+WP/&#xA;AFKGif8AcOtP+qeKsa1Ty9+WVj9dB8g6MxsriWJg9nYpzigs1vZJVpG+/FuKodyevEVoqjdA8m/l&#xA;hq0kyHyRosBSOK5h/wBBs3529w0ixM1Il4OfRbkm/HbfwVTj/lVn5Y/9Shon/cOtP+qeKpZ5h8if&#xA;ltpNlHcxeR9Eu2eVYhALG0R2LA0EY9FubsQFVdutSQoJCqRRaZ+WTTxRH8v9EX1oEv1b6pZH/QZZ&#xA;ViWSgh/vavUx9Kft4qzD/lVn5Y/9Shon/cOtP+qeKu/5VZ+WP/UoaJ/3DrT/AKp4qxOXRfy1i1Wb&#xA;TpfIGiCSBw7OLS1o1ozQotxHyt151a548R3Rt+nJVNfLHkz8sdcsHuj5I0W2KtH+7+o2cnwzW8Vy&#xA;h5CJd+E6hh41pUUJVTf/AJVZ+WP/AFKGif8AcOtP+qeKpH5m8s/lB5ffT0uvJ+iF9QuEgT/QLNAq&#xA;s6o8hLR78TIvwrVjXpSpCqWabpf5Y3jwg+QNEiV3txOfqlk3BL0W5gZaQ/Ga3ihxtShoW2qqy/8A&#xA;5VZ+WP8A1KGif9w60/6p4q4/lb+V6gk+UdEAG5J060oB/wAi8VYOYvytisprq7/L3SITYIkmqwfU&#xA;bX1bcTlBCqrJBEJHb1VLcTRQftE7YqynR/y+/La/hm9fyTodvc20rQXESWNpKgYKrgpJ6KcgUdew&#xA;oajtiqP/AOVWflj/ANShon/cOtP+qeKsa81aH+U3l25ijuPJGkSxGCS4mmXTbcKioyxovIQNGGkd&#xA;wqh3SvYk7Yq1ZeX/AMs5tYTSpvIehxTJKtvdulpZyKksizvGI/3CmRStseRoONemzcVWT/8AKrPy&#xA;x/6lDRP+4daf9U8Va/5VZ+WP/UoaJ/3DrT/qnirKMVdirsVdiqHttO0+2mnntraKCe6YPcyxoqPK&#xA;wrRpGUAsd++KojFXYqhbrSdLu143dnBcL6qz0ljRx6qKFWT4gfjCigbrTFV1np2n2RmNnaw2xuJD&#xA;NcGGNY/UkbdnfiByY9yd8VRGKoW+0rS9QEQv7OC7ED+pB68aS8HoV5JzB4niSKjFVBfLnl5XDrpd&#xA;oHW4+uKwgiBFyf8Ad4PH+8/y+uKpjirsVS1PLXlyNkdNKs0aOf61Gy28QK3FKespC7SUH2uuKoqw&#xA;03TtPhMNhaw2kLMXaKCNYlLnqxVABU064qiMVQY1HRru+n0sXNvcX9oI5rmxDo80QJDxO8VSyVIq&#xA;pI+WKqcHl3y/A0DQaZaRNbO8tsyQRqY3koHdKL8LNxFSOuKphiriARQ7g9RiqXQ+W/LsPo+jpdnH&#xA;9WLm34QRL6ZkADlKL8PIAA064qirGwsbC2W1sbaK0tUqUggRY41LEs1FUACpNTiqviqGutL0y7nh&#xA;nu7SG4ntuX1eWWNHePmOL8GYEryGxp1xVRtfL+g2kkEtrptrbyWqsls8UEaNErklljKqOIYsa061&#xA;xVH4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq8s82eSvMFn5m8w+aPKWmRNq76ZafomZnQVvmuLlL5&#xA;0SRuHq/VJEpzHBm41rviqS2dx/zkRHfWk15NILCKSFrqKS301S8EZsFnaQxNLxLLPdvxR6gx7bbY&#xA;qlWg+Yf+cjdV0TRtRskludPvIBcR3jw6ak8xks4X/fRu8SrB67S+i6AOVA5g1FVU91ux/PlpotNS&#xA;+ubi0ubGZrm/s4tNgKTS29w3pM0h5o8Vx6EaGMUMfJi3PcKr4V/Pw3tpo6yTW9nFSO61yRNOmJjc&#xA;2iiQCtXkjX6yWqgBP822Kphpb/nOtp51h1ctLcRWdynlqeOO1SF50SQW8kJhdpyZQUZlkT4WBod+&#xA;IVSpPy2tLLRtP17ywmo6naagIRqOlRywxXB0+dUkuoopJDbPzmngg9YTTVCB1WlaYqyv8ubKSx1z&#xA;X7S1tZLHR4YdNCWTyvOkN/6D/W4o5WLBwkX1dWKmnKuKs8xV2KuxV2KuxV2KuxV2KuxV/9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:746ECD178545DE11A608C15EDB81CD06</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:756ECD178545DE11A608C15EDB81CD06</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource"/>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ComicSansMS</stFnt:fontName>
                  <stFnt:fontFamily>Comic Sans MS</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.00x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Comic Sans MS.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>White</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>255</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Black</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Gray</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>153</xapG:red>
                           <xapG:green>153</xapG:green>
                           <xapG:blue>153</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Light Gray</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>204</xapG:red>
                           <xapG:green>204</xapG:green>
                           <xapG:blue>204</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Bright Blue</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>255</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Light Blue</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>153</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>255</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Pale Blue</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>204</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>255</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Violet</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>255</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Light Violet</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>102</xapG:green>
                           <xapG:blue>255</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Pale Violet</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>204</xapG:green>
                           <xapG:blue>255</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Yellow</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Light Yellow</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>102</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Pale Yellow</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>153</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Brown</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>153</xapG:red>
                           <xapG:green>51</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Light Brown</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>204</xapG:red>
                           <xapG:green>102</xapG:green>
                           <xapG:blue>53</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Pale Brown</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>151</xapG:green>
                           <xapG:blue>102</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Blue</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>255</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Faded Blue</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>102</xapG:red>
                           <xapG:green>102</xapG:green>
                           <xapG:blue>255</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Faded Pale Blue</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>204</xapG:red>
                           <xapG:green>204</xapG:green>
                           <xapG:blue>255</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Red</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Light Red</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>102</xapG:green>
                           <xapG:blue>102</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Mauve</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>153</xapG:green>
                           <xapG:blue>153</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Forest Green</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>153</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Green</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>51</xapG:red>
                           <xapG:green>204</xapG:green>
                           <xapG:blue>51</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Pale Green</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>153</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>102</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Bright Green</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Light Bright Green</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>102</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>102</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Pale Light Green</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>151</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>153</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Purple</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>153</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>204</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Periwinkle</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>153</xapG:red>
                           <xapG:green>102</xapG:green>
                           <xapG:blue>204</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Lavender</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>204</xapG:red>
                           <xapG:green>153</xapG:green>
                           <xapG:blue>204</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Orange</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>153</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Pale Orange</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>204</xapG:green>
                           <xapG:blue>102</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Light Pale Orange</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>153</xapG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -465.275 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 465.275 li
407.519 465.275 li
407.519 0 li
cp
clp
[1 0 0 1 0 0 ]ct
0.75 lw
1 lc
2 lj
10 ml
[] 0 dsh
true sadj
46.5674 8.94287 mo
406.568 8.94287 li
406.568 188.943 li
46.5674 188.943 li
46.5674 8.94287 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0.74902 0.678431 0.670588 0.901961 cmyk
@
46.5674 8.3667 mo
407.144 8.3667 li
407.144 188.367 li
47.1436 188.367 li
47.1436 8.3667 li
@
46.5674 188.943 mo
62.9111 188.943 li
62.9111 184.191 li
@
57.4395 196.143 mo
56.3594 196.431 li
55.7114 197.511 li
55.3516 199.167 li
55.3516 200.247 li
55.7114 201.903 li
56.3594 202.983 li
57.4395 203.343 li
58.0874 203.343 li
59.0952 202.983 li
59.8154 201.903 li
60.1753 200.247 li
60.1753 199.167 li
59.8154 197.511 li
59.0952 196.431 li
58.0874 196.143 li
57.4395 196.143 li
@
62.9111 202.623 mo
62.5513 202.983 li
62.9111 203.343 li
63.2715 202.983 li
62.9111 202.623 li
@
67.6636 196.143 mo
66.6553 196.431 li
66.0073 197.511 li
65.6475 199.167 li
65.6475 200.247 li
66.0073 201.903 li
66.6553 202.983 li
67.6636 203.343 li
68.3833 203.343 li
69.3916 202.983 li
70.1113 201.903 li
70.4712 200.247 li
70.4712 199.167 li
70.1113 197.511 li
69.3916 196.431 li
68.3833 196.143 li
67.6636 196.143 li
@
62.9111 188.943 mo
144.703 188.943 li
144.703 184.191 li
@
139.231 196.143 mo
138.223 196.431 li
137.503 197.511 li
137.144 199.167 li
137.144 200.247 li
137.503 201.903 li
138.223 202.983 li
139.231 203.343 li
139.879 203.343 li
140.959 202.983 li
141.607 201.903 li
141.967 200.247 li
141.967 199.167 li
141.607 197.511 li
140.959 196.431 li
139.879 196.143 li
139.231 196.143 li
@
144.703 202.623 mo
144.343 202.983 li
144.703 203.343 li
145.063 202.983 li
144.703 202.623 li
@
151.543 196.143 mo
148.159 196.143 li
147.799 199.167 li
148.159 198.879 li
149.167 198.519 li
150.175 198.519 li
151.255 198.879 li
151.903 199.527 li
152.263 200.535 li
152.263 201.255 li
151.903 202.263 li
151.255 202.983 li
150.175 203.343 li
149.167 203.343 li
148.159 202.983 li
147.799 202.623 li
147.439 201.903 li
@
144.703 188.943 mo
226.568 188.943 li
226.568 184.191 li
@
220.015 197.511 mo
220.736 197.151 li
221.744 196.143 li
221.744 203.343 li
@
226.568 202.623 mo
226.207 202.983 li
226.568 203.343 li
226.855 202.983 li
226.568 202.623 li
@
231.32 196.143 mo
230.312 196.431 li
229.591 197.511 li
229.304 199.167 li
229.304 200.247 li
229.591 201.903 li
230.312 202.983 li
231.32 203.343 li
232.039 203.343 li
233.048 202.983 li
233.767 201.903 li
234.056 200.247 li
234.056 199.167 li
233.767 197.511 li
233.048 196.431 li
232.039 196.143 li
231.32 196.143 li
@
226.568 188.943 mo
308.359 188.943 li
308.359 184.191 li
@
301.808 197.511 mo
302.527 197.151 li
303.535 196.143 li
303.535 203.343 li
@
308.359 202.623 mo
308 202.983 li
308.359 203.343 li
308.72 202.983 li
308.359 202.623 li
@
315.199 196.143 mo
311.744 196.143 li
311.455 199.167 li
311.744 198.879 li
312.824 198.519 li
313.832 198.519 li
314.839 198.879 li
315.56 199.527 li
315.919 200.535 li
315.919 201.255 li
315.56 202.263 li
314.839 202.983 li
313.832 203.343 li
312.824 203.343 li
311.744 202.983 li
311.455 202.623 li
311.095 201.903 li
@
308.359 188.943 mo
390.152 188.943 li
390.152 184.191 li
@
382.951 197.799 mo
382.951 197.511 li
383.312 196.791 li
383.671 196.431 li
384.32 196.143 li
385.687 196.143 li
386.408 196.431 li
386.767 196.791 li
387.056 197.511 li
387.056 198.159 li
386.767 198.879 li
386.048 199.887 li
382.591 203.343 li
387.416 203.343 li
@
390.152 202.623 mo
389.791 202.983 li
390.152 203.343 li
390.511 202.983 li
390.152 202.623 li
@
394.976 196.143 mo
393.968 196.431 li
393.248 197.511 li
392.888 199.167 li
392.888 200.247 li
393.248 201.903 li
393.968 202.983 li
394.976 203.343 li
395.623 203.343 li
396.703 202.983 li
397.351 201.903 li
397.71 200.247 li
397.71 199.167 li
397.351 197.511 li
396.703 196.431 li
395.623 196.143 li
394.976 196.143 li
@
390.152 188.943 mo
406.568 188.943 li
406.568 188.367 li
46.5674 188.367 li
@
46.5674 188.943 mo
46.5674 180.807 li
51.3193 180.807 li
@
28.9272 177.207 mo
27.9194 177.567 li
27.1992 178.575 li
26.9111 180.303 li
26.9111 181.311 li
27.1992 183.039 li
27.9194 184.047 li
28.9272 184.407 li
29.6475 184.407 li
30.6553 184.047 li
31.3755 183.039 li
31.6636 181.311 li
31.6636 180.303 li
31.3755 178.575 li
30.6553 177.567 li
29.6475 177.207 li
28.9272 177.207 li
@
34.3994 183.687 mo
34.1113 184.047 li
34.3994 184.407 li
34.7593 184.047 li
34.3994 183.687 li
@
39.2231 177.207 mo
38.2153 177.567 li
37.4951 178.575 li
37.2075 180.303 li
37.2075 181.311 li
37.4951 183.039 li
38.2153 184.047 li
39.2231 184.407 li
39.9434 184.407 li
40.9512 184.047 li
41.5996 183.039 li
41.9595 181.311 li
41.9595 180.303 li
41.5996 178.575 li
40.9512 177.567 li
39.9434 177.207 li
39.2231 177.207 li
@
46.5674 180.807 mo
46.5674 150.639 li
51.3193 150.639 li
@
28.9272 147.039 mo
27.9194 147.327 li
27.1992 148.407 li
26.9111 150.063 li
26.9111 151.143 li
27.1992 152.799 li
27.9194 153.879 li
28.9272 154.239 li
29.6475 154.239 li
30.6553 153.879 li
31.3755 152.799 li
31.6636 151.143 li
31.6636 150.063 li
31.3755 148.407 li
30.6553 147.327 li
29.6475 147.039 li
28.9272 147.039 li
@
34.3994 153.519 mo
34.1113 153.879 li
34.3994 154.239 li
34.7593 153.879 li
34.3994 153.519 li
@
41.3115 147.039 mo
37.8555 147.039 li
37.4951 150.063 li
37.8555 149.775 li
38.8633 149.415 li
39.9434 149.415 li
40.9512 149.775 li
41.5996 150.423 li
41.9595 151.431 li
41.9595 152.151 li
41.5996 153.159 li
40.9512 153.879 li
39.9434 154.239 li
38.8633 154.239 li
37.8555 153.879 li
37.4951 153.519 li
37.2075 152.799 li
@
46.5674 150.639 mo
46.5674 120.399 li
51.3193 120.399 li
@
27.9194 118.167 mo
28.5674 117.879 li
29.6475 116.799 li
29.6475 123.999 li
@
34.3994 123.351 mo
34.1113 123.639 li
34.3994 123.999 li
34.7593 123.639 li
34.3994 123.351 li
@
39.2231 116.799 mo
38.2153 117.159 li
37.4951 118.167 li
37.2075 119.895 li
37.2075 120.903 li
37.4951 122.631 li
38.2153 123.639 li
39.2231 123.999 li
39.9434 123.999 li
40.9512 123.639 li
41.5996 122.631 li
41.9595 120.903 li
41.9595 119.895 li
41.5996 118.167 li
40.9512 117.159 li
39.9434 116.799 li
39.2231 116.799 li
@
46.5674 120.399 mo
46.5674 90.231 li
51.3193 90.231 li
@
27.9194 87.999 mo
28.5674 87.6392 li
29.6475 86.6309 li
29.6475 93.8311 li
@
34.3994 93.1108 mo
34.1113 93.4707 li
34.3994 93.8311 li
34.7593 93.4707 li
34.3994 93.1108 li
@
41.3115 86.6309 mo
37.8555 86.6309 li
37.4951 89.7271 li
37.8555 89.3667 li
38.8633 89.0068 li
39.9434 89.0068 li
40.9512 89.3667 li
41.5996 90.0869 li
41.9595 91.0947 li
41.9595 91.7427 li
41.5996 92.8228 li
40.9512 93.4707 li
39.9434 93.8311 li
38.8633 93.8311 li
37.8555 93.4707 li
37.4951 93.1108 li
37.2075 92.4629 li
@
46.5674 90.231 mo
46.5674 60.063 li
51.3193 60.063 li
@
27.1992 58.1187 mo
27.1992 57.8311 li
27.5596 57.1108 li
27.9194 56.751 li
28.5674 56.4629 li
30.0073 56.4629 li
30.6553 56.751 li
31.0151 57.1108 li
31.3755 57.8311 li
31.3755 58.479 li
31.0151 59.1987 li
30.2954 60.207 li
26.9111 63.6631 li
31.6636 63.6631 li
@
34.3994 62.9429 mo
34.1113 63.3027 li
34.3994 63.6631 li
34.7593 63.3027 li
34.3994 62.9429 li
@
39.2231 56.4629 mo
38.2153 56.751 li
37.4951 57.8311 li
37.2075 59.4868 li
37.2075 60.5669 li
37.4951 62.2949 li
38.2153 63.3027 li
39.2231 63.6631 li
39.9434 63.6631 li
40.9512 63.3027 li
41.5996 62.2949 li
41.9595 60.5669 li
41.9595 59.4868 li
41.5996 57.8311 li
40.9512 56.751 li
39.9434 56.4629 li
39.2231 56.4629 li
@
46.5674 60.063 mo
46.5674 29.8228 li
51.3193 29.8228 li
@
27.1992 27.9507 mo
27.1992 27.5908 li
27.5596 26.9429 li
27.9194 26.583 li
28.5674 26.2231 li
30.0073 26.2231 li
30.6553 26.583 li
31.0151 26.9429 li
31.3755 27.5908 li
31.3755 28.311 li
31.0151 28.959 li
30.2954 30.0391 li
26.9111 33.4229 li
31.6636 33.4229 li
@
34.3994 32.7749 mo
34.1113 33.063 li
34.3994 33.4229 li
34.7593 33.063 li
34.3994 32.7749 li
@
41.3115 26.2231 mo
37.8555 26.2231 li
37.4951 29.3188 li
37.8555 28.959 li
38.8633 28.6709 li
39.9434 28.6709 li
40.9512 28.959 li
41.5996 29.6787 li
41.9595 30.687 li
41.9595 31.4067 li
41.5996 32.415 li
40.9512 33.063 li
39.9434 33.4229 li
38.8633 33.4229 li
37.8555 33.063 li
37.4951 32.7749 li
37.2075 32.0547 li
@
46.5674 29.8228 mo
46.5674 8.94287 li
45.9912 8.94287 li
45.9912 188.943 li
@
62.5513 182.175 mo
61.8315 181.815 li
61.5435 181.167 li
61.5435 180.447 li
61.8315 179.799 li
62.5513 179.439 li
63.2715 179.439 li
63.9194 179.799 li
64.2793 180.447 li
64.2793 181.167 li
63.9194 181.815 li
63.2715 182.175 li
62.5513 182.175 li
@
64.2075 155.319 mo
63.4873 154.959 li
63.1274 154.239 li
63.1274 153.591 li
63.4873 152.871 li
64.2075 152.583 li
64.8555 152.583 li
65.5752 152.871 li
65.9355 153.591 li
65.9355 154.239 li
65.5752 154.959 li
64.8555 155.319 li
64.2075 155.319 li
@
65.7915 128.607 mo
65.1436 128.247 li
64.7832 127.599 li
64.7832 126.879 li
65.1436 126.231 li
65.7915 125.871 li
66.5112 125.871 li
67.2314 126.231 li
67.5195 126.879 li
67.5195 127.599 li
67.2314 128.247 li
66.5112 128.607 li
65.7915 128.607 li
@
67.4473 104.847 mo
66.7993 104.559 li
66.4395 103.839 li
66.4395 103.191 li
66.7993 102.471 li
67.4473 102.111 li
68.1675 102.111 li
68.8154 102.471 li
69.1753 103.191 li
69.1753 103.839 li
68.8154 104.559 li
68.1675 104.847 li
67.4473 104.847 li
@
69.1035 88.5747 mo
68.3833 88.2148 li
68.0952 87.5669 li
68.0952 86.8472 li
68.3833 86.1987 li
69.1035 85.8389 li
69.7515 85.8389 li
70.4712 86.1987 li
70.8315 86.8472 li
70.8315 87.5669 li
70.4712 88.2148 li
69.7515 88.5747 li
69.1035 88.5747 li
@
72.3433 65.6069 mo
71.6953 65.3188 li
71.3354 64.5991 li
71.3354 63.9507 li
71.6953 63.231 li
72.3433 62.8706 li
73.0635 62.8706 li
73.7114 63.231 li
74.0713 63.9507 li
74.0713 64.5991 li
73.7114 65.3188 li
73.0635 65.6069 li
72.3433 65.6069 li
@
75.6553 55.959 mo
74.9355 55.5991 li
74.6475 54.9507 li
74.6475 54.231 li
74.9355 53.583 li
75.6553 53.2231 li
76.3032 53.2231 li
77.0234 53.583 li
77.3833 54.231 li
77.3833 54.9507 li
77.0234 55.5991 li
76.3032 55.959 li
75.6553 55.959 li
@
78.8955 51.7109 mo
78.2476 51.4229 li
77.8872 50.7026 li
77.8872 50.0547 li
78.2476 49.335 li
78.8955 48.9751 li
79.6152 48.9751 li
80.2632 49.335 li
80.6235 50.0547 li
80.6235 50.7026 li
80.2632 51.4229 li
79.6152 51.7109 li
78.8955 51.7109 li
@
85.4473 47.5347 mo
84.7993 47.1748 li
84.4395 46.4551 li
84.4395 45.8071 li
84.7993 45.0869 li
85.4473 44.7988 li
86.1675 44.7988 li
86.8154 45.0869 li
87.1753 45.8071 li
87.1753 46.4551 li
86.8154 47.1748 li
86.1675 47.5347 li
85.4473 47.5347 li
@
95.3115 42.7109 mo
94.5913 42.3511 li
94.2314 41.6309 li
94.2314 40.9829 li
94.5913 40.2627 li
95.3115 39.9751 li
95.9595 39.9751 li
96.6792 40.2627 li
96.9673 40.9829 li
96.9673 41.6309 li
96.6792 42.3511 li
95.9595 42.7109 li
95.3115 42.7109 li
@
111.655 37.2388 mo
110.936 36.8789 li
110.647 36.231 li
110.647 35.5107 li
110.936 34.8628 li
111.655 34.5029 li
112.303 34.5029 li
113.023 34.8628 li
113.383 35.5107 li
113.383 36.231 li
113.023 36.8789 li
112.303 37.2388 li
111.655 37.2388 li
@
160.759 27.0151 mo
160.04 26.6548 li
159.679 25.9351 li
159.679 25.2866 li
160.04 24.5669 li
160.759 24.207 li
161.407 24.207 li
162.127 24.5669 li
162.416 25.2866 li
162.416 25.9351 li
162.127 26.6548 li
161.407 27.0151 li
160.759 27.0151 li
@
389.791 18.519 mo
389.144 18.1587 li
388.783 17.5107 li
388.783 16.791 li
389.144 16.1431 li
389.791 15.7827 li
390.511 15.7827 li
391.232 16.1431 li
391.519 16.791 li
391.519 17.5107 li
391.232 18.1587 li
390.511 18.519 li
389.791 18.519 li
@
62.9111 180.807 mo
64.5674 153.951 li
66.1514 127.239 li
67.8071 103.479 li
69.4634 87.207 li
72.7031 64.2388 li
76.0151 54.5908 li
79.2554 50.3428 li
85.8076 46.167 li
95.5996 41.3428 li
112.015 35.8706 li
161.047 25.647 li
390.152 17.1509 li
@
15.7515 4.19092 mo
15.7515 8.94287 li
@
15.7515 5.19873 mo
15.0313 4.55078 li
14.3833 4.19092 li
13.3755 4.19092 li
12.6553 4.55078 li
12.0073 5.19873 li
11.6475 6.20703 li
11.6475 6.92676 li
12.0073 7.93506 li
12.6553 8.65479 li
13.3755 8.94287 li
14.3833 8.94287 li
15.0313 8.65479 li
15.7515 7.93506 li
@
18.1274 0.375 mo
18.8472 1.09473 li
19.4951 2.10303 li
20.2153 3.4707 li
20.5752 5.19873 li
20.5752 6.56689 li
20.2153 8.29492 li
19.4951 9.66309 li
18.8472 10.6709 li
18.1274 11.3911 li
@
46.5674 242.943 mo
406.568 242.943 li
406.568 422.943 li
46.5674 422.943 li
46.5674 242.943 li
@
46.5674 242.367 mo
407.144 242.367 li
407.144 422.367 li
47.1436 422.367 li
47.1436 242.367 li
@
46.5674 422.943 mo
62.9111 422.943 li
62.9111 418.191 li
@
62.5513 430.143 mo
61.5435 430.431 li
60.8232 431.511 li
60.4634 433.167 li
60.4634 434.247 li
60.8232 435.903 li
61.5435 436.983 li
62.5513 437.343 li
63.2715 437.343 li
64.2793 436.983 li
64.9272 435.903 li
65.2876 434.247 li
65.2876 433.167 li
64.9272 431.511 li
64.2793 430.431 li
63.2715 430.143 li
62.5513 430.143 li
@
62.9111 422.943 mo
113.239 422.943 li
113.239 418.191 li
@
105.031 431.511 mo
105.679 431.151 li
106.759 430.143 li
106.759 437.343 li
@
112.879 430.143 mo
111.872 430.431 li
111.223 431.511 li
110.863 433.167 li
110.863 434.247 li
111.223 435.903 li
111.872 436.983 li
112.879 437.343 li
113.6 437.343 li
114.607 436.983 li
115.327 435.903 li
115.615 434.247 li
115.615 433.167 li
115.327 431.511 li
114.607 430.431 li
113.6 430.143 li
112.879 430.143 li
@
119.792 430.143 mo
118.711 430.431 li
118.063 431.511 li
117.703 433.167 li
117.703 434.247 li
118.063 435.903 li
118.711 436.983 li
119.792 437.343 li
120.439 437.343 li
121.447 436.983 li
122.167 435.903 li
122.527 434.247 li
122.527 433.167 li
122.167 431.511 li
121.447 430.431 li
120.439 430.143 li
119.792 430.143 li
@
113.239 422.943 mo
163.567 422.943 li
163.567 418.191 li
@
154.711 431.799 mo
154.711 431.511 li
155 430.791 li
155.359 430.431 li
156.079 430.143 li
157.447 430.143 li
158.095 430.431 li
158.456 430.791 li
158.815 431.511 li
158.815 432.159 li
158.456 432.878 li
157.735 433.887 li
154.352 437.343 li
159.104 437.343 li
@
163.279 430.143 mo
162.199 430.431 li
161.551 431.511 li
161.191 433.167 li
161.191 434.247 li
161.551 435.903 li
162.199 436.983 li
163.279 437.343 li
163.927 437.343 li
164.936 436.983 li
165.655 435.903 li
166.015 434.247 li
166.015 433.167 li
165.655 431.511 li
164.936 430.431 li
163.927 430.143 li
163.279 430.143 li
@
170.119 430.143 mo
169.111 430.431 li
168.392 431.511 li
168.031 433.167 li
168.031 434.247 li
168.392 435.903 li
169.111 436.983 li
170.119 437.343 li
170.768 437.343 li
171.847 436.983 li
172.495 435.903 li
172.855 434.247 li
172.855 433.167 li
172.495 431.511 li
171.847 430.431 li
170.768 430.143 li
170.119 430.143 li
@
163.567 422.943 mo
213.968 422.943 li
213.968 418.191 li
@
205.399 430.143 mo
209.144 430.143 li
207.056 432.878 li
208.136 432.878 li
208.783 433.167 li
209.144 433.527 li
209.503 434.535 li
209.503 435.255 li
209.144 436.263 li
208.424 436.983 li
207.415 437.343 li
206.407 437.343 li
205.399 436.983 li
205.039 436.623 li
204.68 435.903 li
@
213.607 430.143 mo
212.599 430.431 li
211.878 431.511 li
211.519 433.167 li
211.519 434.247 li
211.878 435.903 li
212.599 436.983 li
213.607 437.343 li
214.255 437.343 li
215.335 436.983 li
215.984 435.903 li
216.343 434.247 li
216.343 433.167 li
215.984 431.511 li
215.335 430.431 li
214.255 430.143 li
213.607 430.143 li
@
220.447 430.143 mo
219.439 430.431 li
218.72 431.511 li
218.431 433.167 li
218.431 434.247 li
218.72 435.903 li
219.439 436.983 li
220.447 437.343 li
221.167 437.343 li
222.175 436.983 li
222.824 435.903 li
223.183 434.247 li
223.183 433.167 li
222.824 431.511 li
222.175 430.431 li
221.167 430.143 li
220.447 430.143 li
@
213.968 422.943 mo
264.294 422.943 li
264.294 418.191 li
@
258.462 430.143 mo
255.007 434.895 li
260.191 434.895 li
@
258.462 430.143 mo
258.462 437.343 li
@
263.935 430.143 mo
262.927 430.431 li
262.207 431.511 li
261.919 433.167 li
261.919 434.247 li
262.207 435.903 li
262.927 436.983 li
263.935 437.343 li
264.656 437.343 li
265.664 436.983 li
266.384 435.903 li
266.671 434.247 li
266.671 433.167 li
266.384 431.511 li
265.664 430.431 li
264.656 430.143 li
263.935 430.143 li
@
270.775 430.143 mo
269.767 430.431 li
269.119 431.511 li
268.759 433.167 li
268.759 434.247 li
269.119 435.903 li
269.767 436.983 li
270.775 437.343 li
271.496 437.343 li
272.503 436.983 li
273.224 435.903 li
273.583 434.247 li
273.583 433.167 li
273.224 431.511 li
272.503 430.431 li
271.496 430.143 li
270.775 430.143 li
@
264.294 422.943 mo
314.623 422.943 li
314.623 418.191 li
@
309.511 430.143 mo
306.056 430.143 li
305.695 433.167 li
306.056 432.878 li
307.136 432.519 li
308.144 432.519 li
309.152 432.878 li
309.871 433.527 li
310.16 434.535 li
310.16 435.255 li
309.871 436.263 li
309.152 436.983 li
308.144 437.343 li
307.136 437.343 li
306.056 436.983 li
305.695 436.623 li
305.408 435.903 li
@
314.335 430.143 mo
313.255 430.431 li
312.607 431.511 li
312.248 433.167 li
312.248 434.247 li
312.607 435.903 li
313.255 436.983 li
314.335 437.343 li
314.984 437.343 li
315.992 436.983 li
316.71 435.903 li
317.072 434.247 li
317.072 433.167 li
316.71 431.511 li
315.992 430.431 li
314.984 430.143 li
314.335 430.143 li
@
321.175 430.143 mo
320.095 430.431 li
319.447 431.511 li
319.087 433.167 li
319.087 434.247 li
319.447 435.903 li
320.095 436.983 li
321.175 437.343 li
321.824 437.343 li
322.904 436.983 li
323.552 435.903 li
323.912 434.247 li
323.912 433.167 li
323.552 431.511 li
322.904 430.431 li
321.824 430.143 li
321.175 430.143 li
@
314.623 422.943 mo
365.023 422.943 li
365.023 418.191 li
@
360.199 431.151 mo
359.839 430.431 li
358.832 430.143 li
358.111 430.143 li
357.103 430.431 li
356.455 431.511 li
356.095 433.167 li
356.095 434.895 li
356.455 436.263 li
357.103 436.983 li
358.111 437.343 li
358.472 437.343 li
359.48 436.983 li
360.199 436.263 li
360.56 435.255 li
360.56 434.895 li
360.199 433.887 li
359.48 433.167 li
358.472 432.878 li
358.111 432.878 li
357.103 433.167 li
356.455 433.887 li
356.095 434.895 li
@
364.664 430.143 mo
363.656 430.431 li
362.935 431.511 li
362.576 433.167 li
362.576 434.247 li
362.935 435.903 li
363.656 436.983 li
364.664 437.343 li
365.312 437.343 li
366.392 436.983 li
367.039 435.903 li
367.4 434.247 li
367.4 433.167 li
367.039 431.511 li
366.392 430.431 li
365.312 430.143 li
364.664 430.143 li
@
371.503 430.143 mo
370.496 430.431 li
369.775 431.511 li
369.416 433.167 li
369.416 434.247 li
369.775 435.903 li
370.496 436.983 li
371.503 437.343 li
372.224 437.343 li
373.232 436.983 li
373.878 435.903 li
374.24 434.247 li
374.24 433.167 li
373.878 431.511 li
373.232 430.431 li
372.224 430.143 li
371.503 430.143 li
@
365.023 422.943 mo
406.568 422.943 li
406.568 422.367 li
46.5674 422.367 li
@
46.5674 422.943 mo
46.5674 416.319 li
51.3193 416.319 li
@
28.9272 412.719 mo
27.9194 413.079 li
27.1992 414.086 li
26.9111 415.815 li
26.9111 416.823 li
27.1992 418.551 li
27.9194 419.63 li
28.9272 419.918 li
29.6475 419.918 li
30.6553 419.63 li
31.3755 418.551 li
31.6636 416.823 li
31.6636 415.815 li
31.3755 414.086 li
30.6553 413.079 li
29.6475 412.719 li
28.9272 412.719 li
@
34.3994 419.271 mo
34.1113 419.63 li
34.3994 419.918 li
34.7593 419.63 li
34.3994 419.271 li
@
39.2231 412.719 mo
38.2153 413.079 li
37.4951 414.086 li
37.2075 415.815 li
37.2075 416.823 li
37.4951 418.551 li
38.2153 419.63 li
39.2231 419.918 li
39.9434 419.918 li
40.9512 419.63 li
41.5996 418.551 li
41.9595 416.823 li
41.9595 415.815 li
41.5996 414.086 li
40.9512 413.079 li
39.9434 412.719 li
39.2231 412.719 li
@
46.5674 416.319 mo
46.5674 379.023 li
51.3193 379.023 li
@
28.9272 375.423 mo
27.9194 375.783 li
27.1992 376.791 li
26.9111 378.519 li
26.9111 379.527 li
27.1992 381.255 li
27.9194 382.263 li
28.9272 382.623 li
29.6475 382.623 li
30.6553 382.263 li
31.3755 381.255 li
31.6636 379.527 li
31.6636 378.519 li
31.3755 376.791 li
30.6553 375.783 li
29.6475 375.423 li
28.9272 375.423 li
@
34.3994 381.903 mo
34.1113 382.263 li
34.3994 382.623 li
34.7593 382.263 li
34.3994 381.903 li
@
41.3115 375.423 mo
37.8555 375.423 li
37.4951 378.519 li
37.8555 378.159 li
38.8633 377.799 li
39.9434 377.799 li
40.9512 378.159 li
41.5996 378.807 li
41.9595 379.887 li
41.9595 380.535 li
41.5996 381.542 li
40.9512 382.263 li
39.9434 382.623 li
38.8633 382.623 li
37.8555 382.263 li
37.4951 381.903 li
37.2075 381.255 li
@
46.5674 379.023 mo
46.5674 341.655 li
51.3193 341.655 li
@
27.9194 339.423 mo
28.5674 339.135 li
29.6475 338.055 li
29.6475 345.255 li
@
34.3994 344.607 mo
34.1113 344.895 li
34.3994 345.255 li
34.7593 344.895 li
34.3994 344.607 li
@
39.2231 338.055 mo
38.2153 338.415 li
37.4951 339.423 li
37.2075 341.151 li
37.2075 342.159 li
37.4951 343.887 li
38.2153 344.895 li
39.2231 345.255 li
39.9434 345.255 li
40.9512 344.895 li
41.5996 343.887 li
41.9595 342.159 li
41.9595 341.151 li
41.5996 339.423 li
40.9512 338.415 li
39.9434 338.055 li
39.2231 338.055 li
@
46.5674 341.655 mo
46.5674 304.359 li
51.3193 304.359 li
@
27.9194 302.126 mo
28.5674 301.767 li
29.6475 300.759 li
29.6475 307.958 li
@
34.3994 307.239 mo
34.1113 307.599 li
34.3994 307.958 li
34.7593 307.599 li
34.3994 307.239 li
@
41.3115 300.759 mo
37.8555 300.759 li
37.4951 303.855 li
37.8555 303.495 li
38.8633 303.135 li
39.9434 303.135 li
40.9512 303.495 li
41.5996 304.143 li
41.9595 305.223 li
41.9595 305.871 li
41.5996 306.878 li
40.9512 307.599 li
39.9434 307.958 li
38.8633 307.958 li
37.8555 307.599 li
37.4951 307.239 li
37.2075 306.591 li
@
46.5674 304.359 mo
46.5674 266.991 li
51.3193 266.991 li
@
27.1992 265.119 mo
27.1992 264.759 li
27.5596 264.111 li
27.9194 263.75 li
28.5674 263.391 li
30.0073 263.391 li
30.6553 263.75 li
31.0151 264.111 li
31.3755 264.759 li
31.3755 265.479 li
31.0151 266.126 li
30.2954 267.207 li
26.9111 270.591 li
31.6636 270.591 li
@
34.3994 269.943 mo
34.1113 270.231 li
34.3994 270.591 li
34.7593 270.231 li
34.3994 269.943 li
@
39.2231 263.391 mo
38.2153 263.75 li
37.4951 264.759 li
37.2075 266.487 li
37.2075 267.495 li
37.4951 269.223 li
38.2153 270.231 li
39.2231 270.591 li
39.9434 270.591 li
40.9512 270.231 li
41.5996 269.223 li
41.9595 267.495 li
41.9595 266.487 li
41.5996 264.759 li
40.9512 263.75 li
39.9434 263.391 li
39.2231 263.391 li
@
46.5674 266.991 mo
46.5674 242.943 li
45.9912 242.943 li
45.9912 422.943 li
@
62.5513 383.199 mo
61.8315 382.839 li
61.5435 382.191 li
61.5435 381.471 li
61.8315 380.823 li
62.5513 380.462 li
63.2715 380.462 li
63.9194 380.823 li
64.2793 381.471 li
64.2793 382.191 li
63.9194 382.839 li
63.2715 383.199 li
62.5513 383.199 li
@
61.8315 382.191 mo
61.8315 381.471 li
61.8315 381.471 li
@
62.1914 382.551 mo
62.1914 381.111 li
@
62.5513 382.839 mo
62.5513 380.823 li
@
62.9111 382.839 mo
62.9111 380.823 li
@
63.2715 382.839 mo
63.2715 380.823 li
@
63.5596 382.551 mo
63.5596 381.111 li
@
63.9194 382.191 mo
63.9194 381.471 li
@
112.879 397.311 mo
112.231 396.951 li
111.872 396.231 li
111.872 395.583 li
112.231 394.863 li
112.879 394.575 li
113.6 394.575 li
114.248 394.863 li
114.607 395.583 li
114.607 396.231 li
114.248 396.951 li
113.6 397.311 li
112.879 397.311 li
@
112.231 396.231 mo
112.231 395.583 li
112.231 395.583 li
@
112.591 396.591 mo
112.591 395.223 li
@
112.879 396.951 mo
112.879 394.863 li
@
113.239 396.951 mo
113.239 394.863 li
@
113.6 396.951 mo
113.6 394.863 li
@
113.959 396.591 mo
113.959 395.223 li
@
114.248 396.231 mo
114.248 395.583 li
@
138.079 393.855 mo
137.359 393.495 li
137.071 392.847 li
137.071 392.126 li
137.359 391.479 li
138.079 391.119 li
138.728 391.119 li
139.447 391.479 li
139.808 392.126 li
139.808 392.847 li
139.447 393.495 li
138.728 393.855 li
138.079 393.855 li
@
137.359 392.847 mo
137.359 392.126 li
137.359 392.126 li
@
137.719 393.135 mo
137.719 391.767 li
@
138.079 393.495 mo
138.079 391.479 li
@
138.439 393.495 mo
138.439 391.479 li
@
138.728 393.495 mo
138.728 391.479 li
@
139.087 393.135 mo
139.087 391.767 li
@
139.447 392.847 mo
139.447 392.126 li
@
163.279 399.687 mo
162.56 399.399 li
162.199 398.679 li
162.199 397.958 li
162.56 397.311 li
163.279 396.951 li
163.927 396.951 li
164.647 397.311 li
164.936 397.958 li
164.936 398.679 li
164.647 399.399 li
163.927 399.687 li
163.279 399.687 li
@
162.56 398.679 mo
162.56 397.958 li
162.56 397.958 li
@
162.919 399.039 mo
162.919 397.67 li
@
163.279 399.399 mo
163.279 397.311 li
@
163.567 399.399 mo
163.567 397.311 li
@
163.927 399.399 mo
163.927 397.311 li
@
164.287 399.039 mo
164.287 397.67 li
@
164.647 398.679 mo
164.647 397.958 li
@
188.407 399.471 mo
187.76 399.111 li
187.399 398.391 li
187.399 397.743 li
187.76 397.023 li
188.407 396.735 li
189.127 396.735 li
189.775 397.023 li
190.136 397.743 li
190.136 398.391 li
189.775 399.111 li
189.127 399.471 li
188.407 399.471 li
@
187.76 398.391 mo
187.76 397.743 li
187.76 397.743 li
@
188.119 398.75 mo
188.119 397.383 li
@
188.407 399.111 mo
188.407 397.023 li
@
188.768 399.111 mo
188.768 397.023 li
@
189.127 399.111 mo
189.127 397.023 li
@
189.487 398.75 mo
189.487 397.383 li
@
189.775 398.391 mo
189.775 397.743 li
@
213.607 399.542 mo
212.888 399.255 li
212.599 398.535 li
212.599 397.887 li
212.888 397.167 li
213.607 396.807 li
214.255 396.807 li
214.976 397.167 li
215.335 397.887 li
215.335 398.535 li
214.976 399.255 li
214.255 399.542 li
213.607 399.542 li
@
212.888 398.535 mo
212.888 397.887 li
212.888 397.887 li
@
213.248 398.895 mo
213.248 397.527 li
@
213.607 399.255 mo
213.607 397.167 li
@
213.968 399.255 mo
213.968 397.167 li
@
214.255 399.255 mo
214.255 397.167 li
@
214.615 398.895 mo
214.615 397.527 li
@
214.976 398.535 mo
214.976 397.887 li
@
238.808 402.567 mo
238.087 402.207 li
237.728 401.487 li
237.728 400.839 li
238.087 400.119 li
238.808 399.759 li
239.455 399.759 li
240.175 400.119 li
240.462 400.839 li
240.462 401.487 li
240.175 402.207 li
239.455 402.567 li
238.808 402.567 li
@
238.087 401.487 mo
238.087 400.839 li
238.087 400.839 li
@
238.447 401.847 mo
238.447 400.479 li
@
238.808 402.207 mo
238.808 400.119 li
@
239.095 402.207 mo
239.095 400.119 li
@
239.455 402.207 mo
239.455 400.119 li
@
239.816 401.847 mo
239.816 400.479 li
@
240.175 401.487 mo
240.175 400.839 li
@
263.935 403.863 mo
263.287 403.502 li
262.927 402.855 li
262.927 402.135 li
263.287 401.487 li
263.935 401.126 li
264.656 401.126 li
265.304 401.487 li
265.664 402.135 li
265.664 402.855 li
265.304 403.502 li
264.656 403.863 li
263.935 403.863 li
@
263.287 402.855 mo
263.287 402.135 li
263.287 402.135 li
@
263.576 403.215 mo
263.576 401.775 li
@
263.935 403.502 mo
263.935 401.487 li
@
264.294 403.502 mo
264.294 401.487 li
@
264.656 403.502 mo
264.656 401.487 li
@
264.943 403.215 mo
264.943 401.775 li
@
265.304 402.855 mo
265.304 402.135 li
@
289.136 406.383 mo
288.416 406.023 li
288.126 405.375 li
288.126 404.655 li
288.416 404.007 li
289.136 403.647 li
289.783 403.647 li
290.503 404.007 li
290.863 404.655 li
290.863 405.375 li
290.503 406.023 li
289.783 406.383 li
289.136 406.383 li
@
288.416 405.375 mo
288.416 404.655 li
288.416 404.655 li
@
288.775 405.735 mo
288.775 404.367 li
@
289.136 406.023 mo
289.136 404.007 li
@
289.496 406.023 mo
289.496 404.007 li
@
289.783 406.023 mo
289.783 404.007 li
@
290.144 405.735 mo
290.144 404.367 li
@
290.503 405.375 mo
290.503 404.655 li
@
314.335 408.039 mo
313.615 407.75 li
313.255 407.031 li
313.255 406.383 li
313.615 405.663 li
314.335 405.303 li
314.984 405.303 li
315.703 405.663 li
315.992 406.383 li
315.992 407.031 li
315.703 407.75 li
314.984 408.039 li
314.335 408.039 li
@
313.615 407.031 mo
313.615 406.383 li
313.615 406.383 li
@
313.976 407.391 mo
313.976 406.023 li
@
314.335 407.75 mo
314.335 405.663 li
@
314.623 407.75 mo
314.623 405.663 li
@
314.984 407.75 mo
314.984 405.663 li
@
315.343 407.391 mo
315.343 406.023 li
@
315.703 407.031 mo
315.703 406.383 li
@
339.462 410.126 mo
338.816 409.767 li
338.455 409.119 li
338.455 408.399 li
338.816 407.75 li
339.462 407.391 li
340.183 407.391 li
340.832 407.75 li
341.191 408.399 li
341.191 409.119 li
340.832 409.767 li
340.183 410.126 li
339.462 410.126 li
@
338.816 409.119 mo
338.816 408.399 li
338.816 408.399 li
@
339.103 409.479 mo
339.103 408.111 li
@
339.462 409.767 mo
339.462 407.75 li
@
339.824 409.767 mo
339.824 407.75 li
@
340.183 409.767 mo
340.183 407.75 li
@
340.472 409.479 mo
340.472 408.111 li
@
340.832 409.119 mo
340.832 408.399 li
@
364.664 412.647 mo
363.943 412.287 li
363.656 411.639 li
363.656 410.918 li
363.943 410.271 li
364.664 409.911 li
365.312 409.911 li
366.031 410.271 li
366.392 410.918 li
366.392 411.639 li
366.031 412.287 li
365.312 412.647 li
364.664 412.647 li
@
363.943 411.639 mo
363.943 410.918 li
363.943 410.918 li
@
364.304 411.999 mo
364.304 410.63 li
@
364.664 412.287 mo
364.664 410.271 li
@
365.023 412.287 mo
365.023 410.271 li
@
365.312 412.287 mo
365.312 410.271 li
@
365.671 411.999 mo
365.671 410.63 li
@
366.031 411.639 mo
366.031 410.918 li
@
389.791 414.375 mo
389.144 414.015 li
388.783 413.367 li
388.783 412.647 li
389.144 411.999 li
389.791 411.639 li
390.511 411.639 li
391.232 411.999 li
391.519 412.647 li
391.519 413.367 li
391.232 414.015 li
390.511 414.375 li
389.791 414.375 li
@
389.144 413.367 mo
389.144 412.647 li
389.144 412.647 li
@
389.503 413.655 mo
389.503 412.287 li
@
389.791 414.015 mo
389.791 411.999 li
@
390.152 414.015 mo
390.152 411.999 li
@
390.511 414.015 mo
390.511 411.999 li
@
390.871 413.655 mo
390.871 412.287 li
@
391.232 413.367 mo
391.232 412.647 li
@
62.9111 381.831 mo
113.239 395.943 li
138.439 392.487 li
163.567 398.319 li
188.768 398.103 li
213.968 398.175 li
239.095 401.199 li
264.294 402.495 li
289.496 405.015 li
314.623 406.67 li
339.824 408.759 li
365.023 411.279 li
390.152 413.007 li
@
62.9111 247.767 mo
66.2954 251.151 li
62.9111 254.607 li
59.4556 251.151 li
62.9111 247.767 li
@
113.239 272.967 mo
116.695 276.351 li
113.239 279.807 li
109.783 276.351 li
113.239 272.967 li
@
138.439 294.567 mo
141.823 298.023 li
138.439 301.479 li
134.983 298.023 li
138.439 294.567 li
@
163.567 307.599 mo
167.023 311.055 li
163.567 314.439 li
160.184 311.055 li
163.567 307.599 li
@
188.768 318.975 mo
192.224 322.359 li
188.768 325.815 li
185.312 322.359 li
188.768 318.975 li
@
213.968 337.983 mo
217.351 341.367 li
213.968 344.823 li
210.511 341.367 li
213.968 337.983 li
@
239.095 352.958 mo
242.552 356.343 li
239.095 359.799 li
235.71 356.343 li
239.095 352.958 li
@
264.294 367.935 mo
267.751 371.319 li
264.294 374.775 li
260.839 371.319 li
264.294 367.935 li
@
289.496 383.703 mo
292.878 387.159 li
289.496 390.615 li
286.039 387.159 li
289.496 383.703 li
@
314.623 392.126 mo
318.08 395.583 li
314.623 399.039 li
311.24 395.583 li
314.623 392.126 li
@
339.824 402.351 mo
343.279 405.807 li
339.824 409.191 li
336.367 405.807 li
339.824 402.351 li
@
365.023 409.046 mo
368.408 412.502 li
365.023 415.887 li
361.568 412.502 li
365.023 409.046 li
@
390.152 411.351 mo
393.607 414.807 li
390.152 418.191 li
386.767 414.807 li
390.152 411.351 li
@
62.9111 251.151 mo
113.239 276.351 li
138.439 298.023 li
163.567 311.055 li
188.768 322.359 li
213.968 341.367 li
239.095 356.343 li
264.294 371.319 li
289.496 387.159 li
314.623 395.583 li
339.824 405.807 li
365.023 412.502 li
390.152 414.807 li
@
59.4556 400.407 mo
66.2954 400.407 li
@
62.9111 403.791 mo
62.9111 396.951 li
@
60.4634 402.783 mo
65.2876 397.958 li
@
65.2876 402.783 mo
60.4634 397.958 li
@
109.783 398.247 mo
116.695 398.247 li
@
113.239 401.63 mo
113.239 394.791 li
@
110.863 400.623 mo
115.615 395.799 li
@
115.615 400.623 mo
110.863 395.799 li
@
134.983 400.695 mo
141.823 400.695 li
@
138.439 404.079 mo
138.439 397.239 li
@
135.991 403.071 mo
140.815 398.247 li
@
140.815 403.071 mo
135.991 398.247 li
@
160.184 398.823 mo
167.023 398.823 li
@
163.567 402.279 mo
163.567 395.439 li
@
161.191 401.271 mo
166.015 396.447 li
@
166.015 401.271 mo
161.191 396.447 li
@
185.312 400.119 mo
192.224 400.119 li
@
188.768 403.575 mo
188.768 396.735 li
@
186.392 402.567 mo
191.144 397.743 li
@
191.144 402.567 mo
186.392 397.743 li
@
210.511 402.207 mo
217.351 402.207 li
@
213.968 405.591 mo
213.968 398.75 li
@
211.519 404.583 mo
216.343 399.759 li
@
216.343 404.583 mo
211.519 399.759 li
@
235.71 403.502 mo
242.552 403.502 li
@
239.095 406.958 mo
239.095 400.119 li
@
236.72 405.951 mo
241.542 401.126 li
@
241.542 405.951 mo
236.72 401.126 li
@
260.839 404.223 mo
267.751 404.223 li
@
264.294 407.679 mo
264.294 400.839 li
@
261.919 406.67 mo
266.671 401.847 li
@
266.671 406.67 mo
261.919 401.847 li
@
286.039 406.383 mo
292.878 406.383 li
@
289.496 409.767 mo
289.496 402.927 li
@
287.048 408.759 mo
291.871 403.935 li
@
291.871 408.759 mo
287.048 403.935 li
@
311.24 406.455 mo
318.08 406.455 li
@
314.623 409.839 mo
314.623 402.999 li
@
312.248 408.831 mo
317.072 404.007 li
@
317.072 408.831 mo
312.248 404.007 li
@
336.367 407.535 mo
343.279 407.535 li
@
339.824 410.991 mo
339.824 404.151 li
@
337.447 409.983 mo
342.199 405.159 li
@
342.199 409.983 mo
337.447 405.159 li
@
361.568 408.831 mo
368.408 408.831 li
@
365.023 412.215 mo
365.023 405.375 li
@
362.576 411.207 mo
367.4 406.383 li
@
367.4 411.207 mo
362.576 406.383 li
@
386.767 410.271 mo
393.607 410.271 li
@
390.152 413.727 mo
390.152 406.815 li
@
387.775 412.647 mo
392.599 407.895 li
@
392.599 412.647 mo
387.775 407.895 li
@
62.9111 400.407 mo
113.239 398.247 li
138.439 400.695 li
163.567 398.823 li
188.768 400.119 li
213.968 402.207 li
239.095 403.502 li
264.294 404.223 li
289.496 406.383 li
314.623 406.455 li
339.824 407.535 li
365.023 408.831 li
390.152 410.271 li
@
12.0073 235.743 mo
12.0073 242.943 li
@
12.0073 239.199 mo
12.6553 238.551 li
13.3755 238.191 li
14.3833 238.191 li
15.0313 238.551 li
15.7515 239.199 li
16.1113 240.207 li
16.1113 240.927 li
15.7515 241.935 li
15.0313 242.655 li
14.3833 242.943 li
13.3755 242.943 li
12.6553 242.655 li
12.0073 241.935 li
@
18.1274 234.375 mo
18.8472 235.095 li
19.4951 236.103 li
20.2153 237.471 li
20.5752 239.199 li
20.5752 240.567 li
20.2153 242.294 li
19.4951 243.663 li
18.8472 244.67 li
18.1274 245.391 li
@
305.912 261.159 mo
311.744 261.159 li
@
308.791 264.111 mo
308.791 258.207 li
@
306.775 263.175 mo
310.878 259.071 li
@
310.878 263.175 mo
306.775 259.071 li
@
320.455 259.071 mo
320.455 258.783 li
320.816 258.063 li
321.175 257.703 li
321.824 257.343 li
323.191 257.343 li
323.912 257.703 li
324.271 258.063 li
324.56 258.783 li
324.56 259.431 li
324.271 260.151 li
323.552 261.159 li
320.167 264.542 li
324.919 264.542 li
@
327.656 263.895 mo
327.367 264.255 li
327.656 264.542 li
328.015 264.255 li
327.656 263.895 li
@
332.48 257.343 mo
331.472 257.703 li
330.751 258.783 li
330.392 260.439 li
330.392 261.519 li
330.751 263.175 li
331.472 264.255 li
332.48 264.542 li
333.126 264.542 li
334.207 264.255 li
334.855 263.175 li
335.216 261.519 li
335.216 260.439 li
334.855 258.783 li
334.207 257.703 li
333.126 257.343 li
332.48 257.343 li
@
345.871 257.343 mo
345.871 264.542 li
@
343.423 257.343 mo
348.248 257.343 li
@
307.919 286.231 mo
310.873 289.183 li
307.919 292.135 li
305.041 289.183 li
307.919 286.231 li
@
322.183 271.743 mo
321.175 272.103 li
320.455 273.183 li
320.167 274.839 li
320.167 275.918 li
320.455 277.575 li
321.175 278.655 li
322.183 278.943 li
322.904 278.943 li
323.912 278.655 li
324.56 277.575 li
324.919 275.918 li
324.919 274.839 li
324.56 273.183 li
323.912 272.103 li
322.904 271.743 li
322.183 271.743 li
@
327.656 278.294 mo
327.367 278.655 li
327.656 278.943 li
328.015 278.655 li
327.656 278.294 li
@
333.847 271.743 mo
330.392 276.567 li
335.576 276.567 li
@
333.847 271.743 mo
333.847 278.943 li
@
345.871 271.743 mo
345.871 278.943 li
@
343.423 271.743 mo
348.248 271.743 li
@
308.503 275.671 mo
307.927 275.383 li
307.64 274.807 li
307.64 274.231 li
307.927 273.656 li
308.503 273.368 li
309.08 273.368 li
309.728 273.656 li
310.015 274.231 li
310.015 274.807 li
309.728 275.383 li
309.08 275.671 li
308.503 275.671 li
@
307.927 274.807 mo
307.927 274.231 li
307.927 274.231 li
@
308.216 275.095 mo
308.216 273.944 li
@
308.503 275.383 mo
308.503 273.656 li
@
308.791 275.383 mo
308.791 273.656 li
@
309.08 275.383 mo
309.08 273.656 li
@
309.439 275.095 mo
309.439 273.944 li
@
309.728 274.807 mo
309.728 274.231 li
@
322.183 286.143 mo
321.175 286.502 li
320.455 287.583 li
320.167 289.239 li
320.167 290.319 li
320.455 291.975 li
321.175 293.055 li
322.183 293.343 li
322.904 293.343 li
323.912 293.055 li
324.56 291.975 li
324.919 290.319 li
324.919 289.239 li
324.56 287.583 li
323.912 286.502 li
322.904 286.143 li
322.183 286.143 li
@
327.656 292.695 mo
327.367 293.055 li
327.656 293.343 li
328.015 293.055 li
327.656 292.695 li
@
331.472 287.583 mo
332.119 287.223 li
333.126 286.143 li
333.126 293.343 li
@
337.591 287.871 mo
337.591 287.583 li
337.951 286.863 li
338.312 286.502 li
338.958 286.143 li
340.328 286.143 li
341.048 286.502 li
341.408 286.863 li
341.767 287.583 li
341.767 288.231 li
341.408 288.951 li
340.687 289.958 li
337.304 293.343 li
342.056 293.343 li
@
352.71 286.143 mo
352.71 293.343 li
@
350.335 286.143 mo
355.087 286.143 li
355.087 286.143 li
@
%ADOBeginSubsetFont: ComicSansMS Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /ComicSansMS def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 40 /parenleft putdup 41 /parenright putdup 45 /hyphen putdup 49 /one putdup 65 /A putdup 66 /B putdup 67 /C putdup 73 /I putdup 77 /M putdup 82 /R putdup 84 /T putdup 97 /a putdup 101 /e putdup 109 /m putdup 111 /o putdup 112 /p putdup 114 /r putdup 116 /t putdup 117 /u putdef/FontBBox {-93 -312 1187 1102} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings21 dict dup begin/.notdef <1C60D8A8C9B7A73DB6F0B6FAFA7BF3C28FD0A21D0FB70854A4518CFB8D731A1977C1C08A> |-/space <1C60D8A8C9B84186EC> |-/parenleft <1C60D8A8C9B72DDD4BDDDEFA1F2E33EFAB2609E3C9DE388E20E9C059C4F1BE51DE95F72A2C12C7492DCC98E0E6966BF3C6ECA33D6154D0170812D5FDFD86FCB61BC83579E6C82B47DC2EF7EFEC0791C5D64493C14198901FA2252477E06D36F6FBD8470D6ECFD0F8931D63CA891EC08EE802E9833B5640A882BF6370D5475D687E5637A4> |-/parenright <1C60D8A8C9B72DDD4BB51EC6C49AB7306C1A14C493E9BA5D78AE2C195B29D94044F912FEED39F75BE34A7150607FEA016A23803EFDD2F9288AF7A180AEFCBFBF998E3FBDAC6F3A4074B0F5D69EFDE59096176B6B29149A14AB78FC2B3577A37D471DCCDE635BBEA2665A37EE893BAA312D5DB22CA01C4916AB9D79F1B336301D84554794> |-/hyphen <1C60D8A8C9B71A7335DED7128A2BEC26C4F799019A87FCF9EF4AFAADE4B5E99E37751436BCE6B1DBD30F2BB03235CD0D7C430BFB986809660F0F2A> |-/one <1C60D8A8C9B77914873F98803C60EEF5E4A6DBE96AE9B81EFF493D2F1AA3FEEAA37FD443D04034D23BA9D609D2C8CD762F92B8820610EEE88821C53021C3E08017ADDCC0C56E5E2D7504080ABC696FC4B2BC78B7B384642545B6D2D0F5C638D5E5DAF1603C704B0CBDC68673A92C16CF8AB7E549BF3031EC2B504C05A0AE024AB48F99F68753D2CFADD79C925954659602A92A0F92089F7F8763F72499600C23C55121FDAC89B86D3B6C51F53AFAF0B4EDB2432FF0B89CC30A4C8DD2B8E7547AC479FCA4589851D61C952B27> |-/A <1C60D8A8C9B60E3AA4B976610EC61CEC8A66ED90DF0C6331BB14366BB940FB3A6EADFE9FF353ACBE97E7E98B7D39A91DB9BD1132E1F7C1635E17BC2DE18007850C2A2DF892E62C075FF0662C83FB987C80A272CFF2ADD30FDB0F07F6A5B84AFDD4936A7BC33C86ECB86B487A2BCD608A50304B57B513215016A1E69D1C6538A56CD0497EE35010216E663AED5DBCE0EC37B4845C35DBC5DEC6ADC22984448444> |-/B <1C60D8A8C9B66B395FD17D63B9E61DA0BB50A497D6EA5CF66D713309F62500DD5FF27AFBE13138AE8692CDAB03619C69E42BF0A028212D7196A46E0B59D87EB400714E70727022DD786503CF4D354115A51BFDED36E5941578460AA9A3190846D39FC3489DD04FBFE83EBF8911912975458C0D8174449DD1A2110A863937B27C3AF9558C20C1A26BA905D9D89E6647703CDBBFE3BBEE20DBCAEBB238555BCB67F839DAB97D8AEED4933566B748EDD20F5871AF750417A9CBC4EBE0E38D350906F981A452985EAE5C5A2B615BBF91B837A7A5E43ED160E60E512050491935F93E5B6F65529183D7663E4CCD1C9C5524636709AA1ED9EDE9D7CB8657> |-/C <1C60D8A8C9B7C054165765BAAF0C92CCBE2C6ADFDFC36958D81859F00796D344CC054E333538ED46E12E7F5688AFCF3135F7BCF04A6B81068C72B36BF7E3914834347D57ED2E2D044D0BCFFC5B59F76B5C38341A800AA9211C98073803A5DC16425F7A27A5DB2025E06EF163670F55818C9860E39CE252532EFC51C2C7AAEA1AC0A03F3A9AB8FDAF9C04A014034CBE8449C94C8B8BD9D90AD14C972CEE5EF16F02C7A2122CEBDBE881C9E97730465657789925229B337B911F77129D0B7B7E9920> |-/I <1C60D8A8C9B799EBD279262C5ABE91CEC2BBD701A188D7C6823FD27FCD2F51B76B7224F8CBE317C7C332084E1F3DBC4A711D1ADF20C7FDE6114505B093E3B642EAF66C4AABFA3FF012FCA9496C1C38B03AB52B6EEAC8C4D7EE94EB8D3602AD9E60C7F45913845D3C417960F3D5F510E09B3EA2AEABD28CA67AB6BD2F1CDF5E0496BB9BA4DD0C764C5D3DB39A134A5E9A4D5617BDB2986358995EDD5131440B1C73BBE9358581D5818F1E654C5952952C32B7FE0AF4922D718878A2ADF4D4FBE7021C0EC3E51586D7490EFA85F2B392FD53DB76FAA8C37544BB395B47769E5D2CC634C1995EC7676339E442D8C17EDB> |-/M <1C60D8A8C9B59575D87BE2168EEA28120D9030AFF41D7AF515ACBF3649BD2F40DE0809DEF2C3B0D88F5433D0339D1594A8BB5B7D6E9E407C9B2CF774E827F6D240DA9788FD58FD6A6693D238D2DD35EBAD61FA6DA2B1B88D98FCBA1CE329DEEDC1A2CF7DB3CFF85E91DB1E05982789211A03C97DDC1A73F165FD37FA7D660E3EF66841B5442F7DA5B28127C6557F4AF9EAE68C31E263F78BC4FE967BBD3724E8E4E7783BD6F3F0D1F9D36FC073BBDC3BB91498E2940FACB05B3E1AAE653273D1E1C1DE5C399F68768F7EC53985E7DF8ED50093CF6E6C7AD007BBE64BE70B06C3BE97174E50F93FE7A1F609DE48AB13B0AFA023A5454E929FDB> |-/R <1C60D8A8C9B6699559421F03C3156FD8EA055B7CF36CC63867CEA507552DF000ADFFCCCA7355E525CDBEFF5F068702678190F4222B5C045B197B40B8D83593DA62427C27612B6B2AB09C4F9431042321EE893508AAAEAC5AA0233062887B12C86642E439498A4427C8B6E96402244A9DEB714EA21F1D08D940B3335D0A7759335582DCC87570AC1D46EBC5230DCC3C83F1FA484A290F72531475555A949024CA26AA01460EEFCA5617972EA8FA135B14B899313477DAE4FE3AF85806B96CC76A4776DE79BD94945AE8CF2CB5E13E2BA79EE4EBEA7CB5E9E682BB5F0B24F34F6DF78858E108A53FBD8DAA29F6E723A59B2D2DB122E030DE6B7B25643C43E78E254E3DD4> |-/T <1C60D8A8C9B65DE77A876B2DD8B7FF866491B0F2D61BEA0FBD85AF0D4DE2D949BC150F0F7674372C84451FC040683FB3AA2D326E4537FF474119E83C0987CB5A9ABA0CEE9BCA528F62C1464F5E091F2B82819B07C10C1F1E4E020756FBAC175FEE62F21BE88ABFB0D490716E46C7B7A99793906C4D305D2AF07DDE68078E0E2DC8EB3EE1D506AF796125FCF0E84AE3858A8FA7A22B380BA92E9CC4237A14C737568566385E4CC4D53E33434D25323EAE78F81E4933605E741D0F8ABE8D521FF5FB90669DFD0664D78B93FFDF6561CEE8110A3B3ADAD33CCF470BBB1B9EE08647EF4772037B> |-/a <1C60D8A8C9B7BB5CA503F41BCABD6C718309D7FD3EAFD4723590A6DB54A64A3783FF0E8915C8665146025473AABA73A7307808FC49DF54120176FFCE6E5630D745DEC9D7FE687B22D69E14177C1006B659795051D4F564854E1C732886E0B2617B0D55057161A197AD04FDD89E349DC800C8FAE6C2E2E7218942027A386140843CEC6D038F4E517DF6E091EE1EC97061608AA6DD07992C53BB029F315A3C165875CF85B20BCD136667E2BE57C24163FB07309C0F29C421C91BBF197F69B4468BD92D4E0F963A574D94F4959F6C142EC285F75B0A57DCD73FA9D71DA6249A4005429B> |-/e <1C60D8A8C9B797474FA4303150FF95D22C1576367C7C82BE107A33DB836FE273C47A9F1C294729003E4BC6906C807AE64492E567EB699590C33760698497B7D8BD4606E6533DD313B7408096D0253255EE30E5A5E3E06503BE924638C5951A143C8FB027E022BA2CC9736D9A6F100D38EB1D4C686421142EAA9CB9B186F914996503E87D112FD301022C9ED0ABE9EC3841A2AAB1D0ECFBD04DD27FAC9222691EA422325A2608DE3AA47EDFE24D5B> |-/m <1C60D8A8C9B6FC2D96873601FD7D92169A9B88887C32231D12B856F0FF258B62829FEDF861E7207C12D5C53BCDFD0EA3F0EF441B3104EE7A8DCCC9135A66A3908121FDEF89ECB4290FE2DEBBC0D2CEC922FC3B50F2ED674EACC69E69FA370309E0EBFB994E62CF35AAC76A68A27F1193FA80070D9751608DC309EBC2115575AE6BDEEB113F39584664AF7AAA3C82601F097876EB086034E5AE78A75047B10841E51F7380B84CCDD035E85E1A5870A2BB0942D4819E585F0952EB73250253334BF49322F96375F5B49CB7CFA7A0B232F8AD1DD38A4207A81B8B16535F38363976D31BC82130B6F42B86DA3EA4FFCCC6C8DA3BAD0E6D585D10CCC6A4EFCE59BB479065B92972F3D516BBD63C0E7C814F065EEF1040A3FF51C243D5475EBA7E962CAD4F75D3AC0EDC0C293B5BB6A5776BF4AC8F3BC665CA79374C2D10BBB5A4EE69B305850280C1> |-/o <1C60D8A8C9B78D34A55956A51486C357D04D448C2012FC2F5B0A5FE1B320E5CD61418E269420C85D10935D5D9B29D4FDDFDD85C698EDEF649FCF7B4152030DE7FB7B0AD250869A491A4776C5C05E1436F84934B318F30DD94DF542C1FA3FC71DCD30BC8EC67320F785CD0C113E143028BDC1093B4CB998C3891C7A3F7C> |-/p <1C60D8A8C9B784FA605C1E2DE9CD48D992DC3CC70A48B838E2D397F5893EBF5E6CB31C410B2D579A798B247824C0B1DA0D694D5A554F49A7F104B09B8C8123B1EE0F250469E618A08C9EDDFB5A51FAF77BD9EC9F3207514B493F3B559D151CA44FECA1422F66057BA97C6A129E034A9C3AB70E463FE85C8478F346F06A6148E354DA6D0BE5EFF6256E4BB886B9C73833B34381A812E73BADDAFCE8754E4C232F6A62C54AB66D9B9D76ADD04785EFB7DCFC18E5B399366900582D047B460CC42F08F2E9ED5B222614010BACB1AC2FAD7F735C4AD14F71C1> |-/r <1C60D8A8C9B75BE51651FFE67439D51A25F90110BB907676984B99DD0B35C7709F13E9D884F7A5E4D5DC6EAC702AA1CA7DD0308EC3E47EA3A772341F5B614E58D6E83BA0E5BB48DBDD3ED30A643443B6748E7F94653D8C84439C4E79874BBAE5D54AF00F5DBBDC68AB601F5B54A0C720942814BB32E87436> |-/t <1C60D8A8C9B7445140689D163BE9CD19CB6263AAD663E751BFF4FC3EFD289F54C938D7522CDBDC78B86C3A6B352FEC6C942B3A84D1DF37948F119DD042933AE483D22B2D630A0536911763BEC72090C0E7972085EC665EF1618CB3A1E365C68118F7319C489021F7E5BB1237C8B28D9185CA450113B4347A96F5A190A1E41185CC68C22E0D8B3619F65EBBC7C09A7899C42BB7EC5C668E84BEB96E5966CE04926328B6CA13AB435E16BBB7670DDC776BE2EE98FDA0050964E0FA7809BCE05F1D859FB5837E> |-/u <1C60D8A8C9B7B3D0EB94C27794C8FF7A66F97FA6CF9FABEE835E1A1626320F2E2E58AACC9742E2863A234D717CCEC554B38E6670782546BE1280DB3D026E3D97D899C4DBB14646E84E5FA9BF09835296C032D42FE102EFEF2CF2250B419A68387C6038BB86A74FB974D87A0B2F0A7872D9B0CF5DA9A83619FEC0CA43F47D29F1B253EC46F0FA880E9D913D7D1074998F6C45D6194D53073B871AAF04BD179A8644CD091C1AF599D8C323C678F3C145D207E61A3CA7E44F7257600C6DCC4283614DCCA35CB9A41B86A4FF> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/IHAXZU+ComicSansMS /ComicSansMS findfont ct_VMDictPut/IHAXZU+ComicSansMS*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 3{/.notdef}rp /one 15{/.notdef}rp /A /B /C 5{/.notdef}rp /I 3{/.notdef}rp /M 4{/.notdef}rp /R /.notdef /T 12{/.notdef}rp /a 3{/.notdef}rp /e 7{/.notdef}rp /m /.notdef /o /p /.notdef /r /.notdef /t /u 138{/.notdef}rp]IHAXZU+ComicSansMS nfIHAXZU+ComicSansMS*1 [0.05184 -12.96 -12.96 -0.05184 0 0 ]msf16.2749 125.574 mo(IRM \(Am)[0.0283241 -7.08116 0.0325775 -8.14429 0.0457649 -11.4413 0.0154896 -3.8728 0.0189857 -4.74609 0.0379181 -9.47952 0 0 ]xysh11.4942 70.7206 mo(-1)[0.0215921 -5.39789 0 0 ]xysh16.5392 59.5081 mo(\))sh17.2749 359.573 mo(IRM \(Am)[0.0283241 -7.08118 0.0325775 -8.14429 0.0457649 -11.4413 0.0154896 -3.8728 0.0189857 -4.74609 0.0379181 -9.47952 0 0 ]xysh12.4942 304.72 mo(-1)[0.0215921 -5.39789 0 0 ]xysh17.5392 293.508 mo(\))shIHAXZU+ComicSansMS*1 [12.96 0 0 -12.96 0 0 ]msf185.919 223.231 mo(B \(T\))[8.1696 3.8728 4.74609 8.80875 0 ]xsh161.919 461.231 mo(Temperature \()[8.80875 7.10016 10.068 6.92929 7.10016 6.22687 6.63187 6.10664 6.73946 6.22687 7.10016 3.8728 0 ]xsh249.577 456.231 mo(o)sh256.392 461.231 mo(C\))[7.8089 0 ]xsh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/IHAXZU+ComicSansMS*1 uf/IHAXZU+ComicSansMS uf/ComicSansMS ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.2%%For: (Lisa Tauxe) ()%%Title: (3dirm [Converted].eps)%%CreationDate: 5/19/09 8:51 AM%AI9_DataStream%Gb"-6l#%ffPp#u-q%!.[J2T)*1LnT6@kb](He_Q."A>?SreuCn=0X#GF/`bOfr]`"n*CXs>h3YN4B"q1`HuK5X=):7-bfFlp[InU%`Qe@B]8-F]oqm\;+i[7Cj!He<IJ)-?^\Rj$lWK@.55,B,?'L]\-lajK.1+iJ/t=$AXi&'J[s-HuDn^XIG^fVfp&<qDiUQTE2uB5N%mPhnoq@UHPgAL:0mHqeu2S7_EkPs,GEdG6FK1-mMDOu?%FoV<Ih_ebip\*.<gRILFCPB43M*IMJDQchHO*=ZD2W^Z'f\h52]tLt)%n[l8SJ%C+,od9Ha@/g?%kmstk1KY1cc/@L75JMXDiqcmCeb+jXgqhUGnVcoBqYRnj2fE(FTP5D-rjVq(5M?\N<1\U7j6s1$]QsJ<%n`nBD_u9W3("`E_p"c\'X#JWeNP81)ET9^1ht:n:$0.[V6f*KF'2-u:UNF/omId)iY5e'.R*b"TpMV*Zs28FDp?"A2`qJrIG;oO.%_b5X:N5[ODpMXuR+9-;0KC_U+_QWq3iPkIAND&+kh-T&*H[:GCRgXUnp%[S?)o.GggUB/^?Z0s<?bo]+]DD@"n[6kIIe`'Up&4Uq%s-%d+[7bBN*EG',0Xbsl)jdMoZjBL])5o.O%).`TCTSi*rO9!Lh`TcnG]WoNrh:K]5PRs&0r3/DcO9H-O#J`WHAug+q%jM"+ufN<%rL\EE"+Tq)qHeIY#djVKXf(V@(tlnN^AeLYlMg&QB+8HtE-[Y@B005kqnpsR/!pq["8_K<s0:8Ur!)\iLEH!TG=qYB'`>Z%/(AqD%f6dGHHi2HArq:HN\,!.jYZ+6i.4$O1&sc/SFOE3C_(r5D'E0Tfh_#(*Q%Gk%0Dpg+p3S?uhrC4'4as`pA!tdP^HJ,c_RE;gr;Lft%GIY]K?g\H6aPZ!HqRq[G^u&6$a+V44'TPaTb2;06n2HZL&`IXJ\'>,kMdsW]p^'HD^Tf,W-a"=WKYMN^pb+sR9\:]<-F]&4E*W/W%bFD<5e+LPKo,R?Qngra<IZm:I^$!+Nhmdgq\ZV'\i#aM(j29bV'<`O>R_Rkt_gep*N_``DB8,6^n_nEaKVRT#a5>ZnK]$c"L#^).%]S_Xo4KmO([\u094]hR/2<4]+XCE]N2k:a+3VOSAcMcaG\Ro,#/tkL3#"PSYM5.ttH.;aDNXpVL.E69G+3t8.MncM*Nir7O0jFA^%cQ'F0fW@-7\>%W14_IGs>gRnmCWc7o^#N8YG'VrKkIMiu2XWYmdaksPI\4C<+7;/X9ZC[NF.O>RiC#nh^NI$W45EuL>O0S_H)eC#%fWBC*nION[32AXLY-Q>n>mK_Yc6U,0B1)QrrRH)%?@Hr4HMYI-R48^;iuEPIs5fjapiHD#J%DgmA4ZZcJ&[U8f73TDBE"F-[[lMm%]B*tr^\kFmn`Ta%s)_Tg%Lf?:o$?jITBj8ie(YD^F'Lg)c0NNEob7?5j)\WNip"h1dqP:ILNGMH`l!&RB)L/>"?l?@Y0?][ht@$,%r9ZinE,=8k*oQEQTC>d$0]jFMp_T7CECWOj0aM=9n"("tVetHiq_.mWojS:;Kn&>]Y064?kNs55Ri1,%R6U^ipD)3rpao[GPQ#Fl%2SC+@#bf#,L$l"89\Q"si%XMncQg3D[;bR>R<,M?EMW!DCb/JVGI9VrC9mPth]3o#3mt*iD9H+DZqU8=/_YE(Yc[LII6#gV;$gG-%loE\JDg>mg#sZ>-cXs73=I/uI&YXk0[Yk%)GXLALe+*.bC.S[sS:Wn)W#mCi(L(.i/s_hbV)47aE/j!O`Yi?J%WT\RUd(ccAulO+%SBE^cF*W2G0@nmVIq]312tj`:%F^WR`UVm+3\RlTc<B#Rg(nf7X(tdL;/-qfghgnF?)L@J:3KL:'5+(W)r$JI4O#UBqga1(4[iW9%<T:TZ<>,->pFYf-^Ytc*:"%0Dm2s*h4c.ID>"7)48dR+PYM<7'Xk1NTT@UI7Z*_#)Hb_G+3_,k`1ksJi\Z9:ef'kEJ-Sr54=t#0C%:U]*pLF9F`i\t<:^>68Wk=DZ*b%nVQI;XBi*b<78^,Mr_7Scg7k6EH$o_W7eB56HIc#ergaI8_=p"Cf4?;g[ihP97:>C00&3]o9C%ThOnp]<(+&3c]&KNa1mI)HuYD+2ob-+o"9#VXsg`9@*WF^5]beko/Hom:BXh66h7`4TDqkH.IF9DZb2!%Q\k6f;U;EFF.u86WGHN%FT9teRr;T/4o4R,m9]%?i$-^L>ebt@Xhl*YXYBG+2B(7<UqEBpqsK@0P&70RQF78;-S,4,R=a$/i'aEta>B1V"A,%+41+s_o#:^0%/`s0j[-'TLZ6)DXO&cSIWAR&so'n70[su$4"=g%QI/EmB<B9`ihc*kX\2U$tHQk*ol/LR\23F2j>cs@AnF+`j*2Vgtf4d_%)qp7C%r17P%jXpI$ENOM98bYqkUjBI!D)1ielE>FpX_/skClMX=@PA:n>!Objj'_I,m3utPXXs8ATg)<5^&qOFg(>j51L*#dk8C7X9)3q+%c>u(YWG]LnL#*CnAI,X!<]]A;-T_$r/Ys\.H#\=I-#&Rp9PYJs;?Nf3e'T)9<%JZ-X\.3H%9M7b.Cio`p.3e>hE,E<ZE@2C'+G6;%GWJ%:6X>rgRr;&%ieAAk.RT,CGiE",bI1NL'O7VY#dkYo`?Ou^pk9Wil(E[;+m!ii)I47_9]nY4[Jm2^8D.LLc7o6]b/c!QTCPsE%GHPC<@sPI(C`CV+HgUt0Nb5]HeWtNWM[]k,=mne]fWJ0N-EO=,[_8KFF2]l+FR1PA[:=DbX"W%D,<oGu^=<.bcFEW9g)@+Og996i%j)Pkb>$5(+8&dE1D#2shl!hA=^/k[*:)2)DB5c@Z>Euo]H;uQ;4_<BE@]!)YMGXa'.LgLS3<eu5%d`cGh5k,5[@Y';GaIq!@pE-F%lhG>9nVW;_kGG(T8Y*k$.SY*(]]O(n=_h)9G/:-;Xa?ja`Mu9^2D1CB`!tOR1J6QW^N]m?/IJTsY.MDOOG:F+Y(t07e^gJnQ15XO%/A1u"f_.l3\'-G4\]*EtPS32+gH;,\"'`TIK\Cd<LNq#Vl6oO]9:=S-5qSE"<eFG@[,iN2R]2fGljp#JF'V02<r9\Id0;mR"me2.%[H[ri'.9<Q@L;dW76>.2UV$^i@^A7rmA(2.;tVW23PlO\M<1t.@b&rtOL-a)^P(1=#(<Y^Wl=L%e2EPX/9_i\Y<="VKBA-cb`hQq%ink,h-RP7pT_l@h4)Kc-@`m3CQA2`XXjW+prGDsn[\Y$MW@FIEIZt,IZ`_r`h-X9ueRIhs>_AE7a!_A^K$&Y?9[s$>[%UsTg`+*-%HO<]-arf*Y8qE4^niL\;eb`NaZfh:Vg:tUu>,odhho%PQK`3F&GCo!)8V,YIEgk4bno*BMZHj$.o*BT%0dcJ+fTt2$"7E/>(+e#^%Vg)OkZNZFF)f_%uFNOiBHBJ2hPb*fq4J='d3[q12W^8O$ndbK\GlIj*(&5!2_];45][fW.D]^'=++E;>lu2a_]B_Co?ZgkbI(B1L%[h!D[?f0Z=G^I+Ql12m8X$9s$5fDdX`Qe'#I.R2TqZpP9m[mk$\@K;d\ia:^J,AC)noo"iDI6XUI\Xlnb<OVu='XgDC:h-)Ie3@4%mG5t?li4K-Wb(u(/#rNX<dmb]G*ghYl?2^`[Cpn(e_b>6S#4DhQ+<gX]?:F3qnQbbR^*H)p49jHQA`K=U2OhpmddKFI<"r?O4TGZ%0;*sLf9afl^+Wj.\UM31;7sVlNWD#(IsQHgHi<*te^Yni^oO([iJkIMq\OanKir_tn04gu`T?]H=$Jq+r:na1b;YJ`0<XcH*rkVj%qd@ZSgcrGsEW,HKHbB:=p$L;qT/m(f\paJPmcOLc/YrFGI!pKipN@&7(?P2GLW:2aYG%tcqeQ-,mcsK:\$u,u$X<^;>6"?+f<91U%0-:+5IsLu7cYp#TkYK!sS**k^n:J@Ho(E)"GM.rthni8uh`\W_]mfdSIc?d*^:h4*Kd2*GlK\3<jd$]m/''(;*%rBF8+'_LQS,K1%kT<-%Qt!'p5B*1cWPTPJio\QGL`eTi2Wt*TJ%^6BiY=VjI=.]ZdS@&rdjM/u]6nl+!uCNZQ7lT23tEtU6"mCd55WgZlYGf/I=S&1%IX689)Gm6AgbpR,D#W9HAfRpo8"Q1,0`3j]])K\VrIt]._hGg=lI0a&_^5;t-2u7lo*>9["g6A@f/K&@gUn)A=3hs#h]K&4f[Y&s%&A4ib7sC:a]tOI9lLF8tmFBrMYR_iDYQ+"\q%^QoI=J%@Z1q*ZI/j'1h=[s1^On1"<0#&Lnc&=d"u#t%o0X0E3/J[Rj(8,<AQt,2%hnK-j\3cj>>2A?<a1'[Xs8;/nqr<bBfufdmoTq6XfDkjDl4uRZbFABqYU/0(gh\g;"tBUpo(i\0(-cn.*cSm1IXcE[Fo11\ji^:6%cQ,Fc?G:`5Gk(Jf:kK^cnI<o(W'6QkDsjcX]\7HpM3kIBEUR^u11";#Jf"DRH;X7piVN8me]&%a&/I1XIpV%4GeJ*ja25<9_EWGB%oA-#[DL]1WIjZJ%4I&.He:%ekK!B:Nmp=s3q1im,hniIpq"X@PeSjk_5'6h/IIZg)lcln?DgpF,DIIn*rmaJGr,KVm!;+shT<B,U%EHUm<=&7EAr?I%Wrj_dd:]D@>,eP[YqU]q0Dr+a6];"bc@sHnkB(u)oohV(G+!,=%J((U&RfXobQN(O'nL_Fns33^QoWfbl0Q1\&%puWCE$C!a3!dsf:Y'kd'b_A+Lc1A=I<kc&/pq%&Mlu[UIG[94)O8A<lTI'!lS(Dj!)]Ql-89pfa?@V]*8/?F<Y3g3,o&9,AR5TX<%n,Ic`qs^WMUd9MeD>s@rn^UQ<j"^YSHiZ<^p2ceELV$V)L;*KOVlNnNeD3&JSZ(Unmt&Kf=8,dW)hM:Z8:CPgJY#S-'#Ug!Lh+7H%I:%L&"AMRZh0nnf59a57G4t7H5>\0QJ(abk:GAlpmf@fYql=TL\f!DDZ[2_Yomc?S?u5%4n,(I%GZ$d"\M*Ggqd$u*&,g4X#Wap>%+Uet8d0Rsl%,52Lm,9r5a5Q**2`U7m#FYs4O06!pgUY!Z\>)-2N1]f-pumn`IJ1YKr8&Ond@W`IL>YE)0r-LX*4B8lp>HRCi<6i6%?1]ki(fMDaM;,OuLNlL@)Nm`WKp:#QE[kdmG%mQYl'P3j$t(&E2u57fED.482jSGFm`%ER;<&7qn3.B9_;d=.R:B!;bW-Ja[X"56%q2gXToQHUUTtk&n0;1Z.-']&MPu>&%#LC-N]5f;iGY[A-Kdkad>8[7g_ZOE%6C51.\LfX6qGO#B!rqK;_fL@k8C)!sg@a83k']20%j66%*"F;7TM4Tj$9M_p+CCc15me62kj>kA(ihuZl'bqQ'&02<*![35k`7@cEclWQG.UpV!A(NTJJ_8om56O.?$A(6'ObtF=.@P@p%4b5$a^1jO/"^-"gNsHCpKJJEAOjU$N]OB"rg`c$Pif7K/i"%r-5Q`0k(BadRl5CXO/?3s%L.S.K;^&dbMunYFPj/[TL'FguZRTiI%FtnHR(q+;N9V.7UY'gf/kP\7d-`Cu@qTr,r$'"-e,1.S9U;;+C?o1tOK]'EV6r5^ZJd,.A5W#Eq^hBBsn.&DoA5H0u`.ZM=OC<_N%9M]+f,\<duh\IAq'8.22.4SLH6&R0i*'1up8nrZ>M^;iN#!FGn1l0R;fJ:D__3l`%I&<ON@>.)?3-i/!_3c5eoRseu/&Z;Mo`1P:%VBI-.4_#a,'P7J;oOUL9kkn;f*$Qr..oNJ_;60agRUMm$4\pTq*`-k[*7t9%ScJXM@,2+`YTJpV@id=>bbYD83Wf;*^m>WD"-b&&%h8-rU=N;FuitKdH&(GM#jOk]ihtMK,%tNCZd$H>gK)P\Q56;iI%fR##fGc%HWr`E3GM$Daq;HG^O7!9Z56ASG<&gFD8$Zt!J5$bD%iXtlT4GAt`\^PN_O/M%.GW>,BZ"sG6o5Ql>GWA#8mPl3`_[3>+5kR3PVAsU]D'ipV5SkD^Uu.g<8*JMF]!mB2B'='b8*IC:c4Bdn%=OdufZ\K]@@:0t-QXGmUL?`0^I0]]A#c$:p*,K%118&rF9b:]B37oWBCn)_dU-7kA/^.FRfh4#S!G9cr:@)D%*at,t@BXQWfB*QT%42IElR!Ar6]8+(KKK[)*]t]8$afmZ0<[baE3EWC)W5]EMD@c'BKiQ@$Q3gSK^q)R/h7edpTKrfbmN!j)JYaFh!@"1f#J)e25+I.`%*<8BKJ0kG]AH\6S5jLNd^EN7K"@V_Z`,Gsn^%g@`ND+k=!Dq&BlLjQJ89b,6g]:"_LJF<A-lRWu3^D>H2ut<h!"//pPma8W#cJaE%`BBmj0Yhj`KnLHHZOPXiV?AeIJrKh+_tLn['jjer$S$NiKeKAY7tn2ClA+1?BU-9%l5`FGN;*Ffql]h]LXkj:YIjdC%&J0;rZ[=^%pjrG.A#9@8rD:ob0@DAtTN1d'01'HdK5'2B6*DfhqhJ7VXrfrjQ9V%6;,q74&H,t.Sc$73Is9/Hr-A+"d+6UuirAjcqB&dcU_UrM%q2+b-O!d&/KF7m=)RqIKO?3_"pjqg!aAGL**XP1N7heT#'T<;r&6BEIp8!(R8P042VZW`'ZpDY#FEDCCoJmidlpt,B'[!3T,XNbG%,u6Q'rZK@fenKIhb%/kjV(Kk0G1UP5h69E(Z7*9CL5ki@QL/Y;dZ-K5NnrZcD72!<%1mcqAJ5CF375<KA]&]\X6s-DZ%2_LfnPKn%-LHQDbKA*gC^3mYRd=0^P`aId,`C&ffX3<cCg*8rU6S>"PtJJA;CNl+'9tcP9M\5)&]S]X)7QYGZ([#<q->/"h2EEGjH_eP,XT!g%]mWKY(M'bFBhblD=up=rYT\U)Lu<AUF.H="7=/ks1W5f0*gX"O2X$-P*b5YOAsYTss3Tahd8Hj=Hd\Xt6;o\>,(s7o"F4*\JQ=hZ%@]Ec+=&Y\SXu`)lM%Zk(m)$%_d9]ss?(/o,(%'4;Aem-VO#]"RWBk>W6^Se,p1Eap!<jiu5BKHKO;nm!#';)tBS8O4Z&<-.g!R@p%""Hn3J94/YdXXkRj:orPA/%:=Zj1_ek98r$9BNWFWDKBYOW)apGsnZ)l4b^ITMiT.RfpeHc3Fgg4,L*0Nh.(Dk#STA@tpC,er?BZ%_A^"f"q35A<a4-g<XU]mM#iP%'X56@(b)n0SnQ^)a_E/+7l>J\!hO)iFQ&rF)(l_..=&%7SH`8l5`:h>E>lNUQD:A>n?NV,^,?<L%n*%*t`0i3^/?F\G`L==*c:n+Uda-X>-hA@iQ0DVCm$3uFRqJ,MDDobG8Z"LScLBQcdd1#Fm_<r8ps/%FLcL7?B4%:VrnIh)f4V^?%MERC,fAE!@"@&l<`Ce'&o`&>!1NV]6ii$OI;)D-ZH]j/m-m?G.AN\h06l_eILq^".']+6&RNc6?=T9Fr+t6gGcV1>1G9SZ#s2L)O%I?<@CIQJ/C*3D.!mR:jLk@jn%Lqs%C.b2p"dI9?ccekZfe4ELf/Yn`-:7>R9h$N[!TME''R[\j8#Pd2?-@,g;Ym!0DU-6`LfZ3#6%+,[TJpQK6&c^#h!I6\:jT-TIgpEPM8,K\.T+ed2+,]!%D>Wp#)dE=dX?6[Lc+>n:,LKGOu3b/ts<%JbX(X,pbF;4OBV'f.W3Y\3"%m-3=jj3!Q5:U(-MBf/A<o1DK-7.WZso>l*!j'%)gh`VQM[DIi+VB`[P]W?ElR)1I]HqPho95GUu%mY&Ilm2#4cZ;5?SD)$XSN#"R%Bj1?mH1WK*UU5moR>4Ra>:*n^\62<1D+@9:0.J$Ghhfui:R^3,3h[?Z(J/ZfM;;ak0=R`sm@!?aaSF]=j?K_.Y'Kr`bT8gO[]@B<%D=/X*]^0B6lT71neAHM6;-=@ul<s0MkX_IB@ZtH*I-Zbu\sfL&a+_.)_\mAqSP0ATbRdMp(\Asl%)b8u/<\.gM.D<;\.Wj5p-J+-%@W?a77^?hs$sB"(11jt?.]ODVG4M-!<b:#8]+R?lLeTQJJ_s/4@4Rni>m-tmpt7)Jb?-iiW`5j)M/"DeNa?6FFlBY4`<$a2:KdT9%8+q1L+u9tfd7;_9cC3coX`<g6`H>*hS4MF%*qs--;<(<MA?))D'$CV4RoOBC/1M[0<7ISXA>P_j</#6BDlrE/>2N:j</"0YE%m[)%CiD0\gr+t0FapAk3H]i5aX19GJt;9pfnJK&dqu$&;7C!J)Bo1^N]*Z1dF3j:a8r@pi2uCj^!Y@DH.)sBOMToYOqC)+L@E!Mk_oem%$";^&6R@Qd':U@,%l'PKG]U=nZd@"Qf]Uaf[r%_mjF;M;qfBOK5<\K+^nZS`f5',o@fUfdR:L64VhO(Ua\3R6EEf"Gk8M2SaJ>0E%^r41]^r0)@UUi5$7Z/HRWfo$<W`0[D9'9_4"LJAG3)ca;i>JFeFU^c165?r+<1QFZ@\q4#I.7GBXb`Z1<j"LBq+6gO69H>)DBL*s%?6NH;iM;nkp13\['l.Ik'-fT_=iWS-/k[Z0qA=0;PJlFEG4c&D]lpkZA#jj(%CW7q4E^cb;.h%/:*M'K31ZtP'D"2a24^*']UP#H%B`Lk-G_K?6a0+-6VIe^T3Jj=H]=F(T/"m0$Wo"k7njB2*[X'N#HL+2)/S7%W2;1HIm6XKFFkNe:Z6%1m/6`D,5*.i]%\ROo";6;6%'2/TF@"1:h50tOV3MjLbOG=ABBr&4U-GiKq[ki'Z3kGr;Xdb#u[?B6=fY_,D-qNC9`[3AFUFKXV[*0X0N\_@$10pp6lB-IWWWAi,%E_Bk<-NE-t3^tAJ-2K&R$0fO1HLb./.%T4G]U&GT%!*D\=3,r\8af=5`f)/_H?*UY1@t2"dR:"qOc4g;Ec(6c3*=hLR7Us`jQ;E^%l3nrR4*#QU30W!71-H]"osq!i]e,ZGM\uX1Mh%?Hql8ij,UTI9IjCfCSn-%cR7.L/>V]0X7(rZp]m-8`DDu\$(a.GGM8jrdP..?f%+T<hN/BDA%:#qb"`:uI*BH.n5Hh&8O#N<b/97(]am`9$>aO-GJ.o,/-LoiVHqNG-EZMB_(YB&r1Y+B4r/U*2$=WGXDotdN<\&hZ(%F7h=j0+++A3jFlJGB7mdS'+qS=9k>%@WN9$QGgPd29tCMI]fi><p$M^Dj>Ygad6Sr:95$W!4O.k'nWJZ]#qjk1T%`nNh(I,>+\K2%:QoGR9.[m9F"BSW31,n2?+f1X'l?D4Q)_)gB5d,(%I3NO7#;MZ00Q>Zlt8Md1@p,Eo7L&4JpG1;lN(K1/t+/Xk<W`i2c7tI.bqri%\0Gn/'11oD'@>,XOIeq:<u:Uk``t&e_Vuh7;`i@!F?lV4oK!kHk\EoEH$L>LFCfIT92"S3?.kFQ2`hoa4"B&;aCF*Y>abkC5kbd`%S;47:_QLAJk$VK`dJ[<^hCnPOOU#^b"*6l&eIU5W_QnL*3cTq36]@T]R;G`Y5D4h<'$s"c))C]E9Srk](h5(^&!.enFT0ZTh-j5Q%[DM:1A&MUsC[NQmOAm#fF[:itWb]I"CER1aA+pm:Bq@Q^qT85??p(M5_\kNRad.[sh<1re>sFtHq<=>f:#0R5W6h6XKf6j,60Jkn%!,R,,:$9(Qe]^L&.f,W7G(3\DNj>:TcXHZlV![O9GPg`=caNX4s1Hm['C/!`>o$5%OIGleQ6;Y8C*Na<SQKuVk6;5g:kBri33nld%/.P21B]-a.@WDgqjA9.mg?5QO(jiAO;%P2,M0+%t2N&MuUig95lWF&f$G_$)\85f:2Q2E\Cf\MH%H$[i^9\TfUJ_VcSJ+XY3smK(%(<[+%=_nNt3=(7Kmcp(P$?nr<>.JG6KY@*=1c^B0A/&+%#+$;U]OXg.FX0\J3U7ge5OjbUXmPTKqnN\4O:#f`#adaT2*/O1'lc]'%E^Up]D)/4cNU:/b-]?3t7eUZ1aZ=sVe#Ym(Khn7-_O8P*;sC1;=dCPj<4N4rI3cSX3Jh>dd::$e8(*@;128hPf$e@uXZT=FZuNNA%'>1)e+=m#X759[F2)N]p/@lfI7d[Dk?;u;LdA;\"lcf3OZCmaU@u&ku9JVND>f1dJ!Bfjn]ph-"Ss59p"gFt2_ee[=g67:\g1)=:%'7+.96973*VItUCP<bYP3N"c"V7(\>X_Wup25elk'5?J((k`LQ@%ADP"%cbUjR;<V[E]b<-db"5Ici,l^R)0e6+hEUM<0R,c]c`S%4&SHW7?k%4?EJ%m1J2'g?S]+!9k-jD;'t*Mct"&0;M0@W,h5S`9r@G-&ol@Ec72PjU\i%_3g`ob)L4)t4W1h&prP>mAK$0kFKgft%,@(tWAQI6*m^,,Y2Eb&`k5:3@Ng`n#h35kd59^T94!+b#EH+8"q*:U6MZ`7u5bL[Wp'&H$]7@@+%7$j:rXjln9QWK2e/8H!Ra)g%%%:h<6@3rS_'C2@EDD-Rn(Sd8Y@f;#059`R8@lqCX\]6p>NtL2Q<K=IWT;=I6(G(pmYpM)`DZU7S"-/&S49A[p'KnYVM_b(7);Ca1%h##U0K7<V_UPOKhLOu7K_O^h[Ndc*^"3%k#(m;*$p^D:RT9cbX5!0Fe%q!aU"pr(hM?BGsJI<-b[AI<`X]P]fC>GLY"ja$0.9'nm%a.3cC$#=+SpeB@6hFG6V+_M(0p[I@H?Zl8W<:BMX^d>2;9d*0?@ObO),n(*dn?&6l+_@b/rngY_p`)M*.f=e%_Y88S<FJ-]JV,qj%#8.+OM#\e$FN"3Aqs-Q=Xi(\lgTPM\6EpOrZ7R3*fC0Jbo*5Tf+WfMu8L>]Z8(`0]d%6@>T0%+AZ7fB["K3.5."Q"Fg7.1$[lHX/%TsNW:MV!,dneB:0/5,*EWh[l%^(X?nMIEEM@:q5`I+>S[[p51FUA\22=.KN$X8-M#`)6!AN[L,TZ=BjScSnleM;11Q>nbXmbe0cq%][i5nei^;%Yskk(l&euL1XfZH%")mN;_qd/9(Qj8&#g?#Bt*["T6q,E4l$/^EEAsjceO?^Z&oJL.#uO*2Eb`S3B#27mcle3nmd.J%?A!R=<;=Y:O;n8<Vn2k.S:@(hC8]@lVqcdb*.[#Mm*l8R:@8"[CY"p>HHe+DQ:coNE\HSahodTuegmeU[%T9[RTe2&N`iciR;6s]%nBK6FFVb*P1\[tr%GO7,=\b2N3CPFVN>(2P%<*"gin2ndX4=e"XOYd@UUdYV/WPj7G'*0)=QYp0`ADQc[O4YI=-8kKB9MmlQ<mbZ%erSM[WS$"NV.@I<AX):T5>PBAbf1f,NfM='gW%IB@d&oXamC@@=m[63`<-79mRa`TP))8`L1iaj772*!Or[!S\Mc$2#E0$:T*-RT%V7\&U=YDN:3>gM)[Ydb1c&na2U89/%0uf>mE$X+JO&AUud9DGq'bjTDO]s5rTJT"'-g%Re:LS\?6.N\K3%b';3!I6/59-\WSe4I_%FUl>A!r56Ej:ahFi:_7%/=i+oRPl;98%Wdgs2P,<L895#6AL6T!!F9u[g*h%[(66k7]LPSHCTNn!sJnW]-ic2j_.BGRBn<r.:bUj%G)u]_,)9j!I's9AGKg/!YQ">-BZne`&Mn,hU*teQ-+JQ?oD-9k&^MK=BVP=f;2f5MG7EVsR.$<!?5hZ`anjUH[&F8ujX-dMDtM/3%`MePj4ZhfnKVu/NLRH&XfI?SP$_u>+L1t=YUpB3?KgZj!j;<'X2Co^,9,,kTJLIBUVE]L=BR[m5)QPp(L<Y]h)T:>nj5S1=LW"sC%Ukj>#C&[H7c[PC(lI3isa2N+g5:^WgjUVMu9cq,pJj.]eUXG"A-gs\#kj@<K1o?Uu1<[R:D7k06e9d8Z*qc$hS,?,GC7RmILY6AD%FkN_B7botL3NdLf@p7@Ao4,ubfluRkkh47VNZ<3'W&$s"3U4s/j?t1PFZMVAXcArd;F&jFgL_LqK\d(0UPQUTN9b.bpA"d7>FX1U%o3TDhNdjo`)raEG%Q440(bZj[DI_.F7mXG`BC`$p@D#\!7aFPKoK8d&"sKF`-^#?qkstTG>!Bm]rqh3#D16tWF8r.n^\k+$I"K`l%[D!`<fsB=b1V8YbE:b&l$$>4Kia$171th\r--CQKVfIdhT#Q)KNV;ecKmPJJ]k<Jab;aEto'Vqhml!Z2cpW&db-:FMjXA8MPcL$d%(9:].bP[$"HU_r!@4"QTAo))!BU5`s7O]E)OhcY)FE60O17VKX-(jQ8+8!Kq4l$cYVN6#6"_^$q]IQ2I4^IqNi[2r8]@CQbe*Z<_%LY6`2qlJLV]0h)A)*[6r.C,E`ghr$H[A;FK?c!F>HW\/J#ZC'8jX9lV0\*=c;`tekqF`dS[MC!o34SW!T3ku[1XU[n6MJUJ4"CG5%(okR$6DouWPc.BDCsRh+/+9?,^hqDB1*Kl)kH;oS^L*e"5QB4e^7%-A!r0>R&%LbBDR7QZ-?31;Q9@ksB8KP!2e+5OGg!0k9b?/R%r8$=:r*;6-btT$]BMo![%EC9>UdX:c;fe7Wn?m&'I<,Ob\hD[-f&bK(I\$6ocT_AaaMU8Z.FIDK4^!gdSb=,H/^@Lu*?FFb_nl51%c>hlia[E$PaUp.nW(4rtI?[FTOaQ'-6]Q3BQVG27e<`-akTht%edhL2T27/64JI/5_p^'9\cnFf,OH1Rf2B?5Ui-FsTVo&ko/dIX%9n[5?19H\9dg'KdRi`o[:fM^"5ZFk0eH3.M#r<"]>_(?-<R9HZSK3.Lm89Rl->n72n<5Aej&!KQ*r<@Ln?5"*^\eGRfTQ9+:W._M%m+@:#\Rmpp5NVO/c]M"b^[!nMH1ic7Y,aJfag58uk!+.]=PCC4r_/4t/tT:lVC1e>M7OnohrG94p?AL$,XguYHOfmop1Le#m-ND#%Ss>FqPq.b:!(bm:'M*YhoFYF"f644oPq+ruC"pMKEkE>==6.;Wd?5t;j9o['VoK5-5[0oaD*kIqPD)Q/QrJ(Xc;D6cofSq<AaAD&%+VQ3@%jjnjN6P*/lKLU16^mL+:r^I$fsdaZ><0FKS6\K@E0K4ldMo#@8o(`(2Xd*!hGY=;'Li7]^GV)K"]kEA(N'0*'b\"N@Yakj%LR]HQJ$0T:lCtuFU3F'2mooI/jn7]ob1Xb:_1:e?7J3iZ4fi4<N:GQ]I\jB0h;[G%2V[PHQL2*B0X!CGC7-<Y>\@[ipVQC\68lB;%D13q'2]3m0aY&u<"#[+SY1S/>H=r_E]\bXqEqNQBBI;,L;ZUec)QM^L9m!'Wo2jrC?Rktb<`l3>05BVc2%p.K%h2;5,[p(5L%"r=%JmD<KK%@flVL`R,ppFh+)TAQ'pp4,_?Bc'[A6PVjA?Q62oScbS/;_h<M/B+Xb*1I0'.$8B`&@)./01A1R8tQn&/in'hj;p$P_SF]%DfeAj1$AgO$KEi)N9$MVHo"\QE@VVNH@6A<P+?/FM4@hJS#M684'EY%F3;EJQ.Ni/7*uN64%'-)FqPh>\fh[j9g9CF+IL7O-gF#b%J1cI!AJ\h`;"t"e+R@qVFUnE^<I"Lj?i/)i8*`>kZti$!H%jsNLRLACJ5%"4dr#+Rc2=;J<].4%@oFrk6QRGqVkee*07(p<Z'Hg!%rEnN^dd-rU0X68m<mUs_S>)bf*IVQtW\ID[%181;/:BqD"0$K%Bgle%IGYj>p*?V+,YWC.:ta2ppd?""j/ESrbU`4TdCrlXa[k=g%h(cVc(0181j27pek?#-^n(up9^4,[SD?5:q,=gAZ+"D4l/TQs"dESsQcc(oFn<f(S-@@Z0#7)HC80DK,N`h!U2(VfrE]*Z5T&g-Y%R=UFJbePd!N07LM&hAm!Z5.SP-[Cq*K6!k"*\nW"8:"]'Mu$/d)q$],ptAC6?Eh2]r">R=/?oG3P8)/VQuY*j^!Z%/6;W#iOZmCW%ki`gu*?WKuT&M*6:V*I-D40mX.9EKr`O1I)3ajY+]f^:8TK+L+1hMRnX..nVf:Ed</?N'lK(K8BV*PKdS8XoY9l+#!<iu%.Z\;P_%>M-?TZ>?r"X`<@YZCd/+9hrNRL/^(;_`MXjCaOJXRVqeOi;;JZgQr73[),Vbo<QI.17Yq@/2(XW]W>ajOhE@2>ro[OU<2gYamCk*%m*b$=Tr]l15W=i843?\ao=8Nm(X;'iaFY`FC'kc@!ila^4aeWOaad;=n6Du%8^!k&N4)<CgQ]j5aG7LO\C)^&DUU%Q43Lh`c(=K/%PFsJ6T^FrWUef@K5/Y^5$<IR^Q4+pDCt/LZfVfb*Tt,5N)r8)o\=O4VcdUM7c8GU(k!(&OpAY3&9L&+kK=01Xc,o4Hja$4rp&*&+%r-5RgKC1(!T,39Q`Bl/c`lQCZ\CkE1SLfH]fEA>DA/jrKd:erdee&q/c+U0P1%B-e7[SJsT>J\sk8/>cIW=^"L<DGWI84g9E@]&g%Oi7,^idQ6#EDQJBOJ6->I.5.^T$56$HuVfi-MZ:qc8S#qI,n=a^#bd"IV@:=:IaH0VSD<D'@Ua`nT]107crq]p1(_R/:q/OGL6fb%0kd*ZenN+#pCQV$*L]:74XH/=7N(b!IQkJ4g_u=E)p_`Y89[dq;dr7@l/>JI]W,^:>,``d[(l__l&5f"1:M?-Ap_8O5c6,a>bne5%nVh?uO/*>]W-Nuk@5/FLb_)F]i1rDfm\`./XYJ,gN0[]R,g/qVN$ql$Am#.;Y$@/?k81*VP%AjW^plHN9+DWGDbjr&0Qu0qSQpJJ%Ki*:>P6.B_=tS7$@+Qn0X,;=A/dk\p41(=W2_+O8Wn=6&'u>?n>Z\nU.b.$^i)o#,7!n>Q7s:18OBn&!qq)nNE_YD5c+)UOHBE8P%h3h1pm6Rjjq&^u>[D\G;D_MKF,WR^e[Ifhe9osg=&u4'Ckc%E8oR7T:=Olrp.FU5U`h=3[j;!rTog7/d:.X3.`j9?m`ob"$0B)P1%AB65fcAuJTae?q&4lbn]VAdo=c?F0-?>NcFf!X>p8A.HQduka=Y;VVmf9mqn`efaNP!I9Kd&%.42RsFb(%RkOE9rChC$*2h;aO2"%f]Gi*#m@$YDX/Tm!^C_s.V0?ZhjPVT,Zt>4E[Gi\8JZK4F0K6s*9I1caCuHB-!k9V%j!<BQKB<#oVttDZTqHq&BZlRh;k0hp82EC%Xn<&8)kO--/`b%AnO7F)l0'7f3MWAMPRDhD0,MAM\M8AF[phtL5>S/\O\B1PY(T;cglq[u:nk]u-8@^Sfj=Fl75?<>:O,Zk_`$pr%#4C'T]q6.N/(Yf\XDJQ<;dN\Qf[Yd`\!`Ydc!K3IQ*tq\GAu4.32R%i27[6\QoVkXV'_V[6^m\@VW7PIq_lcrh3,3^:MijCgFG4r%rRGoR98/Q2s6WHGO"V(TD*j:^HSocU(qBF6X5DU5"E'1Mo-h*'9eHLMf)XDqJEmrcgJrH=FZ>T.\XOjrg<KQ@eajd+jF=3(r(?[\%DK<k&?1H\)mos`)XZ-..H[Y4^^1*Mp)P;+uT5VEf=3pA]4.oZ'dtbq%/^b2'\2@p)T35:g_RKJ3'H6f4\!\4(P#,fC^srg1-_aFa%*:o4*6kM79)+CVP%?Y>a>FmHi4rD2X$_SDe'?:KR'B'sO)=u;F'/gK`72k`DLQ4oF^:K#F!.t;dXTXR8#o`aT_F4dFWVjHe3#e#Z%6YhEsJ[G19J=L3@%gcJ9kFZYK>lU/8me5rA^\t1%I\[:4FE#)O.\EZ0U@O2>3(;"@J5^Q1ras8"VHdTQ,?bT)n-;Y0gbml\87q!o%_\^n7_Mg.TCnYY>JnsGQZ*A]_G;0#h*("q(EX=ejdOgX6\;@no[<T&;bj?/`C;fnp27Lc6'kDU-gmL7d1`M66o[?t:Z>!&Fb6g")%,6kK6CN@WK4If'))&B0UlPeP\-Ls>R8=UD@\sY*(`KXeNS_TMXWYHgl_F/$[27lY%.8q)WW)un#MkMl!O^R(klt;(XO4H"a)UDUG%^(KhG8OB6;%>GV,g)CGJG8N5_-;V*AF*F!8muIgfKd>>LL^B()cCE@!1S^P*-s(!&D?UX+HNaMNGB8U]/lRKC`:O`n\0c[(]j9!\%bR$=$\5LpH.nqZ8C_<C)EnBBl&j^W6nTE(W\u2a?eB9EoH;kSm&>a0HAVr3o1Oi3?KsdO1^L)??A=="`W*?_tgfF%lTkT>(,M=De%A=GOb!_5jGKoGHHO[Xl.:F4+HV;;ftE*uHX%Lh`Y"-e/TPB!;CI02VYS/UpTg-'*M4[n7ell1MiA)*&M3,erqlfG^/SOD-j\nb\i%eIT@a\q@]$VKnQcn\ke4`<]b/csKW.$S$NiKeKC/lC,Rg1o";kRP_-ldPEXIm]`h60d^OI54lhegKXP&/oQ17oEPAFpt`jd[uWKB%Df4umr;,_K]5GCIIeO2anbgY@=)Zr#5Mh%H^&?9dO4TlY6]'EfFgmu$c<Wj;'smgi*knIWlF?iTBDVC!nE9fUi*SBNo@qM3s&Zs\%61BC"4oA7E\^O>RiA:7>2:kW'i7[0Sr,b^Lrr*qYN;dAr"bqpiDZ0]eKO/H/dn^!.JaTl7mNR=uC^<RkcsP,hFncZo^jseE'=9YK%Kca3I9(4`IH"0NO)?#9.ZlK3ENVZQ?*0trR*OLZt:K2Di?0gmjZNASlXJ#9PC2!IT1@WDUcnBgH(7t/`IT^$+5OE5l5C6<J[isrs%U$W*0F$K&071G_AD2/*RRsiakX7#W`cgLFhXt%+A)0ML3IPFppd^1Co8_6sLW[hu.TM6#KhU\$.s!BleA=u`0[ansSn@ZO4WkL2n%"o:TQFu%)%n0^"Z4j]O1k9f"BI,Mm?[(@(+lqM?0p.o%a@O=lp5OEHsmWmCD3h?+F/Z_+<Mf>SdFEM:t-3LH]R2=>Ke7$dhkuQ+>%8l-*e$#PP"oLiPkKdT#APb:g`^t*#]n@ZNi>pBoEKp_<%G)Xo/:M,?-TJ+j@9tG*g_1hc#GO%/e4io:4B^*YR3N!f[2^gE:9A3@9%G($@`:OE"pm`8'7\>ldS<Mm=A\pJ]!o(M@hCZ(W*#@cD^L]9Pq;<$>SoIn^F4HHMj^BXOEOFNZ=I`$qD<TG!Q1%JIR1&>7%L-[7P%/dnNF)dnq4g=0D,Y;K;6[dLe=dso5E_WXO@qM)r_Y\Oc$2M)*YB%,NH9Rd>eRZiff<_+$:p29RqS$-b]::Pg5^XEoTF<SoE2pfbJ%"+)E*iSgNL_<KIlVf4@#Y&"I%+<NKO,`9G(-U8'$8-p^J1>kmu*mj8j`RtKGO[lTk$N]8k>19\i=p>e8h#L^b9I4STY])n'LPksk%rrf)m0kbh8_2e-c#fqH,>osk)dmY?V@<*chE\[7t<d9.7_T:l3K>6n1E>&Zt0D_'a#'un\]2(Z.%K^pJVas)Sein?B`<_pRia[`;%K9K%B-k.H8_)/"lK(JnMKPBap?5Z]pd+YkS-%sTn!(>>_J00,K(#q`&co46,rMZQDXRr0!=DdcBC!^89-Wl!m+8'\:.YGjY?%dV1%aM7N*9V'%BG+jpYKXgqbf1/-<K[A6Me=Yjc"q(hdLuQj:0-Mr3\#<mm7Rm.XoX;F-fH@N;']C'q*l%9VfeE\p/Hp9INYWG'RiSIN%fs83%ZCggM5c@MgIO,t]\J;K01sduIMLEU3>QO5TZj7Jc8A7fm,6;u-(kmpi#Ab,(!DFc;aP<\0+.HReaCkg?d1TJD\)]qc14de!%B]s@(\Qo>jnN$^1T_Wd$OVXCJ6Xbo^#n[L9s0DRX+I'\Jl);g^o/-L&i2qP5[6oTR!P1GoghmXTaVKI7)0"gVT:9\r0I%s4l62MU%kE`h19LsadY#5](.-)\?MggW)SFe$?%W285kIKF]rU6tpqDkC11dI[i!%Q2uPQBKrnKR""Rt$1(h%8ZgK`Od6*=f!f$eaYa@?`eD%N%5<)UESRZOE:</r!\bIcuU]AK7-Welp,RN3</3_$^[-G/'NVG#.uAdh+5X>5.^l<9=^5&!2[]R]e@Ilk+;YX^!J!XJM<0@m+^`S%$m<0QIuY=qJc(PE#2&<>020q6d]iL/_XaV'dnCm6;9$8r`=9IKoHP"cUBaCqhH+t"mgo0E5<jY-q\.&2ol$)<9*PeCTX>&I'JMB<%YVQp7G;4T;5WPn:Y(90XeGWNS':?N2Co+kV>t0W"`lk$:f_uK%)J6o&LOdA_8!]U"CX"sIj>s2."d%^f&ia7p`3Q)PJBmmSJY"a&%%_ta?n&c=sqLM\u8h$^@Cu4A3;$0@R1uXaFKLbjhBqJ78p^7b]&lBp*h%)/XY6>+9hreFr:&qB\\J^e!&bgHI8jQY6Uk]!5G2N\!%2ep&*K^!\/PQg%T6\*i56jZ+N9Apa-7/IN4:+XK*c^IpLqRMAH+Mp)e,S6tjqO4kf_/kZRE,a::='.8Zg.jHu*X4?RakSDFSQ"i_%1\^K15KDQsVFij&lc[\42?m^&8*7o#(ok@p(>XXChKe<l&LeOmR*)e+_Pj?%-LY\R+-,jkG9_u)"7Q:[GQsi^+M)8C+H?KS)nA$q%_%TJ4<_d(,?2H6fJH[<67epc!T4?H']R`D.*-6(Z&K^^f))?2"5:3X+$d>Bn=fDeD$M-@Sb]>`f9,r^Y0niJI@q]6"<^1j*,LkrX%NF=/!(h6fJ(ej9uL,eGWaJ=F\H)BD70nj=ac)Ul_)O5cr>5]H4%g!n*IGq0piYiYZVV22M=?EkcDS#t+d:'Hb$>W^NhX1V%!Aoln%BNjd9.'/tDlQiXL^j?&.2.4@6>>AU/T2@"^QPQ8#M41jL3Q_8VA:4k"ZCdfW=NZ<`_f!Oe-JSmmLq#RSAA0WBTXM:SWuk(4;2C:=%Gnl&Hg_cmt!?Mq>:'c8PN*sI#[CSpOl,r$G+oZ>h:L+!4nEgR]N76(?_V1tHZ(bA%'m&)L$>\ss\,4RI:V-f<CF<1&C=YWRS[Op&%g:=UT2JY!b<r;j0_Y6:.^&RWrHLos^a.$/^kjb/D5e-pXNnRe:3+jVRJ&d%--*tj'K-9!KIn^oPC.AG5182;.QmE<3kkl9G9ut90%cHLA:'f3;*Hi31FraH\O8'c;01eWaVJcO,glR_0/+4+iHFd=DUI,E'FmIcAVq"+%@rqbo/oDQocc1i1k`NoP8#-&Q"d@g`[U$*-2%U@M.h0rsiIJtuGDZqWn>87-bQXD;EtT=F70<WnUX'A.qR>KBr&WqM-\/$ilM&6BQfE.UrY1C18fORS,X]P6RuOS5W[^sJ;Vl4&;b%<`%8>RD%J'DuNDnmd$e5Q!,*YLX?@m+](C"2Ln/KZYco=dA;cf$45/"pVJ"7F(QojVD)Zb6jA"gP?.ot:210ED]^t3IqL!Qk:0I?%3JU'0MSu!8d+*j`+/t*reGcs;&o?pJFZYY[`M?q0_QX>DCigG;P\6*P"4uc*AmA-7cl<kicJZo=9.Tra'CltD<)iKbLpclPT>IN1%d7WV.J5K)F[YCb'YY9OrK59$F\?W8L1kR1%6Nd,o(k0:c=9:2FXb^EmpT!T>]*>XNg##'qB!pmacY)`bI0PrTXao!b^4j7:#b98S%]C%d/6+>5SZpH;_d*$#uA<$$rd+Z3\a'P:d2Ao"2$n\Sp$%oIs(!rJF9SpuKR%(khq=3b<jon@`p*\=@K$b_&,D5i-X9-p>*RtLd%:]0BJb^uB\*!G.(_fp1^B>nnk9.!Lun<'Nog>m*&GcUJr,(WoUA3'cPp^p(e@_!CFBb?4USGgcnEOT!g"*e[iBdPeJ[NH0Na5T+r%_D8,M_&%t-f5[?sV\r@\:,Jd[c..r`9@h??1us8gDas<ibcORu'=d_OdAE>Hffd&trKGh(&&5aUb=4[3L0o*%AdeY=b?qiih6>SH%l6^2C8EaGX/K,67IQ_:%?Jr)`%3B/7@87r]O`0S(6=Fr;!6?QLYN8o2%peG1/)O`dI9jaXE=qH:Y!g(tF(0QKa#as.2<,LSKS(uf%J/T#B!bfh+cnBo%jVY7C5B+Yk^@7sq57?D/gAidMh!u%cq-q::#fLs)OItk9cggt]6Q=C%!"W*gUEtLAd'<rL$A=_<s6/+*JC/?P%Zcpp$@'@GO!UMHnL7J)oU._RA&B'r0^j+gi<oC5.FUZ&K`b#gM/><CY(DsJ25R6Y3JH5pK!Y4:S6RWker4iCBW&Xhhf<Y%?JIt&d%4GD#cP*;=(nKQm>WO$hmNlkgi`t0-Pd/\rX!42$;C"u,]Wll+W3(0m8U]:T/\X1U%I@t"'-A?%ApY>tR1JUl,5'@&*I\8lt26(17%_o8p^3:je0M7@8o&>L2"1C-ks^,eDh%bNbW2"D5?`]onh>,KeR]4a3in_bBH)C478Fs[mSUIi<KPC<W57UFIs1em3?/#$`N1].>;%E%]8p*!+S,s,q#%1ZO_d!N6ggU<Y)u5_%0+O?6JO*3:\P7:`d0H;<t-kV>F-hMi8"&s'-YJVV4LhI\^lQ=#D$>CIU^D#'P<YKIG$%,PUlbMTP.5,%[2R3CbjC:T"Hl2\Dfs*ht=VABlD$FjDSj<Fi$Y)%;o[X,b7X_Z_mr<F!V"UY/ZWc'h?$;W:]Gp+&!nR2e.J08mjh%"UJ3[5R3[X5Xf_?f)!cM'G%M]0#`_WCPG(_N+)ViK8iNScXlS0`7D4/QU^U>N)N^()470s&;bIcN:?r[Q#EO5>GlhYhL\@/(dt)%%1kc2ALs<J#A:eOr^JM'fToHfj_',8s3=aRk[^m@&Cu!Q8^.Jm$UgltnCpI*hE"ug-+SY.j=PGQGPC7U_es:9[g.NEaRq%^-XjaEf%3qq%WUa!Ao.^-R'$3`)k&'W`&ST\mLY&<.IXhI7?<XHj1fZ\'VDuhcXkOQuU_03qWjJ%WF0$Aj)88fo^@7d:="3XF>c9a+G;#h`u%iu!K'#YHObL-A=7'PF5C1V2#]&/i:mIjW*VN=&[+eZ@bN`<C[S_f4,d:jGd[5m&W'fj\@HT\!V46:qr).+HVd<=8Xf`*0B^'ee0.%FDga>8$&>tHUco//3X`"Dii&J`47(^Ze\J5ZPd\6`=hLWgT+e2_:u=Te#hS0BJTXni-]Sl[5:ZpLeKP..9u'l,1'DCmB*S+&OM&S%EN_Xu<72b5gG"JA1:aRTg[!qs+j%0YXATsY.E9>Y9D@U2MoVi<Sh>RQ51])[\cBpmqK2/<U`sj_W)R;e1nC=LWt]K;2D47X*!;Y?%>",,B>W[S(X!kW<lt^ZjDI$:EE3\&:'PP%s.XbX"jD.`pj-atHk&p2A42McJh)iWog20l9ct#cr),@M]'$35mk^HcSs2#GLo"FJ+%>ku"@[\BH`Q,1J&81Ulm<3o!a5#/$k%4VEj"6N)6KGCIo_)1V'7J";`VopUnR'/]7G,FJ_)"JdPTVXNSpl"hA<7X+.F3F4u9tabo%c?1VK8s!+GpQE`RWP;0V.fQMYg)6ts`Saa$?^p5"CU1NtMhPIiJ)tFG/7aalXDk#^V<<mUA'(<$6,=jW0$lObeN,%h8@pt:E8G])%Aol+NkM')hQu)R573=E(*OfEULplJm5.lPc'jL??D,h5u<8^F[aN?6C[rI+<Pm5.Q3orBOpPB.\a6tBib%!^(OL_?!81GZ+YJ:/5%.ji0Nk?7ioPWsCK))<](C>,^JUVJl>Pt'/>Bp!.u_:Gj9p2[i2M^1SC>"fp")%L'ZS_*T*Ua@\o9P2AOg(`JiX3tVsV,MVRODtQ%%hs=n*N.BS;*%EJ_,kpW!K\0.ggggsp)J\hpa3iH<OBXG'Z-c;!M;T0A2iI?LFj$j\pXuD5%;rdD:nq<6hrf^(#Kp_oL'C!tC*Y>t%N80dqj)WC.M_pOuF(.Uh]!%i"8'MMP`\f-5[F$;SNNJM).1)Bj&>U(DE)&gP4Z`1O7^"uhe%Y-pVr5eY?JguI.DRAO&XY1iYRX7H%._t.BKoj:'I5](tFDJT)Q,Kd;_f`Q$8n(kYnWIk;Qbr>#346:3kEKk`AdKFZ@tP'nr%O&10DdOe5$=tg>ri/lMlE<^o[m@@(GgJW%<C#?WRk2*)W'n(l+(AX13+rO^QcF4J%#,RVg&`t;!7._XL^)<jMu*%IN"Zu$+<\t9;uV>Y;!O$SOL!l9noXXV1dDdY@>F#[=YqO[%/GtD9e$$*h:E]o$l[urm6O@:g!YEs<V()7p;)`OUfSlrOf2an2mB<6kn:j#a%l:Fd5=<1^=>FH+Dr6(6escA,Kp>]jWg$F"Vg;d:%kuM_>6eT^Wf=p*$oQoX/'9Nig3&5uR\-]//F75f]<CrP,X5F<K!hf@sN-6Xh7_G1qTsrRP1A#%`5EU1B->MrLYB.95q<Q52[\.CD%^Vl6\l;SkmWX!t&f7(^m^Zr^DF7ug5Gc0cSpk.0\a%J)WdeR/B`$ttoj6@8Z5Ef-rbY;IGlY\2ciup+Ad<]$hW65QUMqf'LMs3q$%>uRl*Z4h&8]j#<3f^"9/pQ1W@EWYY4=iJM&,[`Fe)M0/H<3^3J-Eka;+/!fr#gs>T6b(,%I0O'8Hq*N>PX8tmFct'%aP,@eUi*\S%Ocu3TlB&_,?V[iYe)@LTdrJ(DHb6,I,OU=AEX`r=!E)K<[aN-j'#hrE(^g@AJ^'5!g6;`D1;O\4HB-X\P3$a1I#Zpb157(g=n7l9%K<+4M[P([)d&4gYM"ue"D`"1=8:mfiYm!fr.10)!U0aqA%o#EN!m@1!TVS;Gi$Nn%%Gm2MM02G.bgo?5XTh#/5)hdq#?JgCH7HX"%8n]@eT[!SXXU]&[!JO6H3C>VBVUdi^C,cH5\M0p[$r#uP[CD?3-=Rksol#]4MEpDl'A"L(c*0\CCm)nB/2TsdX4eDjW!8BlGUkV:%#G,+k]Xga@oE)sej]-^(<3]sG5?9#(k-8O!;/,1qfG;!.MUcJe3]Hiq*'H$GMb(>MR(/FV\^+i:bXs5_Ko'$4r@p:'"].rjjnYA4%O"SP'!Q8Vo1"m\)NG.`r_NNU:RZ1<ubpFE5\=E$4_R_Jjc-V,U.Dr.dDV;JQ,SmOa$).`q)f9S1J=SSU&HjhP8o$E7.'UFc(To4!%$kZ@pHtUT@e]4k_HSkU"i'InDCIlH]_*3KjYo)gYnus"`q@p*Xp?KMrXl+6)k@$\oGi!3%ibF_<H9gP;m,V?7j[sdT'F1't^pTQG%AUNGV#?onh7AG!Y>=$Q$h'tWd\'gH6XE(9r*,Uu<Xn'R[:RuFe(@>0P_CFqT-Sqe;BpEkDD4@k9Ci(s\2su&F>8^n8=g,1)'bTA8%pP5nfro$qJJ,*aPMrODjpFdl@qX50;5E4Z0%H&=/_tULimdONr6D6-nnLei/./;I(494u0\W,TU6L7\^jo5Pas)D)!`rgBc)F\uR%"#KMgB*.^>,SO@[QHYUDT$a,H,6\+Hh,)#c7uE?\@aE8l,cSdl8hFm:&UhO%GT."mj%,Pt-%3mEdWHilVB_JTMnA.DaJXTF20.bC%HQ#AIO?#-p@QLp1N%Tfj^qck31t<iLk"`a[[J`rQ80rRt+-9j2S?aZMei[IHHLa^*;rStllkHc5**XXbPO+k5@$It2&#0+R[3?Ph%;])TffnAZ`^oLt,\K-HeD'f+AA9?4c@AD#0[)!Hh!n/P,dc#km<e,J5\83%XPYL"+"eZ*6"g]9:X_X\>K?Q#n%@/\KF7#WcOA<r^%M8r*h=FAU^oK&D=?7,?R"?Im<g71nMOKfsC#N9gi#A1poAGnu#IuK>om4l+!5b^.FoJ!=mGsD-Ni"CjiEMZMo_.7G["$/fb%t#Ig%dWYc\djVi$ci"uOjJ8/CFGA(aNQu/lfEJ0aLN1hK7I@;<Q02,C=of78=_Q#6-tUf:af#O<6@`qnUa.CJ\je\1q@#)uDp_(K1CcjE%!+R)#XamPUm6MiD1B@VM8I>#4p'NE<V[!-bNhqu`Ap&"cmm76ip`Ns.jhmjO3^"X#F.s-p:jWUT4BO84-tOR$HfI\>^o>\OPVESK%2[j9iiUT/\ECSE3mN]Nc_8*BLF;k4<c*fiu38Os$f]5'D<H7RZXqZLW4JL/+1^0`#,:o)Q/sLo'F_"tnP<gS+7O_JNm3qY!<_tK^%#r@Q<R:,.Zpl%I1C0GNh%;'`f3h7Og8p_$Sc(0I0+LKdJ)-gc<(B_]d:giE'FtNXnY]Jep'7H*[9mP)hh.F%sdPFSD.:3YVjGndF%l7nJYds,)0'Q[i:SC&2W#-ZK#*"g'kN<205k3\uHfN,RPd5o4]4sfGt/j8gEEY4L19i5g0JjXID(9E*qb>nsg%;[LS=a,c<_[:E+%"eE^=_*F@:HQ'1#11_bY=U,:ucm]KX8e<7+.$?!LCM/SA;o'*B0iC>207@e*-q?#3mYD*]G?rdE(-I&Gmotk]q.cb&&ep[i:UL7f%K;,)iZ*Ka@3pMkSYF]nuWP0/O&TJa7C4q!;d!=_)I:D?G5c'?I\Q<=Ip_<jg-jHI1P8>3+T6)d_,Zj3:%O!-CP/9VZfW/\BLD,OX%I9:'Sfa,T.42MAmF5cA<dE%=Vd,F4u).4;--^0)d+U6Q&(^ADc9Q$oo?&ZRhQ'>gGXb,V[!S[fDJ+Xq[\]:cc%&E7egssef"\;R_%mL.eW;HE!)1`"+S^bYOS1/q7@E,o:TAB7q4%>/s+"]Y"HPkoP5)KmFpGjH(io&ZTn2IJpGY?)f1D%5l^)3fd[CVk-K,(GNP/sRd>%e7;,4pS$:qgKp4f`DelHlOHc_!%MNu.ui,ZRc006WC)HN.KP:"Z:[H%K!)47-%ZTsKGfEJ=8GSAgZ*goka2TB)!tBS110YH[9lcU%\o>NVaCPYErLhX'#+>%ueq(,>4L#BY`Ase'=dMg]Z`BXf\$,bIgt'Va]lW$k#/m_$+j[`6eY31/ZdmRRYr?dI-LVUl?YrR7OTPi8%0_41o]i20!#GT3\&B30sk$f#j)dA?E23aRWLnmb1pr25\[2P;`,%9QZLhh.2ZHT*&59l)<=>m0MV#1T89G[nu%qD\(0Uu/n:$RM>%[4k4^E&:Fse5STd9ucKi1RGBo)hR'5.$2?sYc3e.%Zh9i1g<G@02*7MV(>bN^;c'Y>IiAJ?nBRrOnm!F3STf*'J':YK<iFg]*C\,%Mop;o0r#^/.dg3aH_*RJqi+a7\KiX-N9(5s;O*msU9]?uW"34!'(kk.A7_1Z!`8V/DX2,hqIn#77o1@jA54c2ZRgh_,o%*2TOJ=[%HP7*On6aCo4IAa2\5ON`qC!pahL5maW$ot3M1Lp#QU,<%BQVA$WhgF1IF*:e<\Y5!cI]1_`<q^f7KP2F`mO"*`oZ1%$=QV?];[7l%Q4/YU'Fq,X7$IH]\*+Zsg(m;Q'M+6*-;-d%.0,*fPK*)9'PRu/>Ep7Wp'M4J<0l.f8Q;I?j)$AM^eQ,;4%DT>&l`!R!;QaZ;8uVL%OJ[qtCE1jk7,4:kfSH9,ib)W>)N-jW9YGK&;)\sP23k[2L(&8mV=u+V"p+EQ0d>]BXqA!"iBaX^1eT'fq\\"l`%@[_TbUDj)NP]6%-k@ks\W4SL&46#LBA4;Cm&P\/[rO6`bA0p.'b.143L4/FM+S?'o_O#pnWZ(uWCCC@MS'IV^,VBI:gN5knDL:3NPWc7goFO;Q;N04%b<]])hp9CpmuY7qp@n(Ye2j'Y6o4o].?$lo$&JdE']hIt7mOk=:l\RUWQ,k3W#N`H2M>IKW5N=p2DQs?H/6N[O318F8N83Y<a.Hp%q4SEgj=LeAMb%:mF,=:8Nrh;#c.JV_UeP(pKpGJG2Idq$V^""2*Fj?#,.A@s,Zg`hC9`E^.9_)TZ43F)@3,C-[@uu'\09o67qfo<%IS^[iQ5r\nE`kD>WO7VL[?NRK%%6kV:8#b\*)h7DWa6F4h@3?F9DH*NeVsYYYNGPQ,HDFthGLC2'3)4Z,t(6]R$"Bbdl%8](h%#p%IqE<M-!o\!B2$OrA?].Pj],\#.m='_d^thQeCH.)Fo_eO#N9''V]7W`;,No?_;#@,QnaI(W;r,#.8l2;qppFdN7UEG<D'nO&S?Wp%W%A^KSQ*8MUbaOWH=m-K6'X"684C-P']VNY"u6W:7>5W!hE=0WWkF54(]lO@OdlMVG!IE1Qq3#p4R,=D-s=d*6rF8Soa5djdKMEI%+S)Iq1SU"3b75_G,1CSd(s#o^la-n>>LcG=pj4B_EQCRfJr&YIQ'cD@mF]EN-*e^@1pRQ^\l=%HAf_8[r%h1:8UumH[MEC"C*"bn%9*6i"fn]].0eNi3Tpinh[_tF&n!0qOOH`e=gb)h?iY`h2cRI&J>-Sb%Cm,j_BUVeg<YQ%"YDh/0;')q(KFpc.g)47QhC<L,P4GGM%5k5S@77%,bMFpY)Mu]g?JG[JlZ#<Zo`:T-RS>9g06NpZCK_d$r<.#,PIPO+rc>6?!#(fCsJJF<&1YuW;H6cM1e>-VTZUsmlE^\"^%A\q^"$3ldD<T\gp(eu2)"BB-<+CYJ)m/#QDeI8L`@hbmO:PbCo.u*nLLha%0`A!P((G77<p+VH4cfU/lf)I4r3u5=$ofO]u-OEnQ%.Tu?mTAb/:;^(g<-ar!.MI"?Z$YWI\]&:,#ELb[XeuQM/a,1aEJbh.+1!r9WVSV%e/jmUFW!4?<gs6+.`A,9KgiP*(GqWZ4W8\$W%J%4@ZHB4<83afV/;JB/\im>jPBq8G+'"a&%(lOh"qFL."\4;b8o#.W>f<&hUTV`GTCWq&<CLZQ(/ucDn>(QF*M\K745j-Ze(R6*W%%UkRO)-$G_->P\D4/?)X5q)3CKsqW^Km!`A.&PU8@g.p*/,`B;1'!08MsR>k@i;@SZm5euMQYRM;<r7BV?/_82tHjk63&!PYau0/%m`cV[FO^Fu)W@gn7L84k$J*0T[c0TJ.1r'SV:R15(K>R#]P@?miBl?f'O/'`hU2p,kp5'I4Ko4q,aDC\!:<&mT46%qTii?-iY=O<%:W,<JqkG+[E@1AbjET2mYDYs)?l/5flp,^7E[VcI<n)<_Gd$[8A`%!mcVk,3h:$_^.f-M.Ul)893P*j][9dRO9O*CqO2B;,n`dE[%OB"bkAtkm@ed;CdN4^:$=8H+#VHJmGASbVW`##8%?;!0kN-Mau\X;%);)7$F_=K#EDS_tpo<+Q/\`@@_<M:n-Lj9[*&85rtdLW^:%Yu*cSpQgE1NKr:5%nbmQWRa>9^l3r,D(D:Yng,+*C_0i;FVE5eEWoRKHAs1HL+3a5=AWi?J^mpHIVAg%&_&&O4W[O%rABIH"e$q'%PVhV,TVIo"73JF!Ms8!-_tNua/<>gPoPk*?%YVr9BLO$r^5b)]*9c7SOW^V3=aI3cR5[1j.O%^f'S.\="'*O.J4?Y+bnt[lJC@k'%fdQ&YXq^;>0upaEf`bb%/b4K2fpP\HkU/:Z+`%h.C@hjLLjCBuUCKT6Xes0B-"^-^9<sA+^qNV#*j@6(>,O(j!:I03iJWlh`24.Z%%9]\\QEMM0`m+luMSG:5Y<cbH28Lcfp"D:oRrVYtC8eaVkr$q;8W>g,ce=#oob7k!@D!F;q=WAG7:P]cfU,Xd;U66]^$0]KYh;Va%ku.JhfI)U#dWciZ;.`J$@;&:hW>\X`nG"R&`B+)Jj$h8+gXnZe[Q;itT<20mCKGjci)AN:HQEC-#rR]NPG7FK2,YPJX#7WP^0(o?%!6oVIOMZ+Yk'5H@ZOOk<hDe:s$dtU6((2lBU&LI1Feqs0/.L7a!BD*0DcL#36mF@SdsfB;>UBu;U"g13.KlXD)C@O766QEfB$3H$%S7E_0^AnR.1a8u7+aQ0".n#]LG%1]ud81S<f23$bjl[a+!]ne"3KaGp^j:SjPdLD981:8t0p$(Ym!0a9W/)mN)c2[E$5tM*prsd*%3nqdclI:i-TiNnq<]HQfe5p[Z%=a@=,B.b9ALoeL_'Hf%-&DE3.?ed=Y0W+'QfN@=?/9e/EjX&1dDDb#:J>3m31GN@(#V+'T`,r<%B'rl-F]!mV3N@^Y&H-8W'X%c.ku%Kc`p/R'Gut1*r1Gi*A;N!+E+QH:9S;`V2sgp5K?&au>p!2YC]+1Y(t$<UNPHH36j*aGeJ[g4%N_[C32"F2C)-3EX4-_6.:mltcc[!<j#qFS`3tHn\(`9s>b)/GEUo4J3Xe;%q-Ya0>1G6q>3-^`t\R]():M(h'IEt?%=.>hHc0>S9%c6\WM\,qW):sV;HR7*2,<o0j^8bN>gNoncSE*A>-Rm=hsPstoN,"eSa.Vp!@!a*NH87`htb6-/tRIS`#]`t`/+]L>%-9+(K<.,"0%MrK^PTT#C86^2;`@8Xbl%!Xr!TXG:m><Pr4Cu@sd\Z%P<.ZQ.InXZ6RcuPnRE<R[s!]!CP/sq]YkmW3FHX8I3\=SbDACKua=OLTA%ekYr39dgDf/J0u3/aG`L3#0(F)@;Z;+C'IRq+NOl4VP'RED2eF:A-1_P@mR.Wu1+i3tS>1,P8ENJI)A[<?VpUO=M/M#N`7d$k-\H%TT$W-EfpUXY_U$!CV7*DI:55lcf\F2&]^j:cEXJmJa-g0;!u">XVhE)+9fI3GsQU'$5D1;A-C`qU`!f,Q691fWk"I45f+LT4r12l%Y!?G2'S5Ng(Chn0XH]Vp>Je);<HSjiPKNUZ%(V.(eg`dm(mWIBeCg=M/lB2JVkS)UEi,(iT>t`C$uliBh+<M_(1d7gSLA`[X>MJN%(#^<!:6$>9i/%9c-Tnc/(%fY9;Ib.u.JT<]e[sZ$J?d5.U'lMu?16qILh47<k6Km["mWohq8-ms^`Kl%Qjsq%!#3;HB*+*A<B3RO%@^%8T4G9Yb$Raf**i.1o*&lM!!0nL4,E%@tS9d9Ld10gSYoW5X(2JuHYu`H]/h[Q!D4F[m77P`kH7`9JZQsRpa\jTu-.D_n;jf]N%Mq9)MJ!X1`Wm[q9mG*jN@kC!-VbjK.-5MPU07+gI>EH6SJZ?s4TM![&ol*H0$j*J&YK8h^Ej%qK,p04i[ob3?\LU)@V2DZZBijDE%9f^^ZlP#p-42k?%;X%gp<^l&WetOraQ+-9gEGiEpZc5rs>nP_3Ch.e8W[$iV2#ihCOe2riU+R&KB<-/;PLW(4C%@9j6'Ia^3HGN?%fX+"?+,I]u'qIP`bt=ff%NeBjEZAr"\N*,>eA5!+cP1-ag7W&!\uMDN*ilJRV-7Rd<Y)5Y<JSnF[`:Vni)ll*-7Yn52"FMdeC_)Y%qLcSK/bMG)nT9HgJ&p"n9&Mj%`<kMh0q%kL=IIZRF5;PH:KHp\)4O18OYY&e:_1>$H-`2hV4o:H"DcosAgEM'<hU*:`Q^n%%u3Gj%4c6-k7kkheF3g!jECtmn0Xj5PMbr]NYua=0P9L(aW,[l?%-VIfQ^kC"Cm$cg!jpC\:Go/?4k%s5W[dkhN!FD6<SO-,>;BggOl3[@%6&l6#&7HuV=mQXO!cE#XBgOdOHDFe@;aQ8%q9!5V!LP0$3F&M`(nnb*1q4_!U&/Lh"dm)"EWMli9%gi\YMq!INRnUPg-nFH"p[b&%1TI%#Xp'6GS8shffBNb[jW7N$eCS+YAG$$H$)(l`:#*-%KUA-(7b%f"[nS\60Zj6<G1-a)8?,2;B_I*1>_*m9&ZNicnt%\:TiTD)%#ZP(inCH.tJ2"C/VnT#2F*)(aYhFVlWDb]pY=jC+.b1W$Z5+da/@qiV?Z/8g]qHS&i9RpJ`aJke'U0^F^"]@1k!fZ%6SJhB,,btE%\t36L*;+pf8!A:O'@/D@Dq`;]G(EK'URjK#$rd:J,V2M;E#'t^#%ltEbHS9&dAhV4Aj@U?0Y(jTW9Rj+eP=VJi5rK=LcO2dJ,urV%>V7m(&YnQq^'7GleAcDSZ`OE=aC>,]Ri3PSK:%[PkQ_Qr_0h-'*gUmu2>?mm*&A_pWW7rpG"[8EgIMW5p1>'33e7ooNk#U6FT,[I%PLL<23V\0_GE'&hS0WS()Ttm<XmQ!4.#<6c>QN\.W3X.IiWpB\C!(<<TU)CK>$M)AcD13*PLCT:)7$9EGfQh4SqQi7:<KAQ+6afo%=Am=Tdt;C9Ta2&IK$T;leVW8m8<F6[U(9M#,oF%(WMW9A:YMHd_sGFhoP$temP)1<R]38=RRe>jO)gp#8$]?@"KO+J&(2RORjM2^%h%g'M7NkgISVsU\`KIf"qg>X[Fs]Y\NV]p$JL;_THBKC3);!LX?R7$:JJIEADUQPFW%,1nS7o?q*2tY'JAk8sPC0PK^`4gsGEs#?%&pZ?,&5Zk"m!(?>U`O03\F=-3YD,Y[2:lBF9W3T#&r$ieK4]kC5m08pX1FE\pT)8$.#Rb8jPUASWYK%Hk?thR$O3DB/.K0["NbLJ%C;+>^f4tmJAfed.1b6!o!cXnr1M'-r4`W3pRAAL@B^aXM2`bEk5`IqtP?a+0/GAAJ7^-qLh9BBX8F)d)Mn9J8gLbDPI"j0@c#+/4%($-j1C^m\_$k,E(Y%nf%dMu5N-g)E^G!3J!CZ`*>&gOQhn27j0TfE2,CQe<.0e0G7X#bu7>JpGU;Nkbp-^GX%J/3P`B@R9$q`/4h%46DHm2,P#gc$2\,2JNDj<tA`Ih]g]^oHdrWJMHkEJ;o2m\CRH1LO(9MR:_G=;siE$Ynl/*F;Tb#Zhh<\jfS+?Wb/5`N&b.+)/sps%oUa7!_Ng_E`M1o>,B7&^^9^F#B_/e!<DAm;\\MtPEYe9u9V$D<L!Tk)g+L%#,QMTeI>K&pZ?jAeXd:H/-!`qK&3s[L:;c<)L7W5i%_VTXa_iol@d5&[N@_pXf9>.;rN[7X/!diNI+O+kWd[W+GQ)&(Z?mt/gPWaZ)XOuHN.r0qDj^'%_Xn5<Jl!^qTbKePPjVm.#iJAu1%CQOc#.oDS)k)LTtr%ll&7eQ;4Jf^`Q.*(s(Aqe0.4\mqV9]#"baIsEXDFFFjeH\:87mM-jda:(W5j^=u6P:8--[N;37HEpULSBGu%C/>-^Li*>AdB(=lB6qOMOaAM#;:?ea&o.!p.&&Vsk;"Q]?+G[BHG*I'7MYWT`CKcn5TSs4`>XRh7A(_[1ro`C&Zh^&ea4RCq$_=m%XY;iqVK-$jOJQcQ6UEZC%k8\-.Mar=k,F=QmlU'>K]pC#R*F5nkUaG+9[%"0@W)Su-980\7uZP-g;[rncDrN@44?r7;.IVqE$PW6%=S*rN%rOSEM+WaIkkOhF@GmtV;/)"WmtlW^G#5'4H/[,m@pq4mTZMatc..9eC:8RZNJVb7l&"kQQc\am.I>%P1HAqo[2R;To-Mlg%MgtK8DP+n(?]#Fg='lfbSXR1qb69.8#j*1JG.:/2Ir(X.U"ZqE;_.M<3*0k8/B,`@m"!dqa!NbrRGA]AiH<0QiDO/jWNJ#dJm,-A%`]YMOeSl0qLd75dNXp"@PRJJV"KW2H5r2JJU@("@<H'LX]\@#R@$[H0O-8LW^k@GL;[u'M%j[g<^d+P6TSP-<m\L$!=Y#E7GKa_J%Z8)\3UY]X]nkEenQ;hA1!ZtUBEM]+-LQ^Lj%JX6_"u+0e6T:K&28E(P3j.&gg-mpG4;0CkDIg!#grF82TS04T8pM"[^,2jVTVED_%@]agXPFTJM%Kq[a(ef+jHlbSKAh)EOX'Q%u6HoC9p%E"cn01S7EgNSN?dIs`&?(&g^^/0WEaDka"Gp$n>_dL87C"RD\lQ04-1``e%H5ZBDA6I%2_?**L<*Ch<-T(Y\0k3mR[n3kuQ"gl,S.[0AosEF]0X4:%Z>sCrJU1u[W[/8k%=,.i@T6i'PA1@d[(T@q)G7%s&sb@W%`(o?%>BNm1dPg?%,c:[(^tDa4jOG,E*A]C7IO8H^1QH&R_qD<t!Kp'1QSp9*BFl>hK%6pYH^\-Ga7dZ^Td`&d=/Qh]^oNEh-Mg[P%>6d=R9%[k:)AMIJ88A^FTUE=rn*S'(7eBTi))Fbmm!O>CV\bJ?N>?$.`[.9;_q&b-^fa\j5%d,T=nifP>\V7D+_G#O<"FUj`e^R;%*NN`qE4<1ZhCF>]WBE6L7L^:6:[']_ob9eWdYcsDNTpOLV_bK\q,lJq"A=VF`#9GUd4\S]O7c,7.d*cA#r@QEids#.Bca"+(4g>U%kKd+(B`uL<fd`pL.EGi3[(;!bC&E$E9dl`7',fplLru,b'2",!,kudV(j%'*Z!9Z3Yl["CT#KcCW<=KM:uK(kB\#.]&NZ;V_8JQ2%CRmIVI)9a#-7:dgmq:d'9]msD/uG7[8j7A-`no,J@!i7o0>&"N(nT=m7L3&$!a,PX]apWc9XluBJhb6\:rL&tMo(#]Ct_lTK_*'P%L%IuVb%N_D+]+]k$].73*'?O@WtE!V0#mL[K>topM,#i3X48b7iY]>25g_Z\SJ"jHLsmh3?DFbHU_3?ra<FYc=Wdd:EVH2VG:Le+%1$Wa*!_2!;5X".>F_!7<]_H$ARPB\eL5^=a$E]85(6O,6s!!YU!Ce[*PN"0#B/_<`o!6@kJO6!*!`eU-l6VC*iTCP;$Ta?;nIC+r%\iXSsJ36j_DJ5Q7@m/um)pJGJ8.6tLne$(L+*"GRMbM#]*.nGQ<9#`c8!?S7pV[a]6G4QV=Dk)F1I-X`lW<!,]F\nC=W.B\F9R$'%lH:q#d6qO$<#Sbi\LbZ!(bP"_n)Ucg(n0-[ps>[UD@RLRd7WqJ\*Za+1$jCndd:Su6Vpj-P#+k8#k!>e1rJI*8l:QQ&"3\=JM;N7%LEElT5Sb*&%7BVM]S+Huc,2d]$lV'd]E,'0jboR.F)U<r!ZqG3TX/%T=Kb#3NR2NTmh)YS>G<1Oc=G0.6EMN,@O?e/1#JIu6hN!J%9^G'uCF4PJcn(I5!#[kqajmD)4GkX!V%=#,8n.hD^@As?cl8t.WZJ,66jB/,"-@=`du;I2GWiL,FQ/8ZW1.Nn?BjjdQ;/f*"stWX%C6lk]Z>@$<$6t.0A=(/YZ@g^$8eGVZj+V317jOP6.G&gqfEB,F](PE2V9a=Km+K9gqeA9J2TSRm8[Qm3]qLp8BQ8:.63EW$`\%IX%pXWaF9hq?U?2E\>g]ZSD/9jf.nD1j8]hVCXm^sI,qh\Ha%%*F%W@BJpLlh!.5,<!GD1ob,0$=2<gYX5H^`Zg=Cm#O6dE!WMpbA]f%%WC><+WJ2ZboWG4S,"q2*SLAF>al<V5=KY0"pQl&ptb!d%LeJ-:ES9=e:9]fXe2ahYm:Ln)&6FE==SQ99,V%&VdR-+,,sJ2\N+Id%j.C:#&"46D=h2%-6c?pFe(dec[N?Pd2VO:>lV)A>!\,cqq^?5/PGo8G)NSX/>c=,]]7m04gur;'i+%R7['XJC62(GHPTdR5@dm*X%?4UnD1<W70IQnWbQ"0b@rSs"^SpFfQRP/Wc9M(6YbuSb'dmRKTB#<iudIe"_BK)RQcZVUtAB<#\%RHYPW<O$r2&dOPQg4BL9PMY$%+\n%E%a$XD1$T-pG%M'ag5P)0[>U1GYF$5s`<"232Tec'\e>hR>Y0Sk=Y3k0!d+m]SAXJ/Q&rDM#k`Z.Ahc#72,AP)m(lMB3FAD-%5KXW+F:D8IF:FY)Lp&<#Ch[uU/=1@)_,ghfDIV1pE'E%"25$e601*"?f(RtS55f_8Ar*=?U=;l^Ke&OA,DS?g_FI?,M)[)"`Q#VP%fS2uffs65*qZ]3L&BuRdeuKQ@L6Qg""R6/j?;Y!ZZe99>L1"Ruh%k,@%#q/u\MIjH?T1j<D=&T"-L;E7hcao??%E`rYY%.r`+Io/%0$LZillrSbpW?%Qc-#q2T]bd8l$(LicUISVK.mbZ_0o(YSV"BkP2V(E6%S%@-D7DW8;Wg*7Ff&,kRM*405A*9Ac">FZj3I(UE#5a%c<4n6<Z3[Js&"4%1(%B,K!$&g)8fprT7Ll52Q5'kQ-HtQm2%$WhlTYU;N@#R=C&.r_4I-`odQEWp3[=&T$/"ETfm0jC5ns9r)M68%/^.^646E)il4P(n8aO)pU-N$na86f/Z^$[=WLhrj8XhH#k,?N-/%oB!f@/K1e`&D3G:lIgR'9Q-SemsRIj3-Bm'F=s8Z>JX7A!V-%59K*0pk,.&>i3>4>CG2\rTBnc(mMlr>bP<"kWtgPm1^mJ.bU7%X>+_.jOZhfk,.P5=@]<6QjE2l$s>Af1hE^N)K1KQAqV]GbuJ<g%"KMSPReZ]c88jj/KkQSm]j6Q)*:Efi$/'@Fgo\o(:>ngSl2V%[V);2uY6uJL\^YH$+'hDU8$U^UMr*kdJVs(8fVJ_H2euJMlU[5A%`#P/?^KZ]uNBY/Y27mfp_ENS5_&M&+[U1lim*j%l'&2ldeWr',X^:cK54RlN#!ZH[!R;HW;>Zau3Ad7OYY^;O%<H-&S_8g74*EO;%:I"phIGshRE^qo[*<mCce[E$6)>Kf!$u%>C-7_0_lOY"QMf&rH!JI,faP$&VApV,"=Y*gB>*g'f?)F]cPYcq,9*M=j=UrrKPrRA@%7_Mrt=c*nDLZbglEaUW-f_+W=:Q.Zc'N[(g]b>j(E[!)RDM`,se.-Y(U:GZ_Y'k@cF^=mdQ.Ecl3](ECZ`1&CAM;X#'@i/_7%#WI%5,E$n^K`(-lHB[$\p-kXk,R*Uc!WJ9^W*dmC'Iq1%%!8J>1U51YsEq@A6IpBBB&!I$'KTB]EWi,R3UM\4eEE+bp%n9Y%ikEl7KfH%JsJJ!%2'X$MIiR&-Agq,,%op7RKHZ&cVL^KNuTbq=5FH+M-BFLK'4P[*W(Q3d$/@UMt)gNCCtMMAOq'(XI/[o)Pe`7Z&7P'5dZES%$a44b2XH7J/.:nUQEk7:r]c$q[$]9'Z1V^5'$4F:lQdVV!7]JSB@[ba!*Gni;k`4%_rGt%edG>2ermqXOp`>]fAsjaDfG4.<9lE+%3nWgJ=Tbu:k`bEZ4W$QEe0bigd"TP\T/a+@YKTH\1h``M'ft'3TGh,/^c`Ob1pG,Z<f#ZoHFZXNcV`Y$MS2X:(OTW4*i?6k'&V;!%`qgHSfkd_$Ebu%s/F@d?q3<fs[p7+1>t'8iZD_ha`qX\s/qnt$ET2r@YpQ?\0,i5[/U-$AU?@-nY1)PK>&oqsXAPoB2,abQCcCXf%>OL:S/Ui]uXAY'9)RDno5$mlg?s)t8k%[2FoOiET/mkZ8U4Yj8U6AL#oV9<f!u')@l.#T^;,\IW)<Lc19-6aO/tadF=tlrrR#-tT%rTi#S=g*fsJO#rZl&'18csYONS'.`L5A"0NIau2:<N6"j]6Dqn,tX+"^Yo)YXTu@h]cZRhbHpR:H9&JkjG'RV>sSGg\>Y:`H\?b,%OK;Up$Nr4BrE,GdRAoFTc;:I>CY6DB6`-?ka7*hBnH2+_AD#R;!504)rOb(Ls.dm*>JsWJG`OIA`hDiUlNh(:m]7,Dq^HbP02F+s%`0G!7IHL2cm/7V@IgW(QZeX/8c\18Z93(=YH'!d*:/rt4J3$CrQXn3,j;%047RQcB$mI&;VR7#d6YRn/R"<ni6I8Z!TRC+oW('^9%!l6g=?l<C,,K6)p\!PHddee6FU<dMtFN3)4NelF-.IR(J=eARQFF'n>jkG.':;lmb4+.*s%D)H.1`PR'jtG6]qi:UgPfqfjh\$O(%N-Smk1Uiu8k&CcIgT=EDQCjgKn;ti_R.]s9+RtglnXO`AcPLgh"D;JcEtZ>A@H%.rOKi`4j7OBTS[bTHq6-tF28(q5^HT>*O0@47%`V]N)GYPr&rPb%N]_i:\i_cL6$D45+s65D'?`)SsHf'_[l9fuEMk=>CV\f?$g%N2[8N(u+*%iS.rQm^U,H:7X6UPtTm)-[1%g1uL%,''Ye38OAkYsYDX8\\e"0[e`h=->7#Lo?I#O_%3k;)hk84J,pQ#f=35L=f,c?LF57oT8(ee2Ld*V'<67e=*mu;D;8+NF`&08hrKr%+]lESklX?%)Ug)-LQ#aQ[\62HMn;CSXGi#ZJ(eckrs(C10a((.,+:t-40!TO+ou2TZabs]]uV!-=ii,Zn,W8Cr:D..`OfZ>G1jSA%0K;=bU`,:N(>"4I)!r_`3O?Q25jC&ZoPgr5p6[r\\c(1X[i>HYSGepqli!a#WN7;`:8+!O6h4u$:Z\Dp761CC$.T#DG3L$S/>EVg%`IZ3c%tWqT8'./DS)u]CW\r!t2`@6fR00YSKp+qBpXdZG7MDu[p9rh-r5$,i)]cu>,PH@!h[ZeEV;>=T`BJ1Wj+cA*q\P3:@,[+$%Rb6BWBOVKRiplS%>dXOB\N4$fnU-Rl=qi6g`,X3cid-H-5F3d"6Pi%s-+L,KIKWXnHp=`/a815g^7M8"rD0aa\uLQuo%mtC1eX.0%Hc,jqG'B"5&r9Z4oodf836J@eHkW^=WDRR'_O[]7`&aB'gKU6ee!D5%TBnc`1B)A0DEjuIQ%s':0&X0?-.BOJ*2R[=*4!WFGan.d%&i<oEc'un\+VZP1o;V)9URbMBWm5[]p^6BTAW8(!bf^o'>`SY6VgF0%PaB6$RG/d3[6h7&p&a]Hr<G^7pRb<qlsWN4F+7Dk<r[@<%[JKW%np$R?([p[8Y5^<bJ2A'\0`^rZ1hUJL?qZML,3B[N1rHlRNKPp7(I#4rq!OS$>1JV#MCi#-<3KlW;=N)$OAt20%Le?oI)#^O%]TLrEkor5`lNHsr/7@\$Ic\CnB8q/_f@_f?S:('(pO;2<SnIs!:WXQdg,7M^2Q_7mH+u1!YU6>E4JDUN(C$cm9B21ZaF);KM/iRC%KTWb$dJP*Ke?3rmRXL1pO=shiUZpqL",>!Pf,O4(=)R3nlZp5E^uiI8nl60S"+D)2iK?ZfVQD?eq`o,Jmdb04McbprN<Z\tA["F@%=*=ggcWUi-OVON6mFh_Rc:`b?q.s'daf\.tYd3%SKPuXq4bkgu-_U:9<SW:Dr+\NiJ;doP:[+`0]8BM#RFh>=?7Ho#_rgMo%tGfj%S!X8$NrO`Lp\RR4IXP\J-gnZg3f8l']`Qo<7h<IhYMk+@iidbIf,_AH7PqBZNVWSHE>/@u]?c?4PFb)\B#`>d]-^Lhft9`'gjVif%TBm;.m@q7BAOZ&c\5@$BLcq^lmmp=QO+]0IRDLjk];G2ZR@uMU%X/ln\l+dR@1D!11U34P\uL.-:__j9o`;(S[SWs;L['02-V'7$%lbj!R\N#_LnTo2Xko3?FP#bth_i8krMj*M@<fe(O=-$QtLC^TJh]@"#+1J^4I-lsBr54Ls>un=)nZdr(*dIIMRF:VNB,1#QiUfUf%THA0,Y3OT<BNX;d]&4],]OtM3^%n9;ou9sbhVSJ*pTM=CerO;=_\7!=0(?*T;);*l?GZ<-APV+IaN:g8kBg.&UgQY"LV$BKXF<6f%3^mei*\ctf0#";5W?pk;g]d0.Jb4QJ`H(MW*CN@&qmTMq-Yg<OQ5oA]'78@7nNZ[6euW,e9F!K`s.)=(d`6b]:[\i*M$Iin5X`Pu%O0@:gdt9[T%=6gPLMd(C^Ue3A*.H\$^Q;k_H1r^)5=j0lM>KRsJ%4m,P2S]]4J&)CU6Z$Wcs9)E%e3aq-Y/o8_FK]:C,Eh.,360I%,j).ec:+jnaSRh3qf,]p(4$GBX@N$O*Kf.TnR">HG?nPM)El;O?MG.]*FE(LKKHjO".E+t?3:F,GMIcY6U:q=g06O'\Ki7@(IW:o%^QXb]Lkdt2GFt";E+er1=QFK5`r%r;CrC"Yk4CY1:FgjNkBr*`]M.[a(+,CaY[nNsqPLi^qb5c&li'VaU-^Z)W1cYEQNO#[b4,B]%q!W(Tg^T?hd3@`4@,=d./dM+rU-P&c)L'-m9'^Ssl[VXd!iE/7rdj\r:[m^e$3.NnJ)!*l;<_c,Lu=nFK(n2`ZD&E"5T_1>ks78C%ZW?*MD?GN4f#Z#<msVe45BW/I9#H";92>WU-L8C;c^:Hd&)6\a,G-mmnUN_DV;&9(`83nWADgaP4q$-NiV_$efCIY"jfql[IdGQ^%UF.42_@M5:0@Tqiq$tPVd,=i&46?AjDq'@[/X,a:fGeQ)OH,e4)3cmYak=gb`E20r-Yk?qm[lk8("4\kE)J#poA55Bcf-Doo'LqM%#]QV5Zha@YOoLt$*lj:a:Li8dDlqY(Z"?kE^aS$=641&.KB'uNDeV`u72#,Fc[UEaQp5i$$S;Q+c;ic@^8;2)&YMEQ),3OS>P3JE%1F;OZjms5didKm/NGQjtB7"El4'EY#<lh;]XL7o*,T`:ha!,k-aO!6ls8G,9J(!&9Ha?;S?`BlQ'$rqG1NS'WrK-\9@MRa>S,`FF%hS9)s0$d)ge]Zt^N'&1q]#5^N48u(reS/t%ih,1U7!#4)oI[&#@!iDSgu6naLE:"L6nK_*htZS`3S%3j&5(!:nWqhkno*C36UUPW%nUEO$GN,\c8&Ip1/pJ9!g4p[)d:1t\7dA",>4YG:2`M?W+H*5(TqqW(na;aLUhs:i"oj?j`!be5"LT_tSMsrF6_aqckKX1`.knUl%'%6<Xi?Lbk`;79#>Z,,*mf\'HmN)'`efoH]C'/msPoAb\_A2S.PR)5BCd?@u:#ogrOZ/<P%1>)\1/F*$+J<\(7''MSBa^LPr)chF%PN01kAb`VnYT\Ao366K`HGkj$GDAmcQi@"D%OdgkYe15?_kBOfB\:_L)\<Bka)s[T@0GmepY1Qb*5U5"-:\QE%"Uco\,a[fhDH&W%7icPOd1#<jeqs[i8fomFRuulMMMo(:K-.]*ja$TA3s`77hg:9$XM=h(Hie0\Z:;VS^TCjJfkg02JFj`M\-$LN95&$C$%gX=,ru6d%j;$I=<.,:Y<n4+U#_J!5RO'GoG$eL?<1/;dri,GEU*Zkg4c;2B_uMAhjVKoW*e$f&5MGd6@>:ll-d)aV<rso99]JIg@[,HtC0+DZ%j#7IHg]DnC+=A)SaPiqP1b/R=(qGoF\EfO"%4LIU[9YrjAQ.MaFL!9u(`t1>7V<eLm%_-f6a^bp!'5*tcG3moIM_j[GYPo;palN)%RiA%rT+sDcrfIP(XY$dX[5/e.Es6Tq9)!3C0ZtPiqmU"j3*qOAAFs:6Sls=kmr.@]Jc$A!)oKJ@rm!TB'c]+r9>^G@4&X3;innH5%3(=eJ;AlPSC<,!-VM`=h^N8QXE94TA*d[<#l"ut1U:J=Jr`r<E[9J>?XYeR;hZ;7HP$h,PoClTFjCnprMX3CVntFYrdcB;bcue/+%2&Q"QB,UL!@<f;+c+Z%p*N8aMjQOC<8f34Kc\_H;)AT(QFfS=u"Wrfug.qD_\r66646;,@>6HKkH+E7XkF`U]/[lCUkI/9XInN;V%4:;/\Ec9CrV'4>MqW\c"?Q&q]#^@jY_%P_lrC`JP*O5]1AS8CnXVb'J%50$.%fo4Up\>s*J,h#`;)I,N6FXmE"/NNIR6\25*)?.u%m"Ujf*nHK;0?'f"S]cG3m!qp@KZ#L3V0Z!p/QZi63tE`1JB.$u3(TF2I*I':WC'?E4Li*+5kAP>+P^g7lfT^UmR2!Q+9$\.j9nLR%_3]?_`lj_"X2geeR[0@ALA(hL4?c#pD5H<<8K](%FKhK=+t/t^]"gWDT`Lkl@+H@D#Bd3)"Z6Z*gB2m%N<S;N&A:cD4oQn(pSmc(%Zu:>aP;eeH+sAIs5n9BoOB?/ErodY5#T9$,+J"%$3Q^N?(K?4<bOmo'DcLTb&D(6#QC*m"7)K?i2TWdKZJDuu\i/LL">H>DXT-ie%hL.9rL;,l,J=HYeGVYk'!X]8n]@eD9EZ85ef7][3S!;f,Y9?Dkaq4+*A1%I_^b7_kQ-"[k/ZM`WgZ%d9<MQFcCs=d\\g]MdIS;oD%:"Pn@93^QZF4dJ62:Ch)@<rGnF-ZN_"l`5h8l`lH(VC&1.F74fNi>$h@dYCF;m`dR<ThcMA^PuS*opbXCd^U+D4.nY+>1(abK3U]%0YlJbBJ\NUp2sTGn@8XD.AJ9Kn,Xj^)]!6L=;p*OE,B(%nL/bhRVc_JG8@j(blN6LT+#(2Tdk/#'7),!"s%a&_'F$di*Z7@06_W]%T%jBulIaqW:obf>rKj^lG0P>[f-X^Zmp8<NR9l_S"SlL4WUAFq0_`\X'!%Pt4"jJ*hWmudFkc*i-5=V[J%^s,n9<>-&WrcbGDi\$%%?#Y8r<fSt$d9Zm."O0^83855rSVS08c'_#J*ED_s7ATrg_$2J'sCFoR9/W8FIk,Z3?B_Sk3MYPKC2"?bk&a4*@LF#nU%%'BVM]"%qYD2t0tpiS0/iT`FoGjZ^KB\!A`pp[s.B>_s8)P@rpRV`r8Lh7Y/UE,s2(K#6i8#fG:6YaF!Yn%*3[NUN22[8rB_Q8\X)da1<9^k%AWZr6=oKe>&VnJ;JBR9RNJU]d*ZmMc88^XEXH=l>C\I"tb=8ak3W9b.3=d#0QsT/hA8@iKj9e^Ss6IRA.8Du^g.^LVhIjd`o_6Um%hi);FVf._',`D\+JV@N#CERQEl8?o&4YFl>ho7\Z(2^rCKa1\K!EX;T%n:^CBg`G?:$PprZ._sHl$7?S4!1pNEu]j)"4XkMZj,dH%4iOAAO\(PV5onS,s4[9[3#fF-m;`,1(rQq%[VUDXRn2;ea>H7H3f$$ZYFEJsZ\#=a$#2l?pV%5-\NIq;+KB>jq6Z\PCA+tg?qFrX%RX4sg1[)%RNP$''!b-eMUKX>8M8p>REG"tD)qhkB7P5g935$Vuc$#iFaTof&i6*V,'\:?XT4YRtS=$dVcXk2Zo5>-Ze;6cRd09'Q%6NbOn1!-1E7Q/6US)f<QN)&4f1XP(F17Fup)UYi:N-H>ham!^('D(Z%s5BGXe'NIT-;9D4O0Xh9aTe%hqRDoZ`m"eQ(jU!`@?<Np%i")RK>U(/#[Lpu+RM_:G_/DF'hD`P:lg&9[H+#kTAik!sd7G=spNQM@Vf?c6p?lH$!roVK:U&;O92.f]fLC\385pS/__ODn6Ab3@%>,tCTO/<SOP=2,GY%iL?S9UPGrOJb=*lPo2+TD8[Y2_-`*VJUOfsQ_s:AuSc!'&TO?(u)NT%QjY/,3#)@d_2%\;gLTl6XMTJp"@Z%LhO*([RSM*>CrM_J-6sbO_Z+MO9K=lGnW`*;IV[!D;01&i)[ppg.<Qppho&V<sb,M[qVH?@=H=u*DcHi&OCW8Fo4&T@F\"oN+$q[%Lr%er7KOk,/m[*2-d*-,7Pa5Afs2oIFum6tGET=mAhJ/1]CO2/A5WcL[*#oaHWC't*,WV&(.[b?MqH;i&9bt[;X-0Fc9b2L(6g4/%;('q4AT_JME=/"=.O-l1Ha_[V#\smCQO08"c>Q4R&i6)*95%bg>c@A&F2!Z9A]2]I24oL7f:a_kNjljF$N@*KZXF"o:-@%jY1)4=%rk.QC!..ChDm=5q96bZNGaqjlNo%?r^:>Z.or;lL!.;ZqkpU]FD+pqub-WqrMIrH>*'iF?J1^mC@5HIAe0bnaF`%d#o%)o'Y<=jY%QbpfIg6H_`&fKTt_70,i'RUcuj2"(c-Ra@Df=17B]C[.I1U)Dm.D*@ie6'r@T*bj=c6-a_'YGO^-VR,7HALch09.ucjk'(*WI@$l%jhfgIM5?E'm(b/f4J7UNd>-goGENnb(HY,g,&hBG#<7Z\?2W^D*C_r_>8!FXkRdtGk09/Cm.2;/;#So&(!^(u38)i0a57d(LO;Be%X]'DsC4E%/p;UUW+XW`3EhYr`==sJM6G<0uO^;f0Ke>G<^Q-5Xftg%>%"sK32WZZ&J48u7oZ^PfIubtAd\'-)U$5_)]&DLecBUUr%M*?RI1dL/4"mi_#)8,LT%Lk[tN[nmCd:$@N>;dE;XI0D<Y2J3-\;#"I?k\[OCrD_gM1gBOEEfpLD`CjtYHr/J5<&jP"NQ'*pN.\u%kWRf&eHX+>2%40)*2(8J3/A=lo:O`p?e3UW",o[.gQe1Z#^@sd,_e2'83D.;-!9ZW#Jd3YC<$6\fVkQennXUpI:Aq\4%!30T/,e'%K[u%176g`?*3&M+<boJ:?`)0mLPoCbqcd[T@e-p0gW1S\;EK`Ckc2tfB@k5<m3/a=-bg[#ZD*e2m9dj5\[a0Ij8,O%Q"BoBp6,`M%H/bDt+PppJ3g@qmWkf4fPttA"pc9cDdUH$YZnq*flj"O[FH.WhEU38;+<q30M0%=`6a8I9!$c@k!*I(2B0&>nW160IgeWCdU*2Os%\AgE'Dc82OY3\7\,qmp]/-n-h'c%'BMffjk[9WAM[4UC@P.Pe,a.[[)gJ*e)Gq+fl\[<:jXQJF'o/*833,F:-QJ]8q_NQlult2(;%IGT,M\L!9pWTCUPnLqg>(5Om\q2O-PS@D;M^i6<\#`dMJlVR?#N>iYpp=&1o&I)@N`S*)D1`ibC5$Htu[gD!WE+1JoSZG^uD7aDC%X!tS!?rI_r",U5rf'To;k::.@MA`0c]'AKA,H%!uTaF$3_l]ZmqXdioM6s)d'cjTf2jG]pEAM&QK05OC'@6WtH5K:BQZWc%9LIFm%[L(A6d'V[`i:-GgdOo8i47XL9s"A^JHTrL'!t\2JJ!2)8%iaLuF-9XEPn%7;@CdqoHu92XBF;Yj;>KAjV]miUa-XDrUiKRU6mI&q%K=S6<A]0D`kbt*,CW&gF=8.Afh!+%953ehG%O[QJ26B<*GBe:%bb/m;-TjIDq@/6tMYP1o>mLR62V"eE%*H3oj5=&$'csLS_*J`_%h.oE"q5itTBoJr.Q[O+Cc#*)oJDraV;jL''Z/nEt^"6:oJE)`3!41Z6R7aB1/gmb[8e<k^HR$.:@tW&VU6bsHZ/F,8jG;M2,l<_P%Yrc<GR[YA]]b?apNK]>\19V8GD)n3c7]Qd.MH6Q0nFdisN[113Z5e9lBGVRPm^N]_,n2P6Jj9rQ<K3&C6Y<NL%Zn;u[MKPP'&&B5%mIP7W4:lR336?o%.t1$l[?BnU9-[Wf\ImHSqj#$1QmcL-6BuNH81nUiJE<LB6uj7oN_,@eK(L69Pf6o*(+/CdSD7cphC\V=!IqVb%ip+!WWi\ma.XES<?p^u8@d]Y!nDo-OTgi+MH!gJrl94oh(=X85VbL[3B\SOj;VI<(<+0_:ie5?;D@T.%bPt)nC/6A$`?0IP7aur<%$Ac[n1pduNKr5(,khWm>K50ASa<N.NOBk9Ud8`^KXgI,&@QZbdQf,>a0h:\fA>IXfmqeJjASr4>B'I>aJR"E%U!qLOaJeg9*-UpU%UKhq!%WFN9:)nR,f(@_`",q32_St[f1MUE4Vob9qA+T>*_d>3d+$O*"N^6n)MXR&pgo4jWX@k]Aosus<+<L9?3Yoe*G.T-Kp]1;j%R#84,J@VCZEIrSe!,WMI;7F^abSF:-"\s&#*5jle9.+"a^'&b(i%-9$Afs*U49=FBm<`)6f]3s$JJa?XWqbEGeE(obcn^tq*Y7nC%1H&\/nAI6*p9B#sDC@g:YWO0U/pcL7>]H0c:((A(8V9OoMl3UN[n]dgVb_$:R"")D`gZR8!p1r[hof_k%*kjRqF]3(/\Bsa65(9-%C@7@]D4X3eG&PoTO;iK*mR83A(YKVo1H:MD%ZXnND+cr;CD3NgF,#8+VN]u)N-s;J%DYI8Dm`T+f=b;daQLK[q6H`n0Gi`uDR9Mq%=fbUR=:sp;1Pi[..(@CW%qM'sdkub41A[-?[C(b/BEqN!QGo6POVmlE=,q9!hRmC=R;[!(aIP\#P(S72n=*4,pL/H4;\EJ?^.44/%bV(?I9_i+7'eSKoPBIs0aCXU=$ulI*8<Yi&q!mN,&+#I[d]f]oV][j;$?qqS,Cm(>$N[h(>2!QrQ;U#9]IOgA]PO0UB#N9sOOi?V%jZ\=G%.0uP3s9;@b>)[55S1`Ph0`S:!oa.MDrjng8:,J_\JTm8+O<EQ[3-:k20Y>u:W;g?!pA\d#=htJdK>O497)1,0Ag;/nh;H4%/_?1+Q_r+?JrrFo'hR]FcY4F`!d@0LXlPRpY\tR,$dOi)6QM:Af;jFPQ1Tls*o]!GBsO?#H:%=/<Bm;bi9f\b0BDK3gL`h\Y`jiA%4)&[j4HVV@e>TLJ;.&`LBji(DVGUE]=DtK70DZTCDCC$+Ab\HkF2!DV-dN"f\2<**\m3MGr&lQ4F'/[_)WWSsio*=(E]C,mSDSci%dm0Ed/0RE,IRp>=N#*@+!C2=s.mkZ?6du+WLV7;_'[*d+/4)W#!KdogWiVP;'@VsT/0CdTkk,4@;C+m)X^eYhCq!%%U,.5sIe#1q%TCf7rH<pd3Qe"$ng_,IA.HX'=,1jhmKg*$l1X)$T5euJ&rY8%L.+Cn.+`c98OKkj>r]umm/09N8-VdH7\Yq/m80:+!R*76U,5da2%UG/gGrnMZt><[XILYA!RH%i[o;k_YrE7HOK1?27lEO]EYj1:!iH\O6UE]6@JFldWGibh;lHCKJ_Q4uj-j-`!,2RXfI+Eoaba1h=u%/^9p+V+?B1GPM5+O)f/CVs/:1\*SPj6(/_>b$]<0jB[G^MOFj)XBa"q-QU7:-#d]Le+\&,1$pQj"WC&mH*H)uEY&cYb0<<c]8I<O%W`!ChcJ,9[&a6pmp&jZm7QqMO<7"q50h*B/efLTK9GZWs&^TMoKH?W<[Mh(6Qp21,[.p9nI?&SQ7MGU"U@N>"*lM4r;Dq6:",pJ&%/ZL[W9^u5<T3_%/=WVVl+k7V9XK'@i%[/R:MKWJDb;m0]M%\6M8]i[q6#?g9'Nac',..]I9&2U_UP&u^IAm<S=tU_9bj4_IEPn";%'bEgegi,'0aVfB'5hu571tINbqGJ)ZSB%R-R>$e%g>24UU6$?T!-+C.VeKYfcJDCt2D;UXG9^U8B3'eu7G<N`]DRK-4Tc*%LHSb<%\9n[YeYYFC0j1,M&"26:^OjB0&6^tJ#<5WiMR81ZL@VpBdr5M&M[3PPC&V9P3ha'3M)(d4\?Ht@^>_.Whtif)Y';e`qg":l(qk/X%(et3On2\)N5>7o6@9T1.BIVibK5br)b'0',dM`fWlA"o36Vq&E6_jINS*8PS:<Z<4YnET\%T(p<EG=6?++A%i^j9>'dgWs"C3oP\%Pj]5`UM&$qM,bcRpEng;lo[hoWF[*0F\YZq-nbZV^:G1Nf$l$"buflO#0e96jG.Dc$NZ&P4tI65FOOX>KotI>".:#NkR["uFcZ#%%Lid*W3&N:6Z^jeUbDrkMHB]>F#\l08Muon_-"Mn/-VBr>K`3XS*Umb`A/FktV^_A<HadVeo,a#XG^0$_4X<FVV\)(&]*<,KXr'DV%_B(sK7QrVSU]BDp8n\\CkM]'Xc0aJi>)YP/aRjr`nX4s,K36npDAWGC?e2g6!=j`:41T?H]->@iQ**EnhOITHnou*6P<=!+nIfN@%gX80B.+pVT)hTff;ah95))26U,/Sf1AAK..=Dk:\hCoCV\]=3/40BD5>`'T[!jMRm=+#9]_MRi,/]XrM,==[';BL0r-N"aOK>I(=%;?"#kL:s`ak*\T2%F5:Ybh^Fb1GSgajfHhW%-J#>N/fXCa(8J4[h4Pf3K/%dR<?OE7Z,I$3oX!o8nSh2XQ\+oFZek5)9EUb5D^hR%.7=7"3%p;hQ'i);$38sSCRVs4l./_C#s,Z0!Brf/Y5'7@+^%hIhHq]LpTM>A(r_XV*]$!mJ0@#''s#u4s&or\@ZYf.,Q_oPO3!We%A`OP_e=qO#ZGd$"Co7s-M7`Q]4SEuDr7CLJVB6_%r0NhKe&o#*4S(Z3fSG?pfmjuDo.`ohh[5'pNWB+1P0/1QF)'?g_)qBN"2.Km%E,Q%Ynr+G=Pb3]q-i3`9lgG[f`pOXshGE4fHcSo&'MGgoOeQg5.kc`nDTjd5q'ejM:\qNO3i,6U)0u,TF*3rgF*JJ^&#DqaS[(*&%5%8XA$6i*R:?q-^=u/K2M@fG@C"Aq8Ll#OtPZ3%R=]a23(f:n0l@FO?%\O294^FGn0$[Z(jDbB-GE&89[i!0sWAD*J]"<Oe9sT_>%mcO*7ittsCNp-7]a8QUk\bi[V`*tb?[\:`;jNgpDlTp31@2C;W0#%YVK?`9aEhfND*?!(?"&\3R2[/SD>UA6cba=]YRBV9,?Zn1O%ndi#2]$Mh@r3Q1('3`Gt`DSQYcBZF-/))-2l@-eA4<WYbfc/74=-OG=[o>s81J*QsHQ+W&jg#f0dEGho0Re"lm$[N;-ZS,%<h+ub%gh.k;GQ^4]XL'pn[>rajc,>cWj_0%&AL5&%BC8`AcmglD-RBh-?Cn%4$;VB:2];?mQNXCEE)>Tb:n/@e7YREcR@MoS$b)K&B`MbS%?1ss\?kJe[bd[]$FDKdR4b<pEa5F+AajYFCi-&@+gI-OD)!fQrS@X@4)f:AL"!t_n-u/+s,\)/1M/Wmer)%pCO%O%$1/L).I60or%2.;2M8BIGd9F8165ZY6GP^X2:;m;&T2Wj;8JC6uO,p&f39\q:e'$21_/%$H;TR&:W<G<@Za1!gfL>5?C9(?TV*)[-k:gsH;[9VC=%11KCIbqsd'9.`?<VLC!I)1Q8Zbfg[O=6:S/;5l'ags_OBinCB4%W(GAcWb!bqfLfp9lauA?[''"mt6"C,^-BU6rC`06#=O?7Qd8Z%B5XPX$)0Ss:39JD`0$LsX>4;nZ9hF>4!dU&5NG3dRD5`$KTEV^XprpPiiZ6;KPAkW]Pu\_V7A@4;^02URm##1Ko+:Bj0AhZ\$jjS%r3A`mSfpXN"DN.N+[/<V&=ccV<5jD)#"kpiXCdrYSTTEQp>RWb)]d@4C:"Re\_rK[IfnWRP0)T>9dfh(n#Tgcek)C'oO7=F=jp[M%r1TK\-9Pn78];c-/JZ4@QuC`QW6shZ46YpT2Ls$"6r,%`.5.gHKA"7s*1M"Z%F8M>@Cm6":&YH><nS/T$A`K?A")5]=gt\+5\u'8%X8>fPAEAR',aWJ](<TYhq7a)Ql>^9rGJ(,e?;sPCDDu9"p-R(^T<F(Zk*=\f.\TS!FFr?pXcXU4UjLDj-^Lu<h8a*FnCbZ<Y'+o.%$a6nQj)#+(2.cBk@V#VAY1#?g0hm4)QWsr")IlZ]amX1O^;O#Lg6X+E.u&W3F=].sKqOh2rG.u.[!JcNX;V-f5:"i=WN^NV.F;dV%l.\YA<%E>k6(CY%oiC<@2hc*HX+A`I;D[oZ%jN,_EI^0:h9`6oeYIB0oEn8BG>:fq(&'"&b'k+VFcVI\OM$a8"MJkI5aY,C(epeO%#G:,=I.>NYJ(J\/-bjNWc]sD'd9Xbakl*K^J.0&/K.2'Lh'uR5Ga:`KS0ldTjeBiUlE"K3O`J)=T6,:oBuI#T4`dRfO2l"o=CXBX%O)4V5@c\^Zk/]CRLMHnO=*K/.6#;Yg%JRV%)XGA4$a8';J2B@k9[H8F`0,I'\\HF9<)3Z9]"J%kUZ`;S?t'mdUa&c6R(e6JP9NB7%,[a;r_2]-,i)M!Y1u,jgT;&kS<4bH%QY:on?lB7=4F-_KkcmP+F&<FS]bhYq2EC:AK3>&\n`i^S[^M?a(Ul>KBu$kp^R-!VW*5nC%%h6i*@(*J&RdK<YMMF^ASP0t--aQAPQK_s@$A5p49DuL-A_*i!r@PtDa<K?-6t2;tD($2=J5sJKK(EME`$+Bd>j&Ippe7*Gm/u^5%fqG(,Q$4Z=SCq@P0IACJ/E*k84D2J=44/'Y8sKJ@RIBHhXJU?Z1]c_f_:?OQ"I#\D`h#)Y5nnC"\;DsI)@o>pq4B;-S=8+,-HIUo%WqEl%9gETD*%Q,``lE3VlNH)T^#YL#6"8Z/^$_]+?gSG6+Vr81aP?CH(&C[C&]?AH*WODs#Y;ngSgAs]>ba)l^o@G5QV%C^Z>rI;%)f4W>cg!u379SX.R^QHg#F./RLqHW<7XHi?Dcafbfq9e9Rt<im0`\Ooi(lp5'4>)#*&9-?.e+R=B_@Zp5k9T?D%3@sI`s=a+Lna"%_ceZ)cJ"PdM]%202s9Tfa&Ve#MbFS%>+(6]?\iaBFUu?)@LBreRHAr!)c^gKKK!MTjs`B)$ug#T3.BY+X>Pn1HW1hiDtbPOm!i>i%RpGfLOlN[A/75&**%SYk;UW0`Hk:WM:0=Cf(C+@J$B*obnu?!k_Y_jXlPUK>[&(eLC;88PRtpiuQ_m8P0m.sJCZJd]G^'k;rR+7`%X%_qI3h,r?IRs1'1brk@)Z!I!kuhmQq*qa6OJ3>2G^WurQk"rG?H&1fAoN"=Za8X*-VdmLjj$;RY>s`D>Flik!#n\<RF.C&NZ#J]%i@FOg/L%f;Q_'S2H_,<2HEFD`*CS"G&BEds(Ho%E_FLe/qKC7j[_'-_h.o05d;Wu.dELI'i=?1_1(]O!V1YPG_u]^j!T',MD;s4m%-en[J.-K5k<%AA@!gYV96aBsde(]Y,5C`(9@fM;A4Ef'sEMo90P2p50piGM&bCeql\C3KQHF_G1i,YXh^e>8fn]rZSVRpghJ,U[2%MDmrqdm#3ckoaV%%CV>T'Q2&dW<&:CjK:7KbK'O0*rE^h8Z5LU2,dQ(o0]f5bdo0o9-!&h'!2kih=j3G46J$:/)D`=7qAV$-#/K,%XND<A"2EuC>:^X@*WZS__PT[!ktoZZ!h/iiI%<'ob#C)KXNq<sJapOXGdD<q?P^^8-S3s%!`^ApU+WLD-o5[:Ns&pKA;SC\_73bT%N^NL8ZJVsZlIi>6>q.^I%Ym$&HqNsW8SM"+o=b2[.*kG;7>[s0IQ8U-clFR;EeL3M_oD0u>-tP!"FO=W#!d>8)%%C:)nE#c`+%Yn%7*fM^:DFa8B_@]I'BU5!_K&`;&[Jk0i5eVB.oar#cP`OXPhDq,-)e5M(i[D!$tk4&r;Fpc?'m/];"PgD`o!6/+2sku;=s$EJ%f(c%Ze]fTT=_LLag+lt0Ib]r8Im<%cUTlRLP%0UMl8_"HcY+jiHNZD.jOW01K$6%lG)A',WISa>T%OZBFiPGq=hp`Ab)jAE3ReY*Jd[]%M^G<"L#O\iVK%3VP'WB?On"#k>qS"h4<o7XV<TeNo"l*5/PC]B#.H!.=)O;9pkDsA/>?C!35C=f<'"Zu!o145$o<FtSPrKSW#;Om%ItorkdrN:0c9TGKC41f:d8PMPK=#_:\Jh:foZ3e^q_/b2=68'7Z-#5ai1?16d>VKY.qd?s'eBDomTD_tgWMp2e?&VNlqGA9<.4'^%TFpEp\hAVM/!HY=01(g,XrnRbP@KdHqtY"6gi-H6;q=R$pW@n#7U@Q.JbH_;!OK)A+L>`*Z/Zl_jZYLV220f2Br``4^%!0qeGg3C%6LWWrRTH!<X%R2(p"m(D#\4N9[8;lgL<PUis3auQ,))%j"gXT6-pE@ER4e#!dm\cV=$tM4r75o4prN1U%6W'^Tb9'4K/nod*$.S$%Y0=hfg6gN0UGhG(9_)L8X*>^S1G<RQ]?.kYPWi<>*)Y@]^8TI`EWMMl)qEG_l#*$=ULkC*XAW;g*.sJe't#o6f]S1Nl-&e*Pb$PG%kK3?$`,tSjWa=^YDVFmrSIUI?77qo-g;JCNNh3[O+XXUl+-J5Kb/i.Pi*0PYT1CgQGT,Y5]C&8`I^F*qRdY.e\E*Ohin#0ihU#r*%1)"0"GVGI>mk&&4qt]RHfVK4LK1/6d9FW;ar8H??VI4s[FPcJ=B_8=OnRB/tLZIl;Y9:0o);d=e&ep)u5[72P:>Z=D(eH;d'W]R=%-acfWWP-X94J)*P,`hD.i@A6.:@%XC?`4Cmj(qVA:#<lRF:5[9;FGFglr"ZM;onD`pc>m-lJ^&$mtEMo<A(:1!1F"thossWY+]/#%>&$F$HR)*!+EWpJj'=rtqt7/F9W=f*&!"nn>0R]EK(lIp'?BRDHEEG'i-O]9W*c<l7r.h^N<%S:aFikWP5"GFIND^[Y(W=IQ`_$&%`BhtAaO3X]kh%efI$DTE'I0&j.9p"E%Zo!*"Pd^lZQcYs\[UEBE#M5Q4)1?%jl;`1;8]XOIQmK3Jlql2.CU0jXst`<nc\HXPH"E1%bU/2?JrHZ0?70\eCmh[dd;jGsI^1O#PLh#9d`c3FM_sNUA&Zu"gb,SDk(*(RbSCMjp@j9UQ*Y7jpBc5dB'OZTQ4q,f8:>6WOhVQ&%@KL"Kl%JjY(NU&QoOqu&``4<u-020-fLe1KD_jANk*?$;[\eYF=rn_VS=WPH,3+L.F1h9he)gP@'M7-$4cNohDMJ1!#f5Kl8<q)[%/<k#=$0=X:U58[hkNK6dhNn%d?CSk9:<T9Z0QU8h19Yh`?O,QRAVXSM4Y$(knes=Hm]SuPm.Fm/A69/V>r;"`1BI&_r)W5or"tuH%1Xb%H1\_:l5c-RL/+pKF/[>i@WqCW&jZ+r%PG`hCZte87e00"3Y'nA^c59-am*V#jG\)?i+_;nH:qofmI*Yo4^6o'LZ)S/RI9QN-%BnR6F>Fl:AkS?V7[+!Zk!b13<PMp4X%%O.8UV=u<;bL#Y&5u7`7FnD8q>P#h5/(V\`&md;ORG+.\#4`PYOu3$0;B])[#?Z]S+WB/%iD3'[?B'.eNPABnjNSUCs6\^"S`<O5nLH8Wn,EqfE.1iNIaG(sN;\iSc'"Vk@!eqA0jFbfqDrjoVZZ]>rXg3E6NFcJ]<]78>Xt?f%I%3"fq@>7C2L0MeAe_NKgKuOnN]0>[K^V=H3GOdU$'B)80o5l8M)a"O7?aZ=0*g=HIQN68Bqm`[6Po`b:On8gG?/D9%rD-Yi5a)e%gpdl!r5LB6eY6-o^HJmjLN%4W+huDkV_2H',L`e7<[i?e<8oENc`f995OmAcEtSG.,E?kerH9@9E+r8VaoQVMS6[q<"QmEQqYSmb%4aGhr%m0`7.NZp^427;ZXW4tBDpPKu8#p.BU)2)>"A%o\s(fgE^<CL)1(;B9dKTE8kZ5-[khRpkI:G*j@^K.n]RC6aGXF*sN/IJ&%jR]c;A;uQ)mN^kA"mC9i(6K]In8Yd!*/qp*oQ]//r:M)oo2s\\4nJ<$G\XQ&^sRgQ4Gg`H67/^l&\G4o'/dU_6XQk:Rf-JD^.dIa%/^E.Wd14k:'n9@IM1<UYlC^&%Dio,-5X[No,T*2"@/9]!q!WjJB%L9.?"bo'b#LHTq?t\1huhb05]$,\Zojt]%qkD%]KVqRgQ)*$%:?]"H$i.Y$$2t/n5AeJs]h=q`@>N,CDu/j7S8_sV<./)5I>`-)D!9S_H)t):5H99@U#?#kWI7fYBE"8IhQJFP;7fV;VsChH"6:HP%;0/h;c7lS2Aq8lO+4k+/[*oeqp3!dnrp'DD*4<gCq/h(j9,R-+90(4^:],Iugd`t9e;GIYO6NU+SNq9d1]T*TMK=efp_Cif+j:8)%7.K^78_2.h^FkX*#ue2_IJqSReD>pbYpT+t#YAb7LG/6enNbCcF[[Bqq!g1'T::Tlp925KS&85s1V@efO^4S=lh^aBX":t_C87t>%CF<Ur^(A9:KE0*Z\'lK@?UoNTmGfNUmFH\ms#$&0"pe4]SJpp<&Ru5alV3.)h(U=Fc`a0\)M58W*Jh\B$:bI,EE"B[k"\!p&sa$Z%qsl<H&RS&Ac1gP,-,9CH(]dF]H'nADOeL)JPI>$arjQ!=m2_0kcaB6<_MPCt\$_Eu[2Y:ulaKS<KoMOD#TL=-)3j_,^9L)kl6H0I%)#^ZfDgLtkm6=Kr\j;IpQda(_Kes=XUk;UBV7<)!BtuN'>'^'X&]GC'k'm-7#->N6%/"cV"jU_AA8g9`-'gZ4oo]7rp?HX)+&B\3%@lIE``]WcJY;Dedk\o>mK1&tGN1bpjM-RB>gt4R/-=d]3,<A*6$`cks6VaapP3)OWnTaNgW7d_`S3\4d3a">Zqg<<$'<;"Z'-F^\%_pN]k7ZRfB`o!8cI,jH%<ItO$V#g3CG5P*YBGW$+e!;IEU1M``]aLdCR3&H6?aJILK06hbaCe8hc8sn=c>Q?';-RVJqq#bmJ4j`Y%!X*EjFuBHCAoY,o)qH$+SlR+JHKo'E019<$0B%'WcFpq4QcFaOi=J0ofZ0b8gTm<OHt/aEb9%T"Zm?g&&*h9D3B#dr3A`1D#QM&p%*AQ5;2'*b`@`m>4(+K[YY:G1;d>A*=*;3$:3\^;>rZl7MlV-@+>D.G7$MQS2d_sB#J!iQbS'GX"[E[Hk1T[RciVMO&4<Clm,Pc;+%h_aHL)RW'Gr-7;X'8s>pWZKZAMYkW4m`Eg,/HsdhPktlt=^f@2#G+Eg)6pNh]!HDbqlNF\dW>C3lIdBZmIf6!j_CuoQ<;Y[%#X3k%^WtEA23#(f4`BoOH$DG3&#\dDQ#Fj0=8%1[O%fGd@._P0.g44f.0`^o"1>db9onS;Lgi&FO6a:*gEXClqLQJDS+4"*%pL#G1X\(K%c$:XkJ!>#ed:\P'JnF#IU/]j:8Rm$oK?2R`Tu0L=D(ZRJ-S(%mZIb)grE'JM30?b1@F_+\iHEgC:#;Ygk$YXBj*]aLk$%[L%5uqF%p!bGtN/=$CW(::OS4XsmX^qO$Y(MS8nE]=?[I/efITXdKF[,H\Odg9Zf>J/u,k0ZTZlp3G1a?cCQ5_lE_f?:'s+pBcX*8.N5.nDI%#@pq2"eCE>jI)$3g]\k7n-jKPZ`jioQe8s+M%NP<WNo(:VaqtkR\V4Hee7eKGR/3T;kC9:mb=Xr4`9r[8DMkfR;[<KhK\^r-Jqo'%oBRWV*dN%k]2lV7aXD6_7'4lr\_3n8jOmaQM*-!eo3&cYL\'!K9\U+bX_l"9i2"VkLQ<I:jsXC;ES(f`atf4;JmZKQ/VX4571#ZK%RlbOZY"?6IgJa4VpAaZY4IiEQ2>Ot\T3i[As2_)W:VXs`_ZMj9m+LA:!\9p#P"V5(<'k;t'6=iad\qiS*]nOgHE-Z.F,=jIraRRM%#CDSb8AI<YJP&?Mb0Xg48bNI`TI/@80r?2AK*^)#P:Va[=uKPkaYPl"F,dhYDb_O')MShoYt#dX-d0nV560]drNJC+X+qqpW[-I<%rq#G#P9/EQJb9;1eDXqR6L6qV>7'1fFfBp)q//tgLnh.UqnYhXHpmLg^843:)IRaO.*=EknW1D^P:e_/'0U3tibCQ<ZbI^bjNDH8%TKmQt-fuS%E'kSP/H9!r(I@BD/_l/RL%B$M+-4O]H$VMtY=eA&JNpn5o&9c'*]XY8H&54EWg3Tg&>UtoeUBV4Hdh_6oN39s)Vn<!%FZU)XFSH_n5TBUtZ5TWuA*c9Vj[)7K>drTppG>^A`<ci0gn:h4^Q4\=VQEuKj'DFsBeI>cX&].6K-(WAj0?.eYY^I#C]!r#OU[?[%Hff2:'KGtHB+Mp=A2sHMmSH\`p\$cL9<%7PG=N:PBn\i3]^;m7&#K%S\bilM:Kr#"gea'pEi9C&6d0!om]7Z]2D2paN3jI=K/DuO%jLtcH7.41\gkjUKfSC%8B0U$/Q:<uS"P#nJifpZlnR+Ct9Y9/k*lT.Ep\DP(a$<jKpHNOf;PF.pQp\M)3P2U<5WEZ"2PK1P7.V?-%-SfN8pqu"(raM%ObB[@h,F^kNoSrZ10m#XaB,n+C?D*-3]ghTm@;8.>lEp4(3VA59mn30<(S%1Lk;'#O2d4oOn9TgnnXWD/N+h$W%CkUcE*+0$Lau6;H@!mC.&[@H]bP33SK1)QNTOlNVb<bW2%r02[mJHnUEN>_X`/PcZ=ndKhYM=HUP4+>C5P$^1$*CLj<seZMVsjJ>%PWpD9P+M#pC;c9/1h(",%qb@U)r$Gg_>K_7Nn!3o9GATooYLd.iK)G]Y-]-<C+^3N^^s%GoVm8r[j@>[gVLq4rbsE[:=+ckp;Yp4%=7Vn*5JKB;mfT':[cE>d[D3or2L+NR2p#bOUH9Wi8M!4sqUVS'Ytbpe]U;<ABU50B^/_.JJ@=:IZHh,M\W?+=mIYNAejc3q-dl0>%JnR=%k]O0)%7ISDR.ObQ&i7%gJ6:M'Zojq\LGS_*jkcp7oBYEl*uXXn49VDS+sRWS#8lr/R`0&jk3*nY-q%66bdFSj+M#D&UGgsn%KceSAa67lYrSW^4A;k+[4Z$!ToO"i!YO8R`@@`#68D?a_!=3`-Qg/C$jPB2lLWVot/UGof8#i>AfUs#/na/kf1uA!!qq&meIl]#S%Vs7:\]eB?If1._^nackKOmm7T%sph8e*(gGp>TqCS4HX$.5a2r(n_?P)Ybm*E8"^hV_`r3pd0gMm#58%SRqBW%sm1>gm0jF[-Lt7%Fd^C?\GV&0,6$oD3-C?@6C.ek_slicZcU_[SUWaJO6>cdm"PFc?f025c`DA(fE]\[a4@O,-QPt"hRi3oP$QKF(sWo<ZEAOp%hDX'%q<NTPBdNos%t<8,B:nLn\GNcLO*gT)^S1\!.FBh-d'`<)JXk>=!qlQuq/PKqdkdWT<1SXX>0YZX]\HW+h5`uY<i4(]6q_E>@ZN<U%V0_*9"g!kOLO<%YCB`%CGUTR1^oC0-&5#dS-i>&mgd1i[cV&W2MuL).3;tH<%#[p?NitL)=D=r/*2[H43#hp@a^M`cH+;(%](e1c%8"YpA)eg_BiO)"?#b<4ee.uZ0If4TP<.k@FR/4o'%pS_:XcE_FNF2."d<F0`jk%sn=N64fj;d!7!Q!5DjD8A(.O=q2Z&c=ZdfWi'%;ArMfXU<]Y<SDIhM\DR-6FGp8674OR$":tRj`e:U=s!X_?$Y/<a.7ZA'd(`I)oHQBll5E3dPW>30/H*Wn&?s5CS!^TZeSe^e,PHR%PEg2JFiB3])2+%!-P^`JMjre6"4.skFZYZ?PIa>$Kt:eT6TWIB#45@4mf3:Z\18afmbkuhIlJ5dcHsIC]5dRN6bd[f>b60-4gFgk%,@>NqNKJ<$]U%6m<g<(628YE;(;DHljP\;9]_=:%NE]Wj\r_GNrnC\(#Q#=`F5bQp7\MAGIYhm'8u*>S3-ia,;"pMMs0eeY[;C1E%Lj:oSaf6NX'IPuXU(PZJF^c:.J=8UK.>a)L^>NPD"oUh,H9,1pIQ2ukVtK"ZhjiG>%$B`FcFddJJ(PAbUX7pYKW*\I8dcLK;2,W"%&kB(S('?8:#oXO/<uM+kCd!4AT"mq`C0j\"K0T"a*hnA$90E(?r(PT$Ol"Y+Dh.lE7(`WClu;qBEjCh@8IZOn\:<X6r/4MDG_2NI%g;Bo&q7#84-m.^V59;iZJ]e.1U^i22N)5h`i(6g%5)A$(O&/l(QOCQT__`U](hfib1e1/N&[i?olI8N[<EC5Zg@r9K?jq8:4a"hI%k\_HM(+c]P(b<m'*d5nLF-<H-Te0PggcBAaqH)GLE$RUeT%cOmS_U^IrVZN5Maspui%X$#cF[uYF&&7ENU#lj40af<_lU#bB<2\3%a)*nmR2W]a(i_;*qh`4O]CECL%so:Rr^,LS7C5i0Fi"%9rc6ROPILu6iK\r$8jl."25=f-71Fd1-5IN6D2&BjQ6U;_V615bRW?X3%4(7["\c;@_dm%bCo_fSTkXr!X8`kAr*o?^T-HVf2&7>Ta&S5/K!dH.jJ!N2KiW0uYH(Y5ca^/:2]"9/81MST]Y;u"F46OPD7kR$o%a,M<n_7_3S^[^VqM8$=a$lTgKiG4*4VRr"=6,6'3@e1EXXQVtejc!ArmdUCu3t?7Dh_n9jE$DW0iURj\TnMB;)A]YA"*[4as8%XJ%H.os0NIEu(T8q5:^M[BG)scSHDPaD("Ki6FLC[[EA8=j6X^JpU:R1Q4dAt<PK4-0ENC8*KiL3;8U91$16XOL>mh*Kj=IUV,NT(Sg%M,]!qEg'2E("N+&9d]0/]Pi_,O$!-@f,r;WLGSRAg2?8j\[cW0PuB;XV*),`5X6+?:aq;KGl0J/m3,]gh\^k9n4&[A%l%AV]YZS;%.b8I]Bh@qhhb1%t!]A(@RQ`ChIWtcADY(A>&%h\s"?`9Aa)cB5fR(@'II0865-a@/T6K.Ad="&ZQ-A!_(Dm@KZ?ur$J,8Or;-+RR%3*k,q/5<ZS/,Z;aRHor?JddCJl/?huTtlka4@EJV2gC"3]"`0&@n\o?XfmsX_l[1f#ISk4gJ]9XGsoT'2CNQ_XpRqVs!FP'@g_,+%F#IqEc`'8-ldt0"O]Zif=-"`uiO$>![^W+5r;+@.7t,pHIJ6LkIN#3%iNB(PWA,<^T'2hHGf%][+lB]u'<3!l5(i4LAph4Z!Y;V4%jp]o!7+<S!?78IKjL8uFpSM3&a)Q;1Zh1fZDF+SQK+'FV.\0.0XlefKIlJbs%b1C/4'gIIV>^>gaG*3>I:-sE\MAEnfUPg+41,;$%%(_(B3>:@OqP1hmR`lFR%Z=a1-E_TPP5g-A%t!e[\))?&?[r"rs6F(=Is\;Xl&f-RYi2OUgYR>K,l]cP\tuI^gquX2&s7_h$#h%T%=n<9+(pjUki&UlN4UJd2e+;\U[\^F'K3i6ChnP9!\XnF[<d!SUli-pDm+L(b,*_Ia7;6a\=XMnuH%rZL]aP,7`=<>+lnP.H`T3C+%NURXa+=tX0FT<\]$=L<R7nXCd>H0tk8u.2][\Fo#ScFgi/[s*3rLV;qV)8!1:!e%FOspFW0V'^q-0t!E!BWmQrB*b,<B6,qH5cNt%#+oOT?eHY754Rrq\'M\UZsV-@qfi;d\Y[3NiB(4Jh,a@V%VYAmYB)@/Uf2/t%R0_uO:AF56Zoe:1BCW+Varf@j]E\@X`T4.@?nV(%!*DL_.j?s(`0<ij?RdD)]>+79<n-FY6+-7;U6Dnu]'n40:1rpQ#Of^tV1@dsa4+_^@:G9jporODeiY_X"2c3>kA_F_QMZe%O%aq/%pf0A[!lptlZ7;qF%+JP?q<1G!5]q$C8L7;I%/kJ<=<F#G=Rl5e<tk+57SF[.E[(gCI!EP/_BWYFmm[8G[=ZsN#"l\fWqYVmN\,ip%THh-bVTUKuZNVul/Nb\'d2NU@TQH!-9DnVc_\3".D>r.:]\D(SZa'Q'T4p9.9X+m&ffHRAI;<TS7IDFN^Q?i<fCYL"QU*fs08#o<%R:H`;Or4\hEV1pWMDTt/59sY]*'+9^r;I3:MibAW_cS]`K8KG%O)H4RCi?f[gNll'Yt.hU]/g%*d(h-]R/]d=:6dURCG&DVE8i#8%+jrpaUdB$:"t`EjW4MssUb^T9&tL4)Ypq>dmYd(;O4Eao%Bnp'_;-+=h/m+Va(71ZRj2[W'4&R]g)D<G<V7PpE9WDH7Z_&-Wc.RC%^f)J?DQ!r=2(8a7&^S[P[KjWKEqG(@JKKF;65-Y9+qBiGW!F<+3*&RC,DPaZQL]P#pD,MC`\_k?7cH?GC@2'GZkVan@.IG^nW"3t%kXC#qCmK#/eXPHVm*0WHD,"j8BIt9A"c*&LQB]Sk&AQU\(9qO7f[+,'N&0c@+/dp!!.(-BFpsI7LMe?5%<%lRJ4=FYZ-ceGYc?`e%7r8=1D#jpo\'7.h_n,@BmhjS`9[PgY%sCUb<4B?3f->VnlJ05<).gQ'0\&F]X9EB_q<0f>C`J<ZWW\)0E;t!0dT=4T'5eMGWam4n%oW4XjUH/U54f<a6WoqS*2F./ee;8Q0h1CZ^\_5,Q2e#?2\$=TP\n2T":$q=b:UF!WSSkjPm/b]Uc*En'*=(9\fnH4+Z=@UG)OTD)%o!DGiS;<#;g7=%U7W%Km>M8st0SA&7p83@B*:'.`5q8VcM]b9>=n17/m^&AD0&j)E!K7pOqS"/-YH'DG:<l#/<<kVO0#I.034/^$%$#=<ZX6AZ^Q#K(p@H6`Z(Z!:e@<ub3^HBm8oukH-i-i<#_*PGW!X/8*G'?D+6R'=A\Gpsn8ola]\\`8*L<WINc70&)EG;=<"$"Sf%b94:upgZKjUf$,TE.CW%Bhd:[fDnJ.)+7'KeY-Bt>')<5M_t\@0b]GoqDN9<X>n9Mc2d@>*3K]ee5PCIna[>\_c&d'<eU5h/6?kN%gp=oB)Y1jHpN`>]!&/44bZh9")drF(k+CJc@EW]\6Ykfp&`pW)Mh%U^W(g7_l0OJV2p')l-:!jNI_Oe2D9CY<(=-mhe0p<g>slDD%@/`6-6m#Q)!cXkK*B>iQ2?9V9aEKcYdjKKH475sgDS[h`*%qt]Vf%-SbjlOlL1[nA+%T<U*A).*o72EX2O/,#qMZ5>##*CC,,gQ>%5Mp^1gcCqTB(Wn7_Z>dm:)'ei:!isQ2Sj8?LN19A`[i;dJV:E=/@V8nHhJH8k#h=M/._sSng_OA'TY=UOp+Te!ibC"c\kKFRCNJ*%K^'0S;;i)mpPf7B:j:P6=98t<rjKUY:U"='=k-,h;&qoc'CYD)%HUi&dajGsNrXFl$p`!j7*H/"^`/AfYVOE7%,Gh)qujsQ,]#pb%ShTJs)AJN'aK6Uq%D68V=8n&ERKAHS/bJ]f;m5tu.h8KVN:tSo&GH]pd#5]5XYuI%N^hYUb8G<ZU!\!1N\%iiS1hCe0$YG5-]<fc%JcHioae`l<oY<].+_b]6*aj10rF%+KbVS\!:^M6&6dg4AXLh'c\0i]8h`7Ir>c,fUr7!J&_'9[<9h35iRL-:#?QNN!4r>'=oo<sB%"%W%ujY">pUN*maToZu>30mqI8e+Ak[+Uf,EB/pOref$05?=\NEa'Ed.lg7)ItgfbaM1D6._JKPnlr._Eamm`kWEEI%cD2m[;-!E%Ynci[&0)L!n7M'8aVAg:5"!kn5W)>oR6hSF9Wi:Ws2Y5EAe-^7"A@O_R*A>O^Q,!WbT3AJM4oCMG]TNVDgrT)SMZ%G4m.[f>ZN"=%9I$c^(4(8KN0QRYi62')^E%;24YH*jn#?lZ$[GR60VsaY%]]JrmVcSgs+uV@!R):Y(e.87Wr%*dFai%&"AZ$oH(OeuffLhbd/[J.%f-`::nRK0:&<"%eLkZQ$1InVrS*b4G$&>u;3I.]A"Y=I.!Q@/7"[K*iNESRq8n<pclrT*H!7ED,NRU%H(7pba+[g/AG)IK7Xhrk+%OAk($^[Ar\n'XChgWkiVYqie$%)J42))t2alBfD/:%)@W3T.-u5_4J+Pn?Qgm%mH\'hG172.<+RBU:%7C-]<%bnm+I-0#Qn*2Edp%<Vm0.jm#11+IKNmGF+MPW.SpS+<t*EKG,BbaJ";mlJp(982Tc6i;gnAT6-/Of/&:-#kM9WpgUa*=&6sT!=>i'ji_C9LgD*2B<p]n%o.[]19;R"p,HC7B9`+=M+V,%;\k<$^,l!daZhfHH4*0NmNig^<!f]i]7tOhGO_hVH(C(d%#sMt2ShQW9=ZJfSnS-h*d0U,-aB5/(%'gYhV30=thh"aXN1,pqfdH54Tk[4n^f65fU#K'*0"pgd<0g'I8kdL!7E?PWTGdr0&"Oj_R,VjTRLf0dL=8Qh=<pLA(^""/>>+[07%_]8U*PZ1.V93i=%@+b(-YA)K=SO++Snb:;Yb//Y;_a%q5K8hR">]>7_>OU^uhtGi22pT$sr9QFemNpgO/B.AM_?tQMHS+^`KcShG%0CEO[Jbh;,gK9Q>a`4(I>ZE^Hr%%KC%YYJ_Oiq'9gJ;6_h2`'MQfU,mnro8!4+=QCXjKkmVn]rUGu?<o9WhMolZd?^QZ<*,ScM3K%9AkEI8dPM_:#amRjk*;ObU.7X3'cg'ro`PX_bN>fNrqog9_R3208j3jOTaVA]:@ZYkNd.2-P3+*,*aCBpE=0&Pl=&$:gF3LLTAY&%(Bu"2j?]i,[0)qY0$l#.QThPD1n]W%X*3FqFCk'X$/D*%"+[1/R_]LlP""cH44p0`Nj]p+\?k4l]0Nf782a7Qq;T"3./!!3QG:]!%,06#:SM^:3XP,L]QgcuF9n@0)8fQG&iu,,J0lP!Nr*T5RA:2to!,W(mp2VH\m8r9hRU0^Q+?Lj.2<F%qq+Sr+^4bQrlHLH\7GRY&%(f?UEk+\o&Whhmq*&HtcK*0!g/>8hC4JYe@l$P&@Eh1(\2a<cR&*oiO7&KU1(T!>Z`=O:I$7.47Pl8<&:^q9iESN6_X&XaPZjN#K%BiV;R*.&mOT2ll=?jfYN2+KMomNoOJ7:9n+c4nc^p!#t->@P"i-=S@l%e7DA80g1'KquAmT"l#/h9noERh@C9Z^PM)LRMRoi'UoS%s)s1F('JZSK@8&:o+g,]c2fiO^*iZ`o<I$UGU/mJ@LXa1@l,0!&X^L5Utn7)o@1lYMWmYM_E(HSZ9!fG\L%QCMt8&EqT%qP)[fi$%]GRe`:?l(";6%MUG4_6YS,i[c7)*#FP<+gJRRDT2;o-h!RgqanlBm50fhrEP."LUE!=^EFX3V$DEF`!BI).3'b@=D5+dlaI?Lfd&%@d*L+[5uB3g@0"H6%U[2T;k6Y_EjG7n$'3UERu8M[=hJs+qD00q[,@I0CW8/^5!g1B`L]s/L:.a5sW<H**e6?@OD?2!p5o;[@4%3%T?4tHGo?,RM"I=U?9cH;pbU<"bcCM+1,?m@Ak<Vkc%=@dDH>P9GPE(2(FHH@Ya/,llL6W/&4\)>9P28^I0*b^NdOuLncf.[,Yr@I%YnH#)D%ImF(pWMDS/LWQnU&q>`!\[N2CLZhflQ6B'@=t7ipZqERHroOq\<9M[Q5AF2776=BYUko$j4FO$2<FCW2FX]+.V1HG@%>t%5kZrkjMDRLfZ;h5(\%*(/')X]#k9CD\\b@!eqNh7-8IhM3YTf+Zk!2NMmAdd*^iq1WhI!7X5D+#Y?9J!C4AeBhI:6]BW?1dLR0`H%G\6![iikac-N1ma%RYsQ7*697*W!2KnSJJ@1q\?E\5;GB2HD?5FO8+>n4L-k*[(0]B8qN,WV.Gm,o44Sb+D%b]l'5O.m)1Ql?VR"%da;W\],L6_cY#Zm$(KA9imG#=:ieDDg#m?pl\^!kJCZf3b@Tkc"?81caPOgMFt[`2mZ.?E\lZHM^OR&I#C3R*&k)2>N?ME<H6;l3%%YaD(]YE8u:jn9'!8XgF+1<-0c#5riN[_1Zc$u8joD:ON5[SJ.G7d:6^5*U=C=q.uUj.LGEl6#oCTVZ,7/!L9+=@qV=p<o/,+cCh%\p,d_AGM,c&9u+dNVBt8eQ/j4&??eEBa!D<gug!O_E0iiD^Abp(Wrs=<`C:D6e@1F;8;$Gc!;?sX*;@0DZa%ZQNh+5QdVTDeCunP%"]NP:I0S;_:L0;iol$BB8!;Q#s5huT]r`qp7b8lH>Ee-p16<ZJ+%CYo-Z%FGOsB%MT"n%tfr$-DKk+b1Eu_6[2"@0e.Ks>u$(;FM%r73+X7Qf2!I6%<?Xd$]R5--8#R!l0^)nXV[qeZQ;+/3DZ<pPoGjn;Wd@B_p1liJS8d['j)q/,K;OQ>)!441>UP)kd(SDtqtEIUM3%e3)6)Y"U.RYHt3AR;O>i;<ZL.kM2fmj\l#UBuLc'^cMYRJ"H8KHWM5qZ8c`QZoIcG#!&-9J34M6XL^*;fRm;[h]@R7n"F$VkFiss%@>F[]EY7qP+ump@CjnKA/D`Y.em*NKS(cu<r3ah+rR0-[`YAIMc[U4ts)4s&8NlAlcR>J;WlheWB1j8R(/ar/l`E?^H$)`Hab[![%fs>k-gQ5%sRWje!+O1fOfc)*YmZkp=Z`b,K8Q02#m&Yb>LOBF^)D$'W9^NN;o9N^b*G&niV,WOjB*g)7:397Je00r%?c1">k(u$&%Y@3km"b3#:U?b+'MDJjd>#D$*1ui(aaCr?-NfL'N)o760%@$q]NX;f3:TJ/8,8ds$?%2AWYfGFRe[qYdiWP[=81cA]@OF35DKX'Q%i*kdr'OlA=)CqK(B6@ga34&Gu%:G(klJBdIT3>9T:B3s^,^T=kP@gkf'A1Sa?m'f*XXWgFK2ObSm4I+Q323#q/-15o0u-JO!UECp%$t`As9,E;:SLCR0a;XMWN<)Y>BAKV45!qh0-LmR1nc<9MTPW3<KA[.MpaK+*.(cBEO8>d-gO7eq$kX$KM@.V]8/Q*GpG"LJ]Ag&h%8KA_!ZCD2(M"aA(WG"K]UNPR^f1S)cN@j:L3k(!Yk`*Z`:C\>\f[_,Jel0Sbb+q]C>'u#[lQHeuoObN^H-3M6>r4-rkt*Ku$+K.f%`0j"d9VQNplWO#MIE`nqBdkSs>J_nDi9ZZMe;<.)(YBo#8R(&;hEYU-5;_2dT-^Im(&GEEATL1:gtMR]Y`Halo><o.<=67R50I%V%9l&5l`WfC.Hse@eVJ0;79J'u[i(ric_T98uM8I6Rd$10@\p#ZR?"\'V(9Xb\7:rTF-++=($UqmYDpAX/9tCb$CZDU&8s0jG2l9qF%.ah]<\V*HE4e=Q621F-m`49&\JNW:0@KGi?"(H;WWCQPK)o21U_RQ--Ee@qo!nMPJmd%.u)&;`V4(_VbU]-dc-s&K+7TKOA;I90R%6Og'p$DU,8N)fDVJM$L-XJfQ48sD2B/NNou<Ykj[%BG@qX2fEj<HfT_ZLjii7S+eADRVP3B6WFCGlrt(E#Fcq9T`I=O'=,54bKe.%B:Qdr:8'8?VI%'O9[ZUtV:reYiiTbM93r&.!ULP)dUg-P5kR#eVRQnq!S-UE(m"Jj".6+Y_X[$Re:ufo+-?s(]Lc3G&@8cF_l:p+%<3IL8]LB^N]E"p,X`nI`ej[P236UTB.hBg]&>^#D%lpe!VH,K8ad%2F<WR\&1@ks<63E/jYF/4<5kKXs>VnJln?ff!\#t]*@IO*B%]?Vlf)9YLV(X.`a1"kq^"%^@ADjTZU?6o<ATLl^%G+:`+OJ8j:<$Z?TG%%><la[g7PH(*o;#'mW,,T&?bZg"hFZq[se(_1I`o^Fa%^0GU-%pD\t5[W]HV^C$UTG?E/;XU9U+oZXb3&d8lip6E)'i47@iXUl2dE=F@a<rr)A8hQi[YV,H>oZVU>L20^76%-R!V,g+W*7/k%$V8DH\Z+3,;]*/Bg2T;q$+="n0>7V/ZT5bppEt-oPtM%aRd:Dd<`Yo;p<HHYj*-%=DIJp8*3FJ4W5)D89Ql]bR`g+f8s9di/r*@G%)QZn#@*5Ht@FRF#-k<B+WgjI)(V-RY-ss)l[Os@4pH<W1B"AC9KNT:^k'^XWniu/5?_`4F:@3(Q$Upt\Xf(#Bk2.*/4*$hCE?Gf$%6'(t;$,5Z\rZt`HB\ZHBY.XWI<0q'XkZG=.1ietN!TO:+GSG,3"@n.eY^=`HV9])BQM!UD]"5k`(uXcGKSDRhl!(Q6*T9Q7!KE+=%Pbq<kh>V>92s>A0R+:\#1.sAsp%8-3[Kt_>At9c:,61NEAK8&`ncg<2lm^+YqW9k9o4.U4e$[_IMsWRKK7VZ@m4nk7/r4D:i,Fq]%W/gk-Qp>_8"+=c%S]>Q0U+X1.$jc9u!ViPNfuC`c>Dd`M?k(k50!mG!3aAtEXINH8+D\sVj5t<0A8gSn`'%i`e*KO)TCjCDbfJ96%Q"P_q)Mi&`TX`8%0%0T^Erd5Ded9uQ5%0jB:/DNDf1*H4;(glokGFX4?,lq<3e0*DG9XjQn5bU#jNM+1hlrG<"40KMPZhMP:-s$S%l1DU;f0r'5]&)qMk/->4C%d,#l=N$jTot-'\8pRKUkMq0W-#tB"))`_d)A\E/l:*I1PD:B.4jno,d#+))V:QkWZk=e:,kYRA"&a\%V>*5\>eWq4aSCjkDo^G`lt%EUYd>+pj,4'l8#dcTH`Ll]!qYD*Z5&]p-8_`M!.De&7eWauT7QB%`M<6bin5U-24`PJN]SMeWYIt2%d)9\aH#3T_U^:qu2dh1_@W5l-+rZR#<M>pSJ?-teUV(fR$M>4#,HLqT0GQ(lHj3Hrl]'AsHdKFq+to^m!d*:@$cME)XoX>>@@FA\%*n6lS;B!DSkWL+1q(*$DDG.V6U:GKbQ7mi^C("S(SFL%S6$@/b`)P2,VCLTE"lA@!JkXBElC4\=\o2M%ptI9lV)K^HGP;,QS;e53%%"+NZJ<B1b.]#X,/:o\'!JkZ0(J3!mI%Brkg7.It2QX<u\Fj?P5M(Cq9WLpZ_m=t6H:T`I<;hi0=M-i5^SU]ois9DGoKd9J'_.o[%q['NTWh7*^F>jttY;g2*g1O4Yeo]*S!g55cl6_2MALZb[7+31KpOp[C<FuS!>-=OXmOT`k'9c_UH,?+%#Z+d1`;kdFeeeD/ah2$/%NYkXR-5iMK:$@=nAV(WUa*eFS0q&A&GP6bF5;Pa[;Y948Cl0ftRb74#*0_,,<ALG)s7@@159oQZ@`I7;`MXH:WZK4pH,\BUL>uLX%[0XqIq]Y>)`P6&(<'-f=23/l(Cml9.(^>(\TR@2M\i9\s!mumR&g,.(h2'_HNq8saF7uT?7%$R/TtdrD.M7&cZt`j(f_b'6"Doqg%WTkN9-aI<ASWE!f4;#PsCQ<B=(&.L6@oo?A_1/Hdnb5bHcZ58.2V#XtZta&cO"e5)j"0H`;dR:mfS-J_aX/CrT(=<!\rqXiUp$.e%Vl>AbD2#1*H/SYa%adC?Lg,A7*9]\SF!D@Ws3m0CEqP>HYT*WMdA.jWVc0E\(KeR\=KeTQF\e@)`+pQV8-CZX,b7KQ;1#W[Z_7<f%N6]lcLd&3AI#?UgVo<,G4'$`Z('?7fk!XC!2SDC>I1Ls5c[MO@U&d!NkGuW2;s9pWWnB(p(!@bjH0h"ci(U/Y'9%t=C!GNW?%L\a%d@AhTKNj^$+_PN5CJ.IH.%jW<ETI5foBMm<e*KEn[l&YA%fX%A7dK)$2:/i?5G5*_aIop$,U_.hjiM!)5!TGW]Wfk=s-U:K?fc+[%Plq)(MOm00L.Er_^gNb`(k77<.eJRl=`r,h#O3_[:?7D@2?R;+J:3Y`p5\Q94AY`]^&Wsn`m>+5jU.1ecV7)l_&_kF@;bL#pr[-p%Aq/cK_2]jsDj;TT]p7lo.eac;%YuTT]T77C8#)k>gbt!%gU\CdEM#Oe,^0m:boE(h1>0-Kb;XV4lUFbsJ.B0`TOVP4m*aQ\IgaF=%bKVZ>lBq\U)6UWYK:IjO6b#2&g53I5I8#\A$BgVFKN80_J^>;p*Nbl'ZYTUM-D2lH`g$\L!LJi%#Te[>/YG9T9JkV)j('s`%C7XC%9W1o4$sBtnaEB1[.PD4<JY`X`q$`?B3nil/j@d^<@H.url\nL^gWZpC0=_g`JgR+FBu`D&\7..q)9<c[gCUFi9W9d5XO![QJ1<cH%0']NE>AVsVFTLu!A7m_G$i@G+%Ui"/!)g#u(8e05fM_Kb(#^WD=g&*=FAF<c-([d[C]<E$]BP8c!3+]LZ8k1E%tM_oXqtsr`3R9b%S\5!;Vl/n><XPee(F%`?d!Q?U(,#''4Yqu(f?HBsFU@QR2kXc<=7C%U'rN`7?Pi5GL3!b`-IMH(1t$n/j6\,:*g<h38L]o)Nbk0"%S@+3^"/Xg>l4@]j81"8,/7`6)0$BN]\Z@R13P`QV/0Na#'cG,GF$7FH"W=P6(?+EQ>^"'CnDJT/6<TY6j\m.mp<q^6Y7qi4p8tKa%(IF4^T2I7sOf;nXbgB6=;o01UgWDXIjIaP@rH282AEuG=b6l0"3<,3G4hXsP`(\m?FJsLt@^B&\LoZ>5#[o`uFWG=?;#K8PBBiGK%mb09<'U7ZU7jj>dN=Y9;"TSp!_EU_[1;^t%nGlb\<qm#h8;bMImIpn,#/8ncg/o'0(tE1SG%PVdQ3OI^j3_<9k%GV4C=A6k+@b'U%:YP7nh7H&j'6^JCI%0dZ[&S0W-0Zi,+c'BbflT4"qiR()/p:h_F'Q0.s.C*$Mgd5(Qu,#MVd7na0`?%fol+&!blZ'\!GuqK?06oE%:8h]FhCeW$B:0&3MhX!iD,DFk"Dq`t44RD?*k=(C&gX%jHB(0US5n<GX-.'\Afqu0SX<rO6DDrA6fLg8-cV7F2'QR=cci=#0eL26%G&2"TVCS]F>TPYuWE*:Y$pYa9/+@c*jH3^-L0LJ&_47BK-BYF7_GIu2*gCB"G!*piW1MjBh)1["Pmo<m8Z8S#MY(R#?q[Jk,L@m4%?b2\b!LP^&!D6hlOLZht!+Yh\gl;@Fl>E<TFA]4AO`u(='-,W\VtRnE+9&.:TWB^5Xl-4TS,S5bA)G.PQoae1reCBU7$Kf'T=Dt5%[HC<fcqA(U=clK#,lnjlai+J5``jqQGTem\A5DEu+M>#Md&kRAM\3.j=9n[-_q?8"QWs%o"!cO0Iq29NfM#9U1o[jL6Oa]-(MA%$%MTiLHB3\"ZY`_/pD`o,0>R7_JDS*_KbGM0P@qj$SD9IbrI\VUfc;G5.b$JNW3gc/&r(XK8$AR3=-`?-0p`O2n4JS4`?eeSjm;m,a%XN&R<[I9Y2E&ijo`;oQ1J`qQ0gP:3Sf;gUf"MTONbJP2?SpAqsZtY]01*$NFKq?$.W6Un+6F;DW%<,WSMnM.@A5%4uPC-6cm5u&s%cW@ne-f63<@"M:nJ2OZUChtk%r(n_[T)B<$dTKNh@#EP(X3V]2&0M;K>4XTmTo[!uSA[#<@_k4QQXO,Ch&(ZGAIih_hY<m`>cJ(0%*a>j%9:5P][<VFa'3F/MDSb)qWAYr!J[:>H=U6gH<WCU]OOYp_=BUb/-V_DITUfb].-m=Fgt@FtVck^hQdI'];iab?;G`j0^&1Mr%VDMbCCnMij\[.j5+)VT+;>HE3F>`.gT:RHm=(4dEVrE9k$T3_508d@#QO4D(F#j8*+dqb&m)8%CG-ef)MEg/ff1G>opYX"c?M]rt%5+J=1p0)C1^M!RlX-F73&`SL3AOqD-3('S</S<p(<MMOa\CiGn(ai@UQ-R[R7O2Z5_0]E2UMca")4O5W&WZ!0K^8b/FB2?fF[+:M%R+Yuh)HSfD#C7)U7)K0*D=M9@FP.ujs)"RTnVdU9X;$ERf^DRFa;(F."b(<K#G?DbM/ibNPFS_Baq^kHJVNPtrYU]r\22RW_rMY'%6!*t(h2+V&9$F1;MQDD5=>J6bG'kCIq(`cj3Clgqr9`_a4@dJ&Pr=2@M(,`X:noLcBqC0Sp1<5h52TQiB@+oNiaj*(!CM4K@KmIN%c.b*)3@42N+KR(5#_bCejEl!EMaqbVL?fZdCWUWC0LRGAT0-GWW!/4TNi,?;+^5e]B[+B+KUF#5^0QWDAs+`XdoA^dYZ!YK"EGhe%MLd9V<?O"un1lduh:i7l_pFfEPc?:`=WG[s]iI:Km,;U;jA^:A0n+*V).C51UjO%ba+)RWFB!Uf3c+I?J)eD.?JNkrWDh?\Td_8l%V;n!%$t<0l?=*Ggj.6u9b%S]B,b)Ac1#=7XP-(n*)V>2>(f`.k:R-5SGJ$9#atbaU,7[!KBL\:S*QlXCj1j10(Sq('C,-$5O"#l7%9ta9fldA4NWB*Fr4Rmm-8cPH[G)Jk'=T=>Bg]q76-Ba?4/_)tc59ukrO/U2&R1ZXhE?C>#17#YHa8S8`e;.W?BROT91T[d#&)B1+%FNuAe0pI)u=gY?;Q#ZrAkgGI[3kc(b:?(RB,UCg"0ig,]l"XWQYJ=+E12P0]Vu^p>3KP67_gkI\[FmY2@0TdiMA/ORkm.=@&UJFr%/oK"soP79YP.2?N0HjQEI'"9)r*mf*Ek=GcDDlGKOblhBV$?/"+N4r_@pJY^1km$nf=9u"^_J>*:;2"G?L9ZeS0b?`bQu[4<:VL\%%4[[P'#ClK<r,7VU%@.G3Qq6krh0Rf+:/I;,h)R.8;8VSa3-Wj/[Q8"cf$B81N#J',@h%s`VX-".Y/+-s-.":Tln)6^!7JQPT>m@%F'A]+LX&074Jt+Hr1Rl@'N5s(LVB_&_"o'N&Q=[&a]bT_;PuW5"iV.Ko^IMe^J#j;k"P4R(12E1!Ns?.5!DZBL<iD*cYXQb5;4_\%fqMG1ZD]o/N?)_3iHt0%0CLF=KU0bSj@Lnj#i@E<\"XM5ND&>'7U)Vg8YYc,%K&+hQ1@t7Lp<JXD"f5\f#CnUjlYh=h#c#bpR05[%"cd6`i@Z>7k>j,FkE;+HPMN&1jd&8*)+]Jcd)bj;;d]s.(i0n^o2K'#ql)A7j)n7,cg//)',YEIGT2RJkV;_jk!R/u(C:2mG4)mc%drXJar'BT"cGKI(Z/\'0/+GOXA/^2QA6ud'DY)EH<P>@+%tWHeWm^gio2*`f!Vn1aM9_"pEH2&+gWcX9^GnK:;e2Ha2=:gD7cZ2P%9D,*.[85i^.sW9[%Un@>`L'P[6'0bO?^BJpo=R%].&A6sj352rHZF"a7HU)E+O75AIa0_OW@>;kY)%RX8@.lsB"dKf2PEn!&ZAt-%kt)?Qh/*4[GIg7pR_fe(,g1bacC:t9B'#&tmHF0!c\$V#b1`26L%ZGbO=]#QG%:*4AG-7sI-&,8#J"(n,WF5He:Oc^/N"Z4/G>Ln%.VJaO'q[AZ`0o[uBeH+XDFL#!;AMN%dY+EsHjOHBa(-:D(n`>p<Nb*q\T8Tq7,l:C)9<BHB+08?$e!2_VP_=[GFMXOjT?:G+qmu6%Wj$h!NeCc6Zs/mL,Q>F@Z:29571*L]ltp9B6tBo599r4dHF=76oXAHfKHA"K2bViV3``SXR2eB!M!7AeMZqkVJMY:,ob;'C9W^WL%ZNU^i@8a[@CP::jFK%T:gVapom4b]4W.n&C1\b$W;q>t8O#%+C?)<_+",8'VD^:#Tfp_Du'GHJ5Y?JQh<qS')_A3l_MUg]dg$T'm%!.+Wg3)B$R&Z4>r521i1Y`]u!:^Ejc^?(3@GNZe2!hFAUqQ,K;>q2M4NgDP)DC:ES8rrN^cZjVk,gUq])@EkJ-8bdX-c*?3F1=1?%N_q@0L7(F)SD_IC_4JqG99n'PW[5K,+!ep!FZ$$Fld[FO\Q,PIr%uK/E5;^]SNCpr[J6^ulBS-*68&<u;T9eo;(\%p1.oTuA8!VB%9=2!iilu/@jjZfO[GfatEMPBX>9Weu,7He;<NL-Cd-M[d^ft:Q6c[O.kY<u,&mqds[#oX(GmVMnnb9^bS$WknKqdp#lZp9lLFW2N%EXh5!^9RCs>FLlo"6RcB!h@DbXLZ:6Tq4Q0P(D@!no!eBk-]=#E^F>UmAZ=ioLhqVh9%!uYqMN5.8iX_2Rt\FC?2JM8gS,HIo.rQ%D$&utdl^-`#tmkGBkgW+Ul-mH7QLP37[\+R^<N.Q&8?//S%W4H8U;u$J,6:dmnT1r[_'lM,%Y.qU%XQcE=t)$Z;!Jp=WJtC%R&nL%5q_?po,niD7!TB99F/,8Ic3sJ<56:qXb!caHqnKnMb@(C`OB9$3)iH32nO!S=>7'05I^@SC.30OP*ji2-#\F+UUMYd[@"3g=%*dl%Mia=Vs%:*h'E:MS^Z4Z-OO%BO2ANU.<G@">hlTn:cHN@f8kasfF1/$X%W]F\56)?&XXm@_^F9SbZoP%UI;)a26_STM<u`HcH!\)<%GbEH!B1GY(W#J'l=T_clV6aDu$/g^H;QSVNFEM$l(e]B3J'C8BF]M83[C/WL<gU`$(@(HWhFYtr=Q9q6[4-N^RMcgK9?&51g571%%[l;(spSFn1eg4_.ii6T7&i_UH@6+1Fo?t-#$Ju`6Jt4XhI]2lFg?VRDTHsm-mr`En3RDQ#XMIb7iFq,RYc1fa97NY3i3(MW3J2!H%3LL0aQ'TZg9->;P%&,Xa`l),KFo[g]a<a5gpDFu[Y?o?_8_*%%A5@Oc%sAXW2OEEqq4]2BfcPSSCJi+mhIY_jU=M3r\M#G-9GZ5*%X+mX;Q,`X,Y9B;##Y>)u([-`u27j!Za*BKf&usk-^Kd#7CM-D/6lhu0<un:Y9J.gO:\5$sBV&`p`@cSqB6ALhB@=1GF*,j-SP]Mu%8]436%9+I@,3V%Ne-S[`VE-JSbaqEd[_T!HCPRM=eDSL;Cakh/SGd=+=Pq&D1VA*?gcDG7MB6/UVM7fcrnLTK)TRt"FdT38Tg_m_%j]hEnX[\B)Z27"O`\&,+i_<KOFZP_!&1B%kDGg<)rqg`5:R-.<\.q:^o&,oXdtpbV#>s$+e$T]67f/!*UJpD8fLOBbLo)uOA#b8(%r2k+\hoc88j&kslU$Wl.*#LPKK?V.R'1gNL9@^7$"7n#7o%,BO[WI<];,aTIono3?3tLFkDgL%)+6'+6m?3*==[6`.:q\6.4U"K-%n_50aDjS\0QUlgQVi^Y&LEaq(0BR#pTq+Z*Zl+EfOE5Zi=&t*9`R]+R)tEEa]Tner8!gY'8ndj7BVa$e:TqcV[MVkj\igYqpIm#G%N\H=Ve9?(`r]Gbj/Q';S2I@=p9jQn?o^!BgcmAY2ME:%=2lOG6ik]`VHp;Pe<NGNDb'HLjedom(<``$?M6!WaSpK'XNM!%(`o@XG%M&%*&*%")M>W\H#lDj8.d,BZ$<p.Di]D:uZf9j:"CEF`bl)"JC7bjd#h%^Y%A.]XgFst[HW,BQ%os7+id@G3d-9F[rP/%ag@oUDu%K>AOY*l8M6i+#6'4b0$lS4*N\L*ni02,T:0'ePA:T/kS_k5*)s5L]h$$!?8T;FapjI<Nk$<0^0?]/qm?GQqh7rJ62<6S?^2g\OrR%+2_A\mm$dd(9cgGYNQuXMcW2K_JjsfCjTg0FU?im^h/PXFO0F=Z+h<39d\k=hmI6LVhmCM;cb1-F%21jolB$or7njKlq=%P;e'+!%9rH!@\">m3EN<^8g6B7jTg[^M<Yl.o:KZCL[-&bQneW!Sqj(<]K$-<g')UO7?M!GZ!E^@^qa]_@`bl-OJCo4_HqWI?HOV<sJir[:%'PBn#Iue1N"TJ1BT%8+-(-ZRFZRF=+3(Mf%ge3?(pMP?>Ujg,q8g(CiW.fNp<]r(Aqm%8UTVfcN@d\95U*/ZTjQc^qo4[nZ6%R.B%LK,cMAR-951\r9RgDh4=b0[V1S"a[UbNfT9"P7s!b$0d.EK,uf'bgRY=d.?5/,f=&WD0SLoN<k7@kdWIj&TS7gh*44W-n-C>!1u'%A3(^TKOL)l.I:HN`?BF)#JWE[CSTlI?$m&umF?=CrNKh!iKo]gn4arE&>Nf;<]/iQWambT#Fjje"kALFR6!U=a!aQEQ)D]o!O8Yt%n4^pCha]Pnga'9qT842Uq*'A5R+ZK'W]2>FLq:[4<>ir$fS]A\>ErPHb-#B[31DI5C263sJj%`sU7<gWRnA'q)S\F^)7%d'AfHGh%NpQAE"9iA"oPj,)0bp!ME="*<RZ,<KG]VNIkV?V1O9qHu2(r7#s0g20,d[%IXXYtmdEtB2T68t.'@Vn5["HMfba2AcrQZ(t5^RLt%l'LSP^/WPig\`]6OJ>N6Jreg85:>ZIm%O:k<?+4K^K'3jGXfY_,9$Q4\C@W_G0.GAk3Mj+1lls.Wob2=YL+;h\uT._"-Q^X9F.WS%._pe#"M0Yp%Bp!3GcZWtF3k.ec-tj7#YpG2;LJjB]oA`9N9I6=]\`&UAa_brUWB]oiVs)Z%W*&8$+<K)Q)]]Z@'Ib?*/6:(D7]h$%e$Nt8\PN7k,Y=7^fZh]c_nEZ5S5q'Y8Ok-Mn+W#<g)u>)(3be#aT?ONYIA^"EgH6pcZIAZa/1#?7^G/,Up=IGlA55/qF[9T65g"V%&-FQ<Sk+^<^Gu>B6tXB"dgrug+$pcM;28nI<(s2BkpNSVB/@]S?:nEs9%iEPXg9A(M(1f&-`mM?Fh+_+(=Y1Z\p[]U:ZYiMb_+Lt%@#Ogf;':_lBST&_m.'_F/.@6_b:q0^eRLH.0L7E#GP7!XifC$P`_'[B.kVO(fgIP+rJRo"U1)RlQR,9^<LS$r3-ClBS"0Y5QWB]!%=Y_IcN^^&b*BS(q9G*PS:4-9B1]uQtS9(l&8L;k0'#59s""M4o?n,/*A_!G%[hIt`?3QgT+g4l@RVEU)X`&EtAGuX`kQC5Q;FdQ0%Fat3"2n?".qGC],PT6EL!/T`/<A.Z-Q&EtuXBIl*P#*>/!Z!'t\kEh6Fl6T"qmqQb<Hg-*D(t?8`_p6;3hp/(8Z3d#omm7c/8GN7%s-9i_RdaQTc'@t;/0^qX`S2$A7@>ouP/naWCH5=)3b7amW2]?m!&lE@'?f<"Jp=:h=(]l2,m$OY(/P<&RXq=1>O6m'IN_N&M:B-f%\DA5G4fTH8IC]I_UPb5MRW/mh9Rd<r7:3m%T44a40J1g:h8?>(\mT8qg&uGA5=fd4A/?r+T@@.GN!#0%'-m0mD9BXF2jomo:@cat%R;q1ga0a30%CkFJ!hr4T5g,E('CT[r"VOInE&D$6e>aO>'Ps^L/>L=p(f@CZ*>hV0ED93>22V#arZIDqar$N,72khK*Fu]6:p+h;%CRY=!@;<K-InptD8@6mlV*^_P[La(FA+<pU59c&E#6To8N?T2g"/,\u2!d'K5IFT:*K*T,G\OGVTr"+t"D<G<PJg)3">jAb5)%L=%Q@T@HB@N)=92I4_h$[5'[FUkjFTYJ%>^94>d,Pkb(l6aUl2Vh>'UMVF$+7bAA]6Me'ijiW1NJJPlC4GP>N8&>R?<\,Zc-6n6>[kS%+_OncWE*_.4imi$VO"6a@e&3)JL][p5j9#YU\c>N8?g7@n!AQ"L=69IO+QB^T*\S1B'UI[:f%dS,^tVdmK*jE3[HO1-(mn-RLg#c%HY$IL)5`&ZH'-N*.a8=tN!'UR4K7KTLgC;<&n<&`"5#\Fkl&l-a$HE_;1X+)\`+K/We_(mZ:mlOK+cAn<]U5/Vm81QhuJ;(c&CN`%Bq)AAN,ZQcYe6uX?jL4$*Cp?d*#(^ENXBhO0VrNf-)e9DN#qZA9$(Dl%kL'U@#GaZ&?*G$'nI[_!0)_BTQHiWnOF(@&s?4?bsT0H%GVXA9^arP6*!4+f]Ph@f6U8qRZ7C\Q-efaq2Sk^e4thcmJCA%JZf-2]KoiU)3#/BKc-CE1=>j)_rYfoPr(M*!BlJT:jiTiLYjcYo%`pi3Sp?'crra(*LUNa\.(*Uei,IZ`$DrpfBE-q%pDfKpm`ocFRm^)ke4uBt"]BgI8lM`l30_;43s-X$!]H4S>,g*HD$EL4+U$Z(s%pZ^RM"<5Jfd+6>8N+P0]5Dt6'/Vm$/CDcmposW&^np)cAW_4A?[1qR)^k+o1_K!Sj%u(-1S0qnB`gXp>g]3FN+$(Os1ouO[V%00V%6=)bM(cXlV=uaeU)9Za4-/d/QUI%^4-(J60Qo,0POXk.b_:h[I4b9HR0qNboMBYtbFniY7ZP2&e[]fe/*bKM7\@-BD1-dr^@8(Z]%#3GGkj(NUq/nR%(@&>)78N7><]aTfp"#r5=I?W<2Pr"iHB`@\u:1cQ'0I16_C/.S=:?ns(qn*T2pC-fJo%V:Te8A!&i]Fg0BV"6f%h?(\lAr&`KaFS.QV"(/EO_T>b;8ofs!/Ck=48EN&/(>mI%LM<LhYB]H$ciK\FHnZui"'OH$cj=s$[WhAW+2^#-n#loJgiQ#'`eQ"%P,*Cmgm[Q:"="&S3b?F'>lci=!p7`,5gcOIe2Sa&K2m_"!$,P#k,R?QY)m2LfIC+S`5#0EX9r`(e^.%KJ8RCWp""MJ><A8'iC:2P%r1l&.jZMU-2@4T<hDWE-YR&HtEiCu<+;fBq0P:IP+t78^,kL:4hYN6Bf&s&="?mXUH9II2`6FRlBV0"a\[F6%]usfQ.hsXIS\\LQ%9IN%7!\r(tFWhXejME?PS#_1:[PCqg=I[qO(S,n)>NMgE?:u,@h7.;K3tgaK;">3c'l#1BAXQ"lnp>;E_<b2-dLO`C6f&Zl2/1*-%Je%p[\Q&cSP+h-j>F(f'KYW:9,B*b+KX!Oi=fm_:,u^g7lkM-<e;b^^8*W7@%'?f`XERrcF?g3W>p<go9k,2\Es=GU47K)fD)C0'%K+"0ho2op]0m35:UQZ0AG;@&l-^(]W,-CB*:;gc+A(E/>5@g)k5fgM^_!:*U1:&02=%A_0Rl;A^TeTi;+]T&!R-cXg:CC+O.qqYe%@o.kI+c-Iu<Q[qDZm_==csU#!Fel<Q+R@cM\`\JS[[XO6/7hPf"1rnr;c_;We^Fr6=07#eDo&Z:bW,im3F\h@eeI;"@*BRAYeoN`%;W\TgB;,W"=)sNV2'c)*X@bpR&HIE:\ZD`c*QfM]QF(5)b/F[cK'L_1>Z&Cs5a1B*$8(cn"=mIYhBS=&THMm=['$,HVG>gE+=^0W%C1:i[O9ghWCKOZ4=nuAP;Jp6Jb=W+7p;s*N^gnR`m`U:`dh"6(9%0<tcNpo9>(T"]%;\0q5>ACLU`O?<3#JOKW'1S)orknSbg=?s%ZW/o#!ctLAZV]u^T90@NW:!`S`qmIkK6A<K!E*)nBIfA_"D4a<kIXCQK-E4.4#"4E29himMWqNDi2<j?2$J0FDFb%.kYdb;;l6:S%NcnOsM:g1TT[qE2`bBt@8`hF-=R-+h)+%T][0R@H\L!0b\),tfG&O%q.*O4Z2/jm3pcfla=F(1%i;QF49IAU+L]o(=;cG2ijP"Wt%FTc?E8-@UYBut3@+XFKIMH!-Ecm+@\0/BDgR/WY,R+25Pf6LQNAu0l5EEn(#"[=H%T+oA9^r/$2?m((V>A<o0UCPr@-!5]u#[STR%Cd:"p'9KB-/GZ6u9FM@7MP/=c-:Ul9P4T\X[EUk%+`E+_<CJ`)3GD'RjafUs[l9m%ZP>rg%iUmI<>h4.RPRN-/$r'6\^=W@g\RHa%nh<7pH(^Z`Z6@lsH.Xf`/6uGg%g)(T/`#XgN^,E9L=NDG#GpsGKB]&'lC$0[2s*!02-XISEYI-6EQo7s9VVpKnM5@U/I&/jEf5P:%0F5V<>mH#g@*?lu9j!Zk$V/#e&YYs6R$WGVBh%//K2T"4JWa$TJTLC>7PKQu'2T8Z5cKE^pDaa8d('7;DP7P*T*h+""bfH=11QW$%mSso30091j,qYZYV0iLbTRqf-QM>cJ"%RB^*fnJ;WcM_oFT<>",a;E5WT9qe0au5K]/fsIZQB6'[BZAiK2]Jd.rXIk7.G3#gaJ:V%bcZi;+Q,BL/Vh`d&rK7`kBWob%>#1F7H)):i#22"J2B-A_dRpWn`1RcMaF(.`(UGFBF6b*9QcQ@I*2qFK`J3kcaQ0]gLA*`c@#r1%%(%!W3?O2KTAq@i,=Y\!g+Si>#6_6*rt(mO+;QZtUQBV$n<lS8e?M=oAlM+$#0/n/@_/Ja[W:XUCa64De<q#qkSX+m=?^,<8KD=Q%%^*;D4=Ui.P,f.:&DBGg>[).P<o_08n-jVs_HFn>VLAaK1daI]K%Q_)o!V0F`+50bAFd%:TpR+j+D(-]J;p9^2oB*4L4J?:7(k(7%QQT];KU\ZK!_)u_AI-JUm+Mr:d"XNQ(/gKV!X<&lrf5og>aTP!EPMR-8-7l?+Cf.U[g>[WJa4"YgDW83d$E<WbfNTa5'.Xdisd4U%b>sm69S(:UkL*9+(b?Ge0YOt6-j@P%"4FE8@#&=\kmTo'YtPs]?J,\fWeceE-lKX-E23"!Cstf$JuGL)H5M<"<&/]%+S[HYe,d$S%VD4H_d&'K]$nhU`Do%)7/YSZh5u([OUO7sH#>#KU)E!1YEi@XlTHk_;;%3XC6B%m\8do<"H;i/I"7=C/%@";Ppd;>G9l2\Z<,&Ns%e]cWA`J(kG=e>`Unk")7Gg5JXZI/g*$JQ_:=Ibfgjc]]f\CRC`Qn0&(TVeN!`AiCkV+GSKg&(#Ok'5f]#uA"u5R>^^@fdg8V[<hl%UrS.W[3_h)iqEiYD)=J-=Sm]9&8'*#1C0A1<u3?68TBr&d<c)WCJGn#2DVW2hE0+S*m5hLPDmL.:J$p7LluA6EI_2?&PU`2Yub./%fF;S01<l70WVmOk+OUm2ckQk:m,;;se"e;7^iLL25o%<l==t/?5aB\nDK8%Lj00rGJC,Sb9F_J)TjcIel`a9cR#/2V!m?DYN?%9r%bUS5HHqBU1/KgoC%+RE<%(Smo(BM.=#ko0g.=hO%D2.J6:gTEoVjM4c/g\$J1BFqON4H$o:)6rM+`#.F&Wh]DX=Z$X*f.Zk-!t"/%Rte^@-X'rk1C.M4-aupLFdkM-dDTU9Plq0JEC6DDM(2Zdr2j6(!gR9&/?L[-j]!DS1mMC$IP_Z3'D4)1=%HSIKB^hQPp41c6l,lk%$*2<h!$kB9$_BQu5?OCjJ8N,[Hq_fO8SH,DNCprh2O9U2JcX_Z6F^qono+_p9K0CK`^uNmZ*1A&+&_rkZ+qHk?1s%Pr!l;;#T4%K%_b@UP7>(@*ZVgG5=B-^+V9!P+I"s$H$S!o*(9oXSPaND'9A'Eh;cBFm7Zo2R7IHY:UQue]N7^G;,"lA!#ZdpD1_]q?5\=<%5\!H!%Eg5a8:sYOFOTZg*8f*&,$E?7jJ7lh+PVn(jaf-2u['\(,hRX2-:Y^hDK.9:jM]<F1buaruo8]NgVJs&:pE_.gb1:uq8-!&j]^ViY%5t]^(!1289%87P<i3H:ZT=g9!b1N.,?`G>>7kgi+KYTOt]V)OZ[?]4\)hkQO<RaA]?^`oYO<[XC!J;4/*1Nd6ERf]o@TL@QG,VW[%F(VIS!(*0*LL.$Q8kaf$H>PCkQ'D#Q%*'82GBIlbQ@9Q/BiQm\aJFQ05Ru]E)6gB#P3XW)0$6<+<ZGfOc,A+<hN'b<!=JVf%*%Z'%#e%#EJ*/O2OVONd)%62+E^fh9^NDQ(dVhI,0MLEg[jSO_6D7j2q`b)5];&G,$mekTU"]lbJhu:Q;RuDK;C=I<QrGml,uc*8d?I'P%C5SJOMLkh3U3i&)4899k//f*AM_'7m6h'NrLiU[&1=brV(L!Eke477#28]B7hfRgB$teGMXhF?0?#Mta,n;_r/ipet`sb*:$C2Z7%A`aFh,ipg@=Jm\/XrF)h0Sm(AAA6d`5@ig_LP!XKXA5@A$I._"`Reh-i.5T0/KQ/ag\u'U,)%H5qcF+n>GZ2Y>1K9!BJ*`%mN[SH%+[SseB16.;XfZ6DWGMj_5UUge]/>0g\JZoN2X"eI-03pb^Arg[<eu0;X2?GiS&%>/]J=[V1Yuu#Pn.RA@"b+jJn"*]S7+1O`E8$/%G'#NT1RR,5$l#.;:0F-!/QZM(_>l%1gK\NNc[UZ!ME$l?kpo$`Z>rRUQ)J^qYY#jq7#@u!k!.>\=lWQDH4"`3i:R9k6]ot>STKCm%PFm,g;f/jsESdhRELp@)nPW(^8l62#ReTj!CY1Z`1pkLFb]'%\-7rDl`66\5*)$uESQlS&>i3$-]2]UjUoK$Qg'ms8;C-OLQRnI`%gfn#jeZZ/k'l.tJ_h\N<c6boQE)5>`?s(i<_V[D,("oIai'o(MA]Ks3Mr7OfE)Tjb!"!Kfa:\=m&f,F8eO7>.1[a=qKU+gE0o.TI%Gg[FYG5!9VDM\qO#%#Zg%)ttq'sRd[D!*5T(fWoB!KFULJ[V@JR?muE<NfkGbW.Is:d,GPD'VuY*s?5re>0)!`(D.A/X.J2Ea?Kj%:K8,e0b9JZV;,k.6>7)61\0FUNRQhbRBi?ZFmq:t-aUl"<cVY&<(:$<3[LNK_qM'G_^c<&/Cc7NgbqaCY*Tiu('`m06BMH[%2q\H%WmC4/U""-V(`hWH>1'Baa9j=B6R$(RKe<1pRJ:ls)'hqWi[adj,R%[:&)fAl\L(;_AjY_f89&8jl3ElQFAk$j^*3#(e!*t=Wc;e?%_$p(i?VEJn]@CO61Uu_c$e/A+O@4A;15B$j3cJn_O'j;R\C]J>s%GU$&]9._%!NSJ'o"6A%rgCIM@h?ZTp/!CU4XbY5etbjo\OZZ%eI&uF:c\m?4I$-_E^(u'rd%"O\=DEi*F,!^KWe@Lmh`3Q6X^$AYHeb=+toC@U;@=0Z-]n5T^k[m%cB-P<E<M,@SQN9@1>B]3s\5!%pX_+N]%SNXC^]J<MiH)#IBEYPl@Pq&ODtX[T;^;,:@!!M7TL8JZnN\8*PeIArMih[j])^iR[0tfem^WOk9t#3lTCnf<=BR*81%Mi%X:L)pA71%f0(I[?Hc:Z:ILB&M_mT]P<s9q8_'BH?HFmc+@T>b>chPK9A["ejbmpTS8*GlJem<P*b]A8&IEi-)g8$Yhm[u;eRt$/u%L=cR(U:h5VJbacIIL)GVSLr"uZBY%U:1hR"HbNU:g_C#Qb>!,2[FPN%&[ca:_m_$6?FS=Mf,fU/b2E+"oX:f>I1$A,Wff%?YKta'%1Tp&][G8SBA4C:WpF#7$J[?_Dp@1brSJ'orS+`;QB=L[pmAXrd]H.5&R]177n_Std0#$/dIV1TPE5g"R#_tDFaWR$Y(!$V&2j27[%i`fOd>EAbU(ZMc(R=faW2((:\\*MOG'2;6WY(`Y?G]%@]_shJ]O>2#$rKRURcsHr'SrF"D4rC^9#\4Jr+P.5eTS-\bSh%Kd5p0l8%Co6qP\#"rD>k<9F;PUaE#8fPuLCu3fYdfr1S_7Rn?7)OuQ;Cp?[(pq7g?dm5M@YeS<ld@h&Z@u5T2hJq#-R[i%j>;,s(N**FrAGj%#-4OaDN*0%-CBIP)6-A5o.)&3cA*+-+JUp9X_n=*M,[p2o@iDOL4SD^CIR$s$fr$r"\3_/*Z(\D0V*qtP7C-0;!F^^h\l8PHKP\b%[K5gc]*p;Ha+^otbaD@`5\=?n"L4I;R=JBQ!J.,0S0t:;Z%F8<3MN=KK2L+I4%qu`7+CI?$<Zk6ekfnIe&>pe&V%p0-lH,$hVh@2%ZjmN5]hq_0KW])h"i!sR\6CJ\TNm@[1E@#/IqT#jl3b>(=f?s`]b<E<5<rdMZMug;3'3B8W6%q"_QIgYMF8G=Q$eR/GI/Q\C!7]Y%:G)?Z-=4fmN8Oa8B13uc8JK)15]oG7@'c8^h[?Lk2\^tE9i9dO%Xf<?&2^CB'EO3A4=SK*.35W%d6`*g>LU;i/EA%h@Lr]P+>om2%M'cG)3V=j+8krOHL;FgF:O=#B;^Q$-:R[A*0>Ja.UdC<F6T&H5cV*Y`C_Cj'$AGT];W'<Pd/irhm%#C@ZPs]1G%rWQK2qVg)-d/q%,VUQrbmR3S.Ab?j8Ytee/.'<JZ*<KH*.]h?(Nki8c_VTmVQ?GA8l/\f#odL/&<'e<Wcs*,?3Jt[1GI@HVRpC?h4tmf4;>?6P?i>j%@jOPN@;W_ZV$!2d.^F,EF+BO]3(<Mm&f%02-_)&=iJaoBjs%?mMO'sO$(ZWH;&\aAjl-(\.iM,V+dI9df/mcnItkJ\P_4Pq20#(4%8=]!Y/4Ft1*NtXS6W.,.14.Z,Z%/)cf=6GeAL[!U]k45ZTTWW^':A$uUK)n@T1W"rms-+(S6Dpc%DYZZWE*Fdq)6.`TlMbc+=3Gr%*R<+\XDQS\<6:,qqJ;6i\<NFSR%.sq@_"`VDZWp__+kY5Cs'_CR]HHa?ksdGW7k?'Lc&4.F:h8.Q[?m&.p`d&4;oXCSSqZVl_R:m%5C$rQmo5ed.h$3C+](e-=pU5LRXs1Z@o#6AV94WsM,h^j6B:gbOd`5'b.Bq`-RBL4h.'/<.ZJ4m>K^$-+H)T/V8r^>Ck7O^8d\UF%q@8(>1+fR58KCpd#ct@"e^kq)AX7DV+Y4K;^edoGlu0o7ra^+TW9+=bLOlh>\]bD]*:]<>;dP$sUjscXRP3Q(g-QjUPX/GMb57ik%OrE)@PiWA`Wb8=-W"^"c"!EdA!1#*GT[p*l.[%@s!"S%1F[d3!.5NDdTD>spO>;oRFT3+k.=[2"#AI%,,)(-CL.L&:Rb@36#"+8+%U.^_5oFV"&0PrEWi=S3!%9Ej8E9,k`;t*#[6JJKV,657UD7F1<\G5hKJQQ<Gn-IfW-Ij,8X>gPPN2#D0M*(m\,aVU[)g+6!CddR3%p_?[D"G)NfJh#Mo#DoP5M5RoQ5Vp*+)RCpVjeb(O+I5eJFE)k3BUK^*!V"c&cTnBtF5*Xr,S_YA_=pXt&s"3p5uRtB"EOSs!)n07%*5h]MUaB,l)nA#MCGX[!@h8b<3J'=kGkC&p2A;!+8I$\t@rVaMbWofi>!siLI^]S?AI7_(@8]*E>-<tt0Y9pr%VA8S/W%9MbJ&-8%,YR6NXH6m.+%sRQYkUI[Z$@`O_Sp;ag1/:$>[^b:.2A:L@:Q.51]sM>9#it8(=Zp^A>')Pq_/lJ%jtcL42Ac_!9=jP"ACXN;TS7M%>UjA4-Qn`2+<]8Q<tKM?8mTq?l;4IE'%(Z&U07o`ZW/H,;/%'T!VfR0'V/-u".a!E>a2s>?H<jV!jM;r8/Loc..H#So1Z,E&SQ40%ZSc<]61,79'aNaO>+n9KbD*pGXL-6/])i]9S;Ni"C/[JEV.fHUQ`4HV"R=Ei7C<ZP("H.^SB1W')Qnt_/#nhS]CRJ9_N,$TNREC-%r)-[>a!g'QJXMW^VG#kNTrjWu-&(?P=23W)Y[[m*8!XiI`-%>jm21!gK#A`uY$m.`@T;_3VU7Et-2q:YEaF!a622ocW_KK98kL@c%1(et-=^#-V)$l$*@.&P(`=`=]YLk1GJ0F<e-H5QZT;[uUY>$H2bP*3YWeE83pCAc1a=WZX;o%E#%kCZ;<DJu<ArHWYI5OFWQ[tR/%o&S1f5Uoh]S?_O5TDTmA1/q*$&tTdPUB=mN%iYi_oJrFS_/,\s[_QUn0R$p8^8rf@3FdNm8dF8T,3Y?'lC_E2W%.piGsaj*Po486%\u0eWJh&;9KKR=h0X+EgijP3iO>i\cM[#eS.:FfN"Z;U08fNC3C([$elF$+uF-]a5>/!7DW&:J=(QpIV8D+=V#@8H]d1+JLf*.6%%k$1F*eip^dDjbD,W]DjWQn;,\$o%FCQ"_!k-"(,,,UitMn[1\;-K*iXF0FTF8QF,#JX5\<h:T^j(jTM(L[32if0O49Z5pt)qTT?r%bKR8O>=,>^iL[A$+>F\o!>M`mjQ`ajU:H.9Q(`6^K/=1+JVBpZ.`GrQ$q,0r-5R3"bl4nW)Lr"@'u1\t^8,89U'f+8J$B*s7RYZ2%UqGYA`"qq%&37g&ZgWE)VP[c2-!&F5%NtXC6*-lZ.0?`HF<V!4C]jf*XQB2D<Lel`,,N,Pj<bZ$'AfA-+G@B%f-.IE01%@h2-bAB%B1ug1+@/=6WB[&&Y26+*KX_-I`0l]$VMHPA[=:-X;!kme<?\(4>XiK6`OqpSZW*b4k*'jL@7o^5eV'dQD@69Xquu4$U2NuVhIKe"%FclM(_9UGl"$$S6K'ulX-ip"DB66N"m,TAP'o!AO\5QFkV1L`>%M,QTPEluW,V?Wl0CL,R(.u,E,LS26ad'kQG,#[!CX"CSgsn6J%>0i;$OfhJOdK0K0YZR!_9Bn&U`l`('d!68[2`!Fm<49eeNq0h/UeAZ^V9BFBnW`c/=,G.o+Q9ZRj:T$R:PLc4-;r!L_ZRpo<$>p'%j\@ZmrNX5VAC1K2`D]nb"^kL^Y#VG7mM+)%8tk.Ja9.Whq@6-#!O!UZ>:q3Y\R)cI6!)@3p-lKB6h1nc\8_We7e(4,j#JZ[)c>[X%*481$JY-&i/=qUOpJNk0:IS6&U;#hG3*+IY5qQ9Gd\S@Ji'Q6c;?Xn=Jcs&r)^$Z?1'.E@_88#b,`/9s"h3%!q';a;,G<.HlN4ee%Q9.>TN.=T)I<Z5'RBhEnW>%5uZ@uN%?t",L"-mmE;N]o<BK^3_NKXk#;G`R5NiS,=<bnjVSUg1"<6ds.I<2QtD+CcM1ME=rlag8>%!,`F<-g(*teo`,3/1ds9KM"Fu+Th16>[uT^#UUjOgC',<pX3EqKX6LJ&:,)YA&:9`dT>)?BV%mY0N?=Z$%+U@a=B]-M<\uM=CSgn%h"14c<@9,d=;4B")AU**DO6m##n`AG<M.mY(8OQ5rllA=6(3YG`PsH26EW^i7Wg@;<[f(>afP/+[&(EVKkqu)GG:)<+f!X>DJKkn%C4o:el<Xae+EjCcha)<aqVo+Y9"A[C1H>cO8^PJB5%On?i-D^3C-F2VBiM[WGGj!B!3Jn8k%).3'+(-?<J=2\TUiC!Z1,1XclOkO%<)M8Co&R`@*lK>H(43oe3S@'dAE4RrcjkpJ1s-FBh'71%4V=hKU"^hV'maJ*#Y/Qh_5AuEVfZ<C^P-Dq<9hY<7dt^-S3eJ+SF:Ur%^'TW[h%MShVLa]re<[opSicN%BIhfNPMWXV":YHNLEK@t[K^f`!Ga\Pa8\j7!etglMdlp@*IR7?:)`VOU!aRJYYZ&@KnEN4QpZlo%Mp*Ku"%'sd,\aZb(l,+#R'+4*%1ldS0VJD(QH^24;,?.ch*KGaN.pnTBXUIT<6.fEr!4Q6E'Qia;:24LU/;.RO<[B!K0$D&(e.KO%$d,OW5-Q@r_+`m>b=K$;=dC7^-"HT](-"Se#HX,Q=T%L$KFd>JOPpGf"!LiuHXdpYC#R^K['Hs.#uMS3%/75aMh\!%#s\t$-"#Sh%4AKRaOSOBi3DjmPEO4(m'qJI[P1FAEEJf1U^H.JfH;34`82DT(`fScpJQ'dV!AGhW6_6`pe**<""?I#J6/t1XX[Fa5R3HXI#*c5\%b+[I6:(IkkFp4%Aa1Yst:?isuE)6[qJ.(&62'+YHMb/XR!+N)rSg`>^;a]F.DH[U4?V2Jba5fOa()0K]M5P:n8G`P8m_XhHP1#=M%E9I9/;.jQ(E'bc"?2PiS@tC/8PAJTP8F.pdh3b_!U$*4ILXmSV`.Y7g7)em/<WA-b(:+IE71Hs!*"]P?.=stu1q2*j.j&d;p!44U%)7Z=o#UquI!*R362?RM+R?EedV>.K\.$,q$!"(u1%)p*k&l`Ip)$s;b%LcN4[QXa_J=C4m@Tf#Li/BQM")0]^43"64cO22QM>[E9%'WW(D/a3Fi[]ipM:6$pEd#q6$>m+Ygmr\gZVdh^MQ9_BW7A(;]dJa4K8-Ol\7[#;%nH+QD/T-o04PHa3!V41#.IbQHW;ofcLa3L*%KLE.=.WL#IXJ=]]TMWtEWI[U!2NkU2[kWYiJ9"%4!?J\>(6W0u_EX-:4"^]B+X?qd9RB''65`ZeAkU%-)RjC6/iH1=lnf&b3'?W?%AJMZTgFU(OR.=FW?@d_%CNiE&iHGUiH8[$9_H]f14pA!/EmB?1(L[+t#_krY=BNJ#;i$1cVHht!0=W@?@5XHukh6m[@@*J!\pSFW%!M@\kh&3<X;iIPp=IY856K&&hl>=*]PtuCEK%OeC%74#cP%XF*A>!#VS@^ohVJgeU!9I&Jg>H>WYH0,[+N<8?Q=f34N>`!P\Uqa0%"U3\;</F]X#ur\[&/A&u`=-'?67o]`Q7-!BW;%S=:s(5^&=g#+(%)MDCMUjC"CZQ&XW`QGgK;i$Fl-DH/-3=R]Vnh,#T<@A#VRp=%2Be`T;"iD[TEHS.-+L5rW(P4*A.@e>;K-qPC7gX?%Xej(Osh?_@F/.b^T\,fMcs0/Yb75H<%VpMn]HeHj<3#A<WUlFaZqS)20WH7%I:IF?CWWYsMKV?@8<bPB3ScQuTWu9kgN1GP\4+9m6tao^U41/a%;F_\eWmR.:?^6X^u3X>>^BFQUB@MB.c_ESFr/Od'obI>Qk@;(%AJJJc/7:aNW.H^T,TDs=M=rdT8DI*>+0o>n/kF)0T0,tj<Z.lYn48H!5c:@RJ@s-Cc@_!=6q>Yh>0@89/8(W]U-`oH;5)nJ:>=j3%#+m9aq8)hP>;nf4YhTd&G&?g5bW)Jf-PZnT3X'ufXA8k)8jjgK#!k;SUoHh+U6MoV6.?E-Ym#kC&4E0``Eu-5U4>%^,mN.R%6n"T%[>9P<Huadj!]?-"=>0c-`?qCXJKi"MMa\sjPp)i"2%qWM3^r!E/>JK,S5u,;aforA2qq+d*I2m<amPP5"'eYG7!sufdMRKh7Bj:3%RF3daD!3H=6(DbU#pcHNL"Fd]&?Z,%>`Y@2";tBM@IDj*+J*2d-,Gl;%W!8Z.pfG3'&g0!K+;LJ>RR<t-+#KMF-Dk7\j5CHft_q7%,p\d[Ph<eCB?5LQWWG)@*XpuPkr"4FZmfu9?tDSQj^(k:%7XT#WC85_:6ONF5Vnet6UCuc5W1WT+gNgl\SVR0gG]=[CpkO':K<)!%.7@2jXVfJ/=^U-WPVjn8TJ1W(!X>n;Fa<;<:--0f-fE.LH8haFk9c=7de5WHgn74Xj">;.Ds8lA9B$'0>t6t%!KkoD$;AU`$k'$h%W@5'8.4DiE)UGQ88_$<r-Oc4BP]o&r]fShmW'hgc#S8U4_/:n'6tTbI8`=J8@4'Xs3ORq>j#I@mGX7UHKOt4KO6"6D2>$fcV_eKP%bnPQ'JKg9@!b.BG`8"CF*/W-2%k?j%=3(c%nAtDQnECbKXuIR)55dKES5QFhM&dG3]Rgbrb"fP?EbD,EKdgd)^kcjT'S.>[ih?TA%-$CsU&7.X#nVlR2oJo10(kW8;%`<XO4sTV0TGj'i9D5u@KI>%7-$@O(Omu(R+NQSg\qD+AoFb?dHGLq,B"83%-#t7@a:;d3!t5LO%%^]`f)$f(X;DQmEGgo"cTdD=f,]!j1kUsuk$:PI]@0TV#3esM2#K%2X1I23aA5R;"!hu;#Em8kRVIqkEA9H9;-"A6o9f1lq_uht(%Q?XBBcNnZTM(b4@]tt9sM\7o*%e[Pg>Sn9@;J7\*:e3-jJ\$nr=T9AG.-]h^_6WGdDpGIGWo,93p]Em2(XRdCQ!U-@8tZe@E:h5m%-R*b;k34[^4@JlE'hH9lQX]b\<[O0DA(1PL-Z4!S0_:\up,uqMrA*>k&ba'CL\ZSmjR,%Og@5!"&-=lm3p1N1Zqe2$E/)1^jZBqG%an1Gd$me:D$X_hOF2X_nD/[I`5BfW"c?g_CPSW_J$T]u78dd5k\9P-SA0.>Ugeh,7N?#^2l0)M8b9)+['Uc1Ui/,ZjW!1HeSZE,r%QCL>TJ)V7+Am?%Gek)gc\R:<N1uTd313nXHSgA4k>[h*q#`O'VbEj%ST7g=n+<Xd5L)O_WbmjG+OQsUP*O<iF@Q$?#cE#I=ZXCJ[%n'$+oGpZoW<?j+2it<B*@1V)BgT-HCqtZTX_-hCuYd``Nn1XNRP%&e.6"cAt57Rm_pfmL:\F"uUc8Fgs'%-s4AH3/m(oj;^B<s19%OlWh0^t]VtDFA!5d4M!"S2IhW`/o<K>$ueISk$88,RfO+BIF^V<-CMBQoIH?U]LT@-8f*P9!g"/8sZD@A26.IF$m.1']HsC:;dKQ%TXM?m:aJ-P+pfdH?>"j9"CaSoXl[NXHjXsFD['3J@:674fB%dpc%SlRaatM8cl*>jJ>$3-JGa<%/^At28s,%%Vb&`OUqrcLdt!WB%Mt*J4'mbH*@?W@"d"^?1(=Pt,&Fe6t=iN`$QH*[(%P[MT_8;-uS12SMNj>+l#V[K1%FCiGhYAK3`sbJmAYg_Bp08CZnM#S]_%IZD%aV9;C?lra#71.U@^mRoN^m$.O'#pRSd2aMI:c<U*P;M=K.R_W+_.96'\,HSAC,H-k\T\%Y&6'o!L:BiYZ3=-1Ol)i@:X0u*Pm9F8%8^8#8Zt++tMNY0/$9'*J9`YJVM[m&%d;WU3j.T)5+i4U^)gmW7*.MZGs1#!S'SN+Int![r'%m;BLBE-%@0LTr"V"eDe6KdVGb7+=%[hL;JZ]Q10Am7%N^`N1L9J&<W^eKPM4`Y<iGnCoG?L,[\)*2hNR=.=cYtKgD\A$g\##6WsqMh?C9nu3PLD+A(2e#n\N5f\m>V,DU%!cA2@OLCsuJm6-?Bo9'#R67g04@r#^b!G/(4^$(>5,["_^X)HC2jP*rPCHIZ<tXGYja5L&+V]2s#*R7F'L=K8>pN7/Mti.O4%;(Q%<_C"oO7!gga/lKG?Co(EUEfRP(d_P/_Vs7F]?F-&f01eiGYa@uK[&*%GWsZ@X#8[9p)#QqfPaU`6`_MKCE[U!(*hJ%o7t-.H"C\-%P[5YM$\6pWm'pb`(^"92Lp[P\(:p4'^IY\"V3PTo>j5ZX.JVItQ0H*M'@h[qg2,A5`PW)^-Zci@(kP<qN[tf^D6<$iF2"WL58Ir"%g4E"/8[QR;Y4aJH5F.AWp6LQWX!%(kd2Ydf@SfhGKVE-L_BL=R9PGTrVS@f\5U!LgJ,V9h7aiO_5dpHVmLASK5?)Uf8bE=l^+s#=%8CB_IG31^Hc;H!(S:?;3!7*1W0Go#,KI!:XD3O]K-*L?daJd/Fb&WeBN%)^hPk>Qsc)'>@pZ0DArsJpkBo2$H[&C&\'`fL5H2n]T%NNgMR$_h]CPe:A_9a1H(B)"!R0Ik[OgO_Ef2IrM+7Ab!JD0)#R)Q-uLrG_+F\jP8?.DIi:lo\*hp8<OW_@+(.l;uE,,N19:f!3=1%\I*PqKjEh.?q>+f@?.\$3B'E5d13p*FLG+o%g\QDdgh)"+iU%'7A;^t*WaqfC^^KCIqNo+-=\*e"'1>YfM8#g@@#VZ&n^(UMF7su%8DI6CUr7K)j"_ekmn0CWGWZ$=;N?3=Z\*VsMd!l'HP7hGjWA1e14@8%/]_Ldgu:0^SUt7VKH_n"*JDUCO:h`6(EM3-hS,Uu.WMqQ%*I3/Fqq0a>NVuOBjj>i^^0m,IZ49#/L"C5C!d>L(rf!Kj06p4,A4&N^$;=#`)M8NSH;;R7,%+I<K52&t*0^a@F6LT-aXg=M!#XL%%6tfsCS73#Sn#SZmFO^r4@%T*Fb2hrXE9mk<AITG*^r8OjGg2(C@)QL\&JuUQ?GT,gVagnm,Z8E/!sf1LdP%*#*>ioD6jup;aDKDM%A(Ve@^Dk,#U,krR@nJA/\@J69dI:V<HOi(CTs+eW'Q0Cepm-H+(qjQgL/cfk?SsDJ,VTbeXLQI3N2#Hbd9q<,+EG7[!W1)u$)l->%VJjH&8;%8"O-2!*i!Q1(kc<c7:Q(`#NkhIWMZ0TZinM?J3!r(;#7'Nk#Qtj[Ll&d;#&W1F7qAGU;';!;TSL[lj<g,u[L>6&!Dc.)%GQJ`-!Y`BD)l,AA^-`N0L=[!d:2K\**J?/q<6MZN^6Lfk@3*4/B!UZ87adl00Tj/8;SDQ?H#(L5'>4IS*An`p*Tuc"KX(sfX^U+V%E-,%?8(1G^Rh%ig)3p6@/:C`Gs%@u"Tn+1M]+Q@k]BCjMS.ipI5QF)X]th/nnl$j54]VK3E-O/&#87gdH7[j^qo3n]:d[f(:3^Ya%425hQ*&heflOG&-ig,**!,COo!Gk8*Su2``g0cHCC62[*5Bm\)5,:hLrO:)Ha(_^_"M'^e&_T6R;+cej&t]<h$<"VX:2<*e`g!4I%ktMe%9"iuI>nJUm?1L(;:Z*j@mmMAol$?:_PemT0gMj_hNE]N9?&81tdscXb.aIQoY'&-dKe8_K2WVS5@Q5Y8%T%Ipo$>,/hlmSP%n_-=&10MJ39VN?Faa"i'MjNclYLqQ^`Au*kS0iCbnX1LW,8C8dM2Z^A:ZXI5]cFs%o8N0lU?$$f8a`cQ7S-VLq8t"VMVioI7P#29%a4^;pHN"FKq4q$=3CUr;(ZJ-\9,A9h[DR5t^B0UD00q#\9Hb-iaGMh08.JZ$G9V9-7I?":6/j'HDpksmMO.Bi7)BjX"tUh)Ug$6T%SjVAM2o'K$5!g?O9qKJ]b<]eg1B)gZKtNBg0iL1T<K`.jZ/DLY(u%?P&XaQ%>,\Ph-Q!SG7MHGN'?0][EDQln)Muus6s5]Dr?\':%-'iOq8?tX2o[s?W?:gQIkQfU"TW]WP!K%>YKg[\0U!"n=*Gd?R/^Q;,QsU5E"Hg2Z'1Zf6/At;9)iQB%9.7%jMPAZ<G82)99+dQH%]?R<88?M>\4liPuW`jk&lMF'm?f'=9M=N7>4,sNOitqTE_$Pu?nc(Z_rrZ'8Pcb/I1PcO/s*#I^k8f?@OXCVd)6CR]b&;aR[#;O,%\dbr&JgugkSTIGsc/aNe$P?qQ-OBkC:0->).m:L\VPK.emQW#$ccl5&FPuu:@LSPun8tM8Fr?jo5suqdBF5Js9D8,j.N-TjYm%/'%LU2,3`+Y[$DZ6iVeS-GSruOQK:35#Hr;f_ZnB9](>6l[=JFDN?DeRcV=DLuWH5Ho&+e])7<1limlj]Jbkg0>ZUu9W?dQrd@.%D*5%AP)$l[iB4EG.gT)F4e:(Jfb5>5jm=J6t%SpjiXL:.CRZ-#^b#;%;%c\C($t$QVfT(2PNOY&2>RV`Eo$q#IgA)X!/fFYS-C*%e5tN%mqjQ%M\&+o$\_]2$5,W(9[XM\kR+G`NBins4E7$\e1;kqY)/D0.J^!NmbKGHYl?cps0Ia'Bdi-DSV@)0B42,OXJ(K70HB5(+_H=R%\P[XH;YHX-U/$7"-'VRO0Z%'@AGRVn"2(E>/_jBjm?MKUSAu"Z79Y;+0Y0^F2i:>9OK4)Z\>`9s+VB[-(#d)BA>*\>lL`l`s!C.)%S<3ZP_:%:<$^L1['*fRt&0\*%+VonIo5LKkJCoOVDBU(8#q7.,5k;jSo71\$^H8UqM5U0k&Zj<djp?b7Kg>hS%0D!%7Q3g%!;l4L%e`MuOerqs&BZLlc?U=uW$S,Egaf@,:Q:CDJA8WhHpC\gQ.SE@oVc\ifBfCEcGRU"Y(BhoBqNRXhoZ!D,P"7<-9&;CH*iH5AXk9h\%$)R\:0\o@h7&j[L5bo0[J;jH8F!ZQ/-m7h=luV:;A7U.#0Go(G!>[Zi+m5@#P\Wt`'XWC)@Msl*+P::jnHl3TVNb4C'<bt<W^8ag%pg-Ujc6Dcb#uduC!rcpuiL1@F2TRY=9BcU:L!]Q`W"H1o&k*SUf4.Vk!oS8A%!i*q2r[CS\Oo=gP.OEHckORMa5JUp\Wo:*9Z9D1%1S[3MX;<'h0i0obPPM(>#0.LD?%CME5#\nc]MZ&7;YV>)`g0N6kCectZiM._@meBU.,@04ijOYTJ;6O4q>`AKd#gc#3s9$$@63rB%%#H!t8!9N&+d7oIZo%ts%qSsk]5upeT>Op!GfjGe/in`DGI<)$D=f%6atnd+U'CdOQp*j&^eW1:^.jeD&o^Y7rf@/3>[UssNFm"%%M_o9;#mNr<pOJDt_^;<KY*$A&:go(5/ML&!,hKB%GVql<?nq*&k@:=Gr;qS2;b8[1)e#K^h-ig=.)B9qAARcBcngl9Vurm,6N"-2%+QYI9ccG-S-BgMa1M@ijbrR`$P:mDn=\3KSLg74\>"/1Cp,qBsk.D"*eOiZ%;pno5?7BBh9FtKS]#Y6lC&jAp+.b+.V^kQ]4VLU-%Yo@sTFHfQ;D-3B#YR$gQ<Vd2i/c=iW_?CZkaMe?Z=6:ff64cD>;Ha'!Dd.Os@B1\j/0(goP]RL^\4"dR4-M$#:74Mcerm()*X%11%"&d:b!4:qPEA>&A`MhXQK;i<.Z\XmG0F[T79Se/X+-q!Ei-<^*ZH>m5otKE6R'mL[Lj,V6Q=6TP1I@3!mu=!IMP+GP#YP+1I'BWW%_.n^0Yc9Lq/Y,Zu`D<W0F\9cB';p\oC:=P)oTp-7JDE9'b)'pq^s^>NHf$f@Ypb-5G+;e^USi1B$Ec)JY&@#X$6<O=AA,\F82u.Z%HCW/2NUlT%OA)g9_=Xa#\X8<s_CEo1q@2B`"C0<TWkAW:_.X#]g_?'>X"?bWF];V_pDSRI)$Fn8gX'`CXp,C2!=h>E^'\=aC<.!+%A\h3ac.5-+Q;=Mj-BX6m&RqE5$hHhr=q%JW->FJ8)`mYrb4#GskNR>Pf@*h`,6bR]ZMmmd@LLL_KMH>4N\c-g#SbN55f<LeO3p;3%kS9o'P?k%g;/;Xnc@r2q&$$*\TRNKHa*9b,[5X0kVffI,X`0)kBn\no!TQNeJ\rXkH4>WhRXm]A<?t%N"1Ft2"0aP5!01Y1HB$M+%^qjV7_o-B%V6#t+EE[Mc18gt*NS_>KaY5:tdrZf\!ns@=!*/lZC4S>jGQ]T'J<T+pM&3/0L!qi.>tF&dbT#ReU2sZj"Mj)a?4%Ou%?X!hR."1s&(^tgkVuXoh&6-$c4sW4);gL.eBBG.\W:=FNY^a1PEtT+k-n,ma=-S.D&><,DX9l%O;U%pV4Qg!.+n1@6M@l0tV1F]1%%i?`D"YMA3(/O3p.q"i7:4Q_U0PLUtV8Q<)Ct)r+15P1jXFmiI;Xo8kC*cn#XO+[J9sd!A#u61m*/nDH:%GH3TVkp09QQ!sR+HCZ%2Sb;IReWK<]G>5[W+(od.2<SXW`A%K<&p.f:gh4LdIr5l=rD!'K],'?Be_fET[BLW=uhGVF@MA3p[u0ZZ__F1PZ06XI6q_j,q.VY%!=V@)64sArh1WkIlg6j,N4:nGEE^f5bTa88-)0<<%kMbLD;[OQ7qRN6UhQ.l3Mq[p?":sTc48F7-nA2jO^\l(.Sppi<Xe]^eA"6,%'arZ\/%dD'#AZ!QRuPte-lZM[GpIQd$fERl0f\H&;$N:Hf_7N<M9<enCH4.D'XO<K^Ij+V?qkU:PFm3ho%LK5ou48;mG_hY]6>!?%I+WW0&A/g]41]m)*bR#"0FKpj>C+R86VnXO+`c4=DAikr47/TciL#Q,PeIc^os,:0:@XB`JFK<W01_P+.jg9\'[\oq=W<b!"6P>I%&pG8S:Of;Pmfk*n$G2c`c\pLoOi12@D-GcD6BV@=8dg2h\*NFVXoF&bD8dr&N)rtmTN-[tV^/f%eOJg,(G,t=3m.g5*oSHU1ZV(,%BlC"&7tR$Q)BEkeBbl+OC2o"NGf@,$KY3H/FC@GJmt9g_-VPcfOcGh1&C#X02#cnVPPA*U!G]8#I&0Fbg.'e0ru1!^.KD<c.T!^H%K)Jsc^29WP*Y0e-^(7Ct9/B/W%I3[SkdVs09[\E;U0mA?HcD_ON(;)<.L/)#1F!YZ6%nrc5Op?.eYZb&CqsMT?]"Oe`mP"]FSOXi%GqPJJPsA@^DG)lZJPoCf$FJ3a,\'i;:5H:Y;K,NG#K2M_S3Y#ZoUO!o,[p^Nm"(h+hnKF(ITB%_1Y*UNT**Ck1!uSCol=-:$T%J7%XN&V+1a0\I;Tb$pnJ_?=c1>)[ZkoM.;QD>Z[k*)8^oV5@`u;)eDbeF1;;77pC)KhRUmAK``&c<jE,iX#4-o8._i_="#6P887=XEc%"M#+X%e+AXf'$/5Em(AuCFL!sC]Y\W)dPFga;c<-[ELr6CC!NK\['4nDVWeLI!eIN%[=E$?ZAaH1@;8F)Ql[J%WjP6/Fuuiq#\qW%';0daT`*$07%qA_NSTh0XdN9(d@QcLSWIBaLj0dk.HI"#TFfD=$K^4q6_\aGBqPohP`n2rj3`-or#Oi*X;Xm#F(?J@+YS!acq0oF%oVV9GHXCFA:JZkf($)k9cDKr-8`idAcZ7s$5^R;s%L&/uU<-Fjh#QIb\3\8To/23@V$@s-*#q@rN(VFE5SiKM)X!]Z7un6A4Jnjl%8$@+s#22#UU6;er;<_\D."NnGhq5jX./DE@fj^j"a$R/>#]iHtD]muZ6iAUan\aL-+(T]fO+^"N":FX4f&<$2N$d^'>^7#"d.*%p%poEt\)pog"eJ%/.gk_&#-SGRN^gjg7@[r!UGcZJR!?V\?kZb9H!U#[mY`1+Z7UY/%Ui[t2\ZUQX9!>qW\is_+Kgl`:D(2>_q*8cY%Yp%DM3+=G0kG9j*4Kt>^M,'>0qJl.P6*`"$Cn,>F[SDqHqI#(ed+e=Z)?U=6;0j3LK(P9<9BPi5_W(KTOAAdOC@V:N6[I3d_#@_,%i^5"-)aD*5P[ms:q>C/p;M"U/aF/r;;%SbG;Dl6m7-1L4B(;.>g+.h&\A+l!Vi7_3T3=9qiG?I\>k"AL-@Vj5FZY`;)p^(@OquFc%&&t+`S9H)hr";Kf=Dm,BbeN=T]R$rY]$nG$9l"C'ru&*()*J)Lj@hCie5O":OCNOn(qV-Si$"4/i<Hr?'N;&WLI0<!'II3M_c;SA%Psr/HocCFL)CTDNQidj<)%Z]4I,j^l7Ve"X"tKPe$6gRE1g1RV6#!;p3ms&ieQZb&j4:KJe,`U7]g6<[,8XVSI#rXtduU2f\c.OU%i8s$7ba^eh>'2<T9qYBV-qCV\,!]#:9NA/mBgDI:p"'*d[uSMh).S[,J<CV<oL#$=dE#HjZMQ)JSInkP<!]t/>nO:c(eb)HXWnLn%(/#1L[L+uc`+Yf:mt)[IV[Ig_f3;ms:72;5Hp5?ZMc(9M&tmBLU1GNe.DrXAIP+M#Y<XQU6sC!X2tX<^^#:MEi;$Md!URBu@98,)%bB-n:Tpat$"'$`Dj[g9Zb!XV/>el?<"L/tQf8/=g6;@'qZOgk3%pY=krb?^d/]/'q<$[XBeo):VYS9A<>T7Y&>E7O#@Z\%h8cjXb%h69!l"B:\J)Ct2H=.X,Gm`[g_o>_kYL^#PZiN*Zi4R`N]Aa]<%2S1HDR.tNSmOSoDYPK'o!>Ib]5Qb7%FMS/_Zrm`7MFA<55\"p:%;c,&!Q?tIh336%rT:FB8qppU4M\meb'X1Qd%Jh<m._#Hb;CX_)$b47\7@:70Inp5YTNhuf]CZ>nrHL=]/)cmPkjr"+I7JW!]qTXS%MJ=ON\+gO:^F5:dV;4]:%kL2qQ"lF)UPU6/XT^"mWNZVYD1VCB-qa_(!sG-,E^uBRdQi4&P4M*?8OMX'J@c,Rd`\I_g_MIhIR0I(%A=^^W]cdZUSeQ_8a"AIAbj,>Y5W=)<'bI0]3<6<r.BF:0":FUo.f4-Il%(Cg&UC<M6c]6TD+4Sm"Z&s>V'SQ<6*R^kU1jkfTYec#%&-CKR-e&@3Q;Jd6*(?Q:=[Yl!/usYoe"5>tlcX@i<*G.S^B2rk(iW_]7MaHTq?aM1d2HMs5QoB-2\L",+r,%D4a^OQTb_VVdCRV6%MJMDuohY[X;H`3ca)?AUo/`8D.]&<[gSau`'`H]YS3li"DF+<$`!p9p)ZB\kSVcYJ^Cr]P@`&,%;9)%cp6q_uT@P-DX4T6[NjBU7%Q33<:CT)7fAg44_1<*a9P8X/1@(-Ja_&-RJ1rncjkUja0mMm8K%^[\:JLDca1^HO(<$2CsqG\ML?1b->ak>f?k+%]El7AanBZ:rH%"M:"U66ebYO`H^PT5Lbcq_]^e#us0^)*m9!Y(2AG?nFBqF0^YPH)cL4ST&D5]<#+n\:>8JW=L\`J2+/^F5`A9$V^+/-/Gt$.]!Di%NL?l<,+5:bc<c-iVLh?Q`Z.CN:d/@Jf0!p/)MM3hJ]5VI6BjlT@;C>2>S@+WK8dh,Al#7eUqI2XEF[FC]tKUZ1#nEidq&N6o3$qQ%,8RYN+;i$s6%pM^aulmQ#rs*(5".M?Q1>go?O9:teuEKcit7nld#q693`*VY8q9?:MXE*5VA9@j079$ei-\.:Sa_Z%.OsS`@G@R[%)6BWs^c\!Yj\"_TkK&DkjP[&G`d@g=8:`CiGc$%^`lL\:%1r5C9dMG#aT"GF4hP*Ch;Yj\aV<Acdi:pf,u$dYJ5L]0r)VsE7NA/A%38>Q+S<S^B4^p1'gTkP1]H^ah23DhbXI^3:/`kslQbbb>3M*kk5#D>i1)+L^_@6!'n-;B^\XmfjdLa=-`r(XcL;="'7;7nZ1)-B0%A&N''q6r7`#@j,M!JMmZ6<\G;AHi9sSEj"E?No<@Gd6-"YR!7?;)p.RTR>E:%-BCZ[ogS8g+pVO%\>In\sBWVRPO;%#J/.%=pLXk%"j:6;?2(T>2E<rm7XS0kdiLP\EKiKaM2T6Nft"W5K5AFq9<+S68tH+L+q,1TQ4_l4VP>FOk.''F:dShkKq*\<103BX"eiF1L<2GM%WD'4;029>E_.^hDX.g*$j"Cu'LcPfm`MLoPN#HO^?15\h8uXA)Z\NX>m@Z,T.H1f$gr0(X6j4&%-146P/?(d%G$"*u<ssCk-BZRD%'N@Q=J5Z2,AQp.gqh+sn=\a-Y^6>dZ'\b""P!2rF:&tD9fg.fjC*n]Xa@7Lgo5K+T*@\gIOou,$\?1mdB'jeLkMh>_(nj4B=AU`I%PjN)>!cGK@N)AR/J7.R+^dNf(?\B)+P`kMC.1Y8V5G0Lg)Cl6kl3Wh*8p+;-KNITO%BOeY/pk/On-N9DIUmt0cqVGd91hDR@ZljM%bs8`F-.Kl@L!6RIZ\rG<bX]Fs&HP=\kMG-]BdE]/qRg-3>>&)$!]/8$e2p5"lN%>Q9(?\6+?ZLMbc#U`!P%Jr9D3:U3T^NC&2L0$%2.5:\:luV=4T)!aeRH7+O>2M!#0)F9K>:34]Vp\3K^sD7#*KkE!G/S0^`9:Nir;#;NA+F#3B:TY%7.'.LgOT/J9DS,')kY_%d(QX%.nk5o8mZJ(JHS.3k>,:(q^Kabp*\4Q;AolN/4rKE#8:Y;V=YJG,)HpOYt?:#7$_$XEp\1rM&1jL?lBGS0dcNNPNNI8@RUQ?.8=:R%Sd1BqWDepG^k[uGG'l=_3UsriELfK+>:q5gR58%$gt0H((uKp[&UB,$arJ2#j]hn<:<%JiifaJK'[E,^P"?kf[Fda"7erW@s30ZI%%HX0RG&53``A.NZZ][7T8Jlb@D1)lq^BCdT_HSN2Yl'W=1t=lea>riY*GE4o-lpCIN8H=\2q_8j7)Gp=SG68^(OT.>-'Rh7D,'G@%]j*No^qA?gpJ56b">ks;KfgOQj0`V,!j8nabm%h.l;.X]Ge%eqep];HI$#.D+M<Z$]GK5$]\)"?^n&9X0;5-CIX6fhbIUTdY%S"j%ZtqMNjFiK-1Usb?FL.cq;$KWj8oABkr8bitiMNF5n@%DpF6"Ahq6e)@$6;j6]kpE?*TI5POp]BJ30>$rr!d_KQu'EeJbfM<D-MAS%RR'5W1<@a$>Un]-.1o,`Ejl+-.Ad+>/_:TrQf-UT90C\,aaflUSV9f#,p]VU:r)C<Xf^hR&2mPa>8%$[HpLB^YDR7cSA[0fO8uZ8%`1l"RLCV2//&J\e@l>!($8n&se+bssYMk'iM8\,$HI!"M+!9n=4W//+*Gt7n?<SO,.fSELjrPO2.`!Joa6q9o)d`i>7rsSI[e;Wa%X:Td3hs5b5%""%j>D(mgdD,A<a0kolcM$F0s5;)o-F\B-^V@,'1VJF9hR!1@]rdQcVAFPOY)Bg'L%`!"qFA6-p6DL)J[X4Mj6ur;%na/3@LShJnZ&=nYgt'X/a3=h#=QsCR9OHL<ho)(coXjC-\C^2O&,MomB%TPImBcfCG(8tZp\^sS*7a6.j5'\UU%@tc0QQsC4$TAh%eZ*Dn1[*@m2L"6=hRDA5"8m.<YL)XuE;s="G(^dj(`kisK;)G4VG@DCS(iD,g=e5Af=pm4S,</H:#1,U[g((mfL=T^k3rULEcbZ4%qE+Y*s55egMtVnO2i%8l40Xt+X8[(M^Yr#"51oa[oL/u".nW<IYGD>FBpXkRQe_W5DY=UU%(=q,&,3gJ.\FVFfL=ila8Kq9Q;'d9%n,1fW*,]7&rOq_CXR5Wj&%=J"`lH<_H%1%qom<CAm)`1[XN[%oF^;_l7A9s)\)AE:k:Ct?3JIL#"TPMoM)oCO-Q>'B'c]:'\Q@,!%;.P"OBu@rtM3a\(;Rb)-rqeL,%O@TbSbZ\%pHSN;N?$"iNpP>4BrPeRs%.[fYi/<N@=&/cg\n%gs%KZN=^H\\H9&G_ZkCZ=,O/at%1FkWaJ$A+<oJlH#2t!4J>91%X,$UOiN[KrSW<5s2rp722]24tfq4GV1]dC-I..s4'"MM6+M+<2J76*^7ZP2SP10Z*'UGJ,(c#saW%P>?.`GHU8NKR5(BAo4%'q,f_.8`^b9@bZ>A38dM'B!=iOQINmBN*Kd\oB]*1L;+9Ad[%nSE<8r1KT'$'A";9@_Fje)H*f5/WU=B:%Y7K6YW5dSA@RGg0Eub2#6WT/u!@E4SorRG?pn(XiEJgNhT6:-rO1lhsCfVe+]!46]i]fmmR\Gt_5pQFC7Tu-Q$Ne(nS4h&qqh]%9%W"br!jXBStUX1NfkUdM\HBOKHp.>"bFn/Q&EQ%e6;S`\qp4?SqfF;g\V:q%^1c75ljW^IH^RR=@C=tlF]HsuP)M9%;rrK34_&eQA%>Rh+d-o9=M@No3Dq!grRgEXcT%PX=DUdURkL#&9^7R$[%@K4po6=re5/>:Xl4g;C,C+\d>!Ek&@gi]l6p5"_##1[9q6L8\iQpDgT%l#LP7O5:Kj"?/W6<l'!GcG6NBF0&cKc4_6N^osVmRZ(-6VP_,D6l?nVbKMu1P(%CueaoOX4+kG]Pm;[5s4YA?oWHCi^:QE#e3DeM%qX];#^M`JQbB#2[[s&@+#1B<TI`'YqqBp@j`9t+s<hAs>.XJkToiBlGh#HA+gsX)$`ZjG7IqR^5%-RV#@nuRT(Z.As^E+F*qbWX8%/_c833*1m\4kXX(HL[%LgIDABD$n=a`RUOYju<8jPq&@pb'Tjm@P:?rAc7,;j#b0X&,oVO>ugg)e<.Q,0)pWdf!dkn3U0&*B#2r_%9@37HE.1/j^:JA:M_dq-,Uni]ILKXKo"fXc^#HoXcsCaKnJ/tQ?n^O5>&[J\'j:R\6L._-q`@&AX,FEB.;?A`<p!<U,iP&N#84_A%q3*"o:%aEA%e#<o#!4pDs,s6a)].>..GY<flSP&+ob6_4..t*(Y(laO^<fb,KQE\.foVr@QC`9V3d6tq;f\%AhE?&qOj=H*Jk#qu%6WHUMbmYW3Nj)P<W8cDgNA`Y_^rXHqMp_7]^3bo7SsSg/mJ[m6>1!Y?)X$[Xkg[YFe4s0X4c<_!JW#0#cN[UfJ_Xe8_TSEOh9bp!%Nu]83oL(Y3@K6,79Y6B\j20Ald<0Q-BKEWsLP%t(Y_.KLe%.\!V+_eQ3NO%A6m4BD>b`/TE+*UtXHedFoW@-V6iNT3*Jdp?2/;J_%-:GIF78M+)`c'@I`mRXB6aahHhAfW75%2G7>sdPB*"UjM,udmegtQRZgdZ0G(iK@hHgdI(7_s,l+ZqrA"b4U8[/YQYLXms3q@rgf%p)KPb*qo=lLD-S^KMT79I.dE#j);q8#f9C9]@Dm$h4mL)EfV90kfHHpriU]ndop%JX#B&\jH?ZpJ^3b_b<9Z4#,IeEIC=P9-F^F5%Duc2tO^2q$nC=j,X0/Mj]a[IC7t2GdCgGD_rU9\>I:/6mp^>,)K2ST@r-7\W]b$r'Y.'.7(*=$p*&`OhVZom]Gd6Z2Pm`jPkl9O/%4oX+rB`AQ(I.Ce"hqd.XX;Bb25J=\D2u'Yg^Ul5J\"P[.I/eH[ZTE6SO+uBo'<\&&$$NZ;,l$Cq4+2<j-g;giNh>5(YN)<<>E6Oh%C^P0/khsR_k8&b#S;(Z_GC3iC-o[MjCiC$L>UB$ko,kR`q`E0Ls2SO!;%;1*3R@B\roWb=@.3;ks/8/kn8UnrmJ(o#fCgPq[Jf'F%epeXn>Br,GB6`s>^U84#M#[o*S^b79Un$<$DZB2FJWtZp&,)'!Xnk-6LBPbj(j+(5]XW*g]hG)`+e/?j6\>6i>J+sZGN8I3hqd-V%GN?75CJa?E/Zj6DGBBO&\@m7%K7(5%#Bg>(qST(frVgc:kPF&uc55BS4Z_GBDt`/hc7u[$:,^k`gts$c_;+nr?Rs[uBR2j%3^,er%c-]qFNVUN+a+L/D,LdYuV^nqmY!6s![j'0NkMNm5Hg^&Cf>2EQj7m<'kZGCSXtujO-[.:trhEM`?ab0eL',H+Co[C?IiSDH@,rl1%gH5=Xpuu/#3]%4nj-JU"^lVDlJ0/sAg[jXkM&]Rqp%._.\UHDVrSpt-\?ik/Qt4l[ce:Umb:0qS3G)EM7Ft_X%"MQMA;d;GN%WaS%f*/_KeC\@2CO>C2b9X.JLB$V7+GX6bfPuiGpI$t1T3dJ.*(o/K2J+g2-<\TSIsa-E`-!YAA,kb+Is6>1l0,AcX1%aL=]P'_aU..V%V0^J^O,'3W<H.f%PQ:]q$%;[%Ir?6a0CAN5nF6J:VtM4NcCP\V-:#f#roU]+eg-WFQN&MT=PVQcgN!s-'<KG!%`cd+j#VX;EU3WB%SCVoX&,C.hCe]E,YC)u;W^G6bpdE$j2NJC)S+Y**ZCc=NY8m8PN!9p*]41g8djOnLq-Xidr'*'(IiL&PK;8F3gS30BUHIX#c>Km:%@ZjY226JWtTK;@dnk+iC:gsjJ%sn-1#K$X?)]at<?uouXTXVHBa7eE(iS_&;#4b3GGcaX#P9HrEQG*kfO7n@BNW)\&DmQFcWI2"$%I'g5n2s;7kr`rSMFgO8!+0rdrA(;5doX5;)h04LC4'22XMWBkTciE@*LP*Jt?K6\gV+=07ZMSQeNY?C'l$XW@+!4<XP>jSmI!g%o%)N=)j8'7m-@=Rb8T^U1Qjq$)4p/^Y/lbO^T53l0ioor\DnYAlDUKn&XAieI2G?Z)141=B1h%#-q)EV*Z;H5X7M4EZDmaUlHD/CBf%2n!q=O+-k0PLJ43lE0gT4s0M`%sh%F%qP!TKoOjB++hW(ErGOoXZY<%Wr-*b'XsYrLX!i6q8+4_'i+k"N4=#AGN5:`j*?$ba3OlY%=UB$#b1HTOAVWH/rcN6[Dfu*m=D0t"bdlTsnD!ZQL:bUc/rUcl3,hMQ*:.0#QOkP$0(@c.^V=c,n'c^rQINQQ'caU?O]lk%Z0^lF%#NF=hhF$;1J%.(dkYMFQ3a`q:K\j2CBkosYf9f#kMeQ^neRhR@@-&-N`mpG7<p11(^,,+oD8W@?mqjeQWmQh6]qLM<!I$JWoFYDh%qFBRC5c8`k*)P[5,W+8aT(3_"e8/T);=eM,7:2$Ef*SV;_81)Y=P<+8"`:]hJAcQVm2sZWhCd4uk%/2+=Eh?$F7@;RCob&8UN^dh%r>fcch;2$/4tm[BgCTj^R<1BF-dm_jCkPS):NlBcJ?Dl6f'I?g\@h.A*]:4]f(/h0oCBuEF.;V1LXY,FE3m;8OM8`Cq`\KOf]Z^U%o1/OHTf/BeLSI]2g)RZT:UlqG;u(_5g[ZMT-c`T6%+AU"9Ueaq..*PqVnJkeXe!V#['htWhN1b%[ZM&dGMIhV1L_tlb8]2T2+KRX%)glhAfCr/.5'68Th@V5q7^UiGn=9-3)YBiVmdNm,4b//M!F&b/>IugRX:rCZe\;W\.i`XMZ<\DWe%7!q)XJP^mZ2($3+D.)@-`'u%q_@(7]?`uSi8N86U#UB9F!?3dXo!Hl@WQF"DQqYN._N;2&WXhsbKlN%Ige6j6fpA+XkrrokC5UCo):uE],j*[f?M-Ns3nD]XgZ.6%g,PC/YUqV6`R/j.hi<a:i!WM0IiJ>.*pq%$K$990?t59)T5jb48!A=AYQ^EKfpd4a#?qjc:>=pG:ds!*\%V+[=%=N"*DP,U8>m:L%$6.Z=(uDJZl[3cQ/X]e^^7G.n5,%l#R+J[qXHh,g)B<XEhWn6reCKAa[2Wps);?i+_B[h.%l^qXG5ELt%Q("?_koELqLC[(le%FH%E$ZAV<G:Xmq[N+8)tbWI%tQ)JK.(F.acXq'qnrHnj3c6]7>\OX%PGWCE2S1>T%i1H,<,gRD$PE\*LlEpd.<24..$(Ahmb7"g-5*)%%oEXMV]M;<.h*JGPoFP33lmZB:?3ACC`#1eO(1=<0<ihG*f`L'i+(PZMWhq\NBN,cT^Au#k`0F!P6p!sI()?<G$(=."HEA]-YOID%H@j^*imts3*=P1"mu=ogaC4H;2)lSh`K#9`**$,dPB8K)_`Dd'_6C''k=N`+E)K)XNZ-&qp3*6e*5gE.DJq$]8Gj"AgP:R?,9rsL%HEYTL+/<LVBXiQaV-Os[6^gO1QsZ<qDMY^"q@l7ljD,$AZhu_j!q7$.;Y,n2C\R63g!'Oo+R&LH[Ht*pde-Z\/'5r1LDMULs)MZ.%D`[jaknW6.Gj><`5Q#9!^GoE1q5M$umI&Y?=8Op@-#]s^?hL7rcg7"o`MNQfq9,s*4IfWC^\%0BdeoqWhepan'heB#Kl=_S8QN".%\U`^Oo4o/6VMG$;Tps<ODs?r8IpFk2Kdl@m]DM<2V8$p:kC8k0/,YjkrA[mu%^5R"md.U_]!;+`_l#F5+ti?A^3&\%[55!fmbW3c%i5T&LII6`dlfm`m=,q_kFC3q_:%&#RABbY]QtD7L9.p-?,V"'q>l/X+rVVYq+'uUmrS+IHX"8YsE&c@&I9=\I`V]7nmehKMIW6l@%SmQemr=uC`RD8[]l\kS8eMep.D)#@#HMJHVD,jlSnbr_Fj'$a&Q`me#*R=\1rh_l/mEA;[QakH6b$f9[?U&o3KDXi&SRh'AS"&rl%IQ`'9I(rTB8641%1ih)_EG+7<q>KR;UAIXOKn[-9@&&I+Y$LsRfrQ"1Q`f/458Q3Z#>Orb4l>QDoY^1EO'eK&%!qTMm-fi;akT4"%=;pgaIJ]gUd(<q72HJ\C&,P&Y]>LtYhE7bHl:.IUT3a[1mE4.pqe^slqK4UmX^b1Sp?\ihO0\IFdl23/gT1%Q)l7DRB5W2NIb?Nl%5%trm\c$76DWd\UFSb-#D,;('LYYSjg_mh?8+>o\?g>$8)h?de^Q./8cgP3!6(aZ3?e\L8I'rMKce+d/G9f+b<Hn,lnB[T-&A]0O%]:/_e*\G-3C*3*+metk4I$/JOq^D:5CtG>L_[hHIh*1%t>8PWbD3#dI%=39m@.j6K6J#E0?IsPhD>U!jKf>?Ih0JgpFjMqRqcRd_%\V590+$<ir(t>-_aGT>1a.R?7-F`_V]P&DZc7`8^(='#m^:\8dCNATPnZ$Z,kEb7s^X/X_hLE.C\MRqO*1m3/nf\E61u>>\)YWU>%?+d4Ud/9P#kk_t_J+B7NQ546dc*QNn\*\gFDcbad?Jg1"LLK4/n!uHkf&(9ZXb/go);OU!oYL+U#FE?$mYo-&^:TUl?iU#5IF&5]%_trcTfB6?CI;s3&?K[u&$dTpK(OpS/p"dmR<Uui"+*;qqm#/!,(Op9Bo[S_tLLF#g0@aK</IjrcF:J(#q.&[cC<*!V0)b<e0jJK5%eEtH6b:c&$Y4_+K([J+BK>+h:TDcMW[1E,tjn?/6$]cq#TQ:M6[=7o?qIA]]qh+3mT=Y;UR/D)BrFXfWEsqE=^/S`O+$I<h[asF,%dF)/=FMh@^?(+FJ`ES'$m@QDM;giA_%$/Y:!eUQP<+"tOX,DIW\Fo]B2sAe#rM@'1s5l'IqQ7D4)g(&f]/-'u:qc]ph$\k\/HC?H%QJ?fYmLBZ;e0Ka/QK4lF40#(Meuc.!2!FVO>F-jmAm`i%?"06Z[pXZqZM'q`$3up#(6@=gTI\8QmD>9lDslJ)KAN6(%6C[o++N68%Y<6)#K0#G0C]1hop!u&Aem*^8^0X74>OL)rqtRfYB,34+8%\Bhb2,V.YK,hgc.;:`^W;DldgPTl>g!=W^CK(.GduT"X5bgMrV$"%%r<gkkNP`?AR]QO,2#c>Wn8GKXld)`3?,,5ef!c^Q[U4%Khl\79kPlsA^:ojphRrTaldq3>o<iL,*P]>#S32:DG+LG>o)!IuiqJ4d%?,(!nbPAo>gOK0=4rGEfkPT*79tm+0H9$J?I]m+ce8]9-4tg41qK4ssj-T=+gTQF<GE7nOm&d[uYFd(YcfT_#rVADIoC^jr*P]>7%P<Zg2\h"\6ra$on?N+]NIf2G*BKqe'^O@0&jbjYTn7rJCrC'`cV&sl.]l@)TT)3K=ldt=b_:(474#+1SY9&,@gDsX>>u5IR4uh0n%C\D3*`NR#s]l!dL+$Q)WJ)UAO`gDs$(@P:R^G3KNp\/IqCR+V0NSg0(/\V1lrR^\Yqb+]gcVMH^22ki9o?qQlmQQQC?<b#9/3Pi)%4@P-Nm9jr"`MM,`_ad,.Y$F1mLd\RRmg#n1U)?T>_r5aGhuq0n+B%??DSEg_k/GTS[shP)YiPN3lLO)kg?Qh59CB^\#>@8[>1eDZ%(`G%Gq5cT;i[>*p0+W6_`UEfK_d`)IP9F9TUU]??l_iXQr-`a"qs)0)G6?1HEl-+e-P^)R4JU50IBk-8cJsZlZ%bQ,)olBn0,GFR%S)8-+1k"u,HdFRX[oPNp9l@^JI9Lpjj0^qfq!n'qIb16BN>V<5;AfqTFmbd[a25'u_^h&`rLg$Bi:Q]/oj;:W4$+2LSlq!W9qVFu%"s"cbV3WY#4q&AR(f";UTMCqtZGZS56.7d]C4je`<"Q^C3sS4-TlX%l*4EE_*MAYH^/k!J5CM?N..AIPkQQFr@i3^tV)%Dd`iboH%Eg_^'^[X>!11@e%Z!Fm:>qOP"lP&rY??eg(Lg'"b)g#@0nO6ORp9Bh2cbE]Ee),Y`MYnP.(Vsptn\;-J0@aY6a1GI'BDp1CQ+-\W%dN3N#/CM4;HZF!GV?ad3oA=&[&Ia.R>?J[*?p"CE)<csHbDkNDEt]h>gXo':]76BnhOU!/gcs+:n/qV\&\hW#dCI9cDQ6oj*o;a>%lZF!tj_M=@plET/pB`q"o*[Pg.rZkTXb&gA7s#DN?267c\H%,h"*m&?LJqZ@[8"e&MC''6l11t"oEXE?oJKEi?89T`h'h<GNdpQp%:aU*dhiml]p!#)`(#g=]3d6\ZcZ.VKa6hd)j,5[8P)#XGqpJU*^>Iu]A50^d^L"eI:tIWLZ:8qZGr4C@-9:LAf^HI5R-J49EtuI2%Gd<K.lHGa^1#I`[E(G]"S/h.B"G_*%'3PPTd^-UD+?aWq+&iI6X)F.Bd3s2)`[t<4SYuo\jU17_E"5ZT47:s15-!G]`dElViua4A%<4]Nrmah8:o3Gn=lW02,e$?@HlG<>h98d+2=PV?X#uI0$Sh-MGG&ZELK6A6lH*UXY<V20&1OkEceP8Ruge%d+hu9!X5qNejSXo$b%@G9''SHn=m]R".YDQX,Ln/4;"@QntMd`LG2jU.WMkTl@>e(WKpiM<$PFELF1_>^8@)Y\,:s#oV[)gUa7'#4.B]Jj:Q59?G@]\^QL%Sgl=8*/jf5rTE_9K=:0;>DP3Prntn^'"`FQh>4-IFldFE?<uV@`Ug[jq<muq-_JtUhfUL@n^BBKXDLVC`:m@0G@O:['uSG+G#HcK%<qY0<ia!)D"?^2Hh`Gt\>()]5HC]/-\*g3o0B_e!cTS\krGUfq3+Q=N=I`bkHM)-#^[&#oo9k9.qc9<US5S"N\V8.KnCoT@)2khr%pFi8_GK-n0;s[jHk^Rst]#'YYMU&pG?;3+,OMiO1XSSS`4YL^eLX&)Ss82JJ0NR<#:5Q5O<u0]=$tD/P2Vl$obKm27R%nGHf*#0g%qYJ+g$+](ucgU#fq/2ZUfZqjP5L=Vj3cfKj*K(g%<aNTokhDLCh9*?;6[:AFT\ShVK"*PMr;'eai24Zi9o,>h`4flU\#a*&j7:-'%KW_`4LdK:5R:MdN:*R*!M9nh39P"VIQtR\T``o#?-Y'<-75@7Kq9%U^:Xme"_slMW,T3=J1T7hRpinsG&l'o)[,$,DhK)YhIr"TU%3g:QZcbmHlDB>[7HurYUYP1Mm*HT\'lKIR@#sa2J]&ra!7KC0Z$Nsj(H,"EK8!hLsJF_oPl(1k6<uA!aBQ3O:laslUo13.lrH`f+%L['f#;$J["FU:5P1:`Tnm_&RHddp$GWtEFAk)+A?4[>2OZDP:o'kE"K%UUbG0DOs`TJ5mNmuY-$C7!-t=3d>(6pi_-Q`tgdKUau%%-!PXFY:EKbN73lI=38%MWTYPRm[KNk0kP.^qPtDC-WP)0.B,4jo'bYHHCt(PPZP5_*b-R$;#O,Udeh6?FDL-DX8Bq;MLGW?&"k3f%VsCCIJe!4RrK6rFp`tX8l;EQ?Y4rB3H#ckoV9S\"$f/rnm!`gbB%g\hi5',LB"0KR+13eC5%?Q\htTM9)2pPOBck3E#?=OoAG>3^%bGuFKUO)8e5Bm_\5C$V5f1%ifI(oIFFYAPGEr/FPB.#ho!I0-uh;%3WT*R0ZLTUe4F4I1kK9lc.<$/]Vmne_)Kseiph0CsQg%1=T%f)9I1_%uA%m\rV,E0=QmT7MFMcBI(mf</j'SQ&r"STX1$gU+)($R>;GY-Y)[?e\/+9;<i.aWo+]m+R04dCmaug<[aeb_Brnf[$C^%XQjh102.S-l"=`,G;%C(f/d,"`?SQo%plc]QB;Npq>/(S/.A[3G]#!3T(ZqZ_/f_M)I`:&ZLN&k&V*-[1*uh^-sHP+eL6k"?*Xhq%MWS;Jp8=g%D&SSh05!Su?8\h7drFmMcGiei\VR,BU1gb(:IEOj<XoVSR8`!k0Z:FuU+,P[e,*RJg!k-\fZtg"AGg6fic.lN/,$;I%'C-mlbEr0#=60iRgn.eais+L5kj[?'&JB2%3a?C\;1uECWrb'&`O]!7K2&W`PPACb\Y&;4PG-)XZe)BAM(EE"V^&OOg:7",7(1S<%$D!a/qk8%uh]/:?*D,6<@8L@`W_Q9Z'P;/GPHsnQ]stIX5GrXTTO,24lDiroCd6tXj#U<5L,FNCRu+;:hST8[4.#0F`33VLbkg4p%iU?^gr?Jt/-^XTn`gTkr(&6k8f?eXu%=^T7#7I)nT"k<$c=F8+`VO3gcK#^]rCk)@Nh=Q)4G^56M%t/>H>W+@:&5cgILC_DW&%)E%ILY>HnB0bPg04iX>ZmRpMWf"L>&t@&GLUf2l0_WCVh,jW(GF_/V)md>5p\=b,HYlZ=?);C\k80[Zd[e!0X%ps4jqr."NKe-4#sds%.1s,(Ho8I1g-M*5,:DBN\XL=)Xu<-E'*/a'f]uOaR.T\02bUPkWSoil?D$$K0YJ>MUlFkKCR=eObeA0KU8P\0CWg<jhR:d6ldI$l%AfBtEF>hqu*f7-\B?j5h@U'hVPBWVb:83B;c8mTT`o/?/><WYe<l4l12Q?GA/C^'175+3tHnE&tI[Jk3>E:T/!Tdp=r8l5LX8^//%B=En>h(F3QrPS"=f:Lc4MkHPDQq\"FkQnb7`6cV9kUqjRTECWFM\s$c5rjP".p?oG(qS*,F<OiWF>7m.K44sh`:]ZNL2M)9>oYG@%RM`W`&Tf7l"fI6O)]_5b*ic,uTc;et,DBbA6eAiXPmBF5/5@-O=&DmT,3[r1O,]j63[BalHg>]pl1BPqNWf3*qC/gdHJPC:3Gq(:%T."#<<(nGniIoL\mqu1:hcAjSKUUaFkGRksn$_c"]30:/3'!RF;)Zs,d8bYU,EZb00\AemGSM1TLsF$9@840oP[DEuc:tsccD)9S%ohC25O/'T\>Goslq)D,j2.B1[+`k%^Y&QaKPL5g0[q`Ll0$iK2!E>+a"n#,e&3OI)c60Tn<uZ?9%C4?N;IAOOpAXDlDL69,@(3-`%jOB&Q36;`uG$9k["M8gB=Xm=t\6ud`Spu^8+](geQk@UdZ"Q1!%"YQ2d0t#jn3igI?*LJKkl$s9W_HK@17GkLO/EV:O]lo2RJ+sS%luo(m-H,O7l]c!+gOfu6[k3d=Yr:.cBZ2-6\sKI4Oun2[>;625R@)i?[<6-#bLR7/juK8a**@2;ZT,Z0a('MT-hXgX;`F0Q`UR5m%Puc_))KZ2"N+&RK)YcChI,H)2CC/DThS8SEn<:o_NCh>J<?,@?K/r%%LqV92ZS;J=;k0pjFdp@L3ZA`N1EFKHXVWA#=P_m7'T4fG%_cTq/9*lpqN_Z58ep-j'IV^37p?q.;h>""^.CJFma2H0O\nLQ*6?$*Q+7XNTZ+'W%h$J`tOncp%HUl].hJV;C]/ho1/p#4g0!63A%@oB(pVohu4E[TP6L1OnKbgRHh2YO^CA8oI`-TWU*06AB?=NRT1[1aRU3#>[n3dO)52=YFG/-"VR@6H+6cbn(!';0a>8Tmnm<,.=l%;$f7ZE<1*&Wm_t#e\P]gc]<Lf2sH;4=R+hb*1kHH)G_&Z=7[Oq3M)])S_=Z@I<#lF3fh)OaLG)GMWC+NdqWD_9rWH-`kGn,n2.[F%As@N9,XHDpVGtmtEV69-s2C(q=_M>hn"WA7FC&_EQRe!/9V@Lk)rG>6iVof61-sdS]mjdVN*BJsf^7KLGo58W1buIP_>D9Nf#U)n%>2;?O4X,#bI,:)+R5R2m`93*hc^?1@a5I4Uh"['qOdF!YP?C(o&=DQS^[Xm_jTguqZ&ai8]^g/6Sd]ZJk5*:!r(N>9%lujdrJNd8%(tsZW3lshZbCd7I@FI7d6X3pGFeLBjE,8e8e5!=Z%onFdlZP:V,-EPIj16Iha#f)BE*[[NWqc8lhK"j]SthG2lYc"u2Wc]HLQ9s6%l'O<&Gdo.<_5VhI7`WD@SU]uonSh2UBS_J6FZeH94]J>:LE#3G3l?3P)+=pnnM4om"RQWW3^l/9ljY6Be:e:TQg]%dE4*?R*"b+;%Rp-jC2^V25N8igY=sN$=*"Q,;`Oa8SG@'[_+L3%0\1t%UfI,*i<@8h.]]B8[Ofl#kMpA]dkne8#T>4nn3`bM,`1E(Nqft%G)KGle%0D8<ZSu8+gnmg=uM%-MNfsJrI/O&Z6.GEu*^hs(rn@jjoL:?#H]3)h&\)+<J7UY&\g1>\R)_mP4W$H$k:@"?rrpMR#VhL.R\gF%f%aGVG(`n)PVD3u_^E#.,WZ(H$fE!#8=q`3IiP[=+tSgN%up+mmR]JZ0ZVjm@[7Z*URg!K"fl"[Xr\&,]d$XmNX4,juR,pKaHk#lm.%_h8<nA!R_+J'9YlooE6DUqZkU-5!6BbgK0/;I)LCM+E>L:/?A5QWZ_P6M/uBBqXe>CFt!`E'Zr=9qC"[aH6_]rTZ9<3'?jkXG+O!%d]o3q_TfL0g9V<DCYP3/LVfTaDct'3Qme]NjiZ&*_F6J@?B9JJ:DF5gcmnsX:q0R)fOSlDmen+kQms!4-[Cj3e/]g3bm7\8`u:q2%:Rk5j]));j8Ml;<.$1./UIbO4-Grq;amdg"Kb04R6#74%E(4F%"]E(_p>l$H`WnG(O&s#Hb=E.Cg6]82+gC=6R+\6G]Lj4:B><M(%)uM]15[T:Ei?.59558.&?bZ@&O1>EBOoBb-o#IjKo+tchYjf+LcuNuPl+tCk=aBrtkND'orjR-pU2d1;].LGpJB]ZbN7*oT,fXjN%md0H@0DfbZe7u5Bil3Xt^3)i7?$JR`_X>Y8%niIG@Ti)Y61*>t=B%)nm_bu2\,!+P:ai@2#Hc$U@FSH,_UX7ok5QD5!qu9\B@3B[%?oKJk>oU.KO72g-/fo+gJ@ug8m.NI(*&P5)kM8uIFpm2.?>Xcng)i'5S`EC[ctY_XchGb/%QaXhXF8cUhTMZpHLG+@%e&lq>hC?m%!<,]%nW((*CA7MiTWK5L'e1f]4MEj@6'&qDO5C_IV\@Y:?ps,9i[C-0CCf\Yh=5`VgDU=ojP2A""0OW+f/9QU%dc9TE>PN%qXsaL%<6]QXX6rQ=XjJoTcNC#qR9#JdRo2&?b'<=%kXomEB]5PQ5;SdB8:9Qtn`q,u6uIZbh\>6f>S4NlosN:t)cpidde2.3WLY$nA*](Y%XQEDBH2Y7pmn<4c4afO,Smnhb`!,?oC3iYi9m745bk0;)D/oVjiFWs%2dq0&;b#6DklberAHpP(D6\11N-lTW:"Q8#DtUJ%<A\!7%(4TuOnrK=oR]`cnOVpJ\'MWeW(O=_J\i)VZ^QgU6VJFZZ8+QY<U?UB@kpGugR4=Z.:"RZ*fK0Si8YYJ'Fr+p%c8:umgF>8-BY(WS%](Tt3Vhq:O:T9K0GUCg[D9Q^`VY>2[FD^p,X>"eNBY%q[bI)PD<mc$V]]H5ikpFF&WM8XW?0PL$ba]/QdmqlpR8LOG(S<OQY,qfs%LmVa1?!Aj#q'jQDR]an=;WX-T&PY2ZHC[beh.Y!QXJ4t!]e?^KVJAPRkJh-M:"P,YaRVNiBY(WS\up@,V\]?:*!QEtXtM]&!3rsV%Q*o<c'*^Wp8hEH#e%o=[U0_,R8gCm)'A';Nj=Vdse(DgOFZafbM>qkrA]t6?kn0it.'uH,G>G5"V6Q`[<DWKhe`EfcWKU&u]e=8$%;dJQ`;sJ=tkb9aUn78FERD*!j9Zm92ITrdD7/-![;:Ed9N+PhbAW86_2egK>VnYX@F#=h.I^1_Q?.J$dL$h^G[#d/I/!=\B5e7hD%ci3sfqpMXGQ<rNW^jc?kASC;ao75%@MM`Sb%Nl$,g5X8E50ri^rq<gaWh`O>mr!I0gq2.Nl`B-@ZYN*0WCeY*<'BOc+OT(&G<NSo%dksk![qG-so-iTcG6;G&'Kq?J4ET1B'VaN/`A;_*qf^:QG<Hrf.D>5L,L&C/F7oG3o.9l'J"R?!7G7k)niZ@i(5(\S;eH!`l`hL?%&+>WV2<*SC*r+S)l$A6c*N@kY@Ful^U\F]'qm4^s$R,]@Uch:iO"Y<DQ8csJM:YJL<SS&6iOfD#o7JB5a_3)VBQT;Z\CYCB[.tdn%)@CQcLR'[6msZTjLN"KZIsHR>&CjOblbN2WpXi6%DnB&X@O&LXSRH0(DP`lF?BH[aIkJ?NXLH,O]8h#.XSmE!=\>doH#_/5;SaC)%j]4W[X=%69reLQ9Z(Di]4Y:84GBIHXr`'[`ms4B0CCKmJnrYQ?.O(h'mDM**:mW@r#0T\#GdnOu%j(9F_h7B6%)'sbGJF$$W4I'4%@sr$3!aFn-e_*_[_qu*"gDT^mCAfPdiLRnN+6"_COS]\/qDmM7[T@_m.bO]V%)$oDLO\8Xk>uhUj0%ib=S]hiJF?P5q8-F(bf=.h%+m0ZeQsPMbVh]YohHn>D2P5e3ar>XFG(&>pbtI=F5@gE'm^g++$?+]7'5Mq'Zm]ahX0\E>,dFCSc:FRa[JkD(\Zd<l-._qQ6bSY#%1ES9]?bY&pk$s1iEr*B1$JQH:RoR*Gir+KTf"Nd?3d';;h;:ujHf9iR9Ld#_kI6e0C\iE2O!D7rNN!n&"3FFGh%a$FIP#V2GHY^S%pS['l<[BJ'/_3i=P=+Ea4jH.DPSoh5BhT0J5C*SO]P#u:Au08/<tDXCLI\iaX7kr`mOM)9qat=tp;#_CM-VrTItf+YV"U"lFK]+t%G#L:-cYbFPi$!,G<tEXG3XtF2lsBR:Ofmk,43Pd,p=S'CK3_1T*.+n0f<^s,=&\d/_lP^V]-f[$-Tf$oGgcKF8KHsVO]?]$B0G.E%j/Pqe7j;b#>dk\SCCi);0<Qf%1LmY9F+#(a4uOj9cgi=%m<]4dHp<'4O4D!'Sj?iC)J8_$_VP,E&)NKOHKHk.2=:7[Y?f?Il(k2U%'kTRqb<%h.2u]U_52>heQU^-`]_[$FrO&sY(Z&Tdr463VoV("qG<c%dSZ968q<d9m#?m<]:]+iQ?TWCVhX)>leU>J^iF^$a4Sj&+%(VjMJhr<P6D5O\%%l`$!$#cW:(q`[mF&&Ukj^'\9cVjW79fk?&P_:F4%CJ@]B#NLnSNGYrq=:[uV\9l1l&Vi>iSD!=Ysu2Z]\SF)%SR11n/<4l>FDUdElrt@\V7O@]#m'tI%)gZLL\%r1qAm^!hmKXKQF$CPaeQVk)i(WbD))#ujNa\q8<N_T;D:/R,;\"Be`fQYD;JQB%?BA::ob]S9:4qUXAj$8lp@P$/hSa$B`H7/rUs#f`'qnVJ;&ZEV6)q-8Wm6GqRl:lM1<Y!Q7o5ul[KfUVa7\ko<?6jtpbL$=T:o7j%'#:@Pqu%[9!P:j8&sl(6Of.34=5WXIcA84ahO*qAZgPt5>4-e&S`tPkZV>YVkm3C9lmM33-,7X()$Z^RCok6R<Et9(]M[<P%/OSY%7UOcpG-^q)Ao>4bYe<*,'UnL1HF`"=LNDd@#<Cm+RdD(me$FO?iutRVL)du=8(N+DCQ2JIK/kc"lmQBFhK*,grR!,7rT&mm[qj[\%)PtuJJ'8??n]PQ,B>NL&jLhr:k&g3gp;gn*G]1%lpQ,W03rYlFAQKH!EW>WQ0!eeIIkNE9QX^3&b-1/-nQD9SK<[@^UiIis<Fr_G%#H5C*ZJp3H6TiPX<ShdN@#ic?5PH-gP[+1X/+7l35nDPVK9C>#lI5%7;ZY_I^/HMZLf3Q%$@(Hl`qPH7T=k3HY4#*7kuek+H[%'C%pVuWL7AlAUgT@aXp+$#[m+u!=hMEeR>RnfZHf*<:LLXU&dRrc@Q.DYkfUuAt^#f=gGRmBd"L6glSt2Y*HcZ?U2$^AL:[TkD:_rJb%""8%H*$>Wnf,R$mQbg!.KrB+L@CgH_rFQ*(RKKM.AV_nQ??6*:H=BC*f>)Jj,;=K*!ODd,;(C`/MY"uCC8r?7;8-@DA/jr65"j'`%q']UtX74Ftb1HS\[YK0n%rt/-0i/qL;8//rfd_CE8,8$K\:<X<^5hY,5Nnki4hP,^e>%E>WrP[rFI^+hRRQtI#'Y@CDs4g,be&>A%AodS<Y$Wi+6Oj'uT-`k*mY:$%Y$YOU8cuio<uCN6\/VI5?,,f6Turr$!:TbaNDTA]Ta#eoms[iWLj/g/7u!,gC=mb/\n6!5mdhn#%]#!k7Wo$@L+,=asGQ#+:k.Y1_pq)!<`t.\A8G0TDh$GQ$W"/O(?[8%"X+#]a=8)Fa8#Ntl#C>"*qorKfl5TS*^M\qsE$'COLj/g/%]7p-mJZ@J:IbhKE<Dh+q]^&YAk&=Z")sTT#a^1n74n%q6r2sE$=8a3(4hd?PXc2o+:@Ct*<#hhN1/\@+f<9"*b#eP[lO6.oldu)8%5C$mChruS.HX+d0,>r^pnZH6n=8c6a.H#NfGQ#)X>hb4eiSO7fr2iS[h0Z:/J(Lkc"$spJia'=eYPLE+H[PRY%eof@hf-&Lf_>/q%c[4mRWaC8/*1c![l[D6,*GsR2]7/QXDo%gA#C+k(K+9iDq@0'^G#)R(1=2O:hNr\5n%4&)c^UK73/;b1cf''3MWFlrj6JKlUZ6]K%6XQ]8?hGB74hdN]deDPR:k%$"YG_.f)6$!;lR0ROb-1Z8:[%o:oqPKcl<!r\c:T%sbc-i3!T*M8N#1i\LV1$Oht7pHn$TWKrH`gO%DqK:4]"dO^kBhRYB&U>%Aa*L8+d1gGX+&jIORN%2F.VHnI[t@:lh=]"mbqHS(*!0W^[?YJY'5!WGQ"O^dHn<Tlb.8Nj?/iSr<Dt"%\fA?F?,,7jQ,C9#`sYu1X+#[j%i4'qlR!5'"csnbp$6K4ipQI?hY$2',7jgWT0m/R<PP7k2X%c%h;a(.2a6T?I_B`;fQ[;\86-bh%FO%&Vmp3]rb+VHDk6!'LU>EX5SMVOlZ]/Sh67LohE3Id#K=N<iG$SC!0\9ksG7V>>Ub+XUoZ,%?4hX^FZaXPE^#S[`?V(]`B`ae+%FZOuZB)"qlR;+)cCQL3XpuZV-Gru%B`R!E0#8<$UlW=G`WOD,2pJ.p4C7jce`kW0C2K?D.A#us)F/AkXnS_a+J,8<+rq>p7Df9.G%B@GW13BQD@5(C96D>q9)osS2iZek,qb7h;#m'aZWpKk6[IX(`C_VBLMF8=*C\G>[>Hfs4n]Q_C(GM`5MGE^m=R=csWo@`mhn+c\I%Rs4EM]_0!lLD/O2(R)&+YHKmRf/K=N5J=f&YMNRBSRdpC'Bp/a#i=></]$hmm,e':X6l8L\)hh+5C=QBISr8_H^m69Xk*4>\"5bY%nZ+Q3Si:"O5&,MJm6pc6=(a`.fB9%\drOemk"kX?$P&"gHX#0NqmPWM^,T2u^#->'QIc[(/sp!lEs([&]481J8!/#td_$ea\(ZC9%F-0qOh-]Wor:(KJnoD1qO]KP:4KQka'?f7plLS"oo@ql0hU\`om@-VdaVeWlNg]k^s)-=&ZBlZHk2sc&j<VJ52Vt8XprFQDpKq4M%']tT@I@`EM2VGP<<^E2)5*?Gc:WB9o?Uc9JZ.\9X434s<++(Yl290=+QBqXGComV^r$A/p^4["iA$[]Eq:NoL_sO_n^Q0)*VggKI%e!kQcFpE.l2]qqGC];ejbL<=!<1PR)h&X,Iq6KaAF!GplWPA0,pbUgB0<2eDrP`WefDIM_^tRc-]RB*kPDppgKLKn/r:TYj>1M8s%da*&bS+p3CT69aHDK6M>fq('Oh8hFH<e9"bYJ:)!?8LI.<nb<4DcWIEJ,`ZR!k5^+F>9>l+!_#J$[)!uo^UYP8<#g8c.Yt0lA(!<%qQSGU+-c0cI>'kto(g2.)R*DgCMk^t>F=dq7Xo2j7XTg%9flQ@%E7e(Br/s9eQ"\lVLm,Q5O[*W2a73LQO_$bcb3oEp'I1D$FVqs%7Ac?0IBcDTU1u.$e7uRaW<MOO)VVl+:%0^[T]/s9&$X`$4ZL^"O(%Y!ri]/KIB2$#B`8TkXfDpMD6J5lCYA9tp@:W]I.C]h]m2[=%AFB?F`51U67eBV1R<h0T3d`M<Y-`O%mCSk:P$)O<Uc)V=[&RSn;pVc$H+(,k4E9n7IHTBJ9rY'PoMKpsQFB/.IAV1s3Oui0'25f/%*Z=K/3fTO!;^l$cY@`>S1Q&0rQ25dQ1h(rXkkSl'4&bFJO1r&JRqKbB=;O&M)Qg?p&H?c.hjQ[F<)P!>4jV9RdiKmMRenr/kM`UW%nB[8hq_Na%]W.Rs`E.,M:OofDZ^">pZQ\AZ`AGk)N#pcH7f%,(J:#Ju:!_J0-GlVR)lK/Q;]hXLA8f6tT#BeL_*8H=c.g]Z7f25j%@"%`Y?-VD`)-T[@^8!QgTPFuj9+LV9>5^6gXQ+Q3=mZi!lN%:tGW*XVTk8$r$)Y>'As8F"1jeD_0jj:pUq^nsrXi$$B6NSJJbZc^%Fo7ZfoE&)VJ2QYNl+?>j0>CQ5iK!T^C2<`^e";'$o7Mq5SAN+i[_UJ^GQ[3J\\DC)nU4ij&j=<9Ar!XFG3=S<jET/uo5il(hseYP%pt4Q0'MLqDLuFPWe_Q6L//1+egO@^+:G1_fU).X!o4u^ORP3XBoN7m:DbEVi)FrSc4kj/=S&GOCSQVu/gLO*tPqPcL_:4rn=#J`k%K$!I'Qi*8^o:SGR;1EGtce#/`-^gElku3)oa$a0gR1m98Q;.q2CJm9W_hY66D]Hg;1^Iu*44cN,UL[EAZ9*,S_q:0VflKFe2DKA:%H,EACQ(!N+[i3Zf9%uG2?*.I@0DqE-VL^KLYHR,%ohG[-7l;eEo:sYBXZ!(lX,kl3M6B]I9rp6A'E7.QQ>^VCZhuHr:#[YL]NdSO%0RCKZ3A\.#H68iZpBc"bh7S,X<=^1tc[Wb['e[1Hq:r,iCf,TnL=?(Lp)C<*V@H+2nEEfh>L6oM!'tjhK_$P_WR=Q7:%c>@+I`(6%C3&QKbHaPIV\tgTIJ(cg*td<(d-8()o]rOoYi:Y/0!h4p?0'Ysf^IsW[UlXDO$8^EX.KClUgu46_YYr"5,BMmc%KTKK])`CB#4ep%!elVE!N+(T(+b6^!lZm)6>_2<$S`f>=sarT,hH?2'Z5q^=IT,074ah/'jiPbAL<d>NBrUm;IVt\"W3qjZ@=fF=YLWII!c!r,tUF9%3RCjqUL:9#4_He-rnJ@jGsEoob]]3QIH0r&nPS[(X$s!\'B\lGD@POfGAZ@%f@3VV.'jeufFTh?oPhJK*6d3ADIRL(AiMQs)RJ&r%h%):A)7rb@<ufG3.5cZ_LV\\eqf]X=f`oBaofY7mcV48(/BmPMF*j]`R,.b#G;[oP';Yp(gZdZt(k6/"<j0H8X$k#WBJ@D;L*He-%SM(N:855,al243/7/4%KB<mBSZtH'^%&_d:WL`QGF-sMschpr;3jKB.(%,(Jb!u'/M4=%;mF=8ToJ?I93rCMND6<f.1?IF\.P<YX%X$n\n^W;SMj3tqNe9m"[=s`l-e^e`834f(2f[fe1[XZR`1:HjgDU@q(%;\78DH74l8?HM[[V%P4!EU;)Z0c)R+)7gG*S60)hDSbQ%XD8K!r1U!glK.?lFFXB,3..9&BQRl5ka/G.rbJetcu_]`?L4_0k)mDWng@)*HYMhaANP1NZ[R,0[CbsXou48^r:/ncp".U7H6+1-%!Jfgef_"q(f.cMs>;'ui4o$9@T^imnElZ\dT.iIAQ#$Lb8[PVWqlR@#hIM6t\/"o5UR<VlH/FTFn0VE=ZhJc4].K8ar92qA\>2ni%@/9h4S1'<=kb+B/*jr,(Bn&2bgC>=OXZa_l"4@6'GBA.!qiekZgUUt0'qX`u'm@55dJ>0a1[<VebD/[(rp.g@_/FV6[o3)O?T)l\%!RhH.PLn:7>m)oEBC,2W([0J%][s-Zjei*,)D8_:IC%XBI%O`uqtb/RrV=ak^)]*#qG#ruQ@%gq#hrJkVRAGH$gir'L1p+bog<E\%kS*eJB/+S:-f4R<fr0e7C@:i;gL3''dPGfsiN0]HejfQO]F&gF\/G0+YoZRi]_O'@nCeTne=2e;h]pd.?('AfqKJ7<E8YnlRFO!/%[tF2Tr1(Pf"RB#6-a3._UDp]1\;G?Z8Or,<m2p?8(>@g!Z?qMXEOO#fki=+N)\[7A]l;IfN\NGsRk`tD\A7A!!W.+<%ULHb0-2bj%B@Xj6DI_G[C)1FGbL<9k,Q!82Al72p@K(lXjQ'SN"8-!pi_;S]]\q!%/N(V)2l.&6cW=KZ2PmiILPs!8E#oMU\(1>%p3Fg\>'p1;%G_=scf+9hX/\qcMqaW`8_9KIIDqDW9a>e4^GbZ4anI)k,\gT(^j&pd?V-!1Wo1tgAO-\C>bZ,@Im#5cb-g+gsG'/TW[(pN3EIB:7%h1e^sIa"(Sfh:UgG<mg.EcSJlO"/H,Q_nMAE4M2CPR/Erh0>ea6!ip87dr=VO,6RW/8'%KbH3^-(rt,'nZ=tsCeUCkf(Bmm+f2ZK%C>7M(,-.NRR2-Zcp^H[o*!6P:0-BF_ISm/a*$R*)?2U/7%Jt&s6\WGB[MT+^4.'-=h?okX#KNjF:H+AqGfg:fj7oT[Y_f3S=l=ec%nTGVs=Y3mhr;;^_f.<fYG0HpH/tVo9Ra2**'O;*Yd`<(;6[^RF/^WMm7SDskM<tHqliNZA8Y/h\\ecCn)MT&fk2kU*)LZ:8_&8(-%5B(8gB:2>14*fnM4,FTMjn%KueUmP^kRHka?HdZ?I_An9JP\rNI)'K)oi5#i[@-nJF!"Hk@fT8nW-BAXK15$@<JQ1aj^C9si$"M9%F(A#l*+i6V;FV'3GNbYo+.O/\C$%!"J(<-*eFiK&_jgF%Qfa\QrD"hnX?Kn=a_l`:Ou\V$e7dn1FSsf+'P^h%$2V&IAe(2MC;/Ut%9S4&s#.@9'P08$T&1n!tgtY5paRa_+j5&\&3A;K2;2ac"Aj`)8Sj1?6k2k"b=KBp$_iNDmeV+B.lIMr9XQ0/3[:S/u1s<>/5%LsW%2+A<dgb,d\#Ld1q:5rNt+'fhlj)u'V4h7C//$R7j&M%*=`WrQnnka7CB9pQqDOQRl?T%2_H?sQnokj(dZMA7CPs*:.18A\'4eE::%@`U[&4/`qP1ja)EWkFO(MaBE*GB!Ff"^dd0S;qO4(lfV_O4ZQ$bHkpL$.prATn*k(Trdt-O/rrWBTQU+f/DRW%#S:UCHc$PoBrHU%RkWP3@L&c3ieI=:PhpSs[-1/r&9_0hE%1uhG-->C0Bh3741l+O2[#n/_B-V2@C&Srip,TCX_g7%`p'*)]5F!P6.?LNUQ=nu\7"Up%DSQddIB6I.8"V1-XmbY"L&AR9iYksrOdj2JpJXNWT%ZUn)Yrd<XE'PjenL[r<k3jT:RA`e?[A]@piB7NX'PMLs4;Iu3c+&1CA0ca%"Q[i"J;YJmQTg_K!>iG3g+Y)o(Ho-?s#YD-Q%";ac+DT,s/t2DgT+^!T1]o3L[pQ!bZTm%*5L_m,o0ps>YVI#:8=5TAWa6;Z^tkS%[6"SBHM)[AcEXqO%nfDT/lMN@3tkE+MOq!!]l4(=;Tr_F%QiD8AljC_&(E?j=*IX5<aGBG'cL(qF4Mc'4k_4H<S-&:'s*/9m?;2"%&lu<#G#6^(GGsLN8.;Y%j_BnWD#.AVVs@?P4n'ghY]WP,MIj#6IGF*kD6@O5Gd'AY\mB2ml04Cdgq):AOZRI>@-.E2f*J"m05[.#%_>?-1ZcZ[3k.rS:Qa^pq)R/u(MTOLKG/WXV>0"'pc[D^^:T:A]0*bFXj36>C:K/aMfrBHO#-cj1/=a?``.\!Hh2LecT02"_l_B("%//Y@[3>Hq0hUi=)%N9mPXHY!F.rJcag\F:R7]-mYG[]"s[Q^!Bgs[aB>+b;A6mZ@/ZQE8#WAdIqoArY&B=@h=Ja./hB2-YRm(%06%^O0+fHX6XnhRsD8f6+RfFOp'QG$T<mY42/6^ij"-X00mG3.P;dh=aZ\nq5S;h5ra$QKB@W]'`VT8F9jP]'c*=1,cdNfA6-S)0SC%%FkpmFXc\CJlag;CXrh7p]<8bGLV5g#?.YVX`V[^T)2m1]dsc8JY0s>f_`42=fXG-fn)RF3Ct7LS4Fg_hh5W:-ASA]Y]2`K=7Y\A;%\m'=8[=/CnY.I\(2bjm!f6+Rf@(naV?.YVNEqG-llag;CR$7:FG$T<m%Po4K^om!@eW&(5Zg3SM2X6m_V5%m'aOp?EEk6c:b3H#,%@l[h0^X$%gs'/;8XN@p>Ik%?hB;S@(*7R2`:7(+qQ`?h\MM(aQFa6[L?6.Hi-J(EJoTd0kkNjeNb<M<-A[Aj>-C<$IiP?r_d<.LC%X&BTfV3GdQ@-[mI'q]C9nK"05IDXB-YL1e=N!8n#_B8G,`Or5Xe`+:LUet(U0?p$K=aYVFm#>W6RFABu]l_!2j%[-2rTSS&PMAs%%CJ35$+;oe)SkfY[D'm$"G;pLGRk=!-@"hIac&9o>K44H.'3S:-n,BE:I$pHZ#u\TWMAfXhDX1[Cbg5a]N6Sa#?]-.CQGoV%S>E"*%2g;B^lW;])h_20&B1AJQ1fnjJs5<2?pZD.f`S6<#hld"YHIom@\fI=\D6E6/mHeBRqSh(Dk80mL3fc!1#+Ci0Zdf=CmI&=Z=^D&n%DuJC=oOd'(rL8#<.!@#+atOQJ00ngY)kE6Q5;r3*6U!F"j&1=%nuXWI^RNu51q`Ld=mnePo5$I!BVF!N4s]M+o<Vd^J#Da&n%<&4%@rD+ZfuhO2Qd:tik;S=PpAFg-k3ii.]8c,P+2%7WRn%BU(KM<cU<Jr[ms"BKRoq"MqX`j?I_5>nD!'RDL-kn<iRm5Xkr@iE5)&(7%4[o%-j0>T,f&G?Kea$"mEL]B?8$1bn2oGH#=&:o@eS<h;K^)F6gS7kh0NJ][E8s,T8%pg(bfnf'BaB.i:jPaA:=l&<6ZaQsYYJA;%R%nZ$-mk[Qd)BZr-mgm8:ai3#j10I3YcN-_qIa8OGEG(G,P9=)LcA_<&%b1,'da4O%GC@(ZIF9BZL=niX8.dt;6\e39@MHB&([#W%d2#pk6.pmp<_**tf#YOq=mI5?QbqTs6Rs<#gU-^pK8kGcr],b+LUpX@#AV^2R!RPT12H:)%ZY(*Wmd_E%;2=&:E2N+HR#r7><MDn%X?9UP>?a+4o(:,ZO7`7?Q+&8Fn$Np8rA^oq"YIJf?Ong3`-NB.G^Y_7HaZ!\Pa0hKB5\\l:MkJ_T@/5J+Yin+ZZ+lo't(lpn1Q([%o/jq#!P0SFFuc&QBoeH!juuRf[?s[W9*ObGp0d<,O3L?M]rd[q`E0a4"KM,i0CV"L8P'6S,RF=pKhhZ"\VO*'dA2cei*>4IGTZ'd%7Bd/*-#iK\a$^+Fb@@0PWNG;E^)"/]2hT=h?67r]F@=@7bZl.tFW7&U\G$Pu)+gltIkZ2qk\J4."\THjN\XE;jl\EHZ1n=j24cb&%<rKbZ>^n[3gV[$A'rEXACp!\2Zo20J?VVhog/=Hh=hFp17+^5bmWl#&rch#kY.c]!qp0Tm/_4k&C]A[`cqD-AYP#X$?L]n>4u6RC%c[-\3oq2'6J)77"%el=cg4.s0NddUgYPmXtOsKdcq:^>T/"SuuRJGQdhWl:%LAg;KNn!pOI-j/eQ*S1$aaEJ?mo<tLopY^1"c!S5%YD$-4;s%lqH*?iI69gmArTClJm'#8%?i-0^L][$(o<nV2=3N;b1\8$S]N:S`h0\:"s*:e'+1p.KfDbAJO^j$?XnInO>+L`14nH)]%]N;^Kp7D*6J)9L>3WE*IYPmXt=rA8mE-f`Tm?7(u1%VgQ]N;J\#$EeZb'Q!$elV!Ls*:e7,PU%_hg)CONSHn`C]A[`4_eLTo+`dA%K,i;GYc!Or&,bG0qRdQ`GX&;'Dlnc)=fP[o^Q(01J*C?s8[I"]/lM1/`XD!@R)$1%5@3BH;H.YBaW!fIDSmfMn9IRPlZpVplLMi1%rN!UJn+j'_jB`rT55\R\c6!Bt4H)Rf#NK"nP@o9`'R6e!Vsi"nJ"j:Ba31(2>cTjh1B#YQ]?]f?2t59VF?fY/#L:%A)q2t)"qWGL%M:YJW@JaDuG(=G59s\26+(2FK3,!gU=l](@NBh16cH8f2kZ%S5iZ%;GeX*Q']smc_GJUk;j4h8f(L*LrAD^J^miGhRHoU$TJ1BGK%0>9ftNkD.IOA@8K62LFUqNV9O]fl]0emGVso'j@b@fP<&_a!q>-bn_hbgQ9G1A3oM^Pt`uo-Ebi$F_'/E&4)d@BOS8i<$KN@]F)@%=1IpBJ_N_4kUYH2(V&<!fA_UL?8ug^fsj)07h$]NRY'm5gtr!\!qFCt`V7QVh:)C/>`\ZTqEIdS#QL[sW#oQF5ocpI0gKs/7OGD,%W'</NHSn\_Bs(^uY$ZXk^&3;$HMsJ`3<1)6fKIki+.XA$APZ:YVk]F_)t-1[<hH8II,dV'GV\9<Y,M@2s"tF8lHa8=pD`f*eqdu.%:uD8I&:6;RN;agi)JM>1Y>O0rI51TgZT!1?<Src1;:nD`Kl%M.N?HFBdItZ\LajD+?D&boBblCdro(h!VZ+Y"5>SeA(#)(7Eso5X%YUm)aQA'<SXbtt>(%&CC7Lh7JU(D[.)F4o\(=ocFB[OWn#[r0.9[m(UN366&`/jLZT)5L>VhHRh3n!]]W"B90;%P\!9Jli._aY@&%WjNsaA=eR)a$CrpTifr<"3"j];JdouK:q0LOUG&\cb`r<o^bNh(c8/n5ALC!L*2J0T/Nu+e'5oB5KR/,ddY^FF6Y'2/5P'PdtX%E%gdQg'(0=F5;FKnF_@7F%T2peY^dSc'J[qi.90C,8]TIl]M_Z*TPU0W\N.GtK`Ct&0g.A)N*FqNr=e_i#$`GQmI[26+C,CN9npqsM%>?k$EPrl2e1*2U?\.L#qm_Y,VPQl\;2/W-!?g&YM`3E[bKOGX'W[b!B*[LE3M&<c9kO]02cBS$YRV%O9$_>rq?p&df0PQ3S1OXj/%DM0&FZcE9C&fFeA/C"7D1Rq#M+Q`[U[#D:20L$EabB3gD`"8"=d$D)(A7_1`G-8u`\VgO,/>f;AUdqmHM:NMG?C/0U/7c3CB`g'>%[Zi[IbYf,Y%CIZdQP-V/AuGL^8:no#W@2X4i_g"M[E,A_*+Eci5gN>Y-.jGm;W$(``>ZXuX:^0k``4h>fdK\,HBEr]&Vrb*qamB4%%SR=-SgJ>\7:)QrU!neT!hgf`AMBDm,#$K3nh'kA(-;o6?AH[EUcf=pAW8-H4E"Uq6A:8_a/P>u2Sq4,9i6q`bes8aPtVXp*$u'"%jQqerX=+*#aATRUMIKg.@!S\ET?:Vs'j.`7&UBrm9OX#@_E:BM$j_JR)'SEO"gB\=jH:iT4R$Z^bBDWo^l^=5UuVt2Ia5MEL0d4b%G>^s3PXT<OoFUj.5>4r['+8<'\Z2<\H][k5-=Z%.]Q6Tgb#7<>?m`fiQ3>EsV*"iX?!5<k(cFmM<6pQBGI=o68QgXb[_5gh!Z3h-%3@Ti*!ru8)aJt.5etr_s`\\4&4@NRZl2_ZULcl3$.)mc2jJ`=#MaFre7D9[:hcOY&o+`g#<[U-YM7c6Z:6?X@KaE7_29FFRCQ`Pf%;U5V>-4usb`\Z@)Nl\Yf".6=s$d2FNC_SZ][313TZRcEM,>(hq27sJl%^e1KG%!ku!QGcobukKKA&f(91;>+';5V>U8J;o;HHWV@%XW,\N'4"!_*<dnok+tA;XrUaN1NV&I\g>5)Bhf%q*<Xhu"?WLON*rN>)3H@@>)AI`0j@=.Wbf6$0nmfQ5sJ5LKKDpAB/\hb)PbN]%Dq0#,O1`Ae*+VmKXocOWR]U>$a*(n]@n["C$C3/EE+'o'6:YX/(bn6pHVij;m^n8dLsb=AJgtYF;GVNC)(KV9q,n@0G3.$#Jao=1%ln!G.l#k^$1+`"'r<=i%o-DX&R+]M.($BkA@^n0I4Cs=6$\=bUcq8m?O0@bI$R6?_MbK)QNt7Ztc#qQE*p>0[_j%9\$]hBi/5t=Y%ZuknS]).n0ShNuq.5!Y"LAN,#9$Q3_<`NlcL++<Nccl)L@R2])/_-+c;'1sIK*q.H<P^I4&#H-JNFElA?@q1VSWZ7-8m1-f7*/n=%=j"+j,6mj'mQAFDWSL+,K<6R6LJ:DKQCT-02E)a*OqA*9%-+pNZ.t,QO`6GiU`(fiQGM"?\ohHYU8F7*7umH_M2?sXI&W^5MqXNi%'-:WD9"Z\#,aols-Dd;;21s8D8JY?s8SP!b0f(6f[=4CI+UtMXe#Z,hFE0>`O*AiR29E3l1_WIJ`/S62#cO;=Sd3P/OrtBX=d:=d%Cn2o4`.DD5=fNrcU+R_Y"r#ukX+Fj&9-a0<4#E)\*"j)e.8(K'To)_sR9MLD@2-Nf&n@bK4qA;36(S:H>V>,RZLu/WEK@&+R31UP%n4=H'WN8b0XI,N'g';+U50;K;@NiaE[e8.#).URm0,[$"84F3*&n]4J<JbtD4hF`s3SCU'-XuM^b-2,Q.Ai+/m@t)Bc3(b<o7^q5%;QN0'^dH;>Bk/XtV<Z73;3/2<is&]0:7h"r[\ZZ7.m'#mYUqGrB)Q+J`7bSQ*X]eH,#,9op3c6WE*s`6i0`mlQt%1/QsP(bHF/o.%12+$@N2/ek-0^P?TStmu(l5uZe<=F2jrN^r)KNnkS1C_S,Sj:&6JiBFd'l=TL71LZ2%#)hXcOI?:83h8\:`+#;A6*rbRZgC8e%"Z%'2Q]%W6J4=<Q_[K>&bB&]Ac@$=`@>%MT[7k\sUeZ+\go4m(U9cG7KR$8(OM&"<sU3N&5bi_B]\S+P6K6=UfcaRA8=R"qV]9;1u**%)6.4I,2R@d:(^;c8b#ab,XTXH_Ws&%%"n8U&lht"_tWgj-"2IrJuRS5l84>7&Wf$G;nL=XikUtaYl^bWC9dh,74;n_g>D$LD,dHd%!lG)pbrSkT%O5Lq*i_@S:s%:fYo_n,:&)ZWgB,B`2NBTM40[M@EboZ^;RSHKqhe:>3.$k?.W\%]R*69dH,0M&GsrYrn%cT!SI9ju%7#CTb6')Y?KTN9-(s0.d9<p4^ckAh,@3>VUW[=^>jt5tRKTMZ9f?1.jO_ZEE\^*'q`S\P.r9*"!oj%==6S7q.rptr,/OBC-8G=BB%5TX\c:<ihUVItF\97e^a-[D%l0J&;i3E$aLFj:uJI;<!6*)PC-195X0=I>W]RH[>h!<j^CcP3[EnJ!Afb/h*I(TT`>7'-6:8M%`h%YPiNOIC++e.]Pa+nD$H>_FVU5<K]c#5o^,MM9e?=?P4X-jh=I@;cFLV=@kP^+ZVsC8sl;De0N0gg[$1eM"k[^EQ$.#h6&m6#FLi-%4.lp-S1XHU=<A%UrG$>k,NI!-8eioJEQ6&]lq2++l1E[rdS)HUlbVPJ0n$Q[3310WULjOI/#hd8N3:rM>f,\Iej5Ff,t_>Ue0-bN%;oXo[28X43NJeqG$]Njh:uJlG"U:ec:Mn'E,M8/"A3B;q9Q)Zh#kmb-k#PJ,KnRQ#(a^rq\e\Z<+m+&LU/]UF2QJ9G9$Iqb_`!,=%_(VlJFS$#S'5WqA<=6-FBjhVB;/G(@r%tOrOt,jEQ*<e$`L9uM%!3D"Qp?1:"Ys2q1p4r7Ppt3n_^V<`F(-4e]0[1=J/]JYTbH.e%Ve3W7lK(Z(1@:qT[5,2JD!O+92N$hYN%KQ&kejBfkd+175!oG_<)Fc1bo:t4'f9[J'CC#GlPR<)D&]#GqZ`9;h&mbQ!/rbHKdk;[%g7rEK`b^Ue5%9FkJt!Y`AE#&.Wi6b/V[J4c<4K(rRC]X%YS+@4#J#"p`Gs*gYJq\R91d?p%+g\&:9;MK.+NK.9@hT=\8=*c'0V)L%LDu0R#hD(9$/@#80fQ(;$a\Z1/W1m`*OENtW'c`sJ.1oaf8)>:OE1E]%XbrI"KA_PBMaT$\5LIbQYefo9qI)cp`,[,o[,E.<?i_O%VKMkeqPRKu95Zkh"g:Ih-9B`@K!AcVXD*^fY!,=QP#dC=K04^1!a_?=$XK,qWn5f*=&tn0OR>AVO0]O.C:J<"7)DhB4X$l'qF&fs%JRJTnW[]a#/i6k9&uA-I(7=p$fS-6"MZ1gYX-Flj'Vg8rMP_LE`rZnF\V[GTcsGB`T<PWH6G3`:+C(s8`Q5,oZ@.H6/?#F2Q.cc5%r3o?Gd]V/ID/Z;>)0odBiE?O!j2V3<.$,9@*KAs-5ab-i@9cZ\b_`WB?L``h==GRR)BFVX-$*ik3daMB5Tkmf<L)5%%Q$VV&rdaB%jCMpAA>(mlg'H/+2IgkJGc@:a=mZ.I!%M2E.?>`!Qt]eeO8tN7R:nn#Vrt+ZW'GZ4M[fm6W?lNE[R2fmb4Hk-C=Uh'&D0K%dhAZ\%0\!E/;o4<teOljPR[\_F!L?6S,t6XC'TVB%,nEA9f(1:_$a:Vq6DnS$&$VTW"H63OWWH\u_,/^_TN7\cRWIr9$g>5'?ol$R'.<<)%=D]4upmdd]iae\IMPpOC6d=E-4\0d)),-dWXfI+3cP*buL'_+pY/$J&Yi-cPHJRdVEI+JJ<:,rHK[MbR;_TTPN/efZQDS>0),HGo%6b"KHCP:J8C5'Vl1XO<E<NSF(,F,L0Xqj-A(W0]W_5D%Q_EVJn1E..78o\LCAj;!d.EU2dWIZc."%\$ti+nqd`*eIQ"^n;i%l*rK%Lri\`:uYt=8Qu1*82p\bD1:_i^5j5Q7&-S4oR/l$9ksb!oH)OL'ZN*cANc\1_[U=sjrM\'!/eb>:BmedmmVr!+\`Ho6U7tFi*j+(%(0^fLW^L,:T"?\g@"fNC_B_sq(+70;2/NFA(]YbpYbDHulNu;:g6bam^nuW6AC.AAEGm1l?ssZ%ZaOa:Si,8VcV?Ji`V8$05mStN%iOVkV')4IK2@Ig:0[33U(^q'D(u.HYU=E:5H]E.cTZ*,tL5D,sBX*q2:^%MT4&a9pJ]*a[JJ[%)"610t7F+O1g7dKg?uP3h!a]_1%4LLjWR1_nP:CR`!#@B&dC-'Bf9J$dC[WlWEfHpfi0#7&:(jh5J(d>/8[B(UjJJmp3W!\Q(0X>6p$ASCY,%=sr@9_=r`a&iS0Ik#=%<X%r^79GKQk]aGkAo]^F-:S)iUHLD=)5B+,:e_$]B!$]#..EsT$aU6t!Q#E)QcN#.@j9M=0pM`+LU5nCQq-AV'3l2)k,tZ+UL<uW%_'28uK"qXs1`_sE61(D<=rAM;Fdn/*8(\,=1b?kFC[500W!>UO,9f/5ndQ$\5LDY0a\B/O_;<[U/k2>fkqpiBdm9"&JdAA+BJge9%NY!+lD^cO@%OBLb"BdJ"^RWkr*VAM;_(^Ek<>@>f#Ej1gL>ZQuB:>%'H(d2(B.8NLQ=7bC')RD4\IR,)4!;Bo%eQOt%$bN@)&V(9%''hMnW7dY$GfLCn-Xaq+jO@1Q8XL4gd#KR\'aleZSZN4,?Q@"]=7iirRG%VKO>,Hib/''sK;UihEP4^8XGhabS`U*g1Knr*Or6:m%jL@"eMMJ<J`JAlF_T%B;[,IBM0=h3s>V!+[nS6,d&n>]L9J"C3D!P99\-kSeUE[^e`&j2`9QlTI!OA0X6R&GI==6?o4iaq,$Odn"%.,hah@d6<7L/=$1;u<:;F2]BG[(R`ck1ZnWHH=LtEY'CU^mAgD\u5^&59V42>3)7:BQ9n:dYWhY'sjN@L"ROtXVa'a9B[[42fV()%Wn(d_QsZQ@RAgoM/Afc-05.f]ALU(+"&/*s@q:pG\Hj$sU>j+nCV4Am%qY3$]*H]@o%;?G8r`+aY637lMMbdhi*$2;"1T]c4^X]8%@WY>5%-k8XG.@e8k.*9o+_p@K%PiQRTB\+b@4X4C.ede,Y\5g:Ji;N)(-/T!IEf'0W4SB:-l?iD,p!h6n[3Kk?.=M"Se2S*;rScD%ae4A]6\h;<Ab#BED:.F93#sLunGUj*OC<_PXt'dT4p53u(!4/5k\1(?[;/Og1cZY`"1?<N$`],@KaEFCXrr\7O:3h18<+I2V`@qN%q21qTM'M?R@UMH1/I4Xp7da*GauB$Q$!RerF<U<e#r;r\<<EG)<34H]kJrT3*NFh;-kT*2W'\RJPPg7X@nQd.>dcNVBQ2.<ckld<%[Ld9g-E[W)#)jb`WN'Q"i`^d294LJu>ED;(f!NqG#D-\[6k"9r@lS.p-K<Z`OPgBpEn*a;lH_?O69#"qgDkbf_ZV,f=3sTg#dt9o%P'`VjPrPufI8?SLl@IR,dA?n2[t[;h_CWR4Xrts\+R(7A,Y*d*di9r5Q8[lS@:G+]5R]/Vdg1%tmWnpY<<SMR6q7jU7FO5Z[+KD"%T17bjJFF&!OkUN@0)@US/CAo/VljK7lj$GWWXYKX\edoN.q#H&7:"KVU(8/'JI2pl5Ztmi1g?5*^m[2Kopf#q?Jr:n1R>/Im0VTk%'(YLM?=\$U(q/P1RUIaRU+UY-qlk;Y-A"9C+MB12`q:luL6rn@['.]R(e\!o/Bm+s<@qA/JKUQs&X$2U*.%HIT>Ya;nhVk7a<FHF%=t>JjP6OT(UIQFm"kOI<;@e@,KSX/E7S6OnEo"%"$436&AZ#c(7*>[F+VlbiYcTG>U+R_iKSj;ROa!7h`C3+5<3>Q%(HS"O@:J2O%:oEHLF\JdGE&-@`>O.**lm4QoNR%LDKdd>N_SiPqlBG4=0l5B=f?5CHXPZHP],5K/G!HlZ0lCA"-ol6T$2C'$V^c[Op5nPr>e)Cg%R)"aJnhsis+Xgi"lk4#0(,2W0iJQTEkbH?N23nr^.VG'Q5E%e8irM&p2F,3*j>t)pl'Ys\U2=0dq:pa:.\e24T*.3qf7AX[?Zm2t%#cRG)CD@',HEiA7_^rg9Y,.)hO;oBBK]JH/Vg4^KKe?JrP!Tro-=h[`NY?h1l6+/%5mZ'W"B-Co0*W*3]ppVb$NmF4%Nn27"Y/m)%+E^7m$J_>_0T.Sc[:F7^P'fSao!?+lc-G=Se?1p1EF?cX=TL%C#KcQNJd':DTO9"%VA?C&dN:H]E>tg>rno.R`0Lk:#2cs5l,*a`%:Cc=T=N>;_:rH5d[VDJEdk0%[%hTJd)C+0Up9ls.`;uA\Co=9>\TM(76.-5Y%("#q<C%:B+_W5s%!Pki*%N;\!ettE"0j/t[L?#&%OkA3\0^,HsMBKrs1'JrO'U())UR5T.!t2E9Z;iJLD&37>7R[ktJgh\,M7%NlR[@oh%uf:e0JO,s/lr]cEV"d.7`16hM0#L2`%sd+%TI@Sh=uh-N<1H/b\3/2mk"iom'm:3X&NSM2A;N8Q6GWBE$sON'MR>Xfk/3-W[`&4`UhtDn>6uM<Q;qW7aOY(281YT)Ybepo.dBB!%DbqVVZmp<$S3`k%.EFLpd&'^,31`JPV<#lBPg1CAbJa$G"F1agHF[-kdf`C"!5S(87nTD,Od+#",gE=s$DoU'+8KI80SHW(Z1UH9%3G%V0OOOpbP"UJ3KGh(+<MJ?UcE7m_;YJ9I7F%G\kE$.E4;Of8+9MmFj@Ni2Aq<,Z&[IT<X&"8o=Pt>j#=9taA2$YORb7O6;hur.%af-\RfJ$Q:5R8+8oKmY]cUkF2G=7k[?,fCm(7+*ZSD,/\XT20>&j=*#P!Qu;@3cVo/r>YU6OT=#6pi66<):q2m7[9^%l%T@hN\ma%&e#pK+e?4P!>7(<5iB-E4f&O>!!*KQM6+(7)d$6g;Pq75*i,a1*!$,N$,C'X!Z6VFgJXn,92Ka[%X)rWBGhu*r^\##'#<BEZ4LFn%#Z1pBBDDQu29cut^B6:PjO?'IM:\YnTFa9O^gg.*1(]IX'D3R']8?4b!uMQb.)o?(Lb)DgM%=0@5>E$Y<XinSq-gOiiY+i9_'[.A%_F-"b#Y39r>ZuZ_^mJBDOJ5CU$AP1_%;Q9tUCbb;bp=pV:d7!`bs4;6)r9eP_6CG::CA;8"YJ"G"B)oUEbp^hp5"!qd05JM$,bCK%jjP]HODE5T9>=]HmuTu]g^reLj9?./TUZ6ON_4T(@2rI=k.6,/@.(p(96DX*;3`gJl.B/;S<ij'OSp+h<6ChUW8XTWeVo*FPnM,B%OXF"D<sJ27Z="D@Cc;_.KR!HmM(#2g^];t;-\G7Qj]MRkPZLN-K1K<YbB*QB$^bI"Wh0B7X&1^CCgOt@arlp.Ek=_4X+EMUm`#t'%-JDKe9(Z5Q%[D[F'""H4N-&Q+jOp"9S=U>1[`],Lg+;^l/X/0*!a/])8L5ZQSW^L18Q6Sii0m2;,R'&g)i>HIK&YrS'JIM6MZ=Mf%*MUf@F+Ff,&jNd:UEsZ3*!Of56Kqere)nGnD3;u0-6,dhDaA7eMkk2PUs/0LFYWqo@iIKD=-1<Bb:cOTJY$jqBhK</fmVV!6tu%?%+bigG%0p6tZ5+cZH`"0Ddj`P#/[Xo?h']EQLr@j71H%\cB7YH<pgR3+@$FP.0-\Eo[3/j]"CRTN(FZ+j;?m@V-e0R/k!fI,*oQ/k%?UprHZ-Kh!@#9ntP>r8:[dWk(0S'O3'c9jc!SM*3>+)9(CXZnMV5/u0"5?<o\f(\!okb"F6aq[+Lhg53M"H)u`^-k3*&rY"diq^?%MAhj6XLm(3;@]i4&ubZ(XC8/;M\maPJL=q/K>=CCkoaG204KKNDI_ZK^*!]'QDjsrX&E!*Zeoq7<s]5=/&6*+.]]$%4P>FB=]Dm\%,A]I2kn8V(XirSZ[V<)8P#=^imr;===OGH7H`V^OqS]7och]+9!>=^m%;U(n)N[lo:e1a-<*X-'\L2+VilNm*XC\6iKGYOQ)MuUG%*Kp[UTKZ;.Z`'!TC-]$OXT8G<kpDD'`K606&JFa\is-:CS,5q]QDgtulf5i)01FGcFY'06!Q,$Y<)__t*VcG*bB+r+,c/NO(9f:2%(q,KB@e_1t7VfC`@HMT4*^>QK5W;P#llj\(%1>X0(()!_jLA=r]qV`=ZJ0Doo55PD)-0)XEgQSh+MeC\`ZbJBdJKeN&T_f+pbm`P%6k;VZ*,3O!OBaH5DIgZ6\;uG.K,i_1^s"[<:0ekW.(`lK`Pg?7(u$*Zngg$*j\R^jG<dV"!`h`3_^m0peI^r)gCb9bla[Q/ar%Tn%4rO2c/=oe'@>0k<Ypd_AG"O*,*4iX89].B[C\_FJJd3GI;7L?\Oq9=_Wf8]3Q@;SUpFq9$HI_-`?tNJS@=^q\*j2MV0fG*[6,Ce-%1B\.+U7N/TF3VHu(R(QJ*XkR`68^(+e-"+KWh>V:5h'7qJcSl)0usV3)D%jWa;>I((3jY`Lu&T,D3m29Ag;#`H+h0G9e]^R;!O9U%rc1TV[%$/Km%R-,#@5/FjpM]^huZCr6I#qlnN*7?C!-Kb8fR'j65,1^m+8,6!9N8g'NON+Eu0Bt()[?L3j:la4lFgI6'b7f%'umO%<IllI6'Sc,W7="<Ubf?rE9O6pc+nF4gfQmSCqD9-\\/3jko>h%9,Q,o6Q$7825j?38JD=;bUFE[F!u(6A=1/1#Pg,:/ORJ70_$QU%TL&5jN3lJ^V*SI@`=eR1e/!Y#U.'l9Mie*6kX7p?<72[m.]hhV29F/E_OP`TdXO7l0hj<A4(+GkK;r*c\c%<uI@3iBQ_YDOF?!)c%>[ibu4OX?9Ys8\!Ub-#3%G24o`9+GNiK#-f(W8MmJd*J-qIU-F]s9>uQj[\?;]Rpa+Nq"-c-DTuA_mus^]o[@%/c2<GDP;/.MC/J%[&9*t4(0B9:Z!-7@:jUL?+$IU3`)*R0Y,[Wp9F\9C[Rank2=eS6GOEQXt*?24q)/-1:9#NQLQkm[U!"'4s?'8X>UgkODIbpM]F<L%ia@^MaWX$^#a-_Q1bbi'TTi(V%Qbua%!<+m=R=].JuO>L!ljjW=^be+%%g;gU+dqMl&una?q1"tUhLj:hI)8AG!NTnOEO`FX#m28%'O]Yb/$!8C&OZ775`>tM'aSjs5,ld>XirPYG!K\=%]i&=JLhHhS.]"#nK&\O$E_WU@Xs9C*VL>U$)p>5jVA1BQmh@Kas@4L\YM\Q%eM3d2=U#1CI8ee&<cCOD*&^W(,DQ/-\1$TgAg7GH4'ah)'7?tFqIL'+4UPf,Fl=((A5n4WC+#s/;M.:e*>i&5l\DdC$-mYH-^_i)%C.`lQ#=DOm9I]SVdVIQQ]6%$"Amd[(<gsT!2PqY)"Urs9*R_@a,(OpH-$MJ/A(/?4iRjkU_/*93P\"#e=i4Z#)jsob*CL?-ii2ff%SdM'F&[M&XAMo%*O:(%VFs%:>>iW^<nGpes:]]TRZ;h@"/_PguFLjEOJXQCXS@U&6;0KbuJI,Bm(ipK"),k*]M$H_X\ICsB.VL>'%+IFch13b7eGZYO#[);3o/q\23@u(mrd5WEi<[_[\F@n<0\YNl0-,TR!#??L=\-e6O:Di4L5b.-$q@P+<`$XWI!ltP;Omt)0WW@h@%$5Zi9(YAuuLU(XRR'uj'e*>>KVqm2?FHdpWbCjHE=pGYM>fB#OOQSmQj'85H[H';XY3j>I#h+m"!aOoAd0ck41u_sNKjVZSWd)iT%AMIpo+&*W]L/FhU%BqnC2q*KQ.Ubu9o?!VZ64[5Ke`BJOiq*?qf@-<1N1PZ[@dopRmG'RQI!aeI+(m&>#nlP=i?@B?)";A-RhW^!%A`BV(0nm$LIi#7(;^I(]@Q(r4hhhsj@\[92>b8L?`@6<So<]WT3<eA.W0\!eX=2*5\W/XjpE+XsbbJ,KmUarr>7@YUe;)VK7l.NP%S8"!g0NuJ[9`+b(=-Dl#UO]KNPB.o;.4?t\"3g25/sb08"J.HT\Sqn!e.LCPn@5?`Q<Yn3BL<8\)gK"m<@eop=4oS>Ae/,g#ofud%o+0c`cU?lO@dqm?fp@FSn"[I!9".[?D*Yl[EtM[.P'G9o[3uj\FpBY@$1Mc(Wgl&M'?`d50:9P?DJFNrpQ9'n3Qh_`EC?Lha&*au%.$`IE9SBAV^`=U*Wpa&:l2uGb=mRb:Z-=B51]`m'W4deGadJ<^>g@*8&WX;iaXuO3o;YIFi\_Kq=l_\%Z0^,>L_^A)4m^t4oA.\o%St9DGg"Bm^4d)5c>(Wl`>"N2f''!k@_2a^"4)*afV_&\tqhgkD%VCP&D2!2C>NNXC$E2@pe5(5>\I=V*a0`ciF/]r]&-er>m9Nnl%K0oH(Pi`aOZW,?fW0jn>P'VjkN^hH@&p[&'>f26?;lGP`SI0&M#jo(6(((mr(9`,m[3][,;,X%1CY])HOj-4(0he27a4f!q.2=$d%5i1<7RV4Ha(+pe-0#]o(>Rh<AQD;#d5uM*8Co8r,-e66[GuCb=,N$EU3@E1Y;2Y6urt"U+LU>F!4!6-;@etKRj`4<t(=NMCU]\`\%0@ctBr7gIl2[AX3$$jI'NeX6<W3=MZa$Ij!eCUo=:1OY\92b0*JL.?pECdo\fH/d<II5&hr?L[O_"@m#/Lk-di[W<`\!Mog,s(Cf%0;:;4+A;#F(o*LQB:P6u4X@8p.d"AjZ6hj0Gtk7+,XMHp%YY65-8'7t1A3:rQD;$s+<o!$*Wi>6!uYnr&;ZH[q`CUP"U<)4*Sk[P%mI)sjCr+.^g,'tG/S@h=\;YV.P*I0gr5QN#]>Stb^s3l"1KW\kVBc$V/FNt>FCt5?F?-5,EYp8uEc"ZO^V<Dg#@'$NlCBl'.g.Bt%2gl$e'X19t#3c0jIB/s;gGFceNiu\QD+Rr9QF(63?e-e;*c\SFq;mR0oI,)g^f#LuC_T?\]]gC,);`-DS84K\7N7OiN5+#^>[J17%*7tB,['BEp0\=['HX6<dP;&;3lQ\Y?-tsT51J81T.[Su(p5:M>>EDU"2Q*pk8"*l's!)pnq!OOA$,DEGjqbU'XNtO\?SJ8=$oMYB%'g),I-qs;F@:=np%3nh8CHC%DXEU4`^/8r<:Y90&]1+jemUcKAc;3[9dO[Xm#)bhSZ-PB#a`6Om>p[oa2UWanC]/Btr@ab.A[mf+%0^"0n>;G,eF1Nb:@$DF!(Bq\`B!*gGMirUX>=Y61g(DQR""6!o%%5G0&JjNVZGon0[7jX=Et;tsY9>5T7"@F1.pu&9W,$[AMcJ(C%RtMZk)YqrlJGGnak+UO`J]Yk=N.EDl[n`8)4$6o<=1Z0a&Br$;G5=a.3qT\eU^9&8)!*StD_Qo-A^F>n5_E$_l01c_L@G\)qs2&@%a!i]Z!<^5uN"k)kW$e4sWciQnnMVD`!@0Pm`!HElOCbE*/.C.+i7S]0gFeGf8G?&2j8sSj-_U6POq=7Q0i-Dj4%oWD(DOYjA8kFG%J/Li0]'ueIXHkBa"U&5L'c[i"$hO0T!aF2&?,G3r#egBU6);u"9OLp9"S/JL2;#Y$."m^;O\bb04D6i*9im##Eh^C;ZBM<2V;h?3%+P.7FN.G:jI0/I`-Il$n1*P1<-:"(Zq(4#?q5,L=8Rg$Z*D#f.&OAnM@AJMXo(@-<Z>'XU2bBtO=J2NlOuo$bbTb82"^To;+J1?M%i`"nXnhUW[V'YrZ0KI-47?k33$I^G@0$J:hKoX$;kF9m>@&nX:\QqjV%623-Q2j/=b=+`@??#3OGZDX0-\YuA;oBKZgPHbYg_P`c%P`Xj?5qsHsfpX'1Obb(R<dB6&h`fA1'1j%e=&G;3U?D];=>]NF7F]nmo[oH5h2DA!@p8#_SjG9=U-PpAEhZ0276.6%->J<V7P!i#%"DSr"`f$a!`0]IRoOsG=Ff9.cKh(O3^l$PU-;%JCQ6f+Q-'s"SCqtp\d8<5l(gVc+'#;RHnfi>3,/mt8Q^3?i,$YS;MpTRa>>OqN%?OLdk6\SEg@0ic025O_Ph4F`LXsO_AjpaVY16#2\)O(n]Aj__YTSd?p=g9/\KX<$Vea$0LHd,;ang'Os,$)arKag_?p<>1=9IQ5C%]]IRd+!B>ql<qgiJMGt%BUC8o@`PBU[0gDjIiGL9OHa7fS@n!;U%O_@V$Y_!m6\-%O8Q,gArtJ5MX:H$'McmR*FT"qX`.F4K^kKT%lLNXRqLBak%K'oPjVi^lDHYC^(khVUQkI`4mC^;d,1\qL]4+?Z\X]=N<ijGaRIt2r/Pimc;/,%GRXi$'*jKStW"[8GX1.2X]a*q5%:41fMYt#d?`q)Ra_aLOpq?=RNiE6GiMr_V,EN1sK%P6(h&uTWEQStb&9[=.Q(CP;b"lq7j0%0q5@_qKZ?LA(@ncJn-N"9uXV529K%[Do),L:.9-E]Ap*oRj9U//nh-k"9[;T`(#8b)Yr*^%h?hka[g/k2u?U`PL+#n'N$Ola2)FF*2s%DtQ13D=6<\^A\ZAIQF3\4<*r_%IuaB#ru-kd?`;l=ki)>.1-.EQHMG48[Y(Tg#AhS5^p^n&gY,pRWNGO*-Q?.M];P\>\=T63WR^];^L+Xe5.tc<>`X9I3W4FDUSh0p%^Mcnd0E.n'UYi7.DH*YQUGkDdrsKsL$5Kbp2I:6\r-s1<Fc6~>%AI9_PrivateDataEnd
%!PS-Adobe-3.1 EPSF-3.0%%Title: kaushik [Converted].eps%%Creator: Adobe Illustrator(R) 11%%AI8_CreatorVersion: 11.0.0%AI9_PrintingDataBegin%%For: Lisa Tauxe%%CreationDate: 2/17/05%%BoundingBox: 0 0 485 557%%HiResBoundingBox: 0 0 484.5000 556.5000%%CropBox: 0 0 484.5000 556.5000%%LanguageLevel: 2%%DocumentData: Clean7Bit%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)%%+ procset Adobe_CoolType_Utility_T42 (1.0 0)%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.19 0)%%+ procset Adobe_CoolType_Core (2.23 0)%%+ procset Adobe_AGM_Core (2.0 0)%%+ procset Adobe_AGM_Utils (1.0 0)%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors:  Black%%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 112 128 8%%BeginData: 10130 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFDFCFFFDC9FF7DFF7DA87D7D7DA87DA87D7DA8FFA8A8FD5F%FFA8FD04527D5252527D7D7D527D7D5252FD60FF527D527DA8A8525252A8%7DA8FD057DFD5FFFA8A8FFA8FFFD05A8FFFFFFA8A87DFD66FF7DFD6EFF7D%52FD6EFF52F8A8FD6DFF52F8A8FD6DFFA827FD6EFFA87DFD68FFA8A8FF7D%7DA8FF7DA8FF7DA8A8FD60FF52F8F827FFFF52277DA87D5252A87D52FD5F%FFA8F8F87DFFFFFF7DA8527D7D7D527D7D52A8FD5CFFA87D52A8A8FD06FF%FD04A8FFA8A8A8FD5CFFA8527DFD0BFFA8A8FD5FFF7D52A8FD0CFFA87DFD%5EFF527DFD0EFFA8A8FD5DFF527DFD0FFF5227FD5CFF7D7DFD10FFF8F8FD%5BFF7D7DFD11FF5227FD5AFFA852FD12FF7D7DFD5AFF52A8FD0DFFA8FD04%FFA87DFFA8FFA8FFA8FFFFFFA8FD4FFF7D7DFD0DFFA852A8FD047DFD0452%7D7D52A87D7DA8FD4EFFA852FD0EFFA8275227277DFF7D7D277D277D7D7D%F8527DFD4EFF52A8FD0EFFA8527DA87D7D7DA8A87D7DA87D7D52A87D527D%FFA8FFA8FD48FFA87DFD0FFFA852A8277D7D7D527D7DFD0452FD047D527D%7D5252527D52527DA8FD42FF7DA8FD0FFF7D7D52527D7D7DA87D27F85252%52A87D7D7D52FFA8A87D7DA87D27527DFD42FF52FD11FF52A87DA852A8FD%047D52A8A8FD047D527DFFA8FD047DA8A8A8FD41FF7D7DFD16FFA8FD57FF%7DA8FD16FF7D7DFD56FF52FD17FF7DA8FD55FFA87DFD17FFA87DFD55FFA8%7DFD17FF7DA8FD1CFFA8FFA8A8A8FFFFA8FFFFFD05A8FFA8FFA8FFA8FFA8%FFA8A8A8FFFFA8FD1BFF52A8FD17FFA87DFD1BFFA8277D522727277D277D%2752277D277D7DFD0627527D272727527D27FD1BFFA8FD18FF7DA8FD1CFF%525227FD0452A8527D527DFF7DFFA8277D277D27525252277DF8527D52A8%FD12FF7DA852A87DFD05A87DA87D7DA8FFA8A87D7DA87D7DFFA8FD08FFA8%7DFD1CFF7D7DA852A8FF7D52A8527D27A87DFFA8FFFF527D7D7D52FD067D%52FD12FF7D5252527D7D52A87DFD07527D52527D52A8A827527DA8FD07FF%7DA8FD4CFFA82752527D5252527D7D5252A8527D7D52527D5252527D527D%27FD08FFA87DFD15FF522727FD05A87DA8FD2BFF7DA87DA8A87D52A8FFFF%7D7D7DA8FF527D7DA8FFA87DA8FFA8FD04FFA8FD06FF7DA8FD14FFA827F8%F8A8FFA8FFFFFFA8A8FD29FF7D52522727A87D7DA8A8FF7D275252A8277D%277DFFA87DA87D7D527D527D52A8FD05FFA87DFFFD06A8FFA8A8FFA8A87D%FFA8FFA8A87DA8A8FFFFFFFD04A87DA87DA8FD28FF7D7D5252527D7D52FF%7DFF7D525252A87D7D7D27FF7DFFA85227522727A8A87DFD05FF7DA8FF7D%2752527DA85252FFA82752527DA8A85252527D52A8FD07FF7DFFA8FD0DFF%A8FFA8FD0DFFA8FD0AFFA87DA8FFA8FFA8FD04FFA827A8A8FFA8FFA8FFA8%FFFFA87DFFA8FFA8FF7DFD06FFA87DFF52A85252527D27277DA8527D2752%527D527D7DA852A8FD06FFFD04A8FD0CFFA8527D525252A8FF7D7D52A852%A8277D525252A8FD14FF277DFD17FF7DA8FD04FFA8FFA8FFA8A8FFFFFFA8%A8FFA8FFA8FFFF7D7D7DA8FD05FFA8FFA8FD0CFFA85252527D7D7DA87DF8%527D27A8A87D5252277DFD14FF27F8A8FD16FF27F8FD12FFA87DFF52F8F8%52FD04FFA8A8FFA8FD0CFF7D527D7D7D527DFFFD057DA8A8A8527D52A8FD%14FF7DF8A8FD16FF2727FD10FF7D27F8F827FF7D7D7DFD05FFA8FFA8FFFF%FFA8A8A8FD06FF7D527DA87D527D52527D7D27FF7DA87D7D52A8FD16FFA8%52FD16FF5252FD0EFFA8F8F8F852F8F8F87D52F8F852FFFFFFFD04A8FFFF%27F8F852FD05FF7D7D5252527D7D525227277D7D27277D7D52A8FD13FFFD%04A8527DFFFD13A8FF527DFD0FA8522752A85227277D52272752FD04A8FF%FD04A8525227A8A87D277D7D7D52FD04A8FF7DA87D7DFFA8A8A87DA87DFD%12FF7DA852FD047D27FD277DA87DA87DA87DA87DA87DA87D7D7DA8FFA852%7D7DA87DA8527D27F8F852A8FD23FF277DA8FD04FF7DA8FD27FFA8A8FD0B%FF7DFFA8A8FD05FF7DFFFFA8FD25FFA8F8527DFD05FF52A8FD26FF7DF8F8%27A8FD07FFA87DA8A87DFD05FF52FD28FF7DF827A8FD06FF52FD27FFA852%277D7DFD06FFA87DFFA8A8A8FFFFFFA87DFD29FF527D7DFD06FFA852FD12%FFA87DFD16FF7D527DFD04FF7DA8FFFF7DFD05FF52FD29FF7DA87DFD07FF%A852FD11FF7DA8FD18FFA8FD04FFA87DFFA8A8FD04FFA87DFD29FF52A87D%FD08FF7D52FD10FFA87DFD1DFF7DA8FFFF7DFD05FF52FD29FF7DA8A8FD09%FFA852FD0FFF7DA8FD1DFFA87DFFA8A8FD05FF7DA8FFA87DA8FFA8FF7DA8%A8A87DA8A8FF7D7DA8A87DFFA8A87DFD0CFFA8FFFFFF7DA87DFD0AFFA852%A8FD0DFFA87DFD1DFF7DA8FFFF7DFD05FF52525227A87D272752A8FD0A52%A85252A85252A8FD0BFF7DFFFFFF7D7DA8FD0CFF527DFD0CFF2727FD1DFF%A87DFFA87DFD04FFA87D527D277D5227277D7D7D5252527D7D7D277D527D%7D7D527D52A8FD0BFF527DFFFF7DA87DFD0DFF7D527DFD0AFF27F8FD1DFF%7D7DFFA87DFD05FF52FFFFFFA8FFFD05A8FFA8FFA8FFFFFFA8FFA8FFFD04%A8FD0DFFA8FFFF7D7DA8FD0EFFA87D52A8FD08FF5252FD1DFFA87DFFA8A8%FD04FFA87D7DFF7D7DA87D525252A8FD1FFF7DA87DFD10FFA852527DFD06%FF7D7DFD1DFF7DA8FFA87DFD05FF527DFF27527D2752522752FD1FFFA8A8%7DFD12FFA87D527D7DA8FD21FFA87DFF7DA8FD05FF7D527DA8A87DFF7D7D%7DA8FD1EFFA8277D7DFD15FFA8A87DFD21FF7D527D527DFD05FF52FD28FF%7DF827A8FD39FFA8A8FF7DA8FD04FFA87DFD28FFA8F87D7DFD39FF7DA87D%7DA8FD05FF52FD29FF527DA8FD1AFFA8A8FD1EFFA8A8FD07FF7DFD29FF7D%A8277D7D7D527D527D7D7D527D52FD057D527D527D7D7D527D5252277D7D%7D527D527D527D7D7D527D527D7D7D527D52FD057D527D527D7D52527D52%7D527D7D5252FFFF7D7DFFFFFFA852A8FD20FFA852FD057DA8527D7D527D%7D52A8527D7D7D52A852FD057D277D52FD057D52A852FD047DA852A87D52%7D7D52A8527D7D527DA852FD057D52A8527D7D527D7DF8F8F852A87D52A8%FD20FFA8F852275227272752275227272752275227522727275227522752%522727522752FD0527522752272727522752FD0527522752272727522752%275227272752272752FFFF7D52A8A8FF7D7D52A8FD1FFFA87DFD04FFA8FF%A8FD09FFA8FD09FF527DA8FFFFFFA8FFFFFFA8FD05FFA8FFA8FFFFFFA8FF%FFFFA8FFA8FFA8FD09FFA87DFD2AFFA87DFFA8FFFFFFA8FFA8FFA8FFA8FF%FFFFA8FFA8FFFFFFA8FFA8FFA827F8A8FFFFA8FD07FFA8FD05FFA8FFFFFF%A8FD05FFA8FFA8FFFFFFA8FFFFFFA8FF52FD2AFFA87DFD04FFA8FFA8FFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFFFFF2727FD04FFA8FFFFFFA8FD07FF%A8FD07FFA8FFFFFFA8FD09FFA87DFD2AFFA852FFA8FFA8FFA8FD09FFA8FF%A8FD08FF7D52FFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA8%FFA8FFA8FD09FFA8A87DFD2AFFA8A8FD1AFFA8A8FD0AFFA8FFA8FFA8FFA8%FFA8FFFFFFA8FFFFFFA8FD07FFA8FFFFFFA87DFD2AFFA87DFFFFFFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8%FF52FD2AFFA87DFD42FFA87DFD2AFFA852FFA8FFFFFFA8FFA8FFFFFFA8FF%A8A8A8FFA8A8A8FFA8A8A8FFFD0BA8FFFD0FA8FFFFFFA8FFA8FFA8FFA8FF%A8FFFFA852FD2AFFA87DFD08FFA8FFFFFFA8A8A8FFFD0FA8FFA8FFA8FFA8%FFA8A8A8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FD09FFA8FFA87DFD2AFFA852%FFA8FFFFFFA8FFFFFFA8FFFFA8A8A87DFD13FFA87DA8FD09FFA8FFFFFF7D%FFFFFFA8FFFFFFA8FFA8FFA8FFFFA852FD2AFFA87DFD04FFA8FD07FFA8FF%52527D7DA8FD047DFF7DA87DA87D7DA87D7D52A8FF527DA8FD047DA87DFF%7DA87D52A8A8A8FD07FFA8FD05FFA87DFD2AFFA87DFFA8FFA8FD05FFA8FF%FFA8A8527D522752525227522752275252275252277D52FFA87D7D522752%27FD06527D52FFA8FFA8FD0BFFA8FF52FD2AFFA87DFFFFA8FD07FFA8FFA8%FFA8FFA87D7DFFFFA8A8A87D7DA8FF7D7DFD04A8FFFF7D7DA87D7D527DA8%7DA87DA8A8A8FFA8A8FFA8FD05FFA8FD05FFA87DFD2AFFA852FFA8FFA8FF%FFFFA8FFA8FFFFA8A8FD1BFFA8FD09FF7DA8FFFFA8FFA8FFA8FFFFFFA8FF%FFA852FFFFFFA8FF7D7DA8A8FD0B7DFFA8A8FD13FFA87DFD0CFFA8FD0FFF%A8FD0BFFA8FD0AFFA8FFFFA8FD0BFFA87DFFFFFF7D7D5252A852A8527DA8%7D27FD047DFF27527DFD13FFA87DFFFFFFA8FFA8FFA8FFA8FFA8A8A8FD07%FFA87D5252A8A827A8FFFF5252FF7D27A8FF5227FFA87DFD08FF7DFFFFFF%A8FFFFFFA8FFA8FFA8FFFFFF52FFFFFF527D27527D527DA87D7DFD05527D%FD0452A8FD12FFA87DFD04FFA8FFFFFFA8FFFFFFA8FD08FFA87DA87DA8A8%527D7DA8A8A8FF52A852FFFF5252FF7DFD08FFA8A8FD05FFA8FD07FFA87D%FD06FFA8A8A8FFFFFFA8FFFFFFA8FFA8FFFFFFA8FD13FFA852FFA8FFFFFF%A8FFFFFFA8FFFFA8A8FD07FF52A852527D7D527DA8A8277DA87D277DFFA8%5227A87DA8FD07FF7DA8FFA8A8FFA8FFA8FFA8FFFFFFA8A852FD05FFA8FF%FFA8A8FF7D7D7DA8FFA8A8FD18FFA87DFD0CFF7DFD08FFA87DFFA8FD07FF%A8FD08FFA87DFD08FFA8A8FD0DFFA87DFD05FF7DA8FFF8A852275252527D%52A8FD18FFA87DFFA8FFA8FFA8FFFFFFA8FFFFA8A8FD1BFFA8FD09FFA8A8%A8FFA8FFA8FFFFFFA8FD04FFA87DFD05FF7D7D52527D7DFD05527D52FD18%FFA87DFD06FFA8FD05FF7DFD26FFA8A8FD09FFA8FFFFFFA87DFD06FFA8FF%FFFFA8FFA8FFFFA8A8FD19FFA87DFFFFFFA8FFA8FFA8FFA8FFA8A87DA87D%A87DA87DA8A8A87DA87DA87DA8A8A87DA87DA87DA8A8A87DA87DA87DA8A8%A87DA87DA87DA8FFA8A8FFA8FFA8FFA8FFA8FFA8FF52FD2AFFA8A8FD16FF%A8FFA8FD15FFA8FFFFFFA8FD07FFA8FD07FFA87DFD2AFFA852FFA8FFFFFF%A8FFA8FFA8FFA8FD0BFFA8FFFFFFA8FD07FFA8FFFFFFA8FFFFFFA8FD07FF%A8FFFFFFA8FFA8FFA8FFA8FFA8FFFFA852FD2AFFA87DFD1CFFA8FFA8FD07%FFA8FFA8FFFFFFA8FD07FFA8FFA8FFA8FD07FFA8FFA87DFD2AFFA852FFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA8%FFA8FD07FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8%A852FD2AFFA87DFD10FFA8FFA8FD19FFA8FD15FFA87DFD2AFFA87DFFA8FF%A8FD09FFA8FFFFFFA8FD05FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA8FF%A8FFA8FFA8FFFFFFA8FFFFFFA8FD09FFA8FFFFFF7DFD2AFFA8A8FD06FFA8%FFA8FFA8FD0BFFA8FD0FFFA8FD13FFA8FD07FFA87DFD2AFFA852FFFFFFA8%FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FD05FFA8FFA8%FD07FFA8FFA8FFA8FFA8FFA8FFFFA8A8FFA8FFA8FFA8FFA8FFFFA852FD2A%FFA87DFD12FFA8FD0FFFA8FD13FFA8FD0BFFA87DFD2AFFA87DFD05FFA8FF%FFFFA8FFA8FFA8FFA8FFFFFFA8FFA8FD0DFFA8FFFFFFA8FD07FFA8FD07FF%A8FFFFFFA8FFA8FFA8FFFFA852FD2AFFA87DFD14FFA8FD15FFA8FFA8FD16%FF7DFD2AFFA8527D527D527D527D527D527D527D527D527D527D527D527D%527D527D527D527D527D527D527D527D527D527D527D527D527D527D527D%527D527D527D527D527D527D525252FD2CFFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA8FFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FDFCFFFDFC%FFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD8FFFFF%%EndData%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 68 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 	exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/bdict{	mark}bdf/edict{	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end}def/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup () cvn eq{						pop (Process)					}if				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust	AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse	AGMUTIL_GSTATE_flt setflat	end}def/get_gstate_and_matrix{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_ctm matrix currentmatrix def	end	get_gstate}def/set_gstate_and_matrix{	set_gstate	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_ctm setmatrix	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/agm_sethalftone{ 	dup	begin		/_Data load		/Thresholds xdf	end	level3 	{ sethalftone }{		dup /HalftoneType get 3 eq {			sethalftone		} {pop} ifelse	}ifelse} def /rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		exch () /SubFileDecode filter	}	{		exch pop	}	ifelse	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/filter_indexed_devn{	cvi Names length mul names_index add Lookup exch get} bdf/filter_devn{		4 dict begin	/srcStr xdf	/dstStr xdf	dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch		[			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx			currentdict /srcStr get /readstring cvx /pop cvx			/dup cvx /length cvx 0 /gt cvx [				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx				names_index Names length currentdict /srcStr get length 1 sub {					1 /index cvx /exch cvx /get cvx					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx				} for				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx			] cvx /if cvx			/end cvx		] cvx		bind		/exec cvx	] cvx	end} bdf/AGMUTIL_imagefile nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	10 dict begin	/imageDict xdf	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def	/imbufIdx 0 def	/origDataSource imageDict /DataSource get def	/origMultipleDataSources imageDict /MultipleDataSources get def	/origDecode imageDict /Decode get def	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def	/srcDataStrs [ imageDict begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi string		} repeat		end ] def	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse	{		/imbufCnt imageDict /DataSource get length def		/imbufs imbufCnt array def		0 1 imbufCnt 1 sub {			/imbufIdx xdf			imbufs imbufIdx imbufLen string put			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put		} for		DeviceN_PS2 {			imageDict begin		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def			/MultipleDataSources false def			/Decode [0 1] def			end		} if	}{		/imbuf imbufLen string def		Indexed_DeviceN level3 not and DeviceN_NoneName or {			imageDict begin		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def			/Decode [0 1] def			end		}{			imageDict /DataSource {AGMUTIL_imagefile imbuf readstring pop} put		} ifelse	} ifelse	imageDict exch	load exec	imageDict /DataSource origDataSource put	imageDict /MultipleDataSources origMultipleDataSources put	imageDict /Decode origDecode put		end} bdf/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		2 dict begin		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {			/imbuf imbufLen string def		}if		1 1 Height { 			pop			MultipleDataSources {			 	0 1 DataSource length 1 sub {					DataSource type dup					/arraytype eq {						pop DataSource exch get exec					}{						/filetype eq {							DataSource exch get imbuf readstring pop						}{							DataSource exch get						} ifelse					} ifelse					AGMUTIL_imagefile exch writestring				} for			}{				DataSource type dup				/arraytype eq {					pop DataSource exec				}{					/filetype eq {						DataSource imbuf readstring pop					}{						DataSource					} ifelse				} ifelse				AGMUTIL_imagefile exch writestring			} ifelse		}for		end		true	}ifelse	end} bdf/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}defstatusdict /product known userdict /AGMP_current_show known not and{	/pstr statusdict /product get def	pstr (HP LaserJet 2200) eq 		pstr (HP LaserJet 4000 Series) eq or	pstr (HP LaserJet 4050 Series ) eq or	pstr (HP LaserJet 8000 Series) eq or	pstr (HP LaserJet 8100 Series) eq or	pstr (HP LaserJet 8150 Series) eq or	pstr (HP LaserJet 5000 Series) eq or	pstr (HP LaserJet 5100 Series) eq or	pstr (HP Color LaserJet 4500) eq or	pstr (HP Color LaserJet 4600) eq or	pstr (HP LaserJet 5Si) eq or	pstr (HP LaserJet 1200 Series) eq or	pstr (HP LaserJet 1300 Series) eq or	pstr (HP LaserJet 4100 Series) eq or 	{ 		userdict /AGMP_current_show /show load put		userdict /show {		  currentcolorspace 0 get		  /Pattern eq		  {false charpath f}		  {AGMP_current_show} ifelse		} put	}if	currentdict /pstr undef} if/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		1 dict begin		/flushbuffer Width cvi string def		1 1 Height cvi			{			pop			0 1 DataSource length 1 sub				{				DataSource exch get				dup type dup 				/filetype eq					{					exch flushbuffer readstring pop pop					}if				/arraytype eq					{					exec pop					}if				}for			}for		end		}		{		/DataSource load type dup 		/filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 div mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		/arraytype eq			{			1 1 Height { pop DataSource pop } for			}if		}ifelse	end}bdf/addprocs{	  2{/exec load}repeat	  3 1 roll	  [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin	 currentdict 2 index known{	 	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse		 addprocs /TransferFunction xdf 		 currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/clonearray{	dup xcheck exch	dup length array exch	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 	{	Adobe_AGM_Core/AGMCORE_tmp AGMCORE_tmp 1 add ddf 	dup type /dicttype eq		{			AGMCORE_tmp			exch			clonedict			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	dup type /arraytype eq		{			AGMCORE_tmp exch			clonearray			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	exch dup	AGMCORE_tmp 4 -1 roll put	}forall	exch {cvx} if}bdf/clonedict{	dup length dict	begin		{		dup type /dicttype eq			{				clonedict			} if		dup type /arraytype eq			{				clonearray			} if		def		}forall	currentdict	end}bdf/DeviceN_PS2{	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and} bdf/Indexed_DeviceN{	/indexed_colorspace_dict AGMCORE_gget dup null ne {		/CSD known	}{		pop false	} ifelse} bdf/DeviceN_NoneName{		/Names where {		pop		false Names		{			(None) eq or		} forall	}{		false	}ifelse} bdf/DeviceN_PS2_inRip_seps{	/AGMCORE_in_rip_sep where	{		pop dup type dup /arraytype eq exch /packedarraytype eq or		{			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and			{				/currentcolorspace exch AGMCORE_gput				false			}			{				true			}ifelse		}		{			true		} ifelse	}	{		true	} ifelse} bdf/base_colorspace_type{	dup type /arraytype eq {0 get} if} bdf/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 216 dict dup begin put/nd{	null def}bind def/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSA_cache 0 dict def/AGMCORE_CSD_cache 0 dict def/AGMCORE_pattern_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_ovp nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/AGMCORE_Default_PageSize nd/AGMCORE_currentbg nd/AGMCORE_currentucr nd/AGMCORE_gradientcache 32 dict def/AGMCORE_in_pattern false def/knockout_unitsq nd/AGMCORE_CRD_cache where{	pop}{	/AGMCORE_CRD_cache 0 dict def}ifelse/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	2 dict begin	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	end	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/npth_clp{	newpath clip} def/add_grad{	AGMCORE_gradientcache 3 1 roll put}bdf/exec_grad{	AGMCORE_gradientcache exch get exec}bdf/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/dictstackcount countdictstack def	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	dictstackcount 1 countdictstack 1 sub {end}for	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont	/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto	/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show			0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp xpt				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf	errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if	/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def	AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if	/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_currentbg currentblackgeneration def	/AGMCORE_currentucr currentundercolorremoval def	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	level2 not{		/xput{			dup load dup length exch maxlength eq{				dup dup load dup				length dup 0 eq {pop 1} if 2 mul dict copy def			}if			load begin				def 			end		}def	}{		/xput{			load 3 1 roll put		}def	}ifelse	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_tmpmatrix matrix def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 10 def		/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr xpt			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr xpt		}def		/grestoreall {			AGMCORE_&grestoreall			Adobe_AGM_Core			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core begin				/AGMCORE_gstackptr exch def				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def			end			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and	{		/AGMCORE_&sysshfill systemdict/shfill get def		/AGMCORE_&usrshfill /shfill load def		/AGMCORE_&sysmakepattern systemdict/makepattern get def		/AGMCORE_&usrmakepattern /makepattern load def	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/devicen_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	<<	/MaxPatternItem currentsystemparams /MaxPatternCache get	>>	setuserparams	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_have_reported_unsupported_color_space false def	/AGMCORE_report_unsupported_color_space	{		AGMCORE_have_reported_unsupported_color_space false eq		{			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf		} if	}def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def	/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/LeaveColorUnchanged eq					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			dup map_alias {				/Name get exch pop			} if			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor						currentgray 0 eq					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						Adobe_AGM_Core/AGMCORE_name xddf						false						Adobe_AGM_Core/AGMCORE_in_pattern known {Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse						not currentpagedevice/OverrideSeparations known and							{							currentpagedevice/OverrideSeparations get								{								/HqnSpots /ProcSet resourcestatus									{									pop pop pop true									}if								}if							}if												{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not							}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace							false							currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall							not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				dup true exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or						{pop}						{convert_spot_to_process and}ifelse					}				forall					{					true exch						{						dup (Cyan) eq exch						dup (Magenta) eq 3 -1 roll or exch						dup (Yellow) eq 3 -1 roll or exch						(Black) eq or and						}forall						not					}{pop false}ifelse				}{				false exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or					{pop}					{convert_spot_to_process or}ifelse					}				forall				}ifelse			}ifelse		}def	}ifelse		/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	AGMCORE_host_sep{		/setcolortransfer		{ 			AGMCORE_cyan_plate{				pop pop pop			}{			  	AGMCORE_magenta_plate{			  		4 3 roll pop pop pop			  	}{			  		AGMCORE_yellow_plate{			  			4 2 roll pop pop pop			  		}{			  			4 1 roll pop pop pop			  		}ifelse			  	}ifelse			}ifelse			settransfer  		}			def		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/AGMCORE_RemoveProcessColorNames			{			1 dict begin			/filtername				{				dup /Cyan eq 1 index (Cyan) eq or					{pop (_cyan_)}if				dup /Magenta eq 1 index (Magenta) eq or					{pop (_magenta_)}if				dup /Yellow eq 1 index (Yellow) eq or					{pop (_yellow_)}if				dup /Black eq 1 index (Black) eq or					{pop (_black_)}if				}def			dup type /arraytype eq				{[exch {filtername}forall]}				{filtername}ifelse			end			}def		/AGMCORE_IsSeparationAProcessColor			{			dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or			}def		level3 {			/AGMCORE_IsCurrentColor				{				gsave				false setoverprint				1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor				currentgray 0 eq 				grestore				}def			/AGMCORE_filter_functiondatasource				{					5 dict begin				/data_in xdf				data_in type /stringtype eq					{					/ncomp xdf					/comp xdf					/string_out data_in length ncomp idiv string def					0 ncomp data_in length 1 sub						{						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put						}for					string_out					}{					string /string_in xdf					/string_out 1 string def					/component xdf					[					data_in string_in /readstring cvx						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx						[/pop cvx ()]cvx /ifelse cvx					]cvx /ReusableStreamDecode filter				}ifelse				end				}def			/AGMCORE_separateShadingFunction				{				2 dict begin				/paint? xdf				/channel xdf					begin					FunctionType 0 eq						{						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def						currentdict /Decode known							{/Decode Decode channel 2 mul 2 getinterval def}if						paint? not							{/Decode [1 1]def}if						}if					FunctionType 2 eq						{						paint?							{							/C0 [C0 channel get 1 exch sub] def							/C1 [C1 channel get 1 exch sub] def							}{							/C0 [1] def							/C1 [1] def							}ifelse									}if					FunctionType 3 eq						{						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def									}if					currentdict /Range known						{/Range [0 1] def}if					currentdict					end				end				}def			/AGMCORE_separateShading				{				3 -1 roll begin				currentdict /Function known					{					currentdict /Background known						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf					/ColorSpace [/DeviceGray] def					}{					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq						{						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def						}{						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put						}ifelse					ColorSpace 0 get /Separation eq						{							{								[1 /exch cvx /sub cvx]cvx							}{								[/pop cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll put							pop						}{							{								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx							}{								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll bind put						}ifelse					ColorSpace 2 /DeviceGray put																							}ifelse				end				}def			/AGMCORE_separateShadingDict				{				dup /ColorSpace get				dup type /arraytype ne					{[exch]}if				dup 0 get /DeviceCMYK eq					{					exch begin 					currentdict					AGMCORE_cyan_plate						{0 true}if					AGMCORE_magenta_plate						{1 true}if					AGMCORE_yellow_plate						{2 true}if					AGMCORE_black_plate						{3 true}if					AGMCORE_plate_ndx 4 eq						{0 false}if							dup not currentoverprint and						{/AGMCORE_ignoreshade true def}if					AGMCORE_separateShading					currentdict					end exch					}if				dup 0 get /Separation eq					{					exch begin					ColorSpace 1 get dup /None ne exch /All ne and						{						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and							{							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 								{								/ColorSpace									[									/Separation									ColorSpace 1 get									/DeviceGray										[										ColorSpace 3 get /exec cvx										4 AGMCORE_plate_ndx sub -1 /roll cvx										4 1 /roll cvx										3 [/pop cvx]cvx /repeat cvx										1 /exch cvx /sub cvx										]cvx																		]def								}{								AGMCORE_report_unsupported_color_space								AGMCORE_black_plate not									{									currentdict 0 false AGMCORE_separateShading									}if								}ifelse							}{							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor							0 exch 							dup not currentoverprint and								{/AGMCORE_ignoreshade true def}if							AGMCORE_separateShading							}ifelse							}if								currentdict					end exch					}if				dup 0 get /DeviceN eq					{					exch begin					ColorSpace 1 get convert_to_process						{						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 							{							/ColorSpace								[								/DeviceN								ColorSpace 1 get								/DeviceGray									[									ColorSpace 3 get /exec cvx									4 AGMCORE_plate_ndx sub -1 /roll cvx									4 1 /roll cvx									3 [/pop cvx]cvx /repeat cvx									1 /exch cvx /sub cvx									]cvx																	]def							}{							AGMCORE_report_unsupported_color_space							AGMCORE_black_plate not								{								currentdict 0 false AGMCORE_separateShading								/ColorSpace [/DeviceGray] def								}if							}ifelse						}{						currentdict						false -1 ColorSpace 1 get							{							AGMCORE_IsCurrentColor								{								1 add								exch pop true exch exit								}if							1 add							}forall						exch 						dup not currentoverprint and							{/AGMCORE_ignoreshade true def}if						AGMCORE_separateShading						}ifelse					currentdict					end exch					}if				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not					{					exch begin					ColorSpace dup type /arraytype eq						{0 get}if					/DeviceGray ne						{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate not							{							ColorSpace 0 get /CIEBasedA eq								{								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def								}if							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or								{								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def								}if							ColorSpace 0 get /CIEBasedDEFG eq								{								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}]								}if							currentdict 0 false AGMCORE_separateShading							}if						}if					currentdict					end exch					}if				pop				dup /AGMCORE_ignoreshade known					{					begin					/ColorSpace [/Separation (None) /DeviceGray {}] def					currentdict end					}if				}def			/shfill				{				clonedict				AGMCORE_separateShadingDict 				dup /AGMCORE_ignoreshade known					{pop}					{AGMCORE_&sysshfill}ifelse				}def			/makepattern				{				exch				dup /PatternType get 2 eq					{					clonedict					begin					/Shading Shading AGMCORE_separateShadingDict def					currentdict end					exch AGMCORE_&sysmakepattern					}{					exch AGMCORE_&usrmakepattern					}ifelse				}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf	/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def	/map_index	{		1 index mul exch getinterval {255 div} forall	} bdf	/map_indexed_devn	{		Lookup Names length 3 -1 roll cvi map_index	} bdf	/n_color_components	{		base_colorspace_type		dup /DeviceGray eq{			pop 1		}{			/DeviceCMYK eq{				4			}{				3			}ifelse		}ifelse	}bdf	level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		/level2ScreenFreq{			begin			60			HalftoneType 1 eq{				pop Frequency			}if			HalftoneType 2 eq{				pop GrayFrequency			}if			HalftoneType 5 eq{				pop Default level2ScreenFreq			}if			 end		}def		/currentScreenFreq{			currenthalftone level2ScreenFreq		}def		level2 /setcolorspace AGMCORE_key_known not and{			/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get dup /Separation eq					{						pop						dup length array copy						dup dup 1 get						current_spot_alias						{							dup map_alias							{								begin								/sep_colorspace_dict currentdict AGMCORE_gput								pop pop	pop								[ 									/Separation Name 									CSA map_csa									dup /MappedCSA xdf 									/sep_colorspace_proc load								]								dup Name								end							}if						}if						map_reserved_ink_name 1 xpt					}{						/DeviceN eq 						{							dup length array copy							dup dup 1 get [ 								exch {									current_spot_alias{										dup map_alias{											/Name get exch pop										}if									}if									map_reserved_ink_name								} forall 							] 1 xpt						}if					}ifelse				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if			}def		}if		}{		/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/currentScreenFreq{			currentscreen pop pop		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def		/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def		/setcolor_devicecolor		{			base_colorspace_type			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def		/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse	/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/devn /setdevicencolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/devncs /setdevicencolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/f /fill ldf	/ef /eofill ldf	/@ /stroke ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall	/currentpagedevice currentpagedevice def/getrampcolor {/indx exch def0 1 NumComp 1 sub {dupSamples exch getdup type /stringtype eq { indx get } ifexchScaling exch get aload pop3 1 rollmul add} forColorSpaceFamily /Separation eq	{	sep	}	{	ColorSpaceFamily /DeviceN eq		{		devn		}		{		setcolor		}ifelse	}ifelse} bind def/sssetbackground { aload pop setcolor } bind def/RadialShade {40 dict begin/ColorSpaceFamily exch def/background exch def/ext1 exch def/ext0 exch def/BBox exch def/r2 exch def/c2y exch def/c2x exch def/r1 exch def/c1y exch def/c1x exch def/rampdict exch def/setinkoverprint where {pop /setinkoverprint{pop}def}ifgsaveBBox length 0 gt {newpathBBox 0 get BBox 1 get movetoBBox 2 get BBox 0 get sub 0 rlineto0 BBox 3 get BBox 1 get sub rlinetoBBox 2 get BBox 0 get sub neg 0 rlinetoclosepathclipnewpath} ifc1x c2x eq{c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse}{/slope c2y c1y sub c2x c1x sub div def/theta slope 1 atan defc2x c1x lt c2y c1y ge and { /theta theta 180 sub def} ifc2x c1x lt c2y c1y lt and { /theta theta 180 add def} if}ifelsegsaveclippathc1x c1y translatetheta rotate-90 rotate{ pathbbox } stopped{ 0 0 0 0 } if/yMax exch def/xMax exch def/yMin exch def/xMin exch defgrestorexMax xMin eq yMax yMin eq or{grestoreend}{/max { 2 copy gt { pop } {exch pop} ifelse } bind def/min { 2 copy lt { pop } {exch pop} ifelse } bind deframpdict begin40 dict beginbackground length 0 gt { background sssetbackground gsave clippath fill grestore } ifgsavec1x c1y translatetheta rotate-90 rotate/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def/c1y 0 def/c1x 0 def/c2x 0 defext0 {0 getrampcolorc2y r2 add r1 sub 0.0001 lt{c1x c1y r1 360 0 arcnpathbbox/aymax exch def/axmax exch def/aymin exch def/axmin exch def/bxMin xMin axmin min def/byMin yMin aymin min def/bxMax xMax axmax max def/byMax yMax aymax max defbxMin byMin movetobxMax byMin linetobxMax byMax linetobxMin byMax linetobxMin byMin linetoeofill}{c2y r1 add r2 le{c1x c1y r1 0 360 arcfill}{c2x c2y r2 0 360 arc fillr1 r2 eq{/p1x r1 neg def/p1y c1y def/p2x r1 def/p2y c1y defp1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin linetofill}{/AA r2 r1 sub c2y div def/theta AA 1 AA dup mul sub sqrt div 1 atan def/SS1 90 theta add dup sin exch cos div def/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def/p1y p1x SS1 div neg def/SS2 90 theta sub dup sin exch cos div def/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def/p2y p2x SS2 div neg defr1 r2 gt{/L1maxX p1x yMin p1y sub SS1 div add def/L2maxX p2x yMin p2y sub SS2 div add def}{/L1maxX 0 def/L2maxX 0 def}ifelsep1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add linetoL1maxX L1maxX p1x sub SS1 mul p1y add linetofill}ifelse}ifelse} ifelse} ifc1x c2x sub dup mulc1y c2y sub dup muladd 0.5 exp0 dtransformdup mul exch dup mul add 0.5 exp 72 div0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt1 index 1 index lt { exch } if pop/hires exch defhires mul/numpix exch def/numsteps NumSamples def/rampIndxInc 1 def/subsampling false defnumpix 0 ne{NumSamples numpix div 0.5 gt{/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def/rampIndxInc NumSamples 1 sub numsteps div def/subsampling true def} if} if/xInc c2x c1x sub numsteps div def/yInc c2y c1y sub numsteps div def/rInc r2 r1 sub numsteps div def/cx c1x def/cy c1y def/radius r1 defnewpathxInc 0 eq yInc 0 eq rInc 0 eq and and{0 getrampcolorcx cy radius 0 360 arcstrokeNumSamples 1 sub getrampcolorcx cy radius 72 hires div add 0 360 arc0 setlinewidthstroke}{0numsteps{dupsubsampling { round cvi } ifgetrampcolorcx cy radius 0 360 arc/cx cx xInc add def/cy cy yInc add def/radius radius rInc add defcx cy radius 360 0 arcneofillrampIndxInc add}repeatpop} ifelseext1 {c2y r2 add r1 lt{c2x c2y r2 0 360 arcfill}{c2y r1 add r2 sub 0.0001 le{c2x c2y r2 360 0 arcnpathbbox/aymax exch def/axmax exch def/aymin exch def/axmin exch def/bxMin xMin axmin min def/byMin yMin aymin min def/bxMax xMax axmax max def/byMax yMax aymax max defbxMin byMin movetobxMax byMin linetobxMax byMax linetobxMin byMax linetobxMin byMin linetoeofill}{c2x c2y r2 0 360 arc fillr1 r2 eq{/p1x r2 neg def/p1y c2y def/p2x r2 def/p2y c2y defp1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax linetofill}{/AA r2 r1 sub c2y div def/theta AA 1 AA dup mul sub sqrt div 1 atan def/SS1 90 theta add dup sin exch cos div def/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def/p1y c2y p1x SS1 div sub def/SS2 90 theta sub dup sin exch cos div def/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def/p2y c2y p2x SS2 div sub defr1 r2 lt{/L1maxX p1x yMax p1y sub SS1 div add def/L2maxX p2x yMax p2y sub SS2 div add def}{/L1maxX 0 def/L2maxX 0 def}ifelsep1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add linetoL1maxX L1maxX p1x sub SS1 mul p1y add linetofill}ifelse}ifelse} ifelse} ifgrestoregrestoreendendend} ifelse} bind def/GenStrips {40 dict begin/ColorSpaceFamily exch def/background exch def/ext1 exch def/ext0 exch def/BBox exch def/y2 exch def/x2 exch def/y1 exch def/x1 exch def/rampdict exch def/setinkoverprint where {pop /setinkoverprint{pop}def}ifgsaveBBox length 0 gt {newpathBBox 0 get BBox 1 get movetoBBox 2 get BBox 0 get sub 0 rlineto0 BBox 3 get BBox 1 get sub rlinetoBBox 2 get BBox 0 get sub neg 0 rlinetoclosepathclipnewpath} ifx1 x2 eq{y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse}{/slope y2 y1 sub x2 x1 sub div def/theta slope 1 atan defx2 x1 lt y2 y1 ge and { /theta theta 180 sub def} ifx2 x1 lt y2 y1 lt and { /theta theta 180 add def} if}ifelsegsaveclippathx1 y1 translatetheta rotate{ pathbbox } stopped{ 0 0 0 0 } if/yMax exch def/xMax exch def/yMin exch def/xMin exch defgrestorexMax xMin eq yMax yMin eq or{grestoreend}{rampdict begin20 dict beginbackground length 0 gt { background sssetbackground gsave clippath fill grestore } ifgsavex1 y1 translatetheta rotate/xStart 0 def/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def/ySpan yMax yMin sub def/numsteps NumSamples def/rampIndxInc 1 def/subsampling false defxStart 0 transformxEnd 0 transform3 -1 rollsub dup mul3 1 rollsub dup muladd 0.5 exp 72 div0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt1 index 1 index lt { exch } if popmul/numpix exch defnumpix 0 ne{NumSamples numpix div 0.5 gt{/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def/rampIndxInc NumSamples 1 sub numsteps div def/subsampling true def} if} ifext0 {0 getrampcolorxMin xStart lt{ xMin yMin xMin neg ySpan rectfill } if} if/xInc xEnd xStart sub numsteps div def/x xStart def0numsteps{dupsubsampling { round cvi } ifgetrampcolorx yMin xInc ySpan rectfill/x x xInc add deframpIndxInc add}repeatpopext1 {xMax xEnd gt{ xEnd yMin xMax xEnd sub ySpan rectfill } if} ifgrestoregrestoreendendend} ifelse} bind def}def/page_trailer{	end}def/doc_trailer{}defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA map_csa setcolorspace_opt		set_crd	end}def/setsepcolor{ 	/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/setdevicencolor{ 	/devicen_colorspace_dict AGMCORE_gget begin		Names length copy		Names length 1 sub -1 0		{			/devicen_tints AGMCORE_gget 3 1 roll xpt		} for		TintProc	end} def/sep_colorspace_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 	current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	/MappedCSA CSA map_csa def	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf	AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx							AGMCORE_host_sep{								AGMCORE_is_cmyk_sep								/Name cvx 								/AGMCORE_IsSeparationAProcessColor load /exec cvx								/not cvx /and cvx 							}{								Name inRip_spot_has_ink not							}ifelse							[		 						/pop cvx 1							] cvx /if cvx							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc /setcolor ldf						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/additive_blend{  	3 dict begin  	/numarrays xdf  	/numcolors xdf  	0 1 numcolors 1 sub  		{  		/c1 xdf  		1  		0 1 numarrays 1 sub  			{			1 exch add /index cvx  			c1 /get cvx /mul cvx  			}for 		numarrays 1 add 1 /roll cvx   		}for 	numarrays [/pop cvx] cvx /repeat cvx  	end}def/subtractive_blend{	3 dict begin	/numarrays xdf	/numcolors xdf	0 1 numcolors 1 sub		{		/c1 xdf		1 1		0 1 numarrays 1 sub			{			1 3 3 -1 roll add /index cvx  			c1 /get cvx /sub cvx /mul cvx			}for		/sub cvx		numarrays 1 add 1 /roll cvx		}for	numarrays [/pop cvx] cvx /repeat cvx	end}def/exec_tint_transform{	/TintProc [		/TintTransform cvx /setcolor cvx	] cvx bdf	MappedCSA setcolorspace_opt} bdf/devn_makecustomcolor{	2 dict begin	/names_index xdf	/Names xdf	1 1 1 1 Names names_index get findcmykcustomcolor	/devicen_tints AGMCORE_gget names_index get setcustomcolor	Names length {pop} repeat	end} bdf/setdevicencolorspace{ 	dup /AliasedColorants known {false}{true}ifelse 	current_spot_alias and {		6 dict begin		/names_index 0 def		dup /names_len exch /Names get length def		/new_names names_len array def		/new_LookupTables names_len array def		/alias_cnt 0 def		dup /Names get		{			dup map_alias {				exch pop				dup /ColorLookup known {					dup begin					new_LookupTables names_index ColorLookup put					end				}{					dup /Components known {						dup begin						new_LookupTables names_index Components put						end					}{						dup begin						new_LookupTables names_index [null null null null] put						end					} ifelse				} ifelse				new_names names_index 3 -1 roll /Name get put				/alias_cnt alias_cnt 1 add def 			}{				/name xdf								new_names names_index name put				dup /LookupTables known {					dup begin					new_LookupTables names_index LookupTables names_index get put					end				}{					dup begin					new_LookupTables names_index [null null null null] put					end				} ifelse			} ifelse			/names_index names_index 1 add def 		} forall		alias_cnt 0 gt {			/AliasedColorants true def			0 1 names_len 1 sub {				/names_index xdf				new_LookupTables names_index get 0 get null eq {					dup /Names get names_index get /name xdf					name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq					or or or not {						/AliasedColorants false def						exit					} if				} if			} for			AliasedColorants {				dup begin				/Names new_names def				/AliasedColorants true def				/LookupTables new_LookupTables def				currentdict /TTTablesIdx known not {					/TTTablesIdx -1 def				} if				currentdict /NComponents known not {					/NComponents TintMethod /Subtractive eq {4}{3}ifelse def				} if				end			} if		}if		end	} if	dup /devicen_colorspace_dict exch AGMCORE_gput	begin	/MappedCSA CSA map_csa def	currentdict /AliasedColorants known {		AliasedColorants	}{		false	} ifelse	/TintTransform load type /nulltype eq or {		/TintTransform [			0 1 Names length 1 sub				{				/TTTablesIdx TTTablesIdx 1 add def				dup LookupTables exch get dup 0 get null eq					{					1 index					Names exch get					dup (Cyan) eq						{						pop exch						LookupTables length exch sub						/index cvx						0 0 0						}						{						dup (Magenta) eq							{							pop exch							LookupTables length exch sub							/index cvx							0 /exch cvx 0 0							}							{							(Yellow) eq								{								exch								LookupTables length exch sub								/index cvx								0 0 3 -1 /roll cvx 0								}								{								exch								LookupTables length exch sub								/index cvx								0 0 0 4 -1 /roll cvx								} ifelse							} ifelse						} ifelse					5 -1 /roll cvx /astore cvx					}					{					dup length 1 sub					LookupTables length 4 -1 roll sub 1 add					/index cvx /mul cvx /round cvx /cvi cvx /get cvx					} ifelse					Names length TTTablesIdx add 1 add 1 /roll cvx				} for			Names length [/pop cvx] cvx /repeat cvx			NComponents Names length  			TintMethod /Subtractive eq  				{  				subtractive_blend  				}  				{  				additive_blend  				} ifelse		] cvx bdf	} if	AGMCORE_host_sep {		Names convert_to_process {			exec_tint_transform		}		{				currentdict /AliasedColorants known {				AliasedColorants not			}{				false			} ifelse			5 dict begin			/AvoidAliasedColorants xdf			/painted? false def			/names_index 0 def			/names_len Names length def			Names {				AvoidAliasedColorants {					/currentspotalias current_spot_alias def					false set_spot_alias				} if				AGMCORE_is_cmyk_sep {					dup (Cyan) eq AGMCORE_cyan_plate and exch					dup (Magenta) eq AGMCORE_magenta_plate and exch					dup (Yellow) eq AGMCORE_yellow_plate and exch					(Black) eq AGMCORE_black_plate and or or or {						/devicen_colorspace_dict AGMCORE_gget /TintProc [							Names names_index /devn_makecustomcolor cvx						] cvx ddf						/painted? true def					} if					painted? {exit} if				}{					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {					/devicen_colorspace_dict AGMCORE_gget /TintProc [						Names names_index /devn_makecustomcolor cvx					] cvx ddf					/painted? true def					exit					} if				} ifelse				AvoidAliasedColorants {					currentspotalias set_spot_alias				} if				/names_index names_index 1 add def			} forall			painted? {				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put			}{				/devicen_colorspace_dict AGMCORE_gget /TintProc [					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx					0 0 0 0 () /findcmykcustomcolor cvx 0 /setcustomcolor cvx				] cvx ddf			} ifelse			end		} ifelse	}	{		AGMCORE_in_rip_sep {			Names convert_to_process not		}{			level3		} ifelse		{			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt			/TintProc level3 not AGMCORE_in_rip_sep and {				[					Names /length cvx [/pop cvx] cvx /repeat cvx				] cvx bdf			}{				/setcolor ldf			} ifelse		}{			exec_tint_transform		} ifelse	} ifelse	set_crd	/AliasedColorants false def	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		currentdict /CSD known {			CSD get_csd /Names known {				CSD get_csd begin				currentdict devncs				AGMCORE_host_sep{					4 dict begin					/devnCompCnt Names length def					/NewLookup HiVal 1 add string def					0 1 HiVal {						/tableIndex xdf						Lookup dup type /stringtype eq {							devnCompCnt tableIndex map_index						}{							exec						} ifelse						setdevicencolor						currentgray						tableIndex exch						HiVal mul cvi 						NewLookup 3 1 roll put					} for					[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt					end				}{					level3					{					[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt					}{					[/Indexed MappedCSA HiVal						[						Lookup dup type /stringtype eq							{/exch cvx CSD get_csd /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}							{/exec cvx}ifelse							/TintTransform load /exec cvx						]cvx					]setcolorspace_opt					}ifelse				} ifelse				end			}{			} ifelse			set_crd		}		{			/MappedCSA CSA map_csa def			AGMCORE_host_sep level2 not and{				0 0 0 0 setcmykcolor			}{				[/Indexed MappedCSA 				level2 not has_color not and{					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{						pop [/DeviceGray]					}if					HiVal GrayLookup				}{					HiVal 					currentdict/RangeArray known{						{ 							/indexed_colorspace_dict AGMCORE_gget begin							Lookup exch 							dup HiVal gt{								pop HiVal							}if							NComponents mul NComponents getinterval {} forall							NComponents 1 sub -1 0{								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range								NComponents 1 roll							}for							end						} bind					}{						Lookup					}ifelse				}ifelse				] setcolorspace_opt				set_crd			}ifelse		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep {		/indexed_colorspace_dict AGMCORE_gget dup /CSD known {			begin			CSD get_csd begin			map_indexed_devn			devn			end			end		}{			AGMCORE_gget/Lookup get 4 3 -1 roll map_index			pop setcmykcolor		} ifelse	}{		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSD known and {			/indexed_colorspace_dict AGMCORE_gget /CSD get get_csd begin			map_indexed_devn			devn			end		}		{			setcolor		} ifelse	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave		dup clonedict begin		1 setgray		/Decode [0 1] def		/DataSource <FF> def		/MultipleDataSources false def		/BitsPerComponent 8 def		currentdict end		systemdict /image get exec		grestore		}if	consumeimagedata}def/add_csa{	Adobe_AGM_Core begin			/AGMCORE_CSA_cache xput	end}def/get_csa_by_name{	dup type dup /nametype eq exch /stringtype eq or{		Adobe_AGM_Core begin		1 dict begin		/name xdf		AGMCORE_CSA_cache		{			0 get name eq {				exit			}{				pop			} ifelse		}forall		end		end	}{		pop	} ifelse}def/map_csa{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get	}if}def/add_csd{	Adobe_AGM_Core begin		/AGMCORE_CSD_cache xput	end}def/get_csd{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get	}if}def/pattern_buf_init{	/count get 0 0 put} def/pattern_buf_next{	dup /count get dup 0 get	dup 3 1 roll	1 add 0 xpt	get				} def/cachepattern_compress{	5 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	/string_size 16000 def	/readbuffer string_size string def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	/LZWFilter 	{		exch		dup length 0 eq {			pop		}{			patarray dup length 1 sub 3 -1 roll put		} ifelse		{string_size}{0}ifelse string	} /LZWEncode filter def	{ 				ReadFilter readbuffer readstring		exch LZWFilter exch writestring		not {exit} if	} loop	LZWFilter closefile	patarray					end}def/cachepattern{	2 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	{		ReadFilter 16000 string readstring exch		patarray dup length 1 sub 3 -1 roll put		not {exit} if	} loop	patarray dup dup length 1 sub () put						end	}def/add_pattern{	Adobe_AGM_Core begin		/AGMCORE_pattern_cache xput	end}def/get_pattern{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get		dup wrap_paintproc	}if}def/wrap_paintproc{   statusdict /currentfilenameextend known{	  begin		/OldPaintProc /PaintProc load def		/PaintProc		{		  mark exch		  dup /OldPaintProc get stopped		  {closefile restore end} if		  cleartomark		}  def	  end  } {pop} ifelse} def/make_pattern{	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix			  1 index begin		BBox 0 get XStep div cvi XStep mul /xshift exch neg def		BBox 1 get YStep div cvi YStep mul /yshift exch neg def		BBox 0 get xshift add		BBox 1 get yshift add		BBox 2 get xshift add		BBox 3 get yshift add		4 array astore		/BBox exch def		[ xshift yshift /translate load null /exec load ] dup		3 /PaintProc load put cvx /PaintProc exch def		end	gsave 0 setgray	makepattern	grestore}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{	currentcolorrendering/Intent known{		currentcolorrendering/Intent get	}{		null	}ifelse	Intent ne{		false  		Intent		AGMCORE_CRD_cache {			exch pop 			begin				dup Intent eq{					currentdict setcolorrendering_opt					end 					exch pop true exch						exit				}if			end		} forall		pop		not{			systemdict /findcolorrendering known{				Intent findcolorrendering pop				/ColorRendering findresource 				dup length dict copy				setcolorrendering_opt			}if		}if	}if} def/add_crd{	AGMCORE_CRD_cache 3 1 roll put}def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict/CRD known{			AGMCORE_CRD_cache CRD get dup null ne{				setcolorrendering_opt			}{				pop			}ifelse		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse		currentcolorspace dup type /arraytype eq			{0 get}if		/DeviceRGB eq			{			currentdict/UCR known				{/UCR}{/AGMCORE_currentucr}ifelse			load setundercolorremoval			currentdict/BG known 				{/BG}{/AGMCORE_currentbg}ifelse			load setblackgeneration			}if	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cpaint_gcomp{	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/path_rez{	dup 0 ne{		AGMCORE_deviceDPI exch div 		dup 1 lt{			pop 1		}if		setflat	}{		pop	}ifelse 	}def/set_spot_alias_ary{	/AGMCORE_SpotAliasAry where{		pop pop	}{		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf		true set_spot_alias	}ifelse}def/set_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry{				dup/Name get AGMCORE_name eq{					save exch					/Adobe_AGM_Core currentdict def					/CSD get get_csd					exch restore					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias	/AGMCORE_&setcustomcolor AGMCORE_key_known not {		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput	Adobe_AGM_Core begin	/setcustomcolor	{		dup /customcolor_tint exch AGMCORE_gput		current_spot_alias{			1 index 4 get map_alias{				mark 3 1 roll				setsepcolorspace				counttomark 0 ne{					setsepcolor				}if				pop				pop			}{				AGMCORE_&setcustomcolor			}ifelse		}{			AGMCORE_&setcustomcolor		}ifelse	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		initializepage		/initializepage{}def		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if	/mysetup where {		/mysetup [1 0 0 1 0 0] put	}if	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put	level2		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if}def/driver_check_media_override{	/PrepsDict where		{pop}		{		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq			{			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and			}if			{			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix			}if		}ifelse}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defendendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.23 0%%Copyright: Copyright 1997-2003 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.23 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }ifuserdict /Adobe_CoolType_Core 60 dict dup begin put/Adobe_CoolType_Version 2.23 def/Level2?	systemdict /languagelevel known dup		{ pop systemdict /languagelevel get 2 ge }	if defLevel2? not	{	/currentglobal false def	/setglobal /pop load def	/gcheck { pop false } bind def	/currentpacking false def	/setpacking /pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpacking/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel		2 copy known not			{ 2 copy 3 dict dup /args 7 index 5 add array put put get }			{			get dup /args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch /args exch put				}				{ pop }			ifelse			}		ifelse			begin			count 2 sub 1 index lt				{ pop count 1 sub }			if			dup /argCount exch def			dup 0 gt				{				exch 1 index 2 add 1 roll				args exch 0 exch getinterval 			astore pop				}				{ pop }			ifelse			count 1 sub /restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		end	} bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{ { pop } repeat }				{ pop }			ifelse			args 0 argCount getinterval {} forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{ { end } repeat }		{ pop }	ifelse	} bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	} bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	} bind def/@ReRaise	{	cvx $error /errorname get errordict exch get exec	stop	} bind def/@Stopped	{	0 @#Stopped	} bind def/@#Stopped	{	@_SaveStackLevels	stopped		{ @_RestoreStackLevels true }		{ @_PopStackLevels false }	ifelse	} bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get /args get exch get		end	} bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup begin		mark			{				(*) { pop stop } 128 string /Category			resourceforall			}		stopped		cleartomark		currentdict eq dup			{ end }		if		not		}		{ false }	ifelse	def/CTHasResourceStatusBug	Level2?		{		mark			{ /steveamerige /Category resourcestatus }		stopped			{ cleartomark true }			{ cleartomark currentglobal not }		ifelse		}		{ false }	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec				{ cleartomark false }				{ { 3 2 roll pop true } { cleartomark false } ifelse }			ifelse			end		} bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad /ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup /CMap CTHasResourceStatusBug						{ CTResourceStatus }						{ resourcestatus }					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup /CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{ exit }								{ stop }							ifelse							}						ifelse						}						{ pop }					ifelse					}				128 string /CMap resourceforall				}			stopped				{ cleartomark }			stopped pop			setglobal			}		if		}	if	} bind def/doc_setup	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mov /moveto load def		/nfnt /newencodedfont load def		/mfnt /makefont load def		/sfnt /setfont load def		/ufnt /undefinefont load def		/chp /charpath load def		/awsh /awidthshow load def		/wsh /widthshow load def		/ash /ashow load def		/sh /show load def		end	userdict /Adobe_CoolType_Data 10 dict dup		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end put	} bind def/doc_trailer	{	currentdict Adobe_CoolType_Core eq		{ end }	if	} bind def/page_setup	{	Adobe_CoolType_Core begin	} bind def/page_trailer	{	end	} bind def/unload	{	systemdict /languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{ undef }				{ pop pop }			ifelse			}		if		}	if	} bind def/ndf	{	1 index where		{ pop pop pop }		{ dup xcheck { bind } if def }	ifelse	} def/findfont systemdict	begin	userdict		begin		/globaldict where { /globaldict get begin } if			dup where pop exch get		/globaldict where { pop end } if		end	endAdobe_CoolType_Core_Defined	{ /systemfindfont exch def }	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{ pop } ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq { 0 } { dup length } ifelse	2 index length add 1 add dict		begin		exch			{			1 index /FID eq				{ pop pop }				{ def }			ifelse			}		forall		dup null eq			{ pop }			{ { def } forall }		ifelse		currentdict		end	exch setglobal	} bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	} bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index  known			{ SharedFontDirectory 3 index get /FontReferenced known }			{ false }		ifelse		}		{		FontDirectory 3 index known			{ FontDirectory 3 index get /FontReferenced known }			{			SharedFontDirectory 3 index known				{ SharedFontDirectory 3 index get /FontReferenced known }				{ false }			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont /FontReferenced get		2 index dup type /nametype eq			{findfont}		if ne			{ pop false }		if		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{ 2 copy get 3 index 3 1 roll put }		for		pop pop pop		}		{		dup type /nametype eq		  { findfont }	  if		dup dup maxlength 2 add dict			begin			exch				{				1 index /FID ne					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type /stringtype eq { cvn } if def dup			currentdict			end		definefont def		}	ifelse	} bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type /dicttype ne			{ 0 dict }		if		currentdict /$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{ def } forall					{ def } forall					currentdict					dup /$Init known						{ dup /$Init get exec }					if					end				/$Strategy exch def				}				{ pop pop pop }			ifelse			}			{ pop pop }		ifelse		end	} bind def/scff	{	$SubstituteFont		begin		dup type /stringtype eq			{ dup length exch }			{ null }		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{ $sname }			ifelse def		end		{ findfont }	@Stopped		{		dup length 8 add string exch		1 index 0 (BadFont:) putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{ findfont }		@Stopped			{ pop /Courier findfont }		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	} bind def/isWidthsOnlyFont	{	dup /WidthsOnly known		{ pop pop true }		{		dup /FDepVector known			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }			{			dup /FDArray known				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }				{ pop }			ifelse			}		ifelse		}	ifelse	} bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 4 index def		/$doSmartSub false def		end	3 index	currentglobal false setglobal exch	/CompatibleFonts /ProcSet resourcestatus		{		pop pop		/CompatibleFonts /ProcSet findresource			begin			dup /CompatibleFont currentexception			1 index /CompatibleFont true setexception			1 index /Font resourcestatus				{				pop pop				3 2 roll setglobal				end				exch				dup findfont				/CompatibleFonts /ProcSet findresource					begin					3 1 roll exch /CompatibleFont exch setexception					end				}				{				3 2 roll setglobal				1 index exch /CompatibleFont exch setexception				end				findfont				$SubstituteFont /$substituteFound true put				}			ifelse		}		{ exch setglobal findfont }	ifelse	$SubstituteFont		begin		$substituteFound			{		 false		 (%%[Using embedded font ) print		 5 index ?str1 cvs print		 ( to avoid the font substitution problem noted earlier.]%%\n) print		 }			{			dup /FontName known				{				dup /FontName get $fontname eq				1 index /DistillerFauxFont known not and				/currentdistillerparams where					{ pop false 2 index isWidthsOnlyFont not and }				if				}				{ false }			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		exch pop exch pop exch		2 dict dup /Found 3 index put		exch findfont exch		}		{		exch exec		exch dup findfont		dup /FontType get 3 eq	  {		  exch ?str1 cvs		  dup length 1 sub		  -1 0		{			  exch dup 2 index get 42 eq			{				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop				 exit			  }			  {exch pop} ifelse		  }for		}		{		 exch pop	  } ifelse		2 dict dup /Downloaded 6 5 roll put		}	ifelse	dup /FontName 4 index put copyfont definefont pop	} bind def/?str2 256 string def/?add	{	1 index type /integertype eq		{ exch true 4 2 }		{ false 3 1 }	ifelse	roll	1 index findfont	dup /Widths known		{		Adobe_CoolType_Data /AddWidths? true put		gsave dup 1000 scalefont setfont		}	if	/Downloaded known		{		exec		exch			{			exch ?str2 cvs exch			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length			?str1 1 index 1 add 3 index putinterval			exch length 1 add 1 index add			?str1 2 index (*) putinterval			?str1 0 2 index getinterval cvn findfont 			?str1 3 index (+) putinterval			2 dict dup /FontName ?str1 0 6 index getinterval cvn put			dup /Downloaded Downloaded put end copyfont			dup /FontName get exch definefont pop pop pop			}			{			pop			}		ifelse		}		{		pop		exch			{			findfont			dup /Found get			dup length exch ?str1 cvs pop			?str1 1 index (+) putinterval			?str1 1 index 1 add 4 index ?str2 cvs putinterval			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn			1 dict exch 1 index exch /FontName exch put copyfont			dup /FontName get exch definefont pop			}			{			pop			}		ifelse		}	ifelse	Adobe_CoolType_Data /AddWidths? get		{ grestore Adobe_CoolType_Data /AddWidths? false put }	if	} bind def/?sh	{	currentfont /Downloaded known { exch } if pop	} bind def/?chp	{	currentfont /Downloaded known { pop } { false chp } ifelse	} bind def/?mv 	{	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse	} bind defsetpackinguserdict /$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{ get }			{ pop pop { pop /Courier } bind }		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams /CannotEmbedFontPolicy 2 copy known			{ get /Error eq }			{ pop pop false }		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup /WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type /stringtype eq { cvn } if def								/FontType 3 def								/FontMatrix [ .001 0 0 .001 0 0 ] def								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def								/FontBBox [ 0 0 0 0 ] def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth /y exch def /x exch def											x y setcharwidth											$SubstituteFont /$Strategy get /$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									} bind def								currentdict								end							exch setglobal							} bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup /WMode known										{ dup /WMode get }										{ 0 }									ifelse									/$WMode exch def									$fontname exch									dup /FontName known										{										dup /FontName get										dup type /stringtype eq { cvn } if										}										{ /unnamedfont }									ifelse									exch									Adobe_CoolType_Data /InVMDeepCopiedFonts get									1 index /FontName get known										{										pop										Adobe_CoolType_Data /InVMDeepCopiedFonts get										1 index get										null copyfont										}										{ $deepcopyfont }									ifelse									exch 1 index exch /FontBasedOn exch put									dup /FontName $fontname dup type /stringtype eq { cvn } if put									definefont									Adobe_CoolType_Data /InVMDeepCopiedFonts get										begin										dup /FontBasedOn get 1 index def										end									} bind def								/$Underprint									{									gsave									x abs y abs gt										{ /y 1000 def }										{ /x -1000 def 500 120 translate }									ifelse									Level2?										{										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]										setcolorspace										}										{ 0 setgray }									ifelse									10 setlinewidth									x .8 mul									[ 7 3 ]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{ .2 setcolor }											{ .8 setgray }										ifelse										fill grestore										stroke										}									forall									pop									grestore									} bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict /FontName known											{											FontName											dup type /stringtype eq { cvn } if											}											{ /unnamedfont }										ifelse										def										/FontName $fontname dup type /stringtype eq { cvn } if def										/currentdistillerparams where											{ pop }											{											/FontInfo currentdict /FontInfo known												{ FontInfo null copyfont }												{ 2 dict }											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									} bind def								end def						/$None							1 dict dup								begin								/$BuildFont {} bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type /stringtype eq { cvn } if						dup /$fontname exch def						$sname null eq							{ $str cvs dup length $slen sub $slen getinterval }							{ pop $sname }						ifelse						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont /$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{ /$match exch def exit }							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont /$dstack get								{								exch									{									1 index eq										{ pop false }										{ true }									ifelse									}									{ begin false }								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{ $match (fonts/) anchorsearch pop pop cvn }							{ /Courier }						ifelse						} bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1  [ /Ryumin-Light /HeiseiMin-W3										  /GothicBBB-Medium /HeiseiKakuGo-W5										  /HeiseiMaruGo-W4 /Jun101-Light ] def							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def							/GB1	  [ /STSong-Light /STHeiti-Regular ] def							/CNS1	 [ /MKai-Medium /MHei-Medium ] def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup /FontType get 0 eq							{							1 dict dup /FontName /copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup /FontName /copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{ $Strategies /$Type3Underprint get exec }						ifelse						} bind def					/$buildfontname						{						dup /CIDFont findresource /CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index (-) putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy (-) putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }							{ pop pop pop pop pop }						ifelse						length						$str 1 index (-) putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						} bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{ get }								{ pop pop [] }							ifelse							}							{ pop pop [] }						ifelse						false exch							{							dup /CIDFont resourcestatus								{								pop pop								save								1 index /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get }									{ false }								ifelse								exch pop								exch restore									{ pop }									{ exch pop true exit }								ifelse								}								{ pop }							ifelse							}						forall							{ $str cvs $buildfontname }							{							false (*)								{								save exch								dup /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get not }									{ true }								ifelse								exch /CIDSystemInfo get								dup /Registry get Registry eq								exch /Ordering get Ordering eq and and									{ exch restore exch pop true exit }									{ pop restore }								ifelse								}							$str /CIDFont resourceforall								{ $buildfontname }								{ $fontname $findfontByEnum }							ifelse							}						ifelse						} bind def					end				end				currentdict /$error known currentdict /languagelevel known and dup					{ pop $error /SubstituteFont known }				if				dup					{ $error }					{ Adobe_CoolType_Core }				ifelse				begin					{					/SubstituteFont					/CMap /Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{ dup $str cvs dup length $slen sub $slen getinterval cvn }									{ $sname }								ifelse								Adobe_CoolType_Data /InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{ exch pop true exit }												{ pop }											ifelse											}											{											FontDirectory 1 index known												{ exch pop true exit }												{												GlobalFontDirectory 1 index known													{ exch pop true exit }													{ pop }												ifelse												}											ifelse											}										ifelse										}									forall									}									{ pop pop false }								ifelse									{									exch pop exch pop									}									{									dup /CMap resourcestatus										{										pop pop										dup /$cmapname exch def										/CMap findresource /CIDSystemInfo get { def } forall										$findfontByROS										}										{										128 string cvs										dup (-) search											{											3 1 roll search												{												3 1 roll pop													{ dup cvi }												stopped													{ pop pop pop pop pop $findfontByEnum }													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup /CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup /$cmapname exch def															/CMap findresource /CIDSystemInfo get { def } forall															$findfontByROS															true exit															}															{ pop }														ifelse														}													for													dup type /booleantype eq														{ pop }														{ pop pop pop $findfontByEnum }													ifelse													}												ifelse												}												{ pop pop pop $findfontByEnum }											ifelse											}											{ pop pop $findfontByEnum }										ifelse										}									ifelse									}								ifelse								}								{ //SubstituteFont exec }							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{ $findfontByEnum }								{ //SubstituteFont exec }							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core /scfindfont /systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup /FontName known								{ dup /FontName get dup 3 index ne }								{ /noname true }							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def /$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{ 1 index /FID eq { pop pop } { def } ifelse }										forall										currentdict										end									definefont									dup /FontName known { dup /FontName get } { null } ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using ) print										dup /FontName known											{ dup /FontName get } { (unspecified font) }										ifelse										$str cvs print (.\n) print										}									if									}									{ exch pop }								ifelse								}								{ exch pop }							ifelse							end						} bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core /findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type /stringtype ne { $str cvs } if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{ dup $inVMIndex $AddInVMFont }						if						$doSmartSub							{							currentdict /$Strategy known								{ $Strategy /$BuildFont get exec }							if							}						if						}					if					end				} bind put			}		if		}	if	end/$AddInVMFont	{	exch /FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data /InVMFontsByCMap get exch		$DictAdd		}		{ pop pop pop }	ifelse	} bind def/$DictAdd	{	2 copy known not		{ 2 copy 4 index length dict put }	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get { forall } def				2 copy currentdict put				end			}			{ pop }		ifelse		}	if	get		begin			{ def }		forall		end	} bind defendend%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.%%Version: 1.19 0systemdict /languagelevel known dup	{ currentglobal false setglobal }	{ false }ifelseexchuserdict /Adobe_CoolType_Utility 2 copy known	{ 2 copy get dup maxlength 25 add dict copy }	{ 25 dict }ifelse putAdobe_CoolType_Utility	begin	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch /eCCRun known not			ct_Level2? and or defct_Level2?	{ globaldict begin currentglobal true setglobal }if	/ct_AddStdCIDMap		ct_Level2?			{ {			((Hex) 57 StartData			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec			} }			{ {			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec			} }		ifelse bind defuserdict /cid_extensions knowndup { cid_extensions /cid_UpdateDB known and } if	 {	 cid_extensions	 begin	 /cid_GetCIDSystemInfo		 {		 1 index type /stringtype eq			 { exch cvn exch }		 if		 cid_extensions			 begin			 dup load 2 index known				 {				 2 copy				 cid_GetStatusInfo				 dup null ne					 {					 1 index load					 3 index get					 dup null eq						  { pop pop cid_UpdateDB }						  {						  exch						  1 index /Created get eq							  { exch pop exch pop }							  { pop cid_UpdateDB }						  ifelse						  }					 ifelse					 }					 { pop cid_UpdateDB }				 ifelse				 }				 { cid_UpdateDB }			 ifelse			 end		 } bind def	 end	 }ifct_Level2?	{ end setglobal }if	/ct_UseNativeCapability?  systemdict /composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring () def		/usewidths? true def		end def	ct_Level2? { setglobal } { pop } ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict /languagelevel known				{ pop /CIDFont findresource /GlyphDirectory get }				{				1 index /CIDFont findresource /GlyphDirectory				get dup type /dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			} def		/+			{			systemdict /languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{ 1 dict begin }			ifelse			/$ exch def			systemdict /languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			? { $ begin } if			} def		/? { $ type /dicttype eq } def		/| {			userdict /Adobe_CoolType_Data known				{			Adobe_CoolType_Data /AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					  begin						AddWidths?								{								Adobe_CoolType_Data /CC 3 index put								? { def } { $ 3 1 roll put } ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont /Widths get exch CC exch put								}								{ ? { def } { $ 3 1 roll put } ifelse }							ifelse					end				end				}				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse				}				{ ? { def } { $ 3 1 roll put } ifelse }			ifelse			} def		/!			{			? { end } if			systemdict /languagelevel known				{ gvm setglobal }			if			end			} def		/: { string currentfile exch readstring pop } executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx [.001 0 0 .001 0 0] def		/ct_1000Mtx [1000 0 0 1000 0 0] def		/ct_raise {exch cvx exch errordict exch get exec stop} bind def		/ct_reraise			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print					errordict exch get exec stop			} bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			} bind def		/ct_GetInterval			{			Adobe_CoolType_Utility /ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{ dup string /dst_string exch def }				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex  get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string  dst_index 2 index putinterval						length dst_index add /dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string  dst_index 2 index putinterval						pop dup dst_index add /dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							  { arrayIndex get }							  {							  pop							  exit							  }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			} bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{ /unknowninstancename /Category resourcestatus }			stopped				{ cleartomark setglobal true }				{ cleartomark currentglobal not exch setglobal }			ifelse				{					{					mark 3 1 roll /Category findresource						begin						ct_Vars /vm currentglobal put						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec							{ cleartomark false }							{ { 3 2 roll pop true } { cleartomark false } ifelse }						ifelse						ct_Vars /vm get setglobal						end					}				}				{ { resourcestatus } }			ifelse bind def			/CIDFont /Category ct_resourcestatus				{ pop pop }				{				currentglobal  true setglobal				/Generic /Category findresource				dup length dict copy				dup /InstanceType /dicttype put				/CIDFont exch /Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit /ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				  /Registry (Adobe) def				  /Ordering (Identity) def				  /Supplement 0 def				end def				/CMapName /Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000> <FFFF>				endcodespacerange				1 begincidrange				<0000> <FFFF> 0				endcidrange				endcmap				CMapName currentdict /CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont  10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{ pop pop /defineresource /undefined ct_raise }				ifelse				} bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{ get 3 1 roll pop pop}						{ pop pop /findresource /undefinedresource ct_raise }					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/ct_resourcestatus /resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup (Binary) eq						{						pop						null						currentfile						ct_Level2?							{								{ cid_BYTE_COUNT () /SubFileDecode filter }							stopped								{ pop pop pop }							if							}						if						/readstring load						exit						}					if					dup (Hex) eq						{						pop						currentfile						ct_Level2?							{								{ null exch /ASCIIHexDecode filter /readstring }							stopped								{ pop exch pop (>) exch /readhexstring }							if							}							{ (>) exch /readhexstring }						ifelse						load						exit						}					if					/StartData /typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch /GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop /readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				} bind def			/StartData				{				mark					{					currentdict					dup /FDArray get 0 get /FontMatrix get					0 get 0.001 eq						{						dup /CDevProc known not							{							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known								{ get }								{								pop pop								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }								}							ifelse							def							}						if						}						{						 /CDevProc							 {							 pop pop pop pop pop							 0							 1 cid_temp /cid_CIDFONT get							 /FDArray get 0 get							 /FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							 } def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup /cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup /SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup /SubrMapOffset undef										dup /SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{ pop }								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict /CIDFont defineresource pop					end end					}				stopped					{ cleartomark /StartData ct_reraise }				if				} bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit /ProcSet ct_resourcestatus				{ true }				{ /CIDInitC /ProcSet ct_resourcestatus }			ifelse				{				pop pop				/CIDInit /ProcSet findresource				ct_UseNativeCapability?					{ pop null }					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }				ifelse				}				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }			ifelse			ct_Vars exch /ct_oldCIDInit exch put			} bind def		/ct_restoreCIDInit			{			ct_Vars /ct_oldCIDInit get dup null ne				{ /CIDInit exch /ProcSet defineresource pop }				{ pop }			ifelse			} bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility /ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{ pop 0 }						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{ get }								{ pop pop nullstring }							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{ 0 FDBytes ct_cvnsi }									{ pop 0 }								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{ /charstring nullstring def exit }								if								/cid 0 def								}							ifelse							}						loop			} def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			} def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont /Widths get cid					2 copy known						{ get exch pop aload pop }						{ pop pop stringwidth }					ifelse					}					{ stringwidth }				ifelse				setcharwidth				0 0 moveto				}			ifelse			} def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{ get }				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup /FontMatrix 2 copy known						{ get }						{ pop pop ct_defaultFontMtx }					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont /Widths get def					/CharStrings 1 dict dup /.notdef						<d841272cf18f54fc13> dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup /CharStrings get 1 index /Encoding get			ct_dfCharCode get charstring put			rootfont /WMode 2 copy known				{ get }				{ pop pop 0 }			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ ct_str1 show }			ifelse			} def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ ct_1000Mtx matrix concatmatrix concat }				{ pop }			ifelse			/Private get			Adobe_CoolType_Utility /ct_Level2? get not				{				ct_dfDict /Private				3 -1 roll					{ put }				1183615869 internaldict /superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility /ct_Level2? get				{ 1 index }				{ 3 index /Private get mark 6 1 roll }			ifelse			dup /RunInt known				{ /RunInt get }				{ pop /CCRun }			ifelse			get exec			Adobe_CoolType_Utility /ct_Level2? get not				{ cleartomark }			if			} bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility /ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{ stop }			if			end			end			end			end			} bind def		/BaseFontNameStr (BF00) def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/BuildChar /ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString /ct_Type3ShowCharString load def				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup /lenIV 4 put def				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def				/PaintType 0 def				/ct_ShowCharString /ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{ exit }				if				}			for			exch pop exch pop			} bind def		/ct_makeocf			{			15 dict				begin				exch /WMode exch def				exch /FontName exch def				/FontType 0 def				/FMapType 2 def			dup /FontMatrix known				{ dup /FontMatrix get /FontMatrix exch def }				{ /FontMatrix matrix def }			ifelse				/bfCount 1 index /CIDCount get 256 idiv 1 add					dup 256 gt { pop 256} if def				/Encoding					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for					bfCount 1 255 { 2 copy bfCount put pop } for					def				/FDepVector bfCount dup 256 lt { 1 add } if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont /FontBBox known						{ CIDFont /FontBBox get /FontBBox exch def }					if					CIDFont /CDevProc known						{ CIDFont /CDevProc get /CDevProc exch def }					if					currentdict					end				BaseFontNameStr 3 (0) putinterval				0 1 bfCount dup 256 eq { 1 sub } if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup /CIDFirstByte exch 256 mul def						FontType 3 eq							{ /ct_FDDict 2 dict def }						if						currentdict						end					1 index  16					BaseFontNameStr  2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont /Widths get						begin						exch /CIDFont get /GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{ exch pop }			ifelse			} bind def		/ct_ComposeFont			{			ct_UseNativeCapability?				{				2 index /CMap ct_resourcestatus					{ pop pop exch pop }					{					/CIDInit /ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch /WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry (Adobe) def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-) search									{									pop pop									(-) search										{										dup length string copy										exch pop exch pop										}										{ pop (Identity)}									ifelse									}									{ pop  (Identity)  }								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000> <FFFF>							endcodespacerange							1 begincidrange							<0000> <FFFF> 0							endcidrange							endcmap							CMapName currentdict /CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index /CMap ct_resourcestatus					{ pop pop }					{					/CIDInit /ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry (Adobe) def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-) search							{							pop pop							(-) search								{ dup length string copy exch pop exch pop }								{ pop (Identity) }							ifelse							}							{ pop (Identity) }						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000> <FFFF>					endcodespacerange					1 begincidrange					<0000> <FFFF> 0					endcidrange					endcmap					CMapName currentdict /CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		currentdict readonly pop		end	end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.%%Version: 1.0 0userdict /ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{  version  cvi  2015  ge} bind def/AllocGlyphStorage{  Is2015?  {			pop  }   { 		{string} forall  } ifelse} bind def/Type42DictBegin{	25 dict begin  /FontName exch def  /CharStrings 256 dict 	begin		  /.notdef 0 def		  currentdict 	end def  /Encoding exch def  /PaintType 0 def  /FontType 42 def  /FontMatrix [1 0 0 1 0 0] def  4 array  astore cvx /FontBBox exch def  /sfnts} bind def/Type42DictEnd  {	 currentdict dup /FontName get exch definefont end	ct_T42Dict exch	dup /FontName get exch put} bind def/RD {string currentfile exch readstring pop} executeonly def/PrepFor2015{	Is2015?	{		  		 /GlyphDirectory 		 16		 dict def		 sfnts 0 get		 dup		 2 index		 (glyx)		 putinterval		 2 index  		 (locx)		 putinterval		 pop		 pop	}	{		 pop		 pop	} ifelse			} bind def/AddT42Char{	Is2015?	{		/GlyphDirectory get 		begin		def		end		pop		pop	}	{		/sfnts get		4 index		get		3 index	  2 index		putinterval		pop		pop		pop		pop	} ifelse} bind defend%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 75 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd/AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/AGMIMG_maskSource nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/devnimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/devnimg /devn_imageormask ldf	/idximg /indexed_imageormask ldf	/_ctype 7 def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				use_mask {					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse				}{					AGMIMG_&image				}ifelse			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		cleartomark restore	end}def/overprint_plate{	currentoverprint {		0 get dup type /nametype eq {			dup /DeviceGray eq{				pop AGMCORE_black_plate not			}{				/DeviceCMYK eq{					AGMCORE_is_cmyk_sep not				}if			}ifelse		}{			false exch			{				 AGMOHS_sepink eq or			} forall			not		} ifelse	}{		pop false	}ifelse}def/process_mask_L3{	dup begin	/ImageType 1 def	end	4 dict begin		/DataDict exch def		/ImageType 3 def		/InterleaveType 3 def		/MaskDict 9 dict begin			/ImageType 1 def			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def			/ImageMatrix [Width 0 0 Height neg 0 Height] def			/NComponents 1 def			/BitsPerComponent 1 def			/Decode [0 1] def			/DataSource AGMIMG_maskSource def		currentdict end def	currentdict end}def/use_mask{	dup type /dicttype eq	{		dup /Mask known	{			dup /Mask get {				level3				{true}				{					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse					3 -1 roll and				} ifelse			}			{false} ifelse		}		{false} ifelse	}	{false} ifelse}def/make_line_source{	begin	MultipleDataSources {		[		Decode length 2 div cvi {Width string} repeat		]	}{		Width Decode length 2 div mul cvi string	}ifelse	end}def/datasource_to_str{	exch dup type	dup /filetype eq {		pop exch readstring	}{		/arraytype eq {			exec exch copy		}{			pop		}ifelse	}ifelse	pop}def/masked_image_simulation{	3 dict begin	dup make_line_source /line_source xdf	/mask_source AGMIMG_maskSource /LZWDecode filter def	dup /Width get 8 div ceiling cvi string /mask_str xdf	begin	gsave	0 1 translate 1 -1 Height div scale	1 1 Height {		pop		gsave		MultipleDataSources {			0 1 DataSource length 1 sub {				dup DataSource exch get				exch line_source exch get				datasource_to_str			} for		}{			DataSource line_source datasource_to_str		} ifelse		<<			/PatternType 1			/PaintProc [				/pop cvx				<<					/ImageType 1					/Width Width					/Height 1					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix					/MultipleDataSources MultipleDataSources					/DataSource line_source					/BitsPerComponent BitsPerComponent					/Decode Decode				>>				/image cvx			] cvx			/BBox [0 0 Width 1]			/XStep Width			/YStep 1			/PaintType 1			/TilingType 2		>>		matrix makepattern set_pattern		<<			/ImageType 1			/Width Width			/Height 1			/ImageMatrix Width 1 matrix scale			/MultipleDataSources false			/DataSource mask_source mask_str readstring pop			/BitsPerComponent 1			/Decode [0 1]		>>		imagemask		grestore		0 1 translate	} for	grestore	end	end}def/imageormask{	begin		SkipImageProc {			currentdict consumeimagedata		}		{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq DeviceN_PS2 not and {					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					use_mask {						level3 {process_mask_L3 image}{masked_image_simulation}ifelse					}{						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 						{							Names convert_to_process not {								2 dict begin								/imageDict xdf								/names_index 0 def								gsave								imageDict write_image_file {									Names {										dup (None) ne {											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace											Operator imageDict read_image_file											names_index 0 eq {true setoverprint} if											/names_index names_index 1 add def										}{											pop										} ifelse									} forall									close_image_file								} if								grestore								end							}{								Operator /imagemask eq {									imagemask								}{									image								} ifelse							} ifelse						}{							Operator /imagemask eq {								imagemask							}{								image							} ifelse						} ifelse					}ifelse				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					/Adobe_AGM_OnHost_Seps where {						pop imagemask					}{						currentgray 1 ne{							currentdict imageormask_sys						}{							currentoverprint not{								1 AGMCORE_&setgray								currentdict imageormask_sys							}{								currentdict ignoreimagedata							}ifelse				 								}ifelse					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								AGMCORE_is_cmyk_sep{									MultipleDataSources{										/DataSource [											DataSource 0 get /exec cvx											DataSource 1 get /exec cvx											DataSource 2 get /exec cvx											DataSource 3 get /exec cvx											/AGMCORE_get_ink_data cvx										] cvx def									}{										/DataSource 										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 										/DataSource load										filter_cmyk 0 () /SubFileDecode filter def									}ifelse									/Decode [ Decode 0 get Decode 1 get ] def									/MultipleDataSources false def									/NComponents 1 def									/Operator /image def									invert_image_samples						 			1 AGMCORE_&setgray									currentdict imageormask_sys								}{									currentoverprint not Operator/imagemask eq and{  			 							1 AGMCORE_&setgray  			 							currentdict imageormask_sys  			 						}{  			 							currentdict ignoreimagedata  			 						}ifelse								}ifelse							}{									MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not Operator/imagemask ne and{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								use_mask {									level3 {process_mask_L3 image}{masked_image_simulation}ifelse								}{									image								}ifelse							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentcolorspace overprint_plate not{									knockout_unitsq								}if							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}ifelse	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	/MappedCSA CSA map_csa def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentdict/ImageMatrix get concat						knockout_unitsq					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{	 								[ /Separation Name [/DeviceGray]	 								{ 	 									sep_colorspace_proc AGMCORE_get_ink_data										1 exch sub	 								} bind									] AGMCORE_&setcolorspace									/sep_tint AGMCORE_gget AGMCORE_&setcolor 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{ 							currentoverprint not Name (All) eq or Operator/imagemask eq and{								currentdict imageormask_sys 								}{								currentoverprint not									{ 									gsave  									knockout_unitsq 									grestore									}if								currentdict consumeimagedata 		 					}ifelse 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}ifelse	end	end}def/decode_image_sample{	4 1 roll exch dup 5 1 roll	sub 2 4 -1 roll exp 1 sub div mul add} bdf/colorSpaceElemCnt{	currentcolorspace 0 get dup /DeviceCMYK eq {		pop 4	}	{		/DeviceRGB eq {			pop 3		}{			1		} ifelse	} ifelse} bdf/devn_sep_datasource{	1 dict begin	/dataSource xdf	[		0 1 dataSource length 1 sub {			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx		} for	] cvx bind	end} bdf		/devn_alt_datasource{	11 dict begin	/srcDataStrs xdf	/dstDataStr xdf	/convProc xdf	/origcolorSpaceElemCnt xdf	/origMultipleDataSources xdf	/origBitsPerComponent xdf	/origDecode xdf	/origDataSource xdf	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def	/samplesNeedDecoding		0 0 1 origDecode length 1 sub {			origDecode exch get add		} for		origDecode length 2 div div		dup 1 eq {			/decodeDivisor 2 origBitsPerComponent exp 1 sub def		} if		2 origBitsPerComponent exp 1 sub ne	def	[		0 1 dsCnt 1 sub [			currentdict /origMultipleDataSources get {				dup currentdict /origDataSource get exch get dup type			}{				currentdict /origDataSource get dup type			} ifelse			dup /filetype eq {				pop currentdict /srcDataStrs get 3 -1 /roll cvx /get cvx /readstring cvx /pop cvx			}{				/stringtype ne {					/exec cvx				} if				currentdict /srcDataStrs get /exch cvx 3 -1 /roll cvx /xpt cvx			} ifelse		] cvx /for cvx		currentdict /srcDataStrs get 0 /get cvx /length cvx 0 /ne cvx [			0 1 Width 1 sub [				Adobe_AGM_Utils /AGMUTIL_ndx /xddf cvx				currentdict /origMultipleDataSources get {					0 1 dsCnt 1 sub [						Adobe_AGM_Utils /AGMUTIL_ndx1 /xddf cvx						currentdict /srcDataStrs get /AGMUTIL_ndx1 /load cvx /get cvx /AGMUTIL_ndx /load cvx /get cvx						samplesNeedDecoding {							currentdict /decodeDivisor known {								currentdict /decodeDivisor get /div cvx							}{								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvxs								BitsPerComponent /decode_image_sample load /exec cvx							} ifelse						} if					] cvx /for cvx				}{					Adobe_AGM_Utils /AGMUTIL_ndx1 0 /ddf cvx					currentdict /srcDataStrs get 0 /get cvx /AGMUTIL_ndx /load cvx							currentdict /origDecode get length 2 idiv dup 3 1 /roll cvx /mul cvx /exch cvx /getinterval cvx 					[						samplesNeedDecoding {							currentdict /decodeDivisor known {								currentdict /decodeDivisor get /div cvx							}{								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvx								BitsPerComponent /decode_image_sample load /exec cvx								Adobe_AGM_Utils /AGMUTIL_ndx1 /AGMUTIL_ndx1 /load cvx 1 /add cvx /ddf cvx							} ifelse						} if					] cvx /forall cvx				} ifelse				currentdict /convProc get /exec cvx				currentdict /origcolorSpaceElemCnt get 1 sub -1 0 [					currentdict /dstDataStr get 3 1 /roll cvx /AGMUTIL_ndx /load cvx currentdict /origcolorSpaceElemCnt get /mul cvx /add cvx /exch cvx					currentdict /convProc get /filter_indexed_devn load ne {						255 /mul cvx /cvi cvx 					} if					/put cvx 				] cvx /for cvx			] cvx /for cvx			currentdict /dstDataStr get		] cvx /if cvx	] cvx bind	end} bdf/devn_imageormask{ 	/devicen_colorspace_dict AGMCORE_gget begin	/MappedCSA CSA map_csa def	2 dict begin	dup dup	/dstDataStr exch /Width get colorSpaceElemCnt mul string def	/srcDataStrs [ 3 -1 roll begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi string		} repeat		end ] def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_producing_seps not {			level3 not {				Operator /imagemask ne {					/DataSource [						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 						dstDataStr srcDataStrs devn_alt_datasource /exec cvx						] cvx 0 () /SubFileDecode filter def					/MultipleDataSources false def					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				} if			}if			currentdict imageormask 		}{			AGMCORE_host_sep{				Names convert_to_process {					CSA map_csa 0 get /DeviceCMYK eq {						/DataSource							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 							[							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 							dstDataStr srcDataStrs devn_alt_datasource /exec cvx							] cvx						filter_cmyk 0 () /SubFileDecode filter def						/MultipleDataSources false def						/Decode [1 0] def						/DeviceGray setcolorspace			 			currentdict imageormask_sys 					}{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate {							/DataSource [								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse								CSA map_csa 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get								dstDataStr srcDataStrs devn_alt_datasource /exec cvx								] cvx 0 () /SubFileDecode filter def							/MultipleDataSources false def							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				 			currentdict imageormask_sys				 		}						{	 						gsave 	 						knockout_unitsq	 						grestore							currentdict consumeimagedata 						} ifelse 					} ifelse				}				{						/devicen_colorspace_dict AGMCORE_gget /names_index known {	 					Operator/imagemask ne{	 						MultipleDataSources {		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def								/MultipleDataSources false def	 						}{								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def	 						} ifelse							invert_image_samples	 					} if			 			currentdict imageormask_sys	 				}{	 					currentoverprint not Operator/imagemask eq and{							currentdict imageormask_sys 							}{							currentoverprint not								{	 							gsave 	 							knockout_unitsq	 							grestore								}if							currentdict consumeimagedata 			 			}ifelse	 				}ifelse	 			}ifelse 			}{				currentdict imageormask			}ifelse		}ifelse		cleartomark restore	}ifelse	end	end	end}def/imageormask_l2_overprint{	currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 						currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace				AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 						mark exch						dup	dup dup						AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse			imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark  		currentdict 		AGMCORE_host_sep{			Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {					/CSA get map_csa				}{					/CSD get get_csd /Names get				} ifelse				overprint_plate not{					knockout_unitsq				}if			}{				Indexed_DeviceN {					/devicen_colorspace_dict AGMCORE_gget /names_index known {			 			indexed_image_lev2_sep					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					} ifelse				}{		 			AGMCORE_is_cmyk_sep{						Operator /imagemask eq{							imageormask_sys						}{							level2{								indexed_image_lev2_sep							}{								indexed_image_lev1_sep							}ifelse						}ifelse					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					}ifelse				}ifelse			}ifelse 		}{			level2{				Indexed_DeviceN {					/indexed_colorspace_dict AGMCORE_gget begin					CSD get_csd begin				}{					/indexed_colorspace_dict AGMCORE_gget begin					CSA map_csa 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]						setcolorspace					} if					end				} ifelse				imageormask				Indexed_DeviceN {					end					end				} if			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin		Indexed_DeviceN not {			currentcolorspace 			dup 1 /DeviceGray put			dup 3			currentcolorspace 2 get 1 add string			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub			{			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put			}for 			put	setcolorspace		} if		currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			use_mask {				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse			}{				AGMIMG_&image			}ifelse		}ifelse	end end}def  /OPIimage  {  	dup type /dicttype ne{  		10 dict begin  			/DataSource xdf  			/ImageMatrix xdf  			/BitsPerComponent xdf  			/Height xdf  			/Width xdf  			/ImageType 1 def  			/Decode [0 1 def]  			currentdict  		end  	}if  	dup begin  		/NComponents 1 cdndf  		/MultipleDataSources false cdndf  		/SkipImageProc {false} cdndf  		/HostSepColorImage false cdndf  		/Decode [  				0   				currentcolorspace 0 get /Indexed eq{  					2 BitsPerComponent exp 1 sub  				}{  					1  				}ifelse  		] cdndf  		/Operator /image cdndf  	end  	/sep_colorspace_dict AGMCORE_gget null eq{  		imageormask  	}{  		gsave  		dup begin invert_image_samples end  		sep_imageormask  		grestore  	}ifelse  }def/cachemask_level2{	3 dict begin	/LZWEncode filter /WriteFilter xdf	/readBuffer 256 string def	/ReadFilter		currentfile		0 (%EndMask) /SubFileDecode filter		/ASCII85Decode filter		/RunLengthDecode filter	def	{		ReadFilter readBuffer readstring exch		WriteFilter exch writestring		not {exit} if	}loop	WriteFilter closefile	end}def/cachemask_level3{	currentfile	<<		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]		/Intent 1	>>	/ReusableStreamDecode filter}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		bdict			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		edict		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		dup 4 get map_alias{			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}def/snap_to_device{	6 dict begin	matrix currentmatrix	dup 0 get 0 eq 1 index 3 get 0 eq and	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop	{		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def		0 0 transform		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def		1 1 transform		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def					[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat	}{	}ifelse	end} deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse					Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 						currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{					MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop				Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 				{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{				MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResourcecurrentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetupAdobe_AGM_Utils begin2 2010 Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get execcurrentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: (kaushik [Converted].eps) 1%%EndPageComments%%BeginPageSetup/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?><x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 3.0-29, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>

 <rdf:Description rdf:about=''
  xmlns:pdf='http://ns.adobe.com/pdf/1.3/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:tiff='http://ns.adobe.com/tiff/1.0/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:xap='http://ns.adobe.com/xap/1.0/'
  xmlns:xapGImg='http://ns.adobe.com/xap/1.0/g/img/'>
  <xap:CreateDate>2005-02-18T07:03:43Z</xap:CreateDate>
  <xap:ModifyDate>2005-02-18T07:03:43Z</xap:ModifyDate>
  <xap:CreatorTool>Illustrator</xap:CreatorTool>
  <xap:Thumbnails>
   <rdf:Alt>
    <rdf:li rdf:parseType='Resource'>
     <xapGImg:format>JPEG</xapGImg:format>
     <xapGImg:width>224</xapGImg:width>
     <xapGImg:height>256</xapGImg:height>
     <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADgAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWFa9+&#xA;bPlrRLnV7e9huxJpEggLCNFiuJ/qsV40ME0jpFzWC4VyJGTbkRUKxCqWXH53abDb21yvl7U7m2uo&#xA;DcxXFtPo08JQXKWZ/exai0ZpPKimjGld+jUVRA/OLTZYb+4s9B1W8ttOsW1GeeL6gqmKOV4JlUS3&#xA;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&#xA;D7gqpvwE8yrwjdVVkYlSiXEtVFRy5EtUUqg9tziqs7xoh4O3pFmLSCTkxkDj92nLl13WgO3QeyrH&#xA;/wAqf/Jb+XK7f6DD/wARxVleKuxV2KuxV2KuxV2KuxV2KoTVQTpd4BuTBJQf7A4q888lfmP5BtfJ&#xA;vl20uNds4r600q2jLSutYpVgRHjdQUOx6r7eIxVOT+aX5fCWWZPMdgjVWoMkZDooJFGFGFeXfofb&#xA;FVq/mn+XUd1Aket2CosYSSQSKQFo1EQ1FACu+38v0Kr0/NX8viqO/mayDNJy4iRXAUggL9lCNt99&#xA;we9MVcPzP/LX4EfzFZzD1WdXMsYKNuf2Qm3UV7961xVb/wArQ8gtJy/xLp6zJGFEwdCrEkF6LXmv&#xA;2enKm474qsf81Py7Vrcpren8yzOzCVWVA7jnTdPibnWvhy+RVVW/NX8vmErnzNZIOaiMCRXoFI34&#xA;8Q3xd9ztuDirpPzP/LUiVX8xWcySuvJPVjHDoAVICnagNakjt0xVqT80Py/eRAfMmnhk9RklEkZC&#xA;saqoKsS1QrdQd6Hp0xVSuPzU/L1YSy63p8k5k5ArIpHJEpzZSy70SiivWm/fFVeT81Py9d5v+dls&#xA;kjVOK8ZVY8iKluJTqO1CQfDFWn/NL8t6SO/mKymDRhXg5xhWG9aBhXev2S2KrZ/zN/Lp0WA+YdPe&#xA;HkKBpEbiqqKBw5bnVh1FD09zircn5p/l2PVaXX7CcKknHhIokKua+mN6fs9ajtirUP5q+QTHBGfM&#xA;VhEQx9ThKqgKhoFUEOCDt3Bpvt0xVePzS/LklSfNFn8ErEfGgrWvwmq9N/tCnz8VUR+VQI/Lfy5U&#xA;EE2EJodtitRirK8VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;Vf/Z</xapGImg:image>
    </rdf:li>
   </rdf:Alt>
  </xap:Thumbnails>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:dc='http://purl.org/dc/elements/1.1/'>
  <dc:format>application/postscript</dc:format>
 </rdf:Description>

</rdf:RDF>
</x:xmpmeta>
xpacket end='w'?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -556.5 translate[1 0 0 1 0 0 ]  concat% page clipgsavenewpathgsave % PSGState0 0 mo0 556.5 li484.5 556.5 li484.5 0 liclp[1 0 0 1 0 0 ] concat2 lw0 lc1 lj10 ml[] 0 dshtrue sadj52.5 231 mo52.5 312 li349.5 312 li349.5 231 li52.5 231 licpfalse sop/0 [/DeviceCMYK] add_csa0 0 0 1 cmyk@52.5 319.5 mo52.5 468 li349.5 468 li349.5 319.5 li52.5 319.5 ligsave % PSGStategsave nclp0 0 mo0 72.0001 li72 72.0001 li72 0 li0 0 li/1 [/DeviceGray] add_csa1 gryf0.3 lw0 lj4 ml5.75001 61.2501 mo3 59.2501 li0 gry@4.25001 5.00001 mo2 3.25 li@73.25 65.0001 mo70 64.2501 li@72 53.2501 mo69.5 51.5001 li@74.75 48 mo71.75 48 li@71.5 40.5 mo68.75 42.25 li@73.75 32.25 mo71.75 30.75 li@71.25 20.25 mo68.5 22.5 li@73.25 9.25 mo69 10 li@63.5 11 mo61.25 9.25 li@71.75 27 mo68.75 27 li@58 54.5001 mo56.106 57.324 li@28 56.0001 mo26.346 58.564 li@43.0411 60.4441 mo44.8941 63.1251 li@67.9641 -0.848001 mo69.078 2.112 li@63.1261 -0.984 mo62.5 2.29201 li@57 24 mo55.106 26.824 li@48.6541 52.436 mo47 55.0001 li@47.9121 -1.838 mo48.0261 1.159 li@40.5411 1.69401 mo42.3941 4.37501 li@32.2121 -0.242 mo30.789 1.813 li@50.3151 31.2111 mo52.668 33.874 li@15.945 -0.375 mo17.27 1.57601 li@9.24701 1.13001 mo10.1581 5.348 li@4.88601 -1.70701 mo3.223 0.608001 li@27.041 1.95601 mo27.155 4.954 li@7.25001 66.7501 mo10.75 65.2501 li@4.5 51.2501 mo4.75001 54.5001 li@8 28.25 mo9.5 24.5 li@5.25001 33.75 mo7.5 37.5 li@29.2501 67.5001 mo27 65.0001 li@33.5 67.5001 mo36.7501 64.7501 li@50.2501 67.5001 mo53.5 65.5001 li@52.5 61.5001 mo50.5 58.2501 li@59.5 62.7501 mo64.5 65.0001 li@67 59.2501 mo64.5 57.5001 li@18.75 67.2501 mo18.75 64.2501 li@15.75 62.2501 mo12.5 61.7501 li@20 57.7501 mo20.5 54.5001 li@21 62.2501 mo24.5 63.0001 li@9.25 50.5001 mo12 52.5001 li@7.5 8 mo7.75001 12 li@7.25001 16.25 mo9.5 18.75 li@21.25 6.25001 mo18.75 9.75 li@29.7501 43.5 mo27.2501 41.75 li@57.7501 38.25 mo55 39.75 li@26.75 32 mo23 32.75 li@31.5 22.5 mo29.5 21 li@29 10.5 mo26.25 12.75 li@32.2501 6.25001 mo30.2501 7.50001 li@29.5 17.25 mo26.5 17.25 li@39.7501 53.0001 mo37.2501 51.2501 li@42.5 47.75 mo39.5 47.75 li@39.2501 40.25 mo36.5 42 li@38.5 29.5 mo37.7501 27 li@39 20 mo36.2501 22.25 li@39.5 12 mo37.5 13.25 li@62.9731 27.483 mo59.9731 27.483 li@22.25 29 mo24.75 27.25 li@27 51.5001 mo30 51.5001 li@14.75 37.25 mo17.25 35.5 li@12 32 mo15 32 li@15.25 24.5 mo18 26.25 li@47.2501 39 mo49.6341 40.561 li@47.5871 46.5291 mo49.9711 44.708 li@54.7221 50.5161 mo54.5 47.5 li@45.3351 6.438 mo48.3841 6.31101 li@46.3371 12.2791 mo48.7211 10.458 li@53.4721 16.266 mo54.5951 13.206 li@48.2501 28.5 mo45.7501 26.75 li@48 21 mo44.7501 22 li@57 5.50001 mo54.2501 7.25001 li@64.5 31 mo61.75 32.75 li@62.25 20 mo60.25 18.5 li@19.5851 42.438 mo22.634 42.311 li@20.587 48.2791 mo22.971 46.458 li@57.7501 43.5 mo60.4711 42.958 li@15 16.25 mo15.5 13 li@17 18.25 mo20.5 19 li@32.7501 59.2501 mo36.7501 58.5001 li@33.4731 38.4831 mo33.9731 34.9831 li@64.5 49.0001 mo62 50.2501 li@10 58.5001 mo13.25 55.7501 li@4.75001 42.5 mo2.25 40.75 li@15.75 48 mo13.75 46.5 li@41.2911 67.1941 mo43.1441 69.8751 li@64.5411 36.944 mo66.3941 39.625 li@33.7911 45.694 mo34.5 48.5 li@20.291 13.194 mo21 16 li@31.7501 29.25 mo29.7501 27.75 li@1.25 65.0001 mo-2 64.2501 li@0 53.2501 mo-2.5 51.5001 li@2.75 48 mo-0.25 48 li@1.75 32.25 mo-0.25 30.75 li@1.25 9.25 mo-3 10 li@67.9641 71.1521 mo69.078 74.1121 li@63.1261 71.0161 mo62.5 74.2921 li@47.9121 70.1621 mo48.0261 73.1591 li@32.2121 71.7581 mo30.789 73.8131 li@15.945 71.6251 mo17.27 73.5761 li@4.88601 70.293 mo3.223 72.6081 li@5.25001 20 mo1.5 20.75 li@68.3671 14.659 mo66.4731 17.483 li@23.9731 35.9831 mo24.655 38.7721 li@44.7501 35 mo42.7501 33.5 li@55.4731 69.983 mo57.4731 72.983 li@55.4731 -2.01701 mo57.4731 0.983 li@grestore/227754236.115757100 bdict/PaintType 1/PatternType 1/TilingType 2/BBox [0 0 72 72.0001 ] /XStep 72 /YStep 72.0001 /PaintProc { begin save	Adobe_AGM_Core/AGMCORE_in_pattern true put0 0 mo0 72.0001 li72 72.0001 li72 0 li0 0 lifalse sop1 gryf0.3 lw0 lc0 lj4 ml[] 0 dshtrue sadj5.75001 61.2501 mo3 59.2501 li0 gry@4.25001 5.00001 mo2 3.25 li@73.25 65.0001 mo70 64.2501 li@72 53.2501 mo69.5 51.5001 li@74.75 48 mo71.75 48 li@71.5 40.5 mo68.75 42.25 li@73.75 32.25 mo71.75 30.75 li@71.25 20.25 mo68.5 22.5 li@73.25 9.25 mo69 10 li@63.5 11 mo61.25 9.25 li@71.75 27 mo68.75 27 li@58 54.5001 mo56.106 57.324 li@28 56.0001 mo26.346 58.564 li@43.0411 60.4441 mo44.8941 63.1251 li@67.9641 -0.848001 mo69.078 2.112 li@63.1261 -0.984 mo62.5 2.29201 li@57 24 mo55.106 26.824 li@48.6541 52.436 mo47 55.0001 li@47.9121 -1.838 mo48.0261 1.159 li@40.5411 1.69401 mo42.3941 4.37501 li@32.2121 -0.242 mo30.789 1.813 li@50.3151 31.2111 mo52.668 33.874 li@15.945 -0.375 mo17.27 1.57601 li@9.24701 1.13001 mo10.1581 5.348 li@4.88601 -1.70701 mo3.223 0.608001 li@27.041 1.95601 mo27.155 4.954 li@7.25001 66.7501 mo10.75 65.2501 li@4.5 51.2501 mo4.75001 54.5001 li@8 28.25 mo9.5 24.5 li@5.25001 33.75 mo7.5 37.5 li@29.2501 67.5001 mo27 65.0001 li@33.5 67.5001 mo36.7501 64.7501 li@50.2501 67.5001 mo53.5 65.5001 li@52.5 61.5001 mo50.5 58.2501 li@59.5 62.7501 mo64.5 65.0001 li@67 59.2501 mo64.5 57.5001 li@18.75 67.2501 mo18.75 64.2501 li@15.75 62.2501 mo12.5 61.7501 li@20 57.7501 mo20.5 54.5001 li@21 62.2501 mo24.5 63.0001 li@9.25 50.5001 mo12 52.5001 li@7.5 8 mo7.75001 12 li@7.25001 16.25 mo9.5 18.75 li@21.25 6.25001 mo18.75 9.75 li@29.7501 43.5 mo27.2501 41.75 li@57.7501 38.25 mo55 39.75 li@26.75 32 mo23 32.75 li@31.5 22.5 mo29.5 21 li@29 10.5 mo26.25 12.75 li@32.2501 6.25001 mo30.2501 7.50001 li@29.5 17.25 mo26.5 17.25 li@39.7501 53.0001 mo37.2501 51.2501 li@42.5 47.75 mo39.5 47.75 li@39.2501 40.25 mo36.5 42 li@38.5 29.5 mo37.7501 27 li@39 20 mo36.2501 22.25 li@39.5 12 mo37.5 13.25 li@62.9731 27.483 mo59.9731 27.483 li@22.25 29 mo24.75 27.25 li@27 51.5001 mo30 51.5001 li@14.75 37.25 mo17.25 35.5 li@12 32 mo15 32 li@15.25 24.5 mo18 26.25 li@47.2501 39 mo49.6341 40.561 li@47.5871 46.5291 mo49.9711 44.708 li@54.7221 50.5161 mo54.5 47.5 li@45.3351 6.438 mo48.3841 6.31101 li@46.3371 12.2791 mo48.7211 10.458 li@53.4721 16.266 mo54.5951 13.206 li@48.2501 28.5 mo45.7501 26.75 li@48 21 mo44.7501 22 li@57 5.50001 mo54.2501 7.25001 li@64.5 31 mo61.75 32.75 li@62.25 20 mo60.25 18.5 li@19.5851 42.438 mo22.634 42.311 li@20.587 48.2791 mo22.971 46.458 li@57.7501 43.5 mo60.4711 42.958 li@15 16.25 mo15.5 13 li@17 18.25 mo20.5 19 li@32.7501 59.2501 mo36.7501 58.5001 li@33.4731 38.4831 mo33.9731 34.9831 li@64.5 49.0001 mo62 50.2501 li@10 58.5001 mo13.25 55.7501 li@4.75001 42.5 mo2.25 40.75 li@15.75 48 mo13.75 46.5 li@41.2911 67.1941 mo43.1441 69.8751 li@64.5411 36.944 mo66.3941 39.625 li@33.7911 45.694 mo34.5 48.5 li@20.291 13.194 mo21 16 li@31.7501 29.25 mo29.7501 27.75 li@1.25 65.0001 mo-2 64.2501 li@0 53.2501 mo-2.5 51.5001 li@2.75 48 mo-0.25 48 li@1.75 32.25 mo-0.25 30.75 li@1.25 9.25 mo-3 10 li@67.9641 71.1521 mo69.078 74.1121 li@63.1261 71.0161 mo62.5 74.2921 li@47.9121 70.1621 mo48.0261 73.1591 li@32.2121 71.7581 mo30.789 73.8131 li@15.945 71.6251 mo17.27 73.5761 li@4.88601 70.293 mo3.223 72.6081 li@5.25001 20 mo1.5 20.75 li@68.3671 14.659 mo66.4731 17.483 li@23.9731 35.9831 mo24.655 38.7721 li@44.7501 35 mo42.7501 33.5 li@55.4731 69.983 mo57.4731 72.983 li@55.4731 -2.01701 mo57.4731 0.983 li@	Adobe_AGM_Core/AGMCORE_in_pattern false putrestore end }edictadd_pattern/227754236.115757100 get_patterngrestore % PSGState[1 0 0 -1 -64.5 694.5 ] make_pattern set_patternf2 vmreclaim52.5 319.5 mo52.5 468 li349.5 468 li349.5 319.5 li52.5 319.5 licp0 0 0 1 cmyk@52.5 312 mo52.5 318.75 li349.5 318.75 li349.5 312 li52.5 312 ligsave % PSGStategsave nclp0.6 lw1 lc4 ml23.9999 2.40001 mo14.6522 0.0630002 7.125 4.09811 0 9.5407 cv0 0 0 1 cmyk@36 2.40001 mo21.3478 -1.263 11.168 10.7276 0 19.259 cv@47.9999 2.40001 mo28.3464 -2.5134 16.7386 20.7332 0 26.0214 cv@0 26.4 mo23.9999 32.4 36 -3.6 59.9998 2.40001 cv@12 26.4 mo31.6534 31.3134 43.2612 8.0667 59.9998 2.7786 cv@23.9999 26.4 mo38.652 30.063 48.8318 18.0722 59.9998 9.5407 cv@36 26.4 mo45.3476 28.7369 52.875 24.7018 59.9998 19.259 cv@47.9999 26.4 mo52.3464 27.4865 56.2978 27.1908 59.9998 26.0214 cv@12 2.40001 mo7.6535 1.3134 3.7019 1.6091 0 2.7786 cv@grestore/213961016.214392236 bdict/PaintType 1/PatternType 1/TilingType 2/BBox [0 0 59.9998 28.7999 ] /XStep 59.9998 /YStep 28.7999 /PaintProc { begin save	Adobe_AGM_Core/AGMCORE_in_pattern true put0.6 lw1 lc1 lj4 ml[] 0 dshtrue sadj23.9999 2.40001 mo14.6522 0.0630002 7.125 4.09811 0 9.5407 cvfalse sop0 0 0 1 cmyk@36 2.40001 mo21.3478 -1.263 11.168 10.7276 0 19.259 cv@47.9999 2.40001 mo28.3464 -2.5134 16.7386 20.7332 0 26.0214 cv@0 26.4 mo23.9999 32.4 36 -3.6 59.9998 2.40001 cv@12 26.4 mo31.6534 31.3134 43.2612 8.0667 59.9998 2.7786 cv@23.9999 26.4 mo38.652 30.063 48.8318 18.0722 59.9998 9.5407 cv@36 26.4 mo45.3476 28.7369 52.875 24.7018 59.9998 19.259 cv@47.9999 26.4 mo52.3464 27.4865 56.2978 27.1908 59.9998 26.0214 cv@12 2.40001 mo7.6535 1.3134 3.7019 1.6091 0 2.7786 cv@	Adobe_AGM_Core/AGMCORE_in_pattern false putrestore end }edictadd_pattern/213961016.214392236 get_patterngrestore % PSGState[1 0 0 -1 -64.5 694.5 ] make_pattern set_patternf2 vmreclaim52.5 312 mo52.5 318.75 li349.5 318.75 li349.5 312 li52.5 312 licp0 0 0 1 cmyk@gsave % PSGState120.75 248.948 mo120.75 231.698 li250.903 231.698 li250.903 248.948 li120.75 248.948 liclp%ADOBeginSubsetFont: ComicSansMS Initial%ADOt1write: (1.0.21)%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /ComicSansMS def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 68 /D putdup 69 /E putdup 70 /F putdup 73 /I putdup 79 /O putdup 80 /P putdup 82 /R putdup 83 /S putdup 84 /T putdef/FontBBox {-69 -292 1187 1102} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings11 dict dup begin/.notdef <1C60D8A8C9B7A73DB6F0B6FAFA7BF3C28FD0A21D0FB70854A4518CFB8D731A1977C1C08A> |-/space <1C60D8A8C9B84186EC> |-/D <1C60D8A8C9B6079F6CB7E532E9AD798E1A9E0E9D7042D09A7BE48F45147E8A93793F66954E6B8860A43BD585E271E7F03DF5D6C9950D5A044D1FE3254F4EAD6D0257E1F7146FDFA5A3D2A9A61D3334BF45C9B76ED37AA7790CA2367DC42210F7B8AB7BE54697E148355064439150DAAFCAE012FD6A53460284F1817ACDA3BA1D6FE529F583F3DBE567DEFBD6B4F46E74C8B3983FEEE97D9D20161BB1B829D78C7A812DCE9E582CC4E03359DF24245D1A751E847C0CB9A4A968631656593E9133F2157B422B2BC9FC4D97AC> |-/E <1C60D8A8C9B66482B35C34836F0E20BF616040B5436119F91C04A4FFF5928BF58F0C4C7700F085A7A99B7E4AB95D4ACBC471077FA66A9920CF93E9E8B294BF2BA82B4644830E155D21219D4BC7463429B5AC18C39C3AFC8B34640E91D75CD879D617E93EB4ECCBCCFA7E7DBA4AC0D3B3FE1C92681EA5F2AFA04A26FF98D3C2DA3613626D7F9EA9477B5C4BEBB05D104817C8A6FB7298DC7E454AA36F51C94470BAF25DA450E79249D4E1000BED8DE4FC399F6ABAF7C22180F3C650C847B0D1D0C334DC3DA9557C838F1033123A9256A0ECC10CDB90CB3C1395B36FBD696FE5A815B009423A56618570F514642B5B536F239B2B69B839B6454303298864410E01422F330CEFEBD9CF005E8373A6A20653AB17E07B4681DC4045E7792133FA39140E> |-/F <1C60D8A8C9B7DCE04D2071478B6F115AF694A8E536C9750EE96F1EB1769FB684668369EFA5B1D09D4F570FBFD701825A7B75DC8C63B3680F3ECFB1E5294A1A3E4B7B1E2FC676A9CB63D58515EDA8E5E6471BA237CAD509174D630C1402138B7971F7128AF2BA5F2742CB0339EF6366A73B719EBCD52DFDCA2D07E9D2E8A33236081B68EFAE70F9C4B9AE440645D2887AEE759F9333ADFB00EC22058C0D4FFF4FF26E4A22FF8A10E428C0F3FA8056990D492079D50B3F840690D8B536D32669887490817E061AC91C56218343D74C4C38DD13A74091CF8B9DC2A5FE1CDBAAFF91ED9D3DAC> |-/I <1C60D8A8C9B799EBD279262C5ABE91CEC2BBD701A188D7C6823FD27FCD2F51B76B7224F8CBE317C7C332084E1F3DBC4A711D1ADF20C7FDE6114505B093E3B642EAF66C4AABFA3FF012FCA9496C1C38B03AB52B6EEAC8C4D7EE94EB8D3602AD9E60C7F45913845D3C417960F3D5F510E09B3EA2AEABD28CA67AB6BD2F1CDF5E0496BB9BA4DD0C764C5D3DB39A134A5E9A4D5617BDB2986358995EDD5131440B1C73BBE9358581D5818F1E654C5952952C32B7FE0AF4922D718878A2ADF4D4FBE7021C0EC3E51586D7490EFA85F2B392FD53DB76FAA8C37544BB395B47769E5D2CC634C1995EC7676339E442D8C17EDB> |-/O <1C60D8A8C9B6D31C06F41A86D5D9300BD7D02F822E86717F4D0B97BB6311DC2CE492A9C52BC1F5FE35479DB8E17A87808209C4624B985EEC3016348440F6486941F1266806F498860565679C5F246F66B0113BD70C71995C473A489D624E210ABCD4FA6434AADAA76367A265B888793300F9060400F8B261C1857545D1A56BA8C48F0A03070E4CBABC> |-/P <1C60D8A8C9B7B202A52865A9F3C88AF95BF7A4F54D680DD7C54822E5BEADA7225F1A1670EB558A170B9E3BA429D4E5C1ADD94CB40C9A15E7A8CCC05E92EA8B0358D5B8430B67FFDFA5F8F742D1081767B654F7EE148ECF84C987C9CA0747CCC899F01600CC34C28344A10C25EBF2F7876BF30D9E25BE938EAB4F41CAF28134848ACEC42218985D0F14D0A3FBFD5555B69192CCF3A02303B11B4686510CE8D8DC6FAE96D370BB0CF07E19B63533C65CA624DEAF822D7CAA14306D7136600E> |-/R <1C60D8A8C9B6699559421F03C3156FD8EA055B7CF36CC63867CEA507552DF000ADFFCCCA7355E525CDBEFF5F068702678190F4222B5C045B197B40B8D83593DA62427C27612B6B2AB09C4F9431042321EE893508AAAEAC5AA0233062887B12C86642E439498A4427C8B6E96402244A9DEB714EA21F1D08D940B3335D0A7759335582DCC87570AC1D46EBC5230DCC3C83F1FA484A290F72531475555A949024CA26AA01460EEFCA5617972EA8FA135B14B899313477DAE4FE3AF85806B96CC76A4776DE79BD94945AE8CF2CB5E13E2BA79EE4EBEA7CB5E9E682BB5F0B24F34F6DF78858E108A53FBD8DAA29F6E723A59B2D2DB122E030DE6B7B25643C43E78E254E3DD4> |-/S <1C60D8A8C9B628237790AD4658CF43512B88CF6291C92AD3157833D0727158E115F788930744DCCE13B9EF38BDC27C8E014E078FBB056AA6D9CB016D19E883D19CDF8033D08D547D5D80A3FE9C39FDEE411A7B35FC8AE765E13D02BE7ACBC307F7F32787CBDEE9ABCF006D4619D0C247F6E0B41E16A4C1C4214C84D3C939A30D93EF290EA5C62DA90EBBDE04C58DBD56852AA46650C7E91B27CD37CE3C1E878BCB595B818969A34C673C0F2C078B01E2D0F4D3CA28C1783BA1C4C7245DBADB7E8BA3EA428618A3547EC5E16465D68D17> |-/T <1C60D8A8C9B65DE77A876B2DD8B7FF866491B0F2D61BEA0FBD85AF0D4DE2D949BC150F0F7674372C84451FC040683FB3AA2D326E4537FF474119E83C0987CB5A9ABA0CEE9BCA528F62C1464F5E091F2B82819B07C10C1F1E4E020756FBAC175FEE62F21BE88ABFB0D490716E46C7B7A99793906C4D305D2AF07DDE68078E0E2DC8EB3EE1D506AF796125FCF0E84AE3858A8FA7A22B380BA92E9CC4237A14C737568566385E4CC4D53E33434D25323EAE78F81E4933605E741D0F8ABE8D521FF5FB90669DFD0664D78B93FFDF6561CEE8110A3B3ADAD33CCF470BBB1B9EE08647EF4772037B> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont/OODOBA+ComicSansMS /ComicSansMS findfont def/OODOBA+ComicSansMS*1 [32{/.notdef}repeat /space 35{/.notdef}repeat /D /E /F 2{/.notdef}repeat /I 5{/.notdef}repeat /O /P /.notdef /R /S /T 171{/.notdef}repeat] OODOBA+ComicSansMS nfntOODOBA+ComicSansMS*1  [13.5 0 -0 -13.5 0 0 ]mfnt sfnt337.625 83.5015 mov(DEPOSIT FEEDERS) shOODOBA+ComicSansMS*1  [13.5 0 -0 -13.5 0 0 ]mfnt sfnt337.625 83.5015 mov(DEPOSIT FEEDERS) false chp0 lj4 ml@grestore % PSGStategsave % PSGState168 302.948 mo168 285.698 li216.761 285.698 li216.761 302.948 li168 302.948 liclp%ADOBeginSubsetFont: ComicSansMS AddGlyphs%ADOt1write: (1.0.21)%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.systemdict beginOODOBA+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/C <1C60D8A8C9B7C054165765BAAF0C92CCBE2C6ADFDFC36958D81859F00796D344CC054E333538ED46E12E7F5688AFCF3135F7BCF04A6B81068C72B36BF7E3914834347D57ED2E2D044D0BCFFC5B59F76B5C38341A800AA9211C98073803A5DC16425F7A27A5DB2025E06EF163670F55818C9860E39CE252532EFC51C2C7AAEA1AC0A03F3A9AB8FDAF9C04A014034CBE8449C94C8B8BD9D90AD14C972CEE5EF16F02C7A2122CEBDBE881C9E97730465657789925229B337B911F77129D0B7B7E9920> |-systemdict /gcheck known {setglobal} if end {end} ifendOODOBA+ComicSansMS /Encoding getdup 67 /C putpop%ADOEndSubsetFont/OODOBA+ComicSansMS*1 [32{/.notdef}repeat /space 34{/.notdef}repeat /C /D /E /F 2{/.notdef}repeat /I 5{/.notdef}repeat /O /P /.notdef /R /S /T 171{/.notdef}repeat] OODOBA+ComicSansMS nfntOODOBA+ComicSansMS*1  [13.5 0 -0 -13.5 0 0 ]mfnt sfnt381.875 30.5015 mov(FECES) shgrestore % PSGState62.1304 204.16 mo76.7681 249.293 114.537 283.076 161.017 292.61 cv@61.8511 203.295 mo71.6656 219.041 li63.1016 221.807 li61.8511 203.295 lif143.799 73.9605 mo100.031 90.3736 69.149 129.926 63.8414 176.368 cv@144.615 73.6553 mo129.334 84.1788 li126.179 75.7496 li144.615 73.6553 lif%ADOBeginSubsetFont: ComicSansMS AddGlyphs%ADOt1write: (1.0.21)%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.systemdict beginOODOBA+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/percent <1C60D8A8C9B6A93EE34D30BB17B878B3C91C72DFC82AE025B0924D0530A0B952636DE9BE83EAD8D99ACDFB6E0E4C29BA3FC30C7F470D450B1FAFF7F22C514F6CAEAFD2E6E1506F2B4010263A1176A13A63AEEF3248D26B5D30946ACFE145E352D157E51218C69921FCC83957C99B475BD27757114DA5328731750349DC0986D046960C09FCFA3502F712F79C44676C8CE2F91B0E5C76CEE87F50398747DE222667CEC68629224160179EB593C95800BA482AC2C35DC5F519D11089DB8D76FDF2A7D703B9FF2AFBD77F47712163A07FBED625435BE814F580901D837317C1DAC1BC101777DE024D82AFD26F5C78D0352259CE8773BB6816C7C1BB719D36A61F11B74023C8348D10CF5B528A975FC669511AF769F8FD71C1887A5EDF0AC68546705016706DC25528F36C3E6B0E07BF4F01B24F7AE35BC068D61F85FA924149DAA8E95C8A73BF1726E97C57A86CCCBDD9EFDEFD308AE881564D87DA3F5F3A9F86E23C4F45452A66F79E462ACC1A2B41EA6C4EB477> |-/parenleft <1C60D8A8C9B72DDD4BDDDEFA1F2E33EFAB2609E3C9DE388E20E9C059C4F1BE51DE95F72A2C12C7492DCC98E0E6966BF3C6ECA33D6154D0170812D5FDFD86FCB61BC83579E6C82B47DC2EF7EFEC0791C5D64493C14198901FA2252477E06D36F6FBD8470D6ECFD0F8931D63CA891EC08EE802E9833B5640A882BF6370D5475D687E5637A4> |-/parenright <1C60D8A8C9B72DDD4BB51EC6C49AB7306C1A14C493E9BA5D78AE2C195B29D94044F912FEED39F75BE34A7150607FEA016A23803EFDD2F9288AF7A180AEFCBFBF998E3FBDAC6F3A4074B0F5D69EFDE59096176B6B29149A14AB78FC2B3577A37D471DCCDE635BBEA2665A37EE893BAA312D5DB22CA01C4916AB9D79F1B336301D84554794> |-/hyphen <1C60D8A8C9B71A7335DED7128A2BEC26C4F799019A87FCF9EF4AFAADE4B5E99E37751436BCE6B1DBD30F2BB03235CD0D7C430BFB986809660F0F2A> |-/period <1C60D8A8C9B873D04176F39500737A58796A799ADAB2F011EB6B5082CCAD878260DE39AC958F27A9CCD72274D2585DDB51967C7CE61906AC0AD40C9D3B0A49FEC45F14EBB22E> |-/slash <1C60D8A8C9B7BB5CAA6C4651B4301707BFED427647F0D4D7919F12225500DEE27358A7B1E02CA4F458CAE83F77FE9C20B1E694E7EC69B2AB3550D5FFABB8305C6AEE03FB9B1CDEDF09FBF571B0F668A5CBAEFF29D85E64068F41B8816123FA45F63829790B090819AB8C> |-/zero <1C60D8A8C9B7D98F6DA0BC0D56993DFD731859E73082C2D7636333544D763DC27197575AA0521EF215B0E83E609598D159BBB4BC56CDE2CDE3149C3DB2DB921DD2B021218A530AC8F4FD6B7D0FBB9FC522AE09EAE356903AFB4F0709B48EB18E9FA0317579E49D7B062061DF3902491F8FAAFB0B6154A16F4A168AFC4E808A4715BB30BACE27> |-/five <1C60D8A8C9B7D98F6D54D48ED68EA6CF969F0E5B50A1A83CDD96ED54CE7E034617721CFF9E66FC1EED4AF925D2EABE5F3887295B9694FAE87E5068EF00B2E19BB68346DFF7F2616719067C9E31024F97634B80D817FACCB1FF4B22DB7BC4AE86BF0B2C1A9A0C794826FE65E1181EB10541F6D1BC25C237A065541FED0BE699DBCA3EC8C9BDA955EC7075994950DCC22C238275A937278BA07424607EEB10C1AE2226536CB6BDB9CC86C61FE2B4A63BB08CE3F5FF5E415AB86FFD87E55E1E4FB7393915DC53D001D3942F0A19EBE33E976F335D27A4E9FA42922038F9E9924E840CA20833DB114F82CEFD215963C9F09A5A31BEE9615AEB04B263C62CEE55CBD81DC2A323B20160F4BB153DCC4119196063B9B3AFABF0E64C37924ADEBA5A73CF27B225CFA4A00591BD57F0> |-/eight <1C60D8A8C9B7D98F6D411A3FBF3E1364E3BEC4A5E775ACA412F07D5A94C3BEF77D5E53216BEB0522A622C88CA1692970DDC6947BF81796DD7CCB824FA7EE90A4943F8AE44614C58C7911AB9D28D9C0B88A93C3B727D580C159061F84BE60E69517D9839A4A451A2414216CE43B99EFB70961552191831694714DDE8DDC8255990930E16813418A900FE62548470B5CC1B3B6A98598E41570742E202830AFBD33243EC6ABB72886024764019A44EA984D8DED1FCBB31F0E230348D3C16A805BC89F2756CA3905F9B19C15A371AF432FD6D69D1C4299F3A5FC90ECA58C45C9> |-/nine <1C60D8A8C9B7D98F6DB48DCFD6E5B40D8F5B9356D5F4F312E4E079BD1330371F8B16E748B339507FF34EEAEBC76CE6088FFBF43CFA46E360E31F1295C04C348C693DC73173B5940711C217395EF980BC13292FAEA4C08F7DB86E96FFD7F1AC428FC0B70C128D940CEFA088CAA7A81C4303E9CEAB546530F44DECE7661C57649DB55B4A8B030E79BFC310962A75CCD903BEAAEEBB6FAF06B5DB9A5811BA4ABCFE56CD78D8CA81201C1DDB3CE934C1DF4A914CCB604E06ECCF14960D6BEEE038EC27F429644C8ECFDF794CCFAFF5276CC0> |-/N <1C60D8A8C9B6D0A8EAEB10EC6C83A8151ABCF50170663A97AA6C8AF4BBC458891122B79EA456A4FB245891A0A08C3F5C78856E717318934EDB6CFE82EF816E4A49DE50D454AA4D5253D6CA844409A8A10E7CBD876280B093069533B6F6D725480B401381FB0ACCD7E70B82A55671F2BD692AB87154FC02E8EFAA7321920BBE6F8AD18AABE78061D095650FF694ED9E55586C17666B3AF0837B29CC058D114E11672F0F69980A26F4FDC5EA82BD1C53B74B670AE4AB837D81949E7D924709D0FE446761EF57CF343A7B12F8661A2DCF313DA4275B0A14F039CB9570AC5B4F86F1D15CDCD36D311971E0FED3BAAF870242> |-/U <1C60D8A8C9B61400CED4A85A0573CB3251FD4BFFBEB3A4A7EEA6D1040870288EF7EC6EFEFA2BD3CF4DD085D0022CF7723CAFF3027F54B49E0B438848D2F70AD6E9AA0B6A68FC77A725A671E1E0679CA1E73A7403627E1461A257D69C9B9368CDFBEB2A1C08620934721D11B2F57E71B634F77AAF82AEE9BE0892A8EEC3B73D984732986AFBF273D1> |-/a <1C60D8A8C9B7BB5CA503F41BCABD6C718309D7FD3EAFD4723590A6DB54A64A3783FF0E8915C8665146025473AABA73A7307808FC49DF54120176FFCE6E5630D745DEC9D7FE687B22D69E14177C1006B659795051D4F564854E1C732886E0B2617B0D55057161A197AD04FDD89E349DC800C8FAE6C2E2E7218942027A386140843CEC6D038F4E517DF6E091EE1EC97061608AA6DD07992C53BB029F315A3C165875CF85B20BCD136667E2BE57C24163FB07309C0F29C421C91BBF197F69B4468BD92D4E0F963A574D94F4959F6C142EC285F75B0A57DCD73FA9D71DA6249A4005429B> |-/e <1C60D8A8C9B797474FA4303150FF95D22C1576367C7C82BE107A33DB836FE273C47A9F1C294729003E4BC6906C807AE64492E567EB699590C33760698497B7D8BD4606E6533DD313B7408096D0253255EE30E5A5E3E06503BE924638C5951A143C8FB027E022BA2CC9736D9A6F100D38EB1D4C686421142EAA9CB9B186F914996503E87D112FD301022C9ED0ABE9EC3841A2AAB1D0ECFBD04DD27FAC9222691EA422325A2608DE3AA47EDFE24D5B> |-/r <1C60D8A8C9B75BE51651FFE67439D51A25F90110BB907676984B99DD0B35C7709F13E9D884F7A5E4D5DC6EAC702AA1CA7DD0308EC3E47EA3A772341F5B614E58D6E83BA0E5BB48DBDD3ED30A643443B6748E7F94653D8C84439C4E79874BBAE5D54AF00F5DBBDC68AB601F5B54A0C720942814BB32E87436> |-/y <1C60D8A8C9B7B202A5830BCB89572D4CAA1828530B4C7A43C892E79126B4E916330B53C34B415984C412BF2B91501F199A00E0EEB36801E5C6C4B96A328630D8109B95A2744C5BE5BF5BFE00A713EDACDB62A7B27EF5D0BAA40EA7DBB9CA276B4EBCB844D20A4804349C4F910157B64CA0E9CA2D8701B2B253A960994A4F888E6CC95DBACCD8EA343526343BDED882> |-systemdict /gcheck known {setglobal} if end {end} ifendOODOBA+ComicSansMS /Encoding getdup 37 /percent putdup 40 /parenleft putdup 41 /parenright putdup 45 /hyphen putdup 46 /period putdup 47 /slash putdup 48 /zero putdup 53 /five putdup 56 /eight putdup 57 /nine putdup 78 /N putdup 85 /U putdup 97 /a putdup 101 /e putdup 114 /r putdup 121 /y putpop%ADOEndSubsetFont/OODOBA+ComicSansMS*1 [32{/.notdef}repeat /space 4{/.notdef}repeat /percent 2{/.notdef}repeat /parenleft /parenright 3{/.notdef}repeat /hyphen /period /slash /zero 4{/.notdef}repeat /five 2{/.notdef}repeat /eight /nine 9{/.notdef}repeat /C /D /E /F 2{/.notdef}repeat /I 4{/.notdef}repeat /N /O /P /.notdef /R /S /T /U 11{/.notdef}repeat /a 3{/.notdef}repeat /e 12{/.notdef}repeat /r 6{/.notdef}repeat /y 134{/.notdef}repeat] OODOBA+ComicSansMS nfntOODOBA+ComicSansMS*1  [13.5 0 -0 -13.5 0 0 ]mfnt sfnt24.75 190.501 mov(RESUSPENSION) sh10.75 204.001 mov(\(98.0 - 99.5% / year\)) shgsave % PSGState151.126 86.9473 mo151.126 69.6973 li201.384 69.6973 li201.384 86.9473 li151.126 86.9473 liclp%ADOBeginSubsetFont: ComicSansMS AddGlyphs%ADOt1write: (1.0.21)%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.systemdict beginOODOBA+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/L <1C60D8A8C9B794D334770456CCF0A82C129EC023E78036E25CE3966F0B6AAB3C4C83B4F7D0D9A184D63B7096E17BA69777C3186423804DB983F8414E906B2BB350BEAAA6EDA9BB2F576EAE256DA27D8CF69C1D67E4408804E8B236A01E7241FB871846F7D1AC875484813B7B645BDAA48BC0691B0C9FAE688D3DFF8EF2DE5034FD5743EA653CC67389EA1B069F> |-systemdict /gcheck known {setglobal} if end {end} ifendOODOBA+ComicSansMS /Encoding getdup 76 /L putpop%ADOEndSubsetFont/OODOBA+ComicSansMS*1 [32{/.notdef}repeat /space 4{/.notdef}repeat /percent 2{/.notdef}repeat /parenleft /parenright 3{/.notdef}repeat /hyphen /period /slash /zero 4{/.notdef}repeat /five 2{/.notdef}repeat /eight /nine 9{/.notdef}repeat /C /D /E /F 2{/.notdef}repeat /I 2{/.notdef}repeat /L /.notdef /N /O /P /.notdef /R /S /T /U 11{/.notdef}repeat /a 3{/.notdef}repeat /e 12{/.notdef}repeat /r 6{/.notdef}repeat /y 134{/.notdef}repeat] OODOBA+ComicSansMS nfntOODOBA+ComicSansMS*1  [13.5 0 -0 -13.5 0 0 ]mfnt sfnt153 82.5015 mov(FLOCS) shgrestore % PSGStategsave % PSGState141 43.0723 mo141 25.8223 li215.263 25.8223 li215.263 43.0723 li141 43.0723 liclpOODOBA+ComicSansMS*1  [13.5 0 -0 -13.5 0 0 ]mfnt sfnt142.875 38.6265 mov(DETRITUS) shgrestore % PSGState170.626 69.75 mo166.126 51.75 li175.126 51.75 li170.626 69.75 lif170.626 42 mo170.626 55.5 li@gsave % PSGState144.376 151.073 mo144.376 120.323 li267.386 120.323 li267.386 151.073 li144.376 151.073 liclp%ADOBeginSubsetFont: ComicSansMS AddGlyphs%ADOt1write: (1.0.21)%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.systemdict beginOODOBA+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/A <1C60D8A8C9B60E3AA4B976610EC61CEC8A66ED90DF0C6331BB14366BB940FB3A6EADFE9FF353ACBE97E7E98B7D39A91DB9BD1132E1F7C1635E17BC2DE18007850C2A2DF892E62C075FF0662C83FB987C80A272CFF2ADD30FDB0F07F6A5B84AFDD4936A7BC33C86ECB86B487A2BCD608A50304B57B513215016A1E69D1C6538A56CD0497EE35010216E663AED5DBCE0EC37B4845C35DBC5DEC6ADC22984448444> |-/B <1C60D8A8C9B66B395FD17D63B9E61DA0BB50A497D6EA5CF66D713309F62500DD5FF27AFBE13138AE8692CDAB03619C69E42BF0A028212D7196A46E0B59D87EB400714E70727022DD786503CF4D354115A51BFDED36E5941578460AA9A3190846D39FC3489DD04FBFE83EBF8911912975458C0D8174449DD1A2110A863937B27C3AF9558C20C1A26BA905D9D89E6647703CDBBFE3BBEE20DBCAEBB238555BCB67F839DAB97D8AEED4933566B748EDD20F5871AF750417A9CBC4EBE0E38D350906F981A452985EAE5C5A2B615BBF91B837A7A5E43ED160E60E512050491935F93E5B6F65529183D7663E4CCD1C9C5524636709AA1ED9EDE9D7CB8657> |-/M <1C60D8A8C9B59575D87BE2168EEA28120D9030AFF41D7AF515ACBF3649BD2F40DE0809DEF2C3B0D88F5433D0339D1594A8BB5B7D6E9E407C9B2CF774E827F6D240DA9788FD58FD6A6693D238D2DD35EBAD61FA6DA2B1B88D98FCBA1CE329DEEDC1A2CF7DB3CFF85E91DB1E05982789211A03C97DDC1A73F165FD37FA7D660E3EF66841B5442F7DA5B28127C6557F4AF9EAE68C31E263F78BC4FE967BBD3724E8E4E7783BD6F3F0D1F9D36FC073BBDC3BB91498E2940FACB05B3E1AAE653273D1E1C1DE5C399F68768F7EC53985E7DF8ED50093CF6E6C7AD007BBE64BE70B06C3BE97174E50F93FE7A1F609DE48AB13B0AFA023A5454E929FDB> |-systemdict /gcheck known {setglobal} if end {end} ifendOODOBA+ComicSansMS /Encoding getdup 65 /A putdup 66 /B putdup 77 /M putpop%ADOEndSubsetFont/OODOBA+ComicSansMS*1 [32{/.notdef}repeat /space 4{/.notdef}repeat /percent 2{/.notdef}repeat /parenleft /parenright 3{/.notdef}repeat /hyphen /period /slash /zero 4{/.notdef}repeat /five 2{/.notdef}repeat /eight /nine 7{/.notdef}repeat /A /B /C /D /E /F 2{/.notdef}repeat /I 2{/.notdef}repeat /L /M /N /O /P /.notdef /R /S /T /U 11{/.notdef}repeat /a 3{/.notdef}repeat /e 12{/.notdef}repeat /r 6{/.notdef}repeat /y 134{/.notdef}repeat] OODOBA+ComicSansMS nfntOODOBA+ComicSansMS*1  [13.5 0 -0 -13.5 0 0 ]mfnt sfnt146.25 133.126 mov(BACTERIAL) sh146.25 146.626 mov(DECOMPOSITION) shgrestore % PSGState174 120.376 mo169.5 102.376 li178.5 102.376 li174 120.376 lif174 85.875 mo174 106.126 li@174 231.75 mo169.5 213.75 li178.5 213.75 li174 231.75 lif174 150 mo174 217.5 li@174 289.126 mo169.5 271.126 li178.5 271.126 li174 289.126 lif174 247.876 mo174 274.876 li@174 343.126 mo169.5 325.126 li178.5 325.126 li174 343.126 lif174 305.25 mo174 328.876 li@gsave % PSGState243 280.126 mo243 249.376 li328.507 249.376 li328.507 280.126 li243 280.126 liclpgrestore % PSGState250.93 237.472 mo269.313 239.979 li265.971 248.335 li250.93 237.472 lif285.376 251.25 mo264.161 242.764 li@gsave % PSGState350.25 292.823 mo350.25 262.073 li465.769 262.073 li465.769 292.823 li350.25 292.823 liclp%ADOBeginSubsetFont: ComicSansMS AddGlyphs%ADOt1write: (1.0.21)%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.systemdict beginOODOBA+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/G <1C60D8A8C9B65DE77AFD4F51F81ED3EBD4A285F80C2B83CE74B44388C826A0F4CB7FC7408B35179849A78CC02526B9D5979B48BCE15D3D20F91BDEB5A83C5165D3585DED34BE4F3DD7F360671E644A7D3B726A44668D72A0DE5FAD07877D976EBC61FA78717E09209379330FABECF1A48284F21529C32DEC3DCF052014289C8DEDFCBB389098F2BAEAEB130101E28A62154C896A369780E7DB77BB705D60BB395C0CD45958B98E7F072EBDFB9AFA88F235BB7769C939DAA7CD343559031E247AB7910389A05A77014AB5031A027F3F729FA83E9DA927C662BBE5F5A3C38A> |-/H <1C60D8A8C9B6F576EA558CA95278D4131994310FCED8C14366F541DE93B82D453F40A9737EA778F2A5E9A19DDE1480CD84CF58AD6BD3A75726B9A9FEF04D62327CD19828A2F4B91B3FE8E1F270D0750624AF4931AEDDD18EA84A0BE440AACD695D81B929928E675C20B5F591A7319C00BE5C9563617384C980A0E256F97B094FC97E9CA0DC206BD62A3226B987E765061256BC6655E10591A45399186F19133D3FB261FE31DED0121C7992A7E6AA3287BA075DC2DACB9D97D74112647020B8C6A076D2669448034DA594DAFD95B7E2C4444BA25DC7D151D826779869E3A5A6F788E61FF9B9D86CE7F4B46487EB9B08EC51B1273045AA127E1ECAEA8A89B169A67E95080E7D11350F0853CBD51B5F525185F1EE04B29D01C1AD840F6C295C4EFD0E47D165F8CCCDB275CB7437060E73477A20AE> |-/Y <1C60D8A8C9B66EAD07C28E64B3BA0A2D85DCF6FB2748C9E8BC924378B6CB040C4B220FA5B875C746F5A67C94D39B5E00B61EC106E5F57E05EA35A74B01BF59FFA68E2792EAA7D74DC785F312F6E65B38068966974D1AF01DC59E9EAB9432F9494C2C628F6105199E5EFC4BD2D06A5259737FA3EC80224EA5BF40635E8E5D00CB15C5745D939A53FE1A215F5BD4022FAE3F16581BF6F77EC065B8EBBB7D4DA25CB59A7EF8E303F897DD9A0139F9D7E05AE9A3BB4A79C65CAF52> |-systemdict /gcheck known {setglobal} if end {end} ifendOODOBA+ComicSansMS /Encoding getdup 71 /G putdup 72 /H putdup 89 /Y putpop%ADOEndSubsetFont/OODOBA+ComicSansMS*1 [32{/.notdef}repeat /space 4{/.notdef}repeat /percent 2{/.notdef}repeat /parenleft /parenright 3{/.notdef}repeat /hyphen /period /slash /zero 4{/.notdef}repeat /five 2{/.notdef}repeat /eight /nine 7{/.notdef}repeat /A /B /C /D /E /F /G /H /I 2{/.notdef}repeat /L /M /N /O /P /.notdef /R /S /T /U 3{/.notdef}repeat /Y 7{/.notdef}repeat /a 3{/.notdef}repeat /e 12{/.notdef}repeat /r 6{/.notdef}repeat /y 134{/.notdef}repeat] OODOBA+ComicSansMS nfntOODOBA+ComicSansMS*1  [13.5 0 -0 -13.5 0 0 ]mfnt sfnt352.125 274.876 mov(HOMOGENEOUS) sh352.125 288.376 mov(LAYER) shgrestore % PSGStategsave % PSGState363.626 410.51 mo363.626 379.76 li455.14 379.76 li455.14 410.51 li363.626 410.51 liclpOODOBA+ComicSansMS*1  [13.5 0 -0 -13.5 0 0 ]mfnt sfnt366.5 391.127 mov(HISTORICAL) sh376.5 409.627 mov(LAYERS) shgrestore % PSGState45.75 230.25 mo50.25 248.25 li41.25 248.25 li45.75 230.25 lif45.75 312.75 mo41.25 294.75 li50.25 294.75 li45.75 312.75 lif45.75 244.5 mo45.75 298.5 li@gsave % PSGState22.875 272.573 mo22.875 255.323 li39.3707 255.323 li39.3707 272.573 li22.875 272.573 liclpgrestore % PSGState377.25 231 mo359.25 235.5 li359.25 226.5 li377.25 231 lif349.5 231 mo363 231 li@gsave % PSGState373.876 232.073 mo373.876 201.323 li464.082 201.323 li464.082 232.073 li373.876 232.073 liclp%ADOBeginSubsetFont: ComicSansMS AddGlyphs%ADOt1write: (1.0.21)%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.systemdict beginOODOBA+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/W <1C60D8A8C9B536D0CDA67495C778630A8DC2511919E43231A0C18D2973EB9398FC65133D4B1C1FD822BED43906F0A8844D802931B27D6EE8DCF0AACBAFE3E82F733FD0FB0D8DEAC05767241E9F7448C42B466ABE313818470686D6E92C5C38ED2E26C957C5B36EDD0C1B76E6CA0F5715836993E6CBAC445E502DBD9478491087D2DB34E4215C09904450602533067D974FCB69C1C42C5E354524CDE7F7138BDA3512AE512BA7640757F235266D7F29FDC793E25C618EE71BEAA0CDF47A9F3F7A3485D7D912ED62068BA272F19CE6DBDCED6935ACB2E53FF460220BC39BAF396EF09A34A4EFD78027C51155554CD7937332C5836E80AE011DA26759CDDC785C15E6> |-systemdict /gcheck known {setglobal} if end {end} ifendOODOBA+ComicSansMS /Encoding getdup 87 /W putpop%ADOEndSubsetFont/OODOBA+ComicSansMS*1 [32{/.notdef}repeat /space 4{/.notdef}repeat /percent 2{/.notdef}repeat /parenleft /parenright 3{/.notdef}repeat /hyphen /period /slash /zero 4{/.notdef}repeat /five 2{/.notdef}repeat /eight /nine 7{/.notdef}repeat /A /B /C /D /E /F /G /H /I 2{/.notdef}repeat /L /M /N /O /P /.notdef /R /S /T /U /.notdef /W /.notdef /Y 7{/.notdef}repeat /a 3{/.notdef}repeat /e 12{/.notdef}repeat /r 6{/.notdef}repeat /y 134{/.notdef}repeat] OODOBA+ComicSansMS nfntOODOBA+ComicSansMS*1  [13.5 0 -0 -13.5 0 0 ]mfnt sfnt375.75 214.126 mov(SED-WATER) sh375.75 227.626 mov(INTERFACE) shgrestore % PSGState380.626 315.376 mo362.626 319.876 li362.626 310.876 li380.626 315.376 lif349.5 315.376 mo366.376 315.376 li@gsave % PSGState380.626 323.198 mo380.626 305.948 li402.386 305.948 li402.386 323.198 li380.626 323.198 liclp%ADOBeginSubsetFont: ComicSansMS AddGlyphs%ADOt1write: (1.0.21)%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.systemdict beginOODOBA+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/d <1C60D8A8C9B7F000DE2C8396BDB351B4990D8D398AAE78675B97459FA78429037C4BA1F4D53EE5133D48D0684659BD3916AD44F9EF388C820B65831703EFEBCB54E84A08629938E7E1E9BD71B24EDF23DBE596C10C019E480A33F574EB4B56CE5524F79CCE926D853B8A82B0FC6533439ADAC617F645B18C65D98BB846B0DC1C7B681B7522D351F2F82B4E916C460C2918D70553B74A3820D6E276C27FBDBE6C2473D5769F6125482A622191509AEBF182367421867D352ED6C0E76416F79DC149E960E3968BEA79DBC1A9A96F0CC21F57FD172BDA58BC> |-systemdict /gcheck known {setglobal} if end {end} ifendOODOBA+ComicSansMS /Encoding getdup 100 /d putpop%ADOEndSubsetFont/OODOBA+ComicSansMS*1 [32{/.notdef}repeat /space 4{/.notdef}repeat /percent 2{/.notdef}repeat /parenleft /parenright 3{/.notdef}repeat /hyphen /period /slash /zero 4{/.notdef}repeat /five 2{/.notdef}repeat /eight /nine 7{/.notdef}repeat /A /B /C /D /E /F /G /H /I 2{/.notdef}repeat /L /M /N /O /P /.notdef /R /S /T /U /.notdef /W /.notdef /Y 7{/.notdef}repeat /a 2{/.notdef}repeat /d /e 12{/.notdef}repeat /r 6{/.notdef}repeat /y 134{/.notdef}repeat] OODOBA+ComicSansMS nfntOODOBA+ComicSansMS*1  [13.5 0 -0 -13.5 0 0 ]mfnt sfnt382.5 318.752 mov(dL) shgrestore % PSGState282 415.5 mo281.5 356.5 li112.5 357 li112.5 415 li282 415.5 li0 0 0 0 cmykf1 lw0 lj4 ml282 415.5 mo281.5 356.5 li112.5 357 li112.5 415 li282 415.5 licp0 0 0 1 cmyk@0 0 0 1 cmyk%ADOBeginSubsetFont: ComicSansMS AddGlyphs%ADOt1write: (1.0.21)%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.systemdict beginOODOBA+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/two <1C60D8A8C9B7D98F6D8F3D7AA695A6A6775D351A3C5B32DF9BF22260E9F8506C6C0AFACE341E1E92FBC3EF784C227B64F08462D61DD043B72D0EF946A3AE72A4250C97F9534EA1ECB8D1F844DABC2780EA5497B3400E0115082BCD52CA33A42EB31BAFC00E89283E1398238FF501EF46348166C5D0796F4F302EEFDEF2C569616B35F3A295FC3051C30E10E4927C117B901A9DA57C3B1677644528E481FA057A75ABBC2AFB35C7AE1B05FE0BDF0A1E3241A7236A535A6C63ACD853B32B2C1D37907B8E7DB8A4A38921C6A2C9DE2A43FF89B38C12B866B35B39B6383EDE8BC72433248A45DEF8A4F70A87D3942EB09EC1FED7DD26A9A13A5550450B987E697E0B> |-/i <1C60D8A8C9B8524CA9FFF1D59707FAB92D69C69B7C857EED4D13A4787BF89B18996B1BFB164CA796A0EF07F1407DF3454BCAB96192B46A6EDEDC573AD74AE5EBB6C7E282C40345BC6C9BD822E381040AF84910E37D38B52009BFBA09050BADAEBC8553B469DC8708DC8B7D087E48B2E8AA99CA401E54F66DDB7E9923B974D88CDA4785FD295B41FC4A68D170B03EDBFBD3758274FE3E0C921CDB5782B906DFB9938B6191061DE008B5105239C6B4135C4008792AFAA4EA6826684C0C> |-/m <1C60D8A8C9B6FC2D96873601FD7D92169A9B88887C32231D12B856F0FF258B62829FEDF861E7207C12D5C53BCDFD0EA3F0EF441B3104EE7A8DCCC9135A66A3908121FDEF89ECB4290FE2DEBBC0D2CEC922FC3B50F2ED674EACC69E69FA370309E0EBFB994E62CF35AAC76A68A27F1193FA80070D9751608DC309EBC2115575AE6BDEEB113F39584664AF7AAA3C82601F097876EB086034E5AE78A75047B10841E51F7380B84CCDD035E85E1A5870A2BB0942D4819E585F0952EB73250253334BF49322F96375F5B49CB7CFA7A0B232F8AD1DD38A4207A81B8B16535F38363976D31BC82130B6F42B86DA3EA4FFCCC6C8DA3BAD0E6D585D10CCC6A4EFCE59BB479065B92972F3D516BBD63C0E7C814F065EEF1040A3FF51C243D5475EBA7E962CAD4F75D3AC0EDC0C293B5BB6A5776BF4AC8F3BC665CA79374C2D10BBB5A4EE69B305850280C1> |-/n <1C60D8A8C9B7B07F0BB93457D6C8288A70E0DB940B4E04FCB07C44C762FF75D1D950F6658944215ABDB8E09DA0C33F6809AFCF2421406F8688ABED2DEC4D49A55251B25C4373E5276DE26457B8215FA156A3918E62986142B216E3D126083708C5AB3D018A7C93A0546D1AE450568C33979D5D1886CAEE4F45CEF158C9F75F841729756DC86B9981305315BE025F34658A8B30DA9E4FC92E74778770409CEEBC81A51BD2DBFB108DC9287AA20C6C0FDC2D19D58643D88EB36209DAC3D913F6852F2F8B06C4883A03EE882CC27439C56A729CC60E3CAC44D3416B7B9356E70E374DD5228445902D99BC6E06C8C6558C> |-/o <1C60D8A8C9B78D34A55956A51486C357D04D448C2012FC2F5B0A5FE1B320E5CD61418E269420C85D10935D5D9B29D4FDDFDD85C698EDEF649FCF7B4152030DE7FB7B0AD250869A491A4776C5C05E1436F84934B318F30DD94DF542C1FA3FC71DCD30BC8EC67320F785CD0C113E143028BDC1093B4CB998C3891C7A3F7C> |-/p <1C60D8A8C9B784FA605C1E2DE9CD48D992DC3CC70A48B838E2D397F5893EBF5E6CB31C410B2D579A798B247824C0B1DA0D694D5A554F49A7F104B09B8C8123B1EE0F250469E618A08C9EDDFB5A51FAF77BD9EC9F3207514B493F3B559D151CA44FECA1422F66057BA97C6A129E034A9C3AB70E463FE85C8478F346F06A6148E354DA6D0BE5EFF6256E4BB886B9C73833B34381A812E73BADDAFCE8754E4C232F6A62C54AB66D9B9D76ADD04785EFB7DCFC18E5B399366900582D047B460CC42F08F2E9ED5B222614010BACB1AC2FAD7F735C4AD14F71C1> |-/s <1C60D8A8C9B7544E0B2F4A61F93D1126BE4C1AB23A9BC15E8D4F67C7217D859EAD9231FE71D3434A8F690FE356BFC6DC5BE77A03DE604D8B1C950D5ABF263BD11471F4641C413AA949D9FA9D14073F73C97069B262302E724A697D3CA7C59E77556DAF46750C504A58130B4D898FE3BF71EC7F017C1E1F27AB7041A63DDE724A2C84E3A413C54A5DDF57F8C9D27A1E3CFE7B403B1328B029B85307F57108ADCCE743F949020583B39DD4E46122F513D45ADF2471EB3FC18875B6CA7F87645D6D9F43435BEAAB1F189966F0EC695829B6348DF5F29560E30CB97F829CCD3E61BBBAB11852283FEDA3181F7D> |-/t <1C60D8A8C9B7445140689D163BE9CD19CB6263AAD663E751BFF4FC3EFD289F54C938D7522CDBDC78B86C3A6B352FEC6C942B3A84D1DF37948F119DD042933AE483D22B2D630A0536911763BEC72090C0E7972085EC665EF1618CB3A1E365C68118F7319C489021F7E5BB1237C8B28D9185CA450113B4347A96F5A190A1E41185CC68C22E0D8B3619F65EBBC7C09A7899C42BB7EC5C668E84BEB96E5966CE04926328B6CA13AB435E16BBB7670DDC776BE2EE98FDA0050964E0FA7809BCE05F1D859FB5837E> |-systemdict /gcheck known {setglobal} if end {end} ifendOODOBA+ComicSansMS /Encoding getdup 50 /two putdup 105 /i putdup 109 /m putdup 110 /n putdup 111 /o putdup 112 /p putdup 115 /s putdup 116 /t putpop%ADOEndSubsetFont/OODOBA+ComicSansMS*1 [32{/.notdef}repeat /space 4{/.notdef}repeat /percent 2{/.notdef}repeat /parenleft /parenright 3{/.notdef}repeat /hyphen /period /slash /zero /.notdef /two 2{/.notdef}repeat /five 2{/.notdef}repeat /eight /nine 7{/.notdef}repeat /A /B /C /D /E /F /G /H /I 2{/.notdef}repeat /L /M /N /O /P /.notdef /R /S /T /U /.notdef /W /.notdef /Y 7{/.notdef}repeat /a 2{/.notdef}repeat /d /e 3{/.notdef}repeat /i 3{/.notdef}repeat /m /n /o /p /.notdef /r /s /t 4{/.notdef}repeat /y 134{/.notdef}repeat] OODOBA+ComicSansMS nfntOODOBA+ComicSansMS*1  [18 0 -0 -18 0 0 ]mfnt sfnt118 376.5 mov(Permanent Deposit) sh149.5 400.5 mov(\(0.5-2.0 %\)) sh307.618 227.621 mo306.493 300.746 li306.493 300.746 309.868 314.246 319.993 301.871 cv330.118 289.496 322.993 227.621 322.993 227.621 cv0 0 0 0 cmykf307.618 227.621 mo306.493 300.746 li306.493 300.746 309.868 314.246 319.993 301.871 cv330.118 289.496 322.993 227.621 322.993 227.621 cv0 0 0 1 cmyk@304.29 187.871 mo313.29 187.871 318.915 202.496 318.915 202.496 cv320.04 228.371 li320.04 228.371 325.29 278.996 317.79 295.871 cv311.295 310.482 310.29 299.246 310.29 299.246 cv311.415 226.121 li309.915 205.871 li309.915 205.871 315.54 193.496 299.79 196.871 cv284.04 200.246 293.04 187.871 293.04 187.871 cv304.29 187.871 li0 0 0 0 cmykf304.29 187.871 mo313.29 187.871 318.915 202.496 318.915 202.496 cv320.04 228.371 li320.04 228.371 325.29 278.996 317.79 295.871 cv311.295 310.482 310.29 299.246 310.29 299.246 cv311.415 226.121 li309.915 205.871 li309.915 205.871 315.54 193.496 299.79 196.871 cv284.04 200.246 293.04 187.871 293.04 187.871 cv304.29 187.871 licp0 0 0 1 cmyk@317.973 291.066 mo319.457 291.066 320.659 291.868 320.659 292.856 cv320.659 293.845 319.457 294.646 317.973 294.646 cv316.491 294.646 315.29 293.845 315.29 292.856 cv315.29 291.868 316.491 291.066 317.973 291.066 cv0 0 0 0 cmykf317.973 291.066 mo319.457 291.066 320.659 291.868 320.659 292.856 cv320.659 293.845 319.457 294.646 317.973 294.646 cv316.491 294.646 315.29 293.845 315.29 292.856 cv315.29 291.868 316.491 291.066 317.973 291.066 cvcp0 0 0 1 cmyk@317.79 291.831 mo318.53 291.831 319.131 292.231 319.131 292.726 cv319.131 293.22 318.53 293.621 317.79 293.621 cv317.048 293.621 316.447 293.22 316.447 292.726 cv316.447 292.231 317.048 291.831 317.79 291.831 cvf310.848 290.606 mo312.332 290.606 313.534 291.408 313.534 292.396 cv313.534 293.384 312.332 294.186 310.848 294.186 cv309.366 294.186 308.165 293.384 308.165 292.396 cv308.165 291.408 309.366 290.606 310.848 290.606 cv0 0 0 0 cmykf310.848 290.606 mo312.332 290.606 313.534 291.408 313.534 292.396 cv313.534 293.384 312.332 294.186 310.848 294.186 cv309.366 294.186 308.165 293.384 308.165 292.396 cv308.165 291.408 309.366 290.606 310.848 290.606 cvcp0 0 0 1 cmyk@310.665 291.371 mo311.405 291.371 312.006 291.772 312.006 292.266 cv312.006 292.76 311.405 293.161 310.665 293.161 cv309.923 293.161 309.322 292.76 309.322 292.266 cv309.322 291.772 309.923 291.371 310.665 291.371 cvf250.126 220.965 mo254.421 220.965 257.904 222.548 257.904 224.5 cv257.904 226.453 254.421 228.036 250.126 228.036 cv245.83 228.036 242.347 226.453 242.347 224.5 cv242.347 222.548 245.83 220.965 250.126 220.965 cvf286.5 221.5 mo290.796 221.5 294.279 223.084 294.279 225.036 cv294.279 226.989 290.796 228.572 286.5 228.572 cv282.205 228.572 278.722 226.989 278.722 225.036 cv278.722 223.084 282.205 221.5 286.5 221.5 cvf342.5 220.965 mo346.796 220.965 350.279 222.548 350.279 224.5 cv350.279 226.453 346.796 228.036 342.5 228.036 cv338.205 228.036 334.722 226.453 334.722 224.5 cv334.722 222.548 338.205 220.965 342.5 220.965 cvf260.5 216.5 mo264.796 216.5 268.279 218.084 268.279 220.036 cv268.279 221.989 264.796 223.572 260.5 223.572 cv256.205 223.572 252.722 221.989 252.722 220.036 cv252.722 218.084 256.205 216.5 260.5 216.5 cvf268.5 221.5 mo272.796 221.5 276.279 223.084 276.279 225.036 cv276.279 226.989 272.796 228.572 268.5 228.572 cv264.205 228.572 260.722 226.989 260.722 225.036 cv260.722 223.084 264.205 221.5 268.5 221.5 cvf276.5 188.5 mo280.796 188.5 284.279 190.084 284.279 192.036 cv284.279 193.989 280.796 195.572 276.5 195.572 cv272.205 195.572 268.722 193.989 268.722 192.036 cv268.722 190.084 272.205 188.5 276.5 188.5 cvf278.5 211.5 mo282.796 211.5 286.279 213.084 286.279 215.036 cv286.279 216.989 282.796 218.572 278.5 218.572 cv274.205 218.572 270.722 216.989 270.722 215.036 cv270.722 213.084 274.205 211.5 278.5 211.5 cvfOODOBA+ComicSansMS*1  [14 0 -0 -14 0 0 ]mfnt sfnt299.5 179.5 mov(DEPOSIT FEEDERS) shOODOBA+ComicSansMS*1  [12 0 -0 -12 0 0 ]mfnt sfnt184.5 208.5 mov(FECAL PELLETS) sh27.5 277.5 mov(L) sh%ADOBeginClientInjection: EndPageContent "AI11EPS"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI11EPS"% page clipgrestoregrestore % PSGState/OODOBA+ComicSansMS*1 ufntAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5Adobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%%TrailerAdobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 11.0%%AI8_CreatorVersion: 11.0.0%%For: (Lisa Tauxe) (SIO)%%Title: (kaushik.eps)%%CreationDate: 2/17/05 11:03 PM%AI9_DataStream%Gb"-6l&t,;OWaQ)G_c(CCXRZ0-4^Y5A[41O?pnZb?]DWk/^:Q+[C0%7<-PM9W6*2FeGJn(-f=tBO[k[KA@%E&bXaKS&;S/AGC9)6%k5Nic]Bd)t2tqh#`@CX_h%$L2O/jsXm]3PjiVL$=O%#=lc;]BGW4'Bhqs!fnp\<"NrS,61O44'PrPQZ_XJR)CmT0@0of[\D[JIAM%c-?2o<h#SZ[sp/om-jBaZ0M;Tp"ODgmQUX!\)tkP5CN<GF+&;B<,)<sm^rGjc!c,%E-q8fl7XX"f7$4Cs8>H4.m<t5oBfoB]tO76%mdL[urp]@-\+'&\r1a4Orr;]]p]r*tGLZ-Yl(@tBs.;K'I([4j#(EhW/k-[pF]!9=r9`4H`J^`<<^0aeqkpKe_DD36<T<JJEPV%4%^8#H1\GF>0k0lVsH/E,>[VN+lVB$VW2YrlCXa]q^oqU(YlE80G6ds*MV\W@kr[HE7\Q;/Ii`jH"@36CmV4VQFmf.;D44sdbm3nMF%)NQ!5(filS?9S4#AUDRpDSm%L60`CCe5-llrUB=h\p??SQFV4d&q5eak[RtLFas!XC\@US)::ECVV8r<a,`ZYfWdDI,E6^9PHQ(2%m_4aqXSGk+e+(LB9bksk:O[YHn)^t)@<8dQg4-iN^H"FU<#4?-0W[AO=IDDOp@/%Ra2`t9a6WW7s7K:pWo"h75MTL,*b]2n<EQZU%XF*VLJ5H*NY&W>U(SRhn<B#pSD*O&]I].2f@El07%Y)2Vr8ea!ESb$Z4l1\dJO0.%laI;pl\EN!YQ#+uGGq!25;mo`\"@OJ&&5lk%`dL1_7Xj]rmb]%&#d!.@rQQ(o\IP^h_A.NDp$hq=&N9UdbpOLq031Fd?iB-9m@1-u%hBbY[ILl4590*?GQ6"=gRjN9$uk]h*`dD`%&$*F!Ig::X#FOa[H"B^RPoa?QfRc$;__QTA47_]mlgM%GIaM2s[cWSGX,$"bBqP+DC>_<5L5WnGNr$rTKFpF4*q#iYrHH$RiR@09%n#ig5>$q^'AloN3edX2"h=g.(l5/*$Gk"!<rjph]pkXa#JtKKj^EMOmEQ#W@Uj$hMiEuMkD=QAhj_sm?I%$Z7!GdC>=!:tR&?o1@%qn9EuN`]p6Z-EV>q"-OTX`;9_p`KLS>18/4V?rlb-N%JEYg.]YhsU4^i7%QdI_Xe31YcL.0DC7ZaPZ!@qL.,0YOF3r_D1"VXG(04%On*]U,5d@AE('I;a/q/6cf1>]04*Unn1V5go>E6@M"!'X)aEjFNX=UbZcV[V=u\/4Mfn`?]Vk(J4m+if=l``&^\f@<S9rS1kJ$K@%Z0/\f>(_=/(6/q*@S=@c4DOkU<t%<u(620lQtM,F`UVno]Y`(dqVtrN3SqTe=:<0)IsDbH8pF\<rV/j9!URA6O00ApO(TJKn\",!%nAr07fQ6Hs^R&0Up#6ndK6;-T$CNk7I%!RMhr=G#0@jV-`prShn?_m+leq!^<smWlGBi9F%1M&"_[7n$D:ioa'SZeI(V6J+n(^!r%Fac!i)tmN<7*!;qa'/=_DOmE_n+h`cc9%5`RFdtlL0N<Z&&W>>mJMq?8p>()=ZT=bp)1FVmM#NWdg:bNVl*PG=\e:54job:VpfHq%?a[ZF?>c+%XQtamn<:+d/O)tIhkX'InXcr5-i^][\rQ6T:]BU*^.t<u1CSXo%/TBXIb&<6-@PI2B#E6bPCM@hgF_;STDZ%MnTF]h%T.9go50((K^V$^sX]PE,j(nSR]DZo6o-o/:R)aZ6^[%TN@_kk>Im*/mlN.!&]03;*r`Aoul*jrNL$S=X?LP?(hSnC4e*DSNXauj:%CYPkAG<p#m0"/:1]C[OrYm.?cII?S<Hd;Z/-hSj'oDdE0drPtD?@,FCo17;:HE,s?pA!\is)33)2tn.Rc+'J*/E%,j.`Y;*2"B>j%MT/7&#A6`n1"F/(i1!H0?Yl(`W?rVhN-iV:$$UTumP`pcIWMRBPPqr0S(M(qH5#buZ0%M4&,."@(@TAW\%9^Em[gWB0<`cPlhC6,%59WgL\cWLqF3`eX3845"^6_=kU'UArkF>bns6pg4]N]!hmpaUd3c>="[Is/Er*EE_q`3kF<dX53^4k1!qoaENV\=1D?YZJNpn;jF%hU?q)R3bs*8Cd]*X*`Sk*&3GP+ioj)iSDL`KRN1rr()lj7<lc#Rl[]fi,?4K@?#V9LUaKQhUH?0]2%Mkn*tmT&"g9flUb`OpJG1F%frb''cag$cXZ*h3ktUi*=!#D9CThOA^1(bP#f+-kZc0?I5CFS:#MVnAF,"O:8VRhK[skCHj'Q+oJiTf!4dV_TX$CUlju>%\R]OP;%AkdH@XJ>,mmWI5N]P@[+@"aEhq!AB_`a89D"rSb4-Ksi/^&=c(.EBYka3su'Y'J<8'JtQ)0a-<tnaEs37O\Gc!KW<!Xg>o`=A);u%o-uDc+g.(H4H4ERYeSV<D):H>?nZWAGs6Lq]U%2kT$t(@op9BO@P3%TUg^Qd#s7@L\.=OrFf`rZ+mj?A6QUGT/`#YcYHWb0fD[9O%--F,Ec>,uCd]?ZIQ>mnL<Q;<e.Lt^#51eJXRsF2kQTMRmke,C:/jg$@JG5qX0]P%0QkA'XSMd6H$-(P9p@'^.S9MYo8$G7ZBJ>H3%bW`-GpGe1;i$C^]XL*pjHB@/uKJhS@9&&I@e-"hU&7a`"]GG]KOG`T=jdt-al!,X6@EsT^?s5kj'tsiuOkrELXC@PtmXn`d`^>)(%E=KR=Pkl]=TWjbrT[EtZ/OTUPeKrLKi3D[;a5Lg?#Pd-14*n3%mf]KC$7YN$aIs7f'-:eIpCp7Cp!c.AT8=?Q4C_+IRJ8AHDM_t@%/W5U20/Lq=YW5WVS8mZXQ@9M@;SGS6ZE=e#X_AYb'ikK6oSUD`%Bc)l8EW_3@Dcl]S6r2DZ!gCo?k#WLq`\FnXfE:Q5=dB"mJMG"%H(pjDTA+dIh]\#>Hr!;'@-%$7H]VS!.//<DZmVWo^JZ7iViJ8N_a\65I,5OQa@(f.F`D=j:U[1Y:@4%rF'@mXI/C?sCW+%)>N1.b%o0`fr=.(=rC.`RtNd7aJT!7bT*\/6%?4ku'k,4J6bMA.EN:qt_0<6frr#sR_O)NTpAXM"2V0aQJ7/i4Wgl,i_j=PP>>6>2tL`s6"%rStM8>uW_LEJSpJ^@QO!ZB=R<r59/_Qn)N<`X[AdAI$3@JqM8a(n,^I#k>Ppo<km!^_W3mjE74=m.K3,A<Z.ZE'UNg9QV`*^tQuQ%TC8!p<PD+7Xf:tRM^<W2e%92[\"h@r90&sTSnFW6WlHoXjR9I2PaAK'\khT>@g_ZJHVNb6jgEP:9`*uHRF8*'[8c0c/'81_e"U8I%\Po.nE+fu+5aS;<,gBJ;4k8T+T^PVI6KJ1t`MOF"oD*gSiVWC$6RqhHDtlZu/H;>L,Q1A]n;U'uO53lo9(,U4W+3'eR6l,7,/S$q%DA=._?mY2[TkZU.U/0MaT3<F`>$E&TW428<?:4KFI<V=XJbbUA^!]].rcL51b9JZ)VuM[.jGS<Ij1G3JRpta.op9_5T2n!tZk(@S%Xj3[[%7Wp949!:MWuUlnl=OPJf5L38Mn_oc]KGAt`cpcrIQCh5hrK2;k;%fljcIV\UknSe!`BaK$^f)n'&-W\o2830?R'EHHI%W9%aGRqq&nPeQ.GG4/YRGo,DJ/!,8\Wer.mL:>SR9kYjSHAS@i2EC>Lcn**h)QX3L6m2>%`h/6dk1oht1"E&bec",'!]NEDl+l"l)r@%!=S'_JTS%p^?=0Q)m1Mb%3;p3ZtsQbnQS[a@R\u!RfjsnT9o7CjH8JnW*=hX-U(ZV-??f<;[[3cGHFdcoWI:YQ(q>b/WQ;TB&]r:%RuUk]Kaa5>\5h*qi"O<BYZriMD6s,H?/;4G=jacV:+s`?b]emb=Yu"*02Q,,rJ[1%?";GIV"GK5_t76,a^@BR6159fIk9qeI5B3G%`H1jbj#d+5j%443S=RgT%-K+DkYoJ6ZiFIU&`l+(k\1aB+r4Yt8t*(Cp-]'9/mW*f<g)V=K5)'E9WWY$Dd(p*9=os\Cn\;rXfWY_%_?id>6^"+COS1Ktjq,Qeg9s`3A,BJULSMIL\U+^0\UNT'C]!b/Q.FiG+kNH&8m9?J.qYrnT?@p/T6#pK9Dgm+DuHs>D.bT$ABC^2%E6Ih,;D%j^m/JM@E=([dpS0UR?gdgU<`S$d7TQ?Lf:uW43BbWsq_[m3koRd@O4>ZR$k"Rc0]TSl/XAE9A'=AYm4YQn;qGVdKN!rU%pG&%20P!"Nc&mHnnpXf&mS"rWqeYmJoA+JHNm464k<"h#W+[L;D!'1@;nkoqs-hhD:U>5BRHF+H$u=2F-gBmYmRt1PeMi)Oc9*D5%rT/dh='t@_hP%7ss#8ckU@7/5FlWA]iVr!=Hi>Ys:Z$PHGl73MrP>o%jhH;VIlr+k^AIolYStF@pCC>T5+jjmjndg+i;p[gGe&9R%Y:lf_LNh?/2cl?XX1+]B&!t%V]Y8Z8\GTO2\]`mN-a'u%'t&41p%J7@mAJ_52i#.S?DT^\r"V*g<Z=9MPOA"WNulN?L\U'j2h0(p%Y"bJQ=Qb^5GF/&/pR^^-S%A@!mQGdU'3G.N<Bm=[mda;XqsNbHmgfqqn">;g_rY*in&pcQLPHfg`Q,l#F;MXgj/8B9_rKj6Ws>/G%%mO=9'=V%en,@P6Zh-L8[*[O=bI@3fIXJ[)reJP;a+p^>LYJkb5@&:Oip/5bmN:=,hI!F0QX>6T\bc)RMmkn*I/8)7IJ50jda'!G%GF,e2b1gf7:I":ihRu-=;qH3ur;ZKUj4d?gGbGkTi4cl&h`i,FiZR.7s5i\>nCP-.=1@fT5hG\`WuH:+55"p;*YrtVNUK*J;BKfF%+)_YX+4CtN`8Tk@q?)cUj+j\ELW_P.``dme5'E:e#U=Q^TM(W,>P]I-L+/uhon(qoX)stP^:XC92$-==ZoI7K(B8a]E5a?=qt+i'%4f+\^qb:/AS@a/u%0IC8J2^haJG7j66NEgf:AaC==!%sXK6.,o++Lg#oFX@,?*4Wmm`b]HL5]F)glA;pf6mVM(0l>0/,bneIEe%k%2XTb=^ZHHLk8M+Ec2=0JHA=$Dn`0;=H(#Q/p?M#I_Y_6%X'NE8%Dc8;GI5![iR?WW<tCp@Dlu8e_EPWI48e@6m1hbHI^^QrkO'G,%qq]:g[te=lIKNr_,<2Brh;-h4N4J`&l8o[PO@;G4iR30tBreL3p[A)/2[DB>Rp5jZiR?b05CPT%5LcBmXh:\2p(F7`nF*!PDVu^D%?JiGO/b/V2fk<>S;uuLLi<gA:03gZi\DL]/5@.^Q]XrXmrY!4l94%1U+!0k-I<l:Ri#5dH7(``K&*)d'[tjFU<j!LU9A'0PG?4Ch%?XA/2#Q?3d(l-<%iTBZFe^Rn*(,jnH3S]%4=>dh0au9=;hgPC^m2te8^:WIPCucU4j``DdhnZgrj1,!2#Q/3/m[K\AnC=]`mQZ-p%p"fLlpQP9^q`c-&hk6nB_qipgnBVWGc,6H?5HK<XIt.(=<F.u*i`>QlLIYSGj?'%&nb,mKYA/Eq!ZXO_p\O8To*aHrpDePRj9t]@%<tC)9#$o6pP>?Z)QDS]%Qha^fnV&>c^O\Z0qVuF-f\B'u56VY':cEoD5K7=113Ms.oq1p>l,L/ep\,3-AngMtmdADVS,3_.)WMi'%MlV?<HMDH\=mR/FeTW\thgW.c4J[\F^\r[k>H;[l\GC`bB/Osi!,f%<j6&WkZ#T&@[CJ*NrsC\<+MD,i0[eM+5Q,Ek00`:Vq'GAt%GjlaC>SWN2]'<ikp!M3,EVb`\eeFaAcBKHJQSMATYrMNbQEm2>6.o/h6.obA/r9*TPST.[4"(,%%qV\0-u14M=)[B'hEooGHg5.t%1ee@s"(*+jF>PgaZYh\Ge81U[Z\QiX:n_`SgU3aBgS#YBFh;@cG2)Fi]8,q+^@A?"^@T28Idj+>qoNdTcL51p:"OR&$XMX!h:QSU%WS;TC(i^5Cd"N$c0SW;h_@B%B]>![E54h4Wm\bNgmtZ4&LMl=2ES(]8G/IG9YoER[4\k#IAu8jXl[HNR:[@tVhY9g[))p#V5;c@u%p!_X2A;0CTVT\F_h#nDBm_aM/6Ohu8GJM,r%fcdkj`eYsDt[uAEnL+_WS;cuh!F?T[G1.n]BsLiD0G7$#S$I=Yj7t(G1Z*G*QW6T%h0-E$[[ZZ14)P;4mGY2'eo0;["7oemqe8!+VeOjYlY2jnkZWKHqPf1/ee<k%S)%Za*T(\a0Rs1Y&N1X<Vqj0`XNI[>leQjpUYNXe%7hAr&Fb#U$(k2X'$SqLe)n.LK)jm%5*+4L&b`dh8C1,>e@6a*dr[+#O29b1??qLMpXG?%W@$3h:lut/B;nmm_+(51r=GF!QYTOC*%&W$!d(UgPCS$7V^)aY'Nf*)\cfDqjMY1n.^=P=(IGRY$D^k.?EK;EJe"R</\HN8jR!6,5Y@g"LM!F.YcRhif;p/S_CG5tPT^t'E3%CiBAj!J&Gtn213!<O2p\"PFB;Et(Aq!3cY->7]ZH!$GA9*l*(0!58J9*s(eVfE!#ZL)0JO?,NOpKnQQ1ZOIi\V?D'HJ/np!L96!"%"D:OjK>JK?cCe!cJmWs!h<"`@#N-f;C'AhOcF<5Bn'%?I7p#:^r&.m!GFNI1Fd-H?k$k20*q!s/J!#6=n\C[<09Ld#=[,d'U("@0%$g<C8ck;5a4]2-Y[#R,-<19PG5;Qo/\XHJ;Yr\f*p;o)Cib5=_Z7a9Z.mm>mB$D&t%^QD_a7Dd1"G/ZaN]oRV+;\W<AV(%Hd1Si*%&pDZ_G#Be'mA^W_X>TCJO`hT0Z(CY,Z>1J/_M3.F'%^#qkdR6[LkWIIVsV!h/\.]p3RQF-ZDKBTJZUuKB'j<MVUElSosB9Sg;FG;%jB>$aO(Cgm94c!"@#oA39,X];[-N(mq13^=7i9$_gCaS/!*Bh&fFq<<3W)6U9.46n1m'[t\TuUUl-0,<a@BW^$*"/X'7_k5jmZlU%.tN6Q!_g-<M.$ku()29)V(tp$:g"H?6ILP*8]d//W!*gQ'ZpIO."TO_;b<L"dM*"Od%s9uS<0QnU3)>>TlF[(7ZZ>?$.:"\$CuAH%Qb9#POsJg%oo(:2=XpCK>IbV[.S3Q1S1Jq@"A46d$&PrU9$(&l=YeYc0E*iJAXDctV%e9GGq#TNf+gY-g^2+#<TU%d55FeJ9uH-Q%aB0V5aLWco;;.c>=b0l=n4tU/."+sIU5ZFaG(cJcfbA!Ib'$gC*sWd2<q[gu;&?'sQ.?]UIsb,)U4c\6M__*fk[Q0d\gX%NR>S<#%ioH`baRt<RJZ'knB4M0,.Y12f"gRGc7:OiI!87Z/NeLPj3sSm/#ntJB(eHr5)BG)."Y_cp"Y:l5DA.LH.U+C8e9_EfA.$FhQjGrs%(W=;nh8'`&J2@>7#g5bm\k-c0cPDEPTY\0J!_bGB\-ZbRQqQ_C!6*TrldA%0Uk0iSDF06kr^_,p'V9BX\^EBn)b,"-h%'S_#jfjP%G_0N8[L#2:*#&6Q3#`R->R!=t:*MqWJZ)+Lfod7/&.^jcIW6R6ih!N6NG&oVkRZ:>3+TE?.h+pYk[(,@4K:*jW63HfXf=g*fL<L4%=u;!rdN-o74nPO7lq)i>-6;(]k'N/86sp4&?j]_qfK8"(7KDugBbYbF@hl3\%BpNf=Gm/1`W3=5)Ba0S[GSf*<ksMJ^lWeK9EHmr%"0a4iJDgg-@Q3]q&E0'9Pc&BJe)jf^L;C!D>GS-EiFt7CZj5.bq$?M;!qV.s)hGSE"NtS4i%5!^JSRV<g(A!."HFFQ_&YgJ:%79O%`d36<21ZEmdG>K-1^#TT6-;H+`bIY*W;WP+?=tKLJdMc/'F<<cE^1q`cVD"MNT#DP#O7iKp5uBl:5F1hOrN\>9lD4sY2&f,i"]:Z%92B=DLn3jbV=RQe@+HF1nqqlHKG.hgp9YLBoF&Xca$ei2pkh$sr'c'R+J,eR^+bAO!e3@aABWCi=0md_,V<`F-<_!lT.6kuO@!Y+%gQ`LHU0;T5?#$>NDQk<Je"1YU446(LN;c_+DlIqm_FK`NasgC=F=..:-42qh0VaIF"lWcVpaYj2]-G0eP(DeJ9h2lY[_6"T]3oQf%jj!Jh]u=s"+_j@]-/oWX.YLkW)%7Z(74jC%(qh>L&JX7LQ=2nNQpu(T@N1mMSJ%J-SJIS0kZsH3DcMW#.Tr1hWg$Hs/7d&N8A'7X%9&_^NMtSDleA)GC,g4UIX\5FFbT!8j'2],m25uPJVr,0An@7'fr0h;M6D3\$XE6j6e/j<o3tdfE3jWutCt8[B'9Sif+;gokX?+uI%+f[r4:_QE87,<BC)+C5;K('LHIn!)Y'A_(l8mrJbWB2H$Bj-aJhE0g@NTe<EfLT^dnO*ShYY%C.TZ*&UAf]&AQAMR&2Gs0YO\CMM%A7d@n6@iPXlG'Y@72J8*$P;O]-c;Z50#jaF$EG:b0'`rsm@q-g(YgY9+H&Ai6c#h)/$,dFl`+adLrM9gD9-b;FmOhV(hE#'=h?,c%geLmeO(8]4aq9W6AW<.g5$h9fQh<WO3>/`)$gXN[J\S-JJ7$eO0JcXkY.Gi"@k,?s9h/0[-^lj>0/GY)Thgl6/L"[ug)O6jOoJkd%a#jo37\l0!"U2jP?"EV_L^+Urlj_.99OEn+Xc2/uR.iDl?YM8:AN.UdMG0[S"!]&SFP\5qBXtrV?s?@H3.pU4L<r5i>HoR]iYPG&%62\DBr6<k5(GA1h4_G$<>8*`S)*aL0K998IUe1rYOsq_U8tsmspcg'$9V.>*0kitkKOfprP*2X$bT;Ve)r^Qk&2'bb"bj^JmbtNJ%jHT)0:`?mg4X*s1KreC!q%-gXXHG`X9oMQ0^PR'YU:\P"#?4L)c^ZIo;E5Pq(TjBdhAAS26&U.W)ommq&s@?g-ai:rg8OePf&UrX%@HL*:.$\n+3OPplIr:K?W]bE!!4!oOk!YN[`.j9t8G9oZ#%:iOiCKH.,B\_a<Lr_BdlFJ[3J]Z=]'!,$:8EFf*b8&mka`@nHQn19%L/ea0MR-FAPBo9Gd-f#;g6+1uTo!;\FAHN!*GY\aU_7(#_j]*-UF6Y!ZF0tC\9=ZY?une)lKqb7g-)FGG@ZKb,*+`Up:`EK]gpM!%&#AQ"[7<^k=t_En6i(aQ'ktY]U.O%$eTP,7*2uBXUaR<V=[%p6L6XP8C!AdYFB_pJ#,R3ak^1^QD+U3\O[acZW#bjTaPts<MB.uK%W+PeG[%.2*@mIg^^D04[flpotSrAA3E5o\$QW]WAQe/=@?.ZH\5-:[qo0ZbT=iIe9,1?=a[>X>tX%"Td$O5fRX]<)1\jgC^[UN02%$^2@&e)bPS*bd3J*B%B[8.,tVT<'"A+b`O)*BSji(m#sm4PJaa148^>pNC$FBM#"u8YFe$)2&IjBU[h?&;&JpJ]*^:,)UST(1G*O%9et@mFL>=.OA')(p2W->3R#,U.Od6?-tpn*&6",^7KJO&"PU`<pdN!Z#`u.^D?3;"#pL[G0RUAJJ:+6=d1LW]Nda!-7*r0"iBA>;%Ek$(_YR(]'7I'#q\8pZTf9nRK<>MUG&9rPfX9?,Dd92!10umT%nCs.SOIQF,W'G1<NML$O:Ls?><$s#XieA0Ml4B%6N4l_("OSeL%(Y'.*eO8R#d6FoHP3:)HAk]UBl6;=["?+7o@#-j"Sn.e"G6(f\Qh_$QDe%R5e:!ujB,LLr%L)\:`=_^Qm-%>n[cF#2IAW<g*X==h%22E#CQ6](8S*B/6Nr.%fpUOt(:4GY/Rkt#/h&kkb\RRH2(E*.@dF\BN^W4!:ZC\[^M2F@<_C/a52+aJ2Bgf+#bU$Og.]"fH`r+?f%a#i\mY"PV#;5iWk!@3XFo/JdBL&YDiGl<:dffUEW(;9sElNFH=__:T@A?]FB\E?QXbBl4`/^>YL^g`Z>L@35e%$SNSI2RrOdLWlA%@kgZ',55Y"L<6CQ^5U#b)%>=uMr?<p1kN*19#JbK6V&tdCe-#fF%A-DnGK\icW6f3mjN2TBFH-51_PcmaZSQSMR"RlObDO"8R3`m%m@;D/fLeOjkG,dZnoS!WoM<lL@5#f#)lJG9M*F?\CGHe]#5)?UbPK_VdmBB].u`bhi5A.%3[Z2^">B'WU,,,V6^Ydo@2F>&aR?o5%Vh7a1[Z@Qqlf_io8jZMff!<qFk#&q."J^le9'\dY!'g[no_gc;s,hYY=<A+E!cbaiLq#&gH\1=m+P%LMpk-*#+f'&a8Nn;O<sUIp%U1]:O3JU`2&E=mrq1fsa&Wua$X_1XUVcn6Y8\S&u\&aT[E;QD"kVdKc$HnGSd/ut;hdoPPepSf)_M_q$fG'qFE+ALe<>Tf.d4&@D%+3Z0=I,#HQI(Vd`T7ZXl0rV2QoWNM(h?YY?*j:9qU#Ci:2-p<l_R$a552FC\)tHsKi.(QdajK",`VBCF^TG[tC[N^14?,_h"g$`_%h7*RWW3I*K$4A)#Y/t,[?MjLj64iAMZ_,>_CtVeqU\psHk]`fcf3htY3*XD9ls7&VfU'D"70MD'l,3rnkmN!H"WUd?$re.PNq<QB%87jLr@u)*A+md23_HWUU3U^e^R]0n/4h=mQ?ZA:Sl)^YO<7KrJ)n*sK=[VNl@%gg;VR_[;<)^"tM2=92C]d/L#qr]a%U.JbO_g-s%Y_h][)V-f[:rD(_'Vi2Bg>2fua8!k-`Fh6)d0"n&S&cKJJcJH)bJ"_/R&:Z>fd8UK]Tl>P0DN1RR21sN9W2@!kj&OU%<6G3ht72L%diFTT>jMKWT@?D^h,)G-"rLf^oa3qp_/L)o;%3LfOa\^o0MlbFId!^>C-d=&3Z.Ae,B$-1Zc7's5d&uFN"2Z1B`Q\$8O&qa*1s3L%-IR:7WWT[W%!7CK3bqhj<)0)A!n@dZAPcBd.V_pWZWT'J*Oi[58Y^?>J0>fSk3aC>0n[`q_kR7[XdH<UW26A4-)7YU@8h--2Xijb%PW8GA#/?k*#E>Zi*Run;jg#+P8qQ-@'?!blMh>+`g:4gUK2&)F<SoJ&qGM5b<m\+/DXVdEoQ9@MQP<gN._o68g-+gR#@QJ!1e]Ds%0U5LUER`/Y#.b3t`2/A1XQ75E!A3')T:1+HGr)GZ_So4)Ji<:C2"#7aErS7]]6e-0a0V&2DQ\"EX`7ut]%ls%7+[3ILj.86W"B90%c?Q'/KM6Eg'>L1[-R\Fb"l//ATr>LXDBiq+\k1=m`8n2-X5\"0GZEfVS_DdGpo<NsSKhCue(,EL=G>\@F_JsM-2"@jSj+^e8X**:%#5kFqK\-c!RPM>BeI<(V77XE0oahXn7D9%3_kU`'][i7RHGMBjiMZIHfUo:!PL?44O5,N1>NN,GhP"(@/T,5ofbteZg/$CZ;GVW`%GWfH53nd3Yie`#o+j^*<c6/Q>`V@!)-I?;%Sml,\W#A+X;B9#LLoP`(YQGgR&@rIZHZAA>cnC:3GtM]jJ6r@`bmH1ersiXp?tNmN%E7gmZAcO`l!_h&Fp=[:Z3ajU``&Ir<mfpdl)'D%]Ij55M4.p3qnTZUuD1o[)?)A;jC(]PunF4*tD?d&h^t_`463hSFUR?"NV3kY>%4\XKHH;[&$!asgjHKbIPD4oo1cl$j3IHVY+%"Q!6KX_k5H&as2FG7eNTV+ti*8'h79EUm\9M>QY$plf(7"GaKUNo8sF[YReQO.AO%6!!2,\HDKBHt!WR,!&'I&6B1i#hOj&Xa#!bkR?9iXTKJn*"I.tK3.GrUTn*7B#YK7ZP.*!CeS;I$lO7Ua[;q[7].BoIa/HGkD0qb%NTg'RZ*;CcMoShU8!Jo9mtu;9)>.I9?tAuK&ud*dl3O(e1_.-m`+msj]PIm2[Qp/s"-#=&WSN0Cp2fl6/t:<C&DuI/l<5N92Rm2X%p8UlkgF.>I`m;&Nn7K<TXn/;$LF`gVa^6ps;N9Vd)Rn4&*/`:/(fjXbLXfhCN\8143h@\<+L)-:3N/*j.I4cl??Kl/gnrcD\K/X^%E_gp\POFGeR6+$Udl8QI8FG(Rj0:gZ7mc''dQbnQ2$nRLM0eFlaT=W+[51>Og^B9ffipel[4&:_Ke3YuA*RiiDC\Fh2Rq%e*,]8S%P/ENol`?<-PU#R9mQAH04RBuG`?/?tG_k,1kIs'sq*oQL-RZjp5!@6^l5>:9N]oVmd,WcRLU;?lca/Jr#=FH6nKRn,#an.e'cH7N%&0l.S3t78`or:L$W,sk.;)/"/URW$n@PfTd';9+^dh5>WPYmj)5hu[."$t-o^qm*D6!D9tQ8,8I]$uJcAYGi036aRe-:OZ3NK4I6%4P1B0jJ%iJB>S9(^tM_<[T3uFK\Q&l>HJS3a1S,A$R@FRAJOAXBV28tGs2JdB^8"`b_g&aFW$Z8;EgEJ[V^$7)Q2"aojg_lN+L8R%Ed"i7URE\HWYIQ)UZF1Te83W-*pYRBET<TfKS+O8-FrV77)9n=$Ag0AiV.\_JR^,6a4f2L*(eNhSSPg8CM8lH:!C1GjP)ra^r:+/%RVB[>+m+&.@[<"LPgBOPB5b]fqVHssR:c2)bB"VmL#sI-meKl_IN-L@,G$CQA^sR77C_&4.*YELHo5Jq@qFF!H*V,i7[^MiM&+<b%auiU^Mr>S_bVN;Q0TIoY,F)E3X;']'9:9iO`I?G`#'??YCD0t];qWdf=XFZKbea\.?#kpn:XION`oa\>*Y1/Q:U\oY98YZ*P6!]f%h->`83Bo-1nQtrL>=r&ef!(-4e:Dbu@XD,DZ+[RVpede`FCs9Ujn&-4WbLu24I$nY74[m8HeAHm`lA,;ch)uGGig=K_f)^Hrq*PI%^E%30mf+Kb_UVH<nnkEjSB8M2B\qFU`c^TmaW=dH\E/aJHC-2a==Lb]$MY^M?@<&g(@GJa4gqUhnT4Lj%2;G7;8A$H$;d!+qcH1D%+:>I'9e!Z0h,VC9`JG[pQdD!3HGi*#XU.DD?mIXGMi!pOA1.rc5Du4]2ES>5Qi@D9MRc4rWKol91g"HH<\4\`ZCu"Pc9S1f$U^*=%MJ0CU7]Y&o=tKn7V/S;Z5ppYH@hu6`@_>m%E*A-$dm,9%X<bm9;"6.R)l2>_$rsdqlD-Y7ZC(;1-QWXt59@0A5H]fI58(X^M$K@K%fEq7-Fkm,d5J[TKZ:13KWb+22<aXia[PJudBO48sq7SFoO"=G/<-.I\02ChEc4'$F4W+*&\qi#8Y&rgR+H[Wm+[h`qnlRV!j)4#T%/oiihNtJna+c\:mnO*po@q$="Jd!K6K'-t6S>b2:RVah"jZs$N:.20/A=6DJ<mnkB`l,gWqQjS"#*PrG$=#2q%I=G$/'2(.g;)j,%_:^*XZ&8IMaBhI/o$K\_<&fqPn6L.%fGLR(V'OVTf7bV7Yg8QmNR<6S1>FPf_A^qB.hZd9WWBITP!]kd"smc0aCl3-'B0hH,TW9W%2.c\Rasba[_N]Ah)BXVY?oOl%_-o^a&%psd(aXZZMY(gYO3O,0FAc:(U=S[jbaun3QNES[a6:XY.m1@jo].(4`HXnUOt[EljJN=D%f!^V,D#<EBbC6]^][euOR+rR/mRDVYSbTLj>PCTHPFYPGL%KZ42fu$`\b(c\HL;ZmobJ2,fdm5NSisQ5K$.\O:Sul&%]bg#kuc*A%H.'A]j^+6p0=`sT/FD<AUjJPVmmtki[X=9QL3d2qmgVtlU:*IuYc=86>&&4)ii?LmFXGXoo"jVtprj-/8W)[0*0YO.E"^N*6Q3u"%RmT)$*nX;B2Pf78(H4`"hQS!XE%8fbfkJi?'^"=iSAX3:3NsC#1\(0FfV^'W\j%6[57bAML"WDq"b5\^UJ2O(]jNF4M7dE^U2:YK%Y$p63RZ*7rJNF>D-V,.EeS%ZIXcPe>W"s5<;m[!nOtTP.U!)9S6ku-&k*#,P#)t84b`Pr\AM/$ie<E3NEs77Fog-PpGH[#g/G,^'%Tiol<]]^fF&s,TfE^V,IIUkrg&ak:DB`t$t#etqu,<bju=7#)[F]i5%Z>2RAfektDB:=Sl556>p_l&8#2i"$-IX?=;l3>a%/DSL7%&'HDUkD>$g"_5;LZ=qI-mdt'3p"6<uZ!D6bWS-BBo?iq!n4S`l%<Qm2V?N;DEdCR.)%":;C<W]cUs7AA4jfA"j/aDaAb8BeI3FfP%lnLDTLoMbe'b_O!1R"<Hj?'-"p];5&=5.pQMXBO!SWh.sg^C2F:Y9h-D`Y/kjS#-Th0EnT!;-rXX+Wd1>dWie9ARmN#.<.4Do\TR%-1GBlI(LieD3sj#F#E`T@Zk!.UY2fB2U1E>Ej<]tR3t=.GTn\mE,>rRgMk[qZ_Zb->aFWFD_PPfd'D>0V?+"LrQH9(Ei4]Rp+UHS%T3,%n=gH/A=koOrrk.5S^PV%VQR&8+Q+811"WR@`5;'Q-kE5an0on0gjISD/BUG2YQVJ:<:)7lJNtY\F$`6U5#^5aQkGaB34Aj07%$KM@2m`DegAgoaqJt@2N7%iR6BYaZu;cf8p-ZhJ=`Zn,+@Fas>$qGC4N%IM716sA1QCf$^C`,^o'3CJ?(rI+5AB0cL6WQn,M.&8\%71@h'cA,iRX!+X(PeG:]+i=K-(9q&aBVA>UMt9+&<bq8=m"hQ+NbT25.X+>beDlSO5$s943YKfI'7ZGW*NDl2j0#\0h"F\aA]"jT%0BW>(U.`2>`f]-8H;8K0:ZWE/3L%s=1+R6Drhui9q$a"GMfSM8GP&\3--bLJ?"?ho\s]I)H"o[g`GX.2/fPE>po%\me+'$lIB;4d%5lFH^XAR6_%,HVa@WG?4id"MN;,Pj9l:&"&JE<o.+p-TuYZDc#d6u`!8!,!DZn@L[hh`'[2?`,:<]f9'f/fpYf$S8=4k?lD'4L7e%RBZI=as^4`m7<jVP7@tM:qMEr9O'ok2k]jNIo(9BYZt-%0e)N2WT%#q^E`Clp0?/@*/_BTXY1Tq)@B(0Pdgd!6b=)5iDBtfPG:/B%PBZ*AblQmp'LKO(*D**n=iT45G;Y`$1Nc4U\XHd*VCG%!>2RjM-jkKD0g5C\b;rj>@5"sjVe"T))3BeT0)BsqY@fm`@*Hu`NBM+k%ER%<M1Iq%"irjpbj;fC`mRT)]9k\Y23WIBMc9)c&7YRCF#3Ub8*p!X3\-8c!(h7gWYfYQ!PK2@oj6ct=%Is#l-D.%=4eWL2Zi0Lf%&T>kFbqP*qrlPk/A[*j\k)1Mf`f^WqN#41e^6i`FR3BJ:19<4JRPTmg_dt_8[;&eo^Q25EagA<;*noV>R)srH4N:*URH)##PV/Pn%R82:(*rAl0KUEhQXdd%c4D(>uqC_X-Dekh"!-!.">S0b+nm+YU`\CXN..hi%Yk%-.f]44DTcD-:E3:4gNslKr;lLY3b?j`:LZg;l%--I1F4@1'P5k;Jo@r_hA0^hj&f(kbi?XdF=mFCmc+3CIUs4Kbh`E\td<6`S"jPZB3kXL?!7uBABdYqC;iRCpSg,6J59Q=r4q9U.V%2L=t"CS'k9B?;8%'3KB;m!6l]SRNbDXupF@b92UG8T"VQK$/8s\VAmm50O'M9\;_8(jB,3Q<>D;OhrB!0"Il(BQ=U%AXce2roW`C%eig..8>jd(/kOQuIt"*[-p7$\W)3'&T@1iWl>m_2<[Ks]&"cFGb$TAB\_f!#q.8PLs*jLY'pYfP!0&?@1],5&M5=%VB,%gC<M(g8%dY9b^j*B`(qB/GjNt(&ZI)BdA?_D(bVe.Jm94!ggoTZ$,?B__fPb?r@PI'nGT\s.?Zh0KTi*MVRoTZ$,?BVYeDgK:FnXo"4cQh68%B:$AQK3rRN5-H`<QCY`l+hrBUDng,ag]hC=,eNlScRZ25E5?TN'mKN?U9_0?Ui;3$V:7^WNUt#JS#]GRh,)@q\SYaq[o)DVY$0Jp%B6rVdS6%M%<>RO:V.H7k\p4Y6ge"pC94cPiKLs;6Q5$hd&Yq\1#Y>UA+so[.deQ::Q-^VVrmac.YBqHTSrTB]@WFui]Q2jTbm:Tg%$A7uIf8Li:mLdc:lQ)'#nsZ.]"5.;>5^LkeC+^&mlUg95M)4dqL]k7R1PJ*-lCPXZp`q]g$/&0":/;(Q2$(gj('J8Mog?iNG>^AD%j>D9n8c.MVA@HD07':3o&mr;2b4sFZ[^(h%o=b+ifbZ15!OK%WAb\fR;CN-%0H*l&hU\1*Ka#N!>h,$?39AgBTFOBGSC`1Xl$M.A%0BD/"p,=MP?$!]Hd@@`sf8dTk#e=3`4aT,Y%R>Iupc)t9q4ua]30QMGQd!/@m$Z>ZAFB98!hP`/^qKFER[DgXSkScLB?p9%:\fl\%Zft%gE\Q70*R&,VAS[BED2s?%PsJ&9#I<%CfEh1UoF&u@!F*lF!XhF<Td?%EJ-gG</,XW-Tqf3LN%uJ>2*+N\;l7B6ZHDUb)LREY%cHB*^Ai-6nRG$42Nn<Dc^K[^PY+0dIN1cT,_fH2Q^74`m]kh\ms/X5/UQYc6A9]J'Jn2nuC;ZbG8c?d.\ni2)n^Q>D&euN`<\\OB%X*'Q<$MLi;RZ!U+ND\FiOuJ3ZUtch`&<B]4ZS]nePcL4>ebat6MUqNs+jZ2ij^_uL%fguT*c>A$ot[IJ;QRsOG3pQ:%l6'2.H+b(%o9%HQL)?V>Li*k^1cL*C[Mjtb9Uar]TefGC*))B)<>LQCn+THh0?;6BZ1%=;m3r/0nK'm+:S/etr[/$@Vgn]@AaS[)d@`^6<n:F,%A7`p+2CgkUTtEK[0'BP2<$k=:@^*D$#IL;TAL1l`cUpAPahXf=l`=p.,3]q(=T1*O%9h2q\^*8nBLr<h53LFg,n6AkM6/t"Z-UmM%Uh#kd0^uF3mZEd.F`C3W7\="PU_R2,WBa[_&hQ6oFu+QF9itZ_4Hoj'jcEg-[.HU:%3b!PV:"I['uf0kPaN$U9CetY4m!6>ac:71%J3;Q?B9X*-Q-7.i^(RmKV8Rb7L6c<;O\i;2f?Ro22\U;R_Du-iqmHHhBt5QlQ'SkqAW.M<V$QZJc@#F%U/La:nhFU&h\?Wfo5a-7%nMY.9C3@CpO/Mk/;<KB[k1EO%e1DJ:E2,B0Xj(SDI(u<H/rsbjMOVSkcU6@.JG&I=VA,L`VNCHocBS=*IeD,k)%jV_3k#YfPT@=*%GKH%sd0:BtRXCPOis5TR4oE`5j,*>[KuOH)kB*9pjjSA'cTW?HQQ-%7,B2:5Uu"SFjZFWO`T##+;CHruG(03IbJL)9\E4[=2#ikR%hjS$JXdFIYB&;f^jt4ii-!@_>3O_!&S"t<sZ)Mq%a'0pjg'S:bd6TC!+NI@^l)Y6_KEcI<<!/O$<0.=4AN?!<rc($C8n%CRiHRs%%pJb1NV*rR$k[UdoT<%i6)rrd:VGu^(Q1p!D51@muLRsnhINdrgQK#6ll=k9`\ib+JQEPA$RkpH@F_56"2dOS6)36';P#8c*@^:/t%ip<EjrZDFUNH4BI(.m#gBk#LUalC#k!RSr-WN27q-M9iX]R).">UEC@[K/NEn&'`"nWZE4nuLp.GAu*<LiC4(qFFs$6/j1"*Og5a%K6\-Nr</0>@U%1^*,VrH^J(ecKgl99s'aUUSnPntZ4/hSn:LQKgFnupTp(.Os$?H&[P,i(^^S+9]5X9CL^#qRU(Y4grWcjMCs#%%%+Ck*_=1S/I0)klukY=6.]ZNPKjNq3'g:r.Qo^'QCL[`Hqb=SO;r[9.Yk%rB?(n[*u8J5cYilB)o+M"-MRnNUsO7F7OQsMtfQnpP;%a7plu]EEhNA:q1kIGOLX5+>JgF**#()pH\I(p*eM"Z&t`-j;crZcq)UI?]@EBH_J@3;q@,`o%B1f@VBs\ul0ln:>s,lOiG_>&PI-%Eh_hl_D8iR4</6>S#_=:3qIjDEE,k]Z,5Qnl+E8*:FJb0E#6N8`m#@d4J#rQW<DT+.![);"r:/*qFS3Rq&(Sh+h7:R"RV4YkjlqO%7Eq;jhmJH6)-FLqR+7W:0P:;0a#3ElM^K5ARU)[h+(hArD`./e_jFh-`tM6jNZ]B?"la(s3,o&LjT4gE0OZQ+\1p?gB8+H1@:Bru%B2CR?_AO'5TFaCTG[G#%$s\_k&U<$r"KV!bR11]d7;'hfFE%0]bLXR_@1_Q(CXeQ3<$a.p4fh(6eu6=;;NPHchGL\6<j!_p%`_Oh%p;&IE82VZ8o$lsCo!AJ)Y-[tYS3rj8eNDrQ*_iY+Dc6Q?bogHd8'(MfH8N8q@F(/.0-mos.9\KL92_6AjUQFU>4`G3coI`P=[9DX%j;AZWTPt*h1FQ@%84p3g<U.HLS]sZ+o2QmI:,c";_AD=?02mf,b7E3cLXgml`8@WQ_VM8^T=UkgW66&H;aQoja-mmH)6T,hn2YW_%ASG>V2BB%`*BW)sRU7TZ:b$6m?!22NS,89fiui05Z,'@nWFH#o0eHshVaI_T9Nq[UjC2cbG,;)]\]R9pa<5<V*">`]84TZER&*Aj%9ubr'Af<l`>re)s`CO'aD"RkOb4,dOYEZ+(j=9oZ#dNR8<Git>8hO*qa]-TLWg552b7`?/@O^lP0Oj6O-;CI%e]-uTjkbn_iBq&`%MAi!?d-?q5.@gU>;!o8MWGa%C,pk"aElH(adrik*h'<@O/=86XDY!IHOVAdhi5mRRR$E?l]$4;/XduPbPKZrSMeUBO?fj$o;OH/O%W[,7l+%Noc;?G-t\s*oU#^!Dk12:6^PKf&Kd?qBX'[G:L1Y[$6T[09MP_6-7e5R&b=UFtJbX:O3*6aS_Bn:KN=JnS`UG?fI[&;=C%f\rdlH4F`d9TIY'm8NI)RQShnHZuirV]EYj?bUn5;<dZl5s^&fP=8TtZ(5;5`Z#:f_ds.M/C&JM``U"o:LK-Jier8)YJM)'U=S+d%`"n.YSA>pn`=rV[9IXAgR7o?[;QRkX'J*9]N%dIee)[fm#'Df#Hadfc(H55daBY-tb[0L.18ueo+nFXrRZn#aii]7WQ/F,Xef;+,%FL`q^EZ)l'7$h-][#unA(eYF;nAWmJTkd8'AK4!:OMioA`d:2ee]LIQ,:Ae.e_h9+Jfaua?'\K&"H_;7?CBLR]J.8,PFY6tMTAhi%c$3kWhV"WM#)+@]mTFg\<aMA_QY5FA=a>9n?CmFKB8tGEH$KUJZh![g]K@\tccXG;o(&lp4=`)2)QUU`NR\m\cCf,W?CmFKBBA5X%H$NFsSs>XTjlKWTF]Mh?6/eoX4=`)2b0.-^nuTJd.kf5kbHo4Rmo!Y<#)+i]S<]FRjlKWjGue7CQ'Z.Fj]QkSel\K.QY0,S.kf5k%bHpd1XLpYG0@.eaZh![gZ22)^=Ihb:$jsQ9ndg5&j%Z+Bm@pVl0A^I">kkRR6+cVOVb'H13VoRI?WBg5e!)K73:_%K01O]YKc8e=%L=C<!;p>])o\>2Ure5Cs%icN@IW]t>:-@m`Vrk"+k43`H$g6fc%>U:e<B(I,iCUO?nSnLR>kQEJrr/a5p"Y:WQbq9l*&NBtiTeA!%,Jr!QrEDE$X]-r=JC<_h;]5ViiTB;%0<>,]qYK19me]@DB7/bJl9/]8rhZ*@kpiX@77j6;.<A'F[pE26761gV1mpJRi):ifM$?R^%:4=\U>cp9<!6[g1HI@e;P*!gOko?^.`Fb?N0%7-!E]e(c0"5kWW>0<2Ls:r*RnV./#gG#$[-cY3h#':>3B'd5M;ibO2:k_aYtS=@%S\)uis4Q/4NsG"96+03:BAVf<E,JC6B'ceK@TB`^5HjJLS?]tF@=(Ztkt("b*XiL3">2^5q@!:MaTcH+gj]!/b@`Z!U_52E=NP)+%Rk.2[7Qtf`5S<hQ3>0I@)9(](b(>TC67Kmu:N:fcP[[G(?9ZW;4=@#%#BL-'_R<e9-VJ9%g,MjjhRIe1N]fur5>\sS<kCJ!gDmHB%kNq7WD6'*TrA6s*_kd`\kN&V'c)MhWHU9".AKIT1nWZY]dI>]*0JmeekSWfXn'Xdn$QR-D++4lRn]dte%l[/Z7K,`l?f]]kT%7R3%KT2L:Sg\,]L9`:?-V')q;VC79j](_q5okb<do&o9S"^aAK_d2BT[m.T2:%SK1*o(uZ>p*9QC(irar3UDVasIKP&BK"a,29Y8(;U>%$>3BD3mom\/s,bMU^7_=ZW.)cU'BsU%60J2\JA1c:KAjj,<MYk7PuqNO]@+*/!,sgBhrh-fpI(PYTr+hKf(FWS7EI]9">>Ql!ur"%74UCQ]o?:DPH0R';-_]+aiYsTDm&t;53^],V_o5)YfiC\b;Npj'20*]:!>DQ_Cr1jf@uR6V"nlk0Mf&+W88=B$4S$@)9A%=WdN3E%Y\'^bXgY6X#=g,\/X[EE@\(nCd*N^&$M4*<ItXk\p;8c@&(,t7L"7+)e3pYNW>5GlYqYS1Kn:HWl\LR@Bo/F$WT?7K]d*%"`j2;T%m0us\giZ$Ucm8sS*ic76`+*Y@nu[c>Obtb&nO)m1M>Yn7KA7%F6m=T&&S*ZL&K,,%>p\dI*GnSOf8Z`3F3#_m`\.(Y=Cn$aSMVVO%lq(X+._CO&$Is=dIPMJM"\0KDQ8EhXLW<^LI*h\XJ@R%-SlOpH3\NLdN$KV>BT<V_H\+;l8p#BXePhfu_75pj7\Q/RMLprXJff7&%N8NZcK!d!F-=JO(-(;SZ6rNT;KI9#9:?Y'^/K6De.?4ur;EW6+YtZ/l:1pd@3A`GTa_?UJ4sDOoWD$:B`Wq;_J5EFAhER$d@2FiJ%!3),]4b2OdW;"UM&"r+fAlieOIQ_OQL2tl$s4>lYZb67\[<q>i\`^-OF-k08GO;!0FKg#X'jcP@(XG6ooq&X;meN08BA)4!9<!UF%2.E`>i_<!/_3@-LJW$:a0p]3rRoh"9[^#0mfkYRFSuQ:79PJ#,VPJ+,+'<&Dg_Fm4>"2HAZ#!+%@bI2:$5l>Uqc&Mr>+<sYd[K0*%M,WYpcdQ?QL0-oD'%aKF"W<S>=k\OSJ<,54*%?h"`hl4nZE=!HU7Iq"S^2V>,g`e,-q;(nCQcJ:<UHaE,79]b#jm3LqMJom/qa.>%p!;7a2i#GGM+7ATX3Jne6^1!"Hk!:Q;')9TYZS$0AN\\F[@QW#<M$1[#c=^9B9EIC'=irtP$*rX8;_E,B4[Dt(aHk!)+LHiO]ZIc%<(U+j=iNm;(*Cph0=uWQIAUu<%Bt%'g'.i>/?`k]Z\u*r9.IQYEoNe0Elqu@V6%elBho?j\iH$2b"O"%iWQ6@9u@9o<#qDcae;:J%]T)\OHBqV^Enm`f<bBI+5FKpmn^E[Ic$rl2iQiWr=e5q[ra>h_2sh/@#PgFmbtF[=<n?hcc$pa*me19<J*gnFRm&4kf3C?4Qq0X+%:DVXYMKRG'22cY%3O_mKdI9?rUTmVKg;0D<b*L2A$b<39bR'KM'+<i&`a+32IQocB>fGc'K.gE>7^N_3#]9r3GM?F2$\rLIP8%'p%_bOcL8!WCKf:==iE+_%T7D-ur]-V?.U?2^?LO)H9%Js(&N5V;s,h=dp*$T0C>N4pf3cJQtB;Ca9H^Mp@_Bs#dBmA"PC*GV?3paL*%q0+210Ch@o+t%+<CF;1=SDklWlTn5QEBHcGkk&pd4:ZO(%mL<5L5nITd*_#$mHrd"2&[H3)bG0&.gJb."5pXc&h9O),Z!c9S:koF%.\V"u,Z0\G\eEHsjAQ<9:ST-s8Ob;&GeVK`T7Ne:4r,/9/[@QeNI6;_<ph?WVD"'$9.b9p.<Lsfg?>&dE]L]e(90u,F=#?8`5.;U%1-%0<]qlYAP2^N+'pg^07UV(CEK7GM5#tYRdd63^Ia<qHYq*mfWmnU'PlWS5:4cM-$!BjY._$oS$:S-VN2if+CQut>SBBFE+Y$9t%BHMGL(.n0MTDmH/:D&OfIb@R?[iEa`KgcCs^FFsH&Xi;h/DqV9DH,V0>f:WiJ=G85GG:GY7\%Nq\W,f#7k''5_4IMkZuqqXNHps5%e_M['X9G'CNkC;&P49jYbRJ@^S06.?\@mFr7of59.(f"R>!]8qGR%7^MoK>Krm+Us[?7bT$7aU@MRH=mEejdlO30g"?>Ee&H<$\6%g^A.1<Rt4#=d(8j=NedZD62Mj"W%?Q1#?55m@?YDIFRa4*M:aJ\HV)dO2t=\$%pXh'fnKD[F(`,$nHeNW3BZ-36mRH_i@rU>ZpVI%$LVY<kb:VN1AH05C`q+dR[0Bj20[Hde45XG*DK7l#eMSBf'J^Z6kQj@R8p*5;>`IW%c*:l`t"LK,*Xrf/fFdu:JsJ;KI!VtdLf]i%(:GOnnfkq<FGC2D@VZ7mD$e+b3h@&UK\&,XIODgU[rX5(L^d2:%bhr"E2"r=a*lVVr6!kaG##XCijS/YgheL[Z^-$IPKgHh;4^A"%X*SrGn5SMP'-sJh:(a$FF$uRo)I5ug#?C"D,<J=a(Nq,s%OJe"3QoDT,>1_s:1AQ/`5X"9N6;tVO?G7uCdTl5'C!E-hhgDHjNU2(%D0mIYJO3+.2J\#gD3uR];;=7ugm2X6Q4/]kU6/+q#Eg*RU6^?a3D1)\2]G1&2#]Y#d%(i4,h\G@dB98h<3dmNPc!"W6k1aL&3=5f%@YJra84%]TQi`s,(uM>VXaFo9OP"lhG5t-8)tu5EJAj\X>IUH2\d#+O^"C39_]:[uTas*2!!'\YTihhP+>c.em&8%9f>5`tdiJa9%Zo#.]%!rqN%q;N>,9s?ZF2W;5NX+:2^q>q_%Q<8U+sp#0d;U@-7:NS=FZNuG#kf.^>j97:]f5e$\t9r026_k`2C!$'eIEpR2[^U:%Y#ijnE>'42<O.]#1"%[lV$6QK$^8lFeZr+`LFt&P0VM:,9%:&jM(F!F@$u@&'(ogeW9tP.AM4BYF\bN%4te8Y.4-1-A-,Z!QuE$X%Wo*`</3rW$:c]<srHBX%$;NAWF*/JMJ!Xm19(K.o^esZ`e=U>Jj8tST<&R:qJ]J'n6:`k`8dQsp`;CGKPZ0rEKd8=9GnlLlE$VcA%1T;+P!22jpPp)k9&`j:`,hAAX'i9T7E(.pI0W2BS1nLZAKFB8p3D#mQ&>*'\o7_mDCF&a)e%<i*XFSnAcq?FX`.@?pq,DoA$T-su%iR]0DnYSTs;[(JMTF""2T?8e&:;iAdTX>@T`XCRJ&TC(1:0nmKR)ll`pc<t4[61^LN-`N\M(1F%Q1gqIAnS#2d%Wur,0N8CdD9Y.%jRn2E&j865&dl/oV+a6$ojm(H`A'iD,,:@^dR@*9D=1ObpFS0%bC-)#:VLD<!_k%p,GHu^'7[;%ah45@)t?U*J$P41s)uLC440WW%1&/?al4\u?B0JLVT:GVnOCflhln^j^APbAAFGsE%R^DqXA[Wr6Z7#@AN=6-t/DG.*'QpG48&r[Vq\j$#W,!']S:5<@L)Fde9]2]n%04*6!DOoaH#Nh%<,NOP=DFh-/$o7+$2l%NfHJab8@aY*7;>me`BV90%JXB_r)!4;lj4H]Hrn?-fm.rPq]2S0S1IMBY1,.HV>!fo!%/WNN7T'F%CLiRDj_#oOGX:*lFJfhqlLr6@?B-IU\V^-aklbi#+R**L,/oaU]Pr61`A_>gM95"qs(K0ZfURV,r4i`=k?=r'7DPl>t%<qM^"\<\tbKK>WC$r1]UD.H<WM^0<sZ7#fPU+oQ)82HctNT7;2<bjG.hc*)*R0:%@A]ft%CoUgN,uo;'1qG]<bTp,"o^0je%oF`<%VRs7X+uIo=BOuB#(U4S.Cs"]6_J9ci/()l7`!/RJeB&1pHW52<n'NE!DV:[.HZTrbDD1ld^$lt2g+&7l7<kAtfK+n1<s;V?<Eg&8%.rf1SOmPa%e'Tb'V+Df37/=HYc)i%HUNeSp5GK$+E&6(*2Z-m'_HSdcD3@gBq$\OP`g5PW(+&KWHlFGB#[(:m]#YP>ki0[2@;Qu)%[tHUsL-#P;OOs+>3qcK%G4umqq^E8lH]='aP`";17`TsM`U7'-@m?f!GHZk\Ai?%TZf`[9AasLbcrKL")>tr=ZS\e^7'38$-'m+F%l,<N_+,J"J\s%Hl;Y4-.^5Vi@oJC8hF8bEG1pG`F(=kp0,--DLors@Cf\AE!liOcN^bb'<_grrqGJgRJ'me\8(GK_5!&641YC0_$%<a)RFpn=s-`5/C+=hs3.2bH3<%H`)T6hD,ol^kbT3pKm-%'(44l_U?jiSqmD6H.48?M-.9Nl,IV90Q9S2f_TO+6d\U;e$(-ZKFu.%6,AQLIWL#5c,951j7V7&5Q<b#DV7&8S#aTM_o(:`<^3#?n(o--+0U1Zd_@;^0m'H3L>T32JH,?a?9f#c;(Qc?dEMXe,@19nr;47f%k$M/<ohVVQr3'l.Npcr5DrJU@FfUkah!,>Rg\/mO2I?:Ynr?oQ)ZJ<gn%X8An#?-?dbeEZMR9G!i6)*;<WOZTISZ#cKncaKi#5[8%]Vnn!lj:?QA/4qAC4oQ_VjE0&Y=&nE+hc$*!*"*s79uBd,P7n7;c=iFS!Mtun**-<"QNb_Y3]'eW(h3JL0Ah5hPGPK[&HfY%6#I!%&Its]CaBogh.BrE_8DJE:U:b`;s&5LKdr(a:"QYDL1Y.U@gdsL<qtY>=KU\"@r/3J0@7<B*X<;nX*Ig!Z,ZG?*6iFZ?M**XTR4@j%;U;#Hg96s'*q5bC%ERk8]BG_=orU`>7]7'UQM]7^$Gq6MQ"oYge&S%G-ZK,?:2^?`[26Uh+?3=@2qHM7E]Y9^G,\Wp(OaUMK,Xpb%_8D7oL=ok>0MM7Gb:*7G#"Apt*Rc.c*bM*s4ja=oV)a1a"1YMGn83IpJ0WuS!#-R9r5S`1"2m`U4];<LlCoA?K)teEC(8BL+>6iN%e/5tg2>5[*cZ;rnG)-/Wdg5D5gC)XR(uiVb*rln]n4_<,.^6Jd%C#/DZ=*VcdE;MK;P*sEl;_1'Ls+NSDTdD\j,0]3:>9X,!59f4%_H1J6Zr*<e<Wt./8Vo*9BN*Jb-(%0c;&t4uV)8bY)Rm(t9J'q2qJE\kY)BF2d6h?d?IocOL+_$AkXM+;6(m2P%a_?`RZsOJI;L[3%WKe!u_(?'oY*J4^5^X$7fS#)rmA1h1_^MjOSSG+h`R;QHTsJSnUQ!08]uF4D&pgVoo+nBc(b9#u\,fFYjXhWDeRJml:#:"\F^mT=%J0&PBJ-4H1I=_Q;fB4q$nGPO:*T.Cj[4`Gu)67PN)kpDNa=@FH`c(\GGf/]Pa*?BDi.So^:%d2l>(jb=#34?\JcTO4h2!HdB:oWh%Si=;O=WKu0#mS%$2bZk%:5cj3e*DCqE1SHq%'`RrS'`-M1XHsc")":kb)R^:FLL@W,Nf%<jI:<];g?K4/7(h+_7>5aO)$[pQ\Km9%LWC.MdL@uZTuJInfl]9BD2nu@kRFK?UUah,B!%Fp>/D^+ZVGWGXf:?bC`lpo"4@^gQ>_+DQ;maSonE[B"B8rO3P]dh2mbf'N-:sI%F,%l2*J@4!SXE^`a_Y,kd"moH<eI<)*nP$AK2t@6J@)45DoGI.[$QRC<Y-*^+WEfK>$e"\5q?9;2P6$RDC8jB!l@[OaO!P>W?L=H%l[6)XV7%8n'[#5OH=kT7*Sc9APN,)6&_mL4:)3gKX\kG0<n$RWeT&#/J\W14MCUJeN/J=_6=c'+).72@$\l/X#5)!%2)5_QL+"3'%`p?E`A#'#I=DG`10HVSR8m!Q0*OgDjRg_=5HqM#j:+:(R2OjKq$ZV(M!h!;H_i.S$39&"ij!MkCB;03s=g,(X#e1Yl5RX19Os)Pm%is<k3$Og%!FW=L'f[ZOsW^),tM=\r$R7R\2*e9b9H`[dgTTo4TKPmd/['LhFBd\F(dnYRrbn4j7Kpu[?[df&bdk"'Kq-<a+>SD.7%`Qn^ROGb=UJgB>s)5EduI:;h8r$o5T^0b@DTjH%56T*'V$]>L3'KeF44-iGSp)?ENK)^T!$j/,@2,qaZCT(fICM'$?j-FJ8='E&#%GZ9S^KFQ"55QEJ4)F1drK>JXHZR2GQZINni#jpo-s$g0OUo>J!fHsGb\E7Y#JH6$sfK.-'[u>(c3nR0NFm?Vs2`6'QG-(Ahh7XJm%a.a@1\+^sS(E]j<@5qBcIoTEW-rZ/dJ8@O[s1$Zo6+A4m1i8$?%7T%)4ac6`Ho<E<=?BB^9Fo]Rm2t<,s$lYuW@TG(,W(pBS?AQ_%643ilh4Rja`donn!Km%T^RESo2if.)lh__L66HWVl\5EhBoA(gMLfZ(cN4uncN;Pb!Cc-c#Z)JK:-0"!6tJ5<NLR)Mg\<baTa#DZ%(pl[,=iWs&SVBW#UW>`D^^%[C)3KOOSD8ddn,hlZ;Zj8MTL[^.I%tOn`47)o*+7e/p^Sm+.[$YMQj%?kfIYaR!6rDd#$UI2cjCDU%hN,`M[2"MDg=DBX[8"K41pnp[/`9J;k!rgd!%mqTQ("/dE%>][huo0KU5!pp1fr5f$8=h),"r^BEb$OhYbb>V]&.m;ggfZ*L\ngd%Xh)%BoQYY0#<T'#6]$e1Z:VGRT<I$e[I,ndm0t_DD)o40b>,+]I0R$00r[=U]2jIZ8CLk.4r0]LnUcBpgE(O&DF@!8dmu&8^Gkcl%8A=UW$9\hTqrYsO=Si,,"$+E!j*T[(eRfe2<S8H7p-NZQ0O^UdiFe5:E4I;.%pf+>W<4u^p>(hq1r**VSKD3p53"s:$I,d'ZMM>d%WqrPr?[b^\R`toTX3CKkX)%/?Q@>2Sr@hIPI^\gn?&-\Bp"M]ZKE[HeLc"*EO\u&J\qubSPYn1+hDip,k#\r'/b=J?fu$A6Jhr&a%/LuI@N(.+bqMTgQF:\/pJ%b[[Y>74X3nNW&:9(=XQC0BN?R2pH25V:4rPhe;"ub*`Ec%iWrq=lMPjj'k<It+3<T.^t"UIq)=e.NZ%gF<[!Ea(u8D&$UKX,s@&F]JZVoW/C,B7krqR2UIP'mLYAgsU[3F\UR83)-go?V;\^$"q(Tip3<O%anD;l_5#P_,fR]U(Vt3Fej=S%4\+&@ckS]&[J5L+b.DP+nVs7YpXRdQ)au@HXJs/tMH\G21i`/bpBW*gd<SZIDfDPcn"p`Ta=BhX;^K/?=-AT@8phke`;RWp)a!Em%R;FtOVAA'N>'\^o/\Y*3ii\_RI&!XZI5SG-7Suf>gX'-"hKLg;]^r"`!"i5Rqedki$tY^"Vl>i0:f^.KROSUHAX*8jHarG%g;j^l%SAKQ[=WP%]lQEa]lGsE=#Ni,2lGsE=LVHM_pqPNTI*t;e!8D'%T'sj/RsKB.YGWC8p%2!c:HP'2l(,JYoJfj7)dKE\"n)IJ#Q_;A%&?2,R.&oj7;Dl!^<9'RG>'qoeMOk,\0jTtP>]e6?dlVh<R8$UUn)X/;bGLlfam3rE9f9IYB7!AL/@aMp!r&3R(#3G#:SBqT-[doG%']S_1dUuKSTg#[#SMo"$n@K+b8Y:RHG24k+@3C$`B5h<1lE.^no\*?q>Br[%[]QL;nqu4B>>O[+[@@*5$2ERN!M[nOF/L)ibi[&4%/7?u+60\$jIAVZ@XV"L'\")8YOti?O'j%6:)ECYZar9?A<0PoHF11XC4=U=Lo,!$/gH3)tA$-E7CBsL"V0i'oHdbi/j7^QEo_YJ3%qY=`s4aiC*gV,'/;*M=k/DRRKQL,tfSu58:Xe3'u9Sn1'I!4bGH1npSTk6KH36SaSGl?FLPbXscbu!n5=&JFQf=%aRq<+i8?"JG%%l/$J^`:iZNp+Kd'70kKcp:cnahMg+rSfDsb#4E?NcL*C`Cu!H3pRZnCmC1Z=,E[9V/*41@Sb5)!ZZXj&&jsksL&pAF5'!"P.fL5c%,[61_`[]jjmS\O-G"CtTatk6j(2gI%$V2\sg:h]D&*,6H00XRemc/OJ#g?qYS@9dQ\qk+D4^#Yp&h5qo@Vd.Q8o%X(E4H+dj]Jh&%)qZh<83)GurER3N\n2h/aYCg54iR(K.UqT;e6"NNY_;9Xf&?Qo>mi%5#aXu<&mepipG(I0KN"28l4R)ZL3o6Mdh5t?nP$Ita66IT%(V;:;Q<U(:$hLqd2LNhl3Pb#(Dr+aV*Dj_&I<Tm[!+'Vf9@_<^?Zkr89(f+44-P8`Q7Qr7]6Bbqj:`LcC/c`SkBQMFYGrX.3nAcb%r/Qjh\(Zp"LRNnX()aMK9*ia`#YTB7iMtu\%2[RI%C99;K]^9kXeW?D1YB]JHQR/:Ur+7C;2pVW>.sUc)fs@!`M:PNTAOD)?l7rV%nI8.cbSsjp;"pS'97Z#+#Z0;4?$#kD?OKigQ@Z-k$mdI\Z4g_$4r;(8,9CJ0!Cn[\"Aj4]n%CIMW!fo+#mqC-it]F*aB!!5Q>P?-%&:qoqL9?'@(NSi$]u=(>-(/*On-o-YQgU\>?O8MtpF>VK'GUOY-n$Y'qm%Uu#8"XJHuNlhi@9#Gn370qp!PF?o$'L:q>0uRiWK&n%7N3LdEoE<Hq.?>.(GGCQea<=k44H4-IsGK"M]*&n^;cOm=/,e!=D<K$S@>$E42.qh4..=ZaF8sM[MVKP5t0IAdUY5JMnPM0kg$O3%_G@n6[2%d.MUAF!D,Jt`NG[VIWlUoE)M*/%9rush]uJh8=Zq.,O85gAX@^&.*O.KderVak4;\+'^8SXrmj$Z[6WTQ>2-H.)ZUpDH%3Jr`RS9_2@,<+9g9sJa7[YnpNCThJpF<.]Z/A]JU1RiM*9<=+:J;qmD9@`DD,H=H''u'rfJ0&M"q,f_8T64>'+T\irVl<Dn!3"H:%B>Y54376gkJ_\O=;d]<+5d>..S/&/Q]0%$*9hI;?k-DC(lKh.ZVJPL2WFfL81m[9*/)AJtG2\QECX^S=D'kb/IZ=lC>nEUa)9",#%E03rXmBO\J2W,37=@*u8X7^p*^UH_)?:%EqQt$03/1b1^#bRm-HjiY`?6ZNR]tK)rrPRTt=5Vo1&!m2"`(BkMC>djnGBIS+7F?MT%eaUuqGM"fin#-960=m&i4lc=o[VI-2QB/cqo[u]eRD7kWe6AO.SI#Fi*D\q+dP,;s09;,@+C?;2g'of8jF;sag"7/shc:Hb'#_1!%KADu@#N%[NFR75-cb2nMJ<N9[XuEU#Es(?s6YF4,;"c*GnPT25;f%I9MEXHN)gkkY.-s[':V99VS!I]jU>E9NU%A]Z8r#`d0;f'8%+.?U#`t&tDnrftphcuhbac'6bR/)hebam\6NS6L[^T6R"0h"u!_D]._!Yb9@YiD;KHN#hf;>-6"9=A:3HIhsOj==8@gtOLk(6%<L%![E!;J.Y)XJW\[C&NDOAjf^/FL%,>\m$18Ul'5BUmM.t\B!L5%.cuKX.6Wm0Vc^H<VJ&SK4&`LCNI??XPSphZ+&,FqQDV-8"JEt;%q7DN5j\mI*buDqr=Lsd;/QGLAo/B:Fkb6_].;$cX4[qnEMFK;SOZ.`GL4"iW"?-U95`M-M)UcuVjnnU3F*dt(bRochqT"[`M(l5p%p//F:/7a-4:3u9W%/Latdt5n#J=6RGCA23^7)`-ukTN!5S_)W'b\!_`R7mI@9oV&ADLJR(D9A83,JJpKdo9H%3XpOMjP#R'7Iscu%N^:_PhIH=rL>l*\\;bV/'!HmG=.^ND2c63;?';kX%"RoqURFF'kK3VT)F7?ZEd$o]]O/!Mh[+MdCNF``Uh"3(&Doh>7t$1]E-1A3%2I)3Kp[R)ZHd@<md7.D*5J)$`4NdeE_a86Kh3+WgZ+dq(]1&q["NLHHdL_D38TI]2>H@0F#%4YHgtS]EnbjNHSDlEgIK;q8/NtER%0]9p6n(!6MCN*c\cS;[,#*HcM:&82Rl7EoP5Z+MAcbSBHr>8b'bNu'O%m,N*5mnOeK(3br].1iZ\X2jP!fX.Jc7V[?h4h?C6)IrX%b.Wg`O,ZRV`MO&3[Ysn@Tf9E60*SNbCEnQ."q?EIpCo9f_9]9[rgSU"?4E[ZI1#8<'h!UU)c>Q4!(:&F#'E'Acu^>I'm,tGg3AIi%K#'U&p[MS=?aN2hWJQa989i^."#J"`C2\r.(nYQ^AuDc*jG75anm].Wb>SN!*`Eg;HVZOEk]sKa7e]Lt'j\>_6AQKUL2eW_li-Kp%W&Agg/dfg:hiZ_.&CD9-&;W50"t>qP_[)gsAg(6].520:fc%!-FO*)B)A$bY^ECF'@!=hKE%<U\,ML='To"]$DFp<$3-Cnh0;,<F%N4fJIi%:)AWidaR4s59mOL^AW6&Y8M23E.+#r-P+d0,<C]g;)Z\e+t%Jcln!#\F22M5#t`]"TMVBL'B#:oAtbmP-&J/OCjf\%lfi%.NQaZdpbq?Ci!%?U7/d^4O4_=7^MDM+[$k'CiC/rM#p7tXR/-DQQccO4A@u]BOdPYCjg!&=b:(iTo68,&P$F[.:Ar]0hFnMZ8od(%_U-7^U3OF07@608Y-T"W(of2`&G-s[Ab%!=YCn#lP0h_3`*hStVULs,aF2\h1,XSqH=S,bgb^j75#)S=W:*'VZ\.JcA"Ei[4+,B/%ftgrejBZ@&dj9.$c\H*;UYiY[[BkKXc44X\oO,>rLe*Wj-Qh%)JWI6NpR+^=DD[n3h.^l'bZ9W8-$q4=P\`66;fT.3R>RIc:6fWR%SLWH33`gL2`Q=;!VR*,RXVg&Ul+u?Dc\IQGIt)T^KClra&NbsQnZ^<V#T`nLX!fpD,)L0fhDsPp9DbD0`3)*07D3=Rh8D?HMk@cF%p=N$0kSOEZ^q11-<E+(_gVlW4qmMOQG%fdQ!9B&1[%)(;F%%o%bs3E$%![?655s5tV0o3rd$M0^Yj3I67cGe!Cc1.r`L(OJi"ei;%A+gV_n^IPk4[n];n:NPeq#dR):&bF?Vq/9maJn*E#'0=Tr*cP*V4)@_.>fO)!%'Mc3bYhe"q9\g(qFd?EQD+eUU1g8"fgK8Vp.aq%XXMb[[L(6Gf=H)p,!gpV8HIb=n8jSg"[Hh<Uai,rMi8Du-lPTR$'$mnKZU+<JY&5Ub_(M44W23fcFkTJ9K/+bieY_gZii'/ll0fQ%lGsQMW$EqukF1UJXDLVse`^M8#KdZYiRdE&60ZE<7gYkZgsFbfhTrnSnU&SM\jLfGI#MU`WB1u+J12^B4J9WRLkp=O5TR'gIEUF.%&/PJ3U+?ADN[""q`G"h)`#+@0DD?$b=b2H?c'd0P@rdJ6Y"5KW)h^K&a?CXIio^p#2E:ea$qMEn5+V?[^#CcZK=(dnGm&?T<=%Y[%0YeZ:SuH/Fg,8VX_rV-g-FQ?E1@)1tWOZ5mo(#2*]8deIEP^'s@n*&UYplEfO]oUIG*McPfjd<tLcr!mk4WR%VtuE]LK4N2#Ac,h%gP!!s<(%K6(iZ]">;)+GjUe,Sc;s)]+<gl#iQRI#;aWS?Hq!*Am<1q8'[Oa6lWY)l0Qn;B@S]%q0N,'1W[9!A]]MJVW-Y8Cd<C<b%AS;VMRT"Z7r!K7]aEYOuonX&2<rpP##\u/8VZsMQ:gHa$6:?IQ!Es(`h&&VN+gBn9[6/m(B*7$l*]^73n$**T)R<a<"ks&OImS51%U,Ii@Y$ctsTMi"0>4P&hSu_Q$9gs6SJTq31W$[3Vb[7S3q&3=bZ83+^mLX0O64k3H>qHe,:3M5>m:e/63&[#3YT^k9$q(?aP4g1E%*#NfmHOtIVJY<r67$JT<PpA1B''iN'TS7srJN63\)Q78@7#2,0W.MbIfrYcG/SugS#i0D)*+>u]Q5DP\N@Zcq5RE=`,onE$;MSb_%W#qC;O#<\L2s=#,(qsaQPD1t`/aA:W(jT@58uBRm;)*hX,8Z1Y*Ih&,;ZOR);N68DAuHS,1E(+S`6pWqS0+Q-M.rrs+0[a-h*I9c%5g2nr_s%P"Y7/iq_ttKPD+/YfeC]I?.AWu4H9ulhC:)Z.:D!Bmqqu`/.@l<n&3`tl_>=:02182C4L7Z)5]2G"<$@Re/^RI,l8F+I%o6gA"=KoB1\Rs\u.4KGOD0;Jl'p@1/KF5'1Fn=W?7]Qm#V5g90*+a5]*.3BO5Mq#0!(?URo!N`c6qD)S_VXM!M.Qca'HGT>&F^o^%@Z$'H!LKTOP0snM5pY"?Q;G0AE0:sSI73QCIRGVCd]0I,e?>c<>UY.Gq5Yq`a&(5Z,gi"2Wf'9W&*.NZojk`Q4jhB[U4C"U,nI(h%jD"-4]Fe^CmKSm3!A9%dG+dV%A'Y@&6!4n,+##>[@WkF@"FQ,GM:B?VU-?dhfLp)*.+_@W7G'A_8>`4r_a"M34#Y=k\)S&cGTc3A%"ZVG&TP`lr,L)5Z4@G7`RqRZa9Hf/TVXV-bY/ZdI)'ksck,8GS^l_2p0-4a8W1ZL:!1G-o1Dh^;JtJp@-O'L"dt!:PfORK&-.iDR%'*niU[$V/;T^N+fI*[XOH1@`O4U6T5kl&k,_H^>[d^iLC?[.tt\H=Wf;3r^R&&9YA^-QSR`c8h+=?@'jj$(?e#R%I35WLOg+X-_D%FU`>e4\h=kEe+Wjc)K&n@V%g[MCXK0YaR6n0!qi1<N"0+L1nrf,`9F<&NDV37fao2be&_=VP>\E!_G9@(c4^(7R0(d)F8sr,5fU>%_@&NSILhE_9[H+So!GKs;T0>c_J6lVUQCAh6;'Q&!Og`^S1de7^Z#CT&n'So=BhK71U.Rl^lt58M?ULBJ?MBo^k>*0C(Uk8bV'X2%@*j0COs1cOL;8*Hfq:]0Za%@JAjrf4-ln8Z#UCI!G.TZ;UUZKl9R<E76AIJ,TFq;,G\!LF7-GPpDi0L(]ro&CS.<*-ed;^(,qg#O%!=+<Dbu+UHB8&)I%`5lDS5BLP"O)k[pF7P48Fm`M-ZkaBE)\gu;sQ?LapHmSK\;.fE20Bo'bfM_+J-OT9%=l-c"X3j;2CSN.c-%6%-r@A9,hsO*Kp`$i'bg^Q4]G/^*>qS2S.M'k'0-(D\$a?bGVs#`6GU"m<D\3IpRr?gTgParXJCCF7#JsH!qls)&sa4cjLO]\U_&WQ%BN.k8V#=1_!AdhY_+G%8\KJ)=!jm\I-B^^2KQsbFbrm5b2b"^!WiUfp$8hEQ$:.gGQ=a*)TgM1AX29IVD%RP&gsmh46AKC)W8[ka%F]Mc2OQ!<A>ejV$<D[\/o)pL3?2tO(W"=4TK>Ij.([rr;!CU2VO;nCg(PkQU<K7CnM#m4TX*KIHL;(]0LqnOD#%:"@M#ih'=1(X/%!ENRgjdM>u,98HN"(m)M3ft757A*3@+S*G0O3.g)_uM`2oP>\5!A;a'_'/tdW32%IL)r3PK89qe]ae.T0Kig+!H.rHZ,dJQ=D1*5%#X.Rk,Vk$<>QfrnR-5I^!f72[-==Y)+Gh5/+gdJCSn/+baHo#+/2IQfZcmrf6X(<D0Hmk:(bg"\:(Tu*cls)_k3hb+1nlNU"AU2d%&jsGK<P:p3R/0tT$]>DpPq4Zje-48GA#fe[ZHU[h1ZkW&6T:)l01#ae3;$<c#]p?,$4W]+XX6AeCe>p/i2!UF(PN([5Jdp=%6/lX%0N&#.kQ\4g"('N;8e%#p5P"(f22%D`8#-?Zm,"em&<L">.l@IRGO&7D5h?-HO$m`uP6]fLV$9P7hQ#'*=/:%OW<"-WO&fr0YPUeC%#0_/B%k9GiJb&FMW<'?KZi#JS!rt%7>EKhMc>K)HL7\!fM:@'8[6^SmFG<WNL#iHj.XHerP$d<T]oX.Y:RKbT%Ib'@5`m"3Ad"+K%5Y!iA.Q:aid86n!JGrBFk@;&r(EF76%<t^g3%0!-VbJSM@*,*4eCpta0OT5,60\.E,UQX8@DJD9.Q@j.3C"qFE&EA@`_g[l>%74p%E#=ZS$n=4FBE50:i%Ug\Ti8d9nDl)GK#<,;_-=`a#__5,E#:8hEi4N,!46*5M9Lbc\02(l*8mh8>7hjZBi0nHi.(p/7;fn9USpJ!%"8$jMM,E=<p_m(aM<'0t2F/VoBXk'pPoL!UBN3(SC*QLsOos!@f3?>tB!:Vm'cdKRT1u$^XB=?`.ln*_Q&=dU=%J6OFHH/SZ9s\p%Y"+`t#[0\4*q7=."$JqS<K/IjoEY]8$4f9I1H!#OhW[*:*dUUA:4rkr]UO5!T[T*U>m15P_qVOJ4<TkIXVDm2Bl7T`Gj*Njf#D@W%,YkW6co73PQ_ap4?_!MlV2'RN_?`mb4nLTBP,*l)Kc#pnH:)(BI)+RZJfop]3$Z\HnjAH>EE&d0r.$r2>Ep:LId26E@fjU[caE(d%F+<eZX4=iZ7gt50([ND)?4a_(\Bf8X)D@gjHml.X>B8B%.61JJJ1%diN\!2T<DWbPE\EVX]GW*a^XF=UQn!A+fpEG*I<r=Q%4S%q%^CiD$5bB!,`[Xrjp1$gH=6XN"mk'ZIbUgieR"/9'e%]#V/[I_P10+")CWA*mT=;`>oQ$F*U<;_CDj=b,4/b>#*CM3>p(6V]r!<=h%HH=_1$@.1%a0oG!;%oju7*<WbjSr[Jq,6'D&"%7RT#--@*$['rI#0%obo\H7KE$AC,SY;[b'-*AS+mP%@.h"Qf8,Ea?KjhV#6.?h%pg*e4\'!$m[qh>Zgtft#?;-eA43Fr.%H@c/_)'!TV!4XlckW[_4HX5?!Wg&j^S&&WrRe6bUCdjoOr'D<0JsI_aG]iuG=Wd<$XH!-%UnuW3V&BXYA6SaYINq(@hQC/`n%X)-V)t]@OP.8<07$6ieJoH=]&j59''&ZD-p-D9;6ARU2g!<&h5HI?e#-`u).1bj;MRMj+,u7L%3&^6P:d1nIrg!IgFP7"M`/ZSoQ2^*(OA!$:nW9U)j+RtOMXs6L27"O`k;IR7R.drVMS[aW1K3rg^;Z\%!mI1227\]J10U2b>u:Nj%G_r@<1f[M/0)8*(<,/_+,pk3#M%MobV-uV?/dG!aaX^h8n@oj2VKR7CZ<4bse;X<dcVJQKisXt3C[tAjp#^aH4:IE`9J)JIOc".!%plarAe*56]GSA32rJr4LcQ^/X&JJ'VrD,]$c_M<EAL=s6R`YRpdel4f+\lb:l$jK=GV3u_$+KieX1NTM\#[!i%rZ@ra>"Ji:lg<6%hMVEBJMem8d!Y7fGM$MBlS`'JHgHBLg,IVgs%W%]bY*i,j2=C;'0hI-Xt[>*c7<(K1WK8aGKC&$2Z2"=ai$\mdAo8cPZ#,7ehYBV%7\Q4u$9!!b"KJP@q9HdQ!Q=UYP`KpB+UU[]g^V.nNYB9Pa.o^;.7/?f%,m%)Un:.7.nFsgRj:iq9!qeFNaYBtgC"+sW5]Ae&Be0+%dWF2b`Hm]5\l#`#JE!T8:1NCHd[-PQa&2-"Tn%[:MIZ:&_#ASq[DP7M-sO'+0CM730&<Kt.oN-Z]-ebb1a7UfI1n,pLH0GmVZhLB%a9^p2*Y*:CI],#bee;J,7QLmU)oXWtXR]-P;"08N%^3%RW?+Q9;j;RR7NPeLZJUf_@\=+9H=.D2Hs<7]P<0HON_I3IkHe2mp>Ti"%f'[h6#'ML)]V6ElDmct/UJ):o3@tSB&FdIe:Nj@9?+iq0FXUqi,Q/@KY9T/e@PJrf];`--*!>0I9r>&[_VtpPA>p$^Ocjck5^-"m%rLpJM6f'm-1RJB<%Mkfu0u7b\U_@8iicRVs3:c;R"'b`WaY`ZOY"HrS25F6O'YnZfRSa(o<s@F3$(Q*;&D$UdY"CJuK]/q=223ej%'l8RICg\KI5T$,LaoE2YV,dSk<N-_KBN;?5a.WW6k;B37)&9s.^;G09^<K'@+6$9p39MmFQ94/B.*krlXL-5R<4fmNnHM$"Qq)p7%dmNhDI^I@'DI^jL(A.SD=@K7+0W5<KC^Oa?EIs@)kV8[heqU]=W1i\D,flVg1^sJo\>]maCo#93.E6*%;:_t;9KT$aArk$!G%6W9%%!U@YYi1sG<;49F)K,+@a._#DMBoWOd4q;+*#Gq.H%@*>Vsm<'IE-5W[IhbF]5,`J$DYKf64eoteMY0AXWp,cn,Htf:"YWnQ2KV8%$h,0)76q*(Tc4PBFuNB"gfINF;39n`3V2Lm<$gdgDRru@H2cDQ1Y9/Z]1FB88lDWfl;n/gA9""u9MpQbRaFZ&l%PWOC(N/##UH?m%S4G=3&[c!j>3h''M\Dm9PK%i9JRT_k?u]H(/.iZm=io/:Kl];+JcVYceQW[M$3Gf!>f]_GEKQ)#1)fhB`RCRQ/4$u!R(S&ECNa)P%Z+tHZ'h(Sk5Y5jj>*EA-DRgBlZpYd$">"d6dgVg'hHbai?7`6B@CEX+/^%J9I-4jo>!>o>4YRfUgcJ&Q,#J5*_-4$MC6j8c2:``.%oa^3"%emUj?13TD/O+u6;R"n*i2oQ"(>Oi,hBF08D-IbF&rd>;3qIp;-Q)X+2k$p?ci=2Bf*I_bQt[MCe79/\Ls'c3),F)*&TeE/%AqDC8N00l<*&#l;Ztc?9=5laTdo=[["%n,&!>6?4#B=!#6la1Q2%CucYX%4]a4P.b3J]j?jPr4uieICYRS_?c)Po2[C_<0t\3Ni_%;e;LX+-0=g:NZA^3t/.bQmaiYkt71t!A8E/B1V0':l7fRp/kc1qP;5%p4eSds#/$=2:`eu74qiABg9X3T>nmNNgZ?5T8KM77B=Ku%IR\I2X$C^p85-iQ5n-`^[L8YG_4`ZYbJZBY6]\JKcmYK]'GNUd[&E:/+uT88FU9?:JR8+,FmP'<@kljl'=cQ.T)mfc[8reYoc!&D%V@gM2&bW7:[N\l8DnpWrOK$j1BR&O\iboOFmK@]S),2[P\lF_okkhCL2h5ts^ZA7;h>/(AB'@$KAQ.FIbn$?8BOYkAC[^IZ%,*OD%Eo\1\0WUpT(]*;cM!n`p'm$O7GY\Y2\UptQ&D)Uu6#\f;*sKLP%Xa^Ul:N4oUTP6K4%i!0UN;["$NeuJcuju<RZhF=@M-S27^GB(%M:;AS/0Gbmg+g)NPGsG;#^A]`;EmiO"3;/5SmZDsV$8PO.XG/^%eaQUqZ0;o'Huur0+6Y"$:;D0jqrE(..f%l\q`V9?h'sYDqj1O%+5A@]FNd(t+p6'o+U,3>oI\)T?(#"e.5Wmo#S"jk+JV]#^r<!<\kX0a[A-8t-\Z,#SkpeoiOMcCMD^ddMG,mA'c-o?Qtk%TcrP81%VIsqBAgUVbi!)Xkn-i88'e<:V>+eka<Bdh;:I=,@$eDtP0MX3%pl`dt(?ecG.%aZeeUb*,"ZA6ZCeUam8/3O2[6Uc*'#pmS2((dU%[1GM5j\s>fZIXp:HA"a$&Nq"f)Q,#?BJR(WVOrI."eP4&D]@;?(-#&^n01.W?gtqP.q$k0_-Ilk*ODIq&PeF1>=;Eq@B@<IGU.66%_b"0Al#7FLpU1cm&jm;:%gIW2-]i>thgg<Z7.eNn0469Ml%r/G%oImrrTm\*Pgf!*-r$!ZZ=>+X-if8R,l!G+nMAirVeg12I`=o5%ctT;H:(]*t@GhgQ`WrnKZmZ2CrJ:nNreBiIr*-b=n[eCQ&%X0ig@'XX>@FUN_:1C?<]&?DhYLV?`tB(XUo>LC<))kG>b'O3^l]O@%f\o-SLVOa,.H60-JL(arUDQ-Y`paNF%Q9KINF6^@'p!APAcR#kH6T/f3IGat>h`,5,,!=ji"-1h"9D;W#,3tX-)-?Ko-3X\L`2O0%dB:h7Aa0qh3IK23O`a*gjFEF&77r)6"XdcJ&.8%Zd#(qX^lX49ds>KI-ThbaYUaDF![lonV?Z'8-\5P("ZV([]/VBY+Bf_L(dqb>%8Rm%E5!56i,2*Eh\4grf9AJ,519N=s-2>DJ&bi+uPTAOWA&<M+!YOr>%3CM1FGtMca&,u+BE8t)'\FL<)BP!B'_'>'A)WgCoaWk"%d4f1*fjHI!.uL&=)8J-QU0g'U,[gIGW0'Bb26?"2#*kX+'P_/TW9G[%a-2rW^`S3T0,72G?l9VS)$\P#D!!4RJ:M3h%nZmt5A6si%Nos:)mD3D3::)?n,rF'OFZ_L6KP%lqMY)EV4Fu?M35;Db;RQ=cT[YAL]b2$9&4IWck[?3G:G)YWO/R0Ij/Iob/+au[OUSg)WR-+0%j?cul;alP?p!Y?JkZC]0WUb+o5[A,$&X&:*OPuc$/fM]Vmp+4l`D49fJ=q[MAISGJB1`lG#`APQ"nY<Qnch0=G!fdm:Jj/tRXGke%"7N4,#73<95`9q1Vq<[?W`a4jF[DF!m"E^G(5;uIat7@X@U^j=9:\X+3:!!/(+9O$e.S`dPtEV?Xf_l-`@Mp$C4VhH9._sA#-!;K%PC<q97QB\f/(-eQMY:]q:Md%CXVU/H:>q:.OM+M;+\M-?;,(7-WVI"5NV/s?_p%W`Z:<D^Ng+N\Zsl\Xp861]WKC(Q;UM>8B_HV;%/oLpXOQl%2n\?U6i`<DgVbG^N64]T&Bk+>XB&(m>P3KiL.BJi<CC)fNbLEhs.?QAkehR\n`E"jfND5XPCOoYF7'<H*/5/Ir1S!/J%J;l-)HrBe9JNX)sE/*@r@#j5hEmk^R>WKfQP>#=TQ9$<jMsS'cU!C/NM%XAOm5Sq\!5"&[6AIo8mbI_Y7LD=N#U!\#@'3;,8`U\@%,"2u2n8+qfQ]*fl-YS-\&CkNQ)A]=sd45qD'jdd(`TTJoIZ!(A:8,\c#n0<=&Ria)\#L_#`>l=V3$*E7`5TZoii5g?OX?X7T+e%]%GWS:C#uiKEWlosa9]?:)!1:iL:D`8h,Sm-o+"DgGU5bT`eg'Ka.oiodWjUj$>Veb*9jH:RnX6Fh/5I\E0GX:?kA)WoJ!>qbad+u!%@tXD07Z)alD5-'7@'8Or"_83//)5@cQ$<b$@4kC*>q@<TnW*[%cfu29M$9POqGZ2=%=@%+Yt*L`s%(`,PE#/q,0GWr656=JIE!cd%VQf+<\h[&'WM30Q@4)&FR/6&t:0DsF%A0T]g/LF,oFlC%ctP:t/"2M&(h/'0^doVR1"RJVhTfF][@Vif1k&W/INSW[\98pTNShk/%>%M35loWTsX8+.T7>6GP',a*,n0Hs)Ln`#UTBmst]p1i>d))12)!]Hp&+qPArs,[-@]VrEl_]B2]FL,2_/7I?6"#o*"A"cWk#?fN%#])2N&&<p8dR/m[\a5Ch)J9U%Y_?bRK0gQGi.+W17_+(S.i0-1f&BTF8>fm"(dph-;h!)+9WK`6Teicdp;BEp>==@W[b(_K\=?Cg%%ocJ%WnrEG75_-f/081a1uTS;7S/qX7+G=R6oD(+LrrdY.ueO/,,-\&k]#RWW0\9Z[>9.rXL-2e0a[tY4;%qAMD52b<#,]i8Ml!)%/)VbI@WWenP+i4qOX3`r6-5EXb6r-[E<PPQW7-uo5\Qab?do>eo2??lc3capTuA*QV'ro5`$F/.!\+VX'/)Ye1P)n8>)J_]UUh/9%kVAao#N-[p*/+m',/qpM(d/$f#_2u>1d)*R(^V*:KT)mh>lckAm5:Vi@f#J8$ss8I]m59,<HKhu[>=t>,h<\J]_9`K6cI4o5lN0O%e/-@t)q>H+UuRegbQc2GJ?D2KKkDk%8JH8P"Q$'_pu1+.//k]rdI,pXa.Voqr*;(+.p;2hhk8-4^5\WINgoJ2U6HaGB4SZc@4rle%&@=LcJ[`X*:h&($PYP8[Tc8[BH7t67.FqZ;A"2hs\?T(U#J@Vu?.H"*9o8h".h_L8(oe_\W9C$k=d_"^Wa=F=HXt[s.(P'JN3Cl(%-$()=+!m%])d.P%#+qZe".oTN!)O`Ug`5Z#GWUP]fRL[uL><ihBGC*/%o/P4+32R/5BDc+C+4lh;GcCu+;GMm$g``'QW4%IZ<*Pe%rjdaH*#Cd%=WBBo"cOXU'4J'E0+RCQN)9MpHXm!lU4>^E1O\CL=U9YAibC<ml.5.OHNlR7,\\Paah.[J(O49M_ok0=ie#Hkd-&1m%`@0o1]OR8"60pq$2tjLNULSCs0gJPqfin?#a5D?$J[eeg8hpA&g]?7`c9>F&CmoeM*N'KYXX"NkOsT-.j<[JNTP$If2kPhh<fp0F%,VBiiaTuca?k\[;djSfc=F4HC)4^f&WFu,LT9FH)bh+XV^bfbnT#(Eg*Q-PV`d,TaQRkfdG)X2b#\Gqr4()?(`fBRX`o$<#cO%'3%"63#&MO99Y[`r#JjGT"AJ_+W&-=:ZgSOPfD_qH-SJi!+`Y;lNAY5qD0APF#.*A>:]*O!>_oe?g,b2YYCFW,VKf:H#t;9u8HFN-A+%`mr+bP/#Ijaqg>/a2YC6b*X"igTD.S3oXYkf,:d@\/+mBnol#NX:B#q/7WD\-6Gn[:1Gd>JsFHt_;o2&@.HAFRNEc:%4:NFYLD,u%5+#Lk7R!lidMo7&iC\Yui:(r<Zc5q?A/0=.m@9I"gH,5gW/#>KUS9bAjq:1<fUT7U8+K0F`8U/E`OlCj&$470fJ>]cq)`HRAqXBd%O(i[uA[kk(]sDG18gBt*]FVYM@mBcGjmP2-]FJ_,/CW,$9g2;I4)GpL?*I'GdoOf;n7g&2Y\S]H6oIbb(O2LjDXqMAQ(d:1.P/9l%Sb0#$G<>33eZdcjZ+)A=B_FcK$n0-jIqR6mosBsb2T2S_CGrlt)MD*_7%Jq6_IX-Mp&kCYdDJ\7Z<WXP":A16$"DPK1$u2Z.+#TY%=G#^#K6n[d@4I'*d!.<J+25Wp3!jn,,V&F,c(fm@.[%=Zpn5XeVWr\(:'k\N6^EmfZ]R:f)'VT<%e#(DR#8/_)CpGIBds7f9rK=P%-;?"FIYTK/Q'lV4hfOYiQq2Hg`;eh-JhTB.$pbG'kDnY^Q-a%c`bLKO-=f'3iHmQf*4'^#88sG"_&4L`]YTsK#(1_8N*($+P`]'9%?UHqaR+do2dKfrqq^RP"!sTMf\IoMZ@KKa7SkqiaOUM._+s"R7N5FKck_+c-)=X"mBc2apBu'HNlX;N(kp8I#`QCH=0B3F@E@a^!%`#=C]3/J;N)C(Yo+!O@0Z&Fk<:"KQg!S'aC:C%jULQdC/>mV_ZkU`NshU%]#1kG*S6s@teJ4iqrp]<T0'1OUkSU8l-6o2fp+,iZC%kOJ&aPX^J7`3WND)NAZK?*G9P<*G5M-t=N"IqBC(6W!r>i:L\,&8m;6/GTig.262"S&sc_!)ui1K<9]YR/%R+1fPWO=i5doQW(QN%(O;b>.(pHU]TLRK;unWZ<C9T8f,0a73)'Imn1_MK@7.:Op(\Dh<D&<_X;PnI=?LCUc+GE?()r!\c!geHkq"a*@'eK>)Jg2Tgh2gQ%J&.GA@5uoFe&R)@CD[Sjl3u]]VH8rjf013h*9Gf@%.)5@!?nst?5:Ij;C#]1Z2Og&L*>Sm/0<t';#%h8"!q`@)Ik31LfVXm)FK;!%EA>KUF:'0:']$586)Npl)c:np9BR9^GX,LKis\9c)oE'2386j]"JPgnLA>8X?CUegM>mJR`'b\SSAl/8mGSU&&:J#$%nsi<gt3Ye%.mn[MNM19<o^n`BgG4gs>fMSV'L]$QZ.uQ(MO"M:PYE!L/#K%nB?=>H->k9MYaAm)%YgDh_[KO"L)K9n,s_<;TEa#(@NpmC(k.f*%%N&tgUWTrdIK)O9FcC=J/Y?$aq"F[H1^>\V:<P-H%K6'7Lj0G7;Ti]Q)npb#.(-mLQIB:E4)W\/7,t_kojOL9WWbWgTe@:l#%JD%%!)l2'f(c^,[L@1a>T(RF9/3Pp-6ito_-Aj9d//*dhsSlR1%lC`T4$t`"T\d5'Vud3q.;Ya(i0$2c`BI/f$oB3:"8[Lnk@@t/:TB;%9oGD!8'>WNTQj.89LE8\'Hn"4"om\ZTd+f(,19R%+/%UDp*1\\21hM%Ipjm]GS7hh$\)S96rm5c07cp=T2iZ0)]RciN.nXK/Q`(H%9Z/8/Fmp3e6Jsf(QbXs^R;klTq$U]+Qu)"@J&)M<STL-G459\"+m5KZ"_R]X2.JmgPpJ@:s..i)6RuZt**O(_WoiS@n(:,V@h&:q%UBbgrk"d0?\tfRD&-.^-F&2'#ii*bFa(q%j\:!;e$gSU7XRK5H^VYrX!p"f>YMt@5)h/%jc3[@G*N[EDY7/sf]MLHF\&d-]5dS:8%1*6CD3mj>n6\0pZ*&UCgO2!.^?6P$FGX'EU'FZgs&I:!)Q8]+[jcj;E+ru98j*u$1F,PgRrD0=o_ONYaSd,s;9SjU9<RP2F-3?at%+N1,$/"hY$lJU4I]J<IDRU_LOG[D]sGakPeM@)1CW$JV4[<Ge]0G^ed#shF.",.'YGH<BeCmHbK"r+T`NJ,QB-qu.frG.iKOB+a!%D3g>OZ]3nTP4jp]$Ds\0:G>N-paaQM@@e=EmgLel4Bl?P2Sa5D^^FDp?Bt.aL8b3%J]:CpEV.Kp,>L*j'4\_7iA@4%X@@b-R>-'Q%W-'bnrK$,SMo'.9?I"qXknlj`b*r9o(B]+hhpG4]Z]@$t$Zsf.+X6to@M$p#Af+VU45/t^E2b8^)u[\"/0dW<+$*+'/1:NCYV<pn%'X0eB?4&g!5TUhMko]K9Vr##;m=Y5&:10?A$H9d4E6kt4n]JT=#<mQT3[UBSnQ_`ALUf;q`^H+$:k-pI"ILS3il/9Z/T6STM!!$C%:Xa2VQH$Zs*[juI.lnophO#b!l,NAEdbM3!NQ<ENhRLf\1PIaCQuPKuP+[rV`N)JEfF&(PG+G%$I$b2d8J7F>=*:6R?5_uIn&fJ,%AnX],7OjVOP&Wcj?Weealc:nLjqb9p%dO!FAsY>;@Zi;Ldi'\[9hD!efO[@=1#oL;^2NrZXcjf#NNF&TYcgZ/oiMAmK$FaI9-pjD%/''_"n<)'1:n$/=[]OnhrG`arqdGGeVU4#40!qQrd:0k)@>uE`17fN..g6HE.R\>Z+HV#9/L<B_`C65c!V7g,+t>I1Bd_/)_.C(_%)'L`dKM$`Lob8(eS>aj=HSGO'hSWncjH1Rt_UbGX%+7h2._p?EK36He!%#p`'QHegUXIe3O>9(tkm\8]VZCUA9Z0U75R<n4+S(O2%20K1F1hiM3a:U//1B:oYQoY<]J5iX,&7$X*qZ;"?dF=L2";R&E?_TAB(@)@$>ZG9@!%XJaqBFC9Q`MjELW=X@lDuLT=.Cse"nV8!%?%I5cK%:[,)lBdRmg6*H+A?7W.psia.`SWAM[6*hTj>K>Pqqe86jSSrN-t_2Q)+'V66o*J?R!Wp:M;'^"DoHp?6ujY7L;Hi9/.EG%(eZ7j`IoX+K"IGL1k-6NLr.LsLgNd$,f<It]`<(C?tk>7M\+9F$J$m7O]<T"MC9]K$%fnSBOOGm!83<16qJd5FDmM?(bJ=P0bba\%;k6eqGZeuO#HBN,!(=>inYe-8"@-6M1d*+J:fNkq'jP]G9IGJlRkc9%pjnW]VU/`K:akT3q*B'Cd3N4\+4*P`ir!2=@)`_5GS#cO%q#Lc/7"Y"4!$m`Mq111f,=<U+Lb*P#5\u8ok=65Z(UB/Fi;&OlEdj)tW/NG61D@i!L+"l'$Y,!e@_NQ!&62,n+_(f)!L=QOar(8+%"XH8r@W>(eV"4\c=A6Mh,]FVEE>^*$f/3i#To.>)=f$tZiXq-P!f<\61)fUX#$X&"#RDga/H@UNckZ/F`HbmJrW8*+!5=>#d,"o^%9EEXq`EQfNbQ'j?a7oXr0hJ(\]-)cX6F3H.BYI%l7jG=2JEti)H<Ti4X<:([RQ_<W[F>p(r/UuHob4;?0dI='W;qhtkM4-UYo&fa%DQp'mN#NUVdDufR-Qm3k^gI3^4!:t_BOh>N?(ddh0cI8-7Zd-BK&"HpIR$"c;<%n75_s4R^t8l=IUKZKN?8_85h5W1GSn98%g]j9%_i./Dl9QuDq#UIOU;H\&Vm80P;]5a&^`osM3Bt=<`lJXS@+:/aL@^s)UC\0anL7?p:l<;G,fM0:&\S_SE_K^>:)U29kW+nthhA*m%ZQd3(2MO+j@ku<ENi@CO"_23H!ZTlcn:!XZ:in6\d$1$h'7e_($t]t3;21Qt;r;3f)hAB]8Gs/9RR*I,Vb3,,++e2I_70XmhAjQM%\u3Z/$Z#oE0J4,[+f^7K9$mJbZ=IJIm\QE[Yg(U8`:+l(L1<\"i&8iJJ319\"Phs19YaUH^]XofRYYr15]hXgM$Xa;+>.^^6m8^V%N&*b.HPpArl8;F4Fok?&4bPNjQ'A4u$)ka\-D5[[0`guSdnE$oLbf&GVl7T<Pm/Zl0EDnAc32Y=1a\m@An$@lT\^u(8QF<N!1.n%%_T2o%aJEQTLsbS@N!ka<7oYFG@=fA%J`kXkmSCCNrY`.ohSWdu)RY(T&&,C,9HPPD0:Dh/CA=DrF5Ye:q<@n1%mDQ3pk"S&AuduX%%%fm[gLo(*k0fQ6ql9VNlSNl!:tGkoGS'EFM+.sn1OmBh'cEY.OC<XW^]OeldI;">X+]!!Ui0t:&4-;RjHBN,`4GZP>jX?S2j'DH%9d;+^GY*?)%/\R`]DFtl7bSmX`nm$Ij#me4G(lbko"TPB^QVs>:eL'0==I*Tjg[`'8g?'k1h8GN>d2\2/C<E0X+IF?qd%b!'L.&n%Za##cH`.)@)b@8liM^8K8e`C91"Ch&>NQ]g^md$"a$[IqiQD@O8]Wi<9ANC3\V33Q4SgosdYg@!XTZ@$h3DfVU#Duu=9If#1j]Ak%T+&aY8;8HZ9iXWe.V!+iV+8@hf9gN3R<oR2(BWM/BFPRr'Jh2nbEguf8s"3o4*S\<Y.(^n1%N@6eoM@OlBTJa%F\^oRRpPUHrfn@%infusU8ZYDW0+$XJpHYs`Q#NF/s\'_%R7SRmRZ[j**ES^5WPqrVXUi4+*m.>XKXFso=1)cM!"TNc36#=UM:(4e_Rugm"n_0CLB?*%-AlK:+Dqij@7CC+SP`=hLd#69C_^rb%K2Nh1r>hQ+aOJ?(;F*8kZ@doY)L'2)WPoXER.a_POj\*<2ISW1^MRVYJ.(QiYsor.$rq0%\^Af7eg7nXfe#&O0pq>Afk[OF5#S7PkK"Ud=8Q>tB$M9#)2=?WZNQIUT_Sm`DA'74h0sE!,^a>b%Fgg';R&!:dsCMVgM,m%d3gt`%R?'%kqWo.Z%+p5*a%6E.K4Ola""SMkQV@&"HP&;Q&i_Wpo;M-cT(f9Mmfmt*B.>*=B+f<+-g66lPG6u,!cgMMfei=++6YPP-4<oE%VVNPFQ<k)O-<4Vm4p`QA[JmSAFSjH,,.2fFd^Pn945#b%=eDOh<^Z;Mhu.`qQ5@u`6=+PDF)&RiVNT[-Pb2/QlrUlm'5DR_7]WlN%rZV6PDg"1ts'hgj>cP127'CU[-d']b&fEl>b,n"B0=:R.M%Wa.X[=V8I<RPb2EORbC>\,G6TOupf3#=#:^mp5dM`\+FBNIfWu[Q'%loqYSR!+].UdO4FEi4sF2F.("AHS6Z1q)spV_`%&M,,f9Z[22?UkN3R:B\*COh`>U]DWBueOKT=d89N-;U=JE;ap>9E11P*(Jm]3%hl_G<4FPJ4_IpE?VUs.=;>dNmditf8gY7Ke@JDZdl]g*f9q]6!o@*&QWablN93'1hBY(4r8!^/;O2BO.=Ac^,h>M&4A#WcO5!<`]%]DCCW2NbAPn6r:Wl8Le'Yg`N$TaL7)1k/o3_DD'_jfsCahIEsnSW:/dN9-`7@ld?qh]%KkkLSEV*icGnK%4si:%)=@P_P6Ei"6K,%ntPoI"lnh.F3>q5%0a.bq3mVF+#1N,:S4ntn=eC3cboM.:JB;`m^hKfW5O(;lCe^Z#Gd5t<\mQk42`taQr88b1`BcAllT>;(8Hp=%d%@K?o3L[*TUPnA]d=Is?92'2B[(beU[R?k0OGj;2=*5N?J<5nFr`+_ec('^oA+-FXP7FJ6ZAm<b(c4j@1rLN0*VCSh>&2t_XPlI%'su:=;Uk^?IoULGK`[+-m3C&Vl0%#THL07#Z8YhO./7ZiWsqDjquhh^&MRnsfDf13STZ$>h>^UK8\IgrUYTYViF'**1JJ8]X$b<[%N@aDs/XiIWN-F?_46kFeg$T-Tc@9/mbU!5/PseK005Y&SWuX\KV>j]4"3ol=s0lc6^r66`lcHp/HLbG1`pgmR2pqCbY<.^6nLf5H%g[?6PdT(kQfRI"q39fIoWca*7mWYY`)P6]Xmr2TR>=hKBfl$PVe$\]UCq4u#2,3D&"\QLK(Poo8T><&2N04Yss#1`Em=6Q*RCiI%%C;4&VFdcCViW%u)i(1fd3Xu,1NH*Z<h&02Nne(N=s5AP-q\<3T%>\]mB.lT@cL(PQ>PH3$*;i_s#CZA?3DB9EVX#*T`/Rj+p.p>=%0)kHEAaID2AE\.$?Z>2ef"[jFNtW?/(]24Os+fs\s5_/)BI<ZgeRZ$H^`.jp/or:q9:Fgk9^kntWDrhA+'%3f9BC&0e?`hOpd)IJ%*&RQmC+`MTruNd-)XUt@f']o#m$sk$!2J]d,aPJ/@BEc$2jWab::It`0(o$NF"R2_mk?niX_BRYOW]Oj@o5fF^pTth!8"NaZ&Nn=%R!Iu6n&'VIB@*]BENT7r1tQUr%GLj<e:rgd4gEM;p6pF#j7fL):-,b</-u.R",5#j_qo(:FBKUmS,N&1A&5"bk+LHHl/.;Sl'p/a%i5=Xa_)2.=/hOJ&WTp]ZHJV'#4gFM.%hUU'6JQq&bNDmpn[-t_O1l&44r[P:h=N7A^dmaHYQC`]E605d/P@;1fM"9N(a%e.DtM`q%$anM[HXM-l>oe;I2QN?X]kTnNQ'nDDb\5YZ\AuWs0J"ndWMPa4a)^-g2=!UbASTajoqsu;etu4Ka#`U[k0f?m2/acG_g_?<YC4fl%E4s`gOXUSDjhJo`GUI<Kq4bo2IJ7*nILe!(RWp!WWH\6!An-3*QF>,N_eFSN7t4a0A)$rOIh8;GU/e`E.ouWEkmk,8cqt`4`;;D/%QmLa:_9l'7V$Pbia9lU*RaT3:s4rUs>G#3gUd2E@(qC=t\CFFER`1Gd!)/*g"hHp/aG4kD9l,`QeE8<=)S;/#YaS">/3&m\>>)sM%qgt^,A39?F3pr2%SJ38W`E^\2AZ\BcWf:W*3Ouka#V3#<S61U:DM[T:`%p5S$jT8<Cfg&&q+_(g^REHc8dZ/AS#epINasFU/r#m#%CAePcK2HJ>TjpopdHU=.>tnYXO[G%TG8o=\C<Q&>n#sfV[Jr,J[TX8X:%DQ%YFF')PTG!pT$);G/Y)nPKo(1j2QTl)-uP^36YVNp%%qSI7O,lGg7?+-u=.9lHoaS(A/k(+TZ#'HI\o'+o%6^sLJfS92,*Ls<iC:-W];!,@CbLaPn7T3gC_&U;#*a*/E@Ye34-S5G'HFo*%V+V]TraAm.hJYf:7)S.*QJDn"14soOB@:7bAU9pDIggYG38\DSC8VsFQcF+g';ce7lLs+\>nbDcHL(bs'^9`FmE(P#8s/Z3I<>Ad%4h4P$h^1slbFG\Yq@QHXWI[RujKa02lue's((HMX7@jB.,;[_93IhaMp@,]JZYkk"V6Lie!WC),dI-)kXd,rl]>mJH)pL\GrPsoR%]j<pT#GOe2"U]Yh&N4;tP)NN0^Ut:;hRQ=Y9G\kg'"Bdj*V;B@XH-X<#2+B@jV')pr[&9*Zn!O2p[X&U6'N]4eb0-TK)13%?o3Y5%7S]r.2&]S./+lGq#5.AN>f^42*t164<3OnmQB"e#[A]@3Y)j?Kp"?UVV2pmq(!u<:DVZWt:Wr@IJcT@lf)jWW4&%gil,VSTAqg>F%:kfcmJod4%6$W<`jg7LNZ0K\I`V53]fH2rD[_?g<U#b.4h'4]HkK?TFJPs9'cH#g+goVS/Ku)+th7>o[(!9TNkEZ4LaX4mIJ8aFF%VE\=cr\US0C8+^]I<Eo?2IN#iYGe#1kqJi[6YukY2tW'$FZSP=db1&%U7[emb?R&ulY3UDSEP%\7"8o5d<i.(5ReB#/#(E(p!_H.%!))]$1aBf]XGu,iN7.fDB!3XsRX.m5"8HfKD0TuH"1't.Prh$a.sY$2"0d$$brmqsRN@.MQLcKEoi<eh+_B*:fp?)gs86^eFt3r[%A90-fK9+,!U8o*f8u)'RJ+HOA]\D5VWGN#@B;f>n/&b,,VtZ]X+4T`a?Q^)4.sA0QdU$sU\Je`Y1I&;A!W-KtpH*G:>?L.apMu8k%6h0:gqf[:T90ST)c2@S'lWrN;C*QHeIGQJjQ6M*Rq]A1.n`N4Td=F,6,sU/hI/uh8I_?Rm?0kf4$Y"TC^K(6G+hqrsjI?,7W3CPN%]$6ieq6/eEUYKQ<YO&H).[coEpnF9R<\?k(m=B;FGcMhN(2gJ'bOkMd4gf^*GrS+$I"Cq`;!;Yi*8$B/2^+t3N>/3f/,YR=Q,Ch>%Z4eAIpit#sSOlnfPP"hiH)uegWJPLu_I(taVc\F@W!B"W)3*'QC?n'rT2)@5mpt]_.Y1f;Z'))V2PPn?s"UaGm1.E8miL&"Uj'be%s(lcN;Z2EmV*leSp%@,je8P*I:q2U6s2]%(55Y?"CaXBDdVC"I%)1sj<?J"*TsV@Si*YNg\quVG`XelmrEG7DL-e4:m68jn`EP:W%mjA?arT@#V<"Qs>44lbYn$8:j-M_]R+hB5lD"n(s7<;rP3dct4dRKk4e\#Ceb(]cDGA?cPs84sk[P[7Wn7H`!os,L%C`=D5DagQn%&#4tHk0(KdeFM=$IC7i$"ml*>+2(*DK=07Q-bDi,;c:`:Vs;FIc,5rYBp>tkRuQ8h#fWlkDTgu"ib*Z37o#B;)AS.3qOqDoCJsf=%J.fl!YL36%E,a1=[ia/[n$SC\e6ktf>@V0Srk62f/[)?fUY#nm<OmUcrIKrc)jsmG4K=J@kPS$l)GQ5fV<DuB(qC.22qg>Up'!"l%lA_fV6?:&Ed<bg=0&G8?H</[#q,Kq_HDA3)hX"XHQRt6UHFPX,L_'3=7RQp>aj0RI?)(pSm=p">NV)U-eZQ)B0i?SEBN/8?]t3GU%*?)V@(5gFnQ[5F&0?0tJ8-Zf:Dm!mq4kL[D3B"J*Hr$Bh2k'<$RG8nVb,`m*C5ftF`Jsgug(+T-_U_1LZ0XVhoKF8%1oalI^2@VZ%Kr;*uR:F7N5,<n\@mRA:FSYEM&GoYA:i..7h<;<g)^U[IlSY$VRl*)"(_WupRKNFV:VomTNTSg=[aD/-rM89u)&IA#B2=<'=f4`1%_Thp_gqM1ab38-(eqi'<8gMVT8aJM3p%i(nT]=PcM/^q-dghB*LMgF9h_Ni_04=25m=&oiZ-h1Tbja2WdANr4HsR-42<kPXQI!k6%5O\0B%9j$$%jMmNNII3QfC#.I/IJZt^F<t5k*W!KkNPhC0f-o(2HokaWt(-/&,itM6A[U(>ok'NNKWs$QHal.FSco/Ap;92c1sse%oJ68l-&nqZejeOT/lu2N?\o4jUWUWGE6<>B?U.fP$QbbgC8=(=5@/n1pW%KH;T/UBU)$=q$"7XGIHi.mU\hmEQJO$PahV;6VKfh8%bt?="SR\uS]\Z='mN+`jR;l)K/V[c3[8567^1;)fhqelPUG+;^(D1^q&$N<j[1kMKmpDDRVOjqQ%[>ZlmPNU:Tq>Fk^)LAu_4I)8%dk:Lq9^V"h1E`SH^U%:Rnb)eFdaPJgYG8*^,of'b%NU"(-`r3T6$^H;G;9BA/UnnTRYP6e`*2OuN>5M`piUE$/0B?5e=Uk``a<Rp%o&3A/G5clf3.*k/`l5WHR/O3YC]<u%D;iA&/(_h-O+tc?UZ7VjrRWF6F(o\o)*.Vp^7M1q7dCQ!T!WlrnkSNuD#8SWlp2$`pE-$d%f=c/q-*1i+3BlIrlIpCRZ*9"ug2O-X$JsiA[qUW$ZQ$BSrH?cNf>F`BS6C3Dr2Oc'1fO>-%ETdjYKngc4pS9F9o!*E5/63q[cHrD%pTH6s%=^7qp:oKLQSmTEr7C+k7r<F1s8)S=_kj%Ya/X@3mdaD[B`E5Hm]8BQ5&]0Tg(KuAej#4]*B4hE]kH1(rFc"N?haH0Y8;6U%+rGu?e)S28fq\.slo4i'-A;5`f5It0pn-10qX8dE:o^E6kB]P?C^l8qqgS$BptGToVMYi1HN)dUm02j:IAoq,/S?[o[U1j3VOgr6%[sB2P;`PnZXRApP6:92XnL,J>s%)h[dW!`4A:;`F5#0o1[luu+n4s2D(&_A4b8gG$Wuh[s!W?,fDf-9Wo@9nT;DHZcKKX9s]pSg,%0,IuN:JpIE._Hr#1ZcMH\Ze)Uf6#Jn]),Vl.b)?"U2[2%2[!!fIn)9q=`sV.`mLDTZFhc6.S!7iG3+Mi@kJ).Ycrm$8\#kh9?YMt%Qa!s5//K8[hTC9#[QN+W;R.ZsWq!m.GUjS*R/4+9+$D2<e:1]WmG1qOm14"thq8u_gMJRlrOi\Xm]@b#V=i[8*_`"&4Y>Q>P`gFK%?26,8>0$1#e)P$K:OF*3RFjksL6H\?9YXVcc=C?+Fhj;P1F-GJ"*'g0jS,M0/ET>A3EME>gQNY'7cL0:O->Fl"o)bY9-2.fMVUnD%Q$;<e?#"gFFQ.ZK-h<]IGXn(T`LR7na;c_#4W\hb>-KKh](>@,5b,?e]]<:^4?6J0aXGZ+dMib,Lb`V1A###h?$X\-Y-u&F8RF+<%\(`Dp>Ge!0VG+><T>X40[+(Q;cm[;%G;<)S8k,HG2,pH$c%S)/$"HSOl():Vb%O<oT5!trGEkq2LNdE4/8T2\,+3Lls-C;:/[KKd%JPP?RA[b@u(7$aX*Ikh+LgP%8P5hW_]=Cu_oq@Y@3Xgo4?m,)JE`D_VFpD/B/Z!HjYV*'H$V0]gSUhB"HBLL-m&n7+/?aKBOr*:m%0_.i))=S:<b(H+\!*e,X0t4o=Ke1[%joI:Rd/M]`$?t?Ub<)dgH1aM1>[]S6CHZGl`77?6d#F)u5+qjq8QmaIlib>>EGd&i5('":%8([_KjCuPln^rRU+!ZiJU0BSI^(Ns(]H^poHaNm\ne(1Tb8ZYeef)Y-lGV^r"F,,d'+Wi(p\P#M*"?rH3jg2mg+B3ENNR5&^!"lY%,c;_LUKS$\/Z^-QaCGeapcm.8?XU&RC^et,)CsjRDs+5eW/2I]jQ>7RV/o=7)`M&9oKAc!l`Eu<Wubn,nA)T$34LRKLMpr/r'stQ%8)s=SAX*sYbR:QGh`G?k8H.:DS'F:(]"3@Sa?X+J_ErGNDL5ug[QMXqeTl]ce->M!O@qDk/l\^1*c1d78[O)/7*Bl;0j*Bc>e]*9%'?lsoCNNJ-O8_e'p(,0c(Z;'rZ9CJ.-OP*>NR+BdM.uUAoiXaK^m>ScEc":\n8uE])(VPmSLBP[<G2gXXs;!(.uWARd&arf>M"eN%=<=!6Z!H(lC\b1>P'ijWdMDA3,l%K[;.HYD7R"5'Je&W[%(:.$C(9m/#Zi3,;,EHD:)jr'M!Jr19hF*tZjD(A=X,)L8mS@F>I7VJ%f"Og$,AY`K$]fij5.:5gNQ6$o)WbOkULr:lkT'ud^R/RXFSN94ZL41!lYRT_E9o8'Wc5+WjW]a!Vl=r2kT.E1)EQ.X?`Z=(bf!ic%&^[u8\W>BOcPOZpSG[!n&r3N[]^<^icrdIe>W6f/;Qb")p6Ud*B5ph/>%Q`?QHcj[?r8Fo(UflE;q+p5%m=TX@"J&UUF4l<_mBd'%S@+L$?\u$jCY@CS*%rl'1;<e43A13g8SPHiihWm*0eN^mD\"=W^:9Q+4n,Xhj'n1ZUue)%(U\$pV:phUONCl"^?_M]EZ&'S4m00(%'T;,3l$"m5I/uiM3jDSOSs?N)43Doe8h'Y!31c1rA/d?rI_HC(pO8Yk_S[6%k-UEDD@H9Z2T!S9^&:'<5K"cOpqq><[@*$:kJmM3%$96pBoBC56_m:T.p:VQ>-ZVo;^T!_UKO_0ZLTMBk4QSC;#2XN;H]eeMjMU6.aGqO&L$-:':(l9EBB58G>gZ.6\IbU0g-"oI6)eHW%^QcEYND=u?B$LJ3`KO>>]X"tpH;JnP[0/5]oM5%`aQ<)\IU,;[I3-$3V`odg3-=/%r]Gf(^1j6&n\jD98Vm8OSiVunk!(aeH/8aa%$#<n`Flsu,\u@]-LMZ*o`B$*iXt=TL:q0W/$M04rLPl>W(U0I(gA/b$(6<&`TcG&QUXfq0SA3nS7=,[sZkCRn-QCI1AtX9tKB.5`%iY*0mab8fG1h1>3iVVX)^e+8[Fu5o;AEbCD^"4Jb20:g<rqGsXlCQ[^jpTNS-Q:C0182gj46!h_XGD&YDFChi=E%+WduA&4R*apE%`32"HRkTc6MNB[BK]WY96e'b3lB*@Jhbk\6gkb)B=%p%8j7jXUnBbRjqAa.6^$<Bi*9/@)S`LL3FSeN;]7/)7.G*mf'AM9N=m"$/%[2AC@=iOC30AtfZ7r!uc(Ri5sK7DgBaXe&VUYe.q=-G!X04WN`8(O1ecP)5I@31F4>g9I"@f$4j<a5#\BF_aok8"'3!"_$RC9s)Q%&sr&MmOrI*;Q$/Wi,<>ZW(h>^I(ONk=d(Gojr5gkF@.)):.#6u*L_!,g>4(;#^I#_g,6c3"B8kY4if@]QDD,CRreE/mDAObS'X.F%l@jRqqt1>5990k+2U[qGCqM_d`bg"&J)CXt>s:RS6=X*XmRpZgOI1gNk*S:VZZ,BP'Ak!W?Ws5BouCSPf'VlmBRVjl:24iFBWUUL%WuQ-qF5Q7FCin$qi&G,YJ;4L[lP+$68Rp?6M&08R/lj3MV+.X)R77P.7Lc,R+ua;Mo^0"+50,\=E>t45Jd$RBn:#n)d`WrAlh5LG%N>?c>ERSedHSo[&aDdHHK$!On@B]6(BXG<cZ!D<4=8=]JP36ErT#Ct42AXT+6jf>$2Hl0j4gJ;l2TH85ZgBF(@H2M#H'i+%(WTS"%JEc(G?#C:`RH:=5/WU]L!h5rXRHQ/JH['OH\Mg=[Il!/Gc?N^aHZo,D)795[U&3V[5b7BA!XIYgH`DA(#]__In(=nicD!9Cg[\[8%%1cc(3&ekDLf<tBo2$_rSD/`f)oO=dm;SXWQ64lFS]lgPa1D@FNFQVBC$lo'*4*1mGSs91QCiW(g6UR-3oR"s^RGq&0XhGIQE/34%L/l:\r,Z\t[iVthT=;ok/h?OtNG3g"D%#'`akSRgb;3?nTRUCRgTo.BnPtoOS[Ig`kLdY\A\p?B>B]][Son8grOMQ;feE8HMqs\+%qtd6OmOuDd[K91$,R86V3'KBmbHt2GGB;ARFZW2l;Qf.hn@lXNoP-_a[dOkJ^K0O(<uL,G*Ek-5GS5Mn4.8I*:Z;j7IO>tP1kaN-%*3uQSSR0-DaGZt^A3X.&^u!Q5TJgbtqN3Z&rS25UMhAi0-Y;`bDWWHn=&Ornr9iF]\T&Bd;WG-_%J\3F_T[o3G%O0UcXD%(@Vt&R%XQX`qrm6B]2M7.DU5t^tqpi;-B7c$S$o(he-X!ULgpY;ZpL*1Y^2<+t@8FRu1RHp>2;<tYI&AlVr/6Pp<e4pf%e6k&_9:@G@&C+-%1L9R,j5F)>`^s&ri3\""k2jb#p"HA>K9)]<r)I?Rl]YC=OOWAuqI]\@<P.,n9]h%V'uuD?RsVd'06K.<BMfa,")gEE!FT2--[Xin%rciKQi<S;Kmn>\?Z>,09>e09F*d)mI6:hHnQ/JDuU"nL"md]/=S1hZN.N]5SlH?S)j^TNsnonB_W@M<PU9:T;/jmr+C,FmL-hKi5%$(SJ#Wuc"\'9?Md*m1T,eKXI.?_"@+.=]DPOLM=$TT!$l[_[9+Xfouf-QoV`!T>[mY!CjjZ\:A@0/hlC(TUjrg-Y<T<H]Yui[G&*%BDFK1SFNWrhCThNWcl>.1U<.UK8Z!"=7Y@+VQ&QKgnb=<49;4*EoVjtKu.t0,L20D-5'o'1j[1PO6m75/a)c)5'\p[T(1I\Vp^N`%&ru@$LBZM@+@r:"8+%VuMGt9upW46:jbh4SP0Ws':qpr*d<GN*Ke$9E;9/)cL?e[sp[eBqrB\>s^Y9`s0$jY$*4)u&Ph3L<SBuIq%)]hhqLu;SmDGKHKm#2k][3L^P\=8pLO3e[M<:P5VD_O*c_MkQLYBfkiGJ-5alNS7D%.AqKo5K!2"d`^aUO*phDt"J48`n+AJ*\m#%=-,A!R=$h,6.[&2KnrTEOCdaSSV+\RG6WA6*qrf?kfgh^a"l!4`<OFQ)!DEi14aulM+6PCO_L-qXLe.1@ppBo@?ct#Cd8FDC_1it%iHiNsB'aG)^#$5^)K39UI!ctE\hAb_*6V"q)b73YLkN4naaeOh,<U;[a"f.?*Jmt@XlrCYE3BaAcDgX#_=,7k/i3d^ScY-<_5^n<%O^(U_]esM?bI@3hnKoK=dpJk(bE^OF9$u$4Cb!VfG/m*6ltTgpd`)]>";4'0HF4GJfpHXEe34fe4.us:ZG(\QG,6l=9_*'TB'lkQ%k[;h[L.Mjq'cHT_o3S1>]hPP'f.A"Y9T6MP]5%b>3GX_u#CmCKT")+R3F8)mj^VlLj-!MMoXH//i?G0;Q[%Cl,bPI`@#NRHESs]4%SHc3De+HlBf]QLo2n!r02J4c5Ml,qPc@k6;)>`_lKCp;KlG+pMam6b_FFLY1?;K2ZLO7kfQO_cCeH156(J&#0C2^.h8D1Tcs-OV=%jAVNM??P-Waoh$<q+a?F@OL1oT8*6gia[`?b!WcP&$p6AIX,cb*8;EW'0Y9QiX.c]qO-X4m;tf%/G+$sA7q(nH_/Tl*r+ejXr'a9%?2KC`*$iNu'M_9nqk7l.)tt#SCRCUS5qT.L7=]T;+jA3oOZ*9Rq%2tQ)ZB3<mJAe(ECL+YN=4p7]]%$*_AYR:*Ho0[@DL&]lJ[ha%?8nKHj2^LH7UrqgNoHRA1i-D>D!._B$YYqpQ=hnFna7;Ym5<7r\#:b<I;o=!q<?LpVW=.r:'ug-LLe:Q"/doJq.t&c2M^d+BAEY4%Tp'=5doh!XB/H<ANP<':'D19MjAi6,ohch+g!Q3'A?M[6D*%=<nVeeO)ic4nkB@_Qi,!9tRkMW%OQ6S!iPF+aOO/';crdXg+Ng_q%WX"UIA':R^c.gfj4Mq&fo$@]lF[C:,&,qW]mX*"`[#L&*Ic>DRd8'-p7I=S[k<)Z&6:)jbdGM^q$-qur9K6VlNLbc5dj$X8,IRX>%G^djM6UJ!VhKeb&F@/C,X>NB+(0@5B%tu]d@g,^9`ja^u66X\p/!rRP8NT<P#H5qWE6\-u#NbERE+"l+\C"YZEm-U=[/0(I8ns7<%irLKQppTJloAgr%(uX'cU1d<1KnA_.GYdh>.h?kK4dMNuI!KltOjVHMZ//t\[oo,1\/<iqP\/d#Yst'a3eu?aDKd0U^Cs:a#?O-U%NQr,Gjk3YDio.Jj'SXQO<VYil)Nboa7Aa#M6*/K$Y0aUH4/3"#9LH#p^-[hcFs7H?]YNn#Hlm1""C*VBVB;bnp9sZXS'$QfE)_)%%:DWBGT7BD7TMCiP9`WLG`-":rQ[OF)$g11p`JmQ3bB#39(\k;,ATGfh"[L7h\FW4&H&-W!"u2Ms2h>feDL"@S'%d7ZmX#TI-L8EN%hI:YRZT/#_oZ/pk\QuR32k9E4cS'K$$hbbE/G(.'635i4X9R1BikjYn:NM>[i,qEGbAMPS:]80>+H(6u6):u<=IE=Sf^pO/N!8SS%Bn70ch)2]qQ-jNNq6isbfV\8K>[8t-$+8gDWtS=0$e^gPeY5P?j*=jXqR,(D[Ck$gDp*f'cXG!Da&3"ap*-qVlD58&d'd1b5.+[B%dp#?S]KG;am&7`%BR(cU19en'>&`24=nCgFkW(ck[f"j'gm2C@GClE^V8mG@&GPDV#<QK0&HI9li]_dABp#$krIs_;GDk>P?i-Gh%I4r+VSY3R@P;r=H\O<G95D_H4Z?oso-etW[g*a5aFmXOqI;1ba[=AG6]DIPNeaIrVX.Nm/C=]oeDPCd,.k.faK+d-h<1H!S62'_^%H*Pc[#art-j]S>(&K6FrY6GGOhbcr#Hf'r56'h2O?Q45kYU>2Va@3NhlF!2EC<CB$0]+K=#M-W`D+iJ0Z9.H?Xh2g-em14Uq,9As%L?#%eYslK-;F?1DCJsH6]0H47nI"LEJj5cf?Q_LS_'W$%g:pdO*8;d>[\Tnr"o]cE[6@Vnc568>7+ITD^;-?dWqP#1GnX2=p#Ss^%<?''];O6t:0+q9'RaY75!e6B3g-Qe=`>5)Eg6/>%HU9>E;72*;4[8L('3/8b<0LA^,#P`OUC8pR%h_lH)YK=8Hhp.\Q8I-\[:cb$%Wf?:?ER]1qn'@;ug6/>%C)>>HWqH_1ASJ/=[g@sc<,Ef((RUXR08Z\\a2<aZG\9fOD5iSVbJFom0,DIk/aK%ZhfA-Qeb4gR1&nMt%,cWc)%$/IDmuV+9*'9A_/S@gXmGr1GDk_!MG\#-WWkC3m'Re]*.S@LQjk+@7aY)N<7GdSpK<qK"c7i8R>Yfh/?K'RDrPn#QB,`hm%F9nG/A"H$L=tI4-2t'\^ZTWiFkOuIfr3NFmfMcn@ama*WVHX:c9pmfjbuN#=8t-Qe4Td0N#'dT:DQe]!4i`4th<cS@ZZX$@RGlg?%B#If[hs'+Q-5<@@3.(#+EdDu=#8",[XQ>Z(fcG%qlnV1/$.&;Fc5tl^VM8`!Zdp"aD32lG_Qt%</ed0r1QKYCn8&Vk@QP*p3Km%h%J@"F`_!Wf%Ui1^,[Kfhoh'Perch>.He7%KlB03?G#%oY$4PKrtS)I]:f'9Y\fRgGHkLanGC_(.\kD[i\iRo9ffuUGoi7V.kfmpDA%j-U.E4V,TG_m;LVZ_oo14-DE<I;+>:SJIgaJL!$0@4$6-"%bt$[O5VaA9bNfLFJjT/]#P[!)diab/ZWq;oa8$/:7(Q\[.8Of`df2%.<i3>:mpJ[GKQL?END:cc?@FImWG<!PWRX_fp0`rmVKN'g7A"tfs;Iqir@Z&7>%-pGP6^R%;n.?:V!g6YrX65dAN0hDRn08ZY.V+%^m]&/X!nq-m<YAkr0-Mo1Ea\MNRU!0@XNdjn,a3^)H(f-@U7Uo7#]H\Q"`:tpdC,o$o&7&C_gI2RuA2V$I(:]@b_`%^Mq-$pK.Ri%+N=l"#q(4X(jGKk>S(B"CLj[F&EDfGrtgL]q)INe(X+I(k$en^Gi!)#nbE?='4Q>9AGni7(5kP=O84h8$"D];GBBO7EDLUkDT''P%kV!o1c7Fj5Cg.<W*"gs71]DTSn`b$bZQR9T,>g!11%+EMH!\G!_]2l7@XO:ul^\XJ1Zkd2&i&g\7sJ6RS.dW[qi@.dShCj6:+[_d%^(ZDkN)Mmm;gu,7&EAsL(5kP=Hc_@25@U-m'*&78GDPc,UWlSk(n\IU/.++,kLeq,>&CNqb_I%eFI34te*I\,)DYn&f,<X62e%/T%bcXAX`k@sNk!P*^`?JDH@b_F9ZP^Wja.1"f,/t()jP8W9`oih$*\UI"3t&N7Gs9/+T4<'!o&:5@^4<7WirTePRY29>>naBdNYlub%=hbNd\CXhto-)+JZ(_.*0g:YP`&hG`k:&LfJg*u7ZPL8,gLgN^1W6eKo`#7QmQ'1j>_mC?I'3oHN-jFUk<b-^mJDf3N%afKmYD^P%F:rd=jCo4d*_rmH5`@LGZ>GKr`?E7W1Dh_G0g91grtE=1g%RAJptm77SPOWk7#_#UVRW6+0lFJo(QTD?B`'ST`;$G(a!MtL'.]E8%70/RDA&cP$j29Dmd,@#D*:5G0KFZVWnP%hiJI^;:iS<V]0@8YfI9A6b>fVT2ojo1d\.0Z/qUhF6_f[f>,n'<2dG[-+^->#@lbqI$%lPG0`f<O;+OS(E(_]=m4$Uoj:0Q#8Y>;/*CDq'Sg?SjfKa+b7us3K'NY33r]TYknf#KJ(h"ZkERO1Z$G\5&Q,4RrpEE+ci9,15@1%2Va0+>9l8b.>-SgdGYjJKg.nZO4c/b"<B[Y8,!GUnAua-MaE3b%(*b_?OSu#B-@'Er"2!F)/$3/N>JSWeD6=)IIj2NVoS;PJe$Cn%T&Xf*(5ECOZ/Hb:#\HP]c[^>5!?J=eNFcPt'6O!nnqg.PrH6404r698JR]'WL[3T3Cup`)iVHfTHfa.X_tEl)<T.lCiOT32JDa`n%3d`Joq4F=tFd^0!=+>f3f.H?f_u(*-ga8'@+/$O-4X(Ym%bIuE:314`k]!`c1*8R4DHms<%bJ*qrU+guk\trh$n.U!UVi)drP(^T%Rlp,_bZl8O>fVSG3K).>%\J8DRg*Qp#5^/fPLmB`R$'?;&sFqrh@D!3mrcd7lO]/81t<F;&*1./9c3:[+*MLtSGg7<+6o?ZjAiaS%!Ieps:*ifu6n"rF`T[QKBlgC4/'$3V__M**B9nojVQPojf%Z;Io1%5sRQ_``*%=R;)Y:P.O\b"PqQ+ZO?H4`S'1oL[a3<K7):%Kl%3^<7Z'&I]pF8Cm!kE@o<`Hqg\hR"u?i)aqopEKDrk"IBea0(e?Kl\SZ>,*;](T38WBJCYZ\Y_bERo6C_m]P4I5YjsmN(/9[_<C*P%$G8R!GgO$;a>.8F?;DHn@P[MCk"N&&STu&ck9"<&A]?M.a3\p'%.j]c/WbU^9BZ]%4.CI@*&1u%Lud+)=3a)TqE>s%M!Sq`*c8.P%lHZ[O^CiIRVg,L.mVt1HZRDemCg#)JdGWY(B$P3QKi`JmMZCMLa!6n:B3r43n\T=B!`AOh+Urn\a,]E#VWX/p]V;!fp&M\,3mK9,%Q=gQ/gU$ptdCKGt?<`>s98!kSX,5]T<5SiOAG`oYZ9Tob?'Qdq8b/VWN30&*)6MK'PGt4T'0154ra#m,h<t_&,d6+IAD_8mUO+A'%7[0qG[edoTTka-MO/k>b5hC(>8'fRWSQ#BETdHhDlcq4/!#usM1>L_%0#3\H[@H4J3`?gDlDmQu.IHcm)5'k+ShX&p1[96/iD^*;%5VMjkqJL*W9nm;J/0qApm#;n[Ve^]ADLIgE]Cr1GY(=n`a$Li;qL.4+k-;qZ6:MgTR%<h.forjB:<ql7Y8c;"b[IDjCl\FTo,(#,%ll+V:#Bs`/Of?mpkWrLZpP>3B7U$GJ9ioqha;hPI1Bt)N,-e*dRC'H%)Qml9VE9&alSI48aFW[A'ct"\EXXsIdp3A?'srnCeH/Ki%38@93o2A-(a13q<emiL-5QJ6Z4jY-_rFo\]Cbdo6hMc^L6*RS1>]*::b5%no\idY7-9*m`1tKe2TZ;WXIL-*oC""5_Sb")`/H#F/%>HE#]5hA_bLP^HrDQ)tlj[[$fbTR2b(Vm.+_F9<UenpGT%N2,!E;=cT0h&b"Z12\ac:$sV,_K_aXO5K#aE5ht&=Ep\Z7fTuKKud/%!k2aH^JpOQ4_bdNLggm_-DoO`Dl;<T?"9f7NH9$]>f'I,RpP)pH3%L0Cs082I'/Bgb`/U1AS2AW!jJS,I#`i8&nV`!7#G/lfTmOT%cgD'H^or+?QF2YUhRDUoUi#q8Dmq=1hi'O4b<&#9hO#p`=j2ui(TY`5=8]Y99YOa/^2N0N2TNO]2pK)*,s]Rfhh))RMN^"f.e"FU%_Ce0e"h3p2ik9X.l4!<np765q]3,#8\O[R>I_L><=;E?4pYoaso4[g/LVC:/j%g\7Tk;Oqi1@F3eH6U)it;>l],C-T<ijuM!cTqG%6=1_m^>pJEY&HKk?/TMU-5"8a[VCb#?rX<W7lk*:3qCR%]jB/_HsX965d7lRq<d_<W:`mA[U,:JD-P8YlO>bHSfMiZfX81DWP+@T%LXRbhb-=,.SKM3#X^knel"9qYHiG_3dsFhmoQ&C0l#0u\5):K,`trS[L>5CuEnZ<bWr7]q1@Sj=N&pD+pA%[WS;+oI<ngffI]cTT%3m?m[TGT/fGEU4A^^oPjd@f5D^6M1RqI)X=a(jE,rMJfBrn_3J]ff%0B>jT4Q!nZ(qo*;)Q^(,mLiN*kT'dUfK]%o@]DgH@b5IC]%ia1e.EH/Z(%"F&`ZbKZ%nGOoEniP!orhjKu-@`_*"%k\$\9<2tH`?plh*8oD8@0F&/`&ok,(74(3f(L]0>F[a)ns,<WI"G=Bq?cg%2o0*AoemJ@k!,1_QR?-%S^^rS\KCbFI?"10qWT*pb^XuJ^V20&&(El1n`VAXqH/$%G+Y3bA>E!FZ"3h,5-d=J%em+V=#^-"k"FD]%^&QrN^80i_Zr"u<A;+KnIOlJ;CR>#!>9_]A`,C\@.kbXST[Y%+K!b+!.]eB.,5ooYJ$daaT"U8tj5'Y'`oCel*5@1alUPB5^\tec%3,bEql2_^Br^&t)`4P2B9ADPc_I*?U(/"RFp-*5[\gNVNX)mc:9GNj>J?oJ=1?fG!PjGo=>U4\8Y4_\_Wo'@9+2R5gZb1>M:t](O%l#.BiV!.\hV:4omp3(J;Um4@?p$n23jHFr*L!AHKfqTZRT71=9OP4@Bn&"72J+1qk#^'Uk:tr.&B7B.)DFWlL:+\dQARr6u</#GZ%lhm`lZ$*j`SR2d]rLmc2/>tJIiR53S_XE\WCf]CFMj[?5gKI83GW=./OYa:1W/EN_.!6<uLUYlR+Qu8N^RC4%qmSoV1qYpDDdFue%60*q[pgN&%cH$Ipf'2"aJ)baL08M!Rcc*cc9t]]I\-h8V/?e/2Nr7MqYN+3ciU2nW.;jURek,DUpVG\bDCm+"*Im8+eSUG_]AN,0%F!$Ir5j#[_)A!\>G)C4AkJ*G.b2uq-3#GO$orm8++Dq).aW-4Wot#gcSHoADhTNAX(TDdTGhC*FG!F-[O6C@#G/Mj09hkUt^OhfS%A92$.K>;bc09-Fj\&4hS-[)a$O7@<ap%QSga]#X<&$BTu2`:5s:2Mj,JCX\D[orqYgIZU"\p"O7\$^UcGlNrQQL8Z^2nk$cZuCCe%3"^FDO6cVrbZ0(>KO[X3AIcGKq:>.S%')]jQ'J+R5mg2Ob0BTk^=@YgghGsB+2tn`+DpQ6G/$o[S\=neXa:o1PT._6[e$gH-B6ke%$ZbHD,u_omYNCm,f@QGYa8#qgZ.6]p2QH\.$8itE"0YJa1_.._TGUA$!N\AR$K!bJ?_u(tna1EM[[H"[N/GHhUEfFtrN'V6f2?t[%jRLL*?B790\b;r4SNf0H*>+te5/o#O2^;PCFZQPN@BPr5I4&)P-hg\,I&)Oil2IWkSj1p.NM_mcJ"MgE-GaZ0F7#;qM8+C.Os/Ka%nb2B/8=tSFQj5oaJ/?pAaWH#8r*j#B[rSK`Cq_]!OnghiB"un-MIcW[`,o`Y(sk@TF-bR-AqhPt1\'Q*SM2;8!KN<(L$U28mJ)I\%Z+`imR"%-dPpm9QL#ahF4F]EfI+$WV1F/HFIlZ>'f0c(ZgN`Qi#Y"OK>.YV6&]bq:itad(6DM+]B3&MZl_M$6m7D[B+6&&+O[-PR%[XRe;rArb?+o6O38p3`O:E"Xe8ad))?'n"DFL$8f9r(5:6m%rO9mHJuoS%B9JMH</>Q8?ui[jniI=Jc:dFkcD$u`hYpSI0YXFh.R%LAa8oDIEI;S5+P%jTo-D1*\EdYDUYHTgP\Bp=^<Z=*!K-YkHs>E8?`B[9h!^4KAAP<USp'F0Q<<Ju+k;m4&Sim#`++IV.U4LV*KX%h*m9YqV>dM:0t%GKk-SAX`X+_F,VB<SnoN!<d_Nihp))KWc*!mlj*.\eG>j6?3i1@]]Y3(ehIl\+PUl&X1-u[DPl1Se[!S"p*(/O%A!(7"^9U12N]huIq&g[3+$A@qm]E9ci1!*Nq9;o^720XK:TqKCdf98GF`b1a8105cG-jabec%h'!l*D`TQ605%ecYk#^;"1.8m6t%$C+.??U?>O+SVQFca02;8fRnnFRuVm_(5$Ck&BF&2[P],Pg#Nf+_ifHLDi69k_^9m+Q%!ZcRk-nNbiHROc>7aa,U!oorCd4qq&f=%fO)mA<I_i]4EMRX8Al$p'PpgcAF!mcSD8=/NP8<5L6K`MibRcJKF!IN-s,[Dc[j:]?R=,KpG'7\'^?4@720,XPO\&7B;Uj(DIGK2%AJcVFP4;6AnbB*Qg1u)!\[\a1apMopXbh=tf6l?\;E-Y[Pf'%!'r1PKEHZJ'b_I,"oYe5-phE!VH:hX(g\EnAU@2Ke'2:3%\oYG3%5@uC1^kq.XFlh5)FjO>eWFWJV/d#$F7,tek`(b#;N;Lq'*(?pjNRBh/h[^b:?[G#V<3[TM2;#Uu?9g<$B6W3^Z56Xfc'PbLCKK,U%b4Xp*RD_l5&3.L8kX*E'C&+6H$$,J7p,;l]?SB9HOl]iY(f>EQ%HL"SLLTj-^X<r6EmFuWG<=.6h-f2"H[;1kFo#[D/?=QZJe4n,%+%ebE#G%?rVp(k"YL.>5Hfb64'GQTIW4QSGR]ob#2](B%@O@U\ABLtG;n=GuAs'X8>,YLaTB*A!^V[s^YaUE_4I!&i\+W@`pJLcG%4\B:sq3P)U:e&nqB4!A/W.r"oYNK,Xol;5B&&X'R86heSC3o%qfEMfX)9""&0g`Qk@C$Y.csh0H4qipZrOtUE[D'r\c\/+-qq;M8%DRRZM.Xs__^L'fh;e3BK,%OS7OZ@T)'e-"e*rFX^d<Z@m8s9/52OkhA^58_/&1G\<XGeV;o'MGGLR]^:Vg+rJh9&t3H_\f1p:H^Z%HoI@thrjm;Rt[?D6]`u(g=4Nth.j[3Sa@!]]@8-Snp`?;F1"I1rBb@<UQs[r?iJ-$GOhefJ\,@%VOQZa2.\&UCT/(P9eYt4E`Njm%BC7Q;;Ne0"m0Y=<E:UcjU7-.=1`78W\<VI:M/8QIVm.[9p_8eVk>&5gPHItn<H#Xtl@eT,5>r/tS(["X0Zm?Mh$mW+3%jO56FFB[%,T=dO0,8pdG&^D+PjLjjhu#V9,2K@*kWAG[rfJ^r)SasG:41,SX4NDcUiK/d[#+;AMn-1[l:(\3eJ/3Ybq/_nfoNJ?HFA6LH4$-A%QMr/l!l'H/cJCM$ON[QF[1Le9,BQ)PV(7[%'.-nJbl.9W=Nk(!eGH23)*QjD#"MQIHWUT&i95dMprRKaptCR`W1F%Lg3?qE3%R$0%(&/h(3XlnSV4EBhj8s34/Abeh.*-&(j6M956fWELr-CXch>"!bj*5J?a(P$9VZP^oIXBqh7E+BWFZ'&]'SBrl6j$E\Jkek8/Y7P$%]T;2(Es$YuZK2J8fsORH>2T9VUt:AtRY3SEZ<AJ^k4NkPclI@dXZAbV^C)>pI/<WT#[;B`P<GgNgfT'<7CA$bZ?`H#;^c0d2k:Sa%rSjbC,l_il5NH;In3JuD=GFrKa<7W9IF?SDQs-3;\[=IUeX3(G=T3jj/!n"ccQTKABs$;ta1lHii?ui:h)`X.)Xmqh3hhjU5NP[9%;WRIBoiAs*'KK.#qMEOI\=3BQWJ-;LCH^;\-26KEL*4ZT)lWpWB=jE=FtXb$3af)U`ZAmh\b;[/N=E>.^I3jVA:BR#5lEe2FY$D@%9Jr"2/npcZo^\'2T<&c[oJ1K08q'AU=fdnV,(uR-)4dC1J'g8KQN5G+MQ`f:L3^J.ZCRo3Nk/Hm4XB3eqFFoFM&kc?hZdk$GfVD.%PU4FYL[20VldV4jA-A$\`Velp))p%XYr?8=?@\F5=^M#cR%^X8`N<'g*lL`OHN!R#(+j-G!B)t<<6R<nR&Lk5ldYP1>US]<S1Sp[%jOA@X]2)/,=3`]aVja%_q)ICUk]LY"H%4C.0J&^s^VL5':Qu3cm#g>X,d#:q#C;r0@m9C3+udnfI$Vn=3]4A]EV$6@7AcrPo3lh>%XIT+MeY\t4?K\4>0[C1#3^9apno'2Z[1t_i`ImLNIHaIP8IE^N0eVQ@Kd5k9,1U&b<Xp)E&LtW^KA(RnDkDJ:MM6F+`m8JL#gW;h%BT`Pd,'J!#G^I/`VE-WA:216N@3@%HA4/XmQW52Y[WIlrUKo\Fe+jVcmFrF:g^Ej&pA;hZ.W_Pt\3N%Q_jk\OL)VDk+&,S$0=<W!%mQKORHY$_I$K%HKXrn-pV,45Bdel5(f*t6M[lm=<\phksi[^OTf=U%nbM`EOrg[ag.cnR?K"RCIo<@p!NcP0/p?,cZV8b\m;cR-S%W*+-+21.HGp>h]mRX1?s7)CKM[<J.:Ub=Mu;i,<f4$0tGM134.Okrt`BE,I7k?IffVYU?l@7*2Lbgs=m9(_2Z2(2/*.P*p8f9sc;%9&"%U7&3kin<ZObI^plg)lX\,YX\H_c0)6DO#NZtFbPA"L>gDlp.DhP4Vu"k=lndTW8/pDk2+u#I^l2pB0/]c5EqjC'dBu;1TbGj%3^<#7db.bsh>KCG"TkjS4Y#@%gQ:X,LY;[kp^]7@S",br2%&;J(6k.IYea?uer%"S@O'b;5D!TG%],ASb>UauH17Kt+tM5[(3l(q%r;1-jj$`n#2uo#V4gD_NoO>:&q>TN,DqUuR4B*,.8(;`3f#h@P&]kn?pRRW%hO]pAmD%I@SD`PuaO[niMH9'=Ni!kblE]k3B_,ln%K=5T5eoG`GS;^$XZ<S*(bIQtu!nA)hbW[meTYc"XXBj.IT_\^Gmo,q@Y(0sM:pdqX2Guk7Ce/^Ne`TAsc7MkPqnAgrSQhc`]SP&T%"Y*[DX\1Y;MnT0'WN"qFp>0]Xs471>CL92KWMWLf&dI6Zk$dQTg%mP&DZ,.oFW$4VXK=H;Q/@GumH0HL1UEAB+C(Q>bW#L6/WeHS%oM+GG9#Tp^'6md3IX'1<DHA(Yj38<m3]"gQlXK!k\9p`rG-R0J$28d/#K4d1h,U/_PmV0Lh_/:CRia9o+KjW,^I<nA],*)9DQ#/[%roE5f]lTeB/A,#<c^7?uF$77`QLgHd`R'$YQoWKHpP@$V=pDg-nHH_c1_&<1K'k$uW9g57'`.daqO5-DlioPn2A(*#rq(,@-*?tG%`mJiO&3\3D(o\kL&ZniE&_aiO,hS6C+04Jg1NZ_iAC&H4G.Kol=ei^NraBag#_RLh;oq64MRgb(Kr$rkk\2QAa+SQm$$KfX/-!3S%[(A''V[uj\\%TGe[sqfMX1>.[?@+.9;We4sVpL;q?^o6]2IFCdHJ6\_@pYu4p[q`T[W6QYE:&`rH2)OXrkW21&lB_ZY-c[`N;[]'%e9mAWoi@$dIP41tae,6YT>[*!aBi:B?;!J>a`i6mPDjthr_:OYNjh5q?Vdt*,>#00Zr\`kZjQM6[moK*FMGPr<m4fr%l@).3YA[d%Jfo2BqRM[7d8;'/I7-%!-H6;TGu2+(#*0GBF=M[j/A=[nV<HgJ/2GhWXo;NZo-jHn\RtQS#T23/G-YlZp6QXH&'mcA@O=m:E9m?%%CI,C[hmi<-5pT.7>7;QQmg/I<USP-Oo(+,:]+VVn$=l.5TCU#AomuAZ8/Q`j7YD;mmpu=0>gASKYMP2JqIL/B5i(IJdCc+]6p7/'%'"+.M&$@7APa:]-6B:TKB^S9JPOs%\8<QfnWolncBX$Mb%@2q@L<P%%o:,LGilb90$b9)_G0YcdX#dhVDf[#c&WqjNZ@YZm<b%Ji%1\JKVpl[Wj*Br\H12MP=4@teqII'Z%#o0Ma#=jKmZYh)HlCMj[qtC.Y6-?TZZ^^!7.N]U\PeX7lR/DI?mZ!KJoN'*h[LRbh*10Kh%H=t^jP64`FQ[n4cFek!g#7X?15>V_d_$AiL_`'Zcl3Zu/8I*.8'E"89%)4.TkGO97j$_EQj2q:0::k-a8j".SN&2^BYqO]UO9BsX%8Fcr(M!A6;3>+3#Un.)'OX+:A.\^N#M=(2['`h0#S7fc6i^dGRSck493-t0MpL0*8c[K,>Ha"XY%ZRat8[a;S(X#'sK):TL^('4]%jOY1.rkrsYjKd([[i8<eIChssJRE?fnqiD+`CBF?DLCh>%tJN+SEIG.l1kAg>^VS'SAg4doS-i.:?^n;26!%n$WPK;=LHIMqimGX%3a#54mDs4r3NBK`'j'L$h6C.P"*R#=VHflC>$H<LKO_>b46:K?mOsk0X"Dr1]O)PJ3@reZmn(]&>leC3X%1So<1AHV?GWVpM,HTE%Jb.&(K5t9'\s]T(s,cS#dbF"6m`oKT95Ru_q`CXPoi%S^f43TooIuel4^Tg?itiE'Wci&#'0n[M6%M4FpnHm.Y?[c-Y,FgkB^orQ%EikaW0#ohf4K`G7[:m9k!M>K]pP%TrBIa.?Y92TW#$qGn'T<ef"OY)#Z@_d)$8,#eVk4Bhk[M!o0im^]]950M%/)D3WY#6>(&8%=%ml%>kX"E`OHm*.JIm\A'p\QZ%H<L5&\;-7]q_&OiT>=uCkmGYlHZUFSfsi$"Y2rEmem%Iaf6XLdLSN96S;9B#a2)0@@\[JlD8:4I%?E3&tIT%*u*a2&;4<(6rQ`8_KE:(2AW*PsQ\EtIjigiMY8BueLr^<YdInDW&6g\^gGIc%=;MiV%3d$gJUc&B6RJi:lrBuY47WdZV%TdGF]L0"A]iLX4T-I[*#`#t1Q[aDE`QD2;Mr:f[86fV7t5nr%3.I'r7p;KN!&c`cXAg#!pWVPruGhe">:FX5A\W;+Ikt-m:niB"Y%+GjI)=3>8/d7TW*G<+`sk4]rC*,2=dP.PVO&sgU9n9^)[@_I=pL4<s^TW:8saS@[FKQ.%$1<`i!W)J,gIcV(DHPk^fkagCA9Bnt.%ZM!&Z,A5]@mt6P"Y_ia.3>ebodsTof<q+YM.%D+269BI9b%L4CFRc3<H4M:WUm!/R6\\(>(si9se]XttQ9^Sch!f_%#PU^XD(ScL%9DG;hW)f1:k%#OZ(Xq2tmZ+&DL%5!JPna_+[D%%@cCX`bT,qX`.9$9ZD'NiL_og\e&LU>M=7'G^K9&25i%F>YN?e@]k'0*7Q*%Iq%c!)sI4&'Zs`0MS7ka<#HLREi9-pqrSp?Qp8<NF=PT0`WbV4.:;D%M`7cbQQbrf]ImbUnULXV$s]_90KV?PiV*Yhr%*YLE!fCrYOj%b4Wntri"5-loggl1l@B5!\,dlIa'hMl/cBYHU1^FR4R?3-4u.2*N5eMpaZ\^"TTP!E_uP2%@Q-u0diZ)A<ti]/S*S/d_L/IhPgP:%XICa=ggo?#l7h,^qd4'='S[.tg]D^4o/MpDDq4p[]kJaKqgJ8AlJA_ZRRq=F%@o,/Eg/?@-s94CAm]\fk>&IU:](cD[A?U=LH(]G%%t,X*o.T;e#G,s_LuCeZh?EN>Rhs=S1O`MY:pB+^eg+V>7%:/<-0]j/=`4*?DKLUk2c`A7T+S\n)4qE6Bd%$fI]\cmTXP)6#ip49%Y`3TRf>$S'@2j3Ye_-uBT/C0M11^5n(p*RW48KYM`RRp&6'c'/g]h0qG2fcQkr=#e:>]ru[iccWq@LN_!5,?HKCO\g8F]6?&1j^"%Y1_VWKG6pMA4?cros$jJN`^cn"8#.[I&`k\)q^ET@(WP:$ZbD&1CA1]#l\>Vjfrbe(uB?%Ui$N^jj7?CNRh&UeoAPr/r'2g=_*`b%@Y(_)nnM8RI/)L@>Uc:PTQ+3_55Y=LgjQ+a*%[Yr0sGf7SC^ro(s]CNE,/X,e]amj%#u.-"HHA_j]#h2SMV7fjA3(88>.s,4i=#(%+T%S2K%/H/^9'%)hh#d0[Q^%3AhCS=*i9Ii:3?NK+WMS?.cdef/NLHAHofdlpB@X^>cb;bL!@'Q+[i/-k+9lQVcUW$nr*0+\4hq'%:YSc2*Bo)9*s.o:(juo6rCfP&Rd)[>=JW+:KuC"m's(\Qi'osJWO>M$[X,Vc7El#C^o29QY;mN6h2iXts*N`Vg=^?cjRV<(>#J$-%WD7P<YoC]$aXLrHY>`8i^l#dnM'XddADo]UCq`oFI/#cJKjmAB4:k-h]G6^,!*f,/cca<$_-["bRk2+*]!fWuR@o>%!\G@pE9K#e%m!:SU0@VpF"/'$C1@G_6SeLQp?l<AQ\9f9>JS?_BUq7O.Z\UA?Zl1tCfX4[SCIS7p.U<e+>HM9oH)r"LScqf#\eA,34AaMARB*f,%1htfVY1Jh`qCRa/E=;&g*kT<aAK?Eg<WXWaKuc0b#990l0$-]^cub=adlk_GGtGRQ%Q,5RMFd*3FU[TOOX[bM\MDcIne\p,@,a.X%)id:5=UAWRc_'7:>\6qmBts>C6G:+=6+HknVRe(5UPQ3(h-XmgM:h-a)&-DOd,/BFh+5Y\Le$@>cfjn-\AK<[*\V1D#o'M-HOOq@%CJpYM/Q78i%g7>2)iIlRA]t4N!sI<O'BQW]/&[AcAfI6-FX$*Hf7H[&?;$IQ;L>ceQnKe1Q)m>Q.sN_eDR@\;"P;cYm4]arLT6oW%:`D:KgHK/_OscDNqV[BONZ)C;e'p`r)3Oibb9&14br[l'T7cSc6!BF-#X9Wh;O1mo_s`:eY7Q8Gs4Q,r4`'cP6<t&f)=IVG.l"\`%SR[`TVS(kZ]UW2bE/C.PIGUu:fj$O7:rW4To3&Pk.)as\A6af<6o4XX'YC4IgZmPdC-(&H^@Qa?14=><4Wd]0Q;C\t^qfu_Sf^$B%pG-7i<;'D8_ERhT_OLZa0O2mLR1-&YW#0@i`Wh$,=\L3JAGn->jUdKs9%#fVh9XePTb^BFkptTjI+JJ@5S,^E6iZ9Kh)1#>diT`\%Sgs^MlK9+S&RQ]%ZM<9]];Ls\PPs>O=PRcoNSZL\8Pht:5NRfGO#ZnT=q6-Nq#[OtL\t(*^SPg_OSnS,>H'-NG6[-op.9SG/ll$a%,3571IP1n0nX"XpD,e\b"F;#AGWQ<B^?n_b'U%QO,'ae:a[#:i1gGqk\Cm`lfJd!nnr@G[9PI8l"f=&Rb\0a;/<>"-b)GHshfK'f%)9jTu+.L9Cib2)l$m"bZ\p,U_18TMNqDHnAN'8Kh=:`BBS]H<uh6+a91SNCEA(&ruG/j3[GrH8FFeFoYe7W,rHE53\2AP*nN"rKR%'cK`i_5]gIhI;F.^)="%e([i8PdBVU.ar=Z4;Pai<gDod.aZ>F<gDod.VpG-AQ>/TVF")<dof\J\#K/BJ<K>$Q0E-8r00$t<Q/cQ%\Yc',\VASarPrU8eU*5aV:A[NN1GQ).BXl3nU[VM<c&)XG+mY>lrGF&Ltl#W2.c]#;gcJ<9^$UTX79tl*9W@1_K#B"K#Rn13acrZ%k]so9^+&"(DbHRHpHKn-IX&$ns6Y7/<]]'"p(_NWU4OYa'@;8mP;t,t<3do]!+tBlB<M36g:K/sf[.n=cE*FVf(m#QVL.K&c`X:G%_V(!2?afq"MfI"`:F_lO\%fK3`Gn5$Y<]EbCfXmqWhH*,&q=.IC'6@bc%X&r\emPWS.b;EW5!RSbA9a4g(ZfOB2577IAN4P`+"+f%_ABalUDMI&50rnre`UQ6Jde1aqe:NKHL]Xlh8gbg0Y@6G%.ka5@u^ULATFQ#>W;5E)M%YLPO]j%l`4qmr>P%#lNnj_L5aq;/`").%5lh.@4u&sjEKMmoBG[+\TR9bg/K_\CPEHqBKsc>p#c`auL2%F(+VFGC$l:^_?r9.L&RJ576#qqo&92&3.6/pQ6BrX,90m;;_?0V(%XnD`/mC(G3+Yso"R3lqaVh>R5a_\A&'>nGB-BhqWJ';eH*8K0$;/Lnk0Qs)\N9nYig9X5DB6-1HMTG(d[%lHK$BU?IFJ<4ma_.Ds%<%N?rY:nSAXK<!-@568`%)3Si$Lr$$-NDO:N"nEs@\(5#"UdG6L_kqD;/MCIUig)+oFe"tURf+P^DDAAU4D'!gcPoD0/rr0XlFEk%mIfP>3%R2*<n\Aa$A#(?>g)0Vdqd(n/!99,_'Ou[Wp&EMqRT<8Kk#09T_A/&67Mlqh$d!k/<(>,7Qr/XZ_Xa/QBH%4TAo$:2@_M9%EEZqG;g@S<P!i.eT"`^\h5?Fp:(9+\q]O+kpt/,e$R4S9kp6;mV=LK-1B=`E?'"Cf3)2+#^2\)L:jP__I(1QCd:;?DR`Xc;V6SFc%M4Nn$PtGtOa'3klG1TIo.:PgH:6:^%_%U[S98(>Ok4^,[PB0fF1(&DRi-)C,IA@1mTdtH:ep@#42Qh;N*n\h*j&rp_(0Xd:ZK^ma%G?.?O2d&SRT,=NTn`C2ScUeNhZ8&C@":[NiT=YoQg3cGGg<eU=-UX@d5(0L#,kbX]^Zd">i`qi7V)l*]hl4s*@(4h>R+D;\jQ&+$%E\bV.(SR`;5_1B!V!^HoX#Z<n4;Q5WX"-bQJ<]qo<F1or$W*)3oDeSp=)DTH[$u,=_Kt1NXJ2?r;1R0B<e"i0ar!`IAIfN>_J\V0%8V/687D5(rr(HGe=p)<fPmaA]T*j6m<@]/QgDY=;&8NZol&9I$*s<H^bS>u:!^T["Ibt,%RarXVpLaJukF3mJ_7B?+Y4@;$/gmb;%<)Q['r]BA0Fu+q:D&'Cf8:<pn^^etcE+GJl/mu.:+M-TbbYbs@?ORi8^-?&D6Vpf'a16T[S))"%2f_ns;4"u%\bqmFU8c1p,?=@;%7J&F/ia2(C=!YqIU5E"JeqpegM'<l6`go@WbqPEXE*ek23IT[:35#ZL5RqrDiple#Yc45+9Yu>"G6'2,rG]T!<<.ttO8ARk"IbI0%&C@5c(PDIZ1F\\6Bu/QW@>WmVc:\#se2gKfO8Q$uK\uF;X9l?H`C+_XQ(l/YU^mFU@&oJs?u*g'#R/\&M0Vu>LqWN"m1eUrn]5_f%@9l#a@`.eiIAVKFn?KHO1Aa"Xg;-uQV#m4T<fS[pDV#<g^bL3l1:Lose0=[@i=;3):EF9OjW]'rqA092\b*Ga+"i8[r^JF'p$\MA%i3E(;h>XrJM)%0kYS0_EdCq3Z27]Jr_O8&-fAqshM+HY7FA;1:Rc&QrW,$EDdtH:KMf_[:1ek[*LU^I8KM__S1YoIg1a.3u<nGiB%@_-?SBgQT>f1^B?2,3."G0>!Z;UYb3VB7pQY%_$5e*WKiVMY*;0$lK/d5:*fBrYl62IKHh;ubVn1Bl4]o)4qeX'O+0iMq"OIb.9B%A4,XgdPSAB0>!Z"Kt#)[qcu!PPD#*([,3ai1jSGTJ2l+:_+]%*Ib,!qid,UrITP)WrO-1Ql<B'XRT,M.N9YO["A5N;:[t6"ec,!#%l_MJmp=TJ<g_WXKI9GJphM3o#1?o?aSbp?,mUO/:A<Al]_n0T+iC*/1o'><;K5QArMZ#Br/9l!l\X,f5Y'(al0ccuQ[tEmkWU"nW%FE6o401n`#O"I6aPa6_HH:uf@\B@a0]0f3<TcpaMUCW'Jm;>R\UOtSo;.\ldCfn;3i!\Y$J@_U'p/=NHgW.jHQ\SKG^SoW$`F7a6%GH!W-qjn@Em%Y5&3sQp$JP'kF,bb*Mbk.P!*7p^.#W,k$KGfR(nP)F;hG(;,]7lDagA.aSSn;d)9p#hG6NWZr*hPRZHJ?D9Y7`=-%:]2q)3l0/H+9FJD@=;/\oU8fL=LbN,'Y:Sb(CX]QZPjcS9c;cS5=Am>B==aLG(&-aaU!SU0`=V-Gi0O_Rh^qPFtJ\fL;fNb.`2_)%oe@oI"61uHiLj`eg,AX^Z0A[79<6h-H$mOS0ASbb7k/`%TA+a0b#AcA`:[OrjfQ0BL<lDnH.M9:<dpOuX/\-pH^DcGcsntNo:4_b%Xi9,mn<1h)f/Cq]?G]XbSo(&4]EG.":"qd7Q?bFRX;P?MD`@(e0?GVVhDW\S]L4HZqlYq`]S-8;CN+EdMZ@3HGRj8lgIu7VB%&Za%Q=ZYrRMrgafu#AHbo9tK`_2!HbgJCFgM/*\M8k$JO2%Fs6P,/9p36EG^DBu#,[Sn;n.L]'gADscABQk*40!N3g9NVd7hm\ncG)8e%7hm\N\"J\Ieq]S_Cift<XUd(1/2a)<i[*8jK^NpI_Fl4>]PG;UW(W9ce,&PHS1jj5B9DrGFj<g%'P/N0hdrrN.j!rF*kRDN0'Jep%rfb/>FGC\Dk;\R5?Ui'[XOLDdeP3f+mO">gg@S+rceYD,@cJgFNu?UGD*TNh5`4IE*$&5b.9#l]EP_)2!E[r93\l4/CNYhQdF;KV%f^QUtN(31c),BBMBgAd8:>4]75.srq2\cb?031#GfM5JOf3>%gHCLo!-Ft[.[F_acDF.lBf3U+SaeUEVPLKP!8cQD!;IhJcK9?pa%VggM;f7tL&[dX0ehs1?Yf*fjKiR%$nT9YmpYP5Y[(&_H/QgX^`)?H#0B)eY(?FNg^):D?MlUG5>U`k!I@KuD@rOIo&HCS'$6sO&'%9k)Y`Z6t`>ZnZ2VkX]MJ0cVG=&'gO7)@dBO(ThO3Z7b)jqnmAl)c,08"XnjM`l16cZ9@d-+gKF'#6eNC7Vs5jQoB$+'ST\P@JYO)%h>p%t$Wjb(45-3aO:H\'D!AO\4"h?$c=8J@l+4eLmS8i(Rk&+m4B$fX%HYlG/%eu7jK6^"30@9-_5$9S%="46e>AL%o/'M':$m5J%5U]kjNtT\OCa8t#?'7E14MN>?oi4>p7Y03rrEPUq_<P?"*oCGAV5:kke@MC>jfu`-%oOV0QQ#a'k(:/A;cn(+WpO5k%a`.S?]bo>%5\VF9Uq[X5VKLD=:eM((pm/k%>l:ueYYe%?KJ7pn1Z!fQ>=h1-qh_MR,I4?n!ngJkL,(b/8fqS,D&m!?/&X3(PinZZ%q[>,BVI`L%N9lmam%DjDU0A\0a\bnnj&BVg3FkY1Mp'Q7a,jC-KkekZs"3fs&&#fmPHd'.)g/fEqX9\.Ykrb6h(0:!M7a-moZ\?AQJpfjaK@e(%IY]n\YD'$Z$/JG,XQVenbaM)&)5!+#`U='k.=RM*hK4l,cm1O]*.eGo\l0W.aBjKunP)0Dacm;sqmZFr#][U]\;GZM95O3W]>u?g%.-N1TiW(sa,'t5k9CCdh>0T8rr[L$tR<"q1gW`NGT=ZsfPogV=<:ttUn]IVf1/-FEl>,ksnSl<of^MCO#M7TE`f^U-?5)3:`ApM6%D"XPHHuBE63-["K.ZGGsSr^r"Nh$/B9!,40;2>as2'I;Z2=[ejI,+ZLSsS)b'"<8k47)Wc;V!_\I6gZi!RhMHgA1&-OiXZf(n;rt%LEVh/IPfi4WoJf)0LUP8SDYBJcS!XcJoaa,[tf'qi#Lf!["iani#G.gp5k<bd+KSVeG5"?D;8;J$!$Je$[AtqQEbCh;;Th5;n2g!%4qPIbU8/n:dp,_N5UA`3nGn*PYR>P;$NfpK8Es"()ueX+0\#JmWH_4/W>E%s%.)p+?NTZnMf]`8JK;Df7C^g:ZnL!cb+Ou1i6I3f%B1^F6'u>p)'=S3j<WkKp-JO;;.tSe,X4%j>=V:"^HV=6TB19%7n9P$Am]6\;n.`2:GA?<5A>r,9m?j4R=^.,?7$Zn?\Mam]8GTgS%Q1je7;u;raQ&_gf9ID$"k6pq718]+C.Y=b'D0<8J?;E)l>d.Euf$6>mmDh128OI-7TBC8SCg(:WaQ7Ek7"B(IZVA4gm:Td*@r-A%%bEUDr]`<)mN>+4?`]u&]-^#E"4[sm&ku`hUllh#WPqo[`'mA]V`H1B('cZ!o+)mKQ/#`Q9H<(6^h^TPFJNjG28n/tMbOR9Zqtc/1%]m]]SbYc0rBM.DVB:f@4oC,LCZ)[h3G@p%?l.0%E5H.+3\FUZ6^_7#FP!NXt]EN^26Qu*.E"*4Y66SJ1Ck88dih.6oYK*5]GJ:7b%'GfrLOJQ3WZ\EK-L+K#0bVAk-O<kTm[^ZQs/>3X!AG<m$,npDpgc[?%.AkO_/!n&5,npFQl5geJKL31T>Q[?Z:^Cu1>Q[?Z:rjLB%eI`X%&-]j<0XPeZ/Hpm]UKpMHA6BMsPMH=.Q;@j*i*?FPQ5E!_(ifcg&LbS9V`l`(1/P*Kq,&">h;Wr@PF1Sujq8N:KL-ft\d*s@%Tod;h0OtKD4Do`o9.5HjR9Th]Q;ECCS@JcW/>3XO=h"Zj<o^Yo((;e6fB9kJS4?L^hS7)F\DUqmD@)%'f)gsX:E52#i932C'cS5d%"WMGn:l)@%\HR^=k1G*P0HLLF/so29bCZGb\EUIL:e9#8lbO,4W-C'd/0U>]6^CP>gA0P*6^CP>^?]hD$s>n?W^g++cj1dkT0f4/%n0;Be&=SS4BS<_8=WfO?@F3(hFqtA.7MmtViH5nAbsiO,m7m&,J^A4d6,Pk=&.%ZNA1J4[Eoh1k[p*>Mk;o)al5N-5I*G`Ws+>3q%.B'sHk\%.Q2?hViLpU_fC^OEgRQf4lI?#G3R[GH*SS`j24U#-h<o)MHKL*M&9.:EU8Mt0`.M/&.0PGuCoefq]AbS7FMp8j;RDfuK%E"'TCb:?1@LgS^uUgS-L6FQ\I&1Q8LPqH!YUWgIW+pEU'&7O".a"ceY(E77`qfQdBoI;?RnYqO7\1=CA*m5Uo3X57@dTO!ljc@7o%N^7lPnFi)0ER"`ig(!RqNPF7\T0$q[@38q\^G>YjMg`s$Cj#A[(]-2MLX@W(Jr/nZ=3cRrc*38)Ij+I>!-cGq!d=bpUtck1'p*Qu%P\;DdSJj`Sn!:*H!k&7&/`BI6DXaTPe>rn5+)KtqCd"XAQQIPCjs]_$e!I.mMM@EHm`%[O1Ei"&Kt)$2',SoP.)Fqb'"UVmbkPf4%iM\n2(Bs>-XCjkZpo&=\DkQ!Bh9m_Q[gi1N['Y$J^`EEDITo)RWtTH-s/+[Cb@-//gc"B*4jFADAbp8Y2>oFuP>uYaf(&t!2X%W,%bjU(4S)-+'7DD!hj]S%&gBRU7M3m:^JD1;,2QW6V$+TXqB?TI.Wu3WABlm2_*<h"#1rjDFE"i(b<BINF>IaE6npd2^*-UYnqC!=[%1ZE<%+u95+-B48k!<!GT=P7:U+C5/q+HR$4KKQpX+cq\729+T\!<UpS5d9i56,<H0@O,XB@9+Z3<r5u<$!NV!c++)HkW%h(J%DsH%Q8n#4Lg."22TKChCu)R+_IuRS<E5qCO_]G?clc*GgEuRI\NGp[,RE;;*5oo-K=G\Q*>%(5/C<FQA&Cj:^`:(LUJ'p'1uG%Jclt''%M%4206VWp"c?>AYWrk]grC'm4#<JMn<<qUT\a:DJV?8#(N,A#+XU`FL)4W>)aP+krL_1V8D-EhTS<e/@I:dH:#`eI]XO.H:(r7@W%OS`X/f*2qBH8.?tcsd\Wq3.B0TZ&;bDb/[!6&SSOm`BA)TZ&<MiTJh.$gpKb_Ea1%g;hJ48pVC)/,=Y<4`WN!S0-G`%7gG:$TMZq%Fi&Pl:t!4rXj^P-1%t^S!j9]JcJ6U_M$4m9^47L0U?k.JLWD3+Rcp1!&-=F8-a/FJNbWfEVe\!aA'K&V-93'cJ8bdFC]GT8OrQb1%)ZWG!ZWJ4Lf`48YT+$8\>&IQ[WTt'T<7b[^pTNP0dqPo;hiB&`D#*u1GG$r:OK$?k-.p%<"]LP3:q%1'<Lpnl@@6e9\'"uc7QB8G%*NVh/Tg-<#VT[P<q_=!aLEDKXSB4Q^@J/roKOZ=Z:^[TdVR]&'I`WqFB'$qP?&5q>MufPrT:nYu.c%m5VK!MrA'LTN9V8WP+kl9n%TjuA+ku*Z"=;nD6:/7J/qC^]V9A817n4i&3J.HSV1"c"#q&90R\^g3EO;?fo)m!:m]4h,NaQMABj#;VTS&D8c[dfj'oF4[G)N<P^%VJh8@f3nMg0RZ<fc_g6eHn^gKOPc+G2LIYET#19IftA+KcDaF7q,sF)Pi,o(rK$gS'7U>#pt78;;j_(^Z^4U*SLu_Z9jlm4&1Thr%N2iIm+u:PkM0c3^Pb./M)J'I$70V.&JOC+&12%<tYE_l(HPP+0BF?11!OYlM$#iu;ALjCEm!_M;rP8;:\2__q&Y,WmT;fhI0ZPI1%[dY`Rac\Ok,;sk2/GHH8OB2=dGj&])Z_E`=<nkFf[[?durEiS4;e3cI:9f;l^s4#OZn(GM_Fh-.W)Di*K!5lUf,2]NocU?3Y/J6G%O!(M=g]`b0#bCQ*.gP]bQ3n@fDp;hAX%/R\RLau'.(VhHB'BBXn[V3jB'B@b(_>DrJ$U+sqiQf-n0+J(`?"e6BpUUZ5d2`iCBd9/%OQ84'4u51-fGd)scR68iceU'K*!FN.5e+_=5:0WS43I'Il$rbpDnjAF&E@gj;*e(e4^9>)R)T_&$^JO'p1m69<4`WL31i=f*e\$h%MBGPuKlR=E+LB/ZF*),b3.['nV#j^)?13no4[&sFgfeCNkT-`tTnFt>5UImnoh[un4t\R+2Js/*`R!_slfDrM/d`IuqdM_;*5Xq<%h6d4BjZMlPi2S(X[alA>EPPRI@VjO?\JB-ACdj;BdY2H;="T964['YaY$)HJK5>7c)B0RZdro#M$o4dH?g4SKOMO3g\Y.R4,%PX(%Or8@IFqHJh#^LeM\d01.:(8:UQdslAA=e7o!j5^AL^:nlblC)aMOF`S[:%$m^+-bV)Z57")0V:$#-ruJ8A,q$PtoiI_h2[OC[q<s%ITV"m24KK5,VHMPnb??&N)A.)pJ(+0B\ucTLNYOuX(04ZRrR/B$KL$%ES?-Qq&Z7[TmjHH/"$u@3)<B>AITh;jb$i+oNe"/:(mXr%YONa(dag\O?tBFfs/D+O;r(uPI]7l[>-+ES(ITmX=><l&=sIiVmD9AHll`0X5k!#!7*[aadMsXj.Nl]([G\f`?BNb?Q36ICX^WtR%VQPWTQl-H)3SB[JX)s]7TZG,4]WRB->>f!1?3QZdZ7RN2Q!:cK8[;4-ca't=pR7qI#\9<KmP9WTQQq<Bm9JFSfV%R`4AKP-LlU6C%IhAJ`+!-WhgWW7?:jU<g]4IBDb.@WRo/W[tlP7V\[7t-qg#ro-Y!brJE1,\`YFW"L(L7YE&unP$MP5X_'A7!%+T%jaZM@7Ce4Q<F%B)QPlj3-L#EF@p&jJ".:NV@2Q9]VouOcEL/mnDf:.hR(l=Z@)*kXpLD6l+'90"M\Ch9sf@81u7&3cQJ:pf95G>KVU/m?CX,U0Gcn%N^dV`_2)tX'0>EF["8nGT0oN!-*lWDZ]LKuN[p74B2_6qXlrZc6n!5W((p8NjHaGAPF0-+7hJoUoltk68J5pN&p\kS=OKLEL)ml=%H.L'6T\@f@)u0*1.9P4N]$.%UDC0<I#W65rGDAmY"\f+EYDGt>*EYIKLV%@02K7bUC^TFS@TOblq\IIF0"M[@Q32pn\e;-<("Ki-%"lh_Wlf4$WeO\&C?SA.Lm6$GEUm0$)N>?4.M`P(3mR0n%`_*QT@joU8eDG%Hn6h_k+i]Vof63BK);a!$WA6tXQ8A+V6MohT\`B(N%,(`^Yk*#WA&S%bt%R`Hun?k4E#(M,7AeoO1gZ+#_h-u:'AC#G:VJ`Y-Sc541Fdot](3Si'l@r$h@Z*:SlZ9t@DQuVNos9_djjFsm%'t$JgF[[cLG,?ipX=HVl6T;A@MfhH2O1Cu:>-'5P/adFhMtl)PnaZ1/g2_T%7@?01<$3S[[T085B,W:hdnpghd$P:f)Q[aMGA"Df%YZ)8J57;+]+reZ5O)mb;heJmo$h5`a8Ef8ulqgPi6VV)qRp`R8c.,4HMnkILa9Kj6((kFECg!cpaQP]a'\Q:rBr&IC'h("bQED#o%MBX!S,1It;W@4L1Vec\r<)F:!`:q+9=lCk0rZPVR3lT0$9uZ'D.Z34Dlj0::2GcS+(.2[Z0?>G`MoAp([iiN=5_?0eNoO<Q8d^!m%Lp-lNT-`-2EL_P4:-^c\D0ZTAEupr0C:WuUM%*oS/JC,<dePNcL"#&';Uf`F^6Q&ka?-t(+2n'P:n=^Y'5*W\E]/a8kY86*C,n&H%I.$_)`6rU"Z;bg1/SDt?%TfK\l!3d-(OAgmq:FfR_a3k5M3/d7NG`V\kG"(Y7`i"kPB5,BNpQ]+Ao]LBae>M@@4(03Ods?%@:gj!%f18[&jDGQ#BX,n)P+dO[!ss7#/qt"E$m\4d=LUU'=U#MU(oaZl'!_iiFKMmX[E0_-V>ek`BkY29V"8/SCD+>JSX-7jg-/:)IaV?>%FkjEd1N;.68LRj(d9b)GIT[_/A-oK+FY.jF0eCA[<Q*4FlnRQVMD4@!c_#W$a*?f$dK_7-XAN+h`)tM6gNCt3%B.:99\K5PqOsXr%^BWt.H+*qgVf3[-GRT#J/#])gk72VblEu<SF4bdHC,(]4HV&C+SWKmN%S`"bPS@0/p5Z`,dd1FJdJ'jH;m'$e^YVH^$E6k(.X[l7%g3nA16.Pnk:%&]OE[tmR:`<\m7W(Z>%nbkTd)ang;mf+-^9GYB\`REB,9T_?+4JWYomVun6*ZK?c5`m2W/e'qXRY$OP-s-,f_TJc%YX',hZ1YLV_ROY1p@cJf\^sM6Bi+K<cG*Q8TVYUNkaPts5N0EGD1T`h1V:,$qV8[rf\ZB!`lX<d]:9kY5GA\;Gd"m0K&%&<^G3.Z%%<nQDhVHgZ--GTH_bOU%!>Ht<N4Z=8!/fuWO6a$k!/_$uJbu[m!/`o)JOKc>K_Ap!_BLn$R\lD!##S+S)T)qS4sOhQ019\G4mNS2%7'o8$S\BjJ6AD1$Y;FpZBGLGcrq('FGDKEj/B9EAYG`K!+hU[:YYfVh0o#TH]1Sb3<C5ocmCH6pS4^jZ:84R_W4Scr8F%_;52RMu%e[_9=V/">>;H@m(\$$Eb+S.7['!`*(`s(?DA3!j\.C>gAaJ$kD9pLf$qR2VT2H3#k/uS:]P*m]FHY@iA6QVlb4g[E1+`]O0P,As9%j6&m_3@__/%DG3X/KESYHLJO$^R^h1O^IEKRJq86+?)@^)f"loq3RH4*t'XSg2(]$#7h?5m;B2&!c!g/S<*E:%-$cDs"X!r&3H_"%2+VsY0#bRj4R=,`8;LP`qE$o7;fS.dFl>+!(Fjc`V$S0i]N['DFERmCIKtgSKHe%uM6I\LC*[%,NPu$CYf$B5;<O=>%W/=B.-cDf%4VEToMZ8't:#-3VonG#?_klS-:#`ghJY&?mF-F&6PFe7O%)P<;:3peEcA`l4CSg2@jP6uW\4b/-/+oZP:b=83Dn2l_8WrpLjjI=3%911/1<A(CB[H-iqPY5dh/P5pp<eKQ`6n@]q.BSq2@Op9EWcTG3]7mT-`NtOu_pW<l>Kp_>]&.,cjlil'Ill47&a<ajUt0ZVs-\qt%\qGOsD>#Wh;DZoXrB"5_/ZW614kVu%ED-7n`utnb4oH#cR#-R>D>fXY.;[?b\ZK4:3P/;qb'*DMYkDW;dgb-r*#R6Y)96J\_`CGs%3aG-3VhT>[FX8R>KUpASiJXs9>)*RnFK=ff^t2CE'.'Y)fpqK%-,t,L[?-!\>MbNhJO[ad5%)e*;VJ%fD->e3UuEA!8-uH)pNg^K%]ccR%c.W)n#:[*)ga^/n:^B(T?BAuM(6^EL8\K*C]iYG,:?5E>:eRd\n>nGm?T9)PRB=Nq,dX'*3[S*^EEP>Klgf]:B\Be0o[`+1%(D%lE)ngB>_M.eFmsdiG?(Q"dbcrIh[k>$J1?Immc%r2`]5,(8(scZ_\_CuXDJB\lAF=W1[i<?+KXoi;hX5)1/9)7=39cr:`>S1W%XNK'*Ok,V4+kM=AZ-op04Qgd'F"MWa$VX9#U[4<9r]8j#23co)fX*1Y]2;@Q[?Rb1_PaaFb&6hcFs@@Zih#fomTZ#+]5`k5Ma'uP%lk-qb121hufaVfGPBO-`Z5[_a*K&Q/.(^eYdMAOr;O$!Jo99t^W8l@SdB,j2V"*MLUI'gWj9iGq:eJ%PO(n]*(.D3t5\(]@(d^.L%%.sJrC_MZ:)(3Y`WkaXkaH:Z^q\Eo0d+dH=GqQW*>d3NsjSA[g>>0+b1%3J!_n-R<Q&s%qPYu0`Pn;f6a@[VYplIOYLQpQ_"3(/_%8\*<p1[u^]E)_)*b^/%>jAGXL%KOlI%0.Nbj7,-Q3jR^b"LrJhbhVK1<.\Bd1Uh+'8%8fU`6>@;ee.>12)00Q[WQg=04s?!7J@dC%/\l872J-jWm"7i$CLZF,D<il^d^kgV<SKRI\[$-Z8(c1#V;ncD)2MbJ6&M/rFmnSF/^X`:[*d#-j5%]P+?RJ6[J%OHKnihQ2kmtM%X(erX_j`/l%e&"^GHC;4Vm%%oGMbh>]RQWFm"Cf.3q[Coic,4ZrF(D8G"N7D)/T3=4/->kU%6'VT5/DG18qi>DRDiH"rgTf7"TPN%c!\Ercf9(?c!\Er%qD@rUh6i>Knm1$luNp^hX5n@IH9C5%W?PVPDW_k3P8X*n:#7T4[-UDmpB7RHBf>[j1A2_UO#p*2%mK/74&YC%6A:U#?HgWW$.d:7Zul^@YTU(&8o8UPGJbA;BE'Xg1Dt.>RB>ZH7&DnkcEjppGE"+2H;R%?fY?F_f'X@l^[G+NR`,_"9c0EekLC8.%3UEU;@dNCf4*W,2bhc=o_V99dXXCeN[f*OR[(HD\)1<=JQAW(hANUk>n.:L0)^BNO"$Gk`hiKHrV$T45om5Z-E\s50+QcH8_JB!>%0>,"qk]69"D'cLFO/H/323KFq58EXE++A2Z)\5O<ap*$#Fg%VC]hQ<Z7Xo^2=1_Bop=,cl1RK@96o`.(Xe0CZW(Y<E.]9,(fN8Q*%P?1eV#I<8eN\oeHQY`?qmPjTtM?8s>._R)D<)pUT8s2&FHaQ`E^=*"\mhX1j^.t==[?Pcq[i>+,<H,:/UfC$Xr8`>h;0!sEX`W%F%c_:sm#DlTP@TGEW>tWW,X#6LNku.!8r'ndU/.[c\#QLh!EW#f/VgpP&l''[eN_C!A%7R2t;Y@%K'%e?u'W&P?XVV0upS4T@gh1#m%)X':44Q9)Nc0#Tl^lZ6JM,',Bs!]%;mVcQ=mQhP&VUV=G!\9:W75k0kp3iW*j8G1+JjFd_e*p:!\Q[&.MrP#_aik"<L?$Rh<<W[6%eT.4_7/>a`G>l#cSOE%`_bO%2>iE/>:jq!7*JPp-7<,NqCE(e!5sFSs?)dDG(of#c?`$W!)H9VN<W0`A_D+XB]\h#0Xm?S6n[kE.%i1P(h%*j]?G.=#+YQr7^0>qHr_I@ciH`$[S^L#UMICh;_;_:Q[Nj#,3"aT>beH`)CW$MHR&BY[e\6%p*Rp48=87Sep&)T_VFX>Y0%ZnE&9T9X)!G+%X[mDc,?nYs)!FB[D%(-7(Cn`&Qp<'B9?jls<ocq%uXb['Srl@[.;/V:Ih(T!>oEJYT6Z<oh=@Z-*WUg.dX*o>i=%k@Vm)`Q_"nZ\,m<E'KgMZ`km=U4Z;$][K(lAi;(95#`T7LNpkpbgI^ZS*0uI_oWt#BUMTIk7lBG)%V4e3A)#kI=8AdKdO)a_J+SS%Rn\j.k%njL6L;)D/'2B^+@i_b]M@=DNfiWs]'*i25uPj]KsTs;MKXguh2b1ahoJ/Bj?K\<>8X71^4]8Cjh(Dm+^?>4GN(;F:'[11%#cqL-(eA%=a9j3X^Z&m+)It*OrAq#:eONbF^@dG[$?Q(83s%Y-)DJ'^T>XchE:)i_&tqd'>S$c](Ni0hS54Sp<$:k#go[^)o"jAZ%%j"sLMN7:$2XE+=XEQ.TX5S.hCYL^O+W;sEEE1._L_>Opo6l3[T$k%+m#u?\#9A]>qAUkc+@8=n,H2I7L>,8K-9ME")DXUlUV%Rr%4JC=$$S)/E_@B+FYuTu*"!S@f5r9gl!iK.R*9K%a5CV7_mfS9ed<A-iYV,9?@Tkmld!krpNfO#a10pd!"l+L`G%An][o5Lg_DTNf%Stcg.-6RBVPb:prf^-l,aI`;s--oHZEYE@*:ODO6@5.$2VZ>RaMdPS`d,VQHq%.n0:,+/6CBb;]os.O=,MqHZ(iA6-.DGB'Vsa8/%N.0C`b:U3:3N35/LZrb9H!;r8IM>.o6i-k=g=qFR53)rNQ1377%>5.XrA-0Q!kIKM<GR=W\]JT3'ZmAP"K#84dc`0H0;%J7>(N1U%.tYU*Zs=FG46oIq@QYRd&E@44rY)o6NI&?P^Vdm,]Fj[E4L)a(bMJ2i?e+%?n%/7#e+-RQp=UB\2prYM_H#jY5`D%VSZcpL,=4fs%h<k+cf[q_s*Hq8l-#2s1T\B-QH>29h@,,U6n8/6#Th@Qk4?g'&,R_"JAqC(WTJ16oN&laOhe[(5)r86;Mm"KEKgK=o2D[Ae<\/03%B9dM:rZj9Ka99C18[ZTOUFJo9AA;E+I%MJBO&D1C=Pp`K<kf[Y%/9JmoY?\5WqY,qrPF$(X?QJg0/RXk;S@l1V-9-hE[U8Sie5H[%n`MePRtf)EPgGF*.pP4JBd\]3rlt+MTq6Kl%B&4_\S>mVZ<M&bDUl'XgRlNPGOr<ZgB0E1i!l)alakbNi!kRap&L*dGXI]W[K)=$%GQVEB9n;7,hKXEk!KIh<K4b&T!0._;6\7#G!]Ws5%AauO")sdG)nZfm#B63K)f!N2#N.Rm2b;D1&)]Eu2q2^%%`!&cDs6l.*J!/Q%hOkFo&uo+BhC&D`rWG2Ui!lb[RfLJ8]KmG^HN7\IGXJj(Ef_j-T.:Ln&qrY*L8H]5FCDndN<(U<UXl>?c`-+l8O,j9qq26M_]""u%DX-s#pJ(mf<k@sYZQEbS>='"+O$igmLHcc),<t'up]EVopoZPrd\qL[5?kn&WA9WNaFQ.u(H)?t)9@@bFCssUH^(ghI[qC'.m%8@%"]U>,1tkHP/.`)fTp*"\W5Jn?7,WUg,0/V4)rXSl2es!E%heJo.lQgVm7&Q^R*FY$"*60^^If$Sg&!FC0:l/aQ;OM="PL])=l4_C%AJBIq"f_mCEpZ'J/rXl.0:6F0/Refi0Z9k'C;ni00o](Xr*]^^#^Rp!je#5sR?G_4gnY,RTg@`q^$!HmL=5Bgg:hIZ\3!&BQ1LF+%o*E$Q"'Sjr,?!:2l^.0`O[XRp^O0cg2ZK"f87V="*/S"1FF%"+PAS<GkX?B'h7[D$J8UCJ"L"X7[9s5jeN#MM/!HTgHZt=5g@XKR%L_eDTQ,n)4VPtFlbJ1mkrL)$C:K=Q0iCp&p:!8RMf2FLG!_Gb"4jnAiU6$GtXEaaa^llag]kWn)o7J@A5\p?q0DE-:&R7\or9a/C%X'-*tU6FeLPb/.>k#%3^[c5da?fZ+)KraJ#'b58N-tT?VT[DHemJ2=eLVrZ,i#]F%01L'%+P5'h<G9NZfR<;&I(9Q#3CabSh5oTO%>JO'"H$"FAe6!aFW-k-WoD?/WnS>D^IUJBX_PT<^k'm_BH.>B9fXDI]*GrLQb.EAuqKoMWk\V9Q4XJSY.Fgm.edLG4n4j'!*H0Hc%_GD:pn.^`%4:H:ZU1qWKIK!_iWQtEAC?nqlD<p2IDJj'-[=p3G+YAtYmB##6>09h<c74=N['pp6=gh9NIG0WhlpQmJ%LqNFrH3Tq%lV3SDKiPOKbSl#=LXH_*g5iaCWr\a[pWlP6-foP_UcM+?1]c9%M"bO'g!%7tH`qPZ?b,1[0_VZc<JU*XLA7EBTDKA`[iQXi)MHjh%^e8Bk[;bXr.?;D0]4`;8@;F0k#0rb%?PN)A.`%U,#o.;Cr4K*8%T>NdXQWYk\O%9T^h&e(f1\F"qcYR6Z<fLTMU,t+-=4]f'3e7(%c.1-Pj_CLE60`t.Oq6fcn/aNu!;(@3"d4>8!L8_j1/+k>V0II_]$I'%#Qp!qqG]WeFXF=?CO_E)fc6MJ:E0kc[9;Jdo4e8<gh#aE%<s[YueqUV*c'&<2.Sm2YmorjCcPn@1qj!/pXV,VE;(M<cC0<!_>"kGh<b\jB*AEp!A=@JApQ71bZ!^$S!$M%u36D_=5O>#_@0n3f%[Zd&oe&;4Zj"is0qSQR37sjEVZf.nKoYe0rCBp-ol.7dXSC8$`*tm^//UYQTJHNHr(nNB;rYG(lH,&E_Vh'7BWDb2).uQ"j&ncdX%@7)VI.J1_kUdpc08(t%Ca]V2m9s^_QRL>@0/NT0*n("^B_g@eI=s[iTD49f+j5o*$c0q(Gfni\-_c4g$HC7fj4e.m>M$Em($U+L[%m0/clSfmuB>,BWkl/F0ae>[MS8tSn]qe>:ETpg"Y8sul=g?mMOm:c%DTA,H.gl;eY^\MVSp05diZJ`$u+?P<E4[-DYBgKlCX`bh=%J_];,A3oA%f"#\78X[H+D`5?*]24EE^0..\p@dS]*W:mmk/hG^)7CSKOjW3pT+47/00[RUVi:UqP7";UQe5mYVjLZnMLJ1jUp-,b%9rb'Z[]d]=C=X0dCp!Eqf@Jrm;DQ&LCYQ,<(/E+lb`F:?r7YuU+0Dj946]o#PH>V%KB8Ol:Q8:q\Jj5n\`d-jCuKR8A!1\[R^8FN%!r#Kt/_8T!IX.22KPl0EKrYII[)fqP]T][)1.`_QeB-KARVTru88?[A(tl8hU3/s[nfH`<I^@i,rJ`4Ls$)n%-.`V%pT;;'UFMgU%/T7:o7#jHM5`!CL7!Gm]i0$X;2,NO[G;*%Lj#ROlgG_G8%UBkE&]2!IRI:ijQl3VQHo^;qcb3`cpkf@NZK\tpp#IW0'XeZD@2aUE%WG>fD]O[C=553WSRZfH*LqYH2Op1L:m\+Yc-GtDQo_\G(7Oo:+Wd"imDpR`QnCHg%SqO;VU1uk1jam]Col_F64pOdr1`Dnhg3"KZ%a\@CKdKD$djZbUPjn*8,p'B#%n(6c$#2K/IZ$nM.O`*>LGG1/T9s*/6qEmD<L0CkLQV(oV,Gu4t6qire]:cA4Y%eo$b!D`?1%A+?%CKUKo\Vq+jTr287HUd?Bb5L=j8CU0aQ0s^\LcD3\[;<O(jS<9O?+Mm3,ep"\V(GDoNZMqBR]<-K%SbhTf\C`?VMJ<LAa/V[G'26=%N)]M?Erh!/mRM4!2l;9bG5"T5e7`Mca4DU%O=;p>;uO5(puL>Xr@hUhakAXt!tbV(-!:o2=7@:/[C5fMB[,jn66DK^n6nq&l;U,4%V,E0<<,[#$9,0)(UIqUMfF>1q@Nl\lQLD"%&pBmZ$:Nj93@o@AWjt^g>\</mB'_s.gY^gNdAUB]cLD#P2`J_$GkOhN72ui0pe(FX%JNNC!1m(EfC8K(L0\%WcmNQl:rl*s;,Z6b-rE*j]T,rr8DD5IGT\Q$t"KCk&6AbhPSi`NE?Qusn3HF\\(PQl;G:.)]9#YkZ:rN7B%@U1Un>'`g_I4KjWoG.cmqrn_SJ\I;6n:p.%ngEp4?^CtLM-%DoQII<^7AEkBU=oeXC%c;&2/!A8@3jB.i<$ubHc*&-R]lGW?>3bJ%ibE)TUnuK8^/^CF=63a5a=E=TjMmFGc'#u>^4Z/Vh;Ti/)%L<6c(OEI,#kRn?ERH+H92MV]HkW1h=jF]PO*hsU7HU.^\u7ReilUc%_r1+iM;!mK1[r#qdFpc^Hs)MsV_V9*Gs%+d9I1Xbc$SEFo$I%=aAk!SeQ=lri7u6A7E^W-W5jX^kC1Bdi^LC7TAr@?pgVa[6@s\*%(?/V;+PdFHDR#F"_iA6.iYIFT0jeX:$:5N=a08U2dN'<._NTklo_-3n$;>W/,a6F3;[qXROR6"T7)"b<?mb-#pWkMU*,W$I>t$7U%PiAhs$>Q_`7[%N&:Al:/-L=0M=VUuG(Ej$gFISm(DiY=]4F';``F#`9"L/crgR7[nb*o/>HW:P=/"^.iC^^j<3un3G1I#6rM<d9P%;t3ti?1,BJmP48*;%=DjDMd-)Ik=0'P6RO@f/*4--;q@VpkMaTJXni/%3-*^&L*H8=(8Cd(>Ci!>ET!>FVBYc$Yb!""UI7KM8iES%kP=uCX=",!k^[5O.c[\_QH\C\6-<2G3r?o5i\/:-?oU>frR:Z:YT*4a%/^Y99r9gN:>FdeED0aoq7,euOI%oYi5Y<>j*QUtI]):9%B0,r/[snA187PQXjS7l1]TM'Dn%QTLR>h2GLO"H[iMRf%Ye<::?TcP%!WM!O:JYZdiLu23etWXFQQAVq$3%,ZmjSeI^r%<X^2Is0%rs=tF38&Om1)jNCldE\VaUKE08)kP\jDSAci9udu?j5BDoUV-,IJr%:aKFkA\3q$/\IB^RM@(QgH0#@g@"i;hcTHd,f=9_-:5;-7%b&TZ8Iue?*1<kes>+q`s2%DC.X/#V4h\[g2CB&&7.g:c,7SI6uMOJ8`0#,,IdE/WIZX"s,0qWJXdA3WhRKohh[,%b\gT5Q)-8*p<%LRL6_P_?TaCrF]Q&WIi?7ZaP!BCB6`mJRh`F-(>urVHI_:<7\<STh%*Ir5N2-Y.Z_\t6i0+Loh/o<;[db/H:B+WcW`\KnUO8kEu!%Ob&aZLM,XEJ`1kF2#5>B>[D"kDk9&:fQ6"C8`_VS1cApr1gP/^*]oT^Z#XVnK#!1_`As'?EX=(,R\kHl1?N,1?u1_blI.@D%grK0%i#,W`.431F%$03r@+c_s3f/JMYfTk/i=h<gZ;H/dGaRI:I4V6LCfF(_M2_ur-<rlli``pU`mXWA$_K_U3@<$\Bfo(o"RJha9JKY;%A0Q'9BS'Y+ON'^&.:+-2`c',NqOZ@q""=./J4jF=r%k[K-,t[ll+j,`INuZ`d5[aj?uI=op_/B2_$EnOIXHe0q.N)+;]B`S.4HN^%Z\P5bq2I?a7Tge@ITqHB0e$5j!\I.]"L@SrHrT/MM1sX!6'fm\0MrHS0aVP<CaTXOfDMQ/C&R-/=5r\f"`$:&b8F?<ZFo6D:/D^)%+s%If?8PHA598#3At%do^PMpG,R07O'6.8k8^\`MO:\,?PGCsX*0U\h1Ja3!*#WfQ8XSBg9]cW$a'kjm%OK.9a"t(u"HK'$*1nu5%kWU^mkhDO*njd\GTIJ37$?EX[Y2b54cCcI=k&$&*D!TI5\A5.T.O?BL("3cUH.Y^-Gg\]KrcBuhRq\&1OVOWh*B;ch_F?Z,OXJ3b%eun.,p[7sc]`H)j&l@>9<$'.KK^FXj$9O^kq#jLlUg.CqA>Dd$'ilE`0?u`7YAIMUU2!s;d^f);#n)bp/'@B[6V1#&-f)E+ch8k>%#ROeg$7oJM92ldh;b`PQ6qUBhc'.SOq.KS)k/C;!;e&!'=).Z.Wud<`0XOB4W[Bq;EG5LFE)\Pc68VE"^)@l0R=DZQDMY+1V*JFH%-_h(tU<pir0e?e=66%<\*#iGa1/T3OJt5/;**Gh_I;5?cVZV2f7@(UebFWf!*;.]IJjFq)7[&4O?[eL*f!S5XIr:H0#hU&W.*81V%WMG'3.rB&EqOhMj0MdnI*6mSVQ=:j!flB5e$>NW.S\J$T!(2[N$YDmcQ%C1Y<0DKB)#tcF$=*$J.%6t]T8r&T1JKWJd*:QM_1IV:%:msX^,:iFHb^Hc8=XL;$f"F<Jgm:ra^d8`JdiA-^.Onk@_=4OSJ,\-HU69:(B1N\L#1._g)j6R6H\T>@d1eaojV/8]U][,u?rolS%$1g"LbL'R$Agt0s-:&bkPqPl$OMSt^M@;4fJ.6LoIrXo(:/@i*03A_;7]!;TgN-%#Qj[-DhdB.9WT8V>JL$U38T8cBit[?7&Jkbp%1eC=gqp8ScVF`[9OWIpn8G,q=_[`OmJoj1+.Bm3V'Z4!a.<Yqs;_i0mGflt1/2t5=+O5"PeJa&g_%8l0,_;I65qjIETQ7;ORf)D`%4u^q9j,gJaKl<#CmkE;N@AI+-+uPd1+YVcM+5eh8L]uF_!F$Ul@(sE`\2`^0Lstj3p$H6bH\pVW)aE'&b7kTRnqmgS%@5$b8c1*$%&kLjKSjEClP.&MO+%'s%fS?9o@!iTd%2=JK3;b/L-56.Ws6">7K`;<?MuR3oQUTkjoFUFmT:RMPau4T2a[p]g3";$"1($SWN\\Dg%-jM*(Fs(S:qV`*4Tdf!P%V`R(6j<E&#7CjPr!s>Y@?lu1i5B%@nlCpfV<%Z;V[0]j!J2]<'Y=ri'(frj2ebh#2%$Ak[h+S^pQ#R&%NUnTbjN-=b:cf5Cad3'bKQ10J(Zd?):Ph^2n/aM7<LmPao"e?Ql!&/]Wdi)o.8jaZ2kcJkH<LhVaplO)U'sh4b=ZWj':@8nPuPm?%7&dUD60^B?<o^j$Q2d6D#$rS$k_d6S#Y>N03MABV!AFJW@o@;eO!pjp,-9,#Lg:P/JX9H,'Th-YrGH^>RPZ@[Lr[ID,q"o]`4-B9%:s)^73i'#K\l%?Wb$D12Uo(*PWG+u,Ums8!2n#nWDUFI%5ormd'eCT/)]13HX(c*GkF!#Ui=[SV!h@b35p3;WUi@TrDeLn8kVUg(%-`,aFCc!ai;qe^R2/mqYF4-j4jXFnaV3Hq'H5g)?JMZIY,@oP7c[^HVD.@49.=o:(,V2*MA^rV$.Djm%ko_Z/*#:C82?ZJf4=,u@%9d5/B$md8J$F4]"6W9S@K&8jKM)_D]$QCCrg74BA9mK@";Ca%@V<5ekR84TCNKphZjm<3e2M3poEZ-h`cG\s$,WS3ni-7$@C)W#_%J1?>MN8Q7?%;%t+S<VHqHNqNeZu86qnM441PEMXh:Qn6uV.?COgXnRcA23rhOU[10!b<D9j*2rsZQdK3\.%FTSqEjF6OkOf50#Zh%$A4UB*b!)ui+Uh@1P+p10Sls,PU%WlBB0t9g9^$:YgJ:o,,r[T8YIH0O)e6b9U+f\gP"Cua2o:Q^,TroWAnT6CqHpj-:QWF!>TcM%66`8U;b_m=R],nD4;'@3S;8VqqTpAe8WjZBBfo]PE(#U6B;29%74DqkI?][]D<ZPT5r_^uUP??*\Q(JG5]jPNUoQ=$fU(lugt?Eh%nplg"e.EphO#BWP1"c;u7`ZgOUsK]P+6@5cR4)(c[Y9YU)*X0f_PH79_,B5P\H*#j4)0A?FJ5/C8KFqq_+92Enn437iY]3qndB83%Y-jdVR\CRoVFgGX1D2Y-7Z[h:[6ef?P+(V_0S\hi,\Z?DA"8!?*m3gnMbfmm!2p=TO,FsTT:2JiV526+;)6#B8rXr&&r9XVUiU6%%i$/ReUokhX8I\Q1342%E)C$m=Gs.ulH+C0E!tM?D%$VQQBr.brW$uIYC78*D3?q^3qHqr!]^@*k,fmYLif]Ke?^*JTA]Q\IKT`46%D.Ss^orgPe`KZB_L/@,]AXJ_s[4!=qY)e_XelHMg2TS(&q-3$fKQVm9$=H5-BN,'U2>00^]`,sn8,bd3":(pgNs,G*8:QR]NNae:%&OU>uiHR='S@>A6%]f<tFldV*=qXiT?"36.]Bf"_c<GqXol"V*lMZ#5PLb6U2Ho/2f<dF&ID[]WKAYMgEp[^;hS/t&;rA>bFe>jX%<qZATY9".Y~>%AI9_PrivateDataEnd
%!PS-Adobe-3.1 EPSF-3.0%%Title: a95.eps%%Creator: Adobe Illustrator(R) 11%%AI8_CreatorVersion: 11.0.0%AI9_PrintingDataBegin%%For: Lisa Tauxe%%CreationDate: 2/11/07%%BoundingBox: 0 0 723 354%%HiResBoundingBox: 0 0 722.9468 353.6636%%CropBox: 0 0 722.9468 353.6636%%LanguageLevel: 2%%DocumentData: Clean7Bit%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)%%+ procset Adobe_CoolType_Utility_T42 (1.0 0)%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.19 0)%%+ procset Adobe_CoolType_Core (2.23 0)%%+ procset Adobe_AGM_Core (2.0 0)%%+ procset Adobe_AGM_Utils (1.0 0)%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors:  Cyan Magenta Yellow Black%%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 64 8%%BeginData: 5156 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD19FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FD31FFA8A8A8FFA8FF%A8A8A8FFA8FFA8FFA8FD2CFFFD05A8FFA8FD09FFA8FFFFFFA8A8A8FD2BFF%A8A8A8FFA8FD0BFFA8FFA8FFA8FD28FFA8A8A8FD13FFA8FFA8FD27FFA8FF%A8FD15FFA8FFA8FD22FFA8A8A8FD19FFA8A8A8FD21FFA8A8A8FD1BFFA8FD%20FFA8A8FD1EFFA8FD1FFFA8A8A8FD1DFFA8A8FD13FFA87DA8FD06FFA8A8%FD21FFA8A8A8FD13FF52A87DFD05FFA8FD22FFA8A8FD10FF7D527DA8FD2C%FFA8FD12FF52527DA8FFFFFFA8FD25FFA8FD0FFFA85252A8FFFFFFA8A8A8%FFFFFFA1A1FD21FFA8A8FD11FF7D7D52FFFFA87DFD27FF7DFD10FFA8FD0A%FFCAA1FD23FFA8FD15FFA8FD29FFA8FD12FFA8FD0FFF9ACAFD1CFFA8FD13%FFA8FD2BFFA8FD21FFA1A8FD04FFCA9AFD0DFFCAFD09FFA8FD11FFA8FD2D%FFA8FD0EFFA8A8A8FD11FFCAFFFFFFA8FD0DFFA19AFD08FFA8A8A8FD0FFF%A8FD2FFFA8FD16FFA1FD0BFFCAFFA8FD29FFA8FD31FFA8FD0CFFA8FFFFFF%CACAFFFFCAA1A8FD09FFA89AA89AA19AFD19FFA8FD0CFFA8FD33FFA8FD0A%FFA8FD05FF6FCAA1FD11FFA8FD19FFA8FD0BFFA8FD3EFF7DFD07FFA1A1FD%0AFFA8FD21FFA8FD09FFA8A8FD34FFA8A8FD0DFF9A9AFD05FFCAFD07FFA1%A1FD21FFA8FD3FFFA8FD07FFA8FD04FFA893A8FD05FF6FCAFD06FF6FFD07%FFA8FD1AFFA8A8FD07FFA8FD37FFA8FD06FFA8FD11FFA8FFAECAFD04FFA8%A1FF9ACAFD21FFA8FD23FF9ACAFD05FFCAA1FD12FFA8FD0FFFAFAFA8FFA8%AEAEFD04FFCA9AFFFFA16FFD19FFA8FD05FFA8FD23FFAFCAA8FD05FFA1A1%FD0CFFA8FD05FFA8FD0FFFA8A1FD0CFFCA939AFD19FFA8A8FD05FFA8FD21%FFCA9AFD04FF93C3FD10FFA8FD04FFA8FD0FFF7CC3A151A8FFFFAEA1FD05%FFA893A1FD19FFA8A8FD04FFA8FD22FF9AA1FFFD04A19AFD10FFA8A8FFFF%A8FD09FF6FFD05FFAEFFFFA80AA8FFFFAE9AA89AA1FFFFFFA8FD06FFC39A%FD13FFA8FD27FFA1CA9AA16F6F9ACA93FD12FFA8FD0BFFA8FD05FFA8FFFF%AEFFFF76A1FFFFA1CAFD0AFFA8CAFD14FFA8FFFFFFA8FD1FFFA89376CAA1%A1A19AA1CAA8FD11FFA8FFFFA8FD09FF9AC3FFFFFFCAA8FD05FFAFA8CAFD%27FFA8FD21FFA8CA9A689A6F26A8A19AFF9A76FD10FFA8A8FD08FF9A9AA8%FFFFFF9AC3AFAEA8A1A7AEFD26FFA8FFFFA8A8FD21FFA1CA76CA3410449A%68CA9ACAFD0EFFA8FFFFA8FD13FF6FA0FD2AFFA8FD22FFA1766F9AA84A9A%A1FD13FFA8A8FD0DFFA8FD06FFCBA8FD27FFA8FFA8A8FD22FFA19A6F6868%6FFD14FFA8FD0FFFCA93FFFFCAA8CAFFFFFF9AA8FD27FFA8FD22FFCA9A93%9AA1CAFFFFFFCAFD11FFA8A8FD0DFFCAFFFFFF9A9A9AFFFFFFA8FD25FFA8%FD27FF6F93A8A1A89ACAA19AFFA1FD26FF9AC3FD26FFA8FFA8FD25FFA8CA%A1FFA1FFFFFFA89AFD0EFFA844FD0BFFAFFD0AFFCAA1FD06FFA8A8FFFF7D%A8FFFF7DA8FFA87DFFFFA8A8FFFF7DFFFFA87DFFA8A8FFA87DFF7D7DFFA8%FD1EFF7DFFFFA87DFFFFFF4BCAFFA8A8FFFF7DA8FFA87DFFFF7DFFFFA8A8%FF7DA8FF7DCAFD0BFFC3A1FD05FFCAFD0BFFA8FFFFFF7DA1CAFF7DFFFFFF%7DFFFFA8A8FFFFA8FFFFA8A8FFFF7DFFA8A8FFA87DFFA8FD1EFFA8FFFFA8%A8FFFFAF76CAFFA8FFFFFF7DFFFFFF7DFFFFA8FFFF7DFFFFA8A8FF7DA8FD%0BFFA1CAFD05FF9AA1CAA8FD0DFF9AC3FD18FFA8FFA8FD3EFFA8FD15FF9A%A1FD2AFFA8FD3DFFA8A8FD3DFFA8FFA8FD3DFFA8FFFFA8FD3FFFA8FD3DFF%A8A8A8FD07FFCA9AFD07FFA1FD13FFA8A1FD16FFA8FFFFA8A8FD3BFFA8FF%FFA8FD07FFCAA1FD06FFA19AFD14FF9AFD19FFA8FD3FFFA8FD05FFA176FD%0CFFCAA1FD07FF9A9AFD1EFFA8FFFFFFA8FD3BFFA8FFFFA8FD13FFA1A1FD%26FFA8FD44FFA8FD39FFA8A8FD04FFA8A8FD38FFA8A8A8FD3EFFA8FD05FF%A8FD39FFA8FD04FFA8FD39FFA8FD06FFA8FD38FFA8FD06FFA8FD3FFFA8FD%77FFA8FD08FFA8FD37FFA8FD07FFA8FD35FFA8A8FD09FFA8FD35FFA8FD08%FFA8FD35FFA8FD0AFFA8FD34FFA8A8FD09FFA8FD33FFA8FD4CFFA8FD31FF%A8FD0DFFA8FD40FFA8FD2FFFA8FD0FFFA8FD31FFA8FD0DFFA8A8FD2DFFA8%A8FD10FF7DFD2EFFA8A8FD50FFA8FD2DFFA8FD11FFA8A8FD2AFFA8A8FD13%FFA8FD2BFFA8FD14FFA8FD27FFA8FD17FFA8FD29FFA8FD15FFA8A8FD25FF%A8A8A8FD17FF7DFD26FFA8A8FD18FFA8FD23FFA8FD1BFFA8FD25FFA8FD1A%FFA8FFA8FD1FFFA8FD1DFFA8A8A8FD1FFFA8FFA8FD1CFFA8A8A8FD1DFFA8%FD20FFA8A8FD1DFFA8FD21FFA8A8FD17FFA8FFA8A8A8FD23FFA8FFA8FD17%FFA8A8A8FD24FFA8A8A8FD13FFA8A8A8FD29FFA8FD14FFA8A8FD2AFFA8FF%A8A8A8FFA8FD05FFA8FFA8A8A8FFA8FD2DFFA8FFA8A8A8FD0AFFA8A8FFA8%A8A8FD2EFFA8A8A8FFA8FFA8FFA8FFA8FFA8FD35FFA8FFA8FFA8A8A8FFA8%FFA8FD38FFA8FFA8FD3FFFA8FD1EFFFF%%EndData%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 68 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 	exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/bdict{	mark}bdf/edict{	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end}def/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup () cvn eq{						pop (Process)					}if				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust	AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse	AGMUTIL_GSTATE_flt setflat	end}def/get_gstate_and_matrix{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_ctm matrix currentmatrix def	end	get_gstate}def/set_gstate_and_matrix{	set_gstate	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_ctm setmatrix	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/agm_sethalftone{ 	dup	begin		/_Data load		/Thresholds xdf	end	level3 	{ sethalftone }{		dup /HalftoneType get 3 eq {			sethalftone		} {pop} ifelse	}ifelse} def /rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		exch () /SubFileDecode filter	}	{		exch pop	}	ifelse	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/filter_indexed_devn{	cvi Names length mul names_index add Lookup exch get} bdf/filter_devn{		4 dict begin	/srcStr xdf	/dstStr xdf	dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch		[			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx			currentdict /srcStr get /readstring cvx /pop cvx			/dup cvx /length cvx 0 /gt cvx [				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx				names_index Names length currentdict /srcStr get length 1 sub {					1 /index cvx /exch cvx /get cvx					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx				} for				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx			] cvx /if cvx			/end cvx		] cvx		bind		/exec cvx	] cvx	end} bdf/AGMUTIL_imagefile nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	10 dict begin	/imageDict xdf	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def	/imbufIdx 0 def	/origDataSource imageDict /DataSource get def	/origMultipleDataSources imageDict /MultipleDataSources get def	/origDecode imageDict /Decode get def	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def	/srcDataStrs [ imageDict begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi string		} repeat		end ] def	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse	{		/imbufCnt imageDict /DataSource get length def		/imbufs imbufCnt array def		0 1 imbufCnt 1 sub {			/imbufIdx xdf			imbufs imbufIdx imbufLen string put			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put		} for		DeviceN_PS2 {			imageDict begin		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def			/MultipleDataSources false def			/Decode [0 1] def			end		} if	}{		/imbuf imbufLen string def		Indexed_DeviceN level3 not and DeviceN_NoneName or {			imageDict begin		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def			/Decode [0 1] def			end		}{			imageDict /DataSource {AGMUTIL_imagefile imbuf readstring pop} put		} ifelse	} ifelse	imageDict exch	load exec	imageDict /DataSource origDataSource put	imageDict /MultipleDataSources origMultipleDataSources put	imageDict /Decode origDecode put		end} bdf/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		2 dict begin		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {			/imbuf imbufLen string def		}if		1 1 Height { 			pop			MultipleDataSources {			 	0 1 DataSource length 1 sub {					DataSource type dup					/arraytype eq {						pop DataSource exch get exec					}{						/filetype eq {							DataSource exch get imbuf readstring pop						}{							DataSource exch get						} ifelse					} ifelse					AGMUTIL_imagefile exch writestring				} for			}{				DataSource type dup				/arraytype eq {					pop DataSource exec				}{					/filetype eq {						DataSource imbuf readstring pop					}{						DataSource					} ifelse				} ifelse				AGMUTIL_imagefile exch writestring			} ifelse		}for		end		true	}ifelse	end} bdf/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}defstatusdict /product known userdict /AGMP_current_show known not and{	/pstr statusdict /product get def	pstr (HP LaserJet 2200) eq 		pstr (HP LaserJet 4000 Series) eq or	pstr (HP LaserJet 4050 Series ) eq or	pstr (HP LaserJet 8000 Series) eq or	pstr (HP LaserJet 8100 Series) eq or	pstr (HP LaserJet 8150 Series) eq or	pstr (HP LaserJet 5000 Series) eq or	pstr (HP LaserJet 5100 Series) eq or	pstr (HP Color LaserJet 4500) eq or	pstr (HP Color LaserJet 4600) eq or	pstr (HP LaserJet 5Si) eq or	pstr (HP LaserJet 1200 Series) eq or	pstr (HP LaserJet 1300 Series) eq or	pstr (HP LaserJet 4100 Series) eq or 	{ 		userdict /AGMP_current_show /show load put		userdict /show {		  currentcolorspace 0 get		  /Pattern eq		  {false charpath f}		  {AGMP_current_show} ifelse		} put	}if	currentdict /pstr undef} if/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		1 dict begin		/flushbuffer Width cvi string def		1 1 Height cvi			{			pop			0 1 DataSource length 1 sub				{				DataSource exch get				dup type dup 				/filetype eq					{					exch flushbuffer readstring pop pop					}if				/arraytype eq					{					exec pop					}if				}for			}for		end		}		{		/DataSource load type dup 		/filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 div mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		/arraytype eq			{			1 1 Height { pop DataSource pop } for			}if		}ifelse	end}bdf/addprocs{	  2{/exec load}repeat	  3 1 roll	  [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin	 currentdict 2 index known{	 	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse		 addprocs /TransferFunction xdf 		 currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/clonearray{	dup xcheck exch	dup length array exch	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 	{	Adobe_AGM_Core/AGMCORE_tmp AGMCORE_tmp 1 add ddf 	dup type /dicttype eq		{			AGMCORE_tmp			exch			clonedict			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	dup type /arraytype eq		{			AGMCORE_tmp exch			clonearray			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	exch dup	AGMCORE_tmp 4 -1 roll put	}forall	exch {cvx} if}bdf/clonedict{	dup length dict	begin		{		dup type /dicttype eq			{				clonedict			} if		dup type /arraytype eq			{				clonearray			} if		def		}forall	currentdict	end}bdf/DeviceN_PS2{	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and} bdf/Indexed_DeviceN{	/indexed_colorspace_dict AGMCORE_gget dup null ne {		/CSD known	}{		pop false	} ifelse} bdf/DeviceN_NoneName{		/Names where {		pop		false Names		{			(None) eq or		} forall	}{		false	}ifelse} bdf/DeviceN_PS2_inRip_seps{	/AGMCORE_in_rip_sep where	{		pop dup type dup /arraytype eq exch /packedarraytype eq or		{			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and			{				/currentcolorspace exch AGMCORE_gput				false			}			{				true			}ifelse		}		{			true		} ifelse	}	{		true	} ifelse} bdf/base_colorspace_type{	dup type /arraytype eq {0 get} if} bdf/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 216 dict dup begin put/nd{	null def}bind def/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSA_cache 0 dict def/AGMCORE_CSD_cache 0 dict def/AGMCORE_pattern_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_ovp nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/AGMCORE_Default_PageSize nd/AGMCORE_currentbg nd/AGMCORE_currentucr nd/AGMCORE_gradientcache 32 dict def/AGMCORE_in_pattern false def/knockout_unitsq nd/AGMCORE_CRD_cache where{	pop}{	/AGMCORE_CRD_cache 0 dict def}ifelse/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	2 dict begin	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	end	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/npth_clp{	newpath clip} def/add_grad{	AGMCORE_gradientcache 3 1 roll put}bdf/exec_grad{	AGMCORE_gradientcache exch get exec}bdf/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/dictstackcount countdictstack def	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	dictstackcount 1 countdictstack 1 sub {end}for	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont	/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto	/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show			0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp xpt				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf	errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if	/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def	AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if	/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_currentbg currentblackgeneration def	/AGMCORE_currentucr currentundercolorremoval def	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	level2 not{		/xput{			dup load dup length exch maxlength eq{				dup dup load dup				length dup 0 eq {pop 1} if 2 mul dict copy def			}if			load begin				def 			end		}def	}{		/xput{			load 3 1 roll put		}def	}ifelse	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_tmpmatrix matrix def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 10 def		/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr xpt			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr xpt		}def		/grestoreall {			AGMCORE_&grestoreall			Adobe_AGM_Core			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core begin				/AGMCORE_gstackptr exch def				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def			end			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and	{		/AGMCORE_&sysshfill systemdict/shfill get def		/AGMCORE_&usrshfill /shfill load def		/AGMCORE_&sysmakepattern systemdict/makepattern get def		/AGMCORE_&usrmakepattern /makepattern load def	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/devicen_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	<<	/MaxPatternItem currentsystemparams /MaxPatternCache get	>>	setuserparams	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_have_reported_unsupported_color_space false def	/AGMCORE_report_unsupported_color_space	{		AGMCORE_have_reported_unsupported_color_space false eq		{			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf		} if	}def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def	/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/LeaveColorUnchanged eq					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			dup map_alias {				/Name get exch pop			} if			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor						currentgray 0 eq					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						Adobe_AGM_Core/AGMCORE_name xddf						false						Adobe_AGM_Core/AGMCORE_in_pattern known {Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse						not currentpagedevice/OverrideSeparations known and							{							currentpagedevice/OverrideSeparations get								{								/HqnSpots /ProcSet resourcestatus									{									pop pop pop true									}if								}if							}if												{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not							}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace							false							currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall							not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				dup true exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or						{pop}						{convert_spot_to_process and}ifelse					}				forall					{					true exch						{						dup (Cyan) eq exch						dup (Magenta) eq 3 -1 roll or exch						dup (Yellow) eq 3 -1 roll or exch						(Black) eq or and						}forall						not					}{pop false}ifelse				}{				false exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or					{pop}					{convert_spot_to_process or}ifelse					}				forall				}ifelse			}ifelse		}def	}ifelse		/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	AGMCORE_host_sep{		/setcolortransfer		{ 			AGMCORE_cyan_plate{				pop pop pop			}{			  	AGMCORE_magenta_plate{			  		4 3 roll pop pop pop			  	}{			  		AGMCORE_yellow_plate{			  			4 2 roll pop pop pop			  		}{			  			4 1 roll pop pop pop			  		}ifelse			  	}ifelse			}ifelse			settransfer  		}			def		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/AGMCORE_RemoveProcessColorNames			{			1 dict begin			/filtername				{				dup /Cyan eq 1 index (Cyan) eq or					{pop (_cyan_)}if				dup /Magenta eq 1 index (Magenta) eq or					{pop (_magenta_)}if				dup /Yellow eq 1 index (Yellow) eq or					{pop (_yellow_)}if				dup /Black eq 1 index (Black) eq or					{pop (_black_)}if				}def			dup type /arraytype eq				{[exch {filtername}forall]}				{filtername}ifelse			end			}def		/AGMCORE_IsSeparationAProcessColor			{			dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or			}def		level3 {			/AGMCORE_IsCurrentColor				{				gsave				false setoverprint				1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor				currentgray 0 eq 				grestore				}def			/AGMCORE_filter_functiondatasource				{					5 dict begin				/data_in xdf				data_in type /stringtype eq					{					/ncomp xdf					/comp xdf					/string_out data_in length ncomp idiv string def					0 ncomp data_in length 1 sub						{						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put						}for					string_out					}{					string /string_in xdf					/string_out 1 string def					/component xdf					[					data_in string_in /readstring cvx						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx						[/pop cvx ()]cvx /ifelse cvx					]cvx /ReusableStreamDecode filter				}ifelse				end				}def			/AGMCORE_separateShadingFunction				{				2 dict begin				/paint? xdf				/channel xdf					begin					FunctionType 0 eq						{						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def						currentdict /Decode known							{/Decode Decode channel 2 mul 2 getinterval def}if						paint? not							{/Decode [1 1]def}if						}if					FunctionType 2 eq						{						paint?							{							/C0 [C0 channel get 1 exch sub] def							/C1 [C1 channel get 1 exch sub] def							}{							/C0 [1] def							/C1 [1] def							}ifelse									}if					FunctionType 3 eq						{						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def									}if					currentdict /Range known						{/Range [0 1] def}if					currentdict					end				end				}def			/AGMCORE_separateShading				{				3 -1 roll begin				currentdict /Function known					{					currentdict /Background known						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf					/ColorSpace [/DeviceGray] def					}{					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq						{						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def						}{						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put						}ifelse					ColorSpace 0 get /Separation eq						{							{								[1 /exch cvx /sub cvx]cvx							}{								[/pop cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll put							pop						}{							{								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx							}{								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll bind put						}ifelse					ColorSpace 2 /DeviceGray put																							}ifelse				end				}def			/AGMCORE_separateShadingDict				{				dup /ColorSpace get				dup type /arraytype ne					{[exch]}if				dup 0 get /DeviceCMYK eq					{					exch begin 					currentdict					AGMCORE_cyan_plate						{0 true}if					AGMCORE_magenta_plate						{1 true}if					AGMCORE_yellow_plate						{2 true}if					AGMCORE_black_plate						{3 true}if					AGMCORE_plate_ndx 4 eq						{0 false}if							dup not currentoverprint and						{/AGMCORE_ignoreshade true def}if					AGMCORE_separateShading					currentdict					end exch					}if				dup 0 get /Separation eq					{					exch begin					ColorSpace 1 get dup /None ne exch /All ne and						{						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and							{							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 								{								/ColorSpace									[									/Separation									ColorSpace 1 get									/DeviceGray										[										ColorSpace 3 get /exec cvx										4 AGMCORE_plate_ndx sub -1 /roll cvx										4 1 /roll cvx										3 [/pop cvx]cvx /repeat cvx										1 /exch cvx /sub cvx										]cvx																		]def								}{								AGMCORE_report_unsupported_color_space								AGMCORE_black_plate not									{									currentdict 0 false AGMCORE_separateShading									}if								}ifelse							}{							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor							0 exch 							dup not currentoverprint and								{/AGMCORE_ignoreshade true def}if							AGMCORE_separateShading							}ifelse							}if								currentdict					end exch					}if				dup 0 get /DeviceN eq					{					exch begin					ColorSpace 1 get convert_to_process						{						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 							{							/ColorSpace								[								/DeviceN								ColorSpace 1 get								/DeviceGray									[									ColorSpace 3 get /exec cvx									4 AGMCORE_plate_ndx sub -1 /roll cvx									4 1 /roll cvx									3 [/pop cvx]cvx /repeat cvx									1 /exch cvx /sub cvx									]cvx																	]def							}{							AGMCORE_report_unsupported_color_space							AGMCORE_black_plate not								{								currentdict 0 false AGMCORE_separateShading								/ColorSpace [/DeviceGray] def								}if							}ifelse						}{						currentdict						false -1 ColorSpace 1 get							{							AGMCORE_IsCurrentColor								{								1 add								exch pop true exch exit								}if							1 add							}forall						exch 						dup not currentoverprint and							{/AGMCORE_ignoreshade true def}if						AGMCORE_separateShading						}ifelse					currentdict					end exch					}if				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not					{					exch begin					ColorSpace dup type /arraytype eq						{0 get}if					/DeviceGray ne						{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate not							{							ColorSpace 0 get /CIEBasedA eq								{								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def								}if							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or								{								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def								}if							ColorSpace 0 get /CIEBasedDEFG eq								{								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}]								}if							currentdict 0 false AGMCORE_separateShading							}if						}if					currentdict					end exch					}if				pop				dup /AGMCORE_ignoreshade known					{					begin					/ColorSpace [/Separation (None) /DeviceGray {}] def					currentdict end					}if				}def			/shfill				{				clonedict				AGMCORE_separateShadingDict 				dup /AGMCORE_ignoreshade known					{pop}					{AGMCORE_&sysshfill}ifelse				}def			/makepattern				{				exch				dup /PatternType get 2 eq					{					clonedict					begin					/Shading Shading AGMCORE_separateShadingDict def					currentdict end					exch AGMCORE_&sysmakepattern					}{					exch AGMCORE_&usrmakepattern					}ifelse				}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf	/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def	/map_index	{		1 index mul exch getinterval {255 div} forall	} bdf	/map_indexed_devn	{		Lookup Names length 3 -1 roll cvi map_index	} bdf	/n_color_components	{		base_colorspace_type		dup /DeviceGray eq{			pop 1		}{			/DeviceCMYK eq{				4			}{				3			}ifelse		}ifelse	}bdf	level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		/level2ScreenFreq{			begin			60			HalftoneType 1 eq{				pop Frequency			}if			HalftoneType 2 eq{				pop GrayFrequency			}if			HalftoneType 5 eq{				pop Default level2ScreenFreq			}if			 end		}def		/currentScreenFreq{			currenthalftone level2ScreenFreq		}def		level2 /setcolorspace AGMCORE_key_known not and{			/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get dup /Separation eq					{						pop						dup length array copy						dup dup 1 get						current_spot_alias						{							dup map_alias							{								begin								/sep_colorspace_dict currentdict AGMCORE_gput								pop pop	pop								[ 									/Separation Name 									CSA map_csa									dup /MappedCSA xdf 									/sep_colorspace_proc load								]								dup Name								end							}if						}if						map_reserved_ink_name 1 xpt					}{						/DeviceN eq 						{							dup length array copy							dup dup 1 get [ 								exch {									current_spot_alias{										dup map_alias{											/Name get exch pop										}if									}if									map_reserved_ink_name								} forall 							] 1 xpt						}if					}ifelse				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if			}def		}if		}{		/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/currentScreenFreq{			currentscreen pop pop		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def		/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def		/setcolor_devicecolor		{			base_colorspace_type			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def		/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse	/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/devn /setdevicencolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/devncs /setdevicencolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/f /fill ldf	/ef /eofill ldf	/@ /stroke ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall	/currentpagedevice currentpagedevice def/getrampcolor {/indx exch def0 1 NumComp 1 sub {dupSamples exch getdup type /stringtype eq { indx get } ifexchScaling exch get aload pop3 1 rollmul add} forColorSpaceFamily /Separation eq	{	sep	}	{	ColorSpaceFamily /DeviceN eq		{		devn		}		{		setcolor		}ifelse	}ifelse} bind def/sssetbackground { aload pop setcolor } bind def/RadialShade {40 dict begin/ColorSpaceFamily exch def/background exch def/ext1 exch def/ext0 exch def/BBox exch def/r2 exch def/c2y exch def/c2x exch def/r1 exch def/c1y exch def/c1x exch def/rampdict exch def/setinkoverprint where {pop /setinkoverprint{pop}def}ifgsaveBBox length 0 gt {newpathBBox 0 get BBox 1 get movetoBBox 2 get BBox 0 get sub 0 rlineto0 BBox 3 get BBox 1 get sub rlinetoBBox 2 get BBox 0 get sub neg 0 rlinetoclosepathclipnewpath} ifc1x c2x eq{c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse}{/slope c2y c1y sub c2x c1x sub div def/theta slope 1 atan defc2x c1x lt c2y c1y ge and { /theta theta 180 sub def} ifc2x c1x lt c2y c1y lt and { /theta theta 180 add def} if}ifelsegsaveclippathc1x c1y translatetheta rotate-90 rotate{ pathbbox } stopped{ 0 0 0 0 } if/yMax exch def/xMax exch def/yMin exch def/xMin exch defgrestorexMax xMin eq yMax yMin eq or{grestoreend}{/max { 2 copy gt { pop } {exch pop} ifelse } bind def/min { 2 copy lt { pop } {exch pop} ifelse } bind deframpdict begin40 dict beginbackground length 0 gt { background sssetbackground gsave clippath fill grestore } ifgsavec1x c1y translatetheta rotate-90 rotate/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def/c1y 0 def/c1x 0 def/c2x 0 defext0 {0 getrampcolorc2y r2 add r1 sub 0.0001 lt{c1x c1y r1 360 0 arcnpathbbox/aymax exch def/axmax exch def/aymin exch def/axmin exch def/bxMin xMin axmin min def/byMin yMin aymin min def/bxMax xMax axmax max def/byMax yMax aymax max defbxMin byMin movetobxMax byMin linetobxMax byMax linetobxMin byMax linetobxMin byMin linetoeofill}{c2y r1 add r2 le{c1x c1y r1 0 360 arcfill}{c2x c2y r2 0 360 arc fillr1 r2 eq{/p1x r1 neg def/p1y c1y def/p2x r1 def/p2y c1y defp1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin linetofill}{/AA r2 r1 sub c2y div def/theta AA 1 AA dup mul sub sqrt div 1 atan def/SS1 90 theta add dup sin exch cos div def/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def/p1y p1x SS1 div neg def/SS2 90 theta sub dup sin exch cos div def/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def/p2y p2x SS2 div neg defr1 r2 gt{/L1maxX p1x yMin p1y sub SS1 div add def/L2maxX p2x yMin p2y sub SS2 div add def}{/L1maxX 0 def/L2maxX 0 def}ifelsep1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add linetoL1maxX L1maxX p1x sub SS1 mul p1y add linetofill}ifelse}ifelse} ifelse} ifc1x c2x sub dup mulc1y c2y sub dup muladd 0.5 exp0 dtransformdup mul exch dup mul add 0.5 exp 72 div0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt1 index 1 index lt { exch } if pop/hires exch defhires mul/numpix exch def/numsteps NumSamples def/rampIndxInc 1 def/subsampling false defnumpix 0 ne{NumSamples numpix div 0.5 gt{/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def/rampIndxInc NumSamples 1 sub numsteps div def/subsampling true def} if} if/xInc c2x c1x sub numsteps div def/yInc c2y c1y sub numsteps div def/rInc r2 r1 sub numsteps div def/cx c1x def/cy c1y def/radius r1 defnewpathxInc 0 eq yInc 0 eq rInc 0 eq and and{0 getrampcolorcx cy radius 0 360 arcstrokeNumSamples 1 sub getrampcolorcx cy radius 72 hires div add 0 360 arc0 setlinewidthstroke}{0numsteps{dupsubsampling { round cvi } ifgetrampcolorcx cy radius 0 360 arc/cx cx xInc add def/cy cy yInc add def/radius radius rInc add defcx cy radius 360 0 arcneofillrampIndxInc add}repeatpop} ifelseext1 {c2y r2 add r1 lt{c2x c2y r2 0 360 arcfill}{c2y r1 add r2 sub 0.0001 le{c2x c2y r2 360 0 arcnpathbbox/aymax exch def/axmax exch def/aymin exch def/axmin exch def/bxMin xMin axmin min def/byMin yMin aymin min def/bxMax xMax axmax max def/byMax yMax aymax max defbxMin byMin movetobxMax byMin linetobxMax byMax linetobxMin byMax linetobxMin byMin linetoeofill}{c2x c2y r2 0 360 arc fillr1 r2 eq{/p1x r2 neg def/p1y c2y def/p2x r2 def/p2y c2y defp1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax linetofill}{/AA r2 r1 sub c2y div def/theta AA 1 AA dup mul sub sqrt div 1 atan def/SS1 90 theta add dup sin exch cos div def/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def/p1y c2y p1x SS1 div sub def/SS2 90 theta sub dup sin exch cos div def/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def/p2y c2y p2x SS2 div sub defr1 r2 lt{/L1maxX p1x yMax p1y sub SS1 div add def/L2maxX p2x yMax p2y sub SS2 div add def}{/L1maxX 0 def/L2maxX 0 def}ifelsep1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add linetoL1maxX L1maxX p1x sub SS1 mul p1y add linetofill}ifelse}ifelse} ifelse} ifgrestoregrestoreendendend} ifelse} bind def/GenStrips {40 dict begin/ColorSpaceFamily exch def/background exch def/ext1 exch def/ext0 exch def/BBox exch def/y2 exch def/x2 exch def/y1 exch def/x1 exch def/rampdict exch def/setinkoverprint where {pop /setinkoverprint{pop}def}ifgsaveBBox length 0 gt {newpathBBox 0 get BBox 1 get movetoBBox 2 get BBox 0 get sub 0 rlineto0 BBox 3 get BBox 1 get sub rlinetoBBox 2 get BBox 0 get sub neg 0 rlinetoclosepathclipnewpath} ifx1 x2 eq{y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse}{/slope y2 y1 sub x2 x1 sub div def/theta slope 1 atan defx2 x1 lt y2 y1 ge and { /theta theta 180 sub def} ifx2 x1 lt y2 y1 lt and { /theta theta 180 add def} if}ifelsegsaveclippathx1 y1 translatetheta rotate{ pathbbox } stopped{ 0 0 0 0 } if/yMax exch def/xMax exch def/yMin exch def/xMin exch defgrestorexMax xMin eq yMax yMin eq or{grestoreend}{rampdict begin20 dict beginbackground length 0 gt { background sssetbackground gsave clippath fill grestore } ifgsavex1 y1 translatetheta rotate/xStart 0 def/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def/ySpan yMax yMin sub def/numsteps NumSamples def/rampIndxInc 1 def/subsampling false defxStart 0 transformxEnd 0 transform3 -1 rollsub dup mul3 1 rollsub dup muladd 0.5 exp 72 div0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt1 index 1 index lt { exch } if popmul/numpix exch defnumpix 0 ne{NumSamples numpix div 0.5 gt{/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def/rampIndxInc NumSamples 1 sub numsteps div def/subsampling true def} if} ifext0 {0 getrampcolorxMin xStart lt{ xMin yMin xMin neg ySpan rectfill } if} if/xInc xEnd xStart sub numsteps div def/x xStart def0numsteps{dupsubsampling { round cvi } ifgetrampcolorx yMin xInc ySpan rectfill/x x xInc add deframpIndxInc add}repeatpopext1 {xMax xEnd gt{ xEnd yMin xMax xEnd sub ySpan rectfill } if} ifgrestoregrestoreendendend} ifelse} bind def}def/page_trailer{	end}def/doc_trailer{}defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA map_csa setcolorspace_opt		set_crd	end}def/setsepcolor{ 	/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/setdevicencolor{ 	/devicen_colorspace_dict AGMCORE_gget begin		Names length copy		Names length 1 sub -1 0		{			/devicen_tints AGMCORE_gget 3 1 roll xpt		} for		TintProc	end} def/sep_colorspace_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 	current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	/MappedCSA CSA map_csa def	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf	AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx							AGMCORE_host_sep{								AGMCORE_is_cmyk_sep								/Name cvx 								/AGMCORE_IsSeparationAProcessColor load /exec cvx								/not cvx /and cvx 							}{								Name inRip_spot_has_ink not							}ifelse							[		 						/pop cvx 1							] cvx /if cvx							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc /setcolor ldf						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/additive_blend{  	3 dict begin  	/numarrays xdf  	/numcolors xdf  	0 1 numcolors 1 sub  		{  		/c1 xdf  		1  		0 1 numarrays 1 sub  			{			1 exch add /index cvx  			c1 /get cvx /mul cvx  			}for 		numarrays 1 add 1 /roll cvx   		}for 	numarrays [/pop cvx] cvx /repeat cvx  	end}def/subtractive_blend{	3 dict begin	/numarrays xdf	/numcolors xdf	0 1 numcolors 1 sub		{		/c1 xdf		1 1		0 1 numarrays 1 sub			{			1 3 3 -1 roll add /index cvx  			c1 /get cvx /sub cvx /mul cvx			}for		/sub cvx		numarrays 1 add 1 /roll cvx		}for	numarrays [/pop cvx] cvx /repeat cvx	end}def/exec_tint_transform{	/TintProc [		/TintTransform cvx /setcolor cvx	] cvx bdf	MappedCSA setcolorspace_opt} bdf/devn_makecustomcolor{	2 dict begin	/names_index xdf	/Names xdf	1 1 1 1 Names names_index get findcmykcustomcolor	/devicen_tints AGMCORE_gget names_index get setcustomcolor	Names length {pop} repeat	end} bdf/setdevicencolorspace{ 	dup /AliasedColorants known {false}{true}ifelse 	current_spot_alias and {		6 dict begin		/names_index 0 def		dup /names_len exch /Names get length def		/new_names names_len array def		/new_LookupTables names_len array def		/alias_cnt 0 def		dup /Names get		{			dup map_alias {				exch pop				dup /ColorLookup known {					dup begin					new_LookupTables names_index ColorLookup put					end				}{					dup /Components known {						dup begin						new_LookupTables names_index Components put						end					}{						dup begin						new_LookupTables names_index [null null null null] put						end					} ifelse				} ifelse				new_names names_index 3 -1 roll /Name get put				/alias_cnt alias_cnt 1 add def 			}{				/name xdf								new_names names_index name put				dup /LookupTables known {					dup begin					new_LookupTables names_index LookupTables names_index get put					end				}{					dup begin					new_LookupTables names_index [null null null null] put					end				} ifelse			} ifelse			/names_index names_index 1 add def 		} forall		alias_cnt 0 gt {			/AliasedColorants true def			0 1 names_len 1 sub {				/names_index xdf				new_LookupTables names_index get 0 get null eq {					dup /Names get names_index get /name xdf					name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq					or or or not {						/AliasedColorants false def						exit					} if				} if			} for			AliasedColorants {				dup begin				/Names new_names def				/AliasedColorants true def				/LookupTables new_LookupTables def				currentdict /TTTablesIdx known not {					/TTTablesIdx -1 def				} if				currentdict /NComponents known not {					/NComponents TintMethod /Subtractive eq {4}{3}ifelse def				} if				end			} if		}if		end	} if	dup /devicen_colorspace_dict exch AGMCORE_gput	begin	/MappedCSA CSA map_csa def	currentdict /AliasedColorants known {		AliasedColorants	}{		false	} ifelse	/TintTransform load type /nulltype eq or {		/TintTransform [			0 1 Names length 1 sub				{				/TTTablesIdx TTTablesIdx 1 add def				dup LookupTables exch get dup 0 get null eq					{					1 index					Names exch get					dup (Cyan) eq						{						pop exch						LookupTables length exch sub						/index cvx						0 0 0						}						{						dup (Magenta) eq							{							pop exch							LookupTables length exch sub							/index cvx							0 /exch cvx 0 0							}							{							(Yellow) eq								{								exch								LookupTables length exch sub								/index cvx								0 0 3 -1 /roll cvx 0								}								{								exch								LookupTables length exch sub								/index cvx								0 0 0 4 -1 /roll cvx								} ifelse							} ifelse						} ifelse					5 -1 /roll cvx /astore cvx					}					{					dup length 1 sub					LookupTables length 4 -1 roll sub 1 add					/index cvx /mul cvx /round cvx /cvi cvx /get cvx					} ifelse					Names length TTTablesIdx add 1 add 1 /roll cvx				} for			Names length [/pop cvx] cvx /repeat cvx			NComponents Names length  			TintMethod /Subtractive eq  				{  				subtractive_blend  				}  				{  				additive_blend  				} ifelse		] cvx bdf	} if	AGMCORE_host_sep {		Names convert_to_process {			exec_tint_transform		}		{				currentdict /AliasedColorants known {				AliasedColorants not			}{				false			} ifelse			5 dict begin			/AvoidAliasedColorants xdf			/painted? false def			/names_index 0 def			/names_len Names length def			Names {				AvoidAliasedColorants {					/currentspotalias current_spot_alias def					false set_spot_alias				} if				AGMCORE_is_cmyk_sep {					dup (Cyan) eq AGMCORE_cyan_plate and exch					dup (Magenta) eq AGMCORE_magenta_plate and exch					dup (Yellow) eq AGMCORE_yellow_plate and exch					(Black) eq AGMCORE_black_plate and or or or {						/devicen_colorspace_dict AGMCORE_gget /TintProc [							Names names_index /devn_makecustomcolor cvx						] cvx ddf						/painted? true def					} if					painted? {exit} if				}{					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {					/devicen_colorspace_dict AGMCORE_gget /TintProc [						Names names_index /devn_makecustomcolor cvx					] cvx ddf					/painted? true def					exit					} if				} ifelse				AvoidAliasedColorants {					currentspotalias set_spot_alias				} if				/names_index names_index 1 add def			} forall			painted? {				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put			}{				/devicen_colorspace_dict AGMCORE_gget /TintProc [					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx					0 0 0 0 () /findcmykcustomcolor cvx 0 /setcustomcolor cvx				] cvx ddf			} ifelse			end		} ifelse	}	{		AGMCORE_in_rip_sep {			Names convert_to_process not		}{			level3		} ifelse		{			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt			/TintProc level3 not AGMCORE_in_rip_sep and {				[					Names /length cvx [/pop cvx] cvx /repeat cvx				] cvx bdf			}{				/setcolor ldf			} ifelse		}{			exec_tint_transform		} ifelse	} ifelse	set_crd	/AliasedColorants false def	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		currentdict /CSD known {			CSD get_csd /Names known {				CSD get_csd begin				currentdict devncs				AGMCORE_host_sep{					4 dict begin					/devnCompCnt Names length def					/NewLookup HiVal 1 add string def					0 1 HiVal {						/tableIndex xdf						Lookup dup type /stringtype eq {							devnCompCnt tableIndex map_index						}{							exec						} ifelse						setdevicencolor						currentgray						tableIndex exch						HiVal mul cvi 						NewLookup 3 1 roll put					} for					[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt					end				}{					level3					{					[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt					}{					[/Indexed MappedCSA HiVal						[						Lookup dup type /stringtype eq							{/exch cvx CSD get_csd /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}							{/exec cvx}ifelse							/TintTransform load /exec cvx						]cvx					]setcolorspace_opt					}ifelse				} ifelse				end			}{			} ifelse			set_crd		}		{			/MappedCSA CSA map_csa def			AGMCORE_host_sep level2 not and{				0 0 0 0 setcmykcolor			}{				[/Indexed MappedCSA 				level2 not has_color not and{					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{						pop [/DeviceGray]					}if					HiVal GrayLookup				}{					HiVal 					currentdict/RangeArray known{						{ 							/indexed_colorspace_dict AGMCORE_gget begin							Lookup exch 							dup HiVal gt{								pop HiVal							}if							NComponents mul NComponents getinterval {} forall							NComponents 1 sub -1 0{								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range								NComponents 1 roll							}for							end						} bind					}{						Lookup					}ifelse				}ifelse				] setcolorspace_opt				set_crd			}ifelse		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep {		/indexed_colorspace_dict AGMCORE_gget dup /CSD known {			begin			CSD get_csd begin			map_indexed_devn			devn			end			end		}{			AGMCORE_gget/Lookup get 4 3 -1 roll map_index			pop setcmykcolor		} ifelse	}{		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSD known and {			/indexed_colorspace_dict AGMCORE_gget /CSD get get_csd begin			map_indexed_devn			devn			end		}		{			setcolor		} ifelse	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave		dup clonedict begin		1 setgray		/Decode [0 1] def		/DataSource <FF> def		/MultipleDataSources false def		/BitsPerComponent 8 def		currentdict end		systemdict /image get exec		grestore		}if	consumeimagedata}def/add_csa{	Adobe_AGM_Core begin			/AGMCORE_CSA_cache xput	end}def/get_csa_by_name{	dup type dup /nametype eq exch /stringtype eq or{		Adobe_AGM_Core begin		1 dict begin		/name xdf		AGMCORE_CSA_cache		{			0 get name eq {				exit			}{				pop			} ifelse		}forall		end		end	}{		pop	} ifelse}def/map_csa{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get	}if}def/add_csd{	Adobe_AGM_Core begin		/AGMCORE_CSD_cache xput	end}def/get_csd{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get	}if}def/pattern_buf_init{	/count get 0 0 put} def/pattern_buf_next{	dup /count get dup 0 get	dup 3 1 roll	1 add 0 xpt	get				} def/cachepattern_compress{	5 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	/string_size 16000 def	/readbuffer string_size string def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	/LZWFilter 	{		exch		dup length 0 eq {			pop		}{			patarray dup length 1 sub 3 -1 roll put		} ifelse		{string_size}{0}ifelse string	} /LZWEncode filter def	{ 				ReadFilter readbuffer readstring		exch LZWFilter exch writestring		not {exit} if	} loop	LZWFilter closefile	patarray					end}def/cachepattern{	2 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	{		ReadFilter 16000 string readstring exch		patarray dup length 1 sub 3 -1 roll put		not {exit} if	} loop	patarray dup dup length 1 sub () put						end	}def/add_pattern{	Adobe_AGM_Core begin		/AGMCORE_pattern_cache xput	end}def/get_pattern{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get		dup wrap_paintproc	}if}def/wrap_paintproc{   statusdict /currentfilenameextend known{	  begin		/OldPaintProc /PaintProc load def		/PaintProc		{		  mark exch		  dup /OldPaintProc get stopped		  {closefile restore end} if		  cleartomark		}  def	  end  } {pop} ifelse} def/make_pattern{	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix			  1 index begin		BBox 0 get XStep div cvi XStep mul /xshift exch neg def		BBox 1 get YStep div cvi YStep mul /yshift exch neg def		BBox 0 get xshift add		BBox 1 get yshift add		BBox 2 get xshift add		BBox 3 get yshift add		4 array astore		/BBox exch def		[ xshift yshift /translate load null /exec load ] dup		3 /PaintProc load put cvx /PaintProc exch def		end	gsave 0 setgray	makepattern	grestore}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{	currentcolorrendering/Intent known{		currentcolorrendering/Intent get	}{		null	}ifelse	Intent ne{		false  		Intent		AGMCORE_CRD_cache {			exch pop 			begin				dup Intent eq{					currentdict setcolorrendering_opt					end 					exch pop true exch						exit				}if			end		} forall		pop		not{			systemdict /findcolorrendering known{				Intent findcolorrendering pop				/ColorRendering findresource 				dup length dict copy				setcolorrendering_opt			}if		}if	}if} def/add_crd{	AGMCORE_CRD_cache 3 1 roll put}def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict/CRD known{			AGMCORE_CRD_cache CRD get dup null ne{				setcolorrendering_opt			}{				pop			}ifelse		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse		currentcolorspace dup type /arraytype eq			{0 get}if		/DeviceRGB eq			{			currentdict/UCR known				{/UCR}{/AGMCORE_currentucr}ifelse			load setundercolorremoval			currentdict/BG known 				{/BG}{/AGMCORE_currentbg}ifelse			load setblackgeneration			}if	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cpaint_gcomp{	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/path_rez{	dup 0 ne{		AGMCORE_deviceDPI exch div 		dup 1 lt{			pop 1		}if		setflat	}{		pop	}ifelse 	}def/set_spot_alias_ary{	/AGMCORE_SpotAliasAry where{		pop pop	}{		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf		true set_spot_alias	}ifelse}def/set_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry{				dup/Name get AGMCORE_name eq{					save exch					/Adobe_AGM_Core currentdict def					/CSD get get_csd					exch restore					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias	/AGMCORE_&setcustomcolor AGMCORE_key_known not {		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput	Adobe_AGM_Core begin	/setcustomcolor	{		dup /customcolor_tint exch AGMCORE_gput		current_spot_alias{			1 index 4 get map_alias{				mark 3 1 roll				setsepcolorspace				counttomark 0 ne{					setsepcolor				}if				pop				pop			}{				AGMCORE_&setcustomcolor			}ifelse		}{			AGMCORE_&setcustomcolor		}ifelse	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		initializepage		/initializepage{}def		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if	/mysetup where {		/mysetup [1 0 0 1 0 0] put	}if	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put	level2		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if}def/driver_check_media_override{	/PrepsDict where		{pop}		{		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq			{			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and			}if			{			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix			}if		}ifelse}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defendendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.23 0%%Copyright: Copyright 1997-2003 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.23 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }ifuserdict /Adobe_CoolType_Core 60 dict dup begin put/Adobe_CoolType_Version 2.23 def/Level2?	systemdict /languagelevel known dup		{ pop systemdict /languagelevel get 2 ge }	if defLevel2? not	{	/currentglobal false def	/setglobal /pop load def	/gcheck { pop false } bind def	/currentpacking false def	/setpacking /pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpacking/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel		2 copy known not			{ 2 copy 3 dict dup /args 7 index 5 add array put put get }			{			get dup /args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch /args exch put				}				{ pop }			ifelse			}		ifelse			begin			count 2 sub 1 index lt				{ pop count 1 sub }			if			dup /argCount exch def			dup 0 gt				{				exch 1 index 2 add 1 roll				args exch 0 exch getinterval 			astore pop				}				{ pop }			ifelse			count 1 sub /restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		end	} bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{ { pop } repeat }				{ pop }			ifelse			args 0 argCount getinterval {} forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{ { end } repeat }		{ pop }	ifelse	} bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	} bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	} bind def/@ReRaise	{	cvx $error /errorname get errordict exch get exec	stop	} bind def/@Stopped	{	0 @#Stopped	} bind def/@#Stopped	{	@_SaveStackLevels	stopped		{ @_RestoreStackLevels true }		{ @_PopStackLevels false }	ifelse	} bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get /args get exch get		end	} bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup begin		mark			{				(*) { pop stop } 128 string /Category			resourceforall			}		stopped		cleartomark		currentdict eq dup			{ end }		if		not		}		{ false }	ifelse	def/CTHasResourceStatusBug	Level2?		{		mark			{ /steveamerige /Category resourcestatus }		stopped			{ cleartomark true }			{ cleartomark currentglobal not }		ifelse		}		{ false }	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec				{ cleartomark false }				{ { 3 2 roll pop true } { cleartomark false } ifelse }			ifelse			end		} bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad /ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup /CMap CTHasResourceStatusBug						{ CTResourceStatus }						{ resourcestatus }					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup /CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{ exit }								{ stop }							ifelse							}						ifelse						}						{ pop }					ifelse					}				128 string /CMap resourceforall				}			stopped				{ cleartomark }			stopped pop			setglobal			}		if		}	if	} bind def/doc_setup	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mov /moveto load def		/nfnt /newencodedfont load def		/mfnt /makefont load def		/sfnt /setfont load def		/ufnt /undefinefont load def		/chp /charpath load def		/awsh /awidthshow load def		/wsh /widthshow load def		/ash /ashow load def		/sh /show load def		end	userdict /Adobe_CoolType_Data 10 dict dup		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end put	} bind def/doc_trailer	{	currentdict Adobe_CoolType_Core eq		{ end }	if	} bind def/page_setup	{	Adobe_CoolType_Core begin	} bind def/page_trailer	{	end	} bind def/unload	{	systemdict /languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{ undef }				{ pop pop }			ifelse			}		if		}	if	} bind def/ndf	{	1 index where		{ pop pop pop }		{ dup xcheck { bind } if def }	ifelse	} def/findfont systemdict	begin	userdict		begin		/globaldict where { /globaldict get begin } if			dup where pop exch get		/globaldict where { pop end } if		end	endAdobe_CoolType_Core_Defined	{ /systemfindfont exch def }	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{ pop } ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq { 0 } { dup length } ifelse	2 index length add 1 add dict		begin		exch			{			1 index /FID eq				{ pop pop }				{ def }			ifelse			}		forall		dup null eq			{ pop }			{ { def } forall }		ifelse		currentdict		end	exch setglobal	} bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	} bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index  known			{ SharedFontDirectory 3 index get /FontReferenced known }			{ false }		ifelse		}		{		FontDirectory 3 index known			{ FontDirectory 3 index get /FontReferenced known }			{			SharedFontDirectory 3 index known				{ SharedFontDirectory 3 index get /FontReferenced known }				{ false }			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont /FontReferenced get		2 index dup type /nametype eq			{findfont}		if ne			{ pop false }		if		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{ 2 copy get 3 index 3 1 roll put }		for		pop pop pop		}		{		dup type /nametype eq		  { findfont }	  if		dup dup maxlength 2 add dict			begin			exch				{				1 index /FID ne					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type /stringtype eq { cvn } if def dup			currentdict			end		definefont def		}	ifelse	} bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type /dicttype ne			{ 0 dict }		if		currentdict /$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{ def } forall					{ def } forall					currentdict					dup /$Init known						{ dup /$Init get exec }					if					end				/$Strategy exch def				}				{ pop pop pop }			ifelse			}			{ pop pop }		ifelse		end	} bind def/scff	{	$SubstituteFont		begin		dup type /stringtype eq			{ dup length exch }			{ null }		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{ $sname }			ifelse def		end		{ findfont }	@Stopped		{		dup length 8 add string exch		1 index 0 (BadFont:) putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{ findfont }		@Stopped			{ pop /Courier findfont }		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	} bind def/isWidthsOnlyFont	{	dup /WidthsOnly known		{ pop pop true }		{		dup /FDepVector known			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }			{			dup /FDArray known				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }				{ pop }			ifelse			}		ifelse		}	ifelse	} bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 4 index def		/$doSmartSub false def		end	3 index	currentglobal false setglobal exch	/CompatibleFonts /ProcSet resourcestatus		{		pop pop		/CompatibleFonts /ProcSet findresource			begin			dup /CompatibleFont currentexception			1 index /CompatibleFont true setexception			1 index /Font resourcestatus				{				pop pop				3 2 roll setglobal				end				exch				dup findfont				/CompatibleFonts /ProcSet findresource					begin					3 1 roll exch /CompatibleFont exch setexception					end				}				{				3 2 roll setglobal				1 index exch /CompatibleFont exch setexception				end				findfont				$SubstituteFont /$substituteFound true put				}			ifelse		}		{ exch setglobal findfont }	ifelse	$SubstituteFont		begin		$substituteFound			{		 false		 (%%[Using embedded font ) print		 5 index ?str1 cvs print		 ( to avoid the font substitution problem noted earlier.]%%\n) print		 }			{			dup /FontName known				{				dup /FontName get $fontname eq				1 index /DistillerFauxFont known not and				/currentdistillerparams where					{ pop false 2 index isWidthsOnlyFont not and }				if				}				{ false }			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		exch pop exch pop exch		2 dict dup /Found 3 index put		exch findfont exch		}		{		exch exec		exch dup findfont		dup /FontType get 3 eq	  {		  exch ?str1 cvs		  dup length 1 sub		  -1 0		{			  exch dup 2 index get 42 eq			{				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop				 exit			  }			  {exch pop} ifelse		  }for		}		{		 exch pop	  } ifelse		2 dict dup /Downloaded 6 5 roll put		}	ifelse	dup /FontName 4 index put copyfont definefont pop	} bind def/?str2 256 string def/?add	{	1 index type /integertype eq		{ exch true 4 2 }		{ false 3 1 }	ifelse	roll	1 index findfont	dup /Widths known		{		Adobe_CoolType_Data /AddWidths? true put		gsave dup 1000 scalefont setfont		}	if	/Downloaded known		{		exec		exch			{			exch ?str2 cvs exch			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length			?str1 1 index 1 add 3 index putinterval			exch length 1 add 1 index add			?str1 2 index (*) putinterval			?str1 0 2 index getinterval cvn findfont 			?str1 3 index (+) putinterval			2 dict dup /FontName ?str1 0 6 index getinterval cvn put			dup /Downloaded Downloaded put end copyfont			dup /FontName get exch definefont pop pop pop			}			{			pop			}		ifelse		}		{		pop		exch			{			findfont			dup /Found get			dup length exch ?str1 cvs pop			?str1 1 index (+) putinterval			?str1 1 index 1 add 4 index ?str2 cvs putinterval			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn			1 dict exch 1 index exch /FontName exch put copyfont			dup /FontName get exch definefont pop			}			{			pop			}		ifelse		}	ifelse	Adobe_CoolType_Data /AddWidths? get		{ grestore Adobe_CoolType_Data /AddWidths? false put }	if	} bind def/?sh	{	currentfont /Downloaded known { exch } if pop	} bind def/?chp	{	currentfont /Downloaded known { pop } { false chp } ifelse	} bind def/?mv 	{	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse	} bind defsetpackinguserdict /$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{ get }			{ pop pop { pop /Courier } bind }		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams /CannotEmbedFontPolicy 2 copy known			{ get /Error eq }			{ pop pop false }		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup /WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type /stringtype eq { cvn } if def								/FontType 3 def								/FontMatrix [ .001 0 0 .001 0 0 ] def								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def								/FontBBox [ 0 0 0 0 ] def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth /y exch def /x exch def											x y setcharwidth											$SubstituteFont /$Strategy get /$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									} bind def								currentdict								end							exch setglobal							} bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup /WMode known										{ dup /WMode get }										{ 0 }									ifelse									/$WMode exch def									$fontname exch									dup /FontName known										{										dup /FontName get										dup type /stringtype eq { cvn } if										}										{ /unnamedfont }									ifelse									exch									Adobe_CoolType_Data /InVMDeepCopiedFonts get									1 index /FontName get known										{										pop										Adobe_CoolType_Data /InVMDeepCopiedFonts get										1 index get										null copyfont										}										{ $deepcopyfont }									ifelse									exch 1 index exch /FontBasedOn exch put									dup /FontName $fontname dup type /stringtype eq { cvn } if put									definefont									Adobe_CoolType_Data /InVMDeepCopiedFonts get										begin										dup /FontBasedOn get 1 index def										end									} bind def								/$Underprint									{									gsave									x abs y abs gt										{ /y 1000 def }										{ /x -1000 def 500 120 translate }									ifelse									Level2?										{										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]										setcolorspace										}										{ 0 setgray }									ifelse									10 setlinewidth									x .8 mul									[ 7 3 ]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{ .2 setcolor }											{ .8 setgray }										ifelse										fill grestore										stroke										}									forall									pop									grestore									} bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict /FontName known											{											FontName											dup type /stringtype eq { cvn } if											}											{ /unnamedfont }										ifelse										def										/FontName $fontname dup type /stringtype eq { cvn } if def										/currentdistillerparams where											{ pop }											{											/FontInfo currentdict /FontInfo known												{ FontInfo null copyfont }												{ 2 dict }											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									} bind def								end def						/$None							1 dict dup								begin								/$BuildFont {} bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type /stringtype eq { cvn } if						dup /$fontname exch def						$sname null eq							{ $str cvs dup length $slen sub $slen getinterval }							{ pop $sname }						ifelse						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont /$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{ /$match exch def exit }							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont /$dstack get								{								exch									{									1 index eq										{ pop false }										{ true }									ifelse									}									{ begin false }								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{ $match (fonts/) anchorsearch pop pop cvn }							{ /Courier }						ifelse						} bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1  [ /Ryumin-Light /HeiseiMin-W3										  /GothicBBB-Medium /HeiseiKakuGo-W5										  /HeiseiMaruGo-W4 /Jun101-Light ] def							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def							/GB1	  [ /STSong-Light /STHeiti-Regular ] def							/CNS1	 [ /MKai-Medium /MHei-Medium ] def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup /FontType get 0 eq							{							1 dict dup /FontName /copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup /FontName /copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{ $Strategies /$Type3Underprint get exec }						ifelse						} bind def					/$buildfontname						{						dup /CIDFont findresource /CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index (-) putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy (-) putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }							{ pop pop pop pop pop }						ifelse						length						$str 1 index (-) putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						} bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{ get }								{ pop pop [] }							ifelse							}							{ pop pop [] }						ifelse						false exch							{							dup /CIDFont resourcestatus								{								pop pop								save								1 index /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get }									{ false }								ifelse								exch pop								exch restore									{ pop }									{ exch pop true exit }								ifelse								}								{ pop }							ifelse							}						forall							{ $str cvs $buildfontname }							{							false (*)								{								save exch								dup /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get not }									{ true }								ifelse								exch /CIDSystemInfo get								dup /Registry get Registry eq								exch /Ordering get Ordering eq and and									{ exch restore exch pop true exit }									{ pop restore }								ifelse								}							$str /CIDFont resourceforall								{ $buildfontname }								{ $fontname $findfontByEnum }							ifelse							}						ifelse						} bind def					end				end				currentdict /$error known currentdict /languagelevel known and dup					{ pop $error /SubstituteFont known }				if				dup					{ $error }					{ Adobe_CoolType_Core }				ifelse				begin					{					/SubstituteFont					/CMap /Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{ dup $str cvs dup length $slen sub $slen getinterval cvn }									{ $sname }								ifelse								Adobe_CoolType_Data /InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{ exch pop true exit }												{ pop }											ifelse											}											{											FontDirectory 1 index known												{ exch pop true exit }												{												GlobalFontDirectory 1 index known													{ exch pop true exit }													{ pop }												ifelse												}											ifelse											}										ifelse										}									forall									}									{ pop pop false }								ifelse									{									exch pop exch pop									}									{									dup /CMap resourcestatus										{										pop pop										dup /$cmapname exch def										/CMap findresource /CIDSystemInfo get { def } forall										$findfontByROS										}										{										128 string cvs										dup (-) search											{											3 1 roll search												{												3 1 roll pop													{ dup cvi }												stopped													{ pop pop pop pop pop $findfontByEnum }													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup /CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup /$cmapname exch def															/CMap findresource /CIDSystemInfo get { def } forall															$findfontByROS															true exit															}															{ pop }														ifelse														}													for													dup type /booleantype eq														{ pop }														{ pop pop pop $findfontByEnum }													ifelse													}												ifelse												}												{ pop pop pop $findfontByEnum }											ifelse											}											{ pop pop $findfontByEnum }										ifelse										}									ifelse									}								ifelse								}								{ //SubstituteFont exec }							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{ $findfontByEnum }								{ //SubstituteFont exec }							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core /scfindfont /systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup /FontName known								{ dup /FontName get dup 3 index ne }								{ /noname true }							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def /$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{ 1 index /FID eq { pop pop } { def } ifelse }										forall										currentdict										end									definefont									dup /FontName known { dup /FontName get } { null } ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using ) print										dup /FontName known											{ dup /FontName get } { (unspecified font) }										ifelse										$str cvs print (.\n) print										}									if									}									{ exch pop }								ifelse								}								{ exch pop }							ifelse							end						} bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core /findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type /stringtype ne { $str cvs } if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{ dup $inVMIndex $AddInVMFont }						if						$doSmartSub							{							currentdict /$Strategy known								{ $Strategy /$BuildFont get exec }							if							}						if						}					if					end				} bind put			}		if		}	if	end/$AddInVMFont	{	exch /FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data /InVMFontsByCMap get exch		$DictAdd		}		{ pop pop pop }	ifelse	} bind def/$DictAdd	{	2 copy known not		{ 2 copy 4 index length dict put }	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get { forall } def				2 copy currentdict put				end			}			{ pop }		ifelse		}	if	get		begin			{ def }		forall		end	} bind defendend%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.%%Version: 1.19 0systemdict /languagelevel known dup	{ currentglobal false setglobal }	{ false }ifelseexchuserdict /Adobe_CoolType_Utility 2 copy known	{ 2 copy get dup maxlength 25 add dict copy }	{ 25 dict }ifelse putAdobe_CoolType_Utility	begin	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch /eCCRun known not			ct_Level2? and or defct_Level2?	{ globaldict begin currentglobal true setglobal }if	/ct_AddStdCIDMap		ct_Level2?			{ {			((Hex) 57 StartData			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec			} }			{ {			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec			} }		ifelse bind defuserdict /cid_extensions knowndup { cid_extensions /cid_UpdateDB known and } if	 {	 cid_extensions	 begin	 /cid_GetCIDSystemInfo		 {		 1 index type /stringtype eq			 { exch cvn exch }		 if		 cid_extensions			 begin			 dup load 2 index known				 {				 2 copy				 cid_GetStatusInfo				 dup null ne					 {					 1 index load					 3 index get					 dup null eq						  { pop pop cid_UpdateDB }						  {						  exch						  1 index /Created get eq							  { exch pop exch pop }							  { pop cid_UpdateDB }						  ifelse						  }					 ifelse					 }					 { pop cid_UpdateDB }				 ifelse				 }				 { cid_UpdateDB }			 ifelse			 end		 } bind def	 end	 }ifct_Level2?	{ end setglobal }if	/ct_UseNativeCapability?  systemdict /composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring () def		/usewidths? true def		end def	ct_Level2? { setglobal } { pop } ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict /languagelevel known				{ pop /CIDFont findresource /GlyphDirectory get }				{				1 index /CIDFont findresource /GlyphDirectory				get dup type /dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			} def		/+			{			systemdict /languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{ 1 dict begin }			ifelse			/$ exch def			systemdict /languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			? { $ begin } if			} def		/? { $ type /dicttype eq } def		/| {			userdict /Adobe_CoolType_Data known				{			Adobe_CoolType_Data /AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					  begin						AddWidths?								{								Adobe_CoolType_Data /CC 3 index put								? { def } { $ 3 1 roll put } ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont /Widths get exch CC exch put								}								{ ? { def } { $ 3 1 roll put } ifelse }							ifelse					end				end				}				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse				}				{ ? { def } { $ 3 1 roll put } ifelse }			ifelse			} def		/!			{			? { end } if			systemdict /languagelevel known				{ gvm setglobal }			if			end			} def		/: { string currentfile exch readstring pop } executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx [.001 0 0 .001 0 0] def		/ct_1000Mtx [1000 0 0 1000 0 0] def		/ct_raise {exch cvx exch errordict exch get exec stop} bind def		/ct_reraise			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print					errordict exch get exec stop			} bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			} bind def		/ct_GetInterval			{			Adobe_CoolType_Utility /ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{ dup string /dst_string exch def }				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex  get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string  dst_index 2 index putinterval						length dst_index add /dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string  dst_index 2 index putinterval						pop dup dst_index add /dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							  { arrayIndex get }							  {							  pop							  exit							  }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			} bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{ /unknowninstancename /Category resourcestatus }			stopped				{ cleartomark setglobal true }				{ cleartomark currentglobal not exch setglobal }			ifelse				{					{					mark 3 1 roll /Category findresource						begin						ct_Vars /vm currentglobal put						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec							{ cleartomark false }							{ { 3 2 roll pop true } { cleartomark false } ifelse }						ifelse						ct_Vars /vm get setglobal						end					}				}				{ { resourcestatus } }			ifelse bind def			/CIDFont /Category ct_resourcestatus				{ pop pop }				{				currentglobal  true setglobal				/Generic /Category findresource				dup length dict copy				dup /InstanceType /dicttype put				/CIDFont exch /Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit /ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				  /Registry (Adobe) def				  /Ordering (Identity) def				  /Supplement 0 def				end def				/CMapName /Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000> <FFFF>				endcodespacerange				1 begincidrange				<0000> <FFFF> 0				endcidrange				endcmap				CMapName currentdict /CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont  10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{ pop pop /defineresource /undefined ct_raise }				ifelse				} bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{ get 3 1 roll pop pop}						{ pop pop /findresource /undefinedresource ct_raise }					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/ct_resourcestatus /resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup (Binary) eq						{						pop						null						currentfile						ct_Level2?							{								{ cid_BYTE_COUNT () /SubFileDecode filter }							stopped								{ pop pop pop }							if							}						if						/readstring load						exit						}					if					dup (Hex) eq						{						pop						currentfile						ct_Level2?							{								{ null exch /ASCIIHexDecode filter /readstring }							stopped								{ pop exch pop (>) exch /readhexstring }							if							}							{ (>) exch /readhexstring }						ifelse						load						exit						}					if					/StartData /typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch /GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop /readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				} bind def			/StartData				{				mark					{					currentdict					dup /FDArray get 0 get /FontMatrix get					0 get 0.001 eq						{						dup /CDevProc known not							{							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known								{ get }								{								pop pop								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }								}							ifelse							def							}						if						}						{						 /CDevProc							 {							 pop pop pop pop pop							 0							 1 cid_temp /cid_CIDFONT get							 /FDArray get 0 get							 /FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							 } def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup /cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup /SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup /SubrMapOffset undef										dup /SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{ pop }								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict /CIDFont defineresource pop					end end					}				stopped					{ cleartomark /StartData ct_reraise }				if				} bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit /ProcSet ct_resourcestatus				{ true }				{ /CIDInitC /ProcSet ct_resourcestatus }			ifelse				{				pop pop				/CIDInit /ProcSet findresource				ct_UseNativeCapability?					{ pop null }					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }				ifelse				}				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }			ifelse			ct_Vars exch /ct_oldCIDInit exch put			} bind def		/ct_restoreCIDInit			{			ct_Vars /ct_oldCIDInit get dup null ne				{ /CIDInit exch /ProcSet defineresource pop }				{ pop }			ifelse			} bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility /ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{ pop 0 }						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{ get }								{ pop pop nullstring }							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{ 0 FDBytes ct_cvnsi }									{ pop 0 }								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{ /charstring nullstring def exit }								if								/cid 0 def								}							ifelse							}						loop			} def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			} def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont /Widths get cid					2 copy known						{ get exch pop aload pop }						{ pop pop stringwidth }					ifelse					}					{ stringwidth }				ifelse				setcharwidth				0 0 moveto				}			ifelse			} def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{ get }				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup /FontMatrix 2 copy known						{ get }						{ pop pop ct_defaultFontMtx }					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont /Widths get def					/CharStrings 1 dict dup /.notdef						<d841272cf18f54fc13> dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup /CharStrings get 1 index /Encoding get			ct_dfCharCode get charstring put			rootfont /WMode 2 copy known				{ get }				{ pop pop 0 }			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ ct_str1 show }			ifelse			} def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ ct_1000Mtx matrix concatmatrix concat }				{ pop }			ifelse			/Private get			Adobe_CoolType_Utility /ct_Level2? get not				{				ct_dfDict /Private				3 -1 roll					{ put }				1183615869 internaldict /superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility /ct_Level2? get				{ 1 index }				{ 3 index /Private get mark 6 1 roll }			ifelse			dup /RunInt known				{ /RunInt get }				{ pop /CCRun }			ifelse			get exec			Adobe_CoolType_Utility /ct_Level2? get not				{ cleartomark }			if			} bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility /ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{ stop }			if			end			end			end			end			} bind def		/BaseFontNameStr (BF00) def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/BuildChar /ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString /ct_Type3ShowCharString load def				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup /lenIV 4 put def				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def				/PaintType 0 def				/ct_ShowCharString /ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{ exit }				if				}			for			exch pop exch pop			} bind def		/ct_makeocf			{			15 dict				begin				exch /WMode exch def				exch /FontName exch def				/FontType 0 def				/FMapType 2 def			dup /FontMatrix known				{ dup /FontMatrix get /FontMatrix exch def }				{ /FontMatrix matrix def }			ifelse				/bfCount 1 index /CIDCount get 256 idiv 1 add					dup 256 gt { pop 256} if def				/Encoding					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for					bfCount 1 255 { 2 copy bfCount put pop } for					def				/FDepVector bfCount dup 256 lt { 1 add } if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont /FontBBox known						{ CIDFont /FontBBox get /FontBBox exch def }					if					CIDFont /CDevProc known						{ CIDFont /CDevProc get /CDevProc exch def }					if					currentdict					end				BaseFontNameStr 3 (0) putinterval				0 1 bfCount dup 256 eq { 1 sub } if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup /CIDFirstByte exch 256 mul def						FontType 3 eq							{ /ct_FDDict 2 dict def }						if						currentdict						end					1 index  16					BaseFontNameStr  2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont /Widths get						begin						exch /CIDFont get /GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{ exch pop }			ifelse			} bind def		/ct_ComposeFont			{			ct_UseNativeCapability?				{				2 index /CMap ct_resourcestatus					{ pop pop exch pop }					{					/CIDInit /ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch /WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry (Adobe) def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-) search									{									pop pop									(-) search										{										dup length string copy										exch pop exch pop										}										{ pop (Identity)}									ifelse									}									{ pop  (Identity)  }								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000> <FFFF>							endcodespacerange							1 begincidrange							<0000> <FFFF> 0							endcidrange							endcmap							CMapName currentdict /CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index /CMap ct_resourcestatus					{ pop pop }					{					/CIDInit /ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry (Adobe) def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-) search							{							pop pop							(-) search								{ dup length string copy exch pop exch pop }								{ pop (Identity) }							ifelse							}							{ pop (Identity) }						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000> <FFFF>					endcodespacerange					1 begincidrange					<0000> <FFFF> 0					endcidrange					endcmap					CMapName currentdict /CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		currentdict readonly pop		end	end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.%%Version: 1.0 0userdict /ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{  version  cvi  2015  ge} bind def/AllocGlyphStorage{  Is2015?  {			pop  }   { 		{string} forall  } ifelse} bind def/Type42DictBegin{	25 dict begin  /FontName exch def  /CharStrings 256 dict 	begin		  /.notdef 0 def		  currentdict 	end def  /Encoding exch def  /PaintType 0 def  /FontType 42 def  /FontMatrix [1 0 0 1 0 0] def  4 array  astore cvx /FontBBox exch def  /sfnts} bind def/Type42DictEnd  {	 currentdict dup /FontName get exch definefont end	ct_T42Dict exch	dup /FontName get exch put} bind def/RD {string currentfile exch readstring pop} executeonly def/PrepFor2015{	Is2015?	{		  		 /GlyphDirectory 		 16		 dict def		 sfnts 0 get		 dup		 2 index		 (glyx)		 putinterval		 2 index  		 (locx)		 putinterval		 pop		 pop	}	{		 pop		 pop	} ifelse			} bind def/AddT42Char{	Is2015?	{		/GlyphDirectory get 		begin		def		end		pop		pop	}	{		/sfnts get		4 index		get		3 index	  2 index		putinterval		pop		pop		pop		pop	} ifelse} bind defend%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 75 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd/AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/AGMIMG_maskSource nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/devnimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/devnimg /devn_imageormask ldf	/idximg /indexed_imageormask ldf	/_ctype 7 def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				use_mask {					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse				}{					AGMIMG_&image				}ifelse			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		cleartomark restore	end}def/overprint_plate{	currentoverprint {		0 get dup type /nametype eq {			dup /DeviceGray eq{				pop AGMCORE_black_plate not			}{				/DeviceCMYK eq{					AGMCORE_is_cmyk_sep not				}if			}ifelse		}{			false exch			{				 AGMOHS_sepink eq or			} forall			not		} ifelse	}{		pop false	}ifelse}def/process_mask_L3{	dup begin	/ImageType 1 def	end	4 dict begin		/DataDict exch def		/ImageType 3 def		/InterleaveType 3 def		/MaskDict 9 dict begin			/ImageType 1 def			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def			/ImageMatrix [Width 0 0 Height neg 0 Height] def			/NComponents 1 def			/BitsPerComponent 1 def			/Decode [0 1] def			/DataSource AGMIMG_maskSource def		currentdict end def	currentdict end}def/use_mask{	dup type /dicttype eq	{		dup /Mask known	{			dup /Mask get {				level3				{true}				{					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse					3 -1 roll and				} ifelse			}			{false} ifelse		}		{false} ifelse	}	{false} ifelse}def/make_line_source{	begin	MultipleDataSources {		[		Decode length 2 div cvi {Width string} repeat		]	}{		Width Decode length 2 div mul cvi string	}ifelse	end}def/datasource_to_str{	exch dup type	dup /filetype eq {		pop exch readstring	}{		/arraytype eq {			exec exch copy		}{			pop		}ifelse	}ifelse	pop}def/masked_image_simulation{	3 dict begin	dup make_line_source /line_source xdf	/mask_source AGMIMG_maskSource /LZWDecode filter def	dup /Width get 8 div ceiling cvi string /mask_str xdf	begin	gsave	0 1 translate 1 -1 Height div scale	1 1 Height {		pop		gsave		MultipleDataSources {			0 1 DataSource length 1 sub {				dup DataSource exch get				exch line_source exch get				datasource_to_str			} for		}{			DataSource line_source datasource_to_str		} ifelse		<<			/PatternType 1			/PaintProc [				/pop cvx				<<					/ImageType 1					/Width Width					/Height 1					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix					/MultipleDataSources MultipleDataSources					/DataSource line_source					/BitsPerComponent BitsPerComponent					/Decode Decode				>>				/image cvx			] cvx			/BBox [0 0 Width 1]			/XStep Width			/YStep 1			/PaintType 1			/TilingType 2		>>		matrix makepattern set_pattern		<<			/ImageType 1			/Width Width			/Height 1			/ImageMatrix Width 1 matrix scale			/MultipleDataSources false			/DataSource mask_source mask_str readstring pop			/BitsPerComponent 1			/Decode [0 1]		>>		imagemask		grestore		0 1 translate	} for	grestore	end	end}def/imageormask{	begin		SkipImageProc {			currentdict consumeimagedata		}		{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq DeviceN_PS2 not and {					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					use_mask {						level3 {process_mask_L3 image}{masked_image_simulation}ifelse					}{						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 						{							Names convert_to_process not {								2 dict begin								/imageDict xdf								/names_index 0 def								gsave								imageDict write_image_file {									Names {										dup (None) ne {											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace											Operator imageDict read_image_file											names_index 0 eq {true setoverprint} if											/names_index names_index 1 add def										}{											pop										} ifelse									} forall									close_image_file								} if								grestore								end							}{								Operator /imagemask eq {									imagemask								}{									image								} ifelse							} ifelse						}{							Operator /imagemask eq {								imagemask							}{								image							} ifelse						} ifelse					}ifelse				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					/Adobe_AGM_OnHost_Seps where {						pop imagemask					}{						currentgray 1 ne{							currentdict imageormask_sys						}{							currentoverprint not{								1 AGMCORE_&setgray								currentdict imageormask_sys							}{								currentdict ignoreimagedata							}ifelse				 								}ifelse					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								AGMCORE_is_cmyk_sep{									MultipleDataSources{										/DataSource [											DataSource 0 get /exec cvx											DataSource 1 get /exec cvx											DataSource 2 get /exec cvx											DataSource 3 get /exec cvx											/AGMCORE_get_ink_data cvx										] cvx def									}{										/DataSource 										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 										/DataSource load										filter_cmyk 0 () /SubFileDecode filter def									}ifelse									/Decode [ Decode 0 get Decode 1 get ] def									/MultipleDataSources false def									/NComponents 1 def									/Operator /image def									invert_image_samples						 			1 AGMCORE_&setgray									currentdict imageormask_sys								}{									currentoverprint not Operator/imagemask eq and{  			 							1 AGMCORE_&setgray  			 							currentdict imageormask_sys  			 						}{  			 							currentdict ignoreimagedata  			 						}ifelse								}ifelse							}{									MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not Operator/imagemask ne and{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								use_mask {									level3 {process_mask_L3 image}{masked_image_simulation}ifelse								}{									image								}ifelse							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentcolorspace overprint_plate not{									knockout_unitsq								}if							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}ifelse	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	/MappedCSA CSA map_csa def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentdict/ImageMatrix get concat						knockout_unitsq					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{	 								[ /Separation Name [/DeviceGray]	 								{ 	 									sep_colorspace_proc AGMCORE_get_ink_data										1 exch sub	 								} bind									] AGMCORE_&setcolorspace									/sep_tint AGMCORE_gget AGMCORE_&setcolor 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{ 							currentoverprint not Name (All) eq or Operator/imagemask eq and{								currentdict imageormask_sys 								}{								currentoverprint not									{ 									gsave  									knockout_unitsq 									grestore									}if								currentdict consumeimagedata 		 					}ifelse 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}ifelse	end	end}def/decode_image_sample{	4 1 roll exch dup 5 1 roll	sub 2 4 -1 roll exp 1 sub div mul add} bdf/colorSpaceElemCnt{	currentcolorspace 0 get dup /DeviceCMYK eq {		pop 4	}	{		/DeviceRGB eq {			pop 3		}{			1		} ifelse	} ifelse} bdf/devn_sep_datasource{	1 dict begin	/dataSource xdf	[		0 1 dataSource length 1 sub {			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx		} for	] cvx bind	end} bdf		/devn_alt_datasource{	11 dict begin	/srcDataStrs xdf	/dstDataStr xdf	/convProc xdf	/origcolorSpaceElemCnt xdf	/origMultipleDataSources xdf	/origBitsPerComponent xdf	/origDecode xdf	/origDataSource xdf	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def	/samplesNeedDecoding		0 0 1 origDecode length 1 sub {			origDecode exch get add		} for		origDecode length 2 div div		dup 1 eq {			/decodeDivisor 2 origBitsPerComponent exp 1 sub def		} if		2 origBitsPerComponent exp 1 sub ne	def	[		0 1 dsCnt 1 sub [			currentdict /origMultipleDataSources get {				dup currentdict /origDataSource get exch get dup type			}{				currentdict /origDataSource get dup type			} ifelse			dup /filetype eq {				pop currentdict /srcDataStrs get 3 -1 /roll cvx /get cvx /readstring cvx /pop cvx			}{				/stringtype ne {					/exec cvx				} if				currentdict /srcDataStrs get /exch cvx 3 -1 /roll cvx /xpt cvx			} ifelse		] cvx /for cvx		currentdict /srcDataStrs get 0 /get cvx /length cvx 0 /ne cvx [			0 1 Width 1 sub [				Adobe_AGM_Utils /AGMUTIL_ndx /xddf cvx				currentdict /origMultipleDataSources get {					0 1 dsCnt 1 sub [						Adobe_AGM_Utils /AGMUTIL_ndx1 /xddf cvx						currentdict /srcDataStrs get /AGMUTIL_ndx1 /load cvx /get cvx /AGMUTIL_ndx /load cvx /get cvx						samplesNeedDecoding {							currentdict /decodeDivisor known {								currentdict /decodeDivisor get /div cvx							}{								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvxs								BitsPerComponent /decode_image_sample load /exec cvx							} ifelse						} if					] cvx /for cvx				}{					Adobe_AGM_Utils /AGMUTIL_ndx1 0 /ddf cvx					currentdict /srcDataStrs get 0 /get cvx /AGMUTIL_ndx /load cvx							currentdict /origDecode get length 2 idiv dup 3 1 /roll cvx /mul cvx /exch cvx /getinterval cvx 					[						samplesNeedDecoding {							currentdict /decodeDivisor known {								currentdict /decodeDivisor get /div cvx							}{								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvx								BitsPerComponent /decode_image_sample load /exec cvx								Adobe_AGM_Utils /AGMUTIL_ndx1 /AGMUTIL_ndx1 /load cvx 1 /add cvx /ddf cvx							} ifelse						} if					] cvx /forall cvx				} ifelse				currentdict /convProc get /exec cvx				currentdict /origcolorSpaceElemCnt get 1 sub -1 0 [					currentdict /dstDataStr get 3 1 /roll cvx /AGMUTIL_ndx /load cvx currentdict /origcolorSpaceElemCnt get /mul cvx /add cvx /exch cvx					currentdict /convProc get /filter_indexed_devn load ne {						255 /mul cvx /cvi cvx 					} if					/put cvx 				] cvx /for cvx			] cvx /for cvx			currentdict /dstDataStr get		] cvx /if cvx	] cvx bind	end} bdf/devn_imageormask{ 	/devicen_colorspace_dict AGMCORE_gget begin	/MappedCSA CSA map_csa def	2 dict begin	dup dup	/dstDataStr exch /Width get colorSpaceElemCnt mul string def	/srcDataStrs [ 3 -1 roll begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi string		} repeat		end ] def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_producing_seps not {			level3 not {				Operator /imagemask ne {					/DataSource [						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 						dstDataStr srcDataStrs devn_alt_datasource /exec cvx						] cvx 0 () /SubFileDecode filter def					/MultipleDataSources false def					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				} if			}if			currentdict imageormask 		}{			AGMCORE_host_sep{				Names convert_to_process {					CSA map_csa 0 get /DeviceCMYK eq {						/DataSource							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 							[							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 							dstDataStr srcDataStrs devn_alt_datasource /exec cvx							] cvx						filter_cmyk 0 () /SubFileDecode filter def						/MultipleDataSources false def						/Decode [1 0] def						/DeviceGray setcolorspace			 			currentdict imageormask_sys 					}{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate {							/DataSource [								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse								CSA map_csa 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get								dstDataStr srcDataStrs devn_alt_datasource /exec cvx								] cvx 0 () /SubFileDecode filter def							/MultipleDataSources false def							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				 			currentdict imageormask_sys				 		}						{	 						gsave 	 						knockout_unitsq	 						grestore							currentdict consumeimagedata 						} ifelse 					} ifelse				}				{						/devicen_colorspace_dict AGMCORE_gget /names_index known {	 					Operator/imagemask ne{	 						MultipleDataSources {		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def								/MultipleDataSources false def	 						}{								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def	 						} ifelse							invert_image_samples	 					} if			 			currentdict imageormask_sys	 				}{	 					currentoverprint not Operator/imagemask eq and{							currentdict imageormask_sys 							}{							currentoverprint not								{	 							gsave 	 							knockout_unitsq	 							grestore								}if							currentdict consumeimagedata 			 			}ifelse	 				}ifelse	 			}ifelse 			}{				currentdict imageormask			}ifelse		}ifelse		cleartomark restore	}ifelse	end	end	end}def/imageormask_l2_overprint{	currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 						currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace				AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 						mark exch						dup	dup dup						AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse			imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark  		currentdict 		AGMCORE_host_sep{			Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {					/CSA get map_csa				}{					/CSD get get_csd /Names get				} ifelse				overprint_plate not{					knockout_unitsq				}if			}{				Indexed_DeviceN {					/devicen_colorspace_dict AGMCORE_gget /names_index known {			 			indexed_image_lev2_sep					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					} ifelse				}{		 			AGMCORE_is_cmyk_sep{						Operator /imagemask eq{							imageormask_sys						}{							level2{								indexed_image_lev2_sep							}{								indexed_image_lev1_sep							}ifelse						}ifelse					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					}ifelse				}ifelse			}ifelse 		}{			level2{				Indexed_DeviceN {					/indexed_colorspace_dict AGMCORE_gget begin					CSD get_csd begin				}{					/indexed_colorspace_dict AGMCORE_gget begin					CSA map_csa 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]						setcolorspace					} if					end				} ifelse				imageormask				Indexed_DeviceN {					end					end				} if			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin		Indexed_DeviceN not {			currentcolorspace 			dup 1 /DeviceGray put			dup 3			currentcolorspace 2 get 1 add string			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub			{			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put			}for 			put	setcolorspace		} if		currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			use_mask {				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse			}{				AGMIMG_&image			}ifelse		}ifelse	end end}def  /OPIimage  {  	dup type /dicttype ne{  		10 dict begin  			/DataSource xdf  			/ImageMatrix xdf  			/BitsPerComponent xdf  			/Height xdf  			/Width xdf  			/ImageType 1 def  			/Decode [0 1 def]  			currentdict  		end  	}if  	dup begin  		/NComponents 1 cdndf  		/MultipleDataSources false cdndf  		/SkipImageProc {false} cdndf  		/HostSepColorImage false cdndf  		/Decode [  				0   				currentcolorspace 0 get /Indexed eq{  					2 BitsPerComponent exp 1 sub  				}{  					1  				}ifelse  		] cdndf  		/Operator /image cdndf  	end  	/sep_colorspace_dict AGMCORE_gget null eq{  		imageormask  	}{  		gsave  		dup begin invert_image_samples end  		sep_imageormask  		grestore  	}ifelse  }def/cachemask_level2{	3 dict begin	/LZWEncode filter /WriteFilter xdf	/readBuffer 256 string def	/ReadFilter		currentfile		0 (%EndMask) /SubFileDecode filter		/ASCII85Decode filter		/RunLengthDecode filter	def	{		ReadFilter readBuffer readstring exch		WriteFilter exch writestring		not {exit} if	}loop	WriteFilter closefile	end}def/cachemask_level3{	currentfile	<<		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]		/Intent 1	>>	/ReusableStreamDecode filter}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		bdict			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		edict		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		dup 4 get map_alias{			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}def/snap_to_device{	6 dict begin	matrix currentmatrix	dup 0 get 0 eq 1 index 3 get 0 eq and	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop	{		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def		0 0 transform		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def		1 1 transform		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def					[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat	}{	}ifelse	end} deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse					Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 						currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{					MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop				Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 				{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{				MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResourcecurrentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetupAdobe_AGM_Utils begin2 2010 Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get execcurrentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: a95.eps 1%%EndPageComments%%BeginPageSetup/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?><x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 3.0-29, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>

 <rdf:Description rdf:about=''
  xmlns:pdf='http://ns.adobe.com/pdf/1.3/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:tiff='http://ns.adobe.com/tiff/1.0/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:xap='http://ns.adobe.com/xap/1.0/'
  xmlns:xapGImg='http://ns.adobe.com/xap/1.0/g/img/'>
  <xap:CreateDate>2007-02-11T23:49:51Z</xap:CreateDate>
  <xap:ModifyDate>2007-02-11T23:56:48Z</xap:ModifyDate>
  <xap:CreatorTool>Illustrator</xap:CreatorTool>
  <xap:Thumbnails>
   <rdf:Alt>
    <rdf:li rdf:parseType='Resource'>
     <xapGImg:format>JPEG</xapGImg:format>
     <xapGImg:width>256</xapGImg:width>
     <xapGImg:height>128</xapGImg:height>
     <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAgAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FUG+pIztHa&#xA;RtdyKSrenQRqRsQ8h+HY9QKt/k4qpxw6vMzm5nW1RW/dJbBWJWgPxPKGrvUbIuKu/QdgZlklEk/F&#xA;WUR3EjzR1YqeXCUuAw47Ee+Krn0TRnjaNrG34OCrARIKginYeGKrv0PpP/LFb/8AIpO30Yqsj0a1&#xA;iJMDzQnlyRY5XWNPZYq+kB7cPnvirRTWYJVEbx3kFGLet+6lB+GnxICjftfsDtviqtDqMEkogkVr&#xA;e5avGCYBWagqeBBZHoNzwY070xVFYq7FXYq7FXYq7FXYq7FULNqMMcphjV7i4WnKGEAlaivxsSqJ&#xA;tuObCvbFVEJrM8rCR0s7fipX0aSylqmtWkXgO23A/PFW20a0kdWnaWehLOksrvG5II+KIn0qb1oF&#xA;2OKr/wBD6T/yxW//ACKTv9GKrU0TRkjWNbG34IAqgxIaACnceGKtfoSwEheISQBgB6dvJJClQSeX&#xA;CMopY8tyR4Yq1JDrELobedbpCx9VLkBGA4n7LxKoG9OqHFVRNRQOsV1G1rKxCpzoY3Y7AJIKqano&#xA;pox/lxVGYq7FXYq7FUFrV/Pp2jX+oQWkl/PZ28txFYw/3k7xIXWJOvxORxHvirCvy68667r+t3cW&#xA;oJ6Q+qetLZ+nJGLeSO9uLaN09aOGb07yCFJ0WQVG/Y7Ks8u7u2tLd7i4cRxIKs25PyAFST7DFUMs&#xA;M98oe5JjtmFVtUP2gf8AfrDr/qqada8sVb0q90eaOS00u4hmTTn+pzRQSLJ6MkQA9J+JPFlHUHfA&#xA;CCzljlGrBF7hHYWDsVdirsVdirsVUbq1t7qEw3CCSIlWKHpVGDKfoYA4qhJZZNMjMkrtNYL9pmq0&#xA;sQ2AHcyD/hv9bsqj45I5I1kjYPG4qrqQQQe4IxVdirsVdirBvzC8x+ZtG1vy+ulQSXNle/WYdQij&#xA;jdty8Ajf1FjlWJ0VpGUycU2PI0xVNfIet3Wp+S9P1TUZ1kkdJOV6eKJNFHI6R3O3FQJo0WTbb4tt&#xA;sVTSKSbUkEkbmCxb7JUlZpN6GveIf8P/AKtMVRVpZ21pD6NtGI4uTPwFacnJZjv4sScVVsVdirsV&#xA;dirsVdiqlc28Nzby28684ZlMcqVIqrChG3iMVQrRTWKmS3YyWq7yW8jbqo3rE7dP9VjTw491UTaX&#xA;dvd26XFu/OKQVVqEfeDQg+xxVWxV2KuxVQne1tI5rp1CVoZWRau7bKooo5Ox2VR17YqpWkRmKXsx&#xA;VpGWsKrusaMK7HuT3b7sVRmKoe007T7Np2tLaK2a6lae5MSKhllagaSTiByc03Y74AKZSmZVZukR&#xA;hYpboH+JPqT/AOIBZi99V/T+oGUxejX93y9ajc6fa7ZGN9W3N4d/u7qhz7+vLp3O16+1mytIpdJ0&#xA;v9LXDTRxyW/rx23CJj8cvOSoPAfs9TjIkcha4YQkalLhFHpe/d8UyyTU7FXYqlmk+Y9G1e51C10+&#xA;49afSpza36cJE9OYblauqhvmtRkYyBuujdkwTgImQoSFj3JnkmlL7p107ldrtas1biEAk8nb+8jA&#xA;71PxKPtdR8X2lUerKyhlIZWFVYbgg9xireKuxVZKYhE5l4+lxPqcqceNN612pTFUDZrHeqk5ThaR&#xA;Hja2xUpQxsV5uhAoQV+FSPh+fRVMcVdirsVdirsVdirsVdirsVdiqCvI/q5e+h4o6jlcg0CyInWp&#xA;NAGVfsk/I7dFURbXEVxAk0RJRxUVBVgehVlNCrA7EHcHbFVXFXYql9tJDqFwbpHWS3tneKAKQR6q&#xA;EpI591NUH0neoxVZ5jn1630a4l0C1hvNWUp9Wtrh/Tiasih+T9qRljkZE1tzbcEYGYEyRHy3Qa3k&#xA;Pma31XTY1v8ATDY3QtnujGsTO0LLJyhMglSSJ6UPJaMpoRQ4AbtnLH4fCTwy4hfO/LfuKd28KwW8&#xA;UKszLEioGc1YhRSpPc5Nx1TFUu8wafqOoaPc2em6g2lXswUQ6gkaytFRgTRGIBqoK/TkZAkUDTbg&#xA;nGExKUeIDp3pTe6B5wae+msPMph+tSWZtoprSKVbeOBStyF3XkbgnlUj4eg8RExl0LdDNioCULri&#xA;6kXfL/S/ayfLHEdirsVdirsVdiqAjkis71LQsqxXfN7VSRX1F+KRADvSnxCnv0FMVR+KuxVL5Hiv&#xA;b57TkrQ2nB7mMHcyGjxq3sB8R8du1RiqYYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUDcSx2NwkzMqW1&#xA;y6xy1IAErkLGw/1yeJ+j3xVHYqhdQkkEKxRErNcMIo3HVaglmFe6orMPfFVeKKOJBHGoRFAAA8AK&#xA;D8BirHLXySiecbjzReajc3lwVMen2rtwhto2QK6Kq7NypXf57nfKxj9XFbmS1f7kYhGIHU9Sd636&#xA;c622ZNljhpRoWn3OiaSLfUdUm1SUSO31y4AEhEj1RAE60rQU+jwyERwjc226jNGcuIREBtsL/G6N&#xA;+uyBebWkwTuaISB48Vct9AFfbDxeTRxeSSeQPLb6FoTpcyQ3Gp6jdXGo6nd24dYp7i5csZFRy3Cq&#xA;BQQtBUbDI440HL1eoGWdxvgAAF9wTK71qS312w0oafdTR3qSu2oxx1toPSFQsz1+Ev0XbJGW9Uwj&#xA;iBgZWNq26m+73JfovnGO4uLHSdcgXRfNN7DJcjQzMtywijkdAwnjURNyVOVBuPowRn0OxbMumIBn&#xA;D1YwQOKq3I7mR5NxXYq7FXYq7FVC8tvrFu6KQktKxSEV4upDKad6MoNO+Kt2lwLi3SWnFjUOla8X&#xA;U8XWvfiwIxVq8uDb20koXm4FI4/5nY8UX/ZMQMVbtLZbeFUB5P1kkPVmJLMx+bMTTFVbFXYq7FXY&#xA;q7FXYq7FUBr2o3em6PdX1pYyalcW6c47GE0klNR8K7Htv0yMjQsC23BjE5iMpCIPU8h8kVbSvLbx&#xA;SyRNA8iKzwvxLIWFSrcSy1XoaGmSayKKB1zXrfR0s3mt7m4F7dxWSC1iMxRpq0kkC/ZjWnxNkZSp&#xA;sxYTO6IFAnc1y/SmeSanYqpzQRTxNFKoeNwVZT4MCp/A4qo6fI5haGVuc9s3oyuerEAFWNO7Iysf&#xA;niql6KXOqmVuVLJQkZVmUepL8UgYAjlRRGRUU3+5VH4ql+vXmq2ek3FzpOn/AKV1CMKYNPMyW3qk&#xA;sAR6rhlWiktuO2RkSBtu2YYxlICR4Y99X9iOjZ2jRnXg5ALJWtCRuKjrTJMCkvmDRp9YubWGPUbj&#xA;TTYyw3iyWrBWlozB425AgqVFD899srlGzzqmeHKISNxEvSRv59feOiWeVrj8wD5s8w22vQxnQEkD&#xA;6JdLwUhCfhjAUAv8G7Ft1bbeu0cZnxEEeno44ySlMgxEYjkb5q1prl/qN9E3lhrO+0eLUJ7bWZpH&#xA;kDxcEVmEFBRj6jN7dKbGoMZWfTyvf8e9zI4IwEvE4oyIuG3O+/y5pr5e1e81SykuLvTZ9KlSeSEW&#xA;1zx5siNRZBxJFHH+ZG5nGVjlTHPiEJUJCWwNjz6fBjum/l3Hbef73zJcGO5tnY3GmpIZWmtrmWMR&#xA;zslTwCSLtSh/Z6UysYqkS5eTXcWCOMWDyPKjG7HS7Bvclm2XOuSzR9S1S8uNRjvdMfT4rS4aGzme&#xA;RJBcxAVEyhd0B8DkYkm7DdlxxiImMuKxv5HuTPJNLsVdirsVQFjElreXVqrMUfjcpzZmI9Squqli&#xA;TQMnI/62KuvoUury2tn5enFW4cozKQy0WMEqRseTEf6uKo/FXYq7FXYq7FXYq7FUv13X9H0HTzqG&#xA;rXK2tmrpGZWDN8UjcVAChmO/tkZSERZbcOCeWXDAcUv1blgt1rJuvND+ZrX09dttPZLTRbTSbpjP&#xA;6Un7u/mvIHb0yIpCOBQb1Xl2YUmVniG/u+12McRjj8KX7sy9UjOPcLgImr9Q+DHNY85+cvMl/qXk&#xA;660i01GwnEwuW0edpJ4bV5UjtJfVWRohKrsJHR6VXdlVesJTlImNbeTl4dLhxRjmEzGQo+sbGQBJ&#xA;Fbkg1QNVb0zybHr9pZSaTqts4i0vhbWOqS3CTSX0ar/fMijlF4cXJPuepyMdgUen2uo1Zxylxw/i&#xA;3MQDUd+QvmyHJuK7FXYqgFgW21UygtxvU4vzdmAkiJZQoYkLyV22A/ZxVvSxMfrUsjK3q3EpWgIo&#xA;I2MQB3P7MY3xVHYqx/zh5d1LX7SDTodR+paZMzx6xEsYaSe3dCOEchP7s17/AK+hhOJltezlaXPH&#xA;ETIx4pD6e4G+o6+5ObGzhsbK3soOXoWsSQxc2LNwjUKtWO5NB1OSApx5yMiSeqWaRoN/YQyifVZr&#xA;+6a5mnhuLhVJjilIP1egpVF4juPag2yIgR1ZaiYmQYxEKAG32nfvQUV552l843GmXFrBD5aFks0O&#xA;qwgmVrjmFaL4nIWoq32DQdzkbnxV0ZSxw8ES4v3nFRHl3/i2QWljZ2cbR2kCQI7GRxGoXk7fadqf&#xA;aY9ydzlgADTavhV2KuxV2KuxV2KuxV2KoG5EqapZy7GJ1kt+O9Qzr6vKtaUHoUpTv7bqutfVfU72&#xA;UlfTT04AtDyqiiXlWtDX1iOnbFUdirsVdirsVdirsVdiqyaGGaMxzRrLGSCUcBlqpqNj4EVxSDT5&#xA;p86atoEOv6Nf63oNrd2lhez2N5f6IZodMKySOHtpFMaNJdxrykHGRVbl3BNMCchYJHLu/HN63S4s&#xA;hhKEJyjxRjICdcXLaXOhHpfOlL8u/Juraj5s1mHypfv/AIcgvhaau5nkigubKeGZQyiM/vJI1ZqK&#xA;32WKe5WvBhIkaPpt0sMGTTmWTUyM55BxRFbg2Od9/fve/Xn1zTPym/3E+XdO17WrnU4vLrvJDDEP&#xA;qsE7LJytmljRmYtCtAPi/jXMjh2AJ5Ll7Suc5QhGJyfGu+um/uehZe6t2KuxVA6mJQ1pMnGkM8ZP&#xA;IEk+ofRoKU/ZlJriqD8na5peu+W7LVdLn+s2lyrMJ+DpykDlZjRwp/vQ3anhgjIEWGzLiljlwyFF&#xA;OsLW7FUt1/y5o3mCyWx1e3+tWqSxzrHzdP3kR5I1Y2Q7Ht0yMoiQotuHPPEeKBo1XzUfMGiajqkl&#xA;mbTWLjSo7Z3adbYITMHQoAxcGnGtRsd/cAhlEnrTLDljAG4iV8rvbf8AAW28N/5f8qcC9zr99p9s&#xA;7BnI+sXUiAsFqa7sdh1PzOAAxj3plKOXLdRxxkfOo/eaC3yZo1jpPl62hs7WeyS4H1uW0uZGllil&#xA;uP3jxszFt0J47fr3xhEAbLqs0smQmRBrawKFDYJtd3UFpazXU7cYLeNpZWoTREBZjQb9Bk3HUrvV&#xA;bG00qbVp5ONhbwNdSzcWNIUQyM3EDl9kVpSuKr9Qv7XT7KW9u39O2gXlI9C1B06KCcVdfX9rYwLP&#xA;dP6cTyw26tQt+8uZVgiWgB+1JIo9u+Kuvb+1slia5fgJ5Y7eLYmskrcUXYHqcVdPf2sF1a2sr8Z7&#xA;xnW3ShPIxoXbcCgoo74q439qNQXTy/8ApbRNcCOh/u1YIWrSn2mGKutb+1up7uCB+UtjKLe6WhHG&#xA;Roo5wtSN/wB3Mh28cVSm88x6QbXQtTErGx1KeD6pMI5CG+uRmOCvw1Tm0yj4qfrxVMbB1N5qKjlV&#xA;Z1rUMBvbxdCdj9GKo3FXYq7FXYq7FXYq7FUPp9/a6hZRXto/qW068o3oVqOnRgDirzvzj+WGi+d4&#xA;tL8x6DcRafdSolws7W/qQ3VvOy3H76Big5EnlVlqejdqUZcAluHa6DtOWAGMgZRPnRHTY+7auVFE&#xA;aRfXc/lHX7/ypdaFY6c0hudHutNiYrGnFZJjfQhaC49PqoWo7jJAGjVfjvapSxiUDkGSXp9V7e7h&#xA;PcyG+a+tZx5kk1imkw6fxfTfRKwSTs3Jbgt+8lXqF4gGmTo3duMMkODh4d+K+LrXd3IrTdV1K30C&#xA;0vPM8UVjqMskUFxDblpY1luLgQQKpHI/E0iA9hXrTGF1vzRnGMTIxkmHQnYpjPf2sF1a2sr8Z7xn&#xA;W3ShPIxoXbcCgoo75Jpcl/avqE2nq9bu3iiuJY6HaOdpEjatKGrQP93yxVK9Y1/S4tB1HUzKxttK&#xA;aR7lljkbi9i3qOCFUmg9PcjFUfo8ccWnxwRqES3LwKFAAIido60HjxqcVJRuKuxVLNE0Cy0YX4tX&#xA;mf8ASN5NqE/rOZOMs5BZY6/ZQcdlGRjGm7NmOSrr0xA2Fcv0+arrVpqV3pdxbaZf/oy/kWlvf+kk&#xA;/pNUHl6Unwt4UOGQJG2zHDKMZAyHFHu5X8ULav5lj1uKznjin0ZLBGk1SoSeS/EnFl9FfhCNH8e3&#xA;Q7YBd+TOQx8Fgnj4uXTh9/enGSaFK6tYLu1mtbhecE6NFKlSKo4KsKihFQe2KqN1pdhd6VNpVxFz&#xA;sJ4GtZYeTCsLoY2XkCGFVNKg1xVL7DywkWmX2nalfXOrwX1xLOxunPJEkIIhQpxoiU2pT+GRjGut&#xA;t2bKJkEREaAG3l195TO+sLS+hWG6j9SJJYZ1WpWklvKs8TVUg/DJGpp377ZJpdeWFpeLEtzH6ggl&#xA;SeIVIpJEeSN8JHQ9sVdPYWk91bXUsfKezLtbvUjiZFKNsDQ1U03xVxsLQ366gY/9LWIwLLU/3bMH&#xA;K8a8ftKN6Yq62sLS2mu5oI+Et9KJ7pqk85FiSANQkgfu4UFB4eNcVSy60LSUstE0kQU0+xnt/qkH&#xA;N/h+pRtJb/Fy5NwaFTud6b1xVMLL/em//wCM6/8AJiLFUXirsVdirsVdirsVdiqHsLC00+zis7SP&#xA;0raEcYo6lqCterEnFXafYWmnWFtp9nH6VpZxJBbxVLcY4lCIvJiWNFHUnFUFpvlby9peitomnWEV&#xA;ppciGOW3hHDmGQRszsPjZ2UULk8j44AAGUpylzN1t8EVc6XYXWmtps8XOyZBE0XJh8C0oOQIbt44&#xA;WK++sLS+hWG6j9SJJYZ1WpWklvKs8TVUg/DJGpp377Yq6ewtJ7q2upY+U9mXa3epHEyKUbYGhqpp&#xA;virksLRL+bUFjpd3EUUE0tTvHA0jxrxrxHFp33A779sVS7VNE0w6Ne6cYf8AQ9UlKX8XJ/3i3koS&#xA;ccq8l5q5HwkU7UxVFadGkNxfQhmqJvUCszH4ZRzqATQAyFxt4e2Kq+oX9pp1hc6heSelaWcT3FxL&#xA;QtxjiUu7cVBY0UdAMBNMoRMiAOZSq21TVtUu9H1HRmtJ/Kt7bPcXNxKJkum5oGtzChCgBq/FzFaZ&#xA;EEmiOTdLHGAlGd+IDXSvO/2J7k3HSu4ufMC+YbW3gs4X0NoJGu71pKTJMD+7VI6bjx+falGiSb8m&#xA;6McfhkknjsUK2rrujTf2IvRYG4iF80ZmW15r6piB4mQJXlx5bVpTDbXwGrrZXwsUt1zzFo2hxWsu&#xA;qXH1eO9uY7K2bg78p5q+mn7tWpXidzt75GUgObbiwTyEiIuhfwCZZJqSzzHJ5ij0p28vRW02qck9&#xA;OO8Z1h4Fx6hJTeoWtMjK625t2AYzL94SI+XPyTPJNLsVdirsVdiqBeNZNZiYFj6EDF1JbiGkYCNg&#xA;tePKiyCoFaYq6KJY9XmarD14UZV5NxLISsjca8ahfTFafxxVHYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FUDqEQlurGP4j+9LuqsyjhGpcMyggECQJ18cVdcCaLU7aWNlEVwDDPVSxJQM8fE1Xj+3U7&#xA;9hTuFUdirsVdirsVQbaRpb6qmrNaxHU44Tbx3hUeqIS3IoG68a74OEXfVsGWXDwWeG7rpaMwtbsV&#xA;dirsVdirsVdirsVdiqA0oTOJ7qZldppCImVSo9GP4UoCW2J5MDXflXFXaqJY/Qu4WVGhcJK7ryAh&#xA;kIV9uSbBuLE12A+jFUfirsVdirsVdirsVdirsVdirsVdirsVdirsVQFqJ5dTuppGV4oAILfipUgn&#xA;45O7Bv2BXxBFB3VRF5bC5tnh5cGNDHJSvF1IZHp34sAcVWafePdQF5IWt5Udo5I3Kk8kNCRxLfCe&#xA;q1oSN6YqisVdirsVdirsVdirsVdirsVdirsVdiqB1KeYtFZQKwkuw4M6lR6SLTm/XlWjUUgEcqVx&#xA;VGIiRosaAKiAKqjoANgBirUsUcsTxSKGjkUq6noVIoQcVQun3ExeW0nRvVteIMzcaSq1eLrQlug+&#xA;KoA5Vp0xVG4q7FXYq7FXYq7FXYq7FXYq7FXYq7FULqF3JawBoojNNIwjijBUfG3QnkR8I6tSppvT&#xA;FVS0t/q9tHCW5so+OSlCzndmI/ymJOKq2KoG7LWkpvUVmhIpdxoCxoOkqqOrL0am5X/VAxVFwyrL&#xA;Ekq/ZkUMtetCK4qvxV2KuxV2KuxV2KuxV2KuxV2KqF5dxWlu08oYxqQDwUu3xEKKKNzue2KrbWGT&#xA;m9zOKTy0AXb4IxuqbbV3qT4+1MVROKuxVCXkMgdbu3XlPEKMg/3ZGSCyb7cu6+/cAnFVW0uorqBZ&#xA;4eXpsSByUo3wsVNVYAjcd8VVsVdirsVdirsVdirsVdirsVdiqyaVYYZJXrwjUu1NzRRU0xVDWtbq&#xA;QXroVjAItUYUbieshB6F+w6hfAkgKozFXYq7FUBIW05WkRGksQCzRIOTRU3+BepT/JG47bdFUZDK&#xA;ssSSoapIoZSCCKEVG6kg/QcVX4q7FXYq7FXYq7FXYq7FVC8u4rS3aeWpVaDioqxJNKKvVj4KNz2B&#xA;OKqcMU08i3NwpjC7w2xoeNf2npUF/poMVReKuxV2KuxVBzRS28jXNupdWoZ7cU+L/LX/ACv14qq2&#xA;d3Fd26XEVQj1oGFGFDSjD9k+IO4774qr4q7FXYq7FXYq7FXYq7FVk0qQxPK5ASNSzEkKKAV6sQB9&#xA;JxVBxF9RCSujRWXwukUg4vIftAup3VRt8PU99tiqj8VdirsVdirsVQb2csLtLYsqFiWkt3r6TE7k&#xA;im8bE/tCo61UnFVtrqQPpQ3q/Vb1wAYm+yz0qRE/2X+g1p1AxVGggkgGpGx9j1xVvFXYq7FXYq1U&#xA;Vp38MVQMmpNNRdNRbt+Q5SElYAK/FWUBqmldlDb9adcVVYLIrIJ7iT17kVCvTiiA7ERpU8fnUn3x&#xA;VFYq7FXYq7FXYq7FULPZEym4tn9G5NA7EckcDYCRaivsQQfem2KqMOpSR1TUoxayFiEcEtCRWi0l&#xA;IG58GCmvQHriqPqK07+GKt4q7FXYq7FWqj7+mKoK61HaWGxAub1QQsa7oj9vVYEBPlWvgDiq6Ozl&#xA;lkWa9YO6HlFAlfSQ+O9ObD+ZvoAxVGYq7FXYq7FXYq7FXYqsliiljaOVFkjYUZGAKkeBBxVBppCW&#xA;7M1lNJbciGaMH1I2KgKoKycuKgKBSMrt9GKtU11JlNba4i4ty+3AeRK02pPWgB7jFV0t1qaROPqX&#xA;OfiTH6UiNHypsGMnot18Biq76xqD/wB1ZhAOvryqhPy9MTfjTFVka665YySW0C8vhUK8x4n/ACqw&#xA;io/1cVcdGtZZBJeM986gqvrlSgU0NPTQJEdxWpWvviqOAAFBsB0GKt4q7FXYq7FXYq7FXYq7FWiA&#xA;wIIqDsQehGKoAaLaxSNLZs9k7AK3oFeBVSSB6bh4xuxNQoOKtuuuIylJLadQfiQq8B40P7VZ+9P2&#xA;Riq/6xqCf3tmHB6ehKrkfP1BD+FcVWxXWpvEg+pcJ+IMnqyIsfKm4Ux+s3XxGKtU1x5WNba3joOI&#xA;+Ock1Nf+Wem1PHFXPpEdwyPfSvdcG5pE1EiViCrURAvJSGIpIW2+nFUZFFFFGscSLHGooqKAFA8A&#xA;Biq/FXYq7FXYq//Z</xapGImg:image>
    </rdf:li>
   </rdf:Alt>
  </xap:Thumbnails>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:dc='http://purl.org/dc/elements/1.1/'>
  <dc:format>application/postscript</dc:format>
 </rdf:Description>

</rdf:RDF>
</x:xmpmeta>
xpacket end='w'?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -353.664 translate[1 0 0 1 0 0 ]  concat% page clipgsavenewpathgsave % PSGState0 0 mo0 353.664 li722.947 353.664 li722.947 0 liclp[1 0 0 1 0 0 ] concatfalse sop/0 [/DeviceCMYK] add_csa0 0 0 1 cmyk%ADOBeginSubsetFont: ComicSansMS Initial%ADOt1write: (1.0.21)%%Copyright: Copyright 2007 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /ComicSansMS def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 41 /parenright putdup 97 /a putdup 98 /b putdef/FontBBox {-69 -292 1187 1102} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings4 dict dup begin/.notdef <1C60D8A8C9B7A73DB6F0B6FAFA7BF3C28FD0A21D0FB70854A4518CFB8D731A1977C1C08A> |-/parenright <1C60D8A8C9B72DDD4BB51EC6C49AB7306C1A14C493E9BA5D78AE2C195B29D94044F912FEED39F75BE34A7150607FEA016A23803EFDD2F9288AF7A180AEFCBFBF998E3FBDAC6F3A4074B0F5D69EFDE59096176B6B29149A14AB78FC2B3577A37D471DCCDE635BBEA2665A37EE893BAA312D5DB22CA01C4916AB9D79F1B336301D84554794> |-/a <1C60D8A8C9B7BB5CA503F41BCABD6C718309D7FD3EAFD4723590A6DB54A64A3783FF0E8915C8665146025473AABA73A7307808FC49DF54120176FFCE6E5630D745DEC9D7FE687B22D69E14177C1006B659795051D4F564854E1C732886E0B2617B0D55057161A197AD04FDD89E349DC800C8FAE6C2E2E7218942027A386140843CEC6D038F4E517DF6E091EE1EC97061608AA6DD07992C53BB029F315A3C165875CF85B20BCD136667E2BE57C24163FB07309C0F29C421C91BBF197F69B4468BD92D4E0F963A574D94F4959F6C142EC285F75B0A57DCD73FA9D71DA6249A4005429B> |-/b <1C60D8A8C9B7CA6425CFEA7643A8DEBB5A06DC7605086653C2C486B6F4158198BD8053CFA2CF0B5746D9FD99FA76ED96704A3EE6AD5240E402B445EE535F8D30988D2BF1D277FECDEFAAF08DE0E8B511C56F4A81B9520ADA97B65EF70A3DA2FEDBA1CA8476F2464DBC51D59ED582B47C20AFEA363D12C1DF79765DCD8D8A76043722F8B425E1F7011ADD62634BA97617AA71C6A854B0F0CC686D37B26387C30ABB6C12591354F3ACB70299295B8E1528868221EC40C239E0BBA6645FF00A6753502A06D2C7D368BE1A45974809B92A1817D27F99B4A021556897221B8E32123B695D2F3CCFD1AED08823BA> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont/CHMHAO+ComicSansMS /ComicSansMS findfont def/CHMHAO+ComicSansMS*1 [41{/.notdef}repeat /parenright 55{/.notdef}repeat /a /b 157{/.notdef}repeat] CHMHAO+ComicSansMS nfntCHMHAO+ComicSansMS*1  [18 0 -0 -18 0 0 ]mfnt sfnt19.8843 42.0063 mov(a\)) sh394.884 42.0063 mov(b\)) sh140.737 131.643 mo141.517 131.766 li142.22 132.125 li142.778 132.683 li143.137 133.386 li143.26 134.166 li143.137 134.945 li142.778 135.649 li142.22 136.207 li141.517 136.565 li140.737 136.689 li139.958 136.565 li139.254 136.207 li138.696 135.649 li138.338 134.945 li138.214 134.166 li138.338 133.386 li138.696 132.683 li139.254 132.125 li139.958 131.766 li140.737 131.643 li0.0117648 0.960785 0.913726 0 cmykf0.5 lw0 lc0 lj4 ml[] 0 dshtrue sadj140.737 131.643 mo141.517 131.766 li142.22 132.125 li142.778 132.683 li143.137 133.386 li143.26 134.166 li143.137 134.945 li142.778 135.649 li142.22 136.207 li141.517 136.565 li140.737 136.689 li139.958 136.565 li139.254 136.207 li138.696 135.649 li138.338 134.945 li138.214 134.166 li138.338 133.386 li138.696 132.683 li139.254 132.125 li139.958 131.766 li140.737 131.643 licp0 0 0 1 cmyk@57.775 91.6939 mo58.5552 91.8174 li59.2584 92.1758 li59.8169 92.7339 li60.1753 93.4376 li60.2984 94.2173 li60.1753 94.9966 li59.8169 95.7002 li59.2584 96.2584 li58.5552 96.6168 li57.775 96.7403 li56.9957 96.6168 li56.2925 96.2584 li55.7339 95.7002 li55.3755 94.9966 li55.2525 94.2173 li55.3755 93.4376 li55.7339 92.7339 li56.2925 92.1758 li56.9957 91.8174 li57.775 91.6939 li0.0117648 0.960785 0.913726 0 cmykf57.775 91.6939 mo58.5552 91.8174 li59.2584 92.1758 li59.8169 92.7339 li60.1753 93.4376 li60.2984 94.2173 li60.1753 94.9966 li59.8169 95.7002 li59.2584 96.2584 li58.5552 96.6168 li57.775 96.7403 li56.9957 96.6168 li56.2925 96.2584 li55.7339 95.7002 li55.3755 94.9966 li55.2525 94.2173 li55.3755 93.4376 li55.7339 92.7339 li56.2925 92.1758 li56.9957 91.8174 li57.775 91.6939 licp0 0 0 1 cmyk@94.1285 94.9952 mo94.9087 95.1187 li95.6119 95.4771 li96.1695 96.0357 li96.5279 96.7388 li96.6519 97.5186 li96.5279 98.2984 li96.1695 99.0015 li95.6119 99.5596 li94.9087 99.918 li94.1285 100.042 li93.3492 99.918 li92.646 99.5596 li92.0874 99.0015 li91.7291 98.2984 li91.605 97.5186 li91.7291 96.7388 li92.0874 96.0357 li92.646 95.4771 li93.3492 95.1187 li94.1285 94.9952 li0.0117648 0.960785 0.913726 0 cmykf94.1285 94.9952 mo94.9087 95.1187 li95.6119 95.4771 li96.1695 96.0357 li96.5279 96.7388 li96.6519 97.5186 li96.5279 98.2984 li96.1695 99.0015 li95.6119 99.5596 li94.9087 99.918 li94.1285 100.042 li93.3492 99.918 li92.646 99.5596 li92.0874 99.0015 li91.7291 98.2984 li91.605 97.5186 li91.7291 96.7388 li92.0874 96.0357 li92.646 95.4771 li93.3492 95.1187 li94.1285 94.9952 licp0 0 0 1 cmyk@155.9 73.1329 mo156.68 73.2564 li157.383 73.6148 li157.941 74.1729 li158.3 74.8765 li158.423 75.6558 li158.3 76.4356 li157.941 77.1392 li157.383 77.6973 li156.68 78.0557 li155.9 78.1792 li155.12 78.0557 li154.417 77.6973 li153.858 77.1392 li153.5 76.4356 li153.377 75.6558 li153.5 74.8765 li153.858 74.1729 li154.417 73.6148 li155.12 73.2564 li155.9 73.1329 li0.0117648 0.960785 0.913726 0 cmykf155.9 73.1329 mo156.68 73.2564 li157.383 73.6148 li157.941 74.1729 li158.3 74.8765 li158.423 75.6558 li158.3 76.4356 li157.941 77.1392 li157.383 77.6973 li156.68 78.0557 li155.9 78.1792 li155.12 78.0557 li154.417 77.6973 li153.858 77.1392 li153.5 76.4356 li153.377 75.6558 li153.5 74.8765 li153.858 74.1729 li154.417 73.6148 li155.12 73.2564 li155.9 73.1329 licp0 0 0 1 cmyk@111.349 186.463 mo112.128 186.587 li112.832 186.945 li113.39 187.504 li113.748 188.207 li113.872 188.986 li113.748 189.766 li113.39 190.469 li112.832 191.027 li112.128 191.386 li111.349 191.51 li110.569 191.386 li109.865 191.027 li109.308 190.469 li108.949 189.766 li108.825 188.986 li108.949 188.207 li109.308 187.504 li109.865 186.945 li110.569 186.587 li111.349 186.463 li0.0117648 0.960785 0.913726 0 cmykf111.349 186.463 mo112.128 186.587 li112.832 186.945 li113.39 187.504 li113.748 188.207 li113.872 188.986 li113.748 189.766 li113.39 190.469 li112.832 191.027 li112.128 191.386 li111.349 191.51 li110.569 191.386 li109.865 191.027 li109.308 190.469 li108.949 189.766 li108.825 188.986 li108.949 188.207 li109.308 187.504 li109.865 186.945 li110.569 186.587 li111.349 186.463 licp0 0 0 1 cmyk@138.251 97.563 mo139.031 97.6861 li139.734 98.0445 li140.292 98.6031 li140.65 99.3062 li140.774 100.086 li140.65 100.866 li140.292 101.569 li139.734 102.128 li139.031 102.486 li138.251 102.609 li137.472 102.486 li136.769 102.128 li136.21 101.569 li135.852 100.866 li135.729 100.086 li135.852 99.3062 li136.21 98.6031 li136.769 98.0445 li137.472 97.6861 li138.251 97.563 li0.0117648 0.960785 0.913726 0 cmykf138.251 97.563 mo139.031 97.6861 li139.734 98.0445 li140.292 98.6031 li140.65 99.3062 li140.774 100.086 li140.65 100.866 li140.292 101.569 li139.734 102.128 li139.031 102.486 li138.251 102.609 li137.472 102.486 li136.769 102.128 li136.21 101.569 li135.852 100.866 li135.729 100.086 li135.852 99.3062 li136.21 98.6031 li136.769 98.0445 li137.472 97.6861 li138.251 97.563 licp0 0 0 1 cmyk@140.911 90.5923 mo141.69 90.7164 li142.394 91.0748 li142.952 91.6329 li143.311 92.336 li143.434 93.1158 li143.311 93.8956 li142.952 94.5987 li142.394 95.1568 li141.69 95.5152 li140.911 95.6387 li140.131 95.5152 li139.428 95.1568 li138.87 94.5987 li138.512 93.8956 li138.388 93.1158 li138.512 92.336 li138.87 91.6329 li139.428 91.0748 li140.131 90.7164 li140.911 90.5923 li0.0117648 0.960785 0.913726 0 cmykf140.911 90.5923 mo141.69 90.7164 li142.394 91.0748 li142.952 91.6329 li143.311 92.336 li143.434 93.1158 li143.311 93.8956 li142.952 94.5987 li142.394 95.1568 li141.69 95.5152 li140.911 95.6387 li140.131 95.5152 li139.428 95.1568 li138.87 94.5987 li138.512 93.8956 li138.388 93.1158 li138.512 92.336 li138.87 91.6329 li139.428 91.0748 li140.131 90.7164 li140.911 90.5923 licp0 0 0 1 cmyk@171.661 104.386 mo172.44 104.509 li173.144 104.868 li173.702 105.426 li174.061 106.129 li174.184 106.909 li174.061 107.688 li173.702 108.392 li173.144 108.95 li172.44 109.309 li171.661 109.432 li170.881 109.309 li170.178 108.95 li169.62 108.392 li169.262 107.688 li169.138 106.909 li169.262 106.129 li169.62 105.426 li170.178 104.868 li170.881 104.509 li171.661 104.386 li0.0117648 0.960785 0.913726 0 cmykf171.661 104.386 mo172.44 104.509 li173.144 104.868 li173.702 105.426 li174.061 106.129 li174.184 106.909 li174.061 107.688 li173.702 108.392 li173.144 108.95 li172.44 109.309 li171.661 109.432 li170.881 109.309 li170.178 108.95 li169.62 108.392 li169.262 107.688 li169.138 106.909 li169.262 106.129 li169.62 105.426 li170.178 104.868 li170.881 104.509 li171.661 104.386 licp0 0 0 1 cmyk@190.628 120.463 mo191.407 120.587 li192.11 120.945 li192.669 121.503 li193.027 122.207 li193.15 122.986 li193.027 123.766 li192.669 124.469 li192.11 125.027 li191.407 125.386 li190.628 125.509 li189.848 125.386 li189.145 125.027 li188.587 124.469 li188.229 123.766 li188.104 122.986 li188.229 122.207 li188.587 121.503 li189.145 120.945 li189.848 120.587 li190.628 120.463 li0.0117648 0.960785 0.913726 0 cmykf190.628 120.463 mo191.407 120.587 li192.11 120.945 li192.669 121.503 li193.027 122.207 li193.15 122.986 li193.027 123.766 li192.669 124.469 li192.11 125.027 li191.407 125.386 li190.628 125.509 li189.848 125.386 li189.145 125.027 li188.587 124.469 li188.229 123.766 li188.104 122.986 li188.229 122.207 li188.587 121.503 li189.145 120.945 li189.848 120.587 li190.628 120.463 licp0 0 0 1 cmyk@162.499 126.17 mo163.278 126.294 li163.981 126.652 li164.54 127.21 li164.898 127.914 li165.022 128.693 li164.898 129.473 li164.54 130.177 li163.981 130.735 li163.278 131.093 li162.499 131.217 li161.719 131.093 li161.016 130.735 li160.457 130.177 li160.099 129.473 li159.976 128.693 li160.099 127.914 li160.457 127.21 li161.016 126.652 li161.719 126.294 li162.499 126.17 li0.0117648 0.960785 0.913726 0 cmykf162.499 126.17 mo163.278 126.294 li163.981 126.652 li164.54 127.21 li164.898 127.914 li165.022 128.693 li164.898 129.473 li164.54 130.177 li163.981 130.735 li163.278 131.093 li162.499 131.217 li161.719 131.093 li161.016 130.735 li160.457 130.177 li160.099 129.473 li159.976 128.693 li160.099 127.914 li160.457 127.21 li161.016 126.652 li161.719 126.294 li162.499 126.17 licp0 0 0 1 cmyk@74.2261 82.6866 mo75.0054 82.8101 li75.7085 83.1685 li76.2671 83.7271 li76.6255 84.4302 li76.7486 85.21 li76.6255 85.9898 li76.2671 86.6929 li75.7085 87.251 li75.0054 87.6094 li74.2261 87.733 li73.4458 87.6094 li72.7427 87.251 li72.1841 86.6929 li71.8257 85.9898 li71.7027 85.21 li71.8257 84.4302 li72.1841 83.7271 li72.7427 83.1685 li73.4458 82.8101 li74.2261 82.6866 li0.0117648 0.960785 0.913726 0 cmykf74.2261 82.6866 mo75.0054 82.8101 li75.7085 83.1685 li76.2671 83.7271 li76.6255 84.4302 li76.7486 85.21 li76.6255 85.9898 li76.2671 86.6929 li75.7085 87.251 li75.0054 87.6094 li74.2261 87.733 li73.4458 87.6094 li72.7427 87.251 li72.1841 86.6929 li71.8257 85.9898 li71.7027 85.21 li71.8257 84.4302 li72.1841 83.7271 li72.7427 83.1685 li73.4458 82.8101 li74.2261 82.6866 licp0 0 0 1 cmyk@119.935 119.529 mo120.714 119.652 li121.418 120.011 li121.976 120.569 li122.334 121.272 li122.458 122.052 li122.334 122.832 li121.976 123.535 li121.418 124.093 li120.714 124.452 li119.935 124.575 li119.155 124.452 li118.451 124.093 li117.894 123.535 li117.535 122.832 li117.411 122.052 li117.535 121.272 li117.894 120.569 li118.451 120.011 li119.155 119.652 li119.935 119.529 li0.0117648 0.960785 0.913726 0 cmykf119.935 119.529 mo120.714 119.652 li121.418 120.011 li121.976 120.569 li122.334 121.272 li122.458 122.052 li122.334 122.832 li121.976 123.535 li121.418 124.093 li120.714 124.452 li119.935 124.575 li119.155 124.452 li118.451 124.093 li117.894 123.535 li117.535 122.832 li117.411 122.052 li117.535 121.272 li117.894 120.569 li118.451 120.011 li119.155 119.652 li119.935 119.529 licp0 0 0 1 cmyk@232.563 125.126 mo233.343 125.25 li234.046 125.608 li234.604 126.166 li234.963 126.869 li235.086 127.649 li234.963 128.429 li234.604 129.132 li234.046 129.69 li233.343 130.049 li232.563 130.172 li231.783 130.049 li231.08 129.69 li230.522 129.132 li230.163 128.429 li230.04 127.649 li230.163 126.869 li230.522 126.166 li231.08 125.608 li231.783 125.25 li232.563 125.126 li0.0117648 0.960785 0.913726 0 cmykf232.563 125.126 mo233.343 125.25 li234.046 125.608 li234.604 126.166 li234.963 126.869 li235.086 127.649 li234.963 128.429 li234.604 129.132 li234.046 129.69 li233.343 130.049 li232.563 130.172 li231.783 130.049 li231.08 129.69 li230.522 129.132 li230.163 128.429 li230.04 127.649 li230.163 126.869 li230.522 126.166 li231.08 125.608 li231.783 125.25 li232.563 125.126 licp0 0 0 1 cmyk@183.811 102.093 mo184.59 102.216 li185.293 102.574 li185.852 103.133 li186.21 103.836 li186.333 104.616 li186.21 105.396 li185.852 106.099 li185.293 106.657 li184.59 107.015 li183.811 107.139 li183.03 107.015 li182.327 106.657 li181.77 106.099 li181.411 105.396 li181.287 104.616 li181.411 103.836 li181.77 103.133 li182.327 102.574 li183.03 102.216 li183.811 102.093 li0.0117648 0.960785 0.913726 0 cmykf183.811 102.093 mo184.59 102.216 li185.293 102.574 li185.852 103.133 li186.21 103.836 li186.333 104.616 li186.21 105.396 li185.852 106.099 li185.293 106.657 li184.59 107.015 li183.811 107.139 li183.03 107.015 li182.327 106.657 li181.77 106.099 li181.411 105.396 li181.287 104.616 li181.411 103.836 li181.77 103.133 li182.327 102.574 li183.03 102.216 li183.811 102.093 licp0 0 0 1 cmyk@175.572 220.558 mo176.352 220.681 li177.055 221.039 li177.613 221.598 li177.972 222.301 li178.095 223.08 li177.972 223.86 li177.613 224.563 li177.055 225.122 li176.352 225.48 li175.572 225.604 li174.792 225.48 li174.089 225.122 li173.53 224.563 li173.173 223.86 li173.049 223.08 li173.173 222.301 li173.53 221.598 li174.089 221.039 li174.792 220.681 li175.572 220.558 li0.0117648 0.960785 0.913726 0 cmykf175.572 220.558 mo176.352 220.681 li177.055 221.039 li177.613 221.598 li177.972 222.301 li178.095 223.08 li177.972 223.86 li177.613 224.563 li177.055 225.122 li176.352 225.48 li175.572 225.604 li174.792 225.48 li174.089 225.122 li173.53 224.563 li173.173 223.86 li173.049 223.08 li173.173 222.301 li173.53 221.598 li174.089 221.039 li174.792 220.681 li175.572 220.558 licp0 0 0 1 cmyk@45.5689 220.477 mo46.3492 220.6 li47.0523 220.959 li47.6099 221.517 li47.9683 222.22 li48.0923 223 li47.9683 223.779 li47.6099 224.482 li47.0523 225.041 li46.3492 225.399 li45.5689 225.522 li44.7896 225.399 li44.0855 225.041 li43.5279 224.482 li43.1695 223.779 li43.0455 223 li43.1695 222.22 li43.5279 221.517 li44.0855 220.959 li44.7896 220.6 li45.5689 220.477 li0.0117648 0.960785 0.913726 0 cmykf45.5689 220.477 mo46.3492 220.6 li47.0523 220.959 li47.6099 221.517 li47.9683 222.22 li48.0923 223 li47.9683 223.779 li47.6099 224.482 li47.0523 225.041 li46.3492 225.399 li45.5689 225.522 li44.7896 225.399 li44.0855 225.041 li43.5279 224.482 li43.1695 223.779 li43.0455 223 li43.1695 222.22 li43.5279 221.517 li44.0855 220.959 li44.7896 220.6 li45.5689 220.477 licp0 0 0 1 cmyk@2.77588 175.848 mo3.55616 175.972 li4.25928 176.33 li4.81788 176.888 li5.17627 177.592 li5.29932 178.371 li5.17627 179.15 li4.81788 179.854 li4.25928 180.412 li3.55616 180.771 li2.77588 180.895 li1.99659 180.771 li1.29346 180.412 li0.734864 179.854 li0.376465 179.15 li0.253418 178.371 li0.376465 177.592 li0.734864 176.888 li1.29346 176.33 li1.99659 175.972 li2.77588 175.848 li0.0117648 0.960785 0.913726 0 cmykf2.77588 175.848 mo3.55616 175.972 li4.25928 176.33 li4.81788 176.888 li5.17627 177.592 li5.29932 178.371 li5.17627 179.15 li4.81788 179.854 li4.25928 180.412 li3.55616 180.771 li2.77588 180.895 li1.99659 180.771 li1.29346 180.412 li0.734864 179.854 li0.376465 179.15 li0.253418 178.371 li0.376465 177.592 li0.734864 176.888 li1.29346 176.33 li1.99659 175.972 li2.77588 175.848 licp0 0 0 1 cmyk@139.406 159.156 mo140.186 159.279 li140.889 159.638 li141.447 160.196 li141.806 160.899 li141.929 161.679 li141.806 162.458 li141.447 163.162 li140.889 163.72 li140.186 164.078 li139.406 164.202 li138.626 164.078 li137.923 163.72 li137.364 163.162 li137.006 162.458 li136.883 161.679 li137.006 160.899 li137.364 160.196 li137.923 159.638 li138.626 159.279 li139.406 159.156 li0.0117648 0.960785 0.913726 0 cmykf139.406 159.156 mo140.186 159.279 li140.889 159.638 li141.447 160.196 li141.806 160.899 li141.929 161.679 li141.806 162.458 li141.447 163.162 li140.889 163.72 li140.186 164.078 li139.406 164.202 li138.626 164.078 li137.923 163.72 li137.364 163.162 li137.006 162.458 li136.883 161.679 li137.006 160.899 li137.364 160.196 li137.923 159.638 li138.626 159.279 li139.406 159.156 licp0 0 0 1 cmyk@150.767 122.521 mo151.547 122.644 li152.25 123.002 li152.809 123.561 li153.167 124.264 li153.29 125.044 li153.167 125.823 li152.809 126.527 li152.25 127.085 li151.547 127.443 li150.767 127.567 li149.987 127.443 li149.284 127.085 li148.726 126.527 li148.367 125.823 li148.244 125.044 li148.367 124.264 li148.726 123.561 li149.284 123.002 li149.987 122.644 li150.767 122.521 li0.0117648 0.960785 0.913726 0 cmykf150.767 122.521 mo151.547 122.644 li152.25 123.002 li152.809 123.561 li153.167 124.264 li153.29 125.044 li153.167 125.823 li152.809 126.527 li152.25 127.085 li151.547 127.443 li150.767 127.567 li149.987 127.443 li149.284 127.085 li148.726 126.527 li148.367 125.823 li148.244 125.044 li148.367 124.264 li148.726 123.561 li149.284 123.002 li149.987 122.644 li150.767 122.521 licp0 0 0 1 cmyk@255.222 62.4078 mo256.002 62.5313 li256.705 62.8897 li257.263 63.4478 li257.622 64.1509 li257.745 64.9307 li257.622 65.7105 li257.263 66.4141 li256.705 66.9722 li256.002 67.3306 li255.222 67.4542 li254.442 67.3306 li253.739 66.9722 li253.181 66.4141 li252.822 65.7105 li252.699 64.9307 li252.822 64.1509 li253.181 63.4478 li253.739 62.8897 li254.442 62.5313 li255.222 62.4078 li0.0117648 0.960785 0.913726 0 cmykf255.222 62.4078 mo256.002 62.5313 li256.705 62.8897 li257.263 63.4478 li257.622 64.1509 li257.745 64.9307 li257.622 65.7105 li257.263 66.4141 li256.705 66.9722 li256.002 67.3306 li255.222 67.4542 li254.442 67.3306 li253.739 66.9722 li253.181 66.4141 li252.822 65.7105 li252.699 64.9307 li252.822 64.1509 li253.181 63.4478 li253.739 62.8897 li254.442 62.5313 li255.222 62.4078 licp0 0 0 1 cmyk@176.789 74.1568 mo177.568 74.2803 li178.272 74.6387 li178.83 75.1968 li179.188 75.9004 li179.313 76.6802 li179.188 77.46 li178.83 78.1631 li178.272 78.7212 li177.568 79.0796 li176.789 79.2032 li176.01 79.0796 li175.306 78.7212 li174.748 78.1631 li174.39 77.46 li174.266 76.6802 li174.39 75.9004 li174.748 75.1968 li175.306 74.6387 li176.01 74.2803 li176.789 74.1568 li0.0117648 0.960785 0.913726 0 cmykf176.789 74.1568 mo177.568 74.2803 li178.272 74.6387 li178.83 75.1968 li179.188 75.9004 li179.313 76.6802 li179.188 77.46 li178.83 78.1631 li178.272 78.7212 li177.568 79.0796 li176.789 79.2032 li176.01 79.0796 li175.306 78.7212 li174.748 78.1631 li174.39 77.46 li174.266 76.6802 li174.39 75.9004 li174.748 75.1968 li175.306 74.6387 li176.01 74.2803 li176.789 74.1568 licp0 0 0 1 cmyk@176.223 56.9112 mo177.003 57.0347 li177.706 57.3931 li178.264 57.9512 li178.622 58.6548 li178.746 59.4341 li178.622 60.2139 li178.264 60.9175 li177.706 61.4756 li177.003 61.834 li176.223 61.9576 li175.443 61.834 li174.739 61.4756 li174.182 60.9175 li173.823 60.2139 li173.699 59.4341 li173.823 58.6548 li174.182 57.9512 li174.739 57.3931 li175.443 57.0347 li176.223 56.9112 li0.0117648 0.960785 0.913726 0 cmykf176.223 56.9112 mo177.003 57.0347 li177.706 57.3931 li178.264 57.9512 li178.622 58.6548 li178.746 59.4341 li178.622 60.2139 li178.264 60.9175 li177.706 61.4756 li177.003 61.834 li176.223 61.9576 li175.443 61.834 li174.739 61.4756 li174.182 60.9175 li173.823 60.2139 li173.699 59.4341 li173.823 58.6548 li174.182 57.9512 li174.739 57.3931 li175.443 57.0347 li176.223 56.9112 licp0 0 0 1 cmyk@73.2671 182.438 mo74.0464 182.562 li74.7505 182.92 li75.3082 183.479 li75.6666 184.182 li75.7906 184.961 li75.6666 185.74 li75.3082 186.444 li74.7505 187.002 li74.0464 187.361 li73.2671 187.484 li72.4878 187.361 li71.7837 187.002 li71.2261 186.444 li70.8677 185.74 li70.7437 184.961 li70.8677 184.182 li71.2261 183.479 li71.7837 182.92 li72.4878 182.562 li73.2671 182.438 li0.0117648 0.960785 0.913726 0 cmykf73.2671 182.438 mo74.0464 182.562 li74.7505 182.92 li75.3082 183.479 li75.6666 184.182 li75.7906 184.961 li75.6666 185.74 li75.3082 186.444 li74.7505 187.002 li74.0464 187.361 li73.2671 187.484 li72.4878 187.361 li71.7837 187.002 li71.2261 186.444 li70.8677 185.74 li70.7437 184.961 li70.8677 184.182 li71.2261 183.479 li71.7837 182.92 li72.4878 182.562 li73.2671 182.438 licp0 0 0 1 cmyk@88.0992 70.6045 mo88.8785 70.7281 li89.5826 71.0865 li90.1402 71.6451 li90.4986 72.3482 li90.6226 73.128 li90.4986 73.9078 li90.1402 74.6109 li89.5826 75.169 li88.8785 75.5274 li88.0992 75.6509 li87.3199 75.5274 li86.6158 75.169 li86.0582 74.6109 li85.6998 73.9078 li85.5757 73.128 li85.6998 72.3482 li86.0582 71.6451 li86.6158 71.0865 li87.3199 70.7281 li88.0992 70.6045 li0.0117648 0.960785 0.913726 0 cmykf88.0992 70.6045 mo88.8785 70.7281 li89.5826 71.0865 li90.1402 71.6451 li90.4986 72.3482 li90.6226 73.128 li90.4986 73.9078 li90.1402 74.6109 li89.5826 75.169 li88.8785 75.5274 li88.0992 75.6509 li87.3199 75.5274 li86.6158 75.169 li86.0582 74.6109 li85.6998 73.9078 li85.5757 73.128 li85.6998 72.3482 li86.0582 71.6451 li86.6158 71.0865 li87.3199 70.7281 li88.0992 70.6045 licp0 0 0 1 cmyk@95.0279 140.259 mo95.8072 140.383 li96.5113 140.741 li97.0689 141.3 li97.4273 142.003 li97.5513 142.783 li97.4273 143.563 li97.0689 144.266 li96.5113 144.824 li95.8072 145.182 li95.0279 145.306 li94.2486 145.182 li93.5445 144.824 li92.9869 144.266 li92.6285 143.563 li92.5044 142.783 li92.6285 142.003 li92.9869 141.3 li93.5445 140.741 li94.2486 140.383 li95.0279 140.259 li0.0117648 0.960785 0.913726 0 cmykf95.0279 140.259 mo95.8072 140.383 li96.5113 140.741 li97.0689 141.3 li97.4273 142.003 li97.5513 142.783 li97.4273 143.563 li97.0689 144.266 li96.5113 144.824 li95.8072 145.182 li95.0279 145.306 li94.2486 145.182 li93.5445 144.824 li92.9869 144.266 li92.6285 143.563 li92.5044 142.783 li92.6285 142.003 li92.9869 141.3 li93.5445 140.741 li94.2486 140.383 li95.0279 140.259 licp0 0 0 1 cmyk@86.3062 158.32 mo87.0855 158.443 li87.7896 158.802 li88.3472 159.36 li88.7056 160.063 li88.8296 160.843 li88.7056 161.623 li88.3472 162.326 li87.7896 162.884 li87.0855 163.242 li86.3062 163.366 li85.5269 163.242 li84.8228 162.884 li84.2652 162.326 li83.9068 161.623 li83.7828 160.843 li83.9068 160.063 li84.2652 159.36 li84.8228 158.802 li85.5269 158.443 li86.3062 158.32 li0.0117648 0.960785 0.913726 0 cmykf86.3062 158.32 mo87.0855 158.443 li87.7896 158.802 li88.3472 159.36 li88.7056 160.063 li88.8296 160.843 li88.7056 161.623 li88.3472 162.326 li87.7896 162.884 li87.0855 163.242 li86.3062 163.366 li85.5269 163.242 li84.8228 162.884 li84.2652 162.326 li83.9068 161.623 li83.7828 160.843 li83.9068 160.063 li84.2652 159.36 li84.8228 158.802 li85.5269 158.443 li86.3062 158.32 licp0 0 0 1 cmyk@103.059 213.617 mo103.839 213.74 li104.542 214.099 li105.101 214.656 li105.459 215.36 li105.582 216.14 li105.459 216.92 li105.101 217.623 li104.542 218.182 li103.839 218.539 li103.059 218.663 li102.279 218.539 li101.576 218.182 li101.018 217.623 li100.659 216.92 li100.536 216.14 li100.659 215.36 li101.018 214.656 li101.576 214.099 li102.279 213.74 li103.059 213.617 li0.0117648 0.960785 0.913726 0 cmykf103.059 213.617 mo103.839 213.74 li104.542 214.099 li105.101 214.656 li105.459 215.36 li105.582 216.14 li105.459 216.92 li105.101 217.623 li104.542 218.182 li103.839 218.539 li103.059 218.663 li102.279 218.539 li101.576 218.182 li101.018 217.623 li100.659 216.92 li100.536 216.14 li100.659 215.36 li101.018 214.656 li101.576 214.099 li102.279 213.74 li103.059 213.617 licp0 0 0 1 cmyk@65.5084 124.305 mo66.2886 124.429 li66.9918 124.787 li67.5494 125.345 li67.9078 126.049 li68.0318 126.829 li67.9078 127.608 li67.5494 128.312 li66.9918 128.87 li66.2886 129.228 li65.5084 129.352 li64.7291 129.228 li64.0259 128.87 li63.4673 128.312 li63.1089 127.608 li62.9849 126.829 li63.1089 126.049 li63.4673 125.345 li64.0259 124.787 li64.7291 124.429 li65.5084 124.305 li0.0117648 0.960785 0.913726 0 cmykf65.5084 124.305 mo66.2886 124.429 li66.9918 124.787 li67.5494 125.345 li67.9078 126.049 li68.0318 126.829 li67.9078 127.608 li67.5494 128.312 li66.9918 128.87 li66.2886 129.228 li65.5084 129.352 li64.7291 129.228 li64.0259 128.87 li63.4673 128.312 li63.1089 127.608 li62.9849 126.829 li63.1089 126.049 li63.4673 125.345 li64.0259 124.787 li64.7291 124.429 li65.5084 124.305 licp0 0 0 1 cmyk@192.893 108.418 mo193.673 108.542 li194.376 108.9 li194.935 109.458 li195.293 110.162 li195.416 110.941 li195.293 111.721 li194.935 112.424 li194.376 112.982 li193.673 113.341 li192.893 113.464 li192.113 113.341 li191.41 112.982 li190.852 112.424 li190.493 111.721 li190.37 110.941 li190.493 110.162 li190.852 109.458 li191.41 108.9 li192.113 108.542 li192.893 108.418 li0.0117648 0.960785 0.913726 0 cmykf192.893 108.418 mo193.673 108.542 li194.376 108.9 li194.935 109.458 li195.293 110.162 li195.416 110.941 li195.293 111.721 li194.935 112.424 li194.376 112.982 li193.673 113.341 li192.893 113.464 li192.113 113.341 li191.41 112.982 li190.852 112.424 li190.493 111.721 li190.37 110.941 li190.493 110.162 li190.852 109.458 li191.41 108.9 li192.113 108.542 li192.893 108.418 licp0 0 0 1 cmyk@123.879 147.837 mo124.658 147.961 li125.362 148.319 li125.92 148.877 li126.278 149.581 li126.402 150.36 li126.278 151.14 li125.92 151.844 li125.362 152.402 li124.658 152.76 li123.879 152.884 li123.1 152.76 li122.396 152.402 li121.838 151.844 li121.48 151.14 li121.355 150.36 li121.48 149.581 li121.838 148.877 li122.396 148.319 li123.1 147.961 li123.879 147.837 li0.0117648 0.960785 0.913726 0 cmykf123.879 147.837 mo124.658 147.961 li125.362 148.319 li125.92 148.877 li126.278 149.581 li126.402 150.36 li126.278 151.14 li125.92 151.844 li125.362 152.402 li124.658 152.76 li123.879 152.884 li123.1 152.76 li122.396 152.402 li121.838 151.844 li121.48 151.14 li121.355 150.36 li121.48 149.581 li121.838 148.877 li122.396 148.319 li123.1 147.961 li123.879 147.837 licp0 0 0 1 cmyk@166.813 73.0591 mo167.593 73.1822 li168.297 73.5406 li168.854 74.0992 li169.213 74.8023 li169.337 75.5821 li169.213 76.3619 li168.854 77.065 li168.297 77.6231 li167.593 77.9815 li166.813 78.105 li166.034 77.9815 li165.33 77.6231 li164.772 77.065 li164.414 76.3619 li164.29 75.5821 li164.414 74.8023 li164.772 74.0992 li165.33 73.5406 li166.034 73.1822 li166.813 73.0591 li0.0117648 0.960785 0.913726 0 cmykf166.813 73.0591 mo167.593 73.1822 li168.297 73.5406 li168.854 74.0992 li169.213 74.8023 li169.337 75.5821 li169.213 76.3619 li168.854 77.065 li168.297 77.6231 li167.593 77.9815 li166.813 78.105 li166.034 77.9815 li165.33 77.6231 li164.772 77.065 li164.414 76.3619 li164.29 75.5821 li164.414 74.8023 li164.772 74.0992 li165.33 73.5406 li166.034 73.1822 li166.813 73.0591 licp0 0 0 1 cmyk@96.4175 42.3321 mo97.1968 42.4556 li97.9009 42.814 li98.4585 43.3726 li98.8169 44.0757 li98.941 44.8555 li98.8169 45.6353 li98.4585 46.3384 li97.9009 46.8965 li97.1968 47.2549 li96.4175 47.3785 li95.6382 47.2549 li94.9341 46.8965 li94.3765 46.3384 li94.0181 45.6353 li93.8941 44.8555 li94.0181 44.0757 li94.3765 43.3726 li94.9341 42.814 li95.6382 42.4556 li96.4175 42.3321 li0.0117648 0.960785 0.913726 0 cmykf96.4175 42.3321 mo97.1968 42.4556 li97.9009 42.814 li98.4585 43.3726 li98.8169 44.0757 li98.941 44.8555 li98.8169 45.6353 li98.4585 46.3384 li97.9009 46.8965 li97.1968 47.2549 li96.4175 47.3785 li95.6382 47.2549 li94.9341 46.8965 li94.3765 46.3384 li94.0181 45.6353 li93.8941 44.8555 li94.0181 44.0757 li94.3765 43.3726 li94.9341 42.814 li95.6382 42.4556 li96.4175 42.3321 licp0 0 0 1 cmyk@64.898 77.9825 mo65.6773 78.106 li66.3804 78.4644 li66.939 79.0225 li67.2974 79.7261 li67.4205 80.5054 li67.2974 81.2852 li66.939 81.9888 li66.3804 82.5469 li65.6773 82.9053 li64.898 83.0289 li64.1177 82.9053 li63.4146 82.5469 li62.857 81.9888 li62.4986 81.2852 li62.3746 80.5054 li62.4986 79.7261 li62.857 79.0225 li63.4146 78.4644 li64.1177 78.106 li64.898 77.9825 li0.0117648 0.960785 0.913726 0 cmykf64.898 77.9825 mo65.6773 78.106 li66.3804 78.4644 li66.939 79.0225 li67.2974 79.7261 li67.4205 80.5054 li67.2974 81.2852 li66.939 81.9888 li66.3804 82.5469 li65.6773 82.9053 li64.898 83.0289 li64.1177 82.9053 li63.4146 82.5469 li62.857 81.9888 li62.4986 81.2852 li62.3746 80.5054 li62.4986 79.7261 li62.857 79.0225 li63.4146 78.4644 li64.1177 78.106 li64.898 77.9825 licp0 0 0 1 cmyk@67.1607 136.928 mo67.941 137.052 li68.6441 137.41 li69.2017 137.968 li69.5601 138.671 li69.6841 139.451 li69.5601 140.231 li69.2017 140.934 li68.6441 141.492 li67.941 141.851 li67.1607 141.975 li66.3814 141.851 li65.6773 141.492 li65.1197 140.934 li64.7613 140.231 li64.6373 139.451 li64.7613 138.671 li65.1197 137.968 li65.6773 137.41 li66.3814 137.052 li67.1607 136.928 li0.0117648 0.960785 0.913726 0 cmykf67.1607 136.928 mo67.941 137.052 li68.6441 137.41 li69.2017 137.968 li69.5601 138.671 li69.6841 139.451 li69.5601 140.231 li69.2017 140.934 li68.6441 141.492 li67.941 141.851 li67.1607 141.975 li66.3814 141.851 li65.6773 141.492 li65.1197 140.934 li64.7613 140.231 li64.6373 139.451 li64.7613 138.671 li65.1197 137.968 li65.6773 137.41 li66.3814 137.052 li67.1607 136.928 licp0 0 0 1 cmyk@195.182 112.201 mo195.961 112.325 li196.664 112.683 li197.223 113.241 li197.581 113.944 li197.704 114.724 li197.581 115.504 li197.223 116.208 li196.664 116.766 li195.961 117.124 li195.182 117.248 li194.401 117.124 li193.698 116.766 li193.14 116.208 li192.781 115.504 li192.658 114.724 li192.781 113.944 li193.14 113.241 li193.698 112.683 li194.401 112.325 li195.182 112.201 li0.0117648 0.960785 0.913726 0 cmykf195.182 112.201 mo195.961 112.325 li196.664 112.683 li197.223 113.241 li197.581 113.944 li197.704 114.724 li197.581 115.504 li197.223 116.208 li196.664 116.766 li195.961 117.124 li195.182 117.248 li194.401 117.124 li193.698 116.766 li193.14 116.208 li192.781 115.504 li192.658 114.724 li192.781 113.944 li193.14 113.241 li193.698 112.683 li194.401 112.325 li195.182 112.201 licp0 0 0 1 cmyk@108.075 116.969 mo108.855 117.092 li109.559 117.451 li110.117 118.009 li110.475 118.712 li110.599 119.492 li110.475 120.272 li110.117 120.975 li109.559 121.533 li108.855 121.892 li108.075 122.015 li107.296 121.892 li106.593 121.533 li106.034 120.975 li105.676 120.272 li105.553 119.492 li105.676 118.712 li106.034 118.009 li106.593 117.451 li107.296 117.092 li108.075 116.969 li0.0117648 0.960785 0.913726 0 cmykf108.075 116.969 mo108.855 117.092 li109.559 117.451 li110.117 118.009 li110.475 118.712 li110.599 119.492 li110.475 120.272 li110.117 120.975 li109.559 121.533 li108.855 121.892 li108.075 122.015 li107.296 121.892 li106.593 121.533 li106.034 120.975 li105.676 120.272 li105.553 119.492 li105.676 118.712 li106.034 118.009 li106.593 117.451 li107.296 117.092 li108.075 116.969 licp0 0 0 1 cmyk@105.706 162.982 mo106.485 163.105 li107.189 163.464 li107.747 164.022 li108.105 164.726 li108.23 165.505 li108.105 166.285 li107.747 166.988 li107.189 167.546 li106.485 167.905 li105.706 168.028 li104.927 167.905 li104.223 167.546 li103.665 166.988 li103.307 166.285 li103.183 165.505 li103.307 164.726 li103.665 164.022 li104.223 163.464 li104.927 163.105 li105.706 162.982 li0.0117648 0.960785 0.913726 0 cmykf105.706 162.982 mo106.485 163.105 li107.189 163.464 li107.747 164.022 li108.105 164.726 li108.23 165.505 li108.105 166.285 li107.747 166.988 li107.189 167.546 li106.485 167.905 li105.706 168.028 li104.927 167.905 li104.223 167.546 li103.665 166.988 li103.307 166.285 li103.183 165.505 li103.307 164.726 li103.665 164.022 li104.223 163.464 li104.927 163.105 li105.706 162.982 licp0 0 0 1 cmyk@58.6138 212.464 mo59.3931 212.588 li60.0962 212.945 li60.6548 213.504 li61.0132 214.207 li61.1363 214.987 li61.0132 215.767 li60.6548 216.471 li60.0962 217.028 li59.3931 217.387 li58.6138 217.51 li57.8335 217.387 li57.1304 217.028 li56.5718 216.471 li56.2134 215.767 li56.0904 214.987 li56.2134 214.207 li56.5718 213.504 li57.1304 212.945 li57.8335 212.588 li58.6138 212.464 li0.0117648 0.960785 0.913726 0 cmykf58.6138 212.464 mo59.3931 212.588 li60.0962 212.945 li60.6548 213.504 li61.0132 214.207 li61.1363 214.987 li61.0132 215.767 li60.6548 216.471 li60.0962 217.028 li59.3931 217.387 li58.6138 217.51 li57.8335 217.387 li57.1304 217.028 li56.5718 216.471 li56.2134 215.767 li56.0904 214.987 li56.2134 214.207 li56.5718 213.504 li57.1304 212.945 li57.8335 212.588 li58.6138 212.464 licp0 0 0 1 cmyk@124.837 224.013 mo125.616 224.137 li126.32 224.494 li126.878 225.053 li127.236 225.756 li127.36 226.536 li127.236 227.315 li126.878 228.02 li126.32 228.577 li125.616 228.936 li124.837 229.059 li124.058 228.936 li123.354 228.577 li122.796 228.02 li122.438 227.315 li122.313 226.536 li122.438 225.756 li122.796 225.053 li123.354 224.494 li124.058 224.137 li124.837 224.013 li0.0117648 0.960785 0.913726 0 cmykf124.837 224.013 mo125.616 224.137 li126.32 224.494 li126.878 225.053 li127.236 225.756 li127.36 226.536 li127.236 227.315 li126.878 228.02 li126.32 228.577 li125.616 228.936 li124.837 229.059 li124.058 228.936 li123.354 228.577 li122.796 228.02 li122.438 227.315 li122.313 226.536 li122.438 225.756 li122.796 225.053 li123.354 224.494 li124.058 224.137 li124.837 224.013 licp0 0 0 1 cmyk@187.504 114.516 mo188.283 114.639 li188.986 114.998 li189.545 115.556 li189.903 116.259 li190.026 117.039 li189.903 117.818 li189.545 118.522 li188.986 119.08 li188.283 119.438 li187.504 119.562 li186.724 119.438 li186.021 119.08 li185.462 118.522 li185.104 117.818 li184.98 117.039 li185.104 116.259 li185.462 115.556 li186.021 114.998 li186.724 114.639 li187.504 114.516 li0.0117648 0.960785 0.913726 0 cmykf187.504 114.516 mo188.283 114.639 li188.986 114.998 li189.545 115.556 li189.903 116.259 li190.026 117.039 li189.903 117.818 li189.545 118.522 li188.986 119.08 li188.283 119.438 li187.504 119.562 li186.724 119.438 li186.021 119.08 li185.462 118.522 li185.104 117.818 li184.98 117.039 li185.104 116.259 li185.462 115.556 li186.021 114.998 li186.724 114.639 li187.504 114.516 licp0 0 0 1 cmyk@208.187 184.687 mo208.966 184.811 li209.669 185.168 li210.228 185.727 li210.586 186.43 li210.71 187.209 li210.586 187.989 li210.228 188.693 li209.669 189.251 li208.966 189.609 li208.187 189.732 li207.406 189.609 li206.703 189.251 li206.146 188.693 li205.787 187.989 li205.663 187.209 li205.787 186.43 li206.146 185.727 li206.703 185.168 li207.406 184.811 li208.187 184.687 li0.0117648 0.960785 0.913726 0 cmykf208.187 184.687 mo208.966 184.811 li209.669 185.168 li210.228 185.727 li210.586 186.43 li210.71 187.209 li210.586 187.989 li210.228 188.693 li209.669 189.251 li208.966 189.609 li208.187 189.732 li207.406 189.609 li206.703 189.251 li206.146 188.693 li205.787 187.989 li205.663 187.209 li205.787 186.43 li206.146 185.727 li206.703 185.168 li207.406 184.811 li208.187 184.687 licp0 0 0 1 cmyk@114.303 162.341 mo115.082 162.464 li115.785 162.823 li116.344 163.381 li116.702 164.084 li116.825 164.864 li116.702 165.644 li116.344 166.347 li115.785 166.905 li115.082 167.264 li114.303 167.387 li113.522 167.264 li112.819 166.905 li112.261 166.347 li111.902 165.644 li111.779 164.864 li111.902 164.084 li112.261 163.381 li112.819 162.823 li113.522 162.464 li114.303 162.341 li0.0117648 0.960785 0.913726 0 cmykf114.303 162.341 mo115.082 162.464 li115.785 162.823 li116.344 163.381 li116.702 164.084 li116.825 164.864 li116.702 165.644 li116.344 166.347 li115.785 166.905 li115.082 167.264 li114.303 167.387 li113.522 167.264 li112.819 166.905 li112.261 166.347 li111.902 165.644 li111.779 164.864 li111.902 164.084 li112.261 163.381 li112.819 162.823 li113.522 162.464 li114.303 162.341 licp0 0 0 1 cmyk@222.616 212.863 mo223.396 212.986 li224.099 213.346 li224.657 213.903 li225.016 214.606 li225.139 215.387 li225.016 216.166 li224.657 216.869 li224.099 217.428 li223.396 217.786 li222.616 217.909 li221.836 217.786 li221.133 217.428 li220.574 216.869 li220.216 216.166 li220.093 215.387 li220.216 214.606 li220.574 213.903 li221.133 213.346 li221.836 212.986 li222.616 212.863 li0.0117648 0.960785 0.913726 0 cmykf222.616 212.863 mo223.396 212.986 li224.099 213.346 li224.657 213.903 li225.016 214.606 li225.139 215.387 li225.016 216.166 li224.657 216.869 li224.099 217.428 li223.396 217.786 li222.616 217.909 li221.836 217.786 li221.133 217.428 li220.574 216.869 li220.216 216.166 li220.093 215.387 li220.216 214.606 li220.574 213.903 li221.133 213.346 li221.836 212.986 li222.616 212.863 licp0 0 0 1 cmyk@124.123 190.949 mo124.902 191.073 li125.605 191.432 li126.164 191.99 li126.522 192.693 li126.646 193.473 li126.522 194.252 li126.164 194.956 li125.605 195.514 li124.902 195.873 li124.123 195.996 li123.343 195.873 li122.64 195.514 li122.081 194.956 li121.723 194.252 li121.6 193.473 li121.723 192.693 li122.081 191.99 li122.64 191.432 li123.343 191.073 li124.123 190.949 li0.0117648 0.960785 0.913726 0 cmykf124.123 190.949 mo124.902 191.073 li125.605 191.432 li126.164 191.99 li126.522 192.693 li126.646 193.473 li126.522 194.252 li126.164 194.956 li125.605 195.514 li124.902 195.873 li124.123 195.996 li123.343 195.873 li122.64 195.514 li122.081 194.956 li121.723 194.252 li121.6 193.473 li121.723 192.693 li122.081 191.99 li122.64 191.432 li123.343 191.073 li124.123 190.949 licp0 0 0 1 cmyk@139.628 54.1963 mo140.407 54.3199 li141.11 54.6783 li141.669 55.2364 li142.027 55.9395 li142.15 56.7193 li142.027 57.4991 li141.669 58.2022 li141.11 58.7603 li140.407 59.1187 li139.628 59.2422 li138.848 59.1187 li138.145 58.7603 li137.587 58.2022 li137.229 57.4991 li137.104 56.7193 li137.229 55.9395 li137.587 55.2364 li138.145 54.6783 li138.848 54.3199 li139.628 54.1963 li0.0117648 0.960785 0.913726 0 cmykf139.628 54.1963 mo140.407 54.3199 li141.11 54.6783 li141.669 55.2364 li142.027 55.9395 li142.15 56.7193 li142.027 57.4991 li141.669 58.2022 li141.11 58.7603 li140.407 59.1187 li139.628 59.2422 li138.848 59.1187 li138.145 58.7603 li137.587 58.2022 li137.229 57.4991 li137.104 56.7193 li137.229 55.9395 li137.587 55.2364 li138.145 54.6783 li138.848 54.3199 li139.628 54.1963 licp0 0 0 1 cmyk@52.7584 95.1905 mo53.5386 95.314 li54.2418 95.6724 li54.7994 96.2305 li55.1578 96.9341 li55.2818 97.7134 li55.1578 98.4932 li54.7994 99.1968 li54.2418 99.7549 li53.5386 100.114 li52.7584 100.237 li51.9791 100.114 li51.275 99.7549 li50.7173 99.1968 li50.3589 98.4932 li50.2349 97.7134 li50.3589 96.9341 li50.7173 96.2305 li51.275 95.6724 li51.9791 95.314 li52.7584 95.1905 li0.0117648 0.960785 0.913726 0 cmykf52.7584 95.1905 mo53.5386 95.314 li54.2418 95.6724 li54.7994 96.2305 li55.1578 96.9341 li55.2818 97.7134 li55.1578 98.4932 li54.7994 99.1968 li54.2418 99.7549 li53.5386 100.114 li52.7584 100.237 li51.9791 100.114 li51.275 99.7549 li50.7173 99.1968 li50.3589 98.4932 li50.2349 97.7134 li50.3589 96.9341 li50.7173 96.2305 li51.275 95.6724 li51.9791 95.314 li52.7584 95.1905 licp0 0 0 1 cmyk@61.0084 142.063 mo61.7886 142.187 li62.4918 142.545 li63.0503 143.104 li63.4087 143.807 li63.5318 144.586 li63.4087 145.366 li63.0503 146.069 li62.4918 146.628 li61.7886 146.986 li61.0084 147.109 li60.2291 146.986 li59.5259 146.628 li58.9673 146.069 li58.6089 145.366 li58.4859 144.586 li58.6089 143.807 li58.9673 143.104 li59.5259 142.545 li60.2291 142.187 li61.0084 142.063 li0.0117648 0.960785 0.913726 0 cmykf61.0084 142.063 mo61.7886 142.187 li62.4918 142.545 li63.0503 143.104 li63.4087 143.807 li63.5318 144.586 li63.4087 145.366 li63.0503 146.069 li62.4918 146.628 li61.7886 146.986 li61.0084 147.109 li60.2291 146.986 li59.5259 146.628 li58.9673 146.069 li58.6089 145.366 li58.4859 144.586 li58.6089 143.807 li58.9673 143.104 li59.5259 142.545 li60.2291 142.187 li61.0084 142.063 licp0 0 0 1 cmyk@135.195 171.333 mo135.976 171.456 li136.679 171.814 li137.237 172.373 li137.596 173.076 li137.719 173.855 li137.596 174.635 li137.237 175.339 li136.679 175.897 li135.976 176.255 li135.195 176.379 li134.416 176.255 li133.713 175.897 li133.154 175.339 li132.796 174.635 li132.673 173.855 li132.796 173.076 li133.154 172.373 li133.713 171.814 li134.416 171.456 li135.195 171.333 li0.0117648 0.960785 0.913726 0 cmykf135.195 171.333 mo135.976 171.456 li136.679 171.814 li137.237 172.373 li137.596 173.076 li137.719 173.855 li137.596 174.635 li137.237 175.339 li136.679 175.897 li135.976 176.255 li135.195 176.379 li134.416 176.255 li133.713 175.897 li133.154 175.339 li132.796 174.635 li132.673 173.855 li132.796 173.076 li133.154 172.373 li133.713 171.814 li134.416 171.456 li135.195 171.333 licp0 0 0 1 cmyk@123.04 144.366 mo123.819 144.489 li124.523 144.848 li125.081 145.406 li125.439 146.109 li125.563 146.889 li125.439 147.669 li125.081 148.372 li124.523 148.931 li123.819 149.289 li123.04 149.412 li122.261 149.289 li121.557 148.931 li120.999 148.372 li120.641 147.669 li120.517 146.889 li120.641 146.109 li120.999 145.406 li121.557 144.848 li122.261 144.489 li123.04 144.366 li0.0117648 0.960785 0.913726 0 cmykf123.04 144.366 mo123.819 144.489 li124.523 144.848 li125.081 145.406 li125.439 146.109 li125.563 146.889 li125.439 147.669 li125.081 148.372 li124.523 148.931 li123.819 149.289 li123.04 149.412 li122.261 149.289 li121.557 148.931 li120.999 148.372 li120.641 147.669 li120.517 146.889 li120.641 146.109 li120.999 145.406 li121.557 144.848 li122.261 144.489 li123.04 144.366 licp0 0 0 1 cmyk@91.0923 70.5367 mo91.0923 74.105 li87.524 74.105 li87.524 70.5367 li91.0923 70.5367 li0 0 0 0 cmykf91.0923 70.5367 mo91.0923 74.105 li87.524 74.105 li87.524 70.5367 li91.0923 70.5367 licp0 0 0 1 cmyk@121.331 120.975 mo126.377 126.021 li121.331 131.067 li116.285 126.021 li121.331 120.975 li0.956863 0.0431373 1 0.00784314 cmykf121.331 120.975 mo126.377 126.021 li121.331 131.067 li116.285 126.021 li121.331 120.975 licp0 0 0 1 cmyk@2 lc178.887 0.253418 mo181.969 0.280762 li185.05 0.361329 li188.129 0.495606 li191.204 0.684082 li194.277 0.925782 li197.345 1.2212 li200.406 1.56983 li203.462 1.97217 li206.51 2.42774 li209.55 2.93653 li212.58 3.49805 li215.6 4.11231 li218.608 4.7793 li221.605 5.49903 li224.589 6.27051 li227.559 7.09424 li230.514 7.96924 li233.453 8.896 li236.376 9.87403 li239.281 10.9029 li242.168 11.982 li245.035 13.1119 li247.882 14.2911 li250.708 15.5201 li253.513 16.7979 li256.295 18.1246 li259.053 19.4996 li261.786 20.9229 li264.495 22.3931 li267.177 23.9112 li269.832 25.4751 li272.46 27.0855 li275.06 28.7413 li277.629 30.4424 li280.169 32.188 li282.678 33.9776 li285.155 35.8106 li287.601 37.6871 li290.013 39.6055 li292.391 41.5655 li294.733 43.5669 li297.042 45.6094 li299.314 47.6915 li301.55 49.8126 li303.748 51.9727 li305.908 54.171 li308.029 56.4063 li310.111 58.6788 li312.153 60.9869 li314.155 63.3301 li316.115 65.7085 li318.034 68.1202 li319.91 70.565 li321.743 73.0425 li323.533 75.5518 li325.278 78.0914 li326.98 80.6612 li328.636 83.2608 li330.245 85.8882 li331.81 88.5435 li333.327 91.2261 li334.798 93.9346 li336.221 96.668 li337.596 99.4263 li338.923 102.208 li340.201 105.013 li341.43 107.839 li342.609 110.686 li343.738 113.554 li344.817 116.44 li345.847 119.345 li346.824 122.268 li347.751 125.207 li348.627 128.162 li349.45 131.132 li350.222 134.116 li350.941 137.112 li351.608 140.121 li352.223 143.141 li352.784 146.171 li353.293 149.211 li353.749 152.259 li354.15 155.314 li354.5 158.376 li354.795 161.444 li355.037 164.517 li355.225 167.593 li355.359 170.672 li355.44 173.752 li355.467 176.834 li355.44 179.916 li355.359 182.996 li355.225 186.076 li355.037 189.152 li354.795 192.225 li354.5 195.292 li354.15 198.354 li353.749 201.409 li353.293 204.457 li352.784 207.497 li352.223 210.527 li351.608 213.547 li350.941 216.557 li350.222 219.553 li349.45 222.537 li348.627 225.506 li347.751 228.461 li346.824 231.4 li345.847 234.323 li344.817 237.229 li343.738 240.115 li342.609 242.982 li341.43 245.83 li340.201 248.656 li338.923 251.46 li337.596 254.242 li336.221 257 li334.798 259.733 li333.327 262.441 li331.81 265.124 li330.245 267.779 li328.636 270.407 li326.98 273.006 li325.278 275.576 li323.533 278.116 li321.743 280.625 li319.91 283.103 li318.034 285.548 li316.115 287.959 li314.155 290.338 li312.153 292.682 li310.111 294.989 li308.029 297.262 li305.908 299.497 li303.748 301.695 li301.55 303.855 li299.314 305.977 li297.042 308.059 li294.733 310.101 li292.391 312.103 li290.013 314.062 li287.601 315.98 li285.155 317.857 li282.678 319.69 li280.169 321.48 li277.629 323.226 li275.06 324.927 li272.46 326.582 li269.832 328.193 li267.177 329.757 li264.495 331.274 li261.786 332.745 li259.053 334.168 li256.295 335.543 li253.513 336.87 li250.708 338.148 li247.882 339.377 li245.035 340.557 li242.168 341.686 li239.281 342.766 li236.376 343.794 li233.453 344.772 li230.514 345.698 li227.559 346.574 li224.589 347.397 li221.605 348.169 li218.608 348.889 li215.6 349.556 li212.58 350.17 li209.55 350.731 li206.51 351.24 li203.462 351.695 li200.406 352.098 li197.345 352.447 li194.277 352.742 li191.204 352.984 li188.129 353.172 li185.05 353.307 li181.969 353.388 li178.887 353.414 li175.806 353.388 li172.725 353.307 li169.646 353.172 li166.569 352.984 li163.497 352.742 li160.43 352.447 li157.367 352.098 li154.312 351.695 li151.264 351.24 li148.225 350.731 li145.194 350.17 li142.174 349.556 li139.165 348.889 li136.169 348.169 li133.185 347.397 li130.215 346.574 li127.26 345.698 li124.321 344.772 li121.398 343.794 li118.493 342.766 li115.606 341.686 li112.739 340.557 li109.892 339.377 li107.065 338.148 li104.262 336.87 li101.48 335.543 li98.7212 334.168 li95.9878 332.745 li93.2789 331.274 li90.5972 329.757 li87.941 328.193 li85.314 326.582 li82.7144 324.927 li80.1441 323.226 li77.605 321.48 li75.0953 319.69 li72.6187 317.857 li70.1734 315.98 li67.7613 314.062 li65.3834 312.103 li63.0396 310.101 li60.732 308.059 li58.4595 305.977 li56.2242 303.855 li54.0259 301.695 li51.8658 299.497 li49.7447 297.262 li47.6626 294.989 li45.6197 292.682 li43.6187 290.338 li41.6587 287.959 li39.7398 285.548 li37.8638 283.103 li36.0308 280.625 li34.2408 278.116 li32.4957 275.576 li30.7945 273.006 li29.1382 270.407 li27.5279 267.779 li25.9644 265.124 li24.4468 262.441 li22.9761 259.733 li21.5533 257 li20.1773 254.242 li18.8511 251.46 li17.5728 248.656 li16.3443 245.83 li15.1646 242.982 li14.0347 240.115 li12.9556 237.229 li11.9273 234.323 li10.9488 231.4 li10.022 228.461 li9.14698 225.506 li8.32374 222.537 li7.55225 219.553 li6.83252 216.557 li6.16553 213.547 li5.55127 210.527 li4.98975 207.497 li4.48096 204.457 li4.02491 201.409 li3.62256 198.354 li3.27393 195.292 li2.97901 192.225 li2.73682 189.152 li2.54834 186.076 li2.41456 182.996 li2.3335 179.916 li2.30713 176.834 li2.3335 173.752 li2.41456 170.672 li2.54834 167.593 li2.73682 164.517 li2.97901 161.444 li3.27393 158.376 li3.62256 155.314 li4.02491 152.259 li4.48096 149.211 li4.98975 146.171 li5.55127 143.141 li6.16553 140.121 li6.83252 137.112 li7.55225 134.116 li8.32374 131.132 li9.14698 128.162 li10.022 125.207 li10.9488 122.268 li11.9273 119.345 li12.9556 116.44 li14.0347 113.554 li15.1646 110.686 li16.3443 107.839 li17.5728 105.013 li18.8511 102.208 li20.1773 99.4263 li21.5533 96.668 li22.9761 93.9346 li24.4468 91.2261 li25.9644 88.5435 li27.5279 85.8882 li29.1382 83.2608 li30.7945 80.6612 li32.4957 78.0914 li34.2408 75.5518 li36.0308 73.0425 li37.8638 70.565 li39.7398 68.1202 li41.6587 65.7085 li43.6187 63.3301 li45.6197 60.9869 li47.6626 58.6788 li49.7447 56.4063 li51.8658 54.171 li54.0259 51.9727 li56.2242 49.8126 li58.4595 47.6915 li60.732 45.6094 li63.0396 43.5669 li65.3834 41.5655 li67.7613 39.6055 li70.1734 37.6871 li72.6187 35.8106 li75.0953 33.9776 li77.605 32.188 li80.1441 30.4424 li82.7144 28.7413 li85.314 27.0855 li87.941 25.4751 li90.5972 23.9112 li93.2789 22.3931 li95.9878 20.9229 li98.7212 19.4996 li101.48 18.1246 li104.262 16.7979 li107.065 15.5201 li109.892 14.2911 li112.739 13.1119 li115.606 11.982 li118.493 10.9029 li121.398 9.87403 li124.321 8.896 li127.26 7.96924 li130.215 7.09424 li133.185 6.27051 li136.169 5.49903 li139.165 4.7793 li142.174 4.11231 li145.194 3.49805 li148.225 2.93653 li151.264 2.42774 li154.312 1.97217 li157.367 1.56983 li160.43 1.2212 li163.497 0.925782 li166.569 0.684082 li169.646 0.495606 li172.725 0.361329 li175.806 0.280762 li178.887 0.253418 li@178.887 0.253418 mo178.887 1.80127 li178.887 3.36231 li178.887 4.93653 li@209.55 2.93653 mo209.281 4.46045 li209.01 5.99756 li208.736 7.54786 li@239.281 10.9029 mo238.752 12.357 li238.218 13.8238 li237.68 15.3033 li@267.177 23.9112 mo266.403 25.2515 li265.623 26.6031 li264.836 27.9664 li@292.391 41.5655 mo291.396 42.751 li290.393 43.9468 li289.38 45.1529 li@314.155 63.3301 mo312.97 64.3252 li311.773 65.3287 li310.567 66.3404 li@331.81 88.5435 mo330.47 89.3174 li329.117 90.0982 li327.754 90.8853 li@344.817 116.44 mo343.363 116.97 li341.896 117.503 li340.417 118.042 li@352.784 146.171 mo351.26 146.44 li349.723 146.711 li348.173 146.984 li@355.467 176.834 mo353.919 176.834 li352.358 176.834 li350.784 176.834 li@352.784 207.497 mo351.26 207.229 li349.723 206.957 li348.173 206.684 li@344.817 237.229 mo343.363 236.699 li341.896 236.165 li340.417 235.627 li@331.81 265.124 mo330.47 264.351 li329.117 263.57 li327.754 262.783 li@314.155 290.338 mo312.97 289.343 li311.773 288.34 li310.567 287.328 li@292.391 312.103 mo291.396 310.917 li290.393 309.721 li289.38 308.516 li@267.177 329.757 mo266.403 328.416 li265.623 327.064 li264.836 325.701 li@239.281 342.766 mo238.752 341.311 li238.218 339.844 li237.68 338.365 li@209.55 350.731 mo209.281 349.207 li209.01 347.67 li208.736 346.12 li@178.887 353.414 mo178.887 351.866 li178.887 350.306 li178.887 348.731 li@148.225 350.731 mo148.493 349.207 li148.764 347.67 li149.037 346.12 li@118.493 342.766 mo119.022 341.311 li119.557 339.844 li120.095 338.365 li@90.5972 329.757 mo91.3707 328.416 li92.1509 327.064 li92.938 325.701 li@65.3834 312.103 mo66.3785 310.917 li67.3814 309.721 li68.3931 308.516 li@43.6187 290.338 mo44.8042 289.343 li45.9996 288.34 li47.2056 287.328 li@25.9644 265.124 mo27.3042 264.351 li28.6558 263.57 li30.0191 262.783 li@12.9556 237.229 mo14.4097 236.699 li15.8765 236.165 li17.356 235.627 li@4.98975 207.497 mo6.51319 207.229 li8.0503 206.957 li9.60108 206.684 li@2.30713 176.834 mo3.85401 176.834 li5.41553 176.834 li6.98975 176.834 li@4.98975 146.171 mo6.51319 146.44 li8.0503 146.711 li9.60108 146.984 li@12.9556 116.44 mo14.4097 116.97 li15.8765 117.503 li17.356 118.042 li@25.9644 88.5435 mo27.3042 89.3174 li28.6558 90.0982 li30.0191 90.8853 li@43.6187 63.3301 mo44.8042 64.3252 li45.9996 65.3287 li47.2056 66.3404 li@65.3834 41.5655 mo66.3785 42.751 li67.3814 43.9468 li68.3931 45.1529 li@90.5972 23.9112 mo91.3707 25.2515 li92.1509 26.6031 li92.938 27.9664 li@118.493 10.9029 mo119.022 12.357 li119.557 13.8238 li120.095 15.3033 li@148.225 2.93653 mo148.493 4.46045 li148.764 5.99756 li149.037 7.54786 li@136.437 110.168 mo135.499 109.348 li134.504 108.594 li133.456 107.908 li132.359 107.293 li131.217 106.754 li130.034 106.291 li128.814 105.908 li127.563 105.605 li126.287 105.387 li124.988 105.251 li123.674 105.202 li122.35 105.237 li121.02 105.359 li119.69 105.566 li118.367 105.859 li117.056 106.236 li115.761 106.696 li114.489 107.238 li113.247 107.858 li112.037 108.555 li110.867 109.326 li109.74 110.168 li108.663 111.077 li107.64 112.049 li106.674 113.081 li105.77 114.167 li104.932 115.303 li104.163 116.485 li103.468 117.707 li102.848 118.964 li102.306 120.25 li101.845 121.561 li101.465 122.89 li101.169 124.23 li100.958 125.579 li100.831 126.928 li100.79 128.273 li100.834 129.608 li100.963 130.927 li101.175 132.225 li101.47 133.496 li101.846 134.736 li102.301 135.94 li102.832 137.103 li103.438 138.219 li104.115 139.286 li104.86 140.298 li105.671 141.253 li106.543 142.146 li107.473 142.975 li108.456 143.736 li109.488 144.427 li110.566 145.045 li111.686 145.589 li112.842 146.057 li114.028 146.447 li115.243 146.758 li116.48 146.989 li117.734 147.141 li119.001 147.212 li120.276 147.202 li121.555 147.113 li122.832 146.944 li124.103 146.697 li125.361 146.373 li126.605 145.973 li127.83 145.499 li129.029 144.952 li130.2 144.335 li131.337 143.651 li132.438 142.902 li133.497 142.091 li134.511 141.221 li135.477 140.294 li136.39 139.316 li137.248 138.288 li138.048 137.215 li138.785 136.101 li139.459 134.949 li140.066 133.765 li140.604 132.551 li141.07 131.313 li141.464 130.055 li141.782 128.782 li142.025 127.498 li142.191 126.208 li142.279 124.916 li142.288 123.628 li142.218 122.349 li142.069 121.082 li141.842 119.834 li141.536 118.607 li141.153 117.409 li140.694 116.243 li140.16 115.113 li139.553 114.024 li138.874 112.981 li138.127 111.988 li137.313 111.049 li136.437 110.168 li0.956863 0.0431373 1 0.00784314 cmyk@0 0 0 1 cmyk%ADOBeginSubsetFont: ArialMT Initial%ADOt1write: (1.0.21)%%Copyright: Copyright 2007 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /ArialMT def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 124 /bar putdef/FontBBox {-222 -210 1000 913} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7C8A936AA182F5809A9> |-/bar <1C60D8A8C9B8666CCB25BEB289081819C9BDF408FDEEDA> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont/BHMHAO+ArialMT /ArialMT findfont def/BHMHAO+ArialMT*1 [124{/.notdef}repeat /bar 131{/.notdef}repeat] BHMHAO+ArialMT nfntBHMHAO+ArialMT*1  [12 0 -0 -12 0 0 ]mfnt sfnt354.966 182.834 mov(|) sh338.905 182.834 mov(|) sh321.621 182.834 mov(|) sh303.248 182.834 mov(|) sh283.923 182.834 mov(|) sh263.796 182.834 mov(|) sh243.019 182.834 mov(|) sh221.75 182.834 mov(|) sh200.151 182.834 mov(|) sh178.386 182.834 mov(|) sh617.008 124.338 mo617.787 124.461 li618.49 124.819 li619.049 125.378 li619.407 126.081 li619.53 126.861 li619.407 127.641 li619.049 128.344 li618.49 128.902 li617.787 129.261 li617.008 129.384 li616.228 129.261 li615.524 128.902 li614.966 128.344 li614.607 127.641 li614.484 126.861 li614.607 126.081 li614.966 125.378 li615.524 124.819 li616.228 124.461 li617.008 124.338 li0.0117648 0.960785 0.913726 0 cmykf0 lc617.008 124.338 mo617.787 124.461 li618.49 124.819 li619.049 125.378 li619.407 126.081 li619.53 126.861 li619.407 127.641 li619.049 128.344 li618.49 128.902 li617.787 129.261 li617.008 129.384 li616.228 129.261 li615.524 128.902 li614.966 128.344 li614.607 127.641 li614.484 126.861 li614.607 126.081 li614.966 125.378 li615.524 124.819 li616.228 124.461 li617.008 124.338 licp0 0 0 1 cmyk@594.309 167.115 mo595.088 167.238 li595.791 167.597 li596.35 168.155 li596.708 168.858 li596.832 169.638 li596.708 170.418 li596.35 171.121 li595.791 171.679 li595.088 172.038 li594.309 172.161 li593.528 172.038 li592.825 171.679 li592.268 171.121 li591.909 170.418 li591.785 169.638 li591.909 168.858 li592.268 168.155 li592.825 167.597 li593.528 167.238 li594.309 167.115 li0.0117648 0.960785 0.913726 0 cmykf594.309 167.115 mo595.088 167.238 li595.791 167.597 li596.35 168.155 li596.708 168.858 li596.832 169.638 li596.708 170.418 li596.35 171.121 li595.791 171.679 li595.088 172.038 li594.309 172.161 li593.528 172.038 li592.825 171.679 li592.268 171.121 li591.909 170.418 li591.785 169.638 li591.909 168.858 li592.268 168.155 li592.825 167.597 li593.528 167.238 li594.309 167.115 licp0 0 0 1 cmyk@583.304 126.158 mo584.083 126.281 li584.787 126.64 li585.345 127.198 li585.703 127.901 li585.827 128.681 li585.703 129.46 li585.345 130.164 li584.787 130.722 li584.083 131.081 li583.304 131.204 li582.523 131.081 li581.82 130.722 li581.263 130.164 li580.904 129.46 li580.78 128.681 li580.904 127.901 li581.263 127.198 li581.82 126.64 li582.523 126.281 li583.304 126.158 li0.0117648 0.960785 0.913726 0 cmykf583.304 126.158 mo584.083 126.281 li584.787 126.64 li585.345 127.198 li585.703 127.901 li585.827 128.681 li585.703 129.46 li585.345 130.164 li584.787 130.722 li584.083 131.081 li583.304 131.204 li582.523 131.081 li581.82 130.722 li581.263 130.164 li580.904 129.46 li580.78 128.681 li580.904 127.901 li581.263 127.198 li581.82 126.64 li582.523 126.281 li583.304 126.158 licp0 0 0 1 cmyk@593.843 137.244 mo594.622 137.368 li595.325 137.726 li595.884 138.284 li596.242 138.987 li596.365 139.767 li596.242 140.547 li595.884 141.25 li595.325 141.809 li594.622 142.167 li593.843 142.291 li593.062 142.167 li592.359 141.809 li591.802 141.25 li591.443 140.547 li591.319 139.767 li591.443 138.987 li591.802 138.284 li592.359 137.726 li593.062 137.368 li593.843 137.244 li0.0117648 0.960785 0.913726 0 cmykf593.843 137.244 mo594.622 137.368 li595.325 137.726 li595.884 138.284 li596.242 138.987 li596.365 139.767 li596.242 140.547 li595.884 141.25 li595.325 141.809 li594.622 142.167 li593.843 142.291 li593.062 142.167 li592.359 141.809 li591.802 141.25 li591.443 140.547 li591.319 139.767 li591.443 138.987 li591.802 138.284 li592.359 137.726 li593.062 137.368 li593.843 137.244 licp0 0 0 1 cmyk@573.291 122.097 mo574.071 122.221 li574.774 122.579 li575.333 123.137 li575.691 123.841 li575.814 124.621 li575.691 125.4 li575.333 126.104 li574.774 126.662 li574.071 127.02 li573.291 127.144 li572.512 127.02 li571.809 126.662 li571.25 126.104 li570.892 125.4 li570.769 124.621 li570.892 123.841 li571.25 123.137 li571.809 122.579 li572.512 122.221 li573.291 122.097 li0.0117648 0.960785 0.913726 0 cmykf573.291 122.097 mo574.071 122.221 li574.774 122.579 li575.333 123.137 li575.691 123.841 li575.814 124.621 li575.691 125.4 li575.333 126.104 li574.774 126.662 li574.071 127.02 li573.291 127.144 li572.512 127.02 li571.809 126.662 li571.25 126.104 li570.892 125.4 li570.769 124.621 li570.892 123.841 li571.25 123.137 li571.809 122.579 li572.512 122.221 li573.291 122.097 licp0 0 0 1 cmyk@600.646 122.176 mo601.425 122.299 li602.128 122.658 li602.687 123.216 li603.045 123.919 li603.168 124.699 li603.045 125.479 li602.687 126.182 li602.128 126.74 li601.425 127.099 li600.646 127.222 li599.865 127.099 li599.162 126.74 li598.604 126.182 li598.245 125.479 li598.122 124.699 li598.245 123.919 li598.604 123.216 li599.162 122.658 li599.865 122.299 li600.646 122.176 li0.0117648 0.960785 0.913726 0 cmykf600.646 122.176 mo601.425 122.299 li602.128 122.658 li602.687 123.216 li603.045 123.919 li603.168 124.699 li603.045 125.479 li602.687 126.182 li602.128 126.74 li601.425 127.099 li600.646 127.222 li599.865 127.099 li599.162 126.74 li598.604 126.182 li598.245 125.479 li598.122 124.699 li598.245 123.919 li598.604 123.216 li599.162 122.658 li599.865 122.299 li600.646 122.176 licp0 0 0 1 cmyk@570.023 154.296 mo570.803 154.419 li571.506 154.778 li572.064 155.336 li572.423 156.04 li572.546 156.819 li572.423 157.599 li572.064 158.302 li571.506 158.86 li570.803 159.219 li570.023 159.342 li569.243 159.219 li568.54 158.86 li567.981 158.302 li567.623 157.599 li567.5 156.819 li567.623 156.04 li567.981 155.336 li568.54 154.778 li569.243 154.419 li570.023 154.296 li0.0117648 0.960785 0.913726 0 cmykf570.023 154.296 mo570.803 154.419 li571.506 154.778 li572.064 155.336 li572.423 156.04 li572.546 156.819 li572.423 157.599 li572.064 158.302 li571.506 158.86 li570.803 159.219 li570.023 159.342 li569.243 159.219 li568.54 158.86 li567.981 158.302 li567.623 157.599 li567.5 156.819 li567.623 156.04 li567.981 155.336 li568.54 154.778 li569.243 154.419 li570.023 154.296 licp0 0 0 1 cmyk@584.087 164.849 mo584.867 164.973 li585.57 165.331 li586.128 165.889 li586.486 166.593 li586.61 167.373 li586.486 168.152 li586.128 168.855 li585.57 169.414 li584.867 169.772 li584.087 169.896 li583.308 169.772 li582.604 169.414 li582.046 168.855 li581.688 168.152 li581.564 167.373 li581.688 166.593 li582.046 165.889 li582.604 165.331 li583.308 164.973 li584.087 164.849 li0.0117648 0.960785 0.913726 0 cmykf584.087 164.849 mo584.867 164.973 li585.57 165.331 li586.128 165.889 li586.486 166.593 li586.61 167.373 li586.486 168.152 li586.128 168.855 li585.57 169.414 li584.867 169.772 li584.087 169.896 li583.308 169.772 li582.604 169.414 li582.046 168.855 li581.688 168.152 li581.564 167.373 li581.688 166.593 li582.046 165.889 li582.604 165.331 li583.308 164.973 li584.087 164.849 licp0 0 0 1 cmyk@576.899 158.57 mo577.679 158.693 li578.383 159.052 li578.94 159.61 li579.299 160.313 li579.423 161.093 li579.299 161.873 li578.94 162.576 li578.383 163.134 li577.679 163.493 li576.899 163.616 li576.119 163.493 li575.416 163.134 li574.858 162.576 li574.5 161.873 li574.376 161.093 li574.5 160.313 li574.858 159.61 li575.416 159.052 li576.119 158.693 li576.899 158.57 li0.0117648 0.960785 0.913726 0 cmykf576.899 158.57 mo577.679 158.693 li578.383 159.052 li578.94 159.61 li579.299 160.313 li579.423 161.093 li579.299 161.873 li578.94 162.576 li578.383 163.134 li577.679 163.493 li576.899 163.616 li576.119 163.493 li575.416 163.134 li574.858 162.576 li574.5 161.873 li574.376 161.093 li574.5 160.313 li574.858 159.61 li575.416 159.052 li576.119 158.693 li576.899 158.57 licp0 0 0 1 cmyk@610.734 136.413 mo611.514 136.536 li612.217 136.895 li612.775 137.453 li613.134 138.156 li613.258 138.936 li613.134 139.715 li612.775 140.419 li612.217 140.977 li611.514 141.335 li610.734 141.459 li609.954 141.335 li609.251 140.977 li608.693 140.419 li608.335 139.715 li608.211 138.936 li608.335 138.156 li608.693 137.453 li609.251 136.895 li609.954 136.536 li610.734 136.413 li0.0117648 0.960785 0.913726 0 cmykf610.734 136.413 mo611.514 136.536 li612.217 136.895 li612.775 137.453 li613.134 138.156 li613.258 138.936 li613.134 139.715 li612.775 140.419 li612.217 140.977 li611.514 141.335 li610.734 141.459 li609.954 141.335 li609.251 140.977 li608.693 140.419 li608.335 139.715 li608.211 138.936 li608.335 138.156 li608.693 137.453 li609.251 136.895 li609.954 136.536 li610.734 136.413 licp0 0 0 1 cmyk@598.963 128.472 mo599.743 128.596 li600.446 128.954 li601.004 129.512 li601.362 130.215 li601.486 130.995 li601.362 131.775 li601.004 132.478 li600.446 133.036 li599.743 133.395 li598.963 133.518 li598.184 133.395 li597.48 133.036 li596.922 132.478 li596.564 131.775 li596.439 130.995 li596.564 130.215 li596.922 129.512 li597.48 128.954 li598.184 128.596 li598.963 128.472 li0.0117648 0.960785 0.913726 0 cmykf598.963 128.472 mo599.743 128.596 li600.446 128.954 li601.004 129.512 li601.362 130.215 li601.486 130.995 li601.362 131.775 li601.004 132.478 li600.446 133.036 li599.743 133.395 li598.963 133.518 li598.184 133.395 li597.48 133.036 li596.922 132.478 li596.564 131.775 li596.439 130.995 li596.564 130.215 li596.922 129.512 li597.48 128.954 li598.184 128.596 li598.963 128.472 licp0 0 0 1 cmyk@578.522 138.678 mo579.302 138.802 li580.006 139.16 li580.564 139.718 li580.922 140.422 li581.046 141.201 li580.922 141.981 li580.564 142.685 li580.006 143.243 li579.302 143.601 li578.522 143.725 li577.743 143.601 li577.039 143.243 li576.481 142.685 li576.123 141.981 li575.999 141.201 li576.123 140.422 li576.481 139.718 li577.039 139.16 li577.743 138.802 li578.522 138.678 li0.0117648 0.960785 0.913726 0 cmykf578.522 138.678 mo579.302 138.802 li580.006 139.16 li580.564 139.718 li580.922 140.422 li581.046 141.201 li580.922 141.981 li580.564 142.685 li580.006 143.243 li579.302 143.601 li578.522 143.725 li577.743 143.601 li577.039 143.243 li576.481 142.685 li576.123 141.981 li575.999 141.201 li576.123 140.422 li576.481 139.718 li577.039 139.16 li577.743 138.802 li578.522 138.678 licp0 0 0 1 cmyk@593.574 154.483 mo594.354 154.606 li595.058 154.965 li595.616 155.523 li595.975 156.226 li596.098 157.006 li595.975 157.786 li595.616 158.489 li595.058 159.047 li594.354 159.405 li593.574 159.529 li592.795 159.405 li592.092 159.047 li591.533 158.489 li591.175 157.786 li591.052 157.006 li591.175 156.226 li591.533 155.523 li592.092 154.965 li592.795 154.606 li593.574 154.483 li0.0117648 0.960785 0.913726 0 cmykf593.574 154.483 mo594.354 154.606 li595.058 154.965 li595.616 155.523 li595.975 156.226 li596.098 157.006 li595.975 157.786 li595.616 158.489 li595.058 159.047 li594.354 159.405 li593.574 159.529 li592.795 159.405 li592.092 159.047 li591.533 158.489 li591.175 157.786 li591.052 157.006 li591.175 156.226 li591.533 155.523 li592.092 154.965 li592.795 154.606 li593.574 154.483 licp0 0 0 1 cmyk@602.723 144.908 mo603.502 145.031 li604.205 145.39 li604.764 145.948 li605.122 146.651 li605.245 147.431 li605.122 148.211 li604.764 148.914 li604.205 149.472 li603.502 149.831 li602.723 149.954 li601.942 149.831 li601.239 149.472 li600.681 148.914 li600.322 148.211 li600.199 147.431 li600.322 146.651 li600.681 145.948 li601.239 145.39 li601.942 145.031 li602.723 144.908 li0.0117648 0.960785 0.913726 0 cmykf602.723 144.908 mo603.502 145.031 li604.205 145.39 li604.764 145.948 li605.122 146.651 li605.245 147.431 li605.122 148.211 li604.764 148.914 li604.205 149.472 li603.502 149.831 li602.723 149.954 li601.942 149.831 li601.239 149.472 li600.681 148.914 li600.322 148.211 li600.199 147.431 li600.322 146.651 li600.681 145.948 li601.239 145.39 li601.942 145.031 li602.723 144.908 licp0 0 0 1 cmyk@621.809 163.34 mo622.588 163.463 li623.291 163.822 li623.85 164.38 li624.208 165.083 li624.331 165.863 li624.208 166.643 li623.85 167.346 li623.291 167.904 li622.588 168.263 li621.809 168.386 li621.028 168.263 li620.325 167.904 li619.767 167.346 li619.408 166.643 li619.285 165.863 li619.408 165.083 li619.767 164.38 li620.325 163.822 li621.028 163.463 li621.809 163.34 li0.0117648 0.960785 0.913726 0 cmykf621.809 163.34 mo622.588 163.463 li623.291 163.822 li623.85 164.38 li624.208 165.083 li624.331 165.863 li624.208 166.643 li623.85 167.346 li623.291 167.904 li622.588 168.263 li621.809 168.386 li621.028 168.263 li620.325 167.904 li619.767 167.346 li619.408 166.643 li619.285 165.863 li619.408 165.083 li619.767 164.38 li620.325 163.822 li621.028 163.463 li621.809 163.34 licp0 0 0 1 cmyk@568.806 132.279 mo569.586 132.403 li570.289 132.761 li570.848 133.319 li571.206 134.023 li571.329 134.803 li571.206 135.582 li570.848 136.286 li570.289 136.844 li569.586 137.202 li568.806 137.326 li568.026 137.202 li567.323 136.844 li566.765 136.286 li566.406 135.582 li566.283 134.803 li566.406 134.023 li566.765 133.319 li567.323 132.761 li568.026 132.403 li568.806 132.279 li0.0117648 0.960785 0.913726 0 cmykf568.806 132.279 mo569.586 132.403 li570.289 132.761 li570.848 133.319 li571.206 134.023 li571.329 134.803 li571.206 135.582 li570.848 136.286 li570.289 136.844 li569.586 137.202 li568.806 137.326 li568.026 137.202 li567.323 136.844 li566.765 136.286 li566.406 135.582 li566.283 134.803 li566.406 134.023 li566.765 133.319 li567.323 132.761 li568.026 132.403 li568.806 132.279 licp0 0 0 1 cmyk@580.472 163.013 mo581.251 163.137 li581.955 163.495 li582.513 164.053 li582.871 164.757 li582.995 165.536 li582.871 166.316 li582.513 167.02 li581.955 167.578 li581.251 167.936 li580.472 168.06 li579.692 167.936 li578.988 167.578 li578.431 167.02 li578.072 166.316 li577.948 165.536 li578.072 164.757 li578.431 164.053 li578.988 163.495 li579.692 163.137 li580.472 163.013 li0.0117648 0.960785 0.913726 0 cmykf580.472 163.013 mo581.251 163.137 li581.955 163.495 li582.513 164.053 li582.871 164.757 li582.995 165.536 li582.871 166.316 li582.513 167.02 li581.955 167.578 li581.251 167.936 li580.472 168.06 li579.692 167.936 li578.988 167.578 li578.431 167.02 li578.072 166.316 li577.948 165.536 li578.072 164.757 li578.431 164.053 li578.988 163.495 li579.692 163.137 li580.472 163.013 licp0 0 0 1 cmyk@594.239 147.803 mo595.02 147.926 li595.723 148.285 li596.281 148.843 li596.64 149.546 li596.763 150.326 li596.64 151.105 li596.281 151.809 li595.723 152.367 li595.02 152.726 li594.239 152.849 li593.46 152.726 li592.757 152.367 li592.198 151.809 li591.84 151.105 li591.717 150.326 li591.84 149.546 li592.198 148.843 li592.757 148.285 li593.46 147.926 li594.239 147.803 li0.0117648 0.960785 0.913726 0 cmykf594.239 147.803 mo595.02 147.926 li595.723 148.285 li596.281 148.843 li596.64 149.546 li596.763 150.326 li596.64 151.105 li596.281 151.809 li595.723 152.367 li595.02 152.726 li594.239 152.849 li593.46 152.726 li592.757 152.367 li592.198 151.809 li591.84 151.105 li591.717 150.326 li591.84 149.546 li592.198 148.843 li592.757 148.285 li593.46 147.926 li594.239 147.803 licp0 0 0 1 cmyk@576.68 148.118 mo577.459 148.241 li578.162 148.6 li578.721 149.158 li579.079 149.861 li579.202 150.641 li579.079 151.42 li578.721 152.124 li578.162 152.682 li577.459 153.04 li576.68 153.164 li575.899 153.04 li575.196 152.682 li574.638 152.124 li574.279 151.42 li574.156 150.641 li574.279 149.861 li574.638 149.158 li575.196 148.6 li575.899 148.241 li576.68 148.118 li0.0117648 0.960785 0.913726 0 cmykf576.68 148.118 mo577.459 148.241 li578.162 148.6 li578.721 149.158 li579.079 149.861 li579.202 150.641 li579.079 151.42 li578.721 152.124 li578.162 152.682 li577.459 153.04 li576.68 153.164 li575.899 153.04 li575.196 152.682 li574.638 152.124 li574.279 151.42 li574.156 150.641 li574.279 149.861 li574.638 149.158 li575.196 148.6 li575.899 148.241 li576.68 148.118 licp0 0 0 1 cmyk@607.785 165.539 mo608.565 165.662 li609.269 166.021 li609.827 166.579 li610.186 167.282 li610.309 168.062 li610.186 168.841 li609.827 169.544 li609.269 170.103 li608.565 170.461 li607.785 170.584 li607.006 170.461 li606.303 170.103 li605.744 169.544 li605.386 168.841 li605.263 168.062 li605.386 167.282 li605.744 166.579 li606.303 166.021 li607.006 165.662 li607.785 165.539 li0.0117648 0.960785 0.913726 0 cmykf607.785 165.539 mo608.565 165.662 li609.269 166.021 li609.827 166.579 li610.186 167.282 li610.309 168.062 li610.186 168.841 li609.827 169.544 li609.269 170.103 li608.565 170.461 li607.785 170.584 li607.006 170.461 li606.303 170.103 li605.744 169.544 li605.386 168.841 li605.263 168.062 li605.386 167.282 li605.744 166.579 li606.303 166.021 li607.006 165.662 li607.785 165.539 licp0 0 0 1 cmyk@577.854 114.761 mo578.635 114.885 li579.338 115.243 li579.896 115.801 li580.254 116.505 li580.378 117.284 li580.254 118.064 li579.896 118.768 li579.338 119.326 li578.635 119.684 li577.854 119.808 li577.075 119.684 li576.372 119.326 li575.814 118.768 li575.455 118.064 li575.332 117.284 li575.455 116.505 li575.814 115.801 li576.372 115.243 li577.075 114.885 li577.854 114.761 li0.0117648 0.960785 0.913726 0 cmykf577.854 114.761 mo578.635 114.885 li579.338 115.243 li579.896 115.801 li580.254 116.505 li580.378 117.284 li580.254 118.064 li579.896 118.768 li579.338 119.326 li578.635 119.684 li577.854 119.808 li577.075 119.684 li576.372 119.326 li575.814 118.768 li575.455 118.064 li575.332 117.284 li575.455 116.505 li575.814 115.801 li576.372 115.243 li577.075 114.885 li577.854 114.761 licp0 0 0 1 cmyk@613.314 141.873 mo614.093 141.996 li614.796 142.354 li615.354 142.913 li615.713 143.616 li615.836 144.396 li615.713 145.175 li615.354 145.879 li614.796 146.437 li614.093 146.795 li613.314 146.919 li612.533 146.795 li611.83 146.437 li611.272 145.879 li610.913 145.175 li610.79 144.396 li610.913 143.616 li611.272 142.913 li611.83 142.354 li612.533 141.996 li613.314 141.873 li0.0117648 0.960785 0.913726 0 cmykf613.314 141.873 mo614.093 141.996 li614.796 142.354 li615.354 142.913 li615.713 143.616 li615.836 144.396 li615.713 145.175 li615.354 145.879 li614.796 146.437 li614.093 146.795 li613.314 146.919 li612.533 146.795 li611.83 146.437 li611.272 145.879 li610.913 145.175 li610.79 144.396 li610.913 143.616 li611.272 142.913 li611.83 142.354 li612.533 141.996 li613.314 141.873 licp0 0 0 1 cmyk@610.916 117.35 mo611.696 117.473 li612.399 117.832 li612.958 118.39 li613.316 119.093 li613.439 119.873 li613.316 120.652 li612.958 121.356 li612.399 121.914 li611.696 122.272 li610.916 122.396 li610.137 122.272 li609.434 121.914 li608.875 121.356 li608.517 120.652 li608.394 119.873 li608.517 119.093 li608.875 118.39 li609.434 117.832 li610.137 117.473 li610.916 117.35 li0.0117648 0.960785 0.913726 0 cmykf610.916 117.35 mo611.696 117.473 li612.399 117.832 li612.958 118.39 li613.316 119.093 li613.439 119.873 li613.316 120.652 li612.958 121.356 li612.399 121.914 li611.696 122.272 li610.916 122.396 li610.137 122.272 li609.434 121.914 li608.875 121.356 li608.517 120.652 li608.394 119.873 li608.517 119.093 li608.875 118.39 li609.434 117.832 li610.137 117.473 li610.916 117.35 licp0 0 0 1 cmyk@585.89 103.341 mo586.669 103.464 li587.372 103.823 li587.931 104.381 li588.289 105.084 li588.412 105.864 li588.289 106.644 li587.931 107.347 li587.372 107.905 li586.669 108.264 li585.89 108.387 li585.109 108.264 li584.406 107.905 li583.848 107.347 li583.489 106.644 li583.366 105.864 li583.489 105.084 li583.848 104.381 li584.406 103.823 li585.109 103.464 li585.89 103.341 li0.0117648 0.960785 0.913726 0 cmykf585.89 103.341 mo586.669 103.464 li587.372 103.823 li587.931 104.381 li588.289 105.084 li588.412 105.864 li588.289 106.644 li587.931 107.347 li587.372 107.905 li586.669 108.264 li585.89 108.387 li585.109 108.264 li584.406 107.905 li583.848 107.347 li583.489 106.644 li583.366 105.864 li583.489 105.084 li583.848 104.381 li584.406 103.823 li585.109 103.464 li585.89 103.341 licp0 0 0 1 cmyk@576.797 149.678 mo577.576 149.802 li578.279 150.16 li578.838 150.718 li579.196 151.422 li579.32 152.202 li579.196 152.981 li578.838 153.685 li578.279 154.243 li577.576 154.601 li576.797 154.725 li576.017 154.601 li575.314 154.243 li574.756 153.685 li574.398 152.981 li574.273 152.202 li574.398 151.422 li574.756 150.718 li575.314 150.16 li576.017 149.802 li576.797 149.678 li0.0117648 0.960785 0.913726 0 cmykf576.797 149.678 mo577.576 149.802 li578.279 150.16 li578.838 150.718 li579.196 151.422 li579.32 152.202 li579.196 152.981 li578.838 153.685 li578.279 154.243 li577.576 154.601 li576.797 154.725 li576.017 154.601 li575.314 154.243 li574.756 153.685 li574.398 152.981 li574.273 152.202 li574.398 151.422 li574.756 150.718 li575.314 150.16 li576.017 149.802 li576.797 149.678 licp0 0 0 1 cmyk@588.273 135.058 mo589.054 135.181 li589.757 135.54 li590.315 136.098 li590.674 136.801 li590.797 137.581 li590.674 138.36 li590.315 139.064 li589.757 139.622 li589.054 139.98 li588.273 140.104 li587.494 139.98 li586.791 139.622 li586.232 139.064 li585.874 138.36 li585.751 137.581 li585.874 136.801 li586.232 136.098 li586.791 135.54 li587.494 135.181 li588.273 135.058 li0.0117648 0.960785 0.913726 0 cmykf588.273 135.058 mo589.054 135.181 li589.757 135.54 li590.315 136.098 li590.674 136.801 li590.797 137.581 li590.674 138.36 li590.315 139.064 li589.757 139.622 li589.054 139.98 li588.273 140.104 li587.494 139.98 li586.791 139.622 li586.232 139.064 li585.874 138.36 li585.751 137.581 li585.874 136.801 li586.232 136.098 li586.791 135.54 li587.494 135.181 li588.273 135.058 licp0 0 0 1 cmyk@601.967 138.775 mo602.746 138.898 li603.449 139.257 li604.008 139.815 li604.366 140.519 li604.489 141.298 li604.366 142.078 li604.008 142.781 li603.449 143.339 li602.746 143.698 li601.967 143.821 li601.187 143.698 li600.483 143.339 li599.925 142.781 li599.566 142.078 li599.443 141.298 li599.566 140.519 li599.925 139.815 li600.483 139.257 li601.187 138.898 li601.967 138.775 li0.0117648 0.960785 0.913726 0 cmykf601.967 138.775 mo602.746 138.898 li603.449 139.257 li604.008 139.815 li604.366 140.519 li604.489 141.298 li604.366 142.078 li604.008 142.781 li603.449 143.339 li602.746 143.698 li601.967 143.821 li601.187 143.698 li600.483 143.339 li599.925 142.781 li599.566 142.078 li599.443 141.298 li599.566 140.519 li599.925 139.815 li600.483 139.257 li601.187 138.898 li601.967 138.775 licp0 0 0 1 cmyk@603.338 144.73 mo604.118 144.854 li604.821 145.212 li605.38 145.771 li605.738 146.474 li605.861 147.254 li605.738 148.033 li605.38 148.737 li604.821 149.295 li604.118 149.653 li603.338 149.777 li602.559 149.653 li601.856 149.295 li601.297 148.737 li600.938 148.033 li600.815 147.254 li600.938 146.474 li601.297 145.771 li601.856 145.212 li602.559 144.854 li603.338 144.73 li0.0117648 0.960785 0.913726 0 cmykf603.338 144.73 mo604.118 144.854 li604.821 145.212 li605.38 145.771 li605.738 146.474 li605.861 147.254 li605.738 148.033 li605.38 148.737 li604.821 149.295 li604.118 149.653 li603.338 149.777 li602.559 149.653 li601.856 149.295 li601.297 148.737 li600.938 148.033 li600.815 147.254 li600.938 146.474 li601.297 145.771 li601.856 145.212 li602.559 144.854 li603.338 144.73 licp0 0 0 1 cmyk@580.705 136.042 mo581.485 136.166 li582.188 136.524 li582.747 137.083 li583.106 137.786 li583.228 138.565 li583.106 139.345 li582.747 140.049 li582.188 140.607 li581.485 140.965 li580.705 141.089 li579.926 140.965 li579.223 140.607 li578.664 140.049 li578.306 139.345 li578.183 138.565 li578.306 137.786 li578.664 137.083 li579.223 136.524 li579.926 136.166 li580.705 136.042 li0.0117648 0.960785 0.913726 0 cmykf580.705 136.042 mo581.485 136.166 li582.188 136.524 li582.747 137.083 li583.106 137.786 li583.228 138.565 li583.106 139.345 li582.747 140.049 li582.188 140.607 li581.485 140.965 li580.705 141.089 li579.926 140.965 li579.223 140.607 li578.664 140.049 li578.306 139.345 li578.183 138.565 li578.306 137.786 li578.664 137.083 li579.223 136.524 li579.926 136.166 li580.705 136.042 licp0 0 0 1 cmyk@591.133 155.263 mo591.912 155.386 li592.616 155.745 li593.174 156.303 li593.532 157.006 li593.656 157.786 li593.532 158.565 li593.174 159.269 li592.616 159.827 li591.912 160.186 li591.133 160.309 li590.353 160.186 li589.649 159.827 li589.092 159.269 li588.733 158.565 li588.609 157.786 li588.733 157.006 li589.092 156.303 li589.649 155.745 li590.353 155.386 li591.133 155.263 li0.0117648 0.960785 0.913726 0 cmykf591.133 155.263 mo591.912 155.386 li592.616 155.745 li593.174 156.303 li593.532 157.006 li593.656 157.786 li593.532 158.565 li593.174 159.269 li592.616 159.827 li591.912 160.186 li591.133 160.309 li590.353 160.186 li589.649 159.827 li589.092 159.269 li588.733 158.565 li588.609 157.786 li588.733 157.006 li589.092 156.303 li589.649 155.745 li590.353 155.386 li591.133 155.263 licp0 0 0 1 cmyk@592.284 123.166 mo593.064 123.29 li593.768 123.648 li594.326 124.206 li594.685 124.91 li594.808 125.689 li594.685 126.469 li594.326 127.172 li593.768 127.73 li593.064 128.089 li592.284 128.212 li591.505 128.089 li590.802 127.73 li590.243 127.172 li589.885 126.469 li589.762 125.689 li589.885 124.91 li590.243 124.206 li590.802 123.648 li591.505 123.29 li592.284 123.166 li0.0117648 0.960785 0.913726 0 cmykf592.284 123.166 mo593.064 123.29 li593.768 123.648 li594.326 124.206 li594.685 124.91 li594.808 125.689 li594.685 126.469 li594.326 127.172 li593.768 127.73 li593.064 128.089 li592.284 128.212 li591.505 128.089 li590.802 127.73 li590.243 127.172 li589.885 126.469 li589.762 125.689 li589.885 124.91 li590.243 124.206 li590.802 123.648 li591.505 123.29 li592.284 123.166 licp0 0 0 1 cmyk@627.653 136.25 mo628.433 136.374 li629.137 136.732 li629.694 137.29 li630.053 137.994 li630.177 138.773 li630.053 139.553 li629.694 140.256 li629.137 140.814 li628.433 141.173 li627.653 141.296 li626.874 141.173 li626.17 140.814 li625.612 140.256 li625.254 139.553 li625.13 138.773 li625.254 137.994 li625.612 137.29 li626.17 136.732 li626.874 136.374 li627.653 136.25 li0.0117648 0.960785 0.913726 0 cmykf627.653 136.25 mo628.433 136.374 li629.137 136.732 li629.694 137.29 li630.053 137.994 li630.177 138.773 li630.053 139.553 li629.694 140.256 li629.137 140.814 li628.433 141.173 li627.653 141.296 li626.874 141.173 li626.17 140.814 li625.612 140.256 li625.254 139.553 li625.13 138.773 li625.254 137.994 li625.612 137.29 li626.17 136.732 li626.874 136.374 li627.653 136.25 licp0 0 0 1 cmyk@623.643 139.24 mo624.422 139.363 li625.126 139.722 li625.684 140.28 li626.042 140.983 li626.166 141.763 li626.042 142.543 li625.684 143.246 li625.126 143.805 li624.422 144.163 li623.643 144.286 li622.863 144.163 li622.159 143.805 li621.602 143.246 li621.243 142.543 li621.119 141.763 li621.243 140.983 li621.602 140.28 li622.159 139.722 li622.863 139.363 li623.643 139.24 li0.0117648 0.960785 0.913726 0 cmykf623.643 139.24 mo624.422 139.363 li625.126 139.722 li625.684 140.28 li626.042 140.983 li626.166 141.763 li626.042 142.543 li625.684 143.246 li625.126 143.805 li624.422 144.163 li623.643 144.286 li622.863 144.163 li622.159 143.805 li621.602 143.246 li621.243 142.543 li621.119 141.763 li621.243 140.983 li621.602 140.28 li622.159 139.722 li622.863 139.363 li623.643 139.24 licp0 0 0 1 cmyk@595.967 149.851 mo596.746 149.974 li597.449 150.333 li598.008 150.891 li598.366 151.594 li598.489 152.374 li598.366 153.153 li598.008 153.856 li597.449 154.415 li596.746 154.773 li595.967 154.897 li595.187 154.773 li594.483 154.415 li593.925 153.856 li593.566 153.153 li593.443 152.374 li593.566 151.594 li593.925 150.891 li594.483 150.333 li595.187 149.974 li595.967 149.851 li0.0117648 0.960785 0.913726 0 cmykf595.967 149.851 mo596.746 149.974 li597.449 150.333 li598.008 150.891 li598.366 151.594 li598.489 152.374 li598.366 153.153 li598.008 153.856 li597.449 154.415 li596.746 154.773 li595.967 154.897 li595.187 154.773 li594.483 154.415 li593.925 153.856 li593.566 153.153 li593.443 152.374 li593.566 151.594 li593.925 150.891 li594.483 150.333 li595.187 149.974 li595.967 149.851 licp0 0 0 1 cmyk@576.918 134.643 mo577.698 134.766 li578.401 135.124 li578.959 135.683 li579.317 136.386 li579.441 137.166 li579.317 137.945 li578.959 138.648 li578.401 139.207 li577.698 139.565 li576.918 139.688 li576.139 139.565 li575.436 139.207 li574.877 138.648 li574.519 137.945 li574.395 137.166 li574.519 136.386 li574.877 135.683 li575.436 135.124 li576.139 134.766 li576.918 134.643 li0.0117648 0.960785 0.913726 0 cmykf576.918 134.643 mo577.698 134.766 li578.401 135.124 li578.959 135.683 li579.317 136.386 li579.441 137.166 li579.317 137.945 li578.959 138.648 li578.401 139.207 li577.698 139.565 li576.918 139.688 li576.139 139.565 li575.436 139.207 li574.877 138.648 li574.519 137.945 li574.395 137.166 li574.519 136.386 li574.877 135.683 li575.436 135.124 li576.139 134.766 li576.918 134.643 licp0 0 0 1 cmyk@634.657 168.113 mo635.438 168.236 li636.141 168.595 li636.698 169.153 li637.057 169.856 li637.181 170.636 li637.057 171.416 li636.698 172.119 li636.141 172.677 li635.438 173.036 li634.657 173.159 li633.878 173.036 li633.175 172.677 li632.616 172.119 li632.258 171.416 li632.135 170.636 li632.258 169.856 li632.616 169.153 li633.175 168.595 li633.878 168.236 li634.657 168.113 li0.0117648 0.960785 0.913726 0 cmykf634.657 168.113 mo635.438 168.236 li636.141 168.595 li636.698 169.153 li637.057 169.856 li637.181 170.636 li637.057 171.416 li636.698 172.119 li636.141 172.677 li635.438 173.036 li634.657 173.159 li633.878 173.036 li633.175 172.677 li632.616 172.119 li632.258 171.416 li632.135 170.636 li632.258 169.856 li632.616 169.153 li633.175 168.595 li633.878 168.236 li634.657 168.113 licp0 0 0 1 cmyk@594.327 133.062 mo595.106 133.185 li595.81 133.543 li596.368 134.102 li596.727 134.805 li596.85 135.584 li596.727 136.364 li596.368 137.067 li595.81 137.626 li595.106 137.984 li594.327 138.107 li593.547 137.984 li592.844 137.626 li592.285 137.067 li591.927 136.364 li591.804 135.584 li591.927 134.805 li592.285 134.102 li592.844 133.543 li593.547 133.185 li594.327 133.062 li0.0117648 0.960785 0.913726 0 cmykf594.327 133.062 mo595.106 133.185 li595.81 133.543 li596.368 134.102 li596.727 134.805 li596.85 135.584 li596.727 136.364 li596.368 137.067 li595.81 137.626 li595.106 137.984 li594.327 138.107 li593.547 137.984 li592.844 137.626 li592.285 137.067 li591.927 136.364 li591.804 135.584 li591.927 134.805 li592.285 134.102 li592.844 133.543 li593.547 133.185 li594.327 133.062 licp0 0 0 1 cmyk@595.936 136.535 mo596.715 136.658 li597.419 137.017 li597.977 137.575 li598.335 138.278 li598.459 139.058 li598.335 139.837 li597.977 140.541 li597.419 141.099 li596.715 141.458 li595.936 141.581 li595.156 141.458 li594.452 141.099 li593.895 140.541 li593.536 139.837 li593.412 139.058 li593.536 138.278 li593.895 137.575 li594.452 137.017 li595.156 136.658 li595.936 136.535 li0.0117648 0.960785 0.913726 0 cmykf595.936 136.535 mo596.715 136.658 li597.419 137.017 li597.977 137.575 li598.335 138.278 li598.459 139.058 li598.335 139.837 li597.977 140.541 li597.419 141.099 li596.715 141.458 li595.936 141.581 li595.156 141.458 li594.452 141.099 li593.895 140.541 li593.536 139.837 li593.412 139.058 li593.536 138.278 li593.895 137.575 li594.452 137.017 li595.156 136.658 li595.936 136.535 licp0 0 0 1 cmyk@561.124 131.092 mo561.904 131.216 li562.607 131.574 li563.165 132.132 li563.523 132.836 li563.648 133.615 li563.523 134.395 li563.165 135.099 li562.607 135.657 li561.904 136.015 li561.124 136.139 li560.345 136.015 li559.642 135.657 li559.083 135.099 li558.725 134.395 li558.602 133.615 li558.725 132.836 li559.083 132.132 li559.642 131.574 li560.345 131.216 li561.124 131.092 li0.0117648 0.960785 0.913726 0 cmykf561.124 131.092 mo561.904 131.216 li562.607 131.574 li563.165 132.132 li563.523 132.836 li563.648 133.615 li563.523 134.395 li563.165 135.099 li562.607 135.657 li561.904 136.015 li561.124 136.139 li560.345 136.015 li559.642 135.657 li559.083 135.099 li558.725 134.395 li558.602 133.615 li558.725 132.836 li559.083 132.132 li559.642 131.574 li560.345 131.216 li561.124 131.092 licp0 0 0 1 cmyk@569.069 144.561 mo569.85 144.684 li570.553 145.042 li571.111 145.601 li571.47 146.304 li571.593 147.084 li571.47 147.863 li571.111 148.567 li570.553 149.125 li569.85 149.483 li569.069 149.607 li568.29 149.483 li567.587 149.125 li567.028 148.567 li566.67 147.863 li566.547 147.084 li566.67 146.304 li567.028 145.601 li567.587 145.042 li568.29 144.684 li569.069 144.561 li0.0117648 0.960785 0.913726 0 cmykf569.069 144.561 mo569.85 144.684 li570.553 145.042 li571.111 145.601 li571.47 146.304 li571.593 147.084 li571.47 147.863 li571.111 148.567 li570.553 149.125 li569.85 149.483 li569.069 149.607 li568.29 149.483 li567.587 149.125 li567.028 148.567 li566.67 147.863 li566.547 147.084 li566.67 146.304 li567.028 145.601 li567.587 145.042 li568.29 144.684 li569.069 144.561 licp0 0 0 1 cmyk@583.851 156.708 mo584.63 156.831 li585.333 157.189 li585.892 157.748 li586.25 158.451 li586.373 159.23 li586.25 160.01 li585.892 160.714 li585.333 161.272 li584.63 161.63 li583.851 161.754 li583.07 161.63 li582.367 161.272 li581.809 160.714 li581.45 160.01 li581.327 159.23 li581.45 158.451 li581.809 157.748 li582.367 157.189 li583.07 156.831 li583.851 156.708 li0.0117648 0.960785 0.913726 0 cmykf583.851 156.708 mo584.63 156.831 li585.333 157.189 li585.892 157.748 li586.25 158.451 li586.373 159.23 li586.25 160.01 li585.892 160.714 li585.333 161.272 li584.63 161.63 li583.851 161.754 li583.07 161.63 li582.367 161.272 li581.809 160.714 li581.45 160.01 li581.327 159.23 li581.45 158.451 li581.809 157.748 li582.367 157.189 li583.07 156.831 li583.851 156.708 licp0 0 0 1 cmyk@581.791 153.05 mo582.571 153.173 li583.274 153.532 li583.832 154.09 li584.19 154.793 li584.314 155.573 li584.19 156.353 li583.832 157.056 li583.274 157.614 li582.571 157.973 li581.791 158.096 li581.012 157.973 li580.309 157.614 li579.75 157.056 li579.392 156.353 li579.269 155.573 li579.392 154.793 li579.75 154.09 li580.309 153.532 li581.012 153.173 li581.791 153.05 li0.0117648 0.960785 0.913726 0 cmykf581.791 153.05 mo582.571 153.173 li583.274 153.532 li583.832 154.09 li584.19 154.793 li584.314 155.573 li584.19 156.353 li583.832 157.056 li583.274 157.614 li582.571 157.973 li581.791 158.096 li581.012 157.973 li580.309 157.614 li579.75 157.056 li579.392 156.353 li579.269 155.573 li579.392 154.793 li579.75 154.09 li580.309 153.532 li581.012 153.173 li581.791 153.05 licp0 0 0 1 cmyk@592.525 178.234 mo593.305 178.358 li594.008 178.716 li594.566 179.274 li594.925 179.978 li595.048 180.757 li594.925 181.537 li594.566 182.241 li594.008 182.799 li593.305 183.157 li592.525 183.28 li591.745 183.157 li591.042 182.799 li590.484 182.241 li590.126 181.537 li590.002 180.757 li590.126 179.978 li590.484 179.274 li591.042 178.716 li591.745 178.358 li592.525 178.234 li0.0117648 0.960785 0.913726 0 cmykf592.525 178.234 mo593.305 178.358 li594.008 178.716 li594.566 179.274 li594.925 179.978 li595.048 180.757 li594.925 181.537 li594.566 182.241 li594.008 182.799 li593.305 183.157 li592.525 183.28 li591.745 183.157 li591.042 182.799 li590.484 182.241 li590.126 181.537 li590.002 180.757 li590.126 179.978 li590.484 179.274 li591.042 178.716 li591.745 178.358 li592.525 178.234 licp0 0 0 1 cmyk@581.833 146.028 mo582.612 146.151 li583.315 146.51 li583.874 147.068 li584.232 147.772 li584.356 148.551 li584.232 149.331 li583.874 150.034 li583.315 150.592 li582.612 150.951 li581.833 151.074 li581.053 150.951 li580.35 150.592 li579.791 150.034 li579.433 149.331 li579.31 148.551 li579.433 147.772 li579.791 147.068 li580.35 146.51 li581.053 146.151 li581.833 146.028 li0.0117648 0.960785 0.913726 0 cmykf581.833 146.028 mo582.612 146.151 li583.315 146.51 li583.874 147.068 li584.232 147.772 li584.356 148.551 li584.232 149.331 li583.874 150.034 li583.315 150.592 li582.612 150.951 li581.833 151.074 li581.053 150.951 li580.35 150.592 li579.791 150.034 li579.433 149.331 li579.31 148.551 li579.433 147.772 li579.791 147.068 li580.35 146.51 li581.053 146.151 li581.833 146.028 licp0 0 0 1 cmyk@585.052 151.417 mo585.831 151.54 li586.534 151.898 li587.093 152.457 li587.451 153.16 li587.574 153.94 li587.451 154.72 li587.093 155.423 li586.534 155.981 li585.831 156.339 li585.052 156.463 li584.272 156.339 li583.568 155.981 li583.01 155.423 li582.651 154.72 li582.528 153.94 li582.651 153.16 li583.01 152.457 li583.568 151.898 li584.272 151.54 li585.052 151.417 li0.0117648 0.960785 0.913726 0 cmykf585.052 151.417 mo585.831 151.54 li586.534 151.898 li587.093 152.457 li587.451 153.16 li587.574 153.94 li587.451 154.72 li587.093 155.423 li586.534 155.981 li585.831 156.339 li585.052 156.463 li584.272 156.339 li583.568 155.981 li583.01 155.423 li582.651 154.72 li582.528 153.94 li582.651 153.16 li583.01 152.457 li583.568 151.898 li584.272 151.54 li585.052 151.417 licp0 0 0 1 cmyk@627.281 105.697 mo628.062 105.821 li628.765 106.179 li629.322 106.737 li629.682 107.44 li629.805 108.22 li629.682 109 li629.322 109.703 li628.765 110.262 li628.062 110.62 li627.281 110.743 li626.502 110.62 li625.799 110.262 li625.24 109.703 li624.882 109 li624.759 108.22 li624.882 107.44 li625.24 106.737 li625.799 106.179 li626.502 105.821 li627.281 105.697 li0.0117648 0.960785 0.913726 0 cmykf627.281 105.697 mo628.062 105.821 li628.765 106.179 li629.322 106.737 li629.682 107.44 li629.805 108.22 li629.682 109 li629.322 109.703 li628.765 110.262 li628.062 110.62 li627.281 110.743 li626.502 110.62 li625.799 110.262 li625.24 109.703 li624.882 109 li624.759 108.22 li624.882 107.44 li625.24 106.737 li625.799 106.179 li626.502 105.821 li627.281 105.697 licp0 0 0 1 cmyk@593.744 122.54 mo594.524 122.664 li595.228 123.022 li595.786 123.58 li596.145 124.283 li596.268 125.063 li596.145 125.843 li595.786 126.546 li595.228 127.104 li594.524 127.463 li593.744 127.586 li592.965 127.463 li592.262 127.104 li591.703 126.546 li591.345 125.843 li591.222 125.063 li591.345 124.283 li591.703 123.58 li592.262 123.022 li592.965 122.664 li593.744 122.54 li0.0117648 0.960785 0.913726 0 cmykf593.744 122.54 mo594.524 122.664 li595.228 123.022 li595.786 123.58 li596.145 124.283 li596.268 125.063 li596.145 125.843 li595.786 126.546 li595.228 127.104 li594.524 127.463 li593.744 127.586 li592.965 127.463 li592.262 127.104 li591.703 126.546 li591.345 125.843 li591.222 125.063 li591.345 124.283 li591.703 123.58 li592.262 123.022 li592.965 122.664 li593.744 122.54 licp0 0 0 1 cmyk@605.533 125.692 mo606.312 125.816 li607.016 126.174 li607.574 126.732 li607.933 127.436 li608.056 128.215 li607.933 128.995 li607.574 129.698 li607.016 130.257 li606.312 130.615 li605.533 130.738 li604.753 130.615 li604.05 130.257 li603.492 129.698 li603.134 128.995 li603.01 128.215 li603.134 127.436 li603.492 126.732 li604.05 126.174 li604.753 125.816 li605.533 125.692 li0.0117648 0.960785 0.913726 0 cmykf605.533 125.692 mo606.312 125.816 li607.016 126.174 li607.574 126.732 li607.933 127.436 li608.056 128.215 li607.933 128.995 li607.574 129.698 li607.016 130.257 li606.312 130.615 li605.533 130.738 li604.753 130.615 li604.05 130.257 li603.492 129.698 li603.134 128.995 li603.01 128.215 li603.134 127.436 li603.492 126.732 li604.05 126.174 li604.753 125.816 li605.533 125.692 licp0 0 0 1 cmyk@608.246 113.745 mo609.025 113.869 li609.728 114.227 li610.287 114.785 li610.646 115.489 li610.769 116.269 li610.646 117.048 li610.287 117.751 li609.728 118.31 li609.025 118.668 li608.246 118.792 li607.466 118.668 li606.763 118.31 li606.204 117.751 li605.846 117.048 li605.723 116.269 li605.846 115.489 li606.204 114.785 li606.763 114.227 li607.466 113.869 li608.246 113.745 li0.0117648 0.960785 0.913726 0 cmykf608.246 113.745 mo609.025 113.869 li609.728 114.227 li610.287 114.785 li610.646 115.489 li610.769 116.269 li610.646 117.048 li610.287 117.751 li609.728 118.31 li609.025 118.668 li608.246 118.792 li607.466 118.668 li606.763 118.31 li606.204 117.751 li605.846 117.048 li605.723 116.269 li605.846 115.489 li606.204 114.785 li606.763 114.227 li607.466 113.869 li608.246 113.745 licp0 0 0 1 cmyk@611.861 141.237 mo612.642 141.361 li613.345 141.719 li613.903 142.277 li614.262 142.98 li614.385 143.76 li614.262 144.54 li613.903 145.243 li613.345 145.802 li612.642 146.16 li611.861 146.283 li611.082 146.16 li610.379 145.802 li609.82 145.243 li609.462 144.54 li609.339 143.76 li609.462 142.98 li609.82 142.277 li610.379 141.719 li611.082 141.361 li611.861 141.237 li0.0117648 0.960785 0.913726 0 cmykf611.861 141.237 mo612.642 141.361 li613.345 141.719 li613.903 142.277 li614.262 142.98 li614.385 143.76 li614.262 144.54 li613.903 145.243 li613.345 145.802 li612.642 146.16 li611.861 146.283 li611.082 146.16 li610.379 145.802 li609.82 145.243 li609.462 144.54 li609.339 143.76 li609.462 142.98 li609.82 142.277 li610.379 141.719 li611.082 141.361 li611.861 141.237 licp0 0 0 1 cmyk@594.442 137.736 mo599.489 142.782 li594.442 147.828 li589.396 142.782 li594.442 137.736 li0.956863 0.0431373 1 0.00784314 cmykf594.442 137.736 mo599.489 142.782 li594.442 147.828 li589.396 142.782 li594.442 137.736 licp0 0 0 1 cmyk@2 lc543.751 0.252442 mo546.833 0.279786 li549.913 0.360352 li552.992 0.494629 li556.068 0.683106 li559.141 0.924805 li562.208 1.22022 li565.27 1.56885 li568.326 1.9712 li571.374 2.42676 li574.413 2.93555 li577.443 3.49708 li580.464 4.11133 li583.473 4.77833 li586.47 5.49805 li589.453 6.26954 li592.423 7.09327 li595.378 7.96827 li598.317 8.89502 li601.239 9.87305 li604.145 10.9019 li607.031 11.981 li609.898 13.1109 li612.746 14.2901 li615.572 15.5191 li618.377 16.7969 li621.158 18.1236 li623.916 19.4986 li626.65 20.9219 li629.358 22.3921 li632.041 23.9102 li634.696 25.4742 li637.324 27.0845 li639.923 28.7403 li642.493 30.4415 li645.033 32.1871 li647.542 33.9766 li650.02 35.8096 li652.464 37.6861 li654.876 39.6045 li657.254 41.5645 li659.598 43.566 li661.906 45.6084 li664.178 47.6905 li666.414 49.8116 li668.611 51.9717 li670.772 54.17 li672.894 56.4053 li674.976 58.6778 li677.018 60.9859 li679.019 63.3292 li680.98 65.7076 li682.898 68.1192 li684.773 70.564 li686.607 73.0416 li688.396 75.5508 li690.143 78.0904 li691.843 80.6602 li693.499 83.2598 li695.109 85.8873 li696.674 88.5425 li698.191 91.2252 li699.662 93.9336 li701.085 96.667 li702.46 99.4253 li703.787 102.207 li705.064 105.012 li706.294 107.838 li707.473 110.685 li708.603 113.553 li709.682 116.439 li710.711 119.344 li711.688 122.267 li712.615 125.206 li713.49 128.161 li714.314 131.131 li715.086 134.115 li715.805 137.111 li716.472 140.12 li717.087 143.14 li717.648 146.17 li718.156 149.21 li718.612 152.258 li719.015 155.313 li719.363 158.376 li719.659 161.443 li719.9 164.516 li720.089 167.592 li720.224 170.671 li720.304 173.751 li720.331 176.833 li720.304 179.915 li720.224 182.995 li720.089 186.075 li719.9 189.151 li719.659 192.224 li719.363 195.291 li719.015 198.353 li718.612 201.408 li718.156 204.456 li717.648 207.496 li717.087 210.526 li716.472 213.546 li715.805 216.556 li715.086 219.552 li714.314 222.536 li713.49 225.505 li712.615 228.46 li711.688 231.399 li710.711 234.322 li709.682 237.228 li708.603 240.114 li707.473 242.981 li706.294 245.829 li705.064 248.655 li703.787 251.459 li702.46 254.241 li701.085 256.999 li699.662 259.732 li698.191 262.44 li696.674 265.123 li695.109 267.778 li693.499 270.406 li691.843 273.005 li690.143 275.575 li688.396 278.115 li686.607 280.624 li684.773 283.102 li682.898 285.547 li680.98 287.958 li679.019 290.337 li677.018 292.681 li674.976 294.988 li672.894 297.261 li670.772 299.496 li668.611 301.694 li666.414 303.854 li664.178 305.976 li661.906 308.058 li659.598 310.1 li657.254 312.102 li654.876 314.062 li652.464 315.98 li650.02 317.856 li647.542 319.689 li645.033 321.48 li642.493 323.225 li639.923 324.926 li637.324 326.581 li634.696 328.192 li632.041 329.756 li629.358 331.273 li626.65 332.744 li623.916 334.167 li621.158 335.542 li618.377 336.869 li615.572 338.147 li612.746 339.376 li609.898 340.556 li607.031 341.685 li604.145 342.765 li601.239 343.792 li598.317 344.772 li595.378 345.697 li592.423 346.574 li589.453 347.396 li586.47 348.168 li583.473 348.889 li580.464 349.555 li577.443 350.17 li574.413 350.73 li571.374 351.24 li568.326 351.695 li565.27 352.098 li562.208 352.447 li559.141 352.742 li556.068 352.984 li552.992 353.172 li549.913 353.307 li546.833 353.387 li543.751 353.414 li540.669 353.387 li537.589 353.307 li534.51 353.172 li531.434 352.984 li528.361 352.742 li525.293 352.447 li522.231 352.098 li519.176 351.695 li516.128 351.24 li513.088 350.73 li510.058 350.17 li507.038 349.555 li504.029 348.889 li501.032 348.168 li498.049 347.396 li495.079 346.574 li492.124 345.697 li489.185 344.772 li486.262 343.792 li483.357 342.765 li480.471 341.685 li477.603 340.556 li474.756 339.376 li471.93 338.147 li469.125 336.869 li466.344 335.542 li463.585 334.167 li460.852 332.744 li458.144 331.273 li455.461 329.756 li452.806 328.192 li450.178 326.581 li447.579 324.926 li445.009 323.225 li442.469 321.48 li439.96 319.689 li437.482 317.856 li435.037 315.98 li432.626 314.062 li430.247 312.102 li427.904 310.1 li425.596 308.058 li423.323 305.976 li421.088 303.854 li418.89 301.694 li416.73 299.496 li414.608 297.261 li412.526 294.988 li410.484 292.681 li408.482 290.337 li406.522 287.958 li404.604 285.547 li402.728 283.102 li400.895 280.624 li399.105 278.115 li397.359 275.575 li395.658 273.005 li394.003 270.406 li392.393 267.778 li390.828 265.123 li389.311 262.44 li387.84 259.732 li386.417 256.999 li385.042 254.241 li383.715 251.459 li382.438 248.655 li381.208 245.829 li380.029 242.981 li378.899 240.114 li377.82 237.228 li376.791 234.322 li375.814 231.399 li374.887 228.46 li374.012 225.505 li373.188 222.536 li372.416 219.552 li371.696 216.556 li371.029 213.546 li370.415 210.526 li369.854 207.496 li369.345 204.456 li368.89 201.408 li368.487 198.353 li368.139 195.291 li367.843 192.224 li367.602 189.151 li367.413 186.075 li367.278 182.995 li367.198 179.915 li367.171 176.833 li367.198 173.751 li367.278 170.671 li367.413 167.592 li367.602 164.516 li367.843 161.443 li368.139 158.376 li368.487 155.313 li368.89 152.258 li369.345 149.21 li369.854 146.17 li370.415 143.14 li371.029 140.12 li371.696 137.111 li372.416 134.115 li373.188 131.131 li374.012 128.161 li374.887 125.206 li375.814 122.267 li376.791 119.344 li377.82 116.439 li378.899 113.553 li380.029 110.685 li381.208 107.838 li382.438 105.012 li383.715 102.207 li385.042 99.4253 li386.417 96.667 li387.84 93.9336 li389.311 91.2252 li390.828 88.5425 li392.393 85.8873 li394.003 83.2598 li395.658 80.6602 li397.359 78.0904 li399.105 75.5508 li400.895 73.0416 li402.728 70.564 li404.604 68.1192 li406.522 65.7076 li408.482 63.3292 li410.484 60.9859 li412.526 58.6778 li414.608 56.4053 li416.73 54.17 li418.89 51.9717 li421.088 49.8116 li423.323 47.6905 li425.596 45.6084 li427.904 43.566 li430.247 41.5645 li432.626 39.6045 li435.037 37.6861 li437.482 35.8096 li439.96 33.9766 li442.469 32.1871 li445.009 30.4415 li447.579 28.7403 li450.178 27.0845 li452.806 25.4742 li455.461 23.9102 li458.144 22.3921 li460.852 20.9219 li463.585 19.4986 li466.344 18.1236 li469.125 16.7969 li471.93 15.5191 li474.756 14.2901 li477.603 13.1109 li480.471 11.981 li483.357 10.9019 li486.262 9.87305 li489.185 8.89502 li492.124 7.96827 li495.079 7.09327 li498.049 6.26954 li501.032 5.49805 li504.029 4.77833 li507.038 4.11133 li510.058 3.49708 li513.088 2.93555 li516.128 2.42676 li519.176 1.9712 li522.231 1.56885 li525.293 1.22022 li528.361 0.924805 li531.434 0.683106 li534.51 0.494629 li537.589 0.360352 li540.669 0.279786 li543.751 0.252442 li@543.751 0.252442 mo543.751 1.8003 li543.751 3.36133 li543.751 4.93555 li@574.413 2.93555 mo574.145 4.45948 li573.874 5.99659 li573.601 7.54688 li@604.145 10.9019 mo603.615 12.356 li603.081 13.8228 li602.543 15.3023 li@632.041 23.9102 mo631.267 25.2505 li630.486 26.6021 li629.699 27.9654 li@657.254 41.5645 mo656.26 42.75 li655.256 43.9458 li654.244 45.1519 li@679.019 63.3292 mo677.833 64.3243 li676.638 65.3277 li675.432 66.3394 li@696.674 88.5425 mo695.333 89.3165 li693.981 90.0972 li692.618 90.8843 li@709.682 116.439 mo708.228 116.969 li706.761 117.502 li705.281 118.041 li@717.648 146.17 mo716.124 146.439 li714.587 146.71 li713.036 146.983 li@720.331 176.833 mo718.783 176.833 li717.222 176.833 li715.648 176.833 li@717.648 207.496 mo716.124 207.228 li714.587 206.956 li713.036 206.683 li@709.682 237.228 mo708.228 236.698 li706.761 236.164 li705.281 235.626 li@696.674 265.123 mo695.333 264.35 li693.981 263.569 li692.618 262.782 li@679.019 290.337 mo677.833 289.342 li676.638 288.339 li675.432 287.327 li@657.254 312.102 mo656.26 310.916 li655.256 309.72 li654.244 308.515 li@632.041 329.756 mo631.267 328.415 li630.486 327.064 li629.699 325.7 li@604.145 342.765 mo603.615 341.31 li603.081 339.843 li602.543 338.364 li@574.413 350.73 mo574.145 349.207 li573.874 347.67 li573.601 346.119 li@543.751 353.414 mo543.751 351.865 li543.751 350.305 li543.751 348.73 li@513.088 350.73 mo513.357 349.207 li513.628 347.67 li513.901 346.119 li@483.357 342.765 mo483.887 341.31 li484.42 339.843 li484.959 338.364 li@455.461 329.756 mo456.234 328.415 li457.016 327.064 li457.803 325.7 li@430.247 312.102 mo431.242 310.916 li432.246 309.72 li433.258 308.515 li@408.482 290.337 mo409.668 289.342 li410.864 288.339 li412.07 287.327 li@390.828 265.123 mo392.169 264.35 li393.521 263.569 li394.884 262.782 li@377.82 237.228 mo379.274 236.698 li380.741 236.164 li382.221 235.626 li@369.854 207.496 mo371.378 207.228 li372.915 206.956 li374.466 206.683 li@367.171 176.833 mo368.719 176.833 li370.279 176.833 li371.854 176.833 li@369.854 146.17 mo371.378 146.439 li372.915 146.71 li374.466 146.983 li@377.82 116.439 mo379.274 116.969 li380.741 117.502 li382.221 118.041 li@390.828 88.5425 mo392.169 89.3165 li393.521 90.0972 li394.884 90.8843 li@408.482 63.3292 mo409.668 64.3243 li410.864 65.3277 li412.07 66.3394 li@430.247 41.5645 mo431.242 42.75 li432.246 43.9458 li433.258 45.1519 li@455.461 23.9102 mo456.234 25.2505 li457.016 26.6021 li457.803 27.9654 li@483.357 10.9019 mo483.887 12.356 li484.42 13.8228 li484.959 15.3023 li@513.088 2.93555 mo513.357 4.45948 li513.628 5.99659 li513.901 7.54688 li@597.885 148.006 mo598.187 147.792 li598.473 147.557 li598.743 147.304 li598.997 147.033 li599.232 146.746 li599.449 146.442 li599.646 146.124 li599.822 145.792 li599.977 145.448 li600.109 145.094 li600.22 144.73 li600.308 144.359 li600.371 143.982 li600.411 143.599 li600.428 143.213 li600.42 142.826 li600.389 142.438 li600.334 142.052 li600.255 141.668 li600.152 141.289 li600.027 140.916 li599.88 140.55 li599.711 140.193 li599.52 139.847 li599.311 139.512 li599.08 139.191 li598.831 138.884 li598.565 138.592 li598.282 138.317 li597.984 138.061 li597.672 137.823 li597.347 137.605 li597.01 137.408 li596.662 137.232 li596.307 137.078 li595.943 136.948 li595.574 136.84 li595.2 136.756 li594.823 136.697 li594.445 136.662 li594.067 136.65 li593.69 136.664 li593.316 136.702 li592.948 136.764 li592.585 136.849 li592.23 136.958 li591.883 137.091 li591.546 137.246 li591.221 137.422 li590.909 137.62 li590.61 137.838 li590.327 138.075 li590.061 138.332 li589.812 138.605 li589.58 138.895 li589.368 139.2 li589.176 139.519 li589.004 139.851 li588.854 140.194 li588.726 140.547 li588.62 140.909 li588.537 141.278 li588.477 141.653 li588.44 142.033 li588.427 142.415 li588.438 142.799 li588.471 143.183 li588.527 143.564 li588.607 143.943 li588.71 144.318 li588.835 144.686 li588.981 145.047 li589.148 145.399 li589.337 145.741 li589.545 146.072 li589.772 146.389 li590.018 146.693 li590.28 146.981 li590.56 147.254 li590.854 147.509 li591.161 147.745 li591.481 147.962 li591.814 148.159 li592.156 148.335 li592.508 148.49 li592.866 148.622 li593.231 148.731 li593.602 148.818 li593.975 148.88 li594.35 148.919 li594.726 148.934 li595.1 148.925 li595.472 148.892 li595.84 148.834 li596.202 148.753 li596.559 148.649 li596.905 148.522 li597.243 148.372 li597.57 148.199 li597.885 148.006 li0.956863 0.0431373 1 0.00784314 cmyk@0 0 0 1 cmykBHMHAO+ArialMT*1  [12 0 -0 -12 0 0 ]mfnt sfnt719.83 182.832 mov(|) sh703.769 182.832 mov(|) sh686.485 182.832 mov(|) sh668.111 182.832 mov(|) sh648.787 182.832 mov(|) sh628.66 182.832 mov(|) sh607.883 182.832 mov(|) sh586.614 182.832 mov(|) sh565.015 182.832 mov(|) sh543.25 182.832 mov(|) sh%ADOBeginClientInjection: EndPageContent "AI11EPS"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI11EPS"% page clipgrestoregrestore % PSGState/CHMHAO+ComicSansMS*1 ufnt/BHMHAO+ArialMT*1 ufntAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5Adobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%%TrailerAdobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 11.0%%AI8_CreatorVersion: 11.0.0%%For: (Lisa Tauxe) (SIO)%%Title: (a95.eps)%%CreationDate: 2/11/07 3:56 PM%AI9_DataStream%Gb!R&LO/MPdl+d5J9(uf+EXjPO?t[VO9,R5$e5e$=t&k6Y4(S`MAsQ(`od<QhTrc6'!NpH7afLo2##)Q.a0iX_0@jfbl=.mU8(6K%<9u"N9-0q)Bnsl3)*`'j7?J-M`KRN2.$^YCTPu(h8^MJH7Of+5-YVuf1[f7Zgh^8'cMQC3<LckIb>m]'peQ*WFOqOa-f(P!DDIX[%cV\-!mJk=8@HXsS.%4M']9BiBGi1e9cDT]OZTDCI2.Zr\S&Jhljp":.jKIT\G!+a9q/Y1p+!j8dpg(7dLjE;,C&h]3DuB;$X?YAH%\2kaj)dH1TitZs'Cnnb7gj0Dh!SX;69?"Np)gN5U7hPA8Fl[gti'ubWHJ)SbkHdr;Y.MYI(R+9U6]?uO<%*20:WGhbGU0-\aHm-B%UTtT)#c2%9e.GDPTkHJ.5>"h(rH+Pn8gi(23Z4";2^HCaru#nXP6'J,O([eSl5TK,542p@jHo2ppjYT];_]bd8u5HV'U=]/nY>UF%LWtKV50h00[5@e2N@VN.&%Dr24^SRYksBP!*KLL+i<$.LEl>)r*1BY]O;";##lj+;1VN2T__"r;D<Z4\_9H0T-U`0?:-asdBg<<h%%Wt1YkS,-TYTSLdMLe>;U\SLNe20r9X9[<#<1a:\<<n.X>E256=XJ/'V!sJ3QfEWRU.P20Kn#b5KMo,Ue&)-P;UF\$R[`i3-ekcl%c*TFqNZi$8R>KQ.(dV4(9S")1?$A(pE@RP>Wc7u$.f?W-'.O(_7AK?b+p!1je*q"T.!utn_V``hHlA!]VpQoAb-LMRr)P!B9-k5?%;^)68,ndF],/LQOS`qs^P>9"NC%)YISPI(#kqjpps+3IDWF?I*.Mh!4`?K\-/Aa.n$_O_@+p$S5=nnLunN3+I9J<7J[tpZn2hgGB%W5Adg_G[U6n0]ajq]teJ5D)+N5@GG^,PVrG>MoX5(\S17KV)Y5i(mGgjqFm8p'CYNrJ&)G\$/Z4:!?>e4tHm7"b4BE/.93+`WoD%%H&T:i\HIEA2f[.uopBnr)f?Zo/rYoh!rmnL@/o.\=;)`AghZfrNu7d(9>UT6,E00bhhD#]5N+!B4$<N3-`.l4"+S0cY^c-i*^r1a%0OJhsYXMt15g"fV,E*M;%s&bW_L*$lJpWNWLQl;[E4`Vl@D$Oci?'TQHRI$2fK8jdmPTG#qZhVf;L!Z.raDDVGMu>"#56@$&n\SV%Fti)u$[?h&F'+e[_JFjhj-bM^K!6k\0u\O\e7#N?FtqksjhcfZID`G0;F9]ZG5OOQNrNP1n]JeV)36f?%Bb7Ns7#rO<]bcNi=]1l%['Bfu8TQ!"DIMBpo+/PebopMl9;=%W=W.N9OhaQ`[_rW+<e4SN?!K%3'1dB?&,sRHOlHDg1k$YI`rBL&r)rlUs#F=L;4rEeDu;8V%`1Nm`pg5M)5GqCGgF<,/5*)=,^[]'*!IpDaj*qOT_r,I/htUQXKKi,En\9nT&'K#RG46k#=8Z4rKR\XRdBR.3c8$*l>s8GlK>1Fd%B;3n!)5*jMhdC+W1/&rGI#b#m1\d"acd2j7gJ"E9W$NaTVP:BbP>^/n8R1tBQG&EH[7/3Oa/q$*(EL?LK'u>,4%_sa`J@;egIVUs%R)%U2)7a$'-kiLe.G4*+C;<cp;Ncmc\.0FZ-1j>0hr;E6\HAGpmmk`;pjAQTn87fSb#8ofTJd.c!o(P&+YAdWn2D*@lcc-3PXfX]%Gq&rCdh5YIqrrJ_&&'L`:SIpP1s\V?3e^2H@(g8N3l8\I`)0$HTsBXHG,-DD*/."C]n^Oh.9)@Er$/9shDAT"Jg3S?=TdQJpE7Vf%(b&)K%S4>sD?olAR[*,"qB*+9V75;kU/<r&csM<)$(cW5^VmU+SjZ5=kE2Po7URP)Ac*1q7\sV3?a/^-beZ9b5u[sM2^Q-T(&4$S%J"ube;)rcDSgNA69T!mC0=Jd5)&6mWClK*t0;0:\]r5ds('kViH%WlJF<Y&4k"HiqQf?mTj\)niJS$L09B95\W\Y1O'#(,K^SR'K%Con"#mR:)f<#W6JqC"JPdsOs>d:-(`$=ZnM8YBJ^<1Lhs"OIPBNao3mY#8K3a/"t0k7!Mo0n/NrdR9V)E/`0]5ak;iIRirq42SXo%c$ZJI5_!1VH$P0V*<l<@q3F9n:If!o/o:%_[uK*6-?.f1D)d1,F0q6CE`js7]Q>uuJ0PB@)tjNN-(bk!X9B;+n_:@sip-e(2(>0\%OR<88AV-`lE7EeS8EZ0C)7RsBLU1<MCTrLT*!u+(4pgB_SWKe3UeWWTBo^1]TW96f&u[tCgQJ(AaNF^UO+?uqdeMq'A-2<XT8Mah%gM!CXo!Km+8O9M%GRA+8V8/Io&qG!ZVe*1AN=sP^6+WoaZ?f=VOPVh$7hNK>XpSDMk`FXso4pn"-]fZI_B)#]!$rTF!Tl8&)[Uu;%6nV+#(3.)lBbmR7m_rZ5lsfMO_<Y@QIqXQkBV)!6E4nO%Z1@(P*b#:)&-%AF8t_\(D3onT@YJ8t?AlI6W<G7cn?XBm`Z48p-sjU"%oINNh*L&r3(><`;[V;#O0"r&\`A/B`jlIE[MhNr`hMV7*2A\'Df^_:l;1\q9<ZBTi85dQH0#9S7AU/..cfD$<V;T,Lh[8sCcku7V%dGdJrJ<u<g4B)%.:[u"r[bd`@-UfVSgmSaUr]qt`e"NM-MW;+!qHXfm9+&7*i[b%85u'M9M:\I!r+0@83f>KK1AXaX1C/A\'OZb;%'su7e%?^pSVA,YJ._oj4FJZe3Ur3T33A/aCQ@B"o&@a'9,E,oEk8dmo`ru9l&p4LF$Y-gR'<Ii4/!Z@ATb<;D;gJ6RHrgrP`eA_l%fe#f9>-nrdXZ\te#r7GPA=6iiM-Q_6o!q6[<[aLMlPAQC@"Sg[,gR]-Yde4)9!ZQMhr4$^ZL:68,.$b6?HR(qR5C8X_=n;Gbs.',%lAj$$:Wn#-EGfDj'AmOrc?6CpLa_`]LnQT#X`p$0$aWE%[lE"#,mE_%YiKkjAcq6[`.&Nb;s;k>$%BkiE^#nPn2'TQoVBU22[d[<%,FT,BD<>VO24fdSgeg*E*\G#(iLkr]S0*^#-$Z^&kEk+H\CfsKj2n)9/p7&\2&Eu6O!b#^>SDuT_N3[q?!O1`C(#7_j(3]r*DX-E%L:^>$r-fG^hA7[)d$p%LLL9.RYB&X'@pJsLQPmuhN5[P.<4sM=a(=GDls*S7/s`&<;Du&K"rH)d731?H=E`%3NOWPE!!qYqE$+R2%]NTC"$1,WglU)2+\@7l"\93&D>s]#P^;JlgBm2K!9`UNGaQj@O)he+[`BVQ9k^+=V0=q=(g0O]40b%T5U"OfVi.g3<.9p(O\uTb)%psiiZ=\ZrCNDrIDr=:gp:H-G"*BWA9ht,r;aFUA21CjCImB6;T$2bn[k^r:!f)IY`$?gGDs.<G]qepu4SYA?bll,W1'C^VKeo3AL%K=adrBEO!XS'KV!DRbur@8:d*a`mi5^05XU>W@cL,L9.Dr`:O2LN?ua!$m9/.Je`F112i:<;;"07%^:DnX"muJ&ZGZLeJJ-r[Rn)%>^#XnQ8ZoHU(j^DO`'dt<TaVua.U?JoDgIu(SI>p!)=(^f$ZVFF]Y)(+Sl(qY.s.h'pp2*E*bFk9<u>(G\31.i_#RqfD,5Yq/j:c%$XMdZ2-d(,X&%r'%@;=X,p)0u4Q8j53)Zg-3%TCq&&bj0?c)WQjD_AA+"[c2V"'=cKYKIP;0TR=::coP=GQJcpD`OE_0_2C$(])S%X6nJQ1Z^A^pY[2YV*\Xk2!`KHWFG"gc(EgKB6`lRiN'3P#bNTShJ`W`jpA45[?_c7p!847DG>:8\91[T>*XLEbDQt>r_=af?>pl]%a_2M"!;Ete:;DWQGWZps"h=P%[]CY$;#qf)\LsCAn:Q?c;/gX[l*:L6+,kum0^-gs*@$:TbP>Pp#I7tNC0X+T$E?mu_mLpPl5hsa%F?Bt"%:#l&<&tob0#.kpjf(eK_@/A+GE6De`\.k,XT+WVNOU2o(4h/e@)94>s%Ie28NVl\DtQ5Q=kO"\Xb0aVO3J[=$hu!tY"pt6%;0b1Z/?WX'\\jUQb^8,B*M/HHB=/WPj85dZgoS5N>4_R.HaI(/ItVTg&!q'WC#([4=mc'^MY='^fEDlqM>;-uXa68q@QRc^l8H^Y%\k>eu"+:l5lb;'=,?CgA\c#(#>icFn(=89_YGP4:Z>ZPRNFi;1W!O%(/$U#j;'P@Mr#aljrQ5sp3+#El6]8Z1c2PUTjpN%G`G^8<%5'lWL(L#?UlG-:<!3S.;j#&1noR+6#@1YrRn*U7+]i,QI&0MqQlQ[7r?T=oi8E2)epjW/PO<KYRbm\9!o\h2#pbJ=k%YsMb;sl'l%#WKe&YcNPVOe\@Tqk3qbl]?Pi#CNJ%5CUCLs)Sl9\iY6<N#W;B[kA8jg^?qeoe%BN.-ihonmi#T.gUA)hf^rBod9bT_T=s8i^$.>%SsV?,K/CM"^gN"'L+KNPJT1p2<7klt-^(9akC=h[*'<'/qi5tgCdb5Fb^eQ%lJtXoklWE>cci(,p^pi1YaYTIru+k4peml-SlR#U%"E.&h@Gs!Z>PMokXK(^Z+8krrme2)ni6V_Taac#PAk-nO9o1+@J#C)d*,n4=@g6P((JG]J>Q+AI\s!S1+FOs<#&S6@?N7@iT)uo=%fi=eTb,r8X5e(q<W;R"s&(hS=HP75g[/)]mnUI*as-$^/8nIkV^rfr'1VSfWg<'a(-+P#iJGm-t7C2cCmCm+3>q"akP5%7(Yf'i$%VAR$W9W#in>IF?teTsF(C(uu]9`L_*#,)R>_grk>r^57"0Fq7bf$;)q"A#EMT!JFh*DG(3`"4/"ou8BePkt-Z9&>K^aY9.WJ%:,M%s+'4,`J+>MI1rPDj=Du.$i\D/Koem\I:!H`kPptT>YW6:s'M]he</m@Zg;`]=SuOZVeqUs0dKVTE">0Ph9!EDWrJion-jXg`9mT:%3qH^dcMZ"5Yl6QI:m.\Cku]/&0C'3Gr,/^P3Ts'nlrGqa%4)Y7J(q%<W8HuDDnZG,i@Qunj7mr<*eKY_R*Ydq?/+b^^I6ZTeb&l]%<GS5@Z&*^nrrIQ^iH^d)VPk`eNI_R9O)DS9dAB"bNp?5TAtbU'k_8kr>B.jdE(;MJ^[%ZC@(bq$`foq]QdCS64;o"T80;u@le]:d%*$"VpOQM?[=pfGD@7b^D0I&.''5'e)L6rk'U9m==@7_=;L1P]n3deEhp=+fBf?<Su[HN3^mJd9W)\7s0j8\5Z@1q4a5$E%Eg_)`>%DC3Hl`f&)47$*e?:i3OFCt;)e?$I2Jra/Xo8:i#TjMeUb\`6`J#&co<`a>*+7q5Aq]B2B)3OD6'/c7[4(B#3a2hGp[I_!5NEJ*dn%.VnNP[dqtG-P&KEX?b6RI3dSH.$d8[B/AKD;UD!4=+eIOUnG.X)6X`]9tRH5T$=!9>'("tXsALFPi&S*,56c\O2r)=jCfs)]L:k5%s5Efi0P,Rd8U&bC*UBh/!6=#sp!F\Z26rCGolC$^XF3^9E.9WLJ11eQ2uc$mVt]eN_&Ebje^+95/Jlbu.Z,%XRf7[pi!-g2E"p$Y%YK]1q7R&HGZ1)e<>_TCH7VPB]'^O%Vo<m3e4DHs3KRU%(gCeM8i+CP!-j'#W=9/Mu.4p&F^Pe2Lq:'-a"m1`Z`h:,iW.t;!>:_31%^o<u6?p4Z[^;fb:[k5=i1fog<;(DqUlaDV+7Pm^iPpMW6on$Dk8Tj)1Ghhs^*>AQaA\4I+asr<uG6]fO6+=Q7"]nlOX]l)#DN-b5%\n.aX)6W%P=fpJ<)Z`8(+8s?.A%2`P23O,AmQ]Jp]9;,h*Em<+/"M^:,(n!H3Ll#u6>`%I@T-[JnCh36h4s4Q#f[O[k/1U5S$0cL%Q]`@b:jP93&=8*%1EloX$3U+>%?sg*'UMZk:g0Z`T^3HE]42Ap,)`;L?0Y.%=DfQL$oBBD!/BT[2Ok_o]Ti(W]a3m/?RA1]2*3qY%L/9DC[\rE-(`!%<pX\BtAB.cX9-@,$_sp-5M8=coG]mdtAkRWPQ0L"-U%NXS>$,Mi#aSWdq_Pq)Ls%=rrI8@$atDRjZ0m8QrJ.W4%\'D@5V<5s`:mZ&;^)f-4%uW"$X0MXLK;HA.0>?Vms4&b[?]JPU#(u1fbE-E*oO,ZCrN_$P>g1e\M[#K37%O0*"#J??3.N<$j7Tdk%:b##<d\mu<'n2"4kZiUdMrf8tlVk"FJ6S"'1F%&r(<[9C&F%FS=Qg][YSF&`),[[=+Y+m`o&s%b-pg0BR@c+"%]*('EX@sL_lOb\%g)utF/h^-.'Wk_Ae-/;F,t3nhCDN1V.%sqAN(%J:$5ON;#S.r<#RVGRqQ':B0==mjZs/4&p_Lhhg(f2`E*Z5gh"<a?iQUJN>OFZ1%k&GZTP9>c!;JQ<3h?f4SQF=8*dJX-AII]_`,Ij@Df`:JYXgHY+Cok6,=QqLXG.HU?D+j7+_ih(XnH-eSfrpNcK>mmnlm('[<TcL^%RO7?kjAc579(h=D9sG;dnqHREDW-Tm7R"Zp3979konMsSQ!lX$oJs^rY^]&V'-b/CI/r4R]XKP-mHo2Iq7V)Ig*pa%Bkm%uENp_C%aVXcDr.BAE:Z>Z22<_PL.(KRt2OF.:8)kJ-+$bf:No/-@P=![*A#E_`32R$<5^;Ds_sc^E^fd1G(9ao?E<aoSJ5LGAs(*C!RTk&E%NgZAOJ&lpTF?]G#q!uA+C7WQ/F#5YnEZ*I;IEZ"")kHBODU)@^s#m+Oc@>N:$V0F&3hCh7Z)q8CnX3.b-)PSjf6OU<c;A/G^$I6+%gcToRZefB7^N930c/1XM:6s)Hidc;aT:1JZh/b=JFrU03=8qnd]$p<5^q65*-3%h\ikP=r8)qmh[h2ilX#oh/g#I&A`*`2jfQe_5%aHidd.21qE4b;e1'8B^,2C8CZm5&g)m;/X@2T7bDM-lh9>PZqsI&!:V[MkW3GSRF#-bY3Ed*TiM5Hc;oF'&.?LcPPs<d)&aX6=7"%;*i>-'.i@m*3Sknl)0:Ba9Q>,BD.4/8hh]G9o1<"5!DhTrl^4Rb6fD+o^tedkiDo)qeGOG]t-m;cC[Jjr%7VA>(4+Q^bEI1fSfYr%?]CMtL%frqWilOGXs/:?d:#A2gg`PDd=+g&/uUhsDS/[<pA0%n1L,1(I&jj8.)3B>nZG/@eI<1lI@i0Z0kME!'??$ddol8V(T&DL%/faht]3>VihM2Jq!.E)Ce!]BbbNu54-k9KPW8LH@`iR$EO^"[7ob79]s)f\-SBh]n<=M]XQN,qfn\+jZXNj2\gGFnEh;K"/gJ\I'%P>jQ.qTJkgO'Za8i-o7G)uWlfhL.61)_EGPigK,9OBSChfCJ8"r`3c7d:d!:;g,-!HLCDV=-RL"hIrJVL`Oq^+)9<a;Dc!H$etnC%)NB5n\nA2mogWHJ&-"XQ;XLI$[5qp7@OI4pafS`R,Ac<cVpT2;jE.j&?>)1lqA!FopJ'-cR)t6"*g`G\DQ;E.WA[q_cn.ucdVkJS%%Vh7!ja/;Q;(sV1<1fL!S',$gCj(#%4g39-$0;>M"p6qckr)Gt)m,a'.2n2dVsOY&eDX:^$QEq95JLh_NCJ!F7$9^0<#beIl9)"&%l>XRO/#Q6?p-YscE%6:=:;47DogTlhn)`HkoN&(kIs.!c7#aM>U[2dogNW=VX/S#rH[UmXl,^PQUW;^LH294kCPkSI.sNOlI^0k#%:7ShCB6QeH7_=e'T_"u9BK;5?j#kFbLJ*oKl]]+!hrnk&ZTY=RX8CNQced*j0>#cugNhj<)5LZ8k>J&b(Z0%_RjT8g5oMQu#qG-,%mJC*hUX@"OnoqluBf4%$mX1W\J(o.QI&#;CRG?-Zr^!s>B(ddUg#rmsN(+M@Jl_YYhh.&'gO$$YkY6cCIt.'9<#^6HRuK6DD14E)%4bl\*YOCSoe'6lW^!YT5l]KG_?`5opW#dH-7BQ((5./SSCTU'AOlrba7_R3]b>S5<nbK0<k\';W)QZQ5^Abdb#HUCi+0!?EC(aKa%o_rJXXeernWDT>-Uh8B5_3no1939U2e7eLI0iAocX/_/VmXrOiQS\@R/:hE.+m#HO[$,@@d9b>'=>\mDgTD&E8tTC8.bd,"NHBQ9%4DaX&2%'1(2@HP`q%JF1,-5U&20WEsNNTJ_MOljn]'it\B]55fhA1d[:0t(E0:f?#goaVf%LP?^VfkI:jZ%f1]qTCr$:,M2`9sn-%M4S=:2c,FSRlt%0]=f(u[%M)S\]f,9@K%%:8jsg$ambb].anYPf^!JscacdYCK7Ol:2CSDH$"P\1R_*H)q=LOlfiVhdW',K/Z/4]%LgJ*'nMV3d\%g#=2;A_/<'3mNW4"tal8Q,W.MK/Wito[UR8BtlB0J/EVJ+jS8+W^tQ29otSS::6e*a]Zk0mQ7m#'ACg8b[h,0+l!%f8faAMT4DMMS!p.\AD$sB7FX7]8urr@%7_+j3/"R*dcH"9^u@7jV\$d;Y0.ZWu#qo5'=B,5FBZKk4=W!.s\/joOhH:<&C6H51,(=%^bM,;dpMh>9C$HAqaNKHq6Wc7/mktGk3C9=c!.<Zh+m_;LJRMU.=]t01nQfogK2F[f(6P<54rMET#N:CdY1K\F2jDD4S?0%X"0<B%`R)0TH)jm;jnZC5dobOZhd"(d>VYFm-J"*Ycf40#eLjP*r5E6YEr(E3h;Y"f,Am;ha!sA`gUDLN4UiL&q,Y]3N.b0EFZ5,A]$#;a%^G'$NDghA'L88(/8ic@&0Q[).ZBR/\4?P\-:L?h/TKQsK4n%5:cnF>G3gbT87;)+e*T,Zg^5hcDBJThU0)EE`FT.ah9r<^/5p,J.%p6D7![_;\(k->B[R&TpXi^28Pe,5a33e_uB8KZDo(\LFUo9HQ5%(A%]!Z1ZqC?=Ak.nrjciO[5Ihd6gcJo+WYo\l.0SBl?GS1Da]%od+TEeebP,90RSb$-G85VmC'F9i08<)rGcEb!D<L-gJn.FY>Qa8tJ`0iinjYhc734nc7d8Dj)SKXBqP>LZ`oJ6rrp_H@XX=2'2AJ%8HYM*@(.,Rjnm3=nS@Koo[a$]L;t)nDrN?g>N,>$8bZ+^_8Z?Mn'S0o,[SgIqa?E'ZsH/k@bslnnrDC@Lk)u@HZNM[=aaK7J^K;0%1E@^s`Eq<q`&V'bH0*KX$$kXPadXIB;O+A`E\_dI[)dS:)VY(X-N`:XZn.I`=ckfnh[KFSJgq\BiUKJdYgn:(I!^lbA;!clnLnM,%@\StB)!otee5NU/%m3`UWS-A[>)_gs.'S^h)g/Y)bpjY)BBJLmCik4F';7@qn)APmNG&<Hk2h1Dp$8`5i)Uh79)ViZ"b.mjEF?U<%f7OH=.C#@61>AbXTl6&/T0L-+^aAt<I1>BMr3F;B9G7lJB_VXEk-B(5BPmSgKd"t/bCsT5P5MK\Wl-MZgt.[(P(,U)J9F6>38^5c%QY\,D&E^%,n,N2:lg?d:auiXkJ*h?n@'^`t<="(qN!oXcoACLgb'JZsq!e:FRb/&R3Z6T;DD9i$E63REQ8>)HH:Fc6Kfq1ehOc7f%N/6dg.hZiHm;%mJdj.^7DFHg\_hD_OR[8D]eWa*o)rg:;*tPlncu[*c^9YXaHZa+L1^)g`^oFba1s5J?SAZY^OA<%08Q6',hR:'j%QQPO$n)SYc+8"5dj;O2%]mJ%%:Op=N%,;sgO`o>bggTrIneHW+#aLGMjJ'1Dk_aJ/p^Ljd1&thLEX=s>5(5dALOnCRkBGpRc>qG;%"-j>LbJ90'`'B)N_8:U<#jgV29a3X`VAI=D0"e$]VAKSCfj^Y47!m:CBWlu@P/i^(=)iFaP&\#8W@@-?Aq;2g)`MU/6"BO[+18Lc%]#PWGFBpV%RK?gDbsHhScCN?aX-*G0I:47V</q:4k^SklVqIQoXg'oIPK(c(P)U5Y&%VLU;;p/-VK$5Z`u%%W=Mc.t/.]/"#2KF.%9$'k&e2BlA;N`"P"/<T&olX%o8L+=0#nRh+,&6P\OGjHB'NB42.u)mi39HOhWa#NJkG?JhD/-4[\Ft:ANlos]0Z!$ce]]M27oA9O%A6lmD)Yp-cPo?hgV&P"`F)5XB]<o/."Pq%lTsa:gB0@\ddgn.dTfhY\e$OIL8"5qZ;THVcla#15KmZmt>4/`/EpMau&>9FQ,:<'P%(m&2J:s5N;a/,5&-]iB6I/u4>XRp;`RYF:4(*&[ue=&c9'AIB=.Abi)c]Tj0R!'+rQ5;]VZjsHTD&IZoX1G0jp@^go>eX##*gcMu%^#P8V)Q]7F-+1[[<7dp3\e8mJ&R0N`>LnnDK/0.VWa)Nr(%'s45L&q-L5Nfj\:igig/0V+=\3a3cROa9^kU7A%o'9ke:K!3pQ1Y'%"8S^"V8K.L9GL"kW+3iM0+Bh+%[S&%=A^e_oln+\Ej((2fb[u/SHS;@[N+S-^V2apqBore9ClkGAKX+D34?MK<oo^*c*KUS?B<oc%E9qTkM&uWg,4;AY/T`Zab0:e)8IcB-9^\$e8TM<DU0\Z0n4Acn&kV)N\2ca\8ZWed,j`(i193n[Kiq.4J8/]*&"Xi<Lq@_(55F:K%d@[IGU%k1[/=;or^OgE0K,X^!NXX4E-'MYoqUq9khZ$j*bR"9_?0;aVR+c3cOJbD">1G%SnL9T<Zg#fDb=1,jL[d;"kB_?AD6geE%4Ye/+IqI_S^^,T`1dBr5!q?]Lf\KeXR'jYQf^^L'NUQVe`l?Yb-:SO6/FdMtM.W0,5jop5lC&jX)5qMJTp]_;`i.N2ce>hJ'ij)V%H@#>CKNC$:BK-cff[UQsc$3".]?o'&dtJ]-9&7.X$Or*p[&WR_,BTVZ2-jmm3L9Y#F:IWKcu9]k[VV=3'i),!rDerT-mHdlZKTmB%,T45@*2H!ApR(KFY='-b0$O.ID1gup;YS6%!@Oho)g$`=D9GV$X`]GE"6XrdBS?#jpVQ/6R"Hc0\6g%2C*"ubH]3'=#AX1l'Q+2B%)6[E>[7^)V1#jDr/$Bm`!H!jBmGXG.LCO0I7MG[ad1nN-P3aH6LT'1bhhuUX!(_t\lPCd0m4)<X8X_#->8FV?o48ich%M:J!PW\c%A`WH;'Bg^B@A1Fm#o9[rAEiYhTQ5HQPs/8\o6NqVa,5E8R*n1(Ebkn,G1_Ij@CT*g'OI^ZXJqa8X05leD:,D^et"7uWLgaiU:_O/%VDt"`:NM;3%q8-p8c@+F_V=BFD\9lqo^6VPp7>dNSV(o<g/k,bcs@Khb1XhdaiE#*_JC!!11kKHApB\Q9$t>ZcuB_faWsL7n@/d$%W$sK%CeIoj)BojH\Du)cVU2#C,G&RQ:(:lTH8Pf%J3:n$?/3l&5h<HEk_GKpo-aM%*YM"fQt5cU3#M`@JCNX'0R+^ob&&uJ.t&N8%oP!O"+-4-j86PofG7RdKfKL%tIQndU7K,KNq'Gdb02HZ\BE$V+beGZD'RkW#K4@'TM1)UI;.U24GmH_CG.0)[Mt$@5j5:b(-IMoN%n2Uc&.=GGOS[Wr[c.@[*qj3WsS"g5hNE.#034e-9@,$IbKt8Yd'UtK'UMeH6f_$J(meCm8K;fD':!%qX$Q)>Jn);");K3XjmJ)Wa%1:TfZZNc3$BnK;8!tj\I<m0=Z>?-^M):eQRCe?;FkncTDAWL"1j-.=CgSpJ>KsBH4dCn&\1T=Q$(bS#;3+uGH$So8>HtRltn^CrK%/VBV55)\mic]hTkQt&F/eFJo!<f?.H74k:^D_H7_ElLI-@+o?uhA8H6]29P![seadW)Kg.eX%'dfl+)fEbg=QBhHbGdWW>(@^k34%08]A98qc>%X9'C0KT/'5(c<!a]+`d;jP?K+h&YD(gbDin@."u:ICD>Ia%W:ESM%Rfk-_jNYF8c^eXa4Tf<;Y=o_QZu&!'C]l\g-[%'LS0Q8_*cLJ2+gZ2S'VXL6qfDa4RL"-sS9nDOUDjlNg!EIp^H6A<NqH>H+/+&;2J!6kM]@KaeK-o%g+W^c$&Bp;tjNA5a0tj0-6k%^);0`k9"<L)i(I*9[.?7I+$6*7B]2+i2k=\kin6dR#c\VK@P(#LJ:k!YKjrX:CI.-_=(J3[4Xd^2=p;GF%DhaS%mE\WW.@rLOCU;%9]dkSD-l))hIQjO=AR7Fju7MnERZ_]71?E'='G9[Ihd*!H8]d5e%77*JiSe2KR75I-M-LgRd#]m>Hln%KW&-#;jWQZB$'/3'+,B%%#g-^,c#R$:3G-#sC'<W&@Bso<'N&4&a[MGm`j.BqfU$V4/M!fSQ!LOJrfsuE["5lpQg`\1PZL-aUODJP!:k^bTaX35Hu:A4H$9$l%87(<:j=de60EshX.u88V1bdW^RXfSoG2?sG&Ee#CDn5=f0mO`V#eKQ#7N@GqQ]kL^IkMHDm2#%qS%&YH:5jhUK1>;0UO<qV<Z_r^%1`.#0O.@T9@k/Hdq1eM\Pt#,3a7e)(UV(C$p*H&6?!X$+W-o;b75K-O?GF:e+%q(?+I'',=3og:c*>.$6L.&jL76pL%CD2'):5hL%JbG4s=:*j.\pLI="(>0q3]4s9:LVe1;)^QjarNkp!@h1Z22^ph"JOaGo!F5-i@uTQaJL9TWb_]9F?lriJ1YUh"O7XQ+2H4$Cq5Kj%d..Xtp).69N!,P9gg/;S1l/Ud*K@Tn4N/Ju$u1B[AO&"X5.^p51nK(#PGedk-:4SGRtI`t6+#[)T]M^hD+b::S8)iZ>7r`2k:D\t%aed$C,!:`$"%<NkG!>L9Qt].!&n,/ck-6YHr\\(/QjGqF?R:'FgHg8BmTaRhmH`+&KD8'EbB4Zu-sqVX6h,D]O`).tOO1!^)nV9*%!1n$gYY5/n$A]leGpaaaj*<HB;,m8sD%ignrijYP4\o.+oNZ2)Z=roo`/p)&a<&$YV*sB!p@Fc-DY9aEVE?e(()dY>%BG6<1%/V<%:c;u^FBRW`(Essmp6ci+`Z]p=f\8Cq:Z7s?L>^IAEf.R>b(ciHYqf4E,VU^5F,U7@W`.qY[N;D3V0CEWNC:4O;N#7aMg&d86F.VL%06Y?HpGgR[\3Lb'^#QEa`j@i\)OZ-*SAErdCG"&efu;FcZ'?2KWMj07_jsto5on(pb0XouAA"@>j\A'm_mLla>@]#djN:/f/&4c_%`'?Dcgl>-2;hXJ[5:o<++l/M94RcO3E.(<BY"LP:\*!dq`=OYd$j.qr3Ag9+])k_bL*V;OM[o^9d@F&Jd`jT,H0+m[."`?Ca*&]8%pZ'o/kYY\?P!,[")-19ORO8D2FDDP$Ef[:n'&8<oNs,4<P7C8a*c4P8P[T)qb5PR#f*siSMXBAbd0fPi\:e8Y`DAY@c0&i;$t:pI%KNC#'rm/!o@57i)rZ)[6L!q;C6(Iq)8NnFubm.u?137Usg#B+OWYfR`8VRD#md_3$PJY9EZE2iFC1X*lStS3,AKp[&+<KFR>\Ld/%hmJ[[lJ%gm1LaaN/Ft,I"4^[j4#)UR$rjJpY,LVXbP%l,[YN)U]D!Wl=S2l&Am)PU!t_RL(RdB_fZ'<"k\5c4ZNL./3+`03,3P=.%(RdJS!lBs,K54#?cs'.fmoX?rdZ-BE0>eqY8e7Ia)UU+1CT6U=4?CqN9'ZX$+Z`lnaUg4eSb!oQTOB&5rJg+,gO:8K8paFVm4m%;%*iLfmbTrpT$3?3GQ<%/DfTHRBh>ad151+6"Z$,p:QJ[i.T"S2TKUm?\8/1T/1I=D9@>kEeKn)rE+eZFbF>X-9DQKX#conXcGZN))%AI)*Y?+:Ar/1(p.)U]*[23B0bdVUd6ZmkCkNCTTdY.-['.2ssO>AgbpgD&jT0\j+,?"*6.kf]01WU5<qKQNDg.<Z83]rg7MjE&Nd%m45A93;t%gA)qkYmYCD4RE[j+,Vj=GOPooT1D'J'15qt/b(_;H_8&baJ0Zsl%r*<@6&hZFRG2]tL'[LL?TVX&!`XAk=?DGX5ofh'%eKcTJ?b%p+*YO:H27asKPcGd5?#MZt3t$WCl4=98P;.*]XA+dnk*!/dm_o`bH,mh5(J5%Y%;>DGjruMET3i\?5d"I%K[%5m16jk3%o&//&DSk0L`^n<:;lSB"[;pPLNf>&3'o9tqWPBNAJ-eV_n!R9I3GQ.7+mcObJK&"F]eiS#6'4!M7t9VCK\bt2Ht!s&P16['0HYFi%k(XA;9!*SH&ZQ+QCe&@kK_/<g#eD[q[$0ArGC1ZT2Ur?[UAL)^eacm>/V!]_X(@JlST(X>8!oO@IX/A+/L)439t9U^eFKr7>2CWn%)Isd9_TX-h)M0WsUR".Dn/\LZ1G^6EZDMl%GAs$SI,3gERkdb`B%a2MO\CM.mmF'c'[>`YBd#]JCfJS?K%h"1P6goNnPI6;,bdq"%[K43-AbKf<H9^F5FeOr^I6cgG8X`e1gntje!)_XL*_\oAZ<EQ+@cZ]1mm7/e:];W%)#8H#nRS#$@lM\5-$Qr#f<;[38QS^s)/(pr%hibc`%oKD1,PRHq.&hY:GR49)$#\NCPZ6T`l`!9Q=E5q+g7<Yp\'f@KmckVKOD6c18Q3_7<:)CDB\?q1$`tfYK^UiVYYFO4_;$F-%o964,8MXNt)U\K#4P)/YOuLj2It[VaMaE9Xf=@."o5L.OR->s99]%m`WF/s'U2"$cT28ck%G/c(/uhqp1*).\W*418[DR-KMlP>(%@fJmIMJK4LqdSreCA#<nI8RBt/J+#qiB#%Kec+rOW^0u%EDa,q3.,ePm2&bQY,N1uoep/VXWUBW,MRQB[GmWiGeSZXMlIN-BSYmr%(KDF1Nc!*2eV\.B+ib(3;70l^"CpEW];SoVW`/%"[csN$OZ7`$jjoCq<`$V9ckg8ZAl;GUa[O_e;\S$bG(>LN(#?i837<_b$+kP]%%#lKi[krM1[9l/Td\_r&(#;kUV@[*69ak0*ak:6bJa1)3#4\#V?<"%`jKa/1[13;(2glA8M,f*:HJiU>R;<A)9`WJIkB7%SE45SP%nJuk_p;m;+gpfKP4:%Ho(WZ.M>fcO.CVmF&T8N%=cR&X)>KLd*_m9[I-P@nGDg8_)dgEX2N)=;Dn8*^,98H3hK4jY.Ho)5Weoe0*%E4031Kuk%%lJQL?.F0()C]\Q6]SG)_4IZ>@XiNT8%m8TK@@kS'^&,[Q$-rKKF$c=JB+og%%;crFlq`AoCl@=?B)%f4(G0m?KlJgJ%cR(WV6%-!BcR&X)CZb"=F.'BY/BVBASk[!mSJqu/iRn@8'OsZ-LM%R*_=co^_ds^W9mA.&&Y:Su"!)?hilkjRGd^6EPi-BFHesV<%f`\3/Lh##ofb2=^nWTh17OEEqTOS]U`[j6A!1ZcDY#Ufkn=jZ-e?=Ld-mH3r8WpUWpP3ApJ?sCeH.RU[DtfJP5[KAXQE0XXc+)Ns%mVK"nC]J#m\iX,A-E`?`[0L=PI=6FNBCDh`'mF9uV[6P9/),,h[RtYQ2JeoImVF`lYZdQ[r:Xsu3,1;b28$uP]O0"Oh:[On3j%80%c0+@;!hu1Rl_uUX.j@=Ap2$c<9UPMElPi7'LiI8(g#^i76B%Cp*8UoTNocXoWGNG\S<m^k1O_=%pc]ZR%pW&ZG%*C>g]fS?!Fjge%ZJGXp9dLIl!>+9$Q\65@*+E/rA'W?X&EE'M=kJ]NG7^cuCP_L4NZAN_^?7)9-5#9!2b_n\(l,UHZaWf#7uZnfZe,@7:)Z3/%5D`U%G'$Nu\B=74!/PW..?WFT72FUVNYkj0/^&U]\0`iM<lDM:2/YWfgf,VX]b0;iF3JO?\17'sG/QB&Qn1Yi+Gb#an#Y,-N2tZu[Nid4%RPifU(t\GBfS16p``UoN(mjY\^*OIfq]NoQ^EM2;@U)-5P?iuarml+ZTP7ScnU:%fH,R5\*8?1E.=E=l1&b)=%X:eETqH,`D@R^D%IQ59Ue<ee+i=P&#p+N4tE<iaN[h;N5_"&HN0lH5N@:I0bnU20r+NA\F&&'(^@#/f^fMS+Mis+2DCdO)]8PApmis,A!-H*FRIcLSS%`i\?#,=RQTjG't#(mj,`IQ59UhMjPh+i]N)QlTpE+d3Fi(rm]:\mCJd%>]!m?Oh`+2gO<HSqqBeHCkU#:9O>n+N@D;*nZJiLH-RP%^FPZc0eVkgbha(N"u3:!=W@W#^@)Mcjq-Q^r0[$Ad2!;RRf5$G&`WrXfiGTA%Ur]C7Q.jij2BVF/Kr-!q8Wtt(ankF>=XW6>So92%b9n=K3$C=f_M3s\6jGu49A"2t>jOt99B?j)?<bh9&iQ8Q070J32>^i53aBOV97=&e*A0X6*Nm;R_^4=#8`HGjiB,-WK:p,AOS/=?%_^0+Y)7"]UFLVJ&((`ig5_i"bE,8f""s#<R.bsWE#^!QjYpA4`gPl]0Yi3/PI9T*p/,fC$6&43M7j^RZOQ+7Q6AOmd`G@ns9A"3H%)[uI0LJ,R&hd1%N3a<QOHPgk7MRVaKkjZ80\kSs;rRqk>2PS)8#&<Oglp-?Ld8)%OE.N5qd,Cu[flhJI>o6nrXf$3#CaV8KMB^le%S&7^;\8A0W66D6JJEZLYqns"r%_!'f99'LKp:Cg$^>H^53dc:hIjfEK[!GU3Q33hu<V4H8d,@'ROb9=E,q`X5Eu9#/F:K\S1L`R0%>`i%H5j30d5!G%e6."SjB7..__[UH">L;=Ea+Y'FDIQj%TYn1W`EmYrKFKk0g$Fb0pM8a_Cdj+PXMc"2%YG7X=LhqZfSC$(=QseX%J.>Ybni$38@&5W&a0+;bIZCKB+>MubYO='UI'*+P+]iI&0rjF>GuaG,CBAe'p@`7!FRfi>TSL9Sj&NL:*Vq9)*nOaIK2l'!q)]n^%(g2g:W1jga1r1n%M+5@eh/f+bd-li$4R_S\-#/pFSVRP'OrVW^,pcE#n+]m/$*O5n2OR)jk*+@[?$Tf*[Sk^<l@RB*1])8=Rih?G%-[Ni*4ro]uJG8[i9.`g:HEZrW3k$f0G$o!LmS!h:ah/Eb'AQhRd3NVa$V.._5`J1B/&Z:\_(>Z=H_mOnl)o8TXf$8QlY()P>rp&Q%i[_fg"2`Q/h%54jpUnm[*VToGf/j$$()Y-MRUOO=nN:oA2`+5$Q5O-9lL-+]E_JnhWYe.)OetDY4\[R<@TH1u@&MO<K>*UrHE/r2%03#@R7KXbXG*_fM8?QZLcZj@CNnJHZ&B%>uF@U'\`I$>O2i`^")X<=&V+Pd-ORY1]deG6oJ1d/."P>;PeQOaIhBdj6286;YoOoFp%p#oK>ImG(-ajY#^9UQ(s>)k`*1oO8uTpbI,imGNg]W9L4o_H@>'??Vfdq!'"X6/`[0n6C!-:pac_p`@YQad^%<5gBhL.%/p)l\Sp%WntO/mKsiH0g*A4JcLda:;?o6gKImmo%bfY)'ZVFRKud'V/`p))"El??q`?\E.2Nn8H9[R4]h*tkX2cr*pX@>Z$E`-pQ4`aV&r+-%)o=BN,k;9!FD_,/-]dYGF9cVl(;VF1\b8HL)PrCScS6*Lj3<ueb(q-7kqgc/&45_k"mlmA@lq%.Z?N1]&*G_l10lZ=M#(Edf1;K6%a//'6;8!"+%Q&A,643qfBI/g-/`X[rga6j;0@0(_PHCZ$=T)tBVVRal"P?[\^92nUU8b44:NN#0WP3a\\=LI989r^oHK7"XP2(/n%?VH*0IY#"OHa'K"=^g?30uFi]?+0.Ac/#ul#VZKuGrbpAI9Q&6#`UDg%.h8uq]$_@=X-e0d[t=]CHVJ=66_l.0aDNFD9[&*BdD"!%@"@NC_4'b85P!K7^sj\8NkPu;gNnYgl5tKX],d4i6e&[OP\,t:(*Lf-/)SIa^1]j&@#[PZ+@b&P`/"[r/U*9!='BA7Gu(iLWF%jg%Cf8I4j-L4;KHZ,2;TGf<c7j0tVHWC/pJcPnC/`U?d_?+D*jprE@)'%gdXThIb@Wm_(k-=&/SeIm#e+]4=pD'+5s8FObKjp<)<cM?%M.KZ:ElJd><6GQhogn'Z,ui&@C2/$tRp"g9TtN9&5NTT/6jRt1jJlhaIX>e8hTpF;;G%M<=3iL2]/dGSm)36:c6%4QigRM9G(aNR%=1-UC7'IWV*Fo#YE;m.caOYP"H2W%=QOj^RrNuE!%%3#Gek`fkB/u^p0Af6'7?\=n&DA\F'b,2`&A&[RQm@8(+,O4lQ/&LO'l0q(%]dD=O]$PS>m2&,u@KTgfC9"3J>,:/g19%]gao))6Wib#X85jBQT<$An8<35r+M/F6147<!2;:JGk!leU;1#sj&T[EM<U,;8e,69h%SEJprc.rjb"Z9;IE/@-Rr3uC9qV3qo\FfB1B"7>.q4$QV>B-HM\9iZ6.1:@fV8<_/<#fDUGb3^A$Bp^<.c*BK3;1#W&H_oXp9<BX%S^76L^-'8E5lC&Mcb^Ud\SS=OJ`u;i.d1tm9$`3(Vt/o^cL`pK6)i`jeX&pTQ$<'ob=4JTb.+4mGO^&CiEq"?LZb/p=bTMFI95m8%Do^/h[F^gZ+2Z(%?]!!@oD+&ZrQ^k@BAE5*QtY@U[2lF2n)/ARqsE0ghf-h^qYm8\pXGuS2oFd%@m##fL[R,smBY?mDAW9.T@`j6%D-H[HLC=,dDS:-L4_MrLo[J.KkN62SjRbP"ICnl2q:#=)cfO'KoJT'\*\IH5,3S.0bN2a$mdtpnn!nKn2XtGWZ!;sA>[9hOeh\6o%T?QaKjkB\-E]Li@/iV[SB</ASI4l;J9kX%APL16LOG!O\P_."]pJ38a<P0bSOpsX-DED*rYH8S5JfFKo;_F_r$S(.5-fKZ$4@qX5%P?7oF+-kTH)7k1GaINPd0aq_[/,VQ/F*U*kRbs1(J'6UuEUS:h^[Z*F#W$/C$(^qJXr">9:K,q<_,YE>X(S!cogLG!^.Wu_'qG)#%\9A*"nh'l13;<p(9BNOP?PB=%n\>C5NC`:_fj:gNeWU9ppc-AC5B@fc4hZ0`AJUp$4")$j,ObV(J^c06Y#cQPEW+%H7AWp9mOjFD%4%[+UkfN\6pmn@sK!AL-jhXJM/(VnU9<E(XkC&uh`YnRNH%DqI9$Y6.o8D'2llO%q(KL5TlO;pNF_<Dprdr%0kmYiU+(4a>rD4E<%,G'BuI@QRKO_bZ\SU?Ge"q[=b7=SmZYPL2>^X!tJX-</1H"HcmE6Df85Fp]75d-dZi-,:3=E#>EISTHtij]r),*>k1lmnK1XaQg;%"Vu0/l05#GMSC-`pA>rPrbK)N)$D/5f86O^XaR)!@XceN/QPg]DmV,1rBR@>5Omj@eR,QIDf4->dhJK7l]^,pA?[Tf;j2Rlk<JQu%o$.0e-K"<hT(;JukS>):Vhs#pfhF(t/,kbo_9k;fIMHoYL"iLhlq<N/ZtkSIMg;)6A.Mp!_oO?%lB.r?:Z9>hmQBH5_F<EP[O(or%HLB&62@G`%=V+X-#fe],q#/CG$B=stU(CQ+hc\:<6SZL:HOY(l'*FG5Y_Mh`1;hH$A7:Xj6t(N-1rrhtId_21GQ-ef*;u2h"q_BC%=0Ti5m[d=X1[r2cD=@?r@_MQ:K<_up!(*3Io")NuJR6%.nu_2sT?H(P@9-[k$$1/d8V2.^6<gjBcHtLB*"gC-G(%=F\_qfX(8#m"%'G*b,`DugG?4SM5+]hP[ku,!3I11q(;LTtNg9@0kol]E2Y^'laYB+UG]Bk?&"nl&lni6Nadt-Ag#!k0Qa&8VL>N4g/s"GEER:5lt%?0\'[?AZpRg!\bJL@oforkqCjV-3'gc@]>l]Ve&jKc-7fcugV]=STRV#_RElZ%TXnMFb01_npJPA`@VbQqFQkCl.l^,^)T>PP/oI%=pY/dO45R<#IG7B,[)4km*/a[/gL@IrMuT2"%2Y9a=T@;)41i9:Q_UI35pPch[CFAlu8CVbr;/r,LDE\Q)Sq-DP6AL4sP0"RhQLG%k<GbJ,LlX6ic"qGoWlcoW*kf2SACqN`toOAoXN]*nF7A%e?dmrj0]j=fJ*NhpFpHi+-g%_?RlmuR@A!Te'<SC"Ps)u1&nrV"9Y45%lg82BrSgRZRHo_0Sf,h?QWS2qZV>XPo[\90%QF&)S@Tg?dY,%D&n,73$dXRqPg:/;0&,o.(jO\6K-s]U`cp<YaZk5Y-VfQ,p'srV%_&A9UeL@HoH3Vt/I/<AYnTe%?1S^V@QVSoj+dRCj"T[;?mh'l:c)9m1d7^oOkW]0=s(YQ:Z^n#G4><[:0t=.hq.B-gY'>.F/+W8*%J%I0e)R[UPJ%#/>j-#jj5,+l[irrUu2ke/iih]m24iGqL'Y&FZ'F2s8B4fdu[BUP9OY'GR;^TliK/C:GR;hoUSJf\t*W]hl&&YNP%@Qa+LYr%X<OXPXiB%qm7$oDH5nkFb@EtAd<fU!5A9u4ZHULk%bW'er`>Pq7Qn4>@-*!=WWD*cF5:-;inMYTbd[Y'IQr#sDUNG;n]%C:/qodE2b$^.Uc';PeiTj%V^3DTc^QJA/g!P'h#W\%n&=QT[":Q]VP@hdu4Gfl:X%Po>5ZP_WV#TQu82celpKo#FP*f.+b9"UF*j%iA'lN>s+f(L(gj!eirifNJ_(b$GZ4e;c"O#1RR`E:mcnWr*]9jklot0ggH_o9!!f[qTR:#CHd4),s<+C]U-4cGks1D:!XDMJP<eY%4T4E.jXIDP]O)*po['M`o52[_#c7-*EV/(%"+*(YTjkiMA7sCW0HC7HqKSIPcDRj2>1V9\<L1h<ApE3U]p]JbcL'afM@P`^is4rA%Di2ul!+Ra/Q>t78(bgaFSoWetO7B..Z#fEdGr6CE/ZumA40\FH9t+F2O"RTfo]a8dpfTbZ+N#])'Kj*>4*U*<mqQ+g6eb6IW\Sm!%lG$UIQ1t?$fD-&^atXleCL@02UO8RE>j!]Gd$!)]92JKkjS'sTM2S"_Ff?2$?1WZR&oQfHOi8?2B_]3XAfC&f1&l$_r%KN4(KgPf%7:aET*FCtl!J9sIO%bN(@#(:G3P/2RH$G]pXr!T*c'pYG-D0Y:LY;,dWTWu_.i0;TB5@Y$rk/1rD0+ij,-8Wi^Q*j\X.2;:6U8)0%4Mu8+J#oREirP+,8,14b%5\1'RZ.He'H$C6:g'4k6>prIAG94AN:3AXQnPY7r53((/+nDld_P.i#@UP@Um?P%4T5]#!MQ,I7e6bZ%'tWluqo=LIW5E<;#HpQ'+eLYmrX(rY9Bhfq1#A_#SC0\h[Dj8C$P4'K"pWKFG9N>^:9f$XIt4XDk6+dI*9S:8geU*lg@VkP!6c(;%RPRt$q^JIo>=c1Ddk:],%@Q[(V.8oeL\&;#o>*25KO:T6Y9(u]=c`H$>j=1b2C8B?#^UFt@(m=9;>+L=3^TSP^S?;ZaKC*Q>B?Yh%D#Ya'4aP/&rnm6DY[QbEit^m^O#-dYjAVo-q(;@YY-WC`g["<"0#P93ie(_`;Ecb=%!bL)5(FAk,I:goN[Ks"R7RB/5Idd&M=o+3%m)@WN,j``d9%eMSS\5=:iu=?fMds,&o@$AuaE]VB.>!">[gM-.4S8"K'Y"5f(5>J'U4>:_0+5PJo,um4N/R*fmjIb)16het$1hAE%mQ1lfZ3!mIW;m%(Z3e,&$g+6Og-l,O/(3i\>&];(RJUIg"5.2I@F;qT7t!u//;)cq1t2'edWt^\jmqI^N"18L-MX0lgb?GVFA$G;%OoKK_B"&n\I4*#(WYGUtnPsi5-]&23A9)>,1Yr?:'<4rd5;h"g&p5>G.nF/99:mY,i\'k,'R<6b,)tB9]t0Ct6>Gq:',SF8c`m48%jLYG=a@E#ATf])0[.st/<dn(`n&&9SHC>.Gd-\:aYa_GpQ_9O,V8s+R8ta$\-R;9'6#Xga*D\p]?"?A5p];4jcOD.>g*]GXW&L&[%4kr>Mm&K1s\%\SV]]-CrU8WTt:!qhH/k_gB<$Qo)-VFUuh(mDpfpgII/_D_a1SqR3CBWBb"5BR_B@r:6?^+_gL`Z_rdusBpFhg&Q%M7B3]Gm@%6M\BWmi>j7#';.`hs)QX5H4__h@+SB7,fcV6q^K$+dBj.ZP%`jqcV`LqGA#P8O"YFTkg&#D!\h:j-T5@lqmfN(I>21b%]7o3id4.o$(^QFZ_mQfflC[S$iIZpA'U)p.6n9hESd$_?%%cmr@u@f-,hep/K^X?o>>#.#l>O%`"kEjE*EB=PW?%ai6_8K\]`HbQ%cYF+R&_c.ZZ$2r$FV\jFl$Mb*QAIK@(G0njE*>s0'^3]_i0*5p2k$ZBWIFZ@UH/3G/JV5%aYC&Fp?%YWfA]@*D[D'p&fpVGoC_k$%%ljAC8CO:F8j;,aRe_9+eH5'5QeSp3nX4VL&>XW]h(n@<UuUG2Gc_Z$f5!C8ft>3Q[%HUR70Dm``7Y[gK/q]C*"TKEb'@FdOj;%V%N8dkLb[fT')*NO?G8Al6Jr?@`G-Aq;j$1-l<rBCh_4G57Mj2=JVTrG>q.]n1&:pUK3^l('Y"<9@WMKY(pN_8Zeeu?fV4ck2Jc44)%/!][]I[EVZ"4ob2W57?,4o#h5JT&RhTK%HX]&\eaW:K[3b1LlX+/(im;3;3m:ZM;/@S\k4mRAR*'RQhdEli67W@67!hRsOP$6qFu%(F_fEV)/8kj:4^qJr`nS<>9e[$&:N0Z)=&;PPh;DMQWBJG-VuSZ(iXP5H4/Hd$'OGG[*F,2$#jt-5=FjC-o`+&LrZ$e\noW2mlUY%W!OT1bpWqg,9-^.%iD>E\;69I$+R;qTd]V6'8fuoN"j7&C''ER#t;+sRK,DW6Uft-qS<b2<F!r:Sn\>MjMU=3e5&O#hG6[r_71J$%59[!4LJ(WE<*[^RV##CWWDF:UWX7ld4OegH;A87Fks5+PWA(V0&%%t]c.7.8\kE2pOh?QN]AI8plmF&9!E\BVp(NUXJDQkbm3e^H%%bK\5'AuBN7VW"+9'3r-&J[a+B&9[TmFb9+C'&)0KC($32.98NS(g_0C-p&U@+0SA(Nkf-=fP^H<$X?[DulAL)El/j6;eJ!^DpiM%5q_u8lmF&9J^;7dm3cQo(M&%U.bmIr>-f'L-AnR]UaDbDk>;$^8PR:R:Nl1SoH_2"q[';efZcu54ROe9[(!o0DPtQ5`_<>0$$;fY%JbBb?RSZ:kfX@F)QMcNl:Io6;i?D27.2o:I,"$^TNH=]+!oBAcW;VCF-;_Y:JbBaT@5';=gJ:@TJr`].;&"Jjh-[D%N.#5Iqhb:$%"H[*ugJ:@T6HIi&M#E!+)!I<=m3a/:iK,RIdeQTDC`iocq>%spU=`C=3*_6n:Io4eaJs69rIe,elMX*;-h,/,cR&s>6C*O4g:J6L%"H$Ya21a&9%^_jie-(Zl5L=jG;A39eC:j0Qfa)8?F[Pj$:@[QO*1'%[-R:S.E#ig\@8?C^]:Y27"H8/@@6Y?sHAd!%l6d5o21=k2%*Fp9,_Z9Y$Fq$j).R/rrd-6&0>tX1oA.Q_2npBjL+)LrXc#h2s@ZcEJqYH3s6VfWGbp@k8>,H="o<0&-"%M036ZiWfJaY?&!]rEO%o"H)"2q>B4Oa<P#=Jr>?7$!!+_\&OmSh),ge-d7_C>kNEp4;YC"8_E^lV02KMT,*],0X;!5Au_.BOtGYI@J!%\WQajdP@9i4p?#o%5*jCIs/$13qI5t!DDH)Pd@K`RA.Xbl)hO3D/qQ%m98\j\lZ83MnfeL#S?+tU2\ZU,P,dM[rc5U1F6T!sf0Z$R3+fk-ol[uL$soYV%@EAF1`*NRTOEj6gHag\b?dbP_Sk4*a]V?]amOs'QbFJkB"13([jQ#;SZ+6&e"Rid#Qec;O`=^T+G[bfA<RU4ahpXNq9%_T+[@T]L%N3'4(T;&M-4\_G+?%l3H\#54f>Q8gBlAT&a:ZXn"K2G"P=c.VV;^-C`OJ.$[0at_`_AMba'V*67%L\>D2cBDpHB+S/7o%Z3WW1\G%$^5=M>+!knit+%JTLp;m^dcMkA#q&Kn<S\*q*GFP&!$f1(g-Hs"rqu-\;jSHrYh)-5UG84JK;^Wo*Y)pjFORTJa>(pHn,\uT'ppN%_IX%2[8&d?n<F"jH]_6=3,Ctp'EQE4(hV'H6J$d)jD*l]Ku.1pHr[cO1odff+*26SAaUe,G%1%SI4fsrXp:VkH<e*>Z]fW>]RT$Y%\!8lhS_[[8F?V>$Z1I>S+[T7F)lC8CEeQIdI$1)uZi/Sucj'/'l`$bn9\%a%@;8V<kGCVg/o6c9"H699,_o#aeGD#Tdj3(ccE*Hq%,Y]?KeOW"Hdj;$^Snda$?NkbZ8Wn2W,X/?EcXf>q5h2ugF#`ZSP5g!f@YXK$?bS^@Nn@h@Ta8IrDfEhG`UQC5YM/3XPl;;[+1#FV%Ic!^?p.Q:Lme&c,Dm!\H0WDpY/Z.^*i2Lq<$pUdG]8_,$A.h?Q`BS6JVQtKEO89)E=5-EhCq]8Nlo(<+e=!n^r6q6bE1DJrWBJ]%%W$+bd),oeG<UWt@WMk;.9Ec>;C,YhQlQW(=648/iLk=7'IUJ<W^?gX/oMQn_HCFhe2h#KQoqaUq4=;sWK%HrM8gJs.+":&gXnDXa%,WT,,La",O6J&nsCL:-cm4"'Sf07DeZT\1[b^HkVmN\Bik*l6FQ%Hl)*9$\RXat`I=HK.\[8ejP"Y;[IFUi??9jbcbn#J;A,)s=j%kW2sQGPB75cP=+FWG62<BeI)idGK$85mV^3;p=_efkuM<Qr:SPA8>(kDt]f&(UVmiKp'4M@:?<Ram"-K:T>,]0XadcWo[9MZi[:h%/L5)"eZOqc;+.25\W`6]5`;U=McZ3]b8%/%c:CkcYE$ekK&1NrSS:WGITrgoV_<Qh5IsbNQ+pNBH5VpiEMQpRbIou_"*8nP(PDFZ%\Yn#$(V07X/2RZ@fJbll[+_*ZThAp2kJF:RVt7Ec56`&ucPin#a7#1@*1S^:41>I_do-\@c?=6kj3=jec2+2G/gU31gf`PO,97%6%p'\$R'"jM/bfcpW'b#BpM(#FpjNlL102Bh,fQhc6p<-&L6hCR"Q\I0d+9IcRq#):(0_HVU$9PAS!2>t?29,!V^[dTA0pKd"n(8E2%V@^MK!#dk[*(CVK!oRBr^inMr?0('Y4(gL#*h:1oWrSc4o9Q`i8!U&Q<C4;Q@)GMskI]jPLQE0nYR6c#+lk7T>2BJj`f2s)hKoWX%$[p%/$Nq$i7"9Id)c55P(oCoTQ15eM>26h4)tpi8.!jA2TpOaSTeoVg#L"Nl6(&!N4r#U&`Y'K1?)q3-:AOr\`qM]oZW[!*ggO7/%!un*BUMa7:1il,<cOf6In9YsVDl3[MHou&DA*/(kUj(`e&dBf%E5h9RY0Cq2gbIIY2(8H//Fe$Zh<!,BUf2nLHqMb=%O##++qL%(%D+(<<RF`(1"a[?45Sb.+0na^tMI]:f`hXd1n#'fdnQ3++p?@J8go3W<Nq]_2EPWlPjc^<<M;p5:n3E_bE6G:BfWLg<nD;f*VC*Y]%H#FoE4*+=KKhB&'iY2$r!=D=lR)49m0.-mpWgk*9*DZnd$n4/@gC>qm,oiZGr2J2,=.H@9j%`uY1?Nt_YsrjDX5!<:b;RuF688)m%@n-G%<ubPP9/().DWF=*-bM/tA$HWHpRMoCL/H/$Y`Uc4&]f=O*=;(TO80H[T>)!LT,3$0<.HHmoo]TqUlt]2C8"MNeY95G1`2oa%<s?qQs!_&ET>!k(I,P<?a_l?.HKaNBpK+:8q_(ajIGo2A0oml^/=5ch@E^["G<b[fIes/$Ms=[H+F`]6REL$_JQ?K5AF[dfI51X'%:\NAof79gF`UI0VT;%b<9e.u<LJdQ&NsaYp(mOY#SrBU"-&@[?@b[B]&AO,i_&T@of`cL,1GL$2;NcDsM79:aLTh)q0-oQP31!25%NY`8GgcN_lo*c$kru:[!mPdG)9U;PHHg.7fUHp>48.@@S\TjT0li>qVjQQ;a,d+O)lU7cd9E+gpiu()'pKrKa#<MI<VgZk")ON]/%5<Q8kqC4c'e:Z1_+m<LZs-&/YHU]$$IVAB3]2gLQ03X]i-?/;j`^ct#nXOTM[9YfdoS.JL."q'I(+.ClW)0MB<2)JKcaQ$(n,BF]%Q.r52<;3nnTtQ*:Fenm1:kZp)MeLsk`X(qm:(%`<j9)H'E:7ZPKCdQG7iYZ64<&DPSAf.b4?`uZ]KLqgYI,ml]m3.;h4=),]]14q%&DK,s,Mp$CR&V88X;?_lp=*6&k*Kus.RZ;5jCH<mbOK'ZBWS\WBGFo,/LXgHa-)OaitD>kEk$:RSI<_@huA=hIk$Ub#3pB[7Fi,]%+;uREShm[PcG6le'L?B/]G#KVF+m5-o8-q'@,;\3iOtM9BsI8[^290fJY=HXXiAQ4))Ru.i[&W>AjlcJ9XH#pj4^9[^P*n^+Z>[q%iTGgmG2Yb'"l+rES&4"69j2V]OW1=k1cKkPnf!8kDK`4(kCLTEYS?Oiq.(dr*CS`Qm,O6.X#g04B^H$-<E5iGOe'8.9ORk^0>Roh%a#_%4BP/?L=^7_jU,&\t\SHZDpd3VJEXNpe;g8,-/E7c#jf.QCC(5Kn.AmQoP\Bop&;>Kq=Ch[h'EW9fl9#**q._Bl^S-e9A"nOe%#:#?+i(pCR.78A%TXpD^OLL/SG`!=5bVsm,+e*i&NS.)'o2@\^:l&?2(K1C%d,9J1Lk<J'E+t\%itY$dKC@sAgY#LH+1e3U)S172%0QQsZce6R@_nU4\^O>\if$a*SC_)mCD)[V)0]bP8Bf<2l$AdFAaR\iT''82+;:**0K1=Oj?jXSmYiWm$mTM<BEm:oWi?5O]%<Sbe%*UIau@gVHs$[BN=Ri!Q-K7P=rMK7O/)i^h]!X]SbVOKgd,KaC'f#r8P*%AfaKh-l$k?poH^dGh=*rLOW<Vlk6635_)0<[7G2W1i?%iq0U$%:r`g_Y%B;BRW(Vgp0%D:"GLH3+9+c?eUu3A\f@uC9<t5f)>gCF68BFUS]P;mR#]ufLl%VB6`+#M^R[Abq*'#d^0r^d)tkQ%ZC%O><t?=i2M`+(B*7,=2rd-;YX;.L]GZL!8I)t:[GDIk!"uQ23#o!V(8XD8m5@iofCc[^W5>W#HVG()I29j)Qhq5JS:d-A57Srb%,<uDRJ#\s<'#rsC$s+`5jMm==0ZgG#s38;,'m)l[@!X[4&aoBJ%nHZI'1"F*ci,@L.i03L)fjrFEq7#SASI?#W<T9-PdCi?@#r.9%q67b-;CKsEOpBV2RkR!C0'XLM?36gFcQY[VR@1+SHeDlmc?\@aEV@'>p9Y$9:?k;,0!\k,:bp;BhWo8(2*dG++ts6,kKoqC5)6n.%Z%?q]pUR3g3f0HjPNdi_&4.Hk9p-&GTlUUX(-+7HZ<XGQa,C'c=61^gN_<CRet7O[E$K4Lq:'ZQlrAk5KBn5PT?BTOeIVsJ8no5C%H]O/c7QGesN<iRNlM!&RZ=0c6B-0=\k+`]@2Gj/)9:dmn6\qTo.A#;O;p6(jlFN2`ZNuC_?A.?p8hcn8I)+Q$pHN8V]KPBc`HmSs%;)\1RZ=\)c_Hb5GaBmn1SHlNJ't0-iG>tdq@"?)GK\_OC^`a#A4@h!ck8BI$bmKMZ%O)bQo-\(i><efH>J)[%;Z?XR(^")\K8#eo%GrW;_hS*&to!6@h@]5DbITK5=pMmI)1NCUNQH*X>?K!qO+L^c?T/lp!\f!aSM:@UI>P$np@KA64'Zjm=X;[h$$UZ>50QZ20+,g%r%"ninir%P-J84!!KTF4@/M)+r$)/ED03#aaP!JT>"mZr"^P8Q!5#I;tt/P-=O-(1h\Zup+u[LO;U/S_Nsg$jFf@fHLi*isdr"tDnt%A.`5_p[bMMpsDKV9X9<TUWqI-GLKQ-Aqq@iW+Q5HW*9<:)#=$0WF1<l!@&csh8*c.TKSUZ?7ETebW^6@bIi)>0\!<K*lgH,a].94%Mu8aZc]=9nAjkhD':9ss9[s"tNQGIgm`Pjr5nNF=3cb!=(I)I!1SFV[M@;2dlD(KXq:eQ`,(GXH:.mRX($s6!9A5k.U_IW4EIB2-%%U?U<MR,@ln_\W6^P]VuA!RDl.6&M=:I<LO?:bp_3L6HDhIsQJ#;smuD:u-dg:#Er0EsBEF2j`lD7"`I[+L?76TH=[,kou)pa<r9%F3eE.pm$c3GlWtff`"CcQI!t?Wq=u`4%ar#;uA(\ie_0Rh-bZf'SYQ/G:fXg:#Fkp]2q:l7+]h!dC1Mmhd=`(YZmds&!\^$B%KF;%dpT@B]SkQAdh;@+7VOKnIXQM]Ed+EDVb64L)OU6I.ZW0M36uW\KH+9mYl/7lk:G$)FV+A4-d9hJ`EW,6?KOcal&tZU*ga']D$cC^%V3FBqPM.jclG*;5m'R/NI3%C6)@h;CpJtLb3e3bSIn6%(5f:-b(IS0O*k?hsqlj9'UNgi0coq]a^,(r<#^0ms<.>6HhW]pr;*t\e%Y7n/ld]Jal/UL11aomsZ_hDID_b_D7/nF>`UIf2/k:?N$;fd!r"MHjnQciX5ielPJ^k.8P=eh'tZ,^J%?8#lnh7K/;-pP#7XlFBj%2?dL')8#PR^VQD@.+5i@JXZI`\Vr7QFP\Y4QTYRo9JpH@=P,)`Z_?Zcbg:f@EY*$`s*3.;+*k#j3YSu3S+"`c<j2a"bC0;\a<l?d%r+9k\Sd!L5OdU3p`97(;7WBX<d=Y>'k9";X<b/tMc&YWsW!=U5n`EGt/j;?.YA+"T&U!sO`pV`rX09n!;D7\V?Fc!RD/bZfQa@5=%WO65DlTgQ#VQJlt@;:&fb0*V#/Kf7V@fsVXn+6lca#%LW8-jXE,VCq8@C"*qH,.=./#T,S&PQR6K=,XJ#U]$CKDg^Z&IeD9ZAjU+%!<;3Wm1$l``AIH,Wd"=WN)9>9?Z8SKAcdS]Y;e[4I`n[*E-;m45+O",cG+Z%iMs;7OL[*t\*P]0N0;_(h9WjtX[='aFO]9.D2*Cm%$+o+kWtXT;.I_U)/d0Yd:,LWm+65N/K9#%#8pCeB=`Q>hRgQjj+&<,IR>ks0QR)&;Sg+=f%9euf2';3l*np-&Mgo`(!srIO"`>4W%P07atqYtQF:p\5.Mrqbj.6`n)JX:s#7S)A78?5ibG6S84W(s!TSd!9r/DAFZfT37#C*(lHG<0!)%SpKkID1=c?>5(p3F.eu2&ZWu%oc>PM'!u%X7(ic>hCs;._tR?D?1E_J*[2_5WEIt:1PN`W%B`(TWetG4K&SA9)bJ!#!\q!2Oh$M!Oup4&GSLb9h_>rTB3Q0;EGBqo%g"G\#b:L2b!62ri`;qco#rq_?353U%$<Wk'NJD!+GDmM)^@LHfqe<U:f4@D;UrfspXe8=hfZC8%?83)@D"OP!fLbUn<,lEP'g:5>%Jf?>tB,$0E+5(Q9;ssG\G!d^PYA[3LU(C!i&5(&7FHcPceUf6X67FRa,7G9e?nIad2j@2Xp(3!^!\=OS&kH3r>\sFJ8qKl3GgD1L%0P-<:lN^AR-DfDm*1=a!p?t%4hE.H0hZUrtZie8!DY\i(/rb]R*`3dm;R`!MGY/s>,K<[!R7qJ]BYJReg\*tBKQHP-R(".qK:$sQ%V.fO)p[`<Kl`+8iN]J:kCl,)Y(]S0g;hA%dM5\q/d>GCNIT:.ZBMEbc2<-,o`8,kSQ1AG]B.nG]D-R%M;<V5;F"Ef'=UCt\0mIk/%.=nX$-I*e./b6`BgS'k3^.!-IXlo1Q%AqW#l1sIr$;f>C"\Ioiao-i@_%)AL#c5K6=7-2i$BYK;_3>(rPRa&A?qQ#I9!Yd)h-`j,%:eI6Pb>L#?5q"$C'=SZL8J"KCdkCS&;\GJhb'\Va"B-d:.I"03:IPjf\WsX:^L0Zc:eJQ![Lc,(+DIOoD_[WB+I!N*pZ95U&//t?%R$&SVdc_[=+IM_,G)gAfR$,5fk2TidMm6:V"61d29>QhqTp.fD=q.>S#c0BOo,@m4&if/Uf=ne'8qKl3R.7t$0I9"5V8Hk)R$&SV%dc%JO9M#dfM:TDK?qQ#I9&:Jq&kkmTmY'73/I#,dKMhjX@l9X:+I#bhVH=,$,RC4\mMW8@9M#dfWIOV6'MM(08dS\+)GE^68dVnm%`F);i:eGg?YI.b1!cq];_H@/Aj?k@nJcLd,8j]"S0:7nFPS1qb=::uOOL.*`54cUT"JM%k=^V'Wp')*3;d).N2A&XYD`C6Vb1?>-%fa^-,_n$FRNi]]&9M#df$!OSP9PM>hD^(R3^elIdqg/NG&qj0:YY-/GV6glk_$<mOKMnO\^t+)d#sp']0$D(q"JM(LSe6msPQ^DL%LWa]l,s`rU_dtiqOs#u%NP;f.8qKl3G`l_pR$&SV;YBD,>VIHi.&GuFh)h!e+I#b>"2Ab.,sc>IJ+@J'R$&SV'%enhJgokWJl#'f%S"D*rOs#u%h9'7[R$,89EEEaKe.8C/aY4Zq@hs\G%tdCO2k;13.9k&<A9&o^?s<%]n\]qCd1-Oq3O9Jp8J"K#CeLhFP^E3$pB[WA%6TnW_VBcGD['33WZI/;3.EtA,li^6")#b$2_3>(rPfQ($/XV\DPg\Nr*)&r^mc<gN[Lu8*&5%eTV6s]'Jl#'pbAo9_5q"&Oo32X#%1jSf+B.tVt-mat@<eDh-67Hmg[&%/&Jl#'pbAo9_5q&R[Z8!:l=YQ,-;Usng(JIC38dVg*=q%8RY]Ur:K.0ef.Bf]88g4r$r)SG!%D8db"S'I/HQ*'TsGn2-e?s7C0*jcS[0+XmIqScVl,s`rU6a.[+&#LWHo32Nu,RC57R4#*?;\Fa]Rbf@X##c.ZBZ[#2X<a]3IBaP]%8J"M)@k!fVVBkX_JiRF#R$&SV'#q^k%&P9UV1]mYMntV\Tp1(;<eDh-67Kar_J1bNg"EFV?qQ#\<LgV=;D9C_-mc+;XTh]:KMnN`%%BK_3&qj-i-WYo:P[Gk_HYYeuV;14j1RO=JPS/:5/-]#cfK*c8oLoHfDM:u+*nA>"\S\GP;qcgnrYM+MPN@Dq2e?[[4"hnM@hs\G%#sp)GYKp*#-%WPN@6L!@+I!LYbZZ\H5q"&L0$.!t9#FYC93t43s'd:AOs#ueY`p[A;\Jj@+gTs60I9"5-*m?K"]H%e;PN!J[9uUY%:eGu5XMnR>Jl#((\&VZ+,s`q*3odO^9M#df$!*nQ?qQ#I8r$&%38QT]Os#ueYkfmR;\Fa]_Rsgj_3F'Xe4LK"['R"&kZdZ:>J0FT%Nh^Meo*h08g2Q[)iO\D49ukp^SmHa`PmTGr4L$qtUJde9*J\W6.bp7B#6"U_8qib_E>V3B_G,k==PFj]$9+duDeZDM;IQ[e>R,7J%.bp9`AAiX]V.,$9>R,7J.X"QJX4#!lFDtT'G>p'IPd9XsFuh)fDFtaaGlU@2_G,l,ijLou'lHVh@I/2;.bp89N2#-g8qi`ImTpF^%W)U8U"fos]8#='sa`G[D8#='sM(L%.*L2M^*3OoR.MZhne/',qAVBs>P*XRf")2HMUI0pcq*0^+hA;phj*XKrADHCh;aO0P*>+S5%IPb&HXmLnc(,E7d85B!LaO![#;5kX5M3'/E6r`Hl;o1L?4!H0Ij!c!,79&Qm;o4_14!H0I-]#[;Le@9+pO+58ohAhL9bEZenWYH2%XUPl-q@5t?q/(qde;pLq<hBg5Q2:$8;AL0d&XE4_PRqD97ms2&4Jfr,:IM%.4Jd#'Ut(8nrHLr!(!q\k9)X!,iMLOo&XE4_PkNo)%D3UPgqkih`8<ido),W5TXlnSVVr)Gn*[#Hsiq-GCEUIiGrRj*5IRRu7fGFC$b)Zbqju=(?78goTpY]B)Dc6o7-l]Dh=%Olj3%Um+%,mAamW1/4.hkkq]=GuPIrAFiW#.l.]3>r3ShsgPT0BfmE$%hX.fE:teC?MBpQ/p<\I581!LOP]oI]MYCZ25:W^p3j2hkkq]8i/R`%o\1)L)d;9K6,-+p^\K9ko?_DS^i.kl]qF8[JD])%'K^6\EOb^qI[^Cf.rLXuLOP]oIe,K:f]!%a#(?r*i8r>Sc]0HI%KT8DU$o$/%!U:63FB%c`[XjSFR#ZW]AdtEYAbgIW.RPN3aL6e&)W(I7f^$8rASp-[6`%\3@p#S,BNtA;qaTbiG(iq2#$&N#Am8B6Al'fE.G5G:%W>S[WgW9]7mTUM!DVK<kigj<Z^$Zi@9)HIT21mCSW6PKPpFR>N"((^2X`<+4.Q)i.iCp[3XAUjQ;MGiLi-!pbmFrFXW>SYA@n1AD%X4.QX`&C?g^WaCSEZI0!2LG\>#C@H1;=8&_G*HN/:3+W?ar6<mbHZ6bc[5%$*e48Rd[@B$1K@e!mI$A$+[M2a,!5j;"KS%"W[p.R%s3l#Gpg.P:X.0NsS3,69.\D.f:PpsrR-A;H`>OlZ2tQBm/Z>tpnbjB-npUPYn_KP[RJX0d.'eed*30$Qk_mT,1*]o_</80,^sBT`%ACWSOQJ')(Vh-D]%a>Pc3>GLRlYMPBK.<"s@:ladWM%Cu)eq:8b,GWAjFj$,XR[IIar/&GVh-D-@244r<]S\nX7!7MLK.(Q<V!lJ%$<B0P,iC7e#-47$WiVSg)8I`"Jh#N43PPm$S-l9d4#B<,j]#'Qc?8a5Yf`r<9(osD$<Hs58B;[c.]7kJIjs:MDjSm<N"o`cmnY#c%o@pLlWM%DE6SjBq:43\']t3"f,X.Q""MY#=1k2+/F`WUX.X0)J1@pslo^;agTeC9\b:I%d;]YR`JY*OUEiQR!1H%$kj]#'Q?q=l4%X.0Nsr%/?!0;kdc@c.0kRbubaRDCAN*g!p8_CDI8.Q)8A^T714YR8,UX.8IHPuhckYf`r<b.Z<dfmT;]=F+TaX.0Ns`;;;G=QNLY%jhJs(1TC2p)5h*NX.0Ns9R>f:@$OYVQ)*rp%TYS)<&kVMikM@i6nH[.@$OYVQ)OTR\A'd<=QNLYAW7Cq!N^>,K/e'gO,hLk,o$KY%pYTADDgrL&3>GNhhrR_b10U\/q;6n?j;3)bYf`pTHgJq*)T9V7i9K9l!N^;kW)D^;)8Rf#Jh$ML+k^]qSR'b)r/H"`L_ZHuXE(=p%Q?;3@_()@7.Kqgp,?X&,:h?cK3!3:E<)=kjYg3_Y3>GN8&_s^E<DE]t@[<Fu.]7kJk75`J<]Lmoq%'dmmU;AZ6'[7"R2N)H.]=!T%jI*h6Vh-C\'l[chb,M&Vhm=g2@Qg8Fe.^_64e:d)FNs[8^ac7>]?/V_)d)4Y.S]7F<]Tgr:m(E4^adrcbbjn(gbpD2Io5u&kO&)k%6=3jI8GW*o"07sWYfF6Q*sQ^2@k^$X1P8\&"]Z`J@V2jeWM%C>@n?;mq"kk:he#^[S)0Lb_()?dB^o*J$s#A'<;ClEd]_f5V!hl<%Yf`r<b.0kqKN1dTH,9bI1K`a<:aKYqRDCANJh$#3R2rAL.]@AXflH5/^SPi@N*qoL6']'dp&.A=Dom#X,?X&,;!"9#MS%#2=X;X&%^a^:"j^15&W)?H,1P/V%"]`E'2D\IsIoMKt=*%@cZ@40'jo*Z+Fq:XDqEf"VJ,(*ej]!+7ma-G'qQe-[G5o=W/D1kmVcK,=$`n@u%W"OpSRDC@cJ0F`ZU,r;oqmK."j]#&&lshi(<DE]tVQY"uYf`r<b.VO]]?=321H%$kj]#&fMWL68XE(=l;)1qm#Z`r#<69<N=huSc%JgutlB/[!:WQ*%\[erj%j]#&fXiE@&=QNLYjY,<`I_2ORbmcN4=QNLYjW5t1HRPnhX(;2fX>5>V?S#HL!*.I<4?H[,<)@._7\9jc%EpA8_n(Z&oPuBu6a:-Y8.fVBOFt_C\k@P%$S1:;mX8Ga\?WbsRpLSNPb,Gkte?5?Z&D'[s@(sZn"fn.#W^I<.RDCA&$UaL^e\A$#%^<O1apY;G[_CDI8.T'\hB!BFWTZZ/o/GX(l.MG]k2R(?'TLtOHAd,6*C@eM]mk]Jo:'FXl2TO$LPuBu6oSUm'<r&r)j\0'I;aH\U%QJ')(Vh-Du`RZuClJM*GbR@N4'8tl,X+*bHh:]RnccV"0!33+\Lh6XfS-l9dXS)KqYf`pUU<*6gJlPPL<R)W-Yf^$#IN)=u\#SQ%%KiLm5dC<B2Ii8*GC-]uS<]QH"F,0JQZJUp%R'W7-$<B/%<6:<OXC.<?_iX4#<]S]6[k7=@G@6\76'YnZQk?E?.]@CUcjX?J;aH\\%d?=JD<]LmoR<%*-#$*`!</L?\B!BFW2G]`P7^1%7TZVrRRglH>.]<stF_1iYr!1pGpL'7&f&k<9J,\ZN5A(a`a6NDhi4"1ZZOgHJ%s1erD>i7;"_fAbIi:$-L4$U^MIItfLHbKI4k<4s0Yo.A$'cQ6Fode?PY3s9pII$FSYGMr4<e]@S]cWk/ZE$qkFBd&/lhu/f;gtW2%@t16MI$EN(=Q+FPZ*3kfmVc@'=jE,G\e5d.^\Z8p3P9jXh>POiOaem>d%k8.o>3`lEV,H<GI(WO%hA(-7"94)iGB+=h)q[B#Q\[3%6Hcq"e*N7<?m!"&J$F?MEW5%E%e#Hs:\8S/*4tc'_GmgFT"9C>pgBCHYMGuBr7#07Qp9/o=SoCogkidKS<7=<J&1*WnD\Yt#joU^%B9$f@>Hpi=qpRE\&@FZ)0JB&ArqGE8IOC'#N]A<_kh_rGZY5BdImQ3IV=uA7'-!Dhn9+`?hCFk]EoT%MHa#BXk7)A&YC!raVL#qp%&pj?>fde3:KK]8&e[>D)bC_`E3.DV*'moQ6krIbeZ";@k#KVCE/nYCWjRqAW:=A1OZflef*dY<qU0ThQi@I^-FIArg"k%9`3bJtQ%fXaor%\(miYP2"jbgCV^0:M!HB@h;LBtDV0[@dHGlV7DeZI]GCfHqA5+C34.li#-nDpE(SGeNW^VOJf:pj1Z,3V@s7Is_^Im.npU%_WgXH+dV6V_V*-$T@8_jNQtXpi8MSWBRNC0g&K+0hZjo]Ylm^XI!']0c-;S6"GFM[i6c,7>^mGhcP?'Bo",Q@s5Lg;P3SVLWtuS%%^'5eR%F')+<n+T++MkcTE"(7QU*FXE8%3q_rpYT9=uhgb*uc7PDJdY%M9DiT,-OaZr$[lm[oc:.IJ*0n(C5+P/0p1[Hqfs\fU%SI%V,6iqD=d,AKseNcT0E:#17>+?]ZHkDgPZ<SP5B7s.G^i(qKtnA3Tt*?J5_?W*\Y9Xr\,+]Ki,JZfkb[)qJlCsj."K7F7nVEjLd]s%B6En/dAPU5O"W/(d9^*$ID=NdjO0*U?f#=Mq<)`U8Fm:3N%UoAQQuJ*^jIr`O[&I"'NoVXjO5F<59Ju3OSAAZZHHO!LBA1T54c0V%Ui3!iA&de?3IPE%kL8NC<u):t[PJlbn].KLpHO.mq971*-Y\_3rhs*n.ermTH6H')I(AhA^rHgoqP-m[:=D@Lm-';d$5cU*a\Mt4%](DE`k"6kH!d@DUg%aso?g]5AjL=OIqk]&M.tD`'*j7m.5?=2gfc+7H>bK:(DkXVsLg*:7`<0j@f:H7$;T'A]'5bk?g[^**OC\+c%0u2tcbaV^OnQ_!Yk]n]ASs)4>rb3f44T#OFkZZSV4oVg-k4tboM`:NsGI+%6jgONZFBNpr^@:(ZrJ(bn:]@o5FSkU)/i2NNmGFI/%BWo`7YH8W9_1VT^oS8Fo.R16%Ngr6%MB;Wk$`br3%mD<pkkGVW,UR@%h8;l):MrBVoD[pTM]?Jp50`[La)\'.dL!D7X%R*?*-n*W%7fI"on`d<>/&sk:q%4*A]_QRe8`AJ9g6W0PC$[@Bn\*kac^pbUIVf6'VD_0jH(uPd,fJ]_R7.b22BJF"](G^Tl@n\nDIp;IpbeBR%n")XdrSmKkT.d(ripGIoV;&IthHtU+q<&.BQf7PU1V<5?p7psO]j.$;(W)q?(K^%7+6a&9Hi3-f]8%aT0#,1"rT+M%d)kBJYKn7:%mIeg&&;#onYCF=F'(>P+OZca92/>EW?_2L]RPX1k]"O<s>#\US6-]nk\m'NOPTtnT[/W>S.QrI:Fqf#7rH"ki!Z^lj]-&ls@EI8F%kha"2)]R]/'?Si2;7,3V=%D;':MZ<^=$cuGdsE;3S\=[f&mo)&G5B4uR1CQi%I^@>K;W'_s021gd\0=[rW[]<hMSLhM$)hdlRrcn%PAql:0!@K#C<JhK,p/aA*gcn[1ZR<>VtiEpO.Upnr+Hl?h9,#FoaB(^\,NsaXB;UjTAKPF2!OO3ba.VWoudk0/pt:<q.]Zid209U%Q\YR/!Z<=,ei21f$uBcbXQ]08K_`@SEV[qqPbV.YN/enV5Vu_n8?^"m".?;>"+<_,T@5T9p)?2G%p87fjXY8q4_X^Qpg.ld*#A"7%pis"c/$>rn58N+259@H&UlHPN@%0+Be`ZSOdCV?q+oGLU(oKRqEU.R@HX9>@mJL@0c5hKoF.OCeq,)Y:]s]Ksqs;4pIqL\'&"i93%k4Z+`_mjjS4lg;[rnQpBO8\nA-X@&u#=M.YLYrn1"<W[WD&tq>R"p8Vq8/K1e:$X>FKs#$q;g#b,V(F;>e9b&cOY+RDHpI-rdEnt%`P8"t'8t]BT9519Rd.p02U/u_=n]`K9EKf'6$g"%UeNGDK.XmSdt5>cKdY?S\TI5;Lt1Y+\,A9O+1Z%K2sG9Qb.utsNu,OEhtRV*%qBBgE_r^pR&Nn:Zjf?GYIQr&KiUIH5O2,*J,sK*C([N@'e0B#gNpk<nq0h'igs4^X)c)gP=!%<3/>+l`-Z=)!e_6>.mXP8sYGDc]%(;@t-@1N;,IJ)g+&#\q_5K)tSVRB.h,c[Bi=?Z5(Gd4p\lK=Y5gP<K_;kKIB2834"s82*7cG-o5!?Vp\e-F=5>+Ycir=R<Fi;L?]%q+oh'`Hs+j5GZre5;-5=SenF=EGXV+asjnfQeksqcIC$Z4r6Cir:&\(RtZ35#-fq\h&R;'hR\)SSui@lDI.[3oS53nD>h6@F"t[P%h[kPsmsR.]4*B`LVtFse^O=c0n9NoJ\MJ<)(9dB/rQjr@<kkc?hcp-<+3Rl,Ir;E=ritqa^/Kr604)1EcmA:,leOUEa2XW3\FBI\%UHb'J?%)T63Gb$g*3#\%RJ#$a5#7R)Fu7J2FG2mbRnlo^J!-kMRI@qP**N4;An071qX*&5f:O^EHLUZuV,u8e0.rjkgcn#ETmnaI%+*dO$Abk?IBA%+W\C%c5*1o^C/dOK3B(<g+)cmiYNSi%mQd7jc?ep%f&-DChfop=Lam.o5X618E^"nO:eljVjhd(46!a-i26N$HI%i@X(j*\MkhY]/k4.@[)ZF)#F.>[F)3lW4nZhnOAFnT&ksj7qia?!&*XhKa>8q:,S6c[S*f\MaVm&>/A!<f$KWXM,2-^HB3'Sh[S]%pRWs">l&\iplS"JK7C$Vs8Co!nhH^rF.+a)D(jVq36u5R4@3u>LU2fSqt&&.TA^RJH]!l1NT@as'9K;524@;ShPI;OT3aaYMrSi`%27DW.Suu/N<7E#F+7/Bn\I%I#rHbXO$#6APDEE9K5BWu'?kT,_>pI\olHAdWYGZ.j+"f2G<Lk^S07>n]Gid3$jcbV3Snq]1AR$-P%I.GB(RmhN==5JE(3mnIV*G(VQ]q&fBmZ3WWVpB:!f1mBMW7X8$^\%HWOjb,un(tW?T`Z<RnfHRlqRH7n2`UqN:Zi4Y^Ae!&"nj@D%SUPh^b7u@1kt:+/KDk_^laG%_J$'i<qeSIBpRFY$>>J!GSNOUb,tX3Sj0(.ADOuL'oSN4SHd>3Y:uI(4qR!ud05TMCE]_D?n#qdP%"bXs==O:Y`Ufr+5Y?L[_FYb_$Plm5Y#&)/1hV\e9([jN^IU_9jLUTc0H&LRGYH0q`,QIB%4R=Ncon)%L4`or3_&"I4nO94e\JB(h%Q<"H*UoM3-n][hH//\*2_aeWXF;.CDbMSYi*^=gUaZVJbS"BXP:[,d#X%0<T\l1NMH87^T>_'Mo4,@Ncp!E$+S_SQjfPrYs'`26<%pI1ikn/oq]?9*9$YD51f0NXT:4h;Xo^B]7R=UB@k=$?qV+FT]?'@%]1XLgS7h_/mf^\0]u/Iub8rTW[kg[i`%d-=ChRNRFijkESF%I"2\g%o;(qra*h?mr**!LRTgciTHbO>s!SU#tF4+ZPs_,XY.?DGRLq@7Q'Ohrt<IM37)j[:L1a4d0^lY"H]mtQ."-"ID&<EmM6n,%jlP)qYMNVGF5^cB^!+f\J,R%NnD]4Ek>1O\-;S[R`j*KeDr7a<X?<Jc:Vs^k,XkrA*;0,QZ$DlNDb59TI^Un]cSfu6!D?jQT,6+f%52Mej.9)4;g>AJYSA4N1/9YZUI]r14;Io"@JaXRX/=kelG=Ss0)JTXZR;B8lRWPkPf2hMkc:[**'2MYi*PQeZ?"%DNhf<[o^ARQi%DZpk,C=:Dm%u1TFD6Ba1V?8hp?!V_^s-[\VpC=jOT$j%`K\;gnFQ!h&lAM-#&\>\q2B7(Nq"aKcY=3$$J%/[P_HWG-Y;_fO4MCJ(%cdq+h)mNC3YAC_erOd/[p^X(Im128_:h6@@RjRSuHC,L5^##8Q&6"b3E2!#h2?pIZ9#G.f*8Z2;lj^H(jJb?cOHT?XH2k_B!FY,P%=7Lbmi"&o`TD89E-N6:1>dWtnT=Fmao)<-+%t(FO0\&.3Tptg6fu1r+Bjj6=D#@9[>L'->)lj>c$dZc@+A_LTS%lE)]6rlb]uW.Q%mhb0q>djI&h"\GLFlD(X_:Zl5`t/&Krqq0=2NcKRSMZat/9""nR*=IZa]'Pa:<[W#bo(:aDss8ma005KlT\a_Wl$H1AG'&/Gr,J<%]dd?5WkUL()=3)N9D_<.428"EoBXf51t7Z*.0SZ.iOc!P*'aIJMs]NeX3([8i[UFI0;!U]TZ]6EdI:,0j'6oCn7M4^L&G4td)#fe%]fXfuZUZ!LMO3b;lBL7[+!1BJ(Zjo!M:9LR:u>Hhp[I+GPulqfgS/41D>.3\E0&T%P"M)?&+h_E]3_"P5qgg<G:RSA]mDP\3tn6P%(X>-m6+[&XUIV\mp[Q1uEt@/8>QCe^rQ<M(Y;b[9^%Zs:anh(9q:0kBB]6&mqZGU[-i\R#<9M5s:W*22if/^DTD=r72NgUi>r_e/%mISb5YHC)oqQTb]e]OB9O,H]:KOiE4m-;JikO1!NqW%24phBEgZS>]GqN`b<E(^h]/b>Uofn\N4m(jcO5e=XLinjQ2MDFdEi@d7,%?bae;(UmOJ[kQI&A33ApHTGqVpO5Bd-V5O3E*:9.cD2,L@Qse2QKZYqB34!`gCOao)sFA#Q^?=uIlW'ukj?6>HWONpiXZ@#>:k?Y%^n/l9r,BH0fjlf2=%TUqj"<7c*BRg8/2\;&p=G3M),^CI_]=##9H`g.5e>m@LjM@X$h,`T@?6am/`6AVeoD/'>:7a`Cf$%3omC*H%cDIX5@Z>AP]A@u5G4+a+Xc&`3o'+@'\eI*s077%fYY_%$*,!>!d59\6k'KAb]g%u<Z%!dihqi=VmYo],RL>)As)I+HK2(%/4Y^;f%jk5LdS5Ec8:Xh.K^:EoZ@\r_bDd2PYZ+AM9?KiP]SA0%-+'3c\=.3REe(2Ylm8hNh>ks_OY5dHV9jMJiI9FS<WU$[XE-5X(rJ*$J%^9#.=(G6_8St?NhRUgEB8>e[7jO]DX]c'a:b/,6rS1O[LMrqF74DO%\NnM<_T(ZeTp)j-XjmD)0B'Idp;h$=2lDgI@e#tkq^UF!u%rQ=2>;32='-K4Z:d[*]N?<t4Wq7SbahY*:BCio=3]_D[cn&if#qcCLiBM7@JS^erda*$#Lf2l=I7:.'/BAT9Up1ea?Btp:sO/3YC%g^SI&V&-c:=.%/iIkIoW0#**1i\lk8Ccd*sCtpB)kLLD?qQCtQnY^i-kq9X+0DbUm=6C!I<7&[uqM^DCF=6Chcf8k+qNEmYFb:s&%4+Ag<g:Y$`DqpnAhnHXrO4C_58U>ja+%TT7I[?6c9dOPj:(YtR[@dJ!P.9.c-0j$?WC1m09B##4P.pt$]$[M8P+)t?DQ^]u[RF*1%itM&cT"`U#H:\HsI7R/e'tOq5ht$CGKEDJ>SYJ-\j"F28OQq#bagOdES\8%=KfA4hH[0#Xo_4PRa:EH*jnOh;H_fZV36(8OU8tXf%"r\DCgR!q=T@Em`m*OGa>PYm0C>["KeF0$u:1<tGT?o*\?[YnO/X&AfZI?$-s3ja3`)M19H.paGNblCJAGOsoVTSaA9kEV[ZY)1M%,QoImM!I]_q;_YNpG6`+?;Esp*FJ8[]QPR"^\W@+P3*5\;,=s[2uc,W35L!rOebeIDu;C_aiV#OW7/5)9]sm-8O>b?>nFF8(NJ]U%ej!M3s8;8&]9)`2*DLqYcX6Xfl(<.mq1Cbi&+],+Ug3,SVbJ7D(23A1*'J?$l),Oca9t(XkKO6u#,QNnVu9nGGjI<Vr_AXuH#rK#%1YM`]a3Hg%l,ZS(4m]O8\V3pN-[tsQS,2B7h;@%^HLlPdf?D/`2QI(Z4]:SIL>1a^H9Pom=-G"SVmT2?G1o+XlLdBj.`p.`:[Qo9%_pYU]maT1JFS"g,+$Z;Sm/,]!/D\Fs51ncf>SdseI\V@pPAAkLVe8"0^ifQtLLCu&cF3<rnG&EQAbrXX?X>%2d/?=9Mg(f[s06*@%?2pDOjsa'qD.k^3Yfq?um!P1X2qoS2N!%(K*H/AV[$cSfrA*5GO(bl16bC4)m1F1>qq*OjApZq8,tPtXim%1Q2Ua@f?bi/u&T(!M%Cc?UF4eg2_%X8e7ZTY&-@(FtphJA6d1\eq4JN)=.g.[)2Ii3158$j/l[_'>Em1F2)CY90RCl`6ckkf]3\c"#3D!+bf;t4IH7%;S-%G(Va.,MEP]bV&BsHUO>(5.D!5fcJOQF1]>Zm1F1>NGfVXZTY&-n5\lXDmi0Cg"`9,iQ_(P2OiGAhJA6d1Xc&AK/_O0g'g18?/X!$%Lc/2R4+7?O2AL(PL5sZH^43]aq45NgboJi5/U,frr;;-VroMT)`eVlUYQ&P>gK_KhrhlOk_>fMT^>9:qN;)rTO4L]tF%>):f_G8Z%]g')HmIT,,Q_tV6rE0'gp;_rjc`b+^hnIQQH?=T&rfuSnVt\`UBD*>hC:]b]S,RLD!4J4^iQJcLh]i$fU]1qu)^qO;\p^K,JHH[J%HLegWDm!ICr,2I_jkk93Cjl2qr9lF_F'YN/7f#@Ga&Vts^T$IIp:5V'pH<r]m<aU[m`][3GB73MOe_dp4l"#HVVc+9B!@oWE-&1O%n+qLcf?KAMj8[`c\1a'?kV`#F.MTj[M0tN.TD/6^B<DbgIdkAG)nJ:e\:3<^[CQ*@Blp`$Z1IkDW6NXm/)?^A18S\%D4if`O6F)&%bStK1V2no"Z4T<Co60Iee'$$l^:3K3Aq')UCo0&\erB7D6<QN;NkOD[Z@[Os7$F"l\nFgmO+msNhi:2kl$M;_gWqs"qj+mDhAZBq%>".\R(0eeZ/1K$tc5#maK-rTeD=5[(ck0Jq]"nPRS$B=^6U)Z%2f_j(_a+/)RXukRM]J/rC)O.imt_H`Y_L!>o*VFM:/7#hLPZ4*%MmC7!45"oJR726D6hCOFS"[QYIoT#`DVGcHWJ#mKI[$]Nlr:[X3:FGpkcs,$5@AQtI+7/[Ko.9nZ@RL,.'L>,qW^n2$$F,-W^9bJ%k9SZa'n%1eNH9q:JNoBJR.$u5RiG3!)Ri.f"7NJ9,O]h@cC;Yn3k^[SVRGE!k)c)JC5X6->A%GZqfVP]`1\'pNl2PHRsFBd7m;UU%-M1/>YQK@ZAJs"[HRJdUBEgE&rB/KUa*'R0D`Sk`4g-(_dsj:J3MN@.m5dj([GF$;k"D:Io.SRjq)ko&]LT?D>u.A1TY&)ZMsggd%EHEG7R;la=Bnm`-f0K)P8DaD+&ZIqsDR4u'WQjC;VJe9/0r?:9#F[R/`op[Vc-5oO/r)J+rYCt`l#_27Z\gTNNB:9m>s_'=)?5j0%ZE`8oh'16T9KO6M*76[.;H)e!;A<utk!ijL-.IBdWHG_nOZI@@>U?R/GhY^Wp/ji^BZGPKS,$s/"1H7uO6BoG2S'ZUbY2lKMjE,g%'l3uSh2U4@GnX*q&WD0E\^IHo*:R0&B/Fe?l0%7TOX!k\US_qeX/A_YBU*2:WD1I/[N:djRT]p'FY63(nVusp[NG%+?@m>_6i8VO%o+F!6o*ou`$qFONX<Ml;X3JOrY2j:SpG.#_bEKQSH\A:L"N0-g868"`"E\lnnD#q?Y#"Li\m=Psp3hC5>o2U/)Y#^X>7<Ite7Qir%2rL$EZaeYU[TAt0@sUhlBPC-4XOQCV&6#&p7r;Pk<EVcI;m[.1"7;EBk=;8c%aB7JAm%;po6RtN6Ppa<4Pgl92!_+=nnRK(Pp^-D%c+?Z?k4.M=a::5AeH9-K8<_F*MTA7k*k@8B)Nt$Z]4'VU2tU5klU$aL7en[ak):Clc'Yj[oQ`Fq/UbC:891[O8R\<KEbRX/X,F]_%f93?p\g4d3qWLt(I;2BtT_$mXHo-ciIFF1I#%u],kR7uN@T#8Q-FU;/<Sa(J>sn%WQ<HaV/BO)*c5"bALF7:tpLg;R0;=^q0YRm-%In&FSa82d;F7T0e&;.eHr]%sJ`,?lhH7QJGL^OB&kAOX4"DT_;s-2*pi^?!l5X?I]3Z^jQ_)J\=&hN61iO2E#[2I"X.uU'thDk>1%Kd>#(h&nE*Ftc:(P],_Ar00(')<_'1]7Sg4/[Pq`(m=#\Cs.KGmS<0Op;Z`Hcepi++<&?0A4SKG#*O0PoA+(&R2F^Le<]N!Zpd$W%gt$cM)@]7b]n:Q's'\'?[:h@DQdH>lh6$Oa/Ffe2*1d5`c>3$8U$/h.-#+GYYLrL>*<iZHpB-m.Fm/AlH+L-SG$_aopb(%fp%*o5%<P+:>:T_*bVta0P<W"B>.6^Pq#Cf$lV]XmpURtX$;t'r"1a-Xj(co`22pd4f!/:%SGL!(oi4\51lN/0:JHgm]4S0X72A8t-#m&Q,%N?TA+Ialrre'X-+OjXi^Z'i(r]>4%_;J,d(NLj,^%.cNYc)*R4TUV&Bg2qCV[[Z5h^S7-`Q4A@^a-JjAs03NsA`S;d\Tp<^Q9;?_%?Qr9eH#bjJ7s*Kf#>O!;EY[e,hOGOAUN@?_.686dWG+%Gim_KDrhN&1%gR_/dS,Cl*GUHA\f3O"9^[_U?qP>n[C$\(c%3'e3`Ma'%?72O[P!C9eM(Es@>l](!nT5ol5-]2]Or!#G?659;CW8sZY+@?S_O<)\=jK=6e<aKQM.NX.LGE<"<["O7FHZ7namar)*upg\'3V]>%2BE_X=5I;1+2(AjS9M'%p[gYl)8_.hL^M1@jsZRe_(?sMT$8%!&tYSA7%j'u4!+>*?"r]=Y+5A]+#-46R^rp=daQAIj$;sYe#aEm%2kuK<b[Q@!Ps,2B[&&cc/Uk)".S;q5g+o8Z8srb#YE5Zl4LlF/ps=bL3(.)CZ_S\lj5W_0o!2S:iVV-R6QU2SEFCno8^S=8/iMA_%7B\\-Yu!mRo*ke[6"i%p^(U;7P<hk7UBfKA;d7;;CVq#:]$<rMc4Kd'(@nEGGJ&sI$J\<BqC.uo&LUZSUYQj;`E@qj-Tb\HAQl[I%ia?!]kQR/C>V2`C;p3GGBt!)J2>].WRa%&._0Z=N)[j2Q#Xl0\F=krGpY9@da/bt(M'WH8#$j6g/IDHYoLckBr[41kZoQ1A[F"Ka%[\&gjBZ;j@$dH&#!KElP[#deUe+(7UbCD$L858_fqR.?W?K9buLf]4EB6EI&dDXG!f,<<qU@_BB/]0$7P\Cm($@.NNPFE`docX,R%nR7G%?5#iF.5VKMD_`?/:\lT1HsbU%)=U9;fF,gnPsaq*'-2qb7cI+;42]#Kg0UR]OJLbDB!ZNT-H2Acj'&8g"tb+GlOllg$L(k=%U$ai;kW4;:e;P4-;>8>J/CY1tYN\Cn.4EG%<55_B2-smPR^V]\OdB4`D'Q8H@7Z+W#]rE=1MI]FHH4i(>@t\uC%,V+/J3"VRTNLH%i4*9kXCW%Q[F"I,j`o+p.=E?(Z^tKY+ji4=4^R7p!N9X`Ehs#M9LPdN2=]PomfM'5f8/i0j`8m]"gQ@Q$/s]jEE82:Jp]J6p=cPu%Y`=un;!0?VW`3P9DI^1=2=rp'e4>I5m-'PZ/OlMaQ-W0Ri3,ANB*Jgba>p.a/LZ.<*2F62..k0m!*9j"I+3c&""bc:l969?Fnn#f%5kOcgNmDp@NESjii1FS<n/)U#0',J[2:7VMRekmnVAHBVT!44Ymn),+BZ82pag0oadBr(CC4UX]`J$FLi`2kVnoKuY@]b2q)uO1&%K3/3W?6PhMC,7SIVs",'Yf9,Com>)%WQb\.\]oj]gDi\//Z9,98b&%-i.3f7pL>2tIY"<"Tl7sr!H[o#Zk3/SQ<D>)A]I+5Q";pQ%r3FFu-1[oP%0!bEoPbiLH#.-\6mgO(d5F93DUqXqWO8&>'MllQMKab8`T,(R&>oQqOhKtcSJBIGFE7@'30#2epE2\F&Ttc'+d(JJ%POrHF6*.?Ig^HY??2?1$C3(C'-+H!0D#;&i+[Tucc]I(PD!>M;HHTg(lPKDD3eka7?e.M5Gt9i@]"C)4*N4EV/8<@Ro_uI?@UAme%*p88A;MG&4g3&X/C;"1@`Kr?`ia8BTnTf.>pdW/Ej$;#H6Q\HsqfJ[^2YK9b`&L5@7<u6LVB\hLgHl0d5Hu_MjL-+*L9sAgdEfqc%8D=]K"qV*WGi/4Il'\_[2',H;E_Y)08\C38.XA^0Fk61?HE:A#9%U\1gJ@R=YCJHgAiMh)GbCO/M/DTc=4C(dZ/%@>W;Z!rlZe[F%FkY!O8tP&5jDKca2Mq^W*[>Lo-At9#87!Pc,7@VThnn-49YY6[*PN*?5(436OA8ISHOP>4_'`AB)$f-]b+`5,f#'+Mg>P*FAbp"B%f\`f,!h3#A7j8=4Gni$hH^gIMS5S1$SjD/8FYJVBC_T]eU5bF372stId#DcHW`rW*)Qn%Tc<<50LoUs@^(GX;XMqGu_qt3r4+.Wf%!e*kmB:]M9*cYqi\"KrX%eqJ-XNMQK4q(-9]@9<.P.'57^?nF'`YmM>LPsuGN`N$R2A0PX&C9Fb0oO&=Zo2%j[J=g`RmB^UD82I!%EZ%[>k+S1Zo'^5sYNZ_43WHOh6hMtqXlC/)e7gH-.X@<&gGX\DC-`83Ojrg5+7Tu[WfN'%P.E]74rJlQT10K0^MMq>h$QlXlZ5uE%=T!11i\DTaT*UOSkjB5FZ$)l-UDMrj)9RbcUF5E7gV8p%Mmg<rLo6FXjbH63B785:RQ)<Y4dHb6QC\]>+6siV+I2I-/+o`?=^i8K%ntA`Z\Q-_N4ItQG5X(hH6?e.99o9Kl5(G$_mNB;I/#!D7OC?'^%5@(ib=`?kCKSM8qGR2S[>?1Ed_CSj0S!A02:tctTGOFD^%-3S%Wo:$aCsB=&(Rt?2O@Pau)2?Y,Q=31.5T>PWOQ1GtDBrCnUf?AO)a2801G9.t4ZiQlIFL`L[;4>jqj$9oi@7po[#03a4N6F(h2jdO%%KKL=KGG2+_W?aC'o208g5MGN4ZhXWK.(IiciTk$iA:1Do0jT\Ih@E:De!Mh!Pe9&c`n(Vp2\%;AhZ/^$LC9[`#]ls@AV0L7?nHP%Ba*.!q'E]cJL=:M!^)sL*A30CUaLki(qR>RNS4Hi\]kb%^UhiS>\-Hs[PG"KVt`?a&%ju?kC\db(Sn<ec-iu.U=M*lb3%_4H7^6o%?Au0$:Z3rn)r87(..\Yq)=Nih:/=$[K\5%am>"p#p$I!G*9CY4e%urhGaca,gt`A,b;(1iNT,]2M2-/KkniH@d,T95[9(gT;eK2C%X428X9U'i<[9m3V*NjFZ:0Y81aAZ@#[MukLUkeOg7ac;pR((1SUW;UQ/mlC>m6_19ga7cl*h%TInP`Yb7+C@-#shdfCf(DG"->C[%A7SU*f&qB_%G-I8TUE2\Qb4LP0N\p[as-&E@jEMWTPjlcU\d'^Vt=qIK:.R!ko6DDUSX!RA^<TCM^[E2>0ClB-Y:lO\jDqHnDm=u%#*aA![4C-EG6V`am#Z;A@Qr3eG>\"<)#0FBXtB/^P7Gi5-p>d$3VS]%SsjsA76c`CBKC:hHsT::;rcrLbgXsr$3DR!1pJ3nV6WcS%[?uu(2T17L<1QRAE.-(Xd=%87!GStC?k!o/8HWi[5Vrl)[8U45)6%SJbZ<CrBWB:HjL?<;8GU*+$u:CW\B/S"k#A^1]bbU39L)QB%,('qTpQ4/reCKJtMDha#e"N,17[(<CJ8s^uDq](0C<"m9(N@l?40=k<C/'g\D>[\AWFZo+ktD:>(g+)5IPBmDmFL=NjH%[ZdRO>o%Z(]Lh4%@``Fd.>t\Rdb>PqoK$?7&HhH#bj^#o_mHMf_/I,%02VMg4e4[jASIKEtK9@#Q(F%uP5F&J5c_=ZXYJN[D0=:S5-V5=Vne%!0DuJ"E!suYPi,N''?$N8%[-k;c)Vqnb%L,.J+)A+HLORP][E-)$+1QdSJ>Qp4g<!G!%,nKk=ZNlKD\M+,kC@>IBL>:T_*bVtcG<%ebmV_Bg,>\LS-_"Ife,[7E%!e]aYui/ct0"iHO4iJqXTP9ej)ONI`;c4N5shQm"8A]M#7j`Xt4L&k4h&o32$ROthi\[LUp4a4!`*%O+I3e'A)2A&55Jp!stu6IS+Ial`TVF4.a\.GrXS=6YrY@&jfQ]LWs:tTisqQ=-m.3.pT(&<p!EQ$BM[`KLjU&En-4uV=OWD[:CN"%QnD^X<qK;^^c4]]FJ<kU)rDEElN`pV8I,>gUi$_qR@[6k7mi[2]%H^4@_-Hs1N^:J$")kl\(QgF7SiXWX!*k^\dj&I@OrpQYc[/V%Y>[;"?`0clQeFuj)B/J1Wp0;fFWIks?#LaentjW9q,cg]I,;:R8Lb:M&g'#ik@ajAfVTn8fLA!GN/OI.DIb[[S`L>r2p>;ZC3n`B%%hq2-XgUmk]8,J_9qCa-VAJJ$Z#>?u8;0i=RF'uCB"2!@$L5+hddnra;j0.fHdE?_YV>BL1oQ*k<=MC^H8P#B)4OU()K:p&UIhY[%ao^m*KahV1b,dpq@d,/qfks1/+CbjB^e<?=4lu`pY0SL0C5Rt,lZrR_;\RtZN6gj@raefmRK?le&K%H4CaOm=3(d-,H/J64J/a;Z%/1>8L#f\:;Lo*q+9URN3IBa/o+.7H+"G_#8@]qkiD,__h$21Rb_bCi?-Al!$B777N?94AEjcL5nnu8Uiau!ge:9n..[3=5a$m:G!%c('=C^nm&Ld_S=D+^KrfJDVu:3>g?R)s&35MmA7!G,Yu`il+$6[\;mA=uoO#\,C,tiiDT/k,`Lam1\2\Ok1gI/B`f_)7ZZc/6dG7%q/eig.M4#*L4aR):!<t-,_UD2?115Sd&X,Dl>#X0Pq."2b.UE=ipu/J80A3)JT/!SIRb*jVM%&s+Q:9C`t+ER0um:/i%:(I#86/N%UiWu\`#O0`LBP(1@G[fg-m6ScT30W^&F[4P&(D,!Rk<+KH8jjZ.cdj#`2=qb"d!7Ir=mj/K==H3&nPS)%VG99X<oe;r1RhWg)PiZ%$)L^/Bc0Ta,gWIbQ3l%,S_OFS#7T:/i^Jm\jRE;C,ID$-LISWkUrCET`/r\4@LiBEDaal9n7k6mKO`@%3PNHn-Z,Xu%W+EQl:a8Z%J9PI:XOBKGO>)\e*e8Y:QoL@s!PmTSm1::S%_>l/:UCuLMGr,%CI0o[($]b^8,d4.7.""k>DK7QWRFo1($[90\*X@6rQoiK!]NDo%]8<1SNk'u<3K?D"(g6/F\LBhK#FI"Q)$K%s/cf@1bqQHF+U&SiNl,pH^[ON1hU2]`;)8d*EJ#@&l2&Wl8lRIJW&7"iT0oL\..s?L%H?Bj9TuMt"_A^rBj![4(Kdq?D48rBV]_3etX!:UkPkcf0$<<@bPAD&+'?4]1cn"Q1)@(7eY\9fVo`EtsI?6&7N"cUGl\LMX@R*d<%dQE,n4A[<:R3+JpRX8E`]X2f1:9sSgcc5XT*=q^Fm$i8^qI:677A15](F+^BX91r/0rq07[*PTgOEfDV4e*<mIPWR'r%NS8o";nC%l"/@nFh)Y-b*FfdAm_E2Z[$RQ6meSq*F9c!C)q(H*6H!X:fDeh6pokJ4CgG$\5-sXs5o(m"[(.]ol0)^'"3`WYq4kTp;9;5:7OGk%E1PVdoX'$d03@`@;-]c0C)-4^Lu/QLd/aj+\f[Fn(?%Aj490FI`$[E\2l$Ea7:1g0$m1s]e:)PRFhGSW19KPB+]!0)@P`7a/F-dJ%]D";_NOB)nNs![Y[i,+(2@c0ARiTFgC]Uk$i]p3.4k_)an_mG(\_Fn9)t<bX`jT*<<Jii-.j5XM>*sUs_-%KCk]9?NL34@d"X9VA%9;j)cNufh^&^]P]W[cs*;tCq&ClN;qK*VH"ZsH8i=-d'F;d:d#C@5[(1m]S66_q03=CQGa^e>$-%E>/V'9GkWk6Mo[h&C95[.=#r%3f-&r:SJ]Am3o5R!Zr*K(GV'mp'U$+BO':&EIqXd.DsPam,SeZZh@k*?dmNto/Ze.YCRc7ks^aRim)X!^h)HJdt>JQ'&#@Zp_=^q%i,=?U?SA,F;bPBQ.?9Wq(#oX@MSTu'^`S[0kt]8<7`4-dU.\GOFJ_NHd07Y.6'7/?K%jlVU_-s%n8e*T+MgA1`XprBD8odo92Dt\%=!@?]]F*2moCaA%XD.MlOXJ`P3Y8rgIL@**Dq]Z#@h>-g3$<0L=utjY_]&*I+Gob@8iO0317[>rSlIMK&>tmX\J\OL0Xt^,%j!cO%<?hpBNs:B.VF["=d.85M?6f]lqDVLlP4a#m7g&Q=;WsH7#)Q+/"Oa-X3>%dNiN*=1c)_1WZ)K/aB*9QhVAFf.Vt>d<PXs9JM^MD`%k/G^&9F@.8`*c<0,L$Zk<bj,>e5FJ/MBuibb.138ipYqlA>$)Y+q?lJNZ"cGTpLjtD9+tJ$.0`o#2;`u-af)rS&;EUjHIO?d"`%Z%Q-`?j,muiDoRgj)p?d*dnm!t&-]RU5W%6p0c^MM7AJl&-q[tR,JX<rPT)pkBE*Wh3<3p`shGY*>-#l1'U@_BB/]0$7jCpLC13o>1%PFI+TMNUqo6c"D1?Ac*)3BGrO#rRlTj\pUH%^P8p&M\CQA?utJ<j:]'_/dKh/tfu!QuX0+QL8NAP*q]?4H^^@,-O[1Dp9C/j['[P%!]]nhABLmjp7dp>m;oPsP]@/rTqFg-Aj/j@L^TXuTEDgQ&7.EJje\(R&+Xh";4/iOc3^)KrX!^Dm"J1i6r49O%FJ]r[]o>3Kr.Uc%*5G4dVFN;-PJlU@">p1[n@9Nj>l"H2N07,5p9A)/:]hU3VPA!?lc#^*VJ(Pl5n(Stn=FkGP=@*H#h=c,0I1p,'I5irbQhG#Kn_#8%Fk;D'o[56C0+V#B:hHbE.Pt.;:2l^V/<@[O,ognKa\Uqe$,&`2p)eO,iHTW8."2AJYK/VU2A-;eG9-4N7<jHJhZDJBi1.`>eFf^+%7dDnECPT78>uIRX`N<%[1WB;jQXPc@`^fQP2uS=N_4'm*C-PJ;S$baT+/3C.mRaOUp8cB=j&NP;Gq8bAI>Z:5gQ>di*6F!]^^"FL%gnH\IMb\qO]L`N&ATV"?]uBQXiJdRbM[#-/jJ/+5RSXq.1?-*(&:N<:'B`aZ?@o3AC#Rk_pjJiRJ-$=(S#h44Lb<K2/AUOg/k,E2%d:h4HS!Xo(98N&*3%LEQRRNHiC9_>4`KWKeia!a'F*M^QYWpsXS0\^GoB8'pWA<i,L$U$lW7'aa>n/os*Q+,Mo[C58U[aj"0@HoS%5q_.ZL]V-116A\-o(TD9hSG\s(1KQbN6-h\KT#Mk^![AS"GW_bE,^`i\R-88<JGp')*?a'Ua'3Cc7l8p'<qp>-Me_8$J</8$C(`c%Z!E,[3SM%I$)c>Eo/9eIGYIg6fTFG\g4J^t9>sJ\9n!m/3p=X6G9g54"L0YR/O_q?b\O"U0E*"@iING1jc8_T#6,"61"nZA-4D)]%A]bTVO.8V33o&!rFMO=_Z7sTk0\V]&_qIf).lFQT9CQ"1*eG!o[@to4b5n'QBN$CQ23+;@"7c`GKBO$U,(SEtKR&%Y0&`CSgLXp*%S*1b%('fbHTg3S\*:^!M%74_SJ3"l7&/[i^$N3NT6EDFj(h'"u(`L>9"9=r]G`'/$HQWpofRI^om<NR@,U$W;K\&MA'b.pSFHqkW%k@'',,f]%6$;dKH9E6-EO[_\TWl4#8=,p(#KJ@;)cs``>M&tK!_4[G185a78/4Me7pFIM)q2"#)ot5"IZP&p,P)JB$7%7h%iJ@!`%a>b@OP8+eNZ%F1@HUa>XSH4d#i)O1^P_Id#4;e-ZpIpH5GZ*_D#="6J%4JJI0FX_(B,6;1+;5V'+=SNdTRd<Q0s7t#qM^.)#`fmO%Ra+N(8k:iG7*Tf-R"0AlH,VLQiLk019Rr3H(5"1Y<X;!EjA)&>j#6*9*<-SVjkJLVne+@KVt^O"A>QS;%N",of=F/VO!9SaEsarI%UTf9U(5.R!$HC1:OPZt'A[ilXD[)>Jlr13-89n%i1REVa&l4]r8akfW\"NCRK9@a<c3+(Z2CX[#nqPt,BL39*P=-F^fX38.&od?M%_tCk*&P:niJ)U#qL6&T.oF:k8S8`G/PEKJn#h6O"IaY.7_1NAF0#n1spc\ko-S)Jkn>([Qe7&uT2+So,!=q^[ih-,a+]QQ>g3#l6%)\]Tt+N,E//Vri``H%I+M53fOmM"GE1C,S;PNWD">p(a.)g`/cJ;@_M.GCGUqik5QdPG%i"rsLoBRL38[j:\aA4!jod)K-14SMUf%4"XjbXE-a2m7WoO;ZLWqc7"H+%K`0,Jj2R@kALA,/Qn#a*DP+5j%tsJZnXh-6-;Q]gI>F>!(*T&&0#WV-+>'_+dN5W3*`i6WOL6o%C(DRDc8d"aSD#H5"u9h3)[JohW0'GI\p;)gAL#B;^o>B_=/Y^<$]UE2QS>Xi&P+`ngU0AY$8+.t61R\U>HYWF;6[U"a%1/,VDF>.%_Ep+5D6den-&O:\mOb'OER8>@VJSlE"Q8OI9?^)M#m'<_F=G7j_rLu*;iW5q5Fpa3at]d*SQNeUGrb<bPR=?YI23Fb?kVQu5+dA#%kgF++5-lpY0P^D'"4/b8P$L9+!+;9]YKQ)LEmc:W%0TqD!o5N]76lft4F?0n#tQ?mH%O33'+jsfi7;pC"Xr5Zb:'i&5Y_B;5L,U%%^anhBVm"*jCGi@R?_JX=9TJD<%CfFbR9d@d"6bui]3O1.6cERfUtkGb=@c%'ob%Be(*p@SGqfBe]RB(3?BtT7RiKHG!!UZ\RNA-o%:m!A'+1s_nq*CdZZQ.?in-)S/fj",5#$Z2Unr*d2i-Mroo5bjeQQ27O<=[)A+A#talQ+o?:CP=JHiX(n9Pm?>#W.m7F;mY`#`Rj_%[;Z`SP/X<>+9@:Yr6lplcmLH3A0o\-J=kr2.C)`7e4Se+TZBY)[s<#l,Y9J-K4)HY^_OF/J`B?V$V3859DiCbhZ@gu-Qc,"o0R'n%^8Aib!;+d&6@G'M(hbpWi@+6E"2Z@`@>bufKsE8/HGiOt^6*(ld#I#nb_!$R3CK$g'`luTG8&V%&Z#A=jFAb3gVYM);T<7`*,WA2%`FtkHGY\`A3OF[:n"H$O8b%o7!Al+sAQBcJJ@n>p]D->%4YUY@LeBc7R]M0Z'MX:7rd:Z&7Y<Tj'U?$Hc_1^Zhjeg65GXBXV*gs$%8!C:IZ*&d=.h>ibaj=R=/g%$/B]p`q@TMp,.HQ,5S."\`lA"qlSC+X$`G$.I7Sja"/Bir?'OaOY`um+E!7!EVMchWrF!"o@.Q<G\%Qq/,Pdu`+1_h&VE3TGW$=8%1."sbhbX^]cU0_T6O@73#hh:-k.!K'*IFZe=?K25/]UE6m'A4q(#(i^/$5*[goON?e]l"(Dh4u%3&%OZ/5o+6plHh]upW;1CB@!-7G1HrbcpFWFR`^HA0]Lmq7kTo::T;1HXm3+=/JqVZpoAokYs(k=4+&IPT,%n-?#9W@Ft%T>eMJ\$mR%:WGeT]!`/m-5Um>hKfS>?E.eF`taJ3Wp?tRKM#?M]iG_<a:EF,IDJ3qq=G\e\4LMM]#p^qJL1!+#:+b7SqS=*K[f;gY6<@LqSkc=%i;:+"6u]6c7&gJBVRRiCX@4KCm*t>+V2IcoqFIo25cV>?9>_l$:[<oH_]phF^<<`j,4J8hhai_8J>ISR&Te#3NY2Qo."GJI1O-D`%66f\/KS*/8LpnSU.RD#mE<e">#1k\r81!pO&-e(l_@c?Iit>?IPR@Q(<h^A-nf8X*bXq)$-+BS8!5<:rhBA<E0_e*E7*;Ds<#jt6%ck9oS2m!ZSkodjeX5m2S[F7[O/u@Z1_Ch#%_W@e.ifm5;Mp;=mNkUX[]6Qs_<oe3%6j+cbH1,a$JY4L91Ia39M4ad*U"2gj0M!=?%?<)J/33n'.<].btJH73:"K5Vel;gLbUYfH_/uf@'^hitQ$5!-lS:%F'8T9^m?a%s.PEJEcXU@iC+C18=d]9BeAZVorPo6Vh=Qmn2%@j/OcQ=YVI""e>fMJ?R#eRo7_X4gbp?a\q,4&q%g>?Fnm]Z42#Q\1t(p2jKFHCrKI[K<7gVi:lEHto.&*9,!/+=CG6.+7j_m25)g%dH1r<ZBS'/IsoI]P.sk*@<";_F0WXDY?dQ3nsuGT3r.o7`h.Xn-lZ$tKrQFJ?WG8*PV9CYPfgJ,10s"R;-CF"%B9hFq4:U[Z@!Tm%X'36CQ0g/1m)h__Dgu??bAW%hpuRi1f`gtoUWeMh<Dll;r,sN!A:EL%aYH)5b-IEW94\)t0<-dkVH6h:;tJJ>Cp*R7=/O[KbUX'=%OTq&D[n$tN+C(]MAN2;?Lb^Y#Bgio6Mc<XBeOB71<p_(V.I20iVNd@Y#[PT?Sn0]hF"\`-ZHX1_:YG5q1oP6h7;>dcJKe>Kha%i@%Q&hUEX3)6@AQn3$.&*ncD%mRb\Nl$#X^!/@i`7[s,+'n49+g*IMl$dVb*>m>!p/r$MF7%E(%jo(O,=iR]hCk!;6HjleL6bad=.<q%X6<*s"]f`E``"eS:Ks=#]<d\Q2hdd,Tf)r(A;@&(AsV6.md_!dXLO>dI4t*>St0F^Oq.l#Er]el>MF:J)Xm+PHU>#/Y,*GYVd?08%[,LN7Ldim53"0L4A9!hoSNdWEi<>t7"p@X2o'n#nQba,aB,2S'b(0m5#@m!f+NXkSDskpDqj)GFb%stF'DN[O-jN>jD&G)M-296O%p1\l:5ld6@OJ_?F/:5!YKLWm93(T>l8_%5MkCg!kA89*u!uQGbJT()^^q;b\J]_j/MG5u3,!Y,gbam7MZ?V?gjp2"H5.aA\I`0,>%`//nd#J\)%)b<!DU'0idnLo+fO.\)$i.j$d9(a;X8.%L+?>d+/DmDg!drUO3Ok@TH!o8iac7K8/YU#<A]Ss+<l'"U09t"q\1=aCk%Nb#LG`FrtlM4WFEG6e#RU=*(f]MOHl`aa"L#aIC=dFOS$1H6n6U2BDIBmrOIQ5f^oq2)Q-N/>\oVVeuF!N/J_-d.MTI\oP*aBK]p%MSj4iAPr0dYm`TYOrC3f9.5=f(N3G?Qh5_t`WR?%RmC#%3<>bb'rL(G#O69NjA<Q1kedJP^Ur;YWP3;<!r=1`kO0@e!6-UhmlU/5%4DHLAC`QCIO%1Ok"A2JaO%7VR8Sh5k+':o,Z$5:hDR8,t9@C/bT!/9:8U<k#,b&/P,[olppJPAW`K[g1RR/V5<1AW,af2_-fm7db%#Fj9k[u#s?;TDosfcF296P`Di2DsQ41GEZd?@#WU'FW=.8/]B6TPWiFCH/i[g`n3aLQee4Qj^D-2?B(+L'6$MT2`/;q"c<h0TsK]%eerT=&S;MgZT<fMC1,B7LCegFbq-0Bl&cP`UqW'IMMXWI-mVVn"P#BeaYkro-I`;2.oIHE4?0V?qE%0LHHS6trer3V#IqDl[>DV1%&BC!;P]Y0[:3*Wu\'-aiIWLOod)4L@KtX-'eO<#\$n&ejpY[q5Ro;[q*Xo/l%iO;+YN[YOTl914.^,R?4XGq?ooN_,oK0?Q$*?nM%O'Q4`HL!?8[QScfFMk\hl93F^>+aifVp0"i9j=[]XU5L4\1)\H+1H+H_P@6556rR_j:=Q`2#2c;j;BLmRmNl6>:"T\cW5m/jg/el%02T2b^JL8TOq5atU'/DV\MW=)G!TKkIS,,B\"AgkbO*nPYZUb:KBa4TAatT*jWm4rkAUK=;j'M`0I'`4!Ui\oC84&C70W703+87q%i])KlQ#Y@\>n3$T+1We:.aT:F!&Q/kfW`1=BhuEihInFWFf?Pg.erfPdTO^DUgOoAE^Cj:>:N;KFCTui`GId@1fICMRo/>WT<tSW%6_e2LUc'0h*P8CO8ks#\Qhto'<XN]pFBK\S#$YDN&<.%><Tg1'KGA8[U6oaNM0Yl+*h_ZjeCJbj%a\j,$ZCdeE\P40;Y$]eEN$C7%6k!Iaqa@EDP+s/\oNrR@cTEpe!C:2"LK'98!PsCNZQ+00,Y6=-S!2Z"[1U=ra$,94F$;<hIn24L7gBt6nb=*Dm8K&%*pT>mr'`q2%W=kN'@Dc3_<tg`QV?Cs81hn9WUDG?Y:eCnd;FF1bl]?u[Ue3%,/*:A`WFC`&Cb5N]Rg4X8,]B-1#IIDGM_bS/Na-g2m(#HP<&)\p%0/%ik<*@=aSJKpPc/p#;@8aX)2J%3$_r!Jj,gq#n3[M$Iqhm!JP.(Th,6p6H)WXQ(53Mi6NY,%V/@ug&df:6!-9'l\"gG<?]G3qi%^K84!LQm3$LRAgj!Wnl-cU)])mJB(Y2K0:eN$iEMZ%N8V"M>dSpg;5o0+l!hL8-ne<<<\8*/>Nu-u$).EG%+K3^XmF+Jp?L?9L,b%!.`js//W>qG<'_Gi$'Bc`aElGPE[['Hs/)U*9IBn/3g`qIl(d\9;*"Z%hW9j3:L]?fq?2NYe6X1Z[E%?V1<f`NBcoC/*agdD]$sd%$]q]5E<=RQD:[kuDku7_0&ubq;VoHUqF/D`o6-&]L\obc]k"^JDaL<<;t3nY*nTLe,BcE5PVHWYN?aA6L545kV$mi()_jAlM8[C!%a)qDBb7mQtGH#I=?'#/\DH+P1W@?gn_jAeo,qOs)8`4qN@Sl/A$_4#FX!,U0#2]T>(EqOMF>`V>,r+a3@%*"FG<sXoVVEcY2EFFk%R+rs#j/8L_m&,6C>VOukTt`*4BS2L(L+^#H;&Fn;_dQ0E3S]Rg>]G\lN?N-?.5cPI%rp]3R-cl<9J)/?]nFer_\g>WN[pDQk/?p9%-/2jDZa?uaKs0j-AHS6Bc:A068ll'cg/f53ri*jeI=H26It-fH9iB-5eSjd>pHQFIg35m_om1]Xb3+!7s%EC[WT!9+X`+6+)pZ[P%$/co@s%!)Zs0t]$p`GM"Gk>l+loT60hkPt=QsncaJj#,Ob]'XC_m.&ea7;#+bKXuW42\>I%*.Z5FfbI^#3EUKZHV1m]/^+ULV=[O%6Tb9sn-=(2fY=:IGNNr8Mu8&;Ol[Z3I2MRI5)TEOccAhEeSN_[mSY!\lg4+M28RHf'dY;>^lnu#XHY!l:H*6pG:r]",ccd/E=FC`%BLY4nrBP^CLP%5*Ed=2k8P8&XWT55qX9?"u<H&._q'i$f&MU2rdJGL]4DHjc!J\=ZQJR'kJe`FT<Q?gNMl>Is@d@uu.:l]%]L&3%%o#+jRaXpccS?a6%=@g!A%O$`E>ki!=4^Y@ccNO=$7F!Kq'Ge?G*W(00`W1rgWbdjK"2>3T01%+lU\Z,9!'_BE4J[!625JM96?Z^:%l;2+S9q)q2i.4Ncbn[K_2kMinkg=cMhQLQ\&P,<LC?f%r&YW9'qPi$-nMF><]Tm]/36gF(S`'J2+K0=@(79@OhB.8:3-RRoXbuQQ%D<\+dOXu3U#'R0p)iPSb3N<!#q3ecIXgF'?V-91:,./A)`CesK4;d?AN[?S=U@PBsRBBElTRgcNFToiMmZ$l1&j"\;6f.)R%@-Hg%.[HjmFb4jPW.Pm/IE6[G\XQo@*_u;P:TG>!WRLd9g^!Y$OA/uc13*`L:#8>g=b?9ul'r06NIlCH)JdDA)tk4AS5G[%NtMp4aY^Qs%q4ed/f7>hY5.oB`a?Z=ZSEN!WkZKnXUDqVnA(in'GUQ(%jCF>X?^714q`;aLG"^s)4dol8201g`[PXd?.6lH9U%D8VQ/NXAA/gA;%>Tur7G@DAm21S/:jYfZ:c>tZdXP*O`"O<0P"LJWU-l'4TP3a(*2+Y,-q@[(K)aq2Z!reKD0uP1T2(M(p)e)KDYuS]0*4i8Lm5'?i%;V*.GWXMs0d7XgH[!AW<YIh>MqQ#Y=Eoer3W=u'm6_'DII_CKa9eFoG!bR-4AQHd]9Ut,3jA,3BKCnm]j[A1("SD(Hka.Ni`lgGu%>U`S2)]h/qDEtP>?D^HI52d=A3AhS2QW>Rg,/rE#lC95s\a!gKOV]mHaTXKM]RA)0?`<:STiWfH<lt!O"FASRN"hCi`p/aKW9<MG%%%F,rQR(8/)G36%ehWiV8XWZMY)oQ+4Ll-rrE)XO*g'SMY_<s3XA3j,Dk7eYJCD,!:?s8SETAPQjHr5P;T]_kT$-IDZ!STr60?U]%".+9Og4%lUkU2,NOA"(\dip$/A0<PT`A*j>l6;>HY>7A?ai^@Tp$tR/_t='<D5Q\U]WY5bjY/O!Lsf!L[LB($P,HjSbN*@a:[Wpm%"t9!J@nB)PHLscc?m@)R`#aPt42AuMfrH6),_T2<D^:rI&bB\"*#,[(+@rk29iRq$P+2`V?^D@oFhBD?=EC#LD@Is'N^=e[C4hGD%9pU?FUf&>&?X%M,WIA06GVbpe`DQ<@:5n?FI4h?Vd-E+Ye9^_2RP/qmc+crE@e8Yua<!X2ij;r8I"&-s!M.6P/RliP#5GkNjm8iI%`<"h&%P'qU8f);YF1mcHQ-=2]P:m-u-E1X\qLtG>8WDmh0"Xm%N]m2PTah:^glrT57$,BMKTY(NeIBipq#0JkGgf-:Ct)&(-=9Fm%%W*3BUDBR"Q,Tcn$<,HeKmAP<`T,(Ri#P-r5<"HG)E.e9OEKQ:6rV5c)3Am`$HtCCQUTB=8T5f/8C:^9\#L+@c?5sT7';[X1\ZJd%6tap4Z+)9H'nBqc'(V<K+ua)U\B'ic9ZmJs]lo#!"'-49b3dW</f"r*eDnBm1e^Tt9>9tO]O%*8bplW+B!H&4c&so#_mr0A_r-B"%&0\m>o(1\Q:._fa0KHFpL2K[\Qk+UCj?!qp;+lZbER5Ahb>1)6d9qAHXUQG,S3aK>1.]k)Xte<2l?I8*Z]SA7MfeSsQ2hPG?L$=J%WHH!,@af6-aMAX#eZTX%Ikr./DT6j+<!QoOT:uj&,Yk>Beku=Dop5+^?cp$=It^)*kK3[a9<M&nifKHhEXI0(JYX`''VV<o7:)33%*.q%(.K9f!)sJ\l6D,;jd5@js/nQLN!Xqs)i*M\#eoa*I+dm(OT.J<R3nUdfQ!P5WHuUK=(k_Tn<&[4.3i`J&>pF%^3iCatK@R>K%,aP6u.;McYb$*>?MC2t=`OeI.ipl)1A2RAm&J".>N(Hh,JpEG@;V"15N04kk!*C[[J2Tth2umr7o24i3k(e=oZX,PII4K?VNC]_M%+(4;\3ui:&`Nbhs0CU]sW^7b!Pt;b9\r;I/i$ePONqc]S89jT44'\dDfM'Jk92-?8=_q0$qP\P&OVC%.KUQbG0$W7pD3-j)B;hVk%OZ-E;$)mjHN^Y0.#b]#m4QYou+f6SU3PbM-,i'WJ:W=`"??2a5NAUpIohs=Ap$6W,8f\G`AdS=8dip\j8=E-t%lh6:HVg#Z$<[*2%!CAlu4"C3!3$Xp_XQ0t0k-^@jYbBB8kZ5$MdSHu(O/Mf:k>glljCp5BmKW-B9:@KO(^>T.NpWZH]OYFe&]5np(Qq\'njt#QQIndn%Gf:g!BeYh6D_$oMC#_$C/:._Y>P3Vg9'"Pa*bnm$,?s>bZ-*D)Kg&ls7D>ni?p'0:D;pE'rG8b[l1'^seo'W(S_^lC4sT&PZ]<I0%Xga7epep6Sr%%Cg5#:U%W3![?lL?@0k.Ab#'IsB$lb/Pkf&h:"!'Ek=&!TQg@o-AZ9>re"#%&O\6p>b#EBFE[]r?gNl=Y.qWZ'2/%OFiq0cN$R+?LcFDAb69G`mMa,QVcKL.)JN53ZO6UEGT4j][j<C;MbKLPS8_N7FZd/Z#r%FPVT@M?6N*!H#b]/<3QGCj-g+rMU(LM%?lFGg`=A`FMk*T-7:2"nL<CVtUips]NM2T<F\-C(PdA)"M4h1s=o4WRoiL2H3VC%RQc$+lR$#JU:^K!)OWlBPbJgY-;ip2Xg3uN<%<dH`o9_(u[=eV,?%b&r#aO08,<KqrI[:MJ>PqoK$?6N*aH#bjL9.8V\SX^10$*e`,[M8_XERf)0G,_JFS#.@"i$(sN8C8c0F`HA5%OUUs``:R.WXHr,fF':[`*j!XA1t*YM9T5O-4QI-:ORTgi'YP06*%ruj#b$36C2:hAE+^Q\AKe9rkn@4)=[qYQQ<T)BCrt-UmUbZ?%P:&:VDRr]Ll]Js%0j,6e-7[lq4uk3@q=HB0kju&gBQTJ#+BoboDB(msanaTNMGSiZpS$u/,%\md;MLq_aP+A![030>ifO26:H%OO%#3:UXD&/U07G%L")mf9R3*63W1/seZD,M%T;TJ"ofR("3eZGoQ%9IeKB$IEX`)R:cgB]M_F?,mS(NEieY=3no<1mibG["4.#CaXN%PY@9!G/s-2.O$Ji27rMM$N(-G/jJDlauRt#0S]6E$'jHNLc;3!2@LI9=31h;`mE:J!3$seDnDf<WIAHDPk&QK+=4SV\sh2(TW+Up%E[b>tC)+:K>&5(Yng)P\3L<=d*1krBCm:.;N?Ta-^5<b#DIFNj*-_+G$nQPTXKH^d228Ck5(-s4f#1*VP:QI%NH=Ig!0s*X[3$0"%@P_>_i21g,BN4)Oi]=[ObaPVfaqC@C-.T3B'r=M]*)B<j>fRJLe^."3(:;^s9q"&DU=Dn5rQ8%(Ga0Rt>0XWPSn@NR7`aa+;Q5up%qN@&g-VE*@W7)n-N+0rG$dWCN$qit9)W=j2dfrXgS:Yr9`_3[1gANao'q0S"Dpd<_35F",H)s[IaQ8f:)aYS4;b5KJZA><=YH^Ah%<(GcjA[J6Oc:MW:Am/(Mc!XcH&oP0]7d6h:>K3^K.FTd/(%N'&-hfrN#aUf@SIK`OTo!j+E+F[@Mdo#4W8JRK`b4&(@$6Y89@PZ>%@<2aEA;Ea'/fV.n+j[4c7ENiWL[22K?#6BLP_I41(%O>HJ]k-]<H,IV#],fZ%GG]A`Ai%CWSr.h]/S44P(gCh01T71AX%XY\Tp<V%Pru0\?D:3dG[`2aJjTkV:,hEY[2!lH0L4EZim!;!P4'+<BP`i):g=CEZI\-s+rm;qRL>^X-s%4tc\?oW2:%4u^HU7+;<'rZChN-U%JJ:OYQg1NJ7<H)q$@GHDW*=D&8T3"OKqs*]3N8hX(1bSG`8Rd&C'D"P?"k=]Ehpua3EM'<*8\+;=aV08(-..b0^Vc+GM#Nf26R99%`Tl(<R`_m=#>Gt7@^VSl<4coO.B#UV.mR8qS>ukC19E&2dmBVMVGOZ-Rk1FQioEeg]%`=LO>7`,+(F,$MDgMD.n(EcCVp_6)H=1J%%Am^H_@e_A@@a-qY^$%GL^MYT_ui6bU&c.RH%mXb'2ZmYq#eClabU4L'V9Dqa2c[TYpB7-Mpqa6"kSXO)jnEh[9o9DC7!med*5HU%Se_N>::Ir<ac$'dMf>7h_<GFAgg!*3Fe`aK_8+CJ,;idd8pr*N0;)b_`)cMQ.CkaN8*sC0S&\HDajW0'9B7s8T%K!<2<CX2&A[fU%DMm[2oZ>W1OW8r2i@`*,,`NZJH&Sg_\s..[b#Q6e-(CPD.2IbgBG+7<qPCuG4WHdJ]k_9"='q%?M)rqpR?9&+#UbI5f#18(e['?V%R$EHR%YrIlmA)'6UF=hi``]8uP^[ALBf*ek18eSdThR7d@NT-%Jr$WB<X-IXR),SEaHC5OfTo$\+gXui'hLEZ)H6_C59.G%'`]bH%U,6)_?]QoFL8Jc)Wa@.I7QhfO=a`:21,%6$kd0Y\kX5;p$&ktO^kEBLDnRE[D#-/kn(N``U_nJ8YELrfL-EDU]%F0\oMb)#j(Z6g%Gr>UWI@AKGqiP`8*0#YJOrdA^CiN]dC$812/(hd"IYthH&sL-\s#;D;#_M:2Hcj,>>Qr6EK!6qAji$6@7_'J1XM/n)351Y'FJDNf%ZV)dVgd$]Yp0j"+"m9Hic%VPX01:.Gh+UR8XbQ/<S8pE&0+iF<H$q0nWgAkEl.)Zi)Q'<E)s.HL%?Dn26CslM0l4('RGU]*j!^"_%Cr,R]`NXn7L-D)i3,oFsN40ZO.J7\fIk+(bZM&n3DQth&$jRbP!n`fAiuka(f+`AKFWLAG<T?M%MBh8=Nd%MfL;Z))[)8<ka=FUj%P.%in/sj^XMoa`H>17/R-$`D-\P/K)nAIN3k.kfPFdTjYj(8@jZ<E8:l,(bT85T5h9.9<YB`^:udjN1F'Uu6nC?9?.0`jDuPSQtP%g^VZ=_r7R/eY>moj_nIff9K../u'q@#^i/>le?khi44.n.o<Wc>2)qe,cd8<J8LTS`_`2H;^mG9MA0PJ2h8BVdi%)r1ONInimP:1%?A_rC[U]s6T<l+cj(0o2$]851L`4#%+GaXJ?ZRtceBkS%"Y!.+`=nn0l@c#eRGd[=>gL+t1N8cq2c(t.<%)6MJ/$E]/)WoZaA5[(%G=[7Ug^cs^L5GH1&7>(SZq(K5_ilDXBeQ"FRoSNuC9;b@c&k,jk$07:@IW>ILaNotX.o*@e+@O`QdZ>(@mp$j8mn8f8>>C$(][Gn%RPP:-c&In=><kns*@4?f!0ka;rBeeDX2aa/IArVM<OZMK661rTATqonKTh'NC[>pZ3>IY@k$c,Kc!W0eY#'2N*;6FHEs]UYf22=C%[?g=s:Wg&0FbMfoiQ7XP>AY("%MDPbGq.aR@EEZM1eejP,SKN!jFUB_X(dH<+<;2]Me@$T#WW\&g-i#SGDkkCIQf-UW1tM5Y2C\m%Ue^iICRR4e%WY^)c,IBuLXRWiZuh3t`7;ao(5156%,0o46Q7"&/68f/e:)PBH*kGM3b;l,-*=IsEYf(K<%s,/SF'cC(gp`_:[XUH%&9aVK\n"OOIS,^-R85atgBUEhgI[hHL6C]i*d6oI[U5BeS!W)9*g/q>AQh8m^6@G$l<(=8_)5pAHo`Q4,GUpA2Jhd$[V"D+H9=ZH%EmC.80;Cq;*Ai1\,QR=(X[Db3lRh-s[ZkJ@pBl27ach&pDbmNA$\&BA?G&Eg$=Dsq0'OOpJFK#$fS-+m7%<Zq+DZbfn,Xqs5/EnU%R1U/j);>4rN0/OhrA\S*hi8LniD)6`>\S4M(&F#T<9uh\)&tc1IMu+0Gh"B"2G0$q77'/8(]:<\NDmg^"dDc)STV$VO$'2s=scm`%GB+KlTVKH9Gu4iGTVL`TDJ>=)$^"DYL(@+2^>RhWr[XnrojWiu`<-p@?mtTZ_oNgK=r>_3KD/=feoeJd(LC%hG0$eViHU2A\5,i8%`Q9kra_[KMSrdb[V&rT1N9tRJeTTEj,+GcMWH/^1fW69@X(s;>.@0$T($>p<MSkW>;'$eSn:1g'q;FUt;3j&YTcd@;'C!EtE#?^h%Mkpo3IUidDR8^@]S'RFeR#t!"2LP.ldDN57U_eYaSs35K+7g5l`!PdVb\*[Aa\>coH:.6hl[D]OGr4PMM3uc`JpT\LV)!IDHV=L*%Ve+q,HF8#Xc':D.j]s3.F*M^MfOE+eFiRH30JH0Al0M:jB$;u"BTnfp(sSoN!HQsek%B^C?o<N,hFR^GQNSM\`\e9GUddqMY55D]%/%"?iS8tZ*$fCD4VRAl64=L\j;9LZbP1.;Z<WZK*-TEm!cjjZ.?u)=>Q`R>!Bt]=4bn<W5[F?t%@S)tgYq?Wd(d,>@i_V=lX+T`Y%N\%Vac9L@-&6/SD<cZ-"^)E=?\@<^nkGs`8-><"'R+kO(/M9SV>b!G#[TAg]Ph3_U<X>Fk'D]aJd==P%0JYAn%e:6?=*%l3O)eMU%*Er<9b0\CX?%N?^B`YUZ170DNa0e$'hlNRG;iC$XEh:.34KmmQVGFOCE[u/IpD=HRMppV(5/h8*f"nlGD_[f(W$pA9;OH-m'Egj!%3b8f<ic%Rd4l?&T^u^;:ia>XkW7hb2<aB[hGVS?TcZNPn'rumg6=2"t9euJ+FeI/b=8ZRA"IQ0;??1QRit]q<Rb+B.@@BA-mmFFA%geY+4O/Mf:kLKLRoP$KbmYC.l99'SYTXki>jeXX<_it@p\W@I(Es@0]3Ku?*oS#=t*"NN_A4L.3,G^ua./ChjEZ,2Kg3t_Q'l.P&%%mK'-s&0(+(tQ$jl0Cqi>$2'R2dL;7[or*`+[gW1Qt]GPA!tgP0,ih*KLdbjoM^Z"j!gjiGnop+Fc+5'H]a;*SAcm#AWni,);Q.V%Lc2tIjf)bW&Q3QTLID8f<mWi%\B,@!'K!nH8[&G_&8@c2Ns0!\Hc96)6]DfffWIp47B^#rPkeji>#Qr%'V%"'^^(gMYPYk@Z-_N6%aV*#qCQl_(P@s'*`olYVP^[APAN[qp19Y.mVGD8XE[T!G`:jQ.JXI[26-1HbjLUS>SD9Q&o&lh_0/bH(VaL93`!tD],"_\9M:\NG%WO-D)G[T#[cJq3q2T@]I!YLg(0SM^Sl!7%*+j0l:F"l\`io=<kfp&a0%qbC;<Kik^jO;$bWPm18,59QEc/WN8jEWWS&p9Y`PC"H7%1o)61ps1sOVPF1u@_(_+FidLpa?']L7eZKuKahRC+lksDB_!=V"QC,K!dqL<bU)BE;uNfI51%1j\lf`[3if5'?%k=<]UraI"sF$/%U^X6)F@uY3c#A6?2E.tj!=0i*`8Ol7OeOJ&p8a*'_c<;X=Y&efFc+-O4-@e>4S6Fg.n>rMf,Poa[V,hpiqil'#F[I1Z9c/DB\f1U%;j)<uNO0:K_PH0BBTpZH(.f6nC\jGR(JLjhA\Y7:(\'jjLT8dhrMjXJ*Jc00M\28mL3,X=M#B`&#=EUYg6q,H;(;leqHRR3NF#*=%VNtG@;f!o3.eXVJ1n,l%,KJ:'56e:),X-rHjt'13jgE(7-Wugue\G`h,Ze8^mm[^3G0Z0.+u5;cR\B30^L8[-D#9WX,;8'p_3-_J%p6&3k:".^\Dl0Z>i/M47PdJKBT:_Ie5\`9F;[KF;SKo1Q`48i7=>(lk;G/TO.@0$D($>p8MSkW>+o$[5eWsgVP7r$D8]N0gU10"b%!4'gl.B1W9Lb5*60@&-W&d/a_[Zi_LYMmfjd?a`C,tqM=F^k`o/`Qj\P=2T00-FaB>`n8<NW`3"lT1+?.A_m<pCpM_V:%#;4i_0E%+PA19ZmJ;@=6b`L?[<<pQWe/B9^sCSWE<4m;_6e6'`oM3FO$i(KZi.]^nYGI6pS1CFSP'-^uL*[B$:NT8SS[XE9qZ4\7@8oN[7,<%g76b!Bi'PXDu1hcAi!b[dq5Y+48>m50L$l=*2RtuRT]p"eA5c7\sEhB[@^%L/p]W98n)?p0/+uJ-s+f/;RhWk8*sC0>K<dlWUhV=%Abm+1-[-efHkX:Bb/g%\X^rFTgA7>:%OkN5j@+15n\uM,8=PHViEE3l`(>+cljPoC`&BRYfCX(ENN>KI,^H!.'V&\[bERdmP&JK3%!s%L$D;3B/g@Su>,<<T/=cF,1D5]6'n^&h]oM[7lj!f_IGno?HI>Y_%gORQEpPe4;`S?7<<mI9?8P>3o,Z'uVWFSXd(-A@g!W;Y_%MjWkXYD`]YbeC-!*r5F.!gFlt*+/,$.SM2nN[-stLU*Ui%i7PF1E+Cqibjm18Rd6</2nh&.BJc9A*gdgqFfi1JJa.*fMn_>%!BY_%l=2=,'QYTCL.=ebVjncc:#JnhC<WVU0@]e9^t4F@:Pql+3M-:%:f<P#jd8D1+t^d7@MWQ1S(+qd1<>0UeOhEpo$VOW(9*^59#eB'%=-f"JYDKM&%OijCeMk=o;Q@oPgnGKDj-9En5AFGI:.g$3S2[7-11)FAk"?U*g]UMI/EFU&J@I*Y3@:)Z9-lZq1te7+Eqqe\$>(VX%BT,]Q8nTm=#9jf691:\(V,Rp4QHEnoH\o6XVUQh%JMbOJ,^%aa'qpi>L/P0K>`>Vj`uO3HD?;^*4r"C^no#^KE9U5;$\Ec!2@at$%nL?.=-WanR'cj+8SEq.<-=\Z'(WG2J;[#Cb@4/Dj>ln#FTn_'/,[cu)iCVJq^r?pfih`;,+!=Gi\BlB8f+[P*UNFo'2>DhTLaI]#%<D)pUi"KaG,NV6AqT1;lGQA$o_#!E:nHNXD#\/?8q'%$0]b]$@ap:K1WM-$lCJ.R?Je%n)QuYVh.8%[<8Kr2>^lfq=$R7UL<!=ct%D_'P]A?QM-(YslQ.,[-c>V;-r@MCp^Y^K&B7D:H"#?VJ8oV27=UbW?`TJ=M@1DjKA30)d[F8BrH&"sKTe2UeW(PUqR.O(%4';oj;%83Y--*s<,U;IYep0eqjdk":l()&c?_7;=H.>`&dJ<<[PW;dDDj_5fSb<;i!;iKuiQ.?V`LD,am$ig<V8PGRPXMlp[1c@`QYm$,)O%CpAedMVc>ebp'OQWO/4,g.cfBqXAP!h(GU$7:fOY;bG/.iB2!u$!)716Rg_WQfS"<;E>FNlT)&6bEVQR.qN.K4H$?qD)!<'CHA7'%jc*c-]<mUkm`79<UF=ebo&<08o0jFD.C<haC6NC;>`Z;=D-T)"b-nTi&bThj_^;csqp`Qm9hEatL=A[_IS>H)I8"LJ##sm0HB[+9%5S6nrGhnF]e+TIQO,MZa^6t='h6JkEalE4<_U>^u/t?^HeT,q@*u_:9]@51`pUK:7I,]k'O>o9]"_BWc`CTc*h)1G-Y[+lQ30Bs2%PuE3/7gc2]_]nc0jj<0X`DqgBVS*s5.;moOqN+;YA2seg0MAD+p<ZH$A`r^++k;dr?@P@@SiM3=l!oo,cE`Z0UQf66;Lg-E]M]>F%Fsqk$;E-^,I2PS(Bt:tKV'/j;A'gR#'WZCH?U@Z>>!@Ue=\2=:3E>lQ$b<@>]);=\o:8f]Um0ULQKFZ9WcH9<nr50=];7+:bYmJ*%m_4($9.=i;l\f(!L6$t9&>ZOTH4\NB+bdAEW#lkU;BGHl,dkib?-Vi'PWY:F4MPZ:)*Pqek4_XYW/E-ohasfR/gcMKS4YY^Oe;3F%.lH'OrA[G]pZ;o$*5-:IHDqOLg6,,P[H'bSb-D+'";t+'AIPP302AMuMb!kqq/)F#UsQg&U('fj_%uYRMa.8*B@K55P[J%0+UM:C%T]2?0:+Z9FnDa(o6buR(JB"O8aer>G3R3AAP5&X?:SO4F(<M.O-_a5Ls&jj\S1%-/$sCs<R&lu38aGjqHVPVe@_*R]pBr9./^(V$%Y"nWO,R1TA3k1./?mufhkA3i<@Ps[_adQ;LDbaDt9`8*fkJS]Fm5@W/n,oRT&k2"#^N)6Wo+=5dg?kt.Lh`*9mNtq$MYMnlLhDtU%D$c8+1`'O@QsWJ'6(@H`lG/8gRX1t)<>6eXEKGM@7Bc8%A&hqKdD'pf+Vh.TH5bK_niLW.>f0B18JSA2e29X`PrR'd+&9Q9eS&3f%`A^_A-fM4s1uCsB)8-.eU$7;TWQpF#TK#7KU#BjeI'Y7lWTGih0d9,Nh?R#h68gU4?T<h>?<4PcF'3_Me`M3h#Xma,3[5\"<[]fi%./A=R6lP@3H/RD-lVL+#,@Fs@P?s9RLI7[A1R=6miR:,lCAf8;-[*>gfC-_'WQ]\e]Nbr:<*pg)A]P3<lEA`tS<g&JWZC"6W!lio%IKoi`5Bld`E!QRMHdlUnEXm]K#(>aGR)0HcjlDLZ'ECFAM7G%Rhpl#qE1MTOl:uH2:5utJ*T"[,IW`.oq8of6YR>]e@at.[o7L!]%;tmkU=4XeR^I(Gb_#;D;iTL]V=11:?%_-RZ/?b+p6iJ\`<Dmb!_tAnnWLbf,>ssuV:E<a>Uj]f98T\2u!nVaH3ZX"MpH_$Kc6`d8%I>JtGJ-5u>KC*&d^o:6C];+s>nRj-J35denn"9deLKHJ4=U>cPVG&,+Pi1M.2*cI;-(m4C\)8("$8N*/p7<l:-1<fG;[_Q]b!ce+%,cE/fj<o^^kg3n*SE8]*!3&R3F1CNJX/4l8#J1"$g/Yk.>n@F;Ooo!Vb#Km9dG]GfrN,'PLTH`M5Eu*1J@NM+UuYLq!)E!j4DVtW%YZp3qS+CSIq:P8)DR:6t@9E`]U.X/U=oLDnEg=d!Vr7i]^.Rj;9\//PjJ,<3H<"7d!ZqSG60SfD!FNa;FUPRmN*A.N[.%<m;mAlc%JS]p1UHtBb`N/-27nLd-ocph7BLGjq/B;#t,$!/FZrnZg=)&V^0mL:0DeLq3:Tg^C[9lo=lZcEHXRfKcZI2g]d'AJ-X4F[ZS[S*b%lFrO-<Cb=SY*sIgLT5@GrMl<3h:J[CQgIkCIQ8at,#F;`Z5hq(V[O"0CaqM73PrpF;3&5nCQqU]fg!WWU[08f'3"UhngQ'#9DN+`%IAVDGb)TE'!+kUJ=,!pfPq,;VO36"JlqHMu;YI&0Pps=F\aku5X'CY7$s%7BALo>jXYQoA)d+'9b0@&IFQJ7\[_2/B.$J"`0U-:U%]IV-X=Pb-2C+Sh<1.df+9URNV];J>mjaC+*d.32HPA,;[Q"@A9b/sci?>jDS/[)gmkS@kt=al:YTIe#M\kn^R/;,F(F-]di?+L:u%b'ooC*bFIdi_d+<(FcB<b_r^%9^>+q;^V8`]I?d-QLU2.^PIKanm=dSjWQ%HV=GlG#ul0iMPR77'1JQo*fMZE.Ruu@O-N).Lsa@b%;T*G6?n#QqEl8[^>rc_YPct!G72\r$T;".j5>b91PWu,q+klCLF;<o.apO,O@V*MK41heMUn(stO]&p"Ui'lW>Lpp'-SF_&g1.V:%Z\SC648\nI)r_5'f`'T7$\l+7B!0qF_=o;,HGkrbFe+`US1o@hf6Ie(NN:Q"?"Z?a;V-3+.nihkZY^9ZcK)dX+Se^,qK0m'i!$b>%or%UO8YtGp*E,4:iMu0u<%(tP7c$aDGq#!FEmQNkZ<Sf)A1d!4%R)'N#KM,aWL10iDfW'E=7]/nGU(X(!rnFIb@89ShO7.s]!2I3%b)M<:D3Vto;K,l'^EWica&I%@#`7;A-_"q3Pd3b`%:)YSd&sTQ;@[!F/m`cPp!ET@CsR8h`[70i"hMW@gLKrBE1pqtg7Bjm6\^r$%C:fg2[,%F[al[?P&L>2]fP9sCF=@]-859A:O:l?XkNLX344s6cfm(fI16&u^';1P,UQ7d@WGQj'0XGO5Xg2)B)Nc\S.ukOA&P+g7%%*4RdDY-u"6sDtXAPP_?4CNj(,hb3i8[I;CHW'_]E.YZ5]?uiqWj:M9LU,7#m.WDBYWA'i[G?`s4Wd=qRp:YL*D:nlNMM?>]7X\'%IQ<q57ge+=01Wf7!q=E@%^b`NRI-VjYsbPZ)jZ:".\+7lc?_D&N3)+/S+@]r+D]kHYuJ1D?ZI"rP\qYjd9\_D#i]&ZdO1L+bj?`F%F^oHDB3/t@^+j&\)MW9jnr3rc;i9%g`G`6MD<ePP8\c8!hnV5]R\hgodLrP6XDFB]-:TLS.UEUncm_k0_TQgEFjfVFK6EB"$H5t$%H0^H%Wi(j<nE#D(gFZ6ke<YnhqsK1AhGa<3[ZQW+g@jpr+;tdr$"^d!l%G/?n1/WBSX6?2qJ_%OgT<7g-9cl\dF9NH!ITh[44R+4%!]\6:1nP=]\_U;labg@:5ce>)K<'j-f3^U]'84GDqq/C4/N-a'PPCDh,sb+4QDlqP$5na]c(+u0[i5r<=Y]#d:q%g::prNcgCm1-%gXc#a\Qu8nAGmE$/WHKC;bB1.jq99BIc%;;CC9AH<%4ne:o."'6/0pq`C]_r(/ClRZ>d*p-[WPil:!@QY$Ub+l1IKkHepmKgXSQ3%16p'\:8X17b/nI1%R-<8Pd:=m[<#Q3)[=1K'DNSqZd;$+/BKr\=",DVZHtoOg:LfrP89VCZ<<XWmAi8FZBHkn(>m)g,0.,K*fjpI%J$t)D^/80'1Z&IRk_X)nQi?n5BsuB$%U<<'1C"BtrJCPtr4OkRU7%?N:!q2.XJY4&b<5cMQl4/Z7gu.QpP<67O$)Ego*3O0TMT[K%+PcNWRSr%SRcK?/7r;fe5VG[iB]tB'Jk9SXNb9]sR70[XV;iM3;I5rsa]YuH*je6>A8tL#FBV6M2(+?s3Mg&oI"FZM_oY)&[?WC/%ZoKK_S_t<HF9nqWA^.j:2AQXmlIOTTG/W,8*M<\kOX^I_48^Nl?d>']i9L,u_%m`(:)JrupDL<<>&X&Z`D2U_;se3b"9p:6@em-"%D/aCVV?ek/8R87$8R_g2J5lN,;Enk=9/3ucE(l/*5Z!',b%.\B6^i*tSuboL&GIhQ(mh$42q1%=9Z]s9lGT<#CH6g/UsV@V[Z8M"%U@8Ki:SeU)0cdc1?$#07L2/*n=C,cC9H^@HY#G*,i=rB@'I3i(EY(TlaN=l28X5a$cW/]7/oWM:$fI;:7-4rq)Th0AFM:,94DFjj%Z>p9^;6H`8JZOWKZRFfLCbZG*)$8B4i;]U)(c_H19i*@5\^el:`IC20796^N`qYp\7H"d)^I9e1qfM./Q0W"hC-b/d^;U8\r#d7%%b5ARQQq.E=L((fX#HKE8ip)a9<4&8]0LHsgSNP8FUVJ7l9pt#SJ6fJ];Rr56bN`h)41bKK>8I,pc!h%p0ioYb;&D3Cc]hEA!=`W!%)I>R7+rHGT@QX`h5.&5f"`RcD"(U\E=eM#fA<`7?B@WA=6<@t*'R+-l&^?UcgPJ[<-*9=tHIa>i0R>H#%$q,e6,hnW6F/-[8jRc.%D7Or_OmB7!_`-7!*&=3APQJps3$!G4ET9uT@T8?P>LLEcC`Kn(_-msqS6d0I&)(6D^%;E*P+2etG-pg/jr$[MkhVo^"K_>Kf:bNP%3g0_!hGq],3?SCHkQH;XD1[KfjfSUNN%DW?499DR`6=UXBg$4!A;c/!r,J2N1s*h+"g%J?49?qrR]$mZg8qD-%o`@*I5FNNj#d=?%O]2XKo'!o@;*Bn4H#..mPULBh7+aWYKB(-t*o&7LJ'f=!LCFu@<P!NW(jL@Hdi8>Zm*_9%n_qj//O%/<`I8f1\!p\#7ZN5XnT)5Z%+3Li?%A+0Cr?E6;25Lh1#il[^Q@f_0i4e0f9bZ5^YM66fro":)56'^Qs#X=dEj3(7?t%0nr/u^*9+L*M*6^#qR!E\UlR(pnSPF-p%inQ'Ln(-rse_-f!G.ue6LW=CaEmh$iT8&j*C-VXk3UWB+]A`M:%bpC=0HA)>jYuSOI_72o*o"<q]6e9AItI*hebR7Djq"He_cZ~>%AI9_PrivateDataEnd
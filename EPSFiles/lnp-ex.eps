%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: lnp-ex.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Lisa Tauxe
%%CreationDate: 12/30/08
%%BoundingBox: 0 0 162 162
%%HiResBoundingBox: 0 0 161.3203 161.3242
%%CropBox: 0 0 161.3203 161.3242
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 128 8%%BeginData: 9298 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD35FFA87D527D5252275227522727275227522752527D7DA8FD65%FFA87D5252F827527D7DA8A8FFA8FFFF7D52FFFFFFA8FFA87D527D272727%527DA8FD5DFF7D52275252A8A87D52FD09FFA8A8FD09FF527DFF7D7D5252%52A8FD57FF7D5227527DFD05FFA8A8FD08FFA8FD0BFF7DFD05FFA87D2727%527DA8FD50FFA85227277DFD28FFA8F82752A8FD4CFF7D27527DFF27A8FD%28FFA852A87D27527DFD48FF7D5252A8FD04FFA8FD29FFA8FFFFFFA85227%7DFD44FF7D2752A8FD36FFA827277DFD40FF7D5252A8FD3AFFA85227A8FD%3DFF5227F8FD3DFFA8272752A8FD39FFA8277DFF7D7DFD3CFFA87DFF5227%7DFD36FFA85227A8FD44FFA82727FD34FFA82752FD48FF7D27A8FD31FF52%277DFD4AFFA8F87DFD2FFF5252FD4EFF2752FD2DFF27F8A8FD4FFFF827FD%2BFF277D7D7DFD4EFF527D7D27A8FD27FFA8F87DFFFFA8FD51FF7D27A8FD%25FFA8F8A8FD56FF7D27A8FD23FFA8F8A8FD58FF7D27A8FD22FF27A8FD5A%FF7D27A8FD20FF277DFD5CFF7D27FD1FFF277DFD5EFF7D27FD1DFF52F852%FD5EFF7DF852FD1BFF7D52A87DFD5EFF52FF277DFD19FF7D27A8FD63FF27%A8FD18FF27A8FD64FFA827FD17FF5252FD66FF7D27FD15FFA827FD68FF52%7DFD14FF04A8FD68FFA827A8FD12FF527DAFAEFD68FF5252FD11FF7D2DFF%8AA8FF83FF83FD65FF27A8FD10FF522759A8FFAFFD04FFAEFD62FF7D2727%FD0FFF7D27FF7DFF84AEFD04FFA8FF83FD60FF7DA8527DFD0EFF27A8FFFF%FFAFFF8AA8FFA8FD04FFAEAEFD5FFFA827FD0DFF582DFF83A8A8FFAF84FF%84AEA8FD05FFA8AEFD12FFA8A87DA8A8FD47FF277DFD0CFF52A8FFAFFFA8%FF83FF848BFFFFA8FFA8FD05FFA8FD0DFFA88333585883585E335E83FD44%FFA827FD0BFF7D27FFFFFF84FD04FFA8A8AF84FFA8AEFFAEFD05FF83FD09%FFAE33337DFD07FF835833AEFD43FF527DFD0AFF27A8FD04FFAFFD05FF84%AFA8AEFFAEA8FFAEFD05FF83FD06FF8333A8FD0BFFA83383FD42FFA852FD%09FF7D52FD05FFAF84FD06FF6084FF83FFA883FFFFA8FD04FFAEA8FFFF58%33FD0FFF2D83FD42FF27A8FD08FF7D7DFD07FFAFAFFD06FF84FFFFAEFFFF%83FD08FF5E58FD11FF33AEFD41FF7D52FD08FF27FD0AFFAFA8FD04FFAFFD%04FFA8FFFF83A8FD04FF832DFFA8FD10FFA82DFD41FFA827A8FD06FF7DF8%52FD09FFAFFFAFFD05FF60FD07FF83A8FFFF33FFFFAEFFFFAEFD0EFF5883%FD3FFFA852F87DFD06FF527DA8A8FD0AFFAFA8FD05FFAF84A8FFA85952AE%FFFF2D83FD04FFA8A8FD0EFF8358FD40FFA87D52FD06FF27FD0FFFAFFD05%FF84FFAF27446827FFAE33FFA8A8FD05FFAEA821A8FD0AFF33512052FD3F%FF52A8FD04FF7D52FD11FFAFAFFFFFFFAF3544FCFC447E8358FFA8FF83A8%FFFFFFA8F804F8A8FD09FF2D44FC4452FD3EFF527DFD04FF527DFD11FFAF%FD05FF594493FC44A85EA8FFFFFFAE83FFA8A8F80A100AF8A8FD08FF046E%FCFC27FD23FFAEFFAEFD07FFA8FD10FFA852FD04FF27A8FD13FFAFA8FFFF%FF27272052A858A8FD05FFAE58F8FD050AF8A8FD07FF3420FC207DFD16FF%A8FFA8FFA8AEFFA8A8FF83FFA8A8FFA8A8FF83FFA8AEFFA8FFAEA8FF83FF%A8AEA8FD07FFA852FFFFFFA852FD16FFAFFFFFFFA88484AF58FD07FF2704%10100A100A0427A8FD06FF832D277DFD10FFAEFFFFAEAEFF83FFFFAEFD1E%FFA8FF83FFAEFFFFFF52A8FFFF7D52FD17FFAFFFAFFFFFFFA83484FD07FF%04040A100A0AF8A8FFFFA8AEFFFFFF8383FD0DFF83FFA8A8FFAEA8FFA8FD%28FFAEFFAEA87D7DFFFF52A8FD18FFAFAFFD04FF33FFFFAFFD06FF270A0A%0AF883AEFFAEFFFFFFAEFF33AEFD07FFAEA8FF83FFFFAEFD34FF7D59FFFF%52A8FD17FFAFFFFFAF84FFFF57A8AFA8FFA8FD05FF0404F8A8A8FFFFA8FF%FFA8A8A858FFFFAEAEFFAE83FFA8FD39FF84FF27FFFF277DA8FD1DFF58AE%AFFFFFAFFD06FF27A8FD04FFAEFFA8AEFF8333AEFFFFA8FD3CFFAFFFFF7D%27FFA82752A8FD1CFFAF8358FFFFAFFFFF84AFFD0AFFA8A8FFAE0AA8A8FF%AEFD3BFFAFFFA8FFA15227A87D52FD20FF33AEFFFFFFAFFFFFFFAFFD05FF%AEAEFFFF83FF585EFFFF83AEFD3BFFAFAFFD04FF7D7D527DFD20FF5858AF%AFFFAFA8FFAFAFA8FFFFA8A8FFA8FFFFFFA833A8FD04FFAE83FD37FF84AF%FD06FF527D7D7DFD21FF3384FD04FFAEAFFFAE84FFAEFD06FF3383FFFFAE%FFFFA8FD36FFAFAFFD08FFA85227A8FD21FFAE2CAEFF84FFAF83FFAFFFFF%FFAFFFFFFFA83383FFFFFFA8FFA8FFFFFF58AEFD30FFAFFFA8FD09FFA852%52A8FD22FFA80A83A8FFAFFFAFAFFFFFAFFFFFFF833383FD06FFAEA8FD04%FFAE83FD2EFFAFAFFD0BFF2727FD21FF83FFA8A8335883FD05FFAFFFCF83%2D58A8FD09FFA8A8FFFFA8FFA883A8FD29FF84FD0DFFA85252FD1EFFA8FD%07FF835833835883835F585858AEFD0EFFA8FFFFFF83FD28FFAFFD10FF27%27FD1BFFAEA8FFFFAEFD08FFAE8383585E58A884FFFFFF84FD0BFFA8AEA8%FD04FF837DFD06FFA8FD06FFA8A8FD06FFA8FD07FFA8FD05FF84FFAFFD04%FFA8FD05FFA8A8FFFFFFA85252FD19FFAEA8FFAEFD12FFAFAFFFAFFFFFAF%A8FD07FF7DA8FFFFA8AEFFFF7DFFAE83FD04FF7DFD07FF7DFD06FFA8A8FD%05FFA8A8FFFFAFFFFFA8A8FD05FF7DFD05FF7DFD05FF27F87DA8FD15FFA8%FFA8FD15FFA8FF8484FFFFAFFFAFAFFD04FFA87D7DA8A8FFA8FF7D7D7DA8%7DFFA8A8A87D7DA8FFFFA8A87D7DA8A8FFFFA8A852A8A8FFFFFFA8A17D84%A8FFA8A87D7DA8FFFFA8A87D7DA8FFA8A87D7DA8FFA85227277DA8FD15FF%AEFD1AFFAFFF84FFFFFFAFFFFFFFA8A87D7DA8FFFFFFA8A8528383FFFF83%7DA852A8A8FFFFFFA8A852A8A8FFFFFFA87D7DA8FFFFA8A8597D84FFFFFF%A87D7DA8A8FFA8A852A8A8FFA8A852A8A8FFA87D2727FD14FFAE83FD1EFF%8BAFFD04FFAFA8FFFFA8A8FD06FFA27DAEFFFFA8FFAE58FD06FFA87DFD06%FF7DFFFFFFA8FFAF84A1FD05FF7DA8FD05FF7DFD05FFA8A8FD04FF5252FD%10FFAEFFA8FD23FF848BFD04FFAFAFA8FD07FFA8FFFFFFA8FFFFFF83FF83%FD05FFA8FD07FFAFFFFFAFFFFFA8FD07FFA8FD05FFA8FD05FFA8FD05FF27%27FD10FF83A8FD25FFAFAF84FFFFFFA8FFAFFD05FFA8FFFFFFA8AEFFFFA8%FFFF83A8AEA8FD08FFAFFFFFA8FD1DFFA85252FD0EFF83FD2AFFAFAFFD04%FFAFAFFD0BFFA8FFFFFFA8FD09FFAFFF84FD21FF2727FD0BFFA8A8FD2EFF%848BFD04FFA8AFFD0CFFA8FFFFA8A8FF83FF85FFA8FD23FFA85252A8FD09%FFA8FFAEFD30FFAF84FFFFFFAFFFAFFD0DFFAEFF84AFFFAEAEFD24FFA852%527DFD06FFA8FFA8A8FD32FFA8AFA8AF84FFFFAFAFFD09FFA8FF5FAFFFAE%83FFA8FFA8AEFD22FF7D527D7DFD07FFA8FD37FF84FD05FFAFAFFD04FFAF%FFFFAFFFFFFFAECFFFA8AEFFFFA8FD22FF7D527D7DFD04FFA8A8FD3BFFAF%84FFFFFFAFFF84AFFFAFAFFD05FFA8FFFFAEA8FFAEFFAEA8FD20FF527DA8%2752A8FFA8FFAEFD3DFFAFFF84AFFFAFAFFD0AFFAEA8FFFFAEFFFFAEFFA8%FD1CFFA85227A8A82752AEAEA8FD3CFF84FFFF8A84FFFFAFA8FFA8AFFD0A%FFAEA8FFFF83FFFFAEAEFFA8FD19FFA87DF8FFFF4CFFA8FD39FFAFFFAFAF%FD07FFAFAFFFFFAFFFFFAFFD09FFAEFFAEAEFD04FFA8FD1BFFA852FFFF58%58FFAFFD32FFAFFFFF84FFAEAFFD0AFFAFFFAFFFAFFFA8AFFFAFA8FD08FF%AEFFFF83FD04FFAEA8FD18FF7D52FFFF7D7CAFAFFFAFFD28FFAFFFAFAFFF%AFAFFF84FD12FFAFA8FFFFFFAFFF84FD0BFFA8AEFD04FFAEFD19FF527DFF%FFA827FFFFFFA8FF84FF84AFA8AFFFFFAFFD13FFA8FFAFFFFFAFAFFF84FF%A8AFFFFFAEFFA8FD17FFA8AFFFFFAFAFFFAF84FD0AFFAE58FD05FFA8FFA8%FD14FF52A8FFFFFF52A8FD09FFAFFF84FFAFAFFFAFFFAFAFFF8AFFAFAFFF%AFAFFF84FFAFAFFFAFAFFFAFFD25FFAEFFFFFFAFFFFF8BFD08FFAEFFFFAE%A8FFFFFFAEAEFD14FF27FD04FF527DFD10FFA8FFAFFD05FFA8FFAFFD31FF%AFFFAFFFFFFF84FF84AFFD08FF83FD07FF83FD11FF7D52FD04FFA852FD4D%FFAFAFFD05FFAFA8FFAFFD08FF83A8FD16FF527DFD04FFA852FD50FF84FD%05FFA88BFFAFA8FD05FFA8FF83FD05FF83FD0FFF27FD06FF52A8A8FD50FF%AFAFFD05FF84FD08FF83FD06FFAEAEFD0AFFA8FF7D52FD06FF7DF852A8FD%4FFFAEFFAFAFFD05FFAF84FFAFFD05FF58FD05FFA8FFA8FD08FFA827F87D%FD06FFA827FD54FFAFFFAFFD05FFAF8BFFFFAFFD04FFAEFD04FFA8AEFD0A%FF27FD08FF527DFD55FFAFA8FFAFFD05FF60AFFFAFFFFF83FFCFFD04FFAE%83FD07FF7D52FD08FFA827FD57FFAFAFFD07FFAFAFFFAFFFA883FD06FF83%FD06FF52A8FD09FF527DFD59FF84FD05FFA8FF84AFFFAFA8AE83FD05FFA8%FD04FFA827FD0AFF7D52FD5BFFAFFD07FFAFAFFF83AEAFAFFD04FF83FFFF%FF27A8FD0BFF27A8FD5AFFA8FF84AFFD04FFA8FFA8AFFF8383FF84FFA8FF%A8AEA827FD0CFF7D52FD5FFFAFFD05FFAFFFA8FF83FFFFAFFFAFFF597DFD%0DFF27A8FD5DFFAFFFAFAFFD04FFA8FF8483FFAEFFFFFFA827FD0EFF7D52%A87DFD60FF84FFAFFD04FFAE84FF7DFF27A8FD0FFF27277DFD61FFFD04AF%A8FFA8FF84580027FD10FFA827FD65FF84FFAFFFAEAEFF2E84FD11FF5252%FD68FFAFAF7D52FD12FFA827A8FD68FFCA05FD14FF7D27FD68FF277DFD15%FF527DFD66FF5252FD17FF27A8FD64FF7D27FD18FFA827FD64FF27A8FD19%FF7D27FF52FD5DFFA87DA85252FD1BFF52F87DFD5EFF7DF852FD1DFF277D%FD5EFF7D27FD1FFF277DFD5CFFA827FD20FFA8277DFD5AFF7DF8FD22FFA8%27A8FD58FFA8F8FD24FFA8277DFD56FFA8F8A8FD25FFA8277DFD51FFA8FF%FFA827FD28FFA8277D7D52FD4EFF7D527D27A8FD2AFF27F8FD4FFFA8F827%FD2DFF5227FD4DFFA85252FD2FFF7D27A8FD4AFFA8277DFD31FFA8F87DFD%48FF52277DFD34FF5252A8FD45FF2752FD37FF7D2752FF7D7DFD3CFF7D7D%FF7DF87DFD3AFF522727A8FD3DFFF82752FD3DFFA82752A8FD3AFFA82727%7DFD40FF7D2752FD37FFA85227A8FD44FF7D27527DFFFFFFA8FD29FFA8FD%04FFA827277DFD48FF7D52277DA852A8FD28FFA852FF7D5227A8FD4CFFA8%5227F87DFD28FF7DF827527DFD50FFA8A8525252A8A8FD05FFA8FD14FFA8%A8FD05FF7D5227527DFD56FFA87D525227527DFF7D52FD09FFA8A8FD09FF%527DA87D525227527DFD5DFFA87D522727277D52A8A8FFA8FFFFFF527DFD%04FFA8A87D7D52272752527DA8FD64FFA8A87D7D5252FD0627F852272727%522752527DA8FD34FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2008-09-16T14:57:24-07:00</xap:CreateDate>
         <xap:ModifyDate>2008-12-30T11:15:36-08:00</xap:ModifyDate>
         <xap:MetadataDate>2008-12-30T11:15:36-08:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>256</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FUr1/zV5Z8vW/1nXdVtNMhILK13MkXILQHiHILdR0xVhy/nJHq3w+SvLWreZ1Y0jv0hFhp5&#xA;p1/0u9MIb/YK2KruH576uN5NB8qW8g6Ktxq92n0k2cH4HFUl8u+R/wAwddu9ch83+ctfhGn6g9tp&#xA;zacLbSoLm0MMbpMpig9Q/E7Ls+xXr1xVPP8AlRnkWY8tTk1bV37vfavqMtd6moE6Ka9wRiqC13/n&#xA;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</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:1A10A1B1859211DDB35C905398C7F259</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:82752490FCD6DD11A54FBD1EC42FF4A8</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource"/>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1190.551025</stDim:w>
            <stDim:h>841.889771</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -161.324 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 161.324 li
161.32 161.324 li
161.32 0 li
cp
clp
[1 0 0 1 0 0 ]ct
74.8511 55.9985 mo
75.6309 56.1221 li
76.334 56.4805 li
76.8926 57.0386 li
77.251 57.7422 li
77.374 58.522 li
77.251 59.3013 li
76.8926 60.0049 li
76.334 60.563 li
75.6309 60.9214 li
74.8511 61.0449 li
74.0713 60.9214 li
73.3682 60.563 li
72.8096 60.0049 li
72.4512 59.3013 li
72.3281 58.522 li
72.4512 57.7422 li
72.8096 57.0386 li
73.3682 56.4805 li
74.0713 56.1221 li
74.8511 55.9985 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0.992157 1 0 cmyk
f
1 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
74.8511 55.9985 mo
75.6309 56.1221 li
76.334 56.4805 li
76.8926 57.0386 li
77.251 57.7422 li
77.374 58.522 li
77.251 59.3013 li
76.8926 60.0049 li
76.334 60.563 li
75.6309 60.9214 li
74.8511 61.0449 li
74.0713 60.9214 li
73.3682 60.563 li
72.8096 60.0049 li
72.4512 59.3013 li
72.3281 58.522 li
72.4512 57.7422 li
72.8096 57.0386 li
73.3682 56.4805 li
74.0713 56.1221 li
74.8511 55.9985 li
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
37.7261 55.313 mo
38.5059 55.4365 li
39.2095 55.7944 li
39.7676 56.353 li
40.126 57.0562 li
40.2495 57.8359 li
40.126 58.6157 li
39.7676 59.3188 li
39.2095 59.8774 li
38.5059 60.2358 li
37.7261 60.3589 li
36.9468 60.2358 li
36.2432 59.8774 li
35.6851 59.3188 li
35.3267 58.6157 li
35.2031 57.8359 li
35.3267 57.0562 li
35.6851 56.353 li
36.2432 55.7944 li
36.9468 55.4365 li
37.7261 55.313 li
cp
0 0.992157 1 0 cmyk
f
37.7261 55.313 mo
38.5059 55.4365 li
39.2095 55.7944 li
39.7676 56.353 li
40.126 57.0562 li
40.2495 57.8359 li
40.126 58.6157 li
39.7676 59.3188 li
39.2095 59.8774 li
38.5059 60.2358 li
37.7261 60.3589 li
36.9468 60.2358 li
36.2432 59.8774 li
35.6851 59.3188 li
35.3267 58.6157 li
35.2031 57.8359 li
35.3267 57.0562 li
35.6851 56.353 li
36.2432 55.7944 li
36.9468 55.4365 li
37.7261 55.313 li
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
57.4141 56.043 mo
62.46 61.0894 li
57.4141 66.1353 li
52.3677 61.0894 li
57.4141 56.043 li
cp
0.87451 0.243137 1 0.129412 cmyk
f
57.4141 56.043 mo
62.46 61.0894 li
57.4141 66.1353 li
52.3677 61.0894 li
57.4141 56.043 li
cp
0.74902 0.678431 0.670588 0.901961 cmyk
@
2 lc
80.6602 0.504395 mo
82.0596 0.516602 li
83.458 0.553223 li
84.8555 0.614258 li
86.252 0.699707 li
87.6465 0.809082 li
89.0391 0.943359 li
90.4287 1.10156 li
91.8164 1.28418 li
93.2002 1.49121 li
94.5791 1.72217 li
95.9551 1.97705 li
97.3262 2.25586 li
98.6924 2.55859 li
100.053 2.88525 li
101.407 3.23584 li
102.755 3.60938 li
104.097 4.00684 li
105.431 4.42773 li
106.758 4.87158 li
108.076 5.33838 li
109.387 5.82861 li
110.688 6.34131 li
111.981 6.87646 li
113.265 7.43457 li
114.537 8.01465 li
115.8 8.6167 li
117.052 9.24121 li
118.293 9.88721 li
119.522 10.5547 li
120.74 11.2437 li
121.945 11.9536 li
123.138 12.6846 li
124.318 13.4365 li
125.485 14.2085 li
126.638 15.001 li
127.776 15.8135 li
128.901 16.6455 li
130.012 17.4976 li
131.106 18.3682 li
132.187 19.2583 li
133.249 20.1665 li
134.298 21.0938 li
135.329 22.0391 li
136.344 23.002 li
137.342 23.9824 li
138.322 24.9805 li
139.285 25.9951 li
140.23 27.0269 li
141.157 28.0747 li
142.066 29.1382 li
142.956 30.2178 li
143.827 31.313 li
144.679 32.4229 li
145.511 33.5474 li
146.323 34.6865 li
147.116 35.8394 li
147.888 37.0059 li
148.64 38.186 li
149.37 39.3789 li
150.081 40.5845 li
150.77 41.8018 li
151.437 43.0313 li
152.083 44.2725 li
152.708 45.5244 li
153.31 46.7871 li
153.89 48.0601 li
154.448 49.3433 li
154.983 50.6357 li
155.496 51.9375 li
155.985 53.248 li
156.452 54.5669 li
156.896 55.8936 li
157.317 57.2275 li
157.715 58.5693 li
158.089 59.9175 li
158.438 61.272 li
158.766 62.6323 li
159.068 63.998 li
159.347 65.3691 li
159.603 66.7446 li
159.833 68.1245 li
160.04 69.5083 li
160.223 70.895 li
160.381 72.2852 li
160.515 73.6777 li
160.625 75.0728 li
160.71 76.4692 li
160.771 77.8667 li
160.808 79.2651 li
160.82 80.6641 li
160.808 82.0635 li
160.771 83.4619 li
160.71 84.8594 li
160.625 86.2559 li
160.515 87.6514 li
160.381 89.0439 li
160.223 90.4326 li
160.04 91.8203 li
159.833 93.2041 li
159.603 94.584 li
159.347 95.96 li
159.068 97.3311 li
158.766 98.6963 li
158.438 100.057 li
158.089 101.411 li
157.715 102.759 li
157.317 104.101 li
156.896 105.435 li
156.452 106.762 li
155.985 108.081 li
155.496 109.392 li
154.983 110.692 li
154.448 111.985 li
153.89 113.269 li
153.31 114.542 li
152.708 115.804 li
152.083 117.056 li
151.437 118.298 li
150.77 119.526 li
150.081 120.744 li
149.37 121.95 li
148.64 123.143 li
147.888 124.323 li
147.116 125.489 li
146.323 126.642 li
145.511 127.781 li
144.679 128.905 li
143.827 130.016 li
142.956 131.11 li
142.066 132.19 li
141.157 133.254 li
140.23 134.302 li
139.285 135.333 li
138.322 136.349 li
137.342 137.347 li
136.344 138.327 li
135.329 139.29 li
134.298 140.235 li
133.249 141.161 li
132.187 142.07 li
131.106 142.96 li
130.012 143.831 li
128.901 144.683 li
127.776 145.515 li
126.638 146.327 li
125.485 147.12 li
124.318 147.892 li
123.138 148.644 li
121.945 149.374 li
120.74 150.085 li
119.522 150.774 li
118.293 151.441 li
117.052 152.087 li
115.8 152.712 li
114.537 153.313 li
113.265 153.894 li
111.981 154.452 li
110.688 154.987 li
109.387 155.5 li
108.076 155.989 li
106.758 156.457 li
105.431 156.901 li
104.097 157.321 li
102.755 157.72 li
101.407 158.093 li
100.053 158.443 li
98.6924 158.771 li
97.3262 159.073 li
95.9551 159.352 li
94.5791 159.606 li
93.2002 159.837 li
91.8164 160.044 li
90.4287 160.227 li
89.0391 160.386 li
87.6465 160.519 li
86.252 160.629 li
84.8555 160.714 li
83.458 160.775 li
82.0596 160.812 li
80.6602 160.824 li
79.2607 160.812 li
77.8623 160.775 li
76.4648 160.714 li
75.0684 160.629 li
73.6738 160.519 li
72.2813 160.386 li
70.8911 160.227 li
69.5039 160.044 li
68.1201 159.837 li
66.7402 159.606 li
65.3647 159.352 li
63.9937 159.073 li
62.6279 158.771 li
61.2676 158.443 li
59.9131 158.093 li
58.5649 157.72 li
57.2236 157.321 li
55.8892 156.901 li
54.5625 156.457 li
53.2437 155.989 li
51.9331 155.5 li
50.6318 154.987 li
49.3389 154.452 li
48.0562 153.894 li
46.7832 153.313 li
45.52 152.712 li
44.2681 152.087 li
43.0273 151.441 li
41.7979 150.774 li
40.5801 150.085 li
39.3745 149.374 li
38.1816 148.644 li
37.002 147.892 li
35.835 147.12 li
34.6821 146.327 li
33.543 145.515 li
32.4185 144.683 li
31.3086 143.831 li
30.2139 142.96 li
29.1343 142.07 li
28.0703 141.161 li
27.0225 140.235 li
25.9912 139.29 li
24.9761 138.327 li
23.9785 137.347 li
22.9976 136.349 li
22.0347 135.333 li
21.0894 134.302 li
20.1626 133.254 li
19.2539 132.19 li
18.3643 131.11 li
17.4932 130.016 li
16.6416 128.905 li
15.8091 127.781 li
14.9971 126.642 li
14.2046 125.489 li
13.4321 124.323 li
12.6807 123.143 li
11.9497 121.95 li
11.2393 120.744 li
10.5508 119.526 li
9.88281 118.298 li
9.23682 117.056 li
8.61279 115.804 li
8.01025 114.542 li
7.43018 113.269 li
6.87256 111.985 li
6.33691 110.692 li
5.82422 109.392 li
5.33447 108.081 li
4.86719 106.762 li
4.42334 105.435 li
4.00244 104.101 li
3.60547 102.759 li
3.23145 101.411 li
2.88135 100.057 li
2.55469 98.6963 li
2.25195 97.3311 li
1.97266 95.96 li
1.71777 94.584 li
1.48682 93.2041 li
1.28027 91.8203 li
1.09766 90.4326 li
0.938965 89.0439 li
0.805176 87.6514 li
0.695313 86.2559 li
0.609863 84.8594 li
0.548828 83.4619 li
0.512207 82.0635 li
0.5 80.6641 li
0.512207 79.2651 li
0.548828 77.8667 li
0.609863 76.4692 li
0.695313 75.0728 li
0.805176 73.6777 li
0.938965 72.2852 li
1.09766 70.895 li
1.28027 69.5083 li
1.48682 68.1245 li
1.71777 66.7446 li
1.97266 65.3691 li
2.25195 63.998 li
2.55469 62.6323 li
2.88135 61.272 li
3.23145 59.9175 li
3.60547 58.5693 li
4.00244 57.2275 li
4.42334 55.8936 li
4.86719 54.5669 li
5.33447 53.248 li
5.82422 51.9375 li
6.33691 50.6357 li
6.87256 49.3433 li
7.43018 48.0601 li
8.01025 46.7871 li
8.61279 45.5244 li
9.23682 44.2725 li
9.88281 43.0313 li
10.5508 41.8018 li
11.2393 40.5845 li
11.9497 39.3789 li
12.6807 38.186 li
13.4321 37.0059 li
14.2046 35.8394 li
14.9971 34.6865 li
15.8091 33.5474 li
16.6416 32.4229 li
17.4932 31.313 li
18.3643 30.2178 li
19.2539 29.1382 li
20.1626 28.0747 li
21.0894 27.0269 li
22.0347 25.9951 li
22.9976 24.9805 li
23.9785 23.9824 li
24.9761 23.002 li
25.9912 22.0391 li
27.0225 21.0938 li
28.0703 20.1665 li
29.1343 19.2583 li
30.2139 18.3682 li
31.3086 17.4976 li
32.4185 16.6455 li
33.543 15.8135 li
34.6821 15.001 li
35.835 14.2085 li
37.002 13.4365 li
38.1816 12.6846 li
39.3745 11.9536 li
40.5801 11.2437 li
41.7979 10.5547 li
43.0273 9.88721 li
44.2681 9.24121 li
45.52 8.6167 li
46.7832 8.01465 li
48.0562 7.43457 li
49.3389 6.87646 li
50.6318 6.34131 li
51.9331 5.82861 li
53.2437 5.33838 li
54.5625 4.87158 li
55.8892 4.42773 li
57.2236 4.00684 li
58.5649 3.60938 li
59.9131 3.23584 li
61.2676 2.88525 li
62.6279 2.55859 li
63.9937 2.25586 li
65.3647 1.97705 li
66.7402 1.72217 li
68.1201 1.49121 li
69.5039 1.28418 li
70.8911 1.10156 li
72.2813 0.943359 li
73.6738 0.809082 li
75.0684 0.699707 li
76.4648 0.614258 li
77.8623 0.553223 li
79.2607 0.516602 li
80.6602 0.504395 li
@
0.5 lw
0 lc
150.528 80.6641 mo
156.528 80.6641 li
@
153.528 83.6641 mo
153.528 77.6641 li
@
142.683 80.6641 mo
148.683 80.6641 li
@
145.683 83.6641 mo
145.683 77.6641 li
@
134.342 80.6641 mo
140.342 80.6641 li
@
137.342 83.6641 mo
137.342 77.6641 li
@
125.569 80.6641 mo
131.569 80.6641 li
@
128.569 83.6641 mo
128.569 77.6641 li
@
116.433 80.6641 mo
122.433 80.6641 li
@
119.433 83.6641 mo
119.433 77.6641 li
@
107.001 80.6641 mo
113.001 80.6641 li
@
110.001 83.6641 mo
110.001 77.6641 li
@
97.3447 80.6641 mo
103.345 80.6641 li
@
100.345 83.6641 mo
100.345 77.6641 li
@
87.54 80.6641 mo
93.54 80.6641 li
@
90.54 83.6641 mo
90.54 77.6641 li
@
77.6602 80.6641 mo
83.6602 80.6641 li
@
80.6602 83.6641 mo
80.6602 77.6641 li
@
1 lw
2 lc
80.6602 0.504395 mo
80.6602 1.20703 li
80.6602 1.91553 li
80.6602 2.62988 li
@
94.5791 1.72217 mo
94.458 2.41406 li
94.335 3.11182 li
94.21 3.81543 li
@
108.076 5.33838 mo
107.836 5.99854 li
107.594 6.66455 li
107.349 7.33594 li
@
120.74 11.2437 mo
120.389 11.8521 li
120.034 12.4658 li
119.677 13.0845 li
@
132.187 19.2583 mo
131.734 19.7964 li
131.278 20.3394 li
130.819 20.8867 li
@
142.066 29.1382 mo
141.528 29.5898 li
140.985 30.0454 li
140.438 30.5049 li
@
150.081 40.5845 mo
149.472 40.9355 li
148.858 41.29 li
148.239 41.647 li
@
155.985 53.248 mo
155.325 53.4883 li
154.659 53.7305 li
153.988 53.9751 li
@
159.603 66.7446 mo
158.91 66.8667 li
158.212 66.9897 li
157.509 67.1138 li
@
160.82 80.6641 mo
160.117 80.6641 li
159.409 80.6641 li
158.694 80.6641 li
@
159.603 94.584 mo
158.91 94.4619 li
158.212 94.3389 li
157.509 94.2148 li
@
155.985 108.081 mo
155.325 107.841 li
154.659 107.599 li
153.988 107.354 li
@
150.081 120.744 mo
149.472 120.394 li
148.858 120.038 li
148.239 119.681 li
@
142.066 132.19 mo
141.528 131.739 li
140.985 131.283 li
140.438 130.823 li
@
132.187 142.07 mo
131.734 141.532 li
131.278 140.989 li
130.819 140.442 li
@
120.74 150.085 mo
120.389 149.477 li
120.034 148.862 li
119.677 148.243 li
@
108.076 155.989 mo
107.836 155.329 li
107.594 154.664 li
107.349 153.993 li
@
94.5791 159.606 mo
94.458 158.915 li
94.335 158.217 li
94.21 157.513 li
@
80.6602 160.824 mo
80.6602 160.122 li
80.6602 159.413 li
80.6602 158.698 li
@
66.7402 159.606 mo
66.8623 158.915 li
66.9854 158.217 li
67.1094 157.513 li
@
53.2437 155.989 mo
53.4839 155.329 li
53.7266 154.664 li
53.9707 153.993 li
@
40.5801 150.085 mo
40.9312 149.477 li
41.2856 148.862 li
41.6431 148.243 li
@
29.1343 142.07 mo
29.5859 141.532 li
30.0415 140.989 li
30.5005 140.442 li
@
19.2539 132.19 mo
19.792 131.739 li
20.335 131.283 li
20.8823 130.823 li
@
11.2393 120.744 mo
11.8477 120.394 li
12.4614 120.038 li
13.0806 119.681 li
@
5.33447 108.081 mo
5.99463 107.841 li
6.66016 107.599 li
7.33203 107.354 li
@
1.71777 94.584 mo
2.40967 94.4619 li
3.10742 94.3389 li
3.81152 94.2148 li
@
0.5 80.6641 mo
1.20264 80.6641 li
1.91113 80.6641 li
2.62598 80.6641 li
@
1.71777 66.7446 mo
2.40967 66.8667 li
3.10742 66.9897 li
3.81152 67.1138 li
@
5.33447 53.248 mo
5.99463 53.4883 li
6.66016 53.7305 li
7.33203 53.9751 li
@
11.2393 40.5845 mo
11.8477 40.9355 li
12.4614 41.29 li
13.0806 41.647 li
@
19.2539 29.1382 mo
19.792 29.5898 li
20.335 30.0454 li
20.8823 30.5049 li
@
29.1343 19.2583 mo
29.5859 19.7964 li
30.0415 20.3394 li
30.5005 20.8867 li
@
40.5801 11.2437 mo
40.9312 11.8521 li
41.2856 12.4658 li
41.6431 13.0845 li
@
53.2437 5.33838 mo
53.4839 5.99854 li
53.7266 6.66455 li
53.9707 7.33594 li
@
66.7402 1.72217 mo
66.8623 2.41406 li
66.9854 3.11182 li
67.1094 3.81543 li
@
2.43066 98.1514 mo
2.70654 98.1514 2.93066 98.1514 2.93066 98.1514 cv
2.93066 98.1514 2.70654 98.1514 2.43066 98.1514 cv
2.1543 98.1514 1.93066 98.1514 1.93066 98.1514 cv
1.93066 98.1514 2.1543 98.1514 2.43066 98.1514 cv
cp
0.87451 0.243137 1 0.129412 cmyk
f
0.5 lw
0 lc
2.43066 98.1514 mo
2.70654 98.1514 2.93066 98.1514 2.93066 98.1514 cv
2.93066 98.1514 2.70654 98.1514 2.43066 98.1514 cv
2.1543 98.1514 1.93066 98.1514 1.93066 98.1514 cv
1.93066 98.1514 2.1543 98.1514 2.43066 98.1514 cv
cp
@
156.189 62.4346 mo
156.466 62.4346 156.689 62.4346 156.689 62.4346 cv
156.689 62.4346 156.466 62.4346 156.189 62.4346 cv
155.913 62.4346 155.689 62.4346 155.689 62.4346 cv
155.689 62.4346 155.913 62.4346 156.189 62.4346 cv
cp
f
156.189 62.4346 mo
156.466 62.4346 156.689 62.4346 156.689 62.4346 cv
156.689 62.4346 156.466 62.4346 156.189 62.4346 cv
155.913 62.4346 155.689 62.4346 155.689 62.4346 cv
155.689 62.4346 155.913 62.4346 156.189 62.4346 cv
cp
@
153.417 61.7861 mo
153.692 61.7861 153.917 61.7861 153.917 61.7861 cv
153.917 61.7861 153.692 61.7861 153.417 61.7861 cv
153.141 61.7861 152.917 61.7861 152.917 61.7861 cv
152.917 61.7861 153.141 61.7861 153.417 61.7861 cv
cp
f
153.417 61.7861 mo
153.692 61.7861 153.917 61.7861 153.917 61.7861 cv
153.917 61.7861 153.692 61.7861 153.417 61.7861 cv
153.141 61.7861 152.917 61.7861 152.917 61.7861 cv
152.917 61.7861 153.141 61.7861 153.417 61.7861 cv
cp
@
150.575 61.2271 mo
150.852 61.2271 151.075 61.2271 151.075 61.2271 cv
151.075 61.2271 150.852 61.2271 150.575 61.2271 cv
150.299 61.2271 150.075 61.2271 150.075 61.2271 cv
150.075 61.2271 150.299 61.2271 150.575 61.2271 cv
cp
f
150.575 61.2271 mo
150.852 61.2271 151.075 61.2271 151.075 61.2271 cv
151.075 61.2271 150.852 61.2271 150.575 61.2271 cv
150.299 61.2271 150.075 61.2271 150.075 61.2271 cv
150.075 61.2271 150.299 61.2271 150.575 61.2271 cv
cp
@
147.667 60.7524 mo
147.944 60.7524 148.167 60.7524 148.167 60.7524 cv
148.167 60.7524 147.944 60.7524 147.667 60.7524 cv
147.392 60.7524 147.167 60.7524 147.167 60.7524 cv
147.167 60.7524 147.392 60.7524 147.667 60.7524 cv
cp
f
147.667 60.7524 mo
147.944 60.7524 148.167 60.7524 148.167 60.7524 cv
148.167 60.7524 147.944 60.7524 147.667 60.7524 cv
147.392 60.7524 147.167 60.7524 147.167 60.7524 cv
147.167 60.7524 147.392 60.7524 147.667 60.7524 cv
cp
@
144.698 60.3579 mo
144.974 60.3579 145.198 60.3579 145.198 60.3579 cv
145.198 60.3579 144.974 60.3579 144.698 60.3579 cv
144.421 60.3579 144.198 60.3579 144.198 60.3579 cv
144.198 60.3579 144.421 60.3579 144.698 60.3579 cv
cp
f
144.698 60.3579 mo
144.974 60.3579 145.198 60.3579 145.198 60.3579 cv
145.198 60.3579 144.974 60.3579 144.698 60.3579 cv
144.421 60.3579 144.198 60.3579 144.198 60.3579 cv
144.198 60.3579 144.421 60.3579 144.698 60.3579 cv
cp
@
141.669 60.0405 mo
141.944 60.0405 142.169 60.0405 142.169 60.0405 cv
142.169 60.0405 141.944 60.0405 141.669 60.0405 cv
141.392 60.0405 141.169 60.0405 141.169 60.0405 cv
141.169 60.0405 141.392 60.0405 141.669 60.0405 cv
cp
f
141.669 60.0405 mo
141.944 60.0405 142.169 60.0405 142.169 60.0405 cv
142.169 60.0405 141.944 60.0405 141.669 60.0405 cv
141.392 60.0405 141.169 60.0405 141.169 60.0405 cv
141.169 60.0405 141.392 60.0405 141.669 60.0405 cv
cp
@
138.583 59.7969 mo
138.858 59.7969 139.083 59.7969 139.083 59.7969 cv
139.083 59.7969 138.858 59.7969 138.583 59.7969 cv
138.307 59.7969 138.083 59.7969 138.083 59.7969 cv
138.083 59.7969 138.307 59.7969 138.583 59.7969 cv
cp
f
138.583 59.7969 mo
138.858 59.7969 139.083 59.7969 139.083 59.7969 cv
139.083 59.7969 138.858 59.7969 138.583 59.7969 cv
138.307 59.7969 138.083 59.7969 138.083 59.7969 cv
138.083 59.7969 138.307 59.7969 138.583 59.7969 cv
cp
@
135.444 59.6235 mo
135.722 59.6235 135.944 59.6235 135.944 59.6235 cv
135.944 59.6235 135.722 59.6235 135.444 59.6235 cv
135.169 59.6235 134.944 59.6235 134.944 59.6235 cv
134.944 59.6235 135.169 59.6235 135.444 59.6235 cv
cp
f
135.444 59.6235 mo
135.722 59.6235 135.944 59.6235 135.944 59.6235 cv
135.944 59.6235 135.722 59.6235 135.444 59.6235 cv
135.169 59.6235 134.944 59.6235 134.944 59.6235 cv
134.944 59.6235 135.169 59.6235 135.444 59.6235 cv
cp
@
132.257 59.5186 mo
132.534 59.5186 132.757 59.5186 132.757 59.5186 cv
132.757 59.5186 132.534 59.5186 132.257 59.5186 cv
131.981 59.5186 131.757 59.5186 131.757 59.5186 cv
131.757 59.5186 131.981 59.5186 132.257 59.5186 cv
cp
f
132.257 59.5186 mo
132.534 59.5186 132.757 59.5186 132.757 59.5186 cv
132.757 59.5186 132.534 59.5186 132.257 59.5186 cv
131.981 59.5186 131.757 59.5186 131.757 59.5186 cv
131.757 59.5186 131.981 59.5186 132.257 59.5186 cv
cp
@
129.024 59.479 mo
129.3 59.479 129.524 59.479 129.524 59.479 cv
129.524 59.479 129.3 59.479 129.024 59.479 cv
128.747 59.479 128.524 59.479 128.524 59.479 cv
128.524 59.479 128.747 59.479 129.024 59.479 cv
cp
f
129.024 59.479 mo
129.3 59.479 129.524 59.479 129.524 59.479 cv
129.524 59.479 129.3 59.479 129.024 59.479 cv
128.747 59.479 128.524 59.479 128.524 59.479 cv
128.524 59.479 128.747 59.479 129.024 59.479 cv
cp
@
125.747 59.5034 mo
126.023 59.5034 126.247 59.5034 126.247 59.5034 cv
126.247 59.5034 126.023 59.5034 125.747 59.5034 cv
125.472 59.5034 125.247 59.5034 125.247 59.5034 cv
125.247 59.5034 125.472 59.5034 125.747 59.5034 cv
cp
f
125.747 59.5034 mo
126.023 59.5034 126.247 59.5034 126.247 59.5034 cv
126.247 59.5034 126.023 59.5034 125.747 59.5034 cv
125.472 59.5034 125.247 59.5034 125.247 59.5034 cv
125.247 59.5034 125.472 59.5034 125.747 59.5034 cv
cp
@
122.432 59.5889 mo
122.708 59.5889 122.932 59.5889 122.932 59.5889 cv
122.932 59.5889 122.708 59.5889 122.432 59.5889 cv
122.155 59.5889 121.932 59.5889 121.932 59.5889 cv
121.932 59.5889 122.155 59.5889 122.432 59.5889 cv
cp
f
122.432 59.5889 mo
122.708 59.5889 122.932 59.5889 122.932 59.5889 cv
122.932 59.5889 122.708 59.5889 122.432 59.5889 cv
122.155 59.5889 121.932 59.5889 121.932 59.5889 cv
121.932 59.5889 122.155 59.5889 122.432 59.5889 cv
cp
@
119.079 59.7349 mo
119.355 59.7349 119.579 59.7349 119.579 59.7349 cv
119.579 59.7349 119.355 59.7349 119.079 59.7349 cv
118.804 59.7349 118.579 59.7349 118.579 59.7349 cv
118.579 59.7349 118.804 59.7349 119.079 59.7349 cv
cp
f
119.079 59.7349 mo
119.355 59.7349 119.579 59.7349 119.579 59.7349 cv
119.579 59.7349 119.355 59.7349 119.079 59.7349 cv
118.804 59.7349 118.579 59.7349 118.579 59.7349 cv
118.579 59.7349 118.804 59.7349 119.079 59.7349 cv
cp
@
115.694 59.9385 mo
115.971 59.9385 116.194 59.9385 116.194 59.9385 cv
116.194 59.9385 115.971 59.9385 115.694 59.9385 cv
115.419 59.9385 115.194 59.9385 115.194 59.9385 cv
115.194 59.9385 115.419 59.9385 115.694 59.9385 cv
cp
f
115.694 59.9385 mo
115.971 59.9385 116.194 59.9385 116.194 59.9385 cv
116.194 59.9385 115.971 59.9385 115.694 59.9385 cv
115.419 59.9385 115.194 59.9385 115.194 59.9385 cv
115.194 59.9385 115.419 59.9385 115.694 59.9385 cv
cp
@
112.28 60.1992 mo
112.557 60.1992 112.78 60.1992 112.78 60.1992 cv
112.78 60.1992 112.557 60.1992 112.28 60.1992 cv
112.005 60.1992 111.78 60.1992 111.78 60.1992 cv
111.78 60.1992 112.005 60.1992 112.28 60.1992 cv
cp
f
112.28 60.1992 mo
112.557 60.1992 112.78 60.1992 112.78 60.1992 cv
112.78 60.1992 112.557 60.1992 112.28 60.1992 cv
112.005 60.1992 111.78 60.1992 111.78 60.1992 cv
111.78 60.1992 112.005 60.1992 112.28 60.1992 cv
cp
@
108.841 60.5151 mo
109.116 60.5151 109.341 60.5151 109.341 60.5151 cv
109.341 60.5151 109.116 60.5151 108.841 60.5151 cv
108.564 60.5151 108.341 60.5151 108.341 60.5151 cv
108.341 60.5151 108.564 60.5151 108.841 60.5151 cv
cp
f
108.841 60.5151 mo
109.116 60.5151 109.341 60.5151 109.341 60.5151 cv
109.341 60.5151 109.116 60.5151 108.841 60.5151 cv
108.564 60.5151 108.341 60.5151 108.341 60.5151 cv
108.341 60.5151 108.564 60.5151 108.841 60.5151 cv
cp
@
105.378 60.8848 mo
105.655 60.8848 105.878 60.8848 105.878 60.8848 cv
105.878 60.8848 105.655 60.8848 105.378 60.8848 cv
105.103 60.8848 104.878 60.8848 104.878 60.8848 cv
104.878 60.8848 105.103 60.8848 105.378 60.8848 cv
cp
f
105.378 60.8848 mo
105.655 60.8848 105.878 60.8848 105.878 60.8848 cv
105.878 60.8848 105.655 60.8848 105.378 60.8848 cv
105.103 60.8848 104.878 60.8848 104.878 60.8848 cv
104.878 60.8848 105.103 60.8848 105.378 60.8848 cv
cp
@
101.897 61.3076 mo
102.174 61.3076 102.397 61.3076 102.397 61.3076 cv
102.397 61.3076 102.174 61.3076 101.897 61.3076 cv
101.622 61.3076 101.397 61.3076 101.397 61.3076 cv
101.397 61.3076 101.622 61.3076 101.897 61.3076 cv
cp
f
101.897 61.3076 mo
102.174 61.3076 102.397 61.3076 102.397 61.3076 cv
102.397 61.3076 102.174 61.3076 101.897 61.3076 cv
101.622 61.3076 101.397 61.3076 101.397 61.3076 cv
101.397 61.3076 101.622 61.3076 101.897 61.3076 cv
cp
@
98.4014 61.7817 mo
98.6777 61.7817 98.9014 61.7817 98.9014 61.7817 cv
98.9014 61.7817 98.6777 61.7817 98.4014 61.7817 cv
98.126 61.7817 97.9014 61.7817 97.9014 61.7817 cv
97.9014 61.7817 98.126 61.7817 98.4014 61.7817 cv
cp
f
98.4014 61.7817 mo
98.6777 61.7817 98.9014 61.7817 98.9014 61.7817 cv
98.9014 61.7817 98.6777 61.7817 98.4014 61.7817 cv
98.126 61.7817 97.9014 61.7817 97.9014 61.7817 cv
97.9014 61.7817 98.126 61.7817 98.4014 61.7817 cv
cp
@
94.8936 62.3062 mo
95.1689 62.3062 95.3936 62.3062 95.3936 62.3062 cv
95.3936 62.3062 95.1689 62.3062 94.8936 62.3062 cv
94.6172 62.3062 94.3936 62.3062 94.3936 62.3062 cv
94.3936 62.3062 94.6172 62.3062 94.8936 62.3062 cv
cp
f
94.8936 62.3062 mo
95.1689 62.3062 95.3936 62.3062 95.3936 62.3062 cv
95.3936 62.3062 95.1689 62.3062 94.8936 62.3062 cv
94.6172 62.3062 94.3936 62.3062 94.3936 62.3062 cv
94.3936 62.3062 94.6172 62.3062 94.8936 62.3062 cv
cp
@
91.3779 62.8799 mo
91.6533 62.8799 91.8779 62.8799 91.8779 62.8799 cv
91.8779 62.8799 91.6533 62.8799 91.3779 62.8799 cv
91.1006 62.8799 90.8779 62.8799 90.8779 62.8799 cv
90.8779 62.8799 91.1006 62.8799 91.3779 62.8799 cv
cp
f
91.3779 62.8799 mo
91.6533 62.8799 91.8779 62.8799 91.8779 62.8799 cv
91.8779 62.8799 91.6533 62.8799 91.3779 62.8799 cv
91.1006 62.8799 90.8779 62.8799 90.8779 62.8799 cv
90.8779 62.8799 91.1006 62.8799 91.3779 62.8799 cv
cp
@
87.8564 63.5024 mo
88.1328 63.5024 88.3564 63.5024 88.3564 63.5024 cv
88.3564 63.5024 88.1328 63.5024 87.8564 63.5024 cv
87.5811 63.5024 87.3564 63.5024 87.3564 63.5024 cv
87.3564 63.5024 87.5811 63.5024 87.8564 63.5024 cv
cp
f
87.8564 63.5024 mo
88.1328 63.5024 88.3564 63.5024 88.3564 63.5024 cv
88.3564 63.5024 88.1328 63.5024 87.8564 63.5024 cv
87.5811 63.5024 87.3564 63.5024 87.3564 63.5024 cv
87.3564 63.5024 87.5811 63.5024 87.8564 63.5024 cv
cp
@
84.335 64.1719 mo
84.6113 64.1719 84.835 64.1719 84.835 64.1719 cv
84.835 64.1719 84.6113 64.1719 84.335 64.1719 cv
84.0596 64.1719 83.835 64.1719 83.835 64.1719 cv
83.835 64.1719 84.0596 64.1719 84.335 64.1719 cv
cp
f
84.335 64.1719 mo
84.6113 64.1719 84.835 64.1719 84.835 64.1719 cv
84.835 64.1719 84.6113 64.1719 84.335 64.1719 cv
84.0596 64.1719 83.835 64.1719 83.835 64.1719 cv
83.835 64.1719 84.0596 64.1719 84.335 64.1719 cv
cp
@
80.8164 64.8882 mo
81.0928 64.8882 81.3164 64.8882 81.3164 64.8882 cv
81.3164 64.8882 81.0928 64.8882 80.8164 64.8882 cv
80.54 64.8882 80.3164 64.8882 80.3164 64.8882 cv
80.3164 64.8882 80.54 64.8882 80.8164 64.8882 cv
cp
f
80.8164 64.8882 mo
81.0928 64.8882 81.3164 64.8882 81.3164 64.8882 cv
81.3164 64.8882 81.0928 64.8882 80.8164 64.8882 cv
80.54 64.8882 80.3164 64.8882 80.3164 64.8882 cv
80.3164 64.8882 80.54 64.8882 80.8164 64.8882 cv
cp
@
77.3037 65.6494 mo
77.5801 65.6494 77.8037 65.6494 77.8037 65.6494 cv
77.8037 65.6494 77.5801 65.6494 77.3037 65.6494 cv
77.0278 65.6494 76.8037 65.6494 76.8037 65.6494 cv
76.8037 65.6494 77.0278 65.6494 77.3037 65.6494 cv
cp
f
77.3037 65.6494 mo
77.5801 65.6494 77.8037 65.6494 77.8037 65.6494 cv
77.8037 65.6494 77.5801 65.6494 77.3037 65.6494 cv
77.0278 65.6494 76.8037 65.6494 76.8037 65.6494 cv
76.8037 65.6494 77.0278 65.6494 77.3037 65.6494 cv
cp
@
73.8013 66.4561 mo
74.0776 66.4561 74.3013 66.4561 74.3013 66.4561 cv
74.3013 66.4561 74.0776 66.4561 73.8013 66.4561 cv
73.5254 66.4561 73.3013 66.4561 73.3013 66.4561 cv
73.3013 66.4561 73.5254 66.4561 73.8013 66.4561 cv
cp
f
73.8013 66.4561 mo
74.0776 66.4561 74.3013 66.4561 74.3013 66.4561 cv
74.3013 66.4561 74.0776 66.4561 73.8013 66.4561 cv
73.5254 66.4561 73.3013 66.4561 73.3013 66.4561 cv
73.3013 66.4561 73.5254 66.4561 73.8013 66.4561 cv
cp
@
70.3125 67.3062 mo
70.5889 67.3062 70.8125 67.3062 70.8125 67.3062 cv
70.8125 67.3062 70.5889 67.3062 70.3125 67.3062 cv
70.0366 67.3062 69.8125 67.3062 69.8125 67.3062 cv
69.8125 67.3062 70.0366 67.3062 70.3125 67.3062 cv
cp
f
70.3125 67.3062 mo
70.5889 67.3062 70.8125 67.3062 70.8125 67.3062 cv
70.8125 67.3062 70.5889 67.3062 70.3125 67.3062 cv
70.0366 67.3062 69.8125 67.3062 69.8125 67.3062 cv
69.8125 67.3062 70.0366 67.3062 70.3125 67.3062 cv
cp
@
66.8408 68.1997 mo
67.1172 68.1997 67.3408 68.1997 67.3408 68.1997 cv
67.3408 68.1997 67.1172 68.1997 66.8408 68.1997 cv
66.5649 68.1997 66.3408 68.1997 66.3408 68.1997 cv
66.3408 68.1997 66.5649 68.1997 66.8408 68.1997 cv
cp
f
66.8408 68.1997 mo
67.1172 68.1997 67.3408 68.1997 67.3408 68.1997 cv
67.3408 68.1997 67.1172 68.1997 66.8408 68.1997 cv
66.5649 68.1997 66.3408 68.1997 66.3408 68.1997 cv
66.3408 68.1997 66.5649 68.1997 66.8408 68.1997 cv
cp
@
63.3906 69.1357 mo
63.6665 69.1357 63.8906 69.1357 63.8906 69.1357 cv
63.8906 69.1357 63.6665 69.1357 63.3906 69.1357 cv
63.1143 69.1357 62.8906 69.1357 62.8906 69.1357 cv
62.8906 69.1357 63.1143 69.1357 63.3906 69.1357 cv
cp
f
63.3906 69.1357 mo
63.6665 69.1357 63.8906 69.1357 63.8906 69.1357 cv
63.8906 69.1357 63.6665 69.1357 63.3906 69.1357 cv
63.1143 69.1357 62.8906 69.1357 62.8906 69.1357 cv
62.8906 69.1357 63.1143 69.1357 63.3906 69.1357 cv
cp
@
59.9648 70.1138 mo
60.2407 70.1138 60.4648 70.1138 60.4648 70.1138 cv
60.4648 70.1138 60.2407 70.1138 59.9648 70.1138 cv
59.6885 70.1138 59.4648 70.1138 59.4648 70.1138 cv
59.4648 70.1138 59.6885 70.1138 59.9648 70.1138 cv
cp
f
59.9648 70.1138 mo
60.2407 70.1138 60.4648 70.1138 60.4648 70.1138 cv
60.4648 70.1138 60.2407 70.1138 59.9648 70.1138 cv
59.6885 70.1138 59.4648 70.1138 59.4648 70.1138 cv
59.4648 70.1138 59.6885 70.1138 59.9648 70.1138 cv
cp
@
56.5674 71.1328 mo
56.8433 71.1328 57.0674 71.1328 57.0674 71.1328 cv
57.0674 71.1328 56.8433 71.1328 56.5674 71.1328 cv
56.291 71.1328 56.0674 71.1328 56.0674 71.1328 cv
56.0674 71.1328 56.291 71.1328 56.5674 71.1328 cv
cp
f
56.5674 71.1328 mo
56.8433 71.1328 57.0674 71.1328 57.0674 71.1328 cv
57.0674 71.1328 56.8433 71.1328 56.5674 71.1328 cv
56.291 71.1328 56.0674 71.1328 56.0674 71.1328 cv
56.0674 71.1328 56.291 71.1328 56.5674 71.1328 cv
cp
@
53.2021 72.1924 mo
53.478 72.1924 53.7021 72.1924 53.7021 72.1924 cv
53.7021 72.1924 53.478 72.1924 53.2021 72.1924 cv
52.9258 72.1924 52.7021 72.1924 52.7021 72.1924 cv
52.7021 72.1924 52.9258 72.1924 53.2021 72.1924 cv
cp
f
53.2021 72.1924 mo
53.478 72.1924 53.7021 72.1924 53.7021 72.1924 cv
53.7021 72.1924 53.478 72.1924 53.2021 72.1924 cv
52.9258 72.1924 52.7021 72.1924 52.7021 72.1924 cv
52.7021 72.1924 52.9258 72.1924 53.2021 72.1924 cv
cp
@
49.8726 73.292 mo
50.1484 73.292 50.3726 73.292 50.3726 73.292 cv
50.3726 73.292 50.1484 73.292 49.8726 73.292 cv
49.5962 73.292 49.3726 73.292 49.3726 73.292 cv
49.3726 73.292 49.5962 73.292 49.8726 73.292 cv
cp
f
49.8726 73.292 mo
50.1484 73.292 50.3726 73.292 50.3726 73.292 cv
50.3726 73.292 50.1484 73.292 49.8726 73.292 cv
49.5962 73.292 49.3726 73.292 49.3726 73.292 cv
49.3726 73.292 49.5962 73.292 49.8726 73.292 cv
cp
@
46.582 74.4316 mo
46.8584 74.4316 47.082 74.4316 47.082 74.4316 cv
47.082 74.4316 46.8584 74.4316 46.582 74.4316 cv
46.3062 74.4316 46.082 74.4316 46.082 74.4316 cv
46.082 74.4316 46.3062 74.4316 46.582 74.4316 cv
cp
f
46.582 74.4316 mo
46.8584 74.4316 47.082 74.4316 47.082 74.4316 cv
47.082 74.4316 46.8584 74.4316 46.582 74.4316 cv
46.3062 74.4316 46.082 74.4316 46.082 74.4316 cv
46.082 74.4316 46.3062 74.4316 46.582 74.4316 cv
cp
@
43.3354 75.6104 mo
43.6113 75.6104 43.8354 75.6104 43.8354 75.6104 cv
43.8354 75.6104 43.6113 75.6104 43.3354 75.6104 cv
43.0591 75.6104 42.8354 75.6104 42.8354 75.6104 cv
42.8354 75.6104 43.0591 75.6104 43.3354 75.6104 cv
cp
f
43.3354 75.6104 mo
43.6113 75.6104 43.8354 75.6104 43.8354 75.6104 cv
43.8354 75.6104 43.6113 75.6104 43.3354 75.6104 cv
43.0591 75.6104 42.8354 75.6104 42.8354 75.6104 cv
42.8354 75.6104 43.0591 75.6104 43.3354 75.6104 cv
cp
@
40.1353 76.8281 mo
40.4111 76.8281 40.6353 76.8281 40.6353 76.8281 cv
40.6353 76.8281 40.4111 76.8281 40.1353 76.8281 cv
39.8589 76.8281 39.6353 76.8281 39.6353 76.8281 cv
39.6353 76.8281 39.8589 76.8281 40.1353 76.8281 cv
cp
f
40.1353 76.8281 mo
40.4111 76.8281 40.6353 76.8281 40.6353 76.8281 cv
40.6353 76.8281 40.4111 76.8281 40.1353 76.8281 cv
39.8589 76.8281 39.6353 76.8281 39.6353 76.8281 cv
39.6353 76.8281 39.8589 76.8281 40.1353 76.8281 cv
cp
@
36.9858 78.0845 mo
37.2617 78.0845 37.4858 78.0845 37.4858 78.0845 cv
37.4858 78.0845 37.2617 78.0845 36.9858 78.0845 cv
36.7095 78.0845 36.4858 78.0845 36.4858 78.0845 cv
36.4858 78.0845 36.7095 78.0845 36.9858 78.0845 cv
cp
f
36.9858 78.0845 mo
37.2617 78.0845 37.4858 78.0845 37.4858 78.0845 cv
37.4858 78.0845 37.2617 78.0845 36.9858 78.0845 cv
36.7095 78.0845 36.4858 78.0845 36.4858 78.0845 cv
36.4858 78.0845 36.7095 78.0845 36.9858 78.0845 cv
cp
@
33.8906 79.3804 mo
34.167 79.3804 34.3906 79.3804 34.3906 79.3804 cv
34.3906 79.3804 34.167 79.3804 33.8906 79.3804 cv
33.6147 79.3804 33.3906 79.3804 33.3906 79.3804 cv
33.3906 79.3804 33.6147 79.3804 33.8906 79.3804 cv
cp
f
33.8906 79.3804 mo
34.167 79.3804 34.3906 79.3804 34.3906 79.3804 cv
34.3906 79.3804 34.167 79.3804 33.8906 79.3804 cv
33.6147 79.3804 33.3906 79.3804 33.3906 79.3804 cv
33.3906 79.3804 33.6147 79.3804 33.8906 79.3804 cv
cp
@
30.854 80.7144 mo
31.1299 80.7144 31.354 80.7144 31.354 80.7144 cv
31.354 80.7144 31.1299 80.7144 30.854 80.7144 cv
30.5776 80.7144 30.354 80.7144 30.354 80.7144 cv
30.354 80.7144 30.5776 80.7144 30.854 80.7144 cv
cp
f
30.854 80.7144 mo
31.1299 80.7144 31.354 80.7144 31.354 80.7144 cv
31.354 80.7144 31.1299 80.7144 30.854 80.7144 cv
30.5776 80.7144 30.354 80.7144 30.354 80.7144 cv
30.354 80.7144 30.5776 80.7144 30.854 80.7144 cv
cp
@
27.8789 82.0869 mo
28.1553 82.0869 28.3789 82.0869 28.3789 82.0869 cv
28.3789 82.0869 28.1553 82.0869 27.8789 82.0869 cv
27.603 82.0869 27.3789 82.0869 27.3789 82.0869 cv
27.3789 82.0869 27.603 82.0869 27.8789 82.0869 cv
cp
f
27.8789 82.0869 mo
28.1553 82.0869 28.3789 82.0869 28.3789 82.0869 cv
28.3789 82.0869 28.1553 82.0869 27.8789 82.0869 cv
27.603 82.0869 27.3789 82.0869 27.3789 82.0869 cv
27.3789 82.0869 27.603 82.0869 27.8789 82.0869 cv
cp
@
24.9697 83.5 mo
25.2461 83.5 25.4697 83.5 25.4697 83.5 cv
25.4697 83.5 25.2461 83.5 24.9697 83.5 cv
24.6938 83.5 24.4697 83.5 24.4697 83.5 cv
24.4697 83.5 24.6938 83.5 24.9697 83.5 cv
cp
f
24.9697 83.5 mo
25.2461 83.5 25.4697 83.5 25.4697 83.5 cv
25.4697 83.5 25.2461 83.5 24.9697 83.5 cv
24.6938 83.5 24.4697 83.5 24.4697 83.5 cv
24.4697 83.5 24.6938 83.5 24.9697 83.5 cv
cp
@
22.1304 84.9521 mo
22.4067 84.9521 22.6304 84.9521 22.6304 84.9521 cv
22.6304 84.9521 22.4067 84.9521 22.1304 84.9521 cv
21.8545 84.9521 21.6304 84.9521 21.6304 84.9521 cv
21.6304 84.9521 21.8545 84.9521 22.1304 84.9521 cv
cp
f
22.1304 84.9521 mo
22.4067 84.9521 22.6304 84.9521 22.6304 84.9521 cv
22.6304 84.9521 22.4067 84.9521 22.1304 84.9521 cv
21.8545 84.9521 21.6304 84.9521 21.6304 84.9521 cv
21.6304 84.9521 21.8545 84.9521 22.1304 84.9521 cv
cp
@
19.3647 86.4453 mo
19.6411 86.4453 19.8647 86.4453 19.8647 86.4453 cv
19.8647 86.4453 19.6411 86.4453 19.3647 86.4453 cv
19.0889 86.4453 18.8647 86.4453 18.8647 86.4453 cv
18.8647 86.4453 19.0889 86.4453 19.3647 86.4453 cv
cp
f
19.3647 86.4453 mo
19.6411 86.4453 19.8647 86.4453 19.8647 86.4453 cv
19.8647 86.4453 19.6411 86.4453 19.3647 86.4453 cv
19.0889 86.4453 18.8647 86.4453 18.8647 86.4453 cv
18.8647 86.4453 19.0889 86.4453 19.3647 86.4453 cv
cp
@
16.6772 87.9795 mo
16.9531 87.9795 17.1772 87.9795 17.1772 87.9795 cv
17.1772 87.9795 16.9531 87.9795 16.6772 87.9795 cv
16.4009 87.9795 16.1772 87.9795 16.1772 87.9795 cv
16.1772 87.9795 16.4009 87.9795 16.6772 87.9795 cv
cp
f
16.6772 87.9795 mo
16.9531 87.9795 17.1772 87.9795 17.1772 87.9795 cv
17.1772 87.9795 16.9531 87.9795 16.6772 87.9795 cv
16.4009 87.9795 16.1772 87.9795 16.1772 87.9795 cv
16.1772 87.9795 16.4009 87.9795 16.6772 87.9795 cv
cp
@
14.0713 89.5566 mo
14.3472 89.5566 14.5713 89.5566 14.5713 89.5566 cv
14.5713 89.5566 14.3472 89.5566 14.0713 89.5566 cv
13.7949 89.5566 13.5713 89.5566 13.5713 89.5566 cv
13.5713 89.5566 13.7949 89.5566 14.0713 89.5566 cv
cp
f
14.0713 89.5566 mo
14.3472 89.5566 14.5713 89.5566 14.5713 89.5566 cv
14.5713 89.5566 14.3472 89.5566 14.0713 89.5566 cv
13.7949 89.5566 13.5713 89.5566 13.5713 89.5566 cv
13.5713 89.5566 13.7949 89.5566 14.0713 89.5566 cv
cp
@
11.5518 91.1777 mo
11.8276 91.1777 12.0518 91.1777 12.0518 91.1777 cv
12.0518 91.1777 11.8276 91.1777 11.5518 91.1777 cv
11.2754 91.1777 11.0518 91.1777 11.0518 91.1777 cv
11.0518 91.1777 11.2754 91.1777 11.5518 91.1777 cv
cp
f
11.5518 91.1777 mo
11.8276 91.1777 12.0518 91.1777 12.0518 91.1777 cv
12.0518 91.1777 11.8276 91.1777 11.5518 91.1777 cv
11.2754 91.1777 11.0518 91.1777 11.0518 91.1777 cv
11.0518 91.1777 11.2754 91.1777 11.5518 91.1777 cv
cp
@
9.12305 92.8447 mo
9.39893 92.8447 9.62305 92.8447 9.62305 92.8447 cv
9.62305 92.8447 9.39893 92.8447 9.12305 92.8447 cv
8.84668 92.8447 8.62305 92.8447 8.62305 92.8447 cv
8.62305 92.8447 8.84668 92.8447 9.12305 92.8447 cv
cp
f
9.12305 92.8447 mo
9.39893 92.8447 9.62305 92.8447 9.62305 92.8447 cv
9.62305 92.8447 9.39893 92.8447 9.12305 92.8447 cv
8.84668 92.8447 8.62305 92.8447 8.62305 92.8447 cv
8.62305 92.8447 8.84668 92.8447 9.12305 92.8447 cv
cp
@
6.78955 94.5615 mo
7.06592 94.5615 7.28955 94.5615 7.28955 94.5615 cv
7.28955 94.5615 7.06592 94.5615 6.78955 94.5615 cv
6.51367 94.5615 6.28955 94.5615 6.28955 94.5615 cv
6.28955 94.5615 6.51367 94.5615 6.78955 94.5615 cv
cp
f
6.78955 94.5615 mo
7.06592 94.5615 7.28955 94.5615 7.28955 94.5615 cv
7.28955 94.5615 7.06592 94.5615 6.78955 94.5615 cv
6.51367 94.5615 6.28955 94.5615 6.28955 94.5615 cv
6.28955 94.5615 6.51367 94.5615 6.78955 94.5615 cv
cp
@
4.55713 96.3291 mo
4.8335 96.3291 5.05713 96.3291 5.05713 96.3291 cv
5.05713 96.3291 4.8335 96.3291 4.55713 96.3291 cv
4.28076 96.3291 4.05713 96.3291 4.05713 96.3291 cv
4.05713 96.3291 4.28076 96.3291 4.55713 96.3291 cv
cp
f
4.55713 96.3291 mo
4.8335 96.3291 5.05713 96.3291 5.05713 96.3291 cv
5.05713 96.3291 4.8335 96.3291 4.55713 96.3291 cv
4.28076 96.3291 4.05713 96.3291 4.05713 96.3291 cv
4.05713 96.3291 4.28076 96.3291 4.55713 96.3291 cv
cp
@
2.43066 98.1514 mo
2.70654 98.1514 2.93066 98.1514 2.93066 98.1514 cv
2.93066 98.1514 2.70654 98.1514 2.43066 98.1514 cv
2.1543 98.1514 1.93066 98.1514 1.93066 98.1514 cv
1.93066 98.1514 2.1543 98.1514 2.43066 98.1514 cv
cp
f
2.43066 98.1514 mo
2.70654 98.1514 2.93066 98.1514 2.93066 98.1514 cv
2.93066 98.1514 2.70654 98.1514 2.43066 98.1514 cv
2.1543 98.1514 1.93066 98.1514 1.93066 98.1514 cv
1.93066 98.1514 2.1543 98.1514 2.43066 98.1514 cv
cp
@
5.13037 98.8936 mo
5.40674 98.8936 5.63037 98.8936 5.63037 98.8936 cv
5.63037 98.8936 5.40674 98.8936 5.13037 98.8936 cv
4.85449 98.8936 4.63037 98.8936 4.63037 98.8936 cv
4.63037 98.8936 4.85449 98.8936 5.13037 98.8936 cv
cp
0.713725 0 0.305882 0 cmyk
f
5.13037 98.8936 mo
5.40674 98.8936 5.63037 98.8936 5.63037 98.8936 cv
5.63037 98.8936 5.40674 98.8936 5.13037 98.8936 cv
4.85449 98.8936 4.63037 98.8936 4.63037 98.8936 cv
4.63037 98.8936 4.85449 98.8936 5.13037 98.8936 cv
cp
@
7.90332 99.542 mo
8.1792 99.542 8.40332 99.542 8.40332 99.542 cv
8.40332 99.542 8.1792 99.542 7.90332 99.542 cv
7.62695 99.542 7.40332 99.542 7.40332 99.542 cv
7.40332 99.542 7.62695 99.542 7.90332 99.542 cv
cp
f
7.90332 99.542 mo
8.1792 99.542 8.40332 99.542 8.40332 99.542 cv
8.40332 99.542 8.1792 99.542 7.90332 99.542 cv
7.62695 99.542 7.40332 99.542 7.40332 99.542 cv
7.40332 99.542 7.62695 99.542 7.90332 99.542 cv
cp
@
10.7451 100.102 mo
11.021 100.102 11.2451 100.102 11.2451 100.102 cv
11.2451 100.102 11.021 100.102 10.7451 100.102 cv
10.4688 100.102 10.2451 100.102 10.2451 100.102 cv
10.2451 100.102 10.4688 100.102 10.7451 100.102 cv
cp
f
10.7451 100.102 mo
11.021 100.102 11.2451 100.102 11.2451 100.102 cv
11.2451 100.102 11.021 100.102 10.7451 100.102 cv
10.4688 100.102 10.2451 100.102 10.2451 100.102 cv
10.2451 100.102 10.4688 100.102 10.7451 100.102 cv
cp
@
13.6523 100.576 mo
13.9287 100.576 14.1523 100.576 14.1523 100.576 cv
14.1523 100.576 13.9287 100.576 13.6523 100.576 cv
13.3765 100.576 13.1523 100.576 13.1523 100.576 cv
13.1523 100.576 13.3765 100.576 13.6523 100.576 cv
cp
f
13.6523 100.576 mo
13.9287 100.576 14.1523 100.576 14.1523 100.576 cv
14.1523 100.576 13.9287 100.576 13.6523 100.576 cv
13.3765 100.576 13.1523 100.576 13.1523 100.576 cv
13.1523 100.576 13.3765 100.576 13.6523 100.576 cv
cp
@
16.6226 100.97 mo
16.8984 100.97 17.1226 100.97 17.1226 100.97 cv
17.1226 100.97 16.8984 100.97 16.6226 100.97 cv
16.3462 100.97 16.1226 100.97 16.1226 100.97 cv
16.1226 100.97 16.3462 100.97 16.6226 100.97 cv
cp
f
16.6226 100.97 mo
16.8984 100.97 17.1226 100.97 17.1226 100.97 cv
17.1226 100.97 16.8984 100.97 16.6226 100.97 cv
16.3462 100.97 16.1226 100.97 16.1226 100.97 cv
16.1226 100.97 16.3462 100.97 16.6226 100.97 cv
cp
@
19.6519 101.288 mo
19.9277 101.288 20.1519 101.288 20.1519 101.288 cv
20.1519 101.288 19.9277 101.288 19.6519 101.288 cv
19.3755 101.288 19.1519 101.288 19.1519 101.288 cv
19.1519 101.288 19.3755 101.288 19.6519 101.288 cv
cp
f
19.6519 101.288 mo
19.9277 101.288 20.1519 101.288 20.1519 101.288 cv
20.1519 101.288 19.9277 101.288 19.6519 101.288 cv
19.3755 101.288 19.1519 101.288 19.1519 101.288 cv
19.1519 101.288 19.3755 101.288 19.6519 101.288 cv
cp
@
22.7373 101.532 mo
23.0132 101.532 23.2373 101.532 23.2373 101.532 cv
23.2373 101.532 23.0132 101.532 22.7373 101.532 cv
22.4609 101.532 22.2373 101.532 22.2373 101.532 cv
22.2373 101.532 22.4609 101.532 22.7373 101.532 cv
cp
f
22.7373 101.532 mo
23.0132 101.532 23.2373 101.532 23.2373 101.532 cv
23.2373 101.532 23.0132 101.532 22.7373 101.532 cv
22.4609 101.532 22.2373 101.532 22.2373 101.532 cv
22.2373 101.532 22.4609 101.532 22.7373 101.532 cv
cp
@
25.875 101.704 mo
26.1514 101.704 26.375 101.704 26.375 101.704 cv
26.375 101.704 26.1514 101.704 25.875 101.704 cv
25.5991 101.704 25.375 101.704 25.375 101.704 cv
25.375 101.704 25.5991 101.704 25.875 101.704 cv
cp
f
25.875 101.704 mo
26.1514 101.704 26.375 101.704 26.375 101.704 cv
26.375 101.704 26.1514 101.704 25.875 101.704 cv
25.5991 101.704 25.375 101.704 25.375 101.704 cv
25.375 101.704 25.5991 101.704 25.875 101.704 cv
cp
@
29.0625 101.81 mo
29.3389 101.81 29.5625 101.81 29.5625 101.81 cv
29.5625 101.81 29.3389 101.81 29.0625 101.81 cv
28.7866 101.81 28.5625 101.81 28.5625 101.81 cv
28.5625 101.81 28.7866 101.81 29.0625 101.81 cv
cp
f
29.0625 101.81 mo
29.3389 101.81 29.5625 101.81 29.5625 101.81 cv
29.5625 101.81 29.3389 101.81 29.0625 101.81 cv
28.7866 101.81 28.5625 101.81 28.5625 101.81 cv
28.5625 101.81 28.7866 101.81 29.0625 101.81 cv
cp
@
32.2964 101.85 mo
32.5723 101.85 32.7964 101.85 32.7964 101.85 cv
32.7964 101.85 32.5723 101.85 32.2964 101.85 cv
32.02 101.85 31.7964 101.85 31.7964 101.85 cv
31.7964 101.85 32.02 101.85 32.2964 101.85 cv
cp
f
32.2964 101.85 mo
32.5723 101.85 32.7964 101.85 32.7964 101.85 cv
32.7964 101.85 32.5723 101.85 32.2964 101.85 cv
32.02 101.85 31.7964 101.85 31.7964 101.85 cv
31.7964 101.85 32.02 101.85 32.2964 101.85 cv
cp
@
35.5728 101.825 mo
35.8486 101.825 36.0728 101.825 36.0728 101.825 cv
36.0728 101.825 35.8486 101.825 35.5728 101.825 cv
35.2964 101.825 35.0728 101.825 35.0728 101.825 cv
35.0728 101.825 35.2964 101.825 35.5728 101.825 cv
cp
f
35.5728 101.825 mo
35.8486 101.825 36.0728 101.825 36.0728 101.825 cv
36.0728 101.825 35.8486 101.825 35.5728 101.825 cv
35.2964 101.825 35.0728 101.825 35.0728 101.825 cv
35.0728 101.825 35.2964 101.825 35.5728 101.825 cv
cp
@
38.8887 101.739 mo
39.165 101.739 39.3887 101.739 39.3887 101.739 cv
39.3887 101.739 39.165 101.739 38.8887 101.739 cv
38.6123 101.739 38.3887 101.739 38.3887 101.739 cv
38.3887 101.739 38.6123 101.739 38.8887 101.739 cv
cp
f
38.8887 101.739 mo
39.165 101.739 39.3887 101.739 39.3887 101.739 cv
39.3887 101.739 39.165 101.739 38.8887 101.739 cv
38.6123 101.739 38.3887 101.739 38.3887 101.739 cv
38.3887 101.739 38.6123 101.739 38.8887 101.739 cv
cp
@
42.2407 101.594 mo
42.5166 101.594 42.7407 101.594 42.7407 101.594 cv
42.7407 101.594 42.5166 101.594 42.2407 101.594 cv
41.9644 101.594 41.7407 101.594 41.7407 101.594 cv
41.7407 101.594 41.9644 101.594 42.2407 101.594 cv
cp
f
42.2407 101.594 mo
42.5166 101.594 42.7407 101.594 42.7407 101.594 cv
42.7407 101.594 42.5166 101.594 42.2407 101.594 cv
41.9644 101.594 41.7407 101.594 41.7407 101.594 cv
41.7407 101.594 41.9644 101.594 42.2407 101.594 cv
cp
@
45.6255 101.39 mo
45.9014 101.39 46.1255 101.39 46.1255 101.39 cv
46.1255 101.39 45.9014 101.39 45.6255 101.39 cv
45.3491 101.39 45.1255 101.39 45.1255 101.39 cv
45.1255 101.39 45.3491 101.39 45.6255 101.39 cv
cp
f
45.6255 101.39 mo
45.9014 101.39 46.1255 101.39 46.1255 101.39 cv
46.1255 101.39 45.9014 101.39 45.6255 101.39 cv
45.3491 101.39 45.1255 101.39 45.1255 101.39 cv
45.1255 101.39 45.3491 101.39 45.6255 101.39 cv
cp
@
49.0396 101.13 mo
49.3154 101.13 49.5396 101.13 49.5396 101.13 cv
49.5396 101.13 49.3154 101.13 49.0396 101.13 cv
48.7632 101.13 48.5396 101.13 48.5396 101.13 cv
48.5396 101.13 48.7632 101.13 49.0396 101.13 cv
cp
f
49.0396 101.13 mo
49.3154 101.13 49.5396 101.13 49.5396 101.13 cv
49.5396 101.13 49.3154 101.13 49.0396 101.13 cv
48.7632 101.13 48.5396 101.13 48.5396 101.13 cv
48.5396 101.13 48.7632 101.13 49.0396 101.13 cv
cp
@
52.4795 100.813 mo
52.7554 100.813 52.9795 100.813 52.9795 100.813 cv
52.9795 100.813 52.7554 100.813 52.4795 100.813 cv
52.2031 100.813 51.9795 100.813 51.9795 100.813 cv
51.9795 100.813 52.2031 100.813 52.4795 100.813 cv
cp
f
52.4795 100.813 mo
52.7554 100.813 52.9795 100.813 52.9795 100.813 cv
52.9795 100.813 52.7554 100.813 52.4795 100.813 cv
52.2031 100.813 51.9795 100.813 51.9795 100.813 cv
51.9795 100.813 52.2031 100.813 52.4795 100.813 cv
cp
@
55.9414 100.444 mo
56.2178 100.444 56.4414 100.444 56.4414 100.444 cv
56.4414 100.444 56.2178 100.444 55.9414 100.444 cv
55.6655 100.444 55.4414 100.444 55.4414 100.444 cv
55.4414 100.444 55.6655 100.444 55.9414 100.444 cv
cp
f
55.9414 100.444 mo
56.2178 100.444 56.4414 100.444 56.4414 100.444 cv
56.4414 100.444 56.2178 100.444 55.9414 100.444 cv
55.6655 100.444 55.4414 100.444 55.4414 100.444 cv
55.4414 100.444 55.6655 100.444 55.9414 100.444 cv
cp
@
59.4224 100.021 mo
59.6987 100.021 59.9224 100.021 59.9224 100.021 cv
59.9224 100.021 59.6987 100.021 59.4224 100.021 cv
59.1465 100.021 58.9224 100.021 58.9224 100.021 cv
58.9224 100.021 59.1465 100.021 59.4224 100.021 cv
cp
f
59.4224 100.021 mo
59.6987 100.021 59.9224 100.021 59.9224 100.021 cv
59.9224 100.021 59.6987 100.021 59.4224 100.021 cv
59.1465 100.021 58.9224 100.021 58.9224 100.021 cv
58.9224 100.021 59.1465 100.021 59.4224 100.021 cv
cp
@
62.9185 99.5469 mo
63.1948 99.5469 63.4185 99.5469 63.4185 99.5469 cv
63.4185 99.5469 63.1948 99.5469 62.9185 99.5469 cv
62.6426 99.5469 62.4185 99.5469 62.4185 99.5469 cv
62.4185 99.5469 62.6426 99.5469 62.9185 99.5469 cv
cp
f
62.9185 99.5469 mo
63.1948 99.5469 63.4185 99.5469 63.4185 99.5469 cv
63.4185 99.5469 63.1948 99.5469 62.9185 99.5469 cv
62.6426 99.5469 62.4185 99.5469 62.4185 99.5469 cv
62.4185 99.5469 62.6426 99.5469 62.9185 99.5469 cv
cp
@
66.4268 99.0225 mo
66.7026 99.0225 66.9268 99.0225 66.9268 99.0225 cv
66.9268 99.0225 66.7026 99.0225 66.4268 99.0225 cv
66.1504 99.0225 65.9268 99.0225 65.9268 99.0225 cv
65.9268 99.0225 66.1504 99.0225 66.4268 99.0225 cv
cp
f
66.4268 99.0225 mo
66.7026 99.0225 66.9268 99.0225 66.9268 99.0225 cv
66.9268 99.0225 66.7026 99.0225 66.4268 99.0225 cv
66.1504 99.0225 65.9268 99.0225 65.9268 99.0225 cv
65.9268 99.0225 66.1504 99.0225 66.4268 99.0225 cv
cp
@
69.9429 98.4482 mo
70.2188 98.4482 70.4429 98.4482 70.4429 98.4482 cv
70.4429 98.4482 70.2188 98.4482 69.9429 98.4482 cv
69.6665 98.4482 69.4429 98.4482 69.4429 98.4482 cv
69.4429 98.4482 69.6665 98.4482 69.9429 98.4482 cv
cp
f
69.9429 98.4482 mo
70.2188 98.4482 70.4429 98.4482 70.4429 98.4482 cv
70.4429 98.4482 70.2188 98.4482 69.9429 98.4482 cv
69.6665 98.4482 69.4429 98.4482 69.4429 98.4482 cv
69.4429 98.4482 69.6665 98.4482 69.9429 98.4482 cv
cp
@
73.4634 97.8262 mo
73.7393 97.8262 73.9634 97.8262 73.9634 97.8262 cv
73.9634 97.8262 73.7393 97.8262 73.4634 97.8262 cv
73.187 97.8262 72.9634 97.8262 72.9634 97.8262 cv
72.9634 97.8262 73.187 97.8262 73.4634 97.8262 cv
cp
f
73.4634 97.8262 mo
73.7393 97.8262 73.9634 97.8262 73.9634 97.8262 cv
73.9634 97.8262 73.7393 97.8262 73.4634 97.8262 cv
73.187 97.8262 72.9634 97.8262 72.9634 97.8262 cv
72.9634 97.8262 73.187 97.8262 73.4634 97.8262 cv
cp
@
76.9849 97.1572 mo
77.2607 97.1572 77.4854 97.1572 77.4854 97.1572 cv
77.4854 97.1572 77.2607 97.1572 76.9849 97.1572 cv
76.709 97.1572 76.4849 97.1572 76.4849 97.1572 cv
76.4849 97.1572 76.709 97.1572 76.9849 97.1572 cv
cp
f
76.9849 97.1572 mo
77.2607 97.1572 77.4854 97.1572 77.4854 97.1572 cv
77.4854 97.1572 77.2607 97.1572 76.9849 97.1572 cv
76.709 97.1572 76.4849 97.1572 76.4849 97.1572 cv
76.4849 97.1572 76.709 97.1572 76.9849 97.1572 cv
cp
@
80.5039 96.4404 mo
80.7803 96.4404 81.0039 96.4404 81.0039 96.4404 cv
81.0039 96.4404 80.7803 96.4404 80.5039 96.4404 cv
80.2275 96.4404 80.0039 96.4404 80.0039 96.4404 cv
80.0039 96.4404 80.2275 96.4404 80.5039 96.4404 cv
cp
f
80.5039 96.4404 mo
80.7803 96.4404 81.0039 96.4404 81.0039 96.4404 cv
81.0039 96.4404 80.7803 96.4404 80.5039 96.4404 cv
80.2275 96.4404 80.0039 96.4404 80.0039 96.4404 cv
80.0039 96.4404 80.2275 96.4404 80.5039 96.4404 cv
cp
@
84.0166 95.6787 mo
84.292 95.6787 84.5166 95.6787 84.5166 95.6787 cv
84.5166 95.6787 84.292 95.6787 84.0166 95.6787 cv
83.7402 95.6787 83.5166 95.6787 83.5166 95.6787 cv
83.5166 95.6787 83.7402 95.6787 84.0166 95.6787 cv
cp
f
84.0166 95.6787 mo
84.292 95.6787 84.5166 95.6787 84.5166 95.6787 cv
84.5166 95.6787 84.292 95.6787 84.0166 95.6787 cv
83.7402 95.6787 83.5166 95.6787 83.5166 95.6787 cv
83.5166 95.6787 83.7402 95.6787 84.0166 95.6787 cv
cp
@
87.5186 94.8721 mo
87.7949 94.8721 88.0186 94.8721 88.0186 94.8721 cv
88.0186 94.8721 87.7949 94.8721 87.5186 94.8721 cv
87.2432 94.8721 87.0186 94.8721 87.0186 94.8721 cv
87.0186 94.8721 87.2432 94.8721 87.5186 94.8721 cv
cp
f
87.5186 94.8721 mo
87.7949 94.8721 88.0186 94.8721 88.0186 94.8721 cv
88.0186 94.8721 87.7949 94.8721 87.5186 94.8721 cv
87.2432 94.8721 87.0186 94.8721 87.0186 94.8721 cv
87.0186 94.8721 87.2432 94.8721 87.5186 94.8721 cv
cp
@
91.0068 94.0225 mo
91.2842 94.0225 91.5068 94.0225 91.5068 94.0225 cv
91.5068 94.0225 91.2842 94.0225 91.0068 94.0225 cv
90.7314 94.0225 90.5068 94.0225 90.5068 94.0225 cv
90.5068 94.0225 90.7314 94.0225 91.0068 94.0225 cv
cp
f
91.0068 94.0225 mo
91.2842 94.0225 91.5068 94.0225 91.5068 94.0225 cv
91.5068 94.0225 91.2842 94.0225 91.0068 94.0225 cv
90.7314 94.0225 90.5068 94.0225 90.5068 94.0225 cv
90.5068 94.0225 90.7314 94.0225 91.0068 94.0225 cv
cp
@
94.4795 93.1279 mo
94.7549 93.1279 94.9795 93.1279 94.9795 93.1279 cv
94.9795 93.1279 94.7549 93.1279 94.4795 93.1279 cv
94.2031 93.1279 93.9795 93.1279 93.9795 93.1279 cv
93.9795 93.1279 94.2031 93.1279 94.4795 93.1279 cv
cp
f
94.4795 93.1279 mo
94.7549 93.1279 94.9795 93.1279 94.9795 93.1279 cv
94.9795 93.1279 94.7549 93.1279 94.4795 93.1279 cv
94.2031 93.1279 93.9795 93.1279 93.9795 93.1279 cv
93.9795 93.1279 94.2031 93.1279 94.4795 93.1279 cv
cp
@
97.9297 92.1924 mo
98.2061 92.1924 98.4297 92.1924 98.4297 92.1924 cv
98.4297 92.1924 98.2061 92.1924 97.9297 92.1924 cv
97.6533 92.1924 97.4297 92.1924 97.4297 92.1924 cv
97.4297 92.1924 97.6533 92.1924 97.9297 92.1924 cv
cp
f
97.9297 92.1924 mo
98.2061 92.1924 98.4297 92.1924 98.4297 92.1924 cv
98.4297 92.1924 98.2061 92.1924 97.9297 92.1924 cv
97.6533 92.1924 97.4297 92.1924 97.4297 92.1924 cv
97.4297 92.1924 97.6533 92.1924 97.9297 92.1924 cv
cp
@
101.355 91.2148 mo
101.632 91.2148 101.855 91.2148 101.855 91.2148 cv
101.855 91.2148 101.632 91.2148 101.355 91.2148 cv
101.079 91.2148 100.855 91.2148 100.855 91.2148 cv
100.855 91.2148 101.079 91.2148 101.355 91.2148 cv
cp
f
101.355 91.2148 mo
101.632 91.2148 101.855 91.2148 101.855 91.2148 cv
101.855 91.2148 101.632 91.2148 101.355 91.2148 cv
101.079 91.2148 100.855 91.2148 100.855 91.2148 cv
100.855 91.2148 101.079 91.2148 101.355 91.2148 cv
cp
@
104.753 90.1963 mo
105.028 90.1963 105.253 90.1963 105.253 90.1963 cv
105.253 90.1963 105.028 90.1963 104.753 90.1963 cv
104.477 90.1963 104.253 90.1963 104.253 90.1963 cv
104.253 90.1963 104.477 90.1963 104.753 90.1963 cv
cp
f
104.753 90.1963 mo
105.028 90.1963 105.253 90.1963 105.253 90.1963 cv
105.253 90.1963 105.028 90.1963 104.753 90.1963 cv
104.477 90.1963 104.253 90.1963 104.253 90.1963 cv
104.253 90.1963 104.477 90.1963 104.753 90.1963 cv
cp
@
108.118 89.1357 mo
108.395 89.1357 108.618 89.1357 108.618 89.1357 cv
108.618 89.1357 108.395 89.1357 108.118 89.1357 cv
107.842 89.1357 107.618 89.1357 107.618 89.1357 cv
107.618 89.1357 107.842 89.1357 108.118 89.1357 cv
cp
f
108.118 89.1357 mo
108.395 89.1357 108.618 89.1357 108.618 89.1357 cv
108.618 89.1357 108.395 89.1357 108.118 89.1357 cv
107.842 89.1357 107.618 89.1357 107.618 89.1357 cv
107.618 89.1357 107.842 89.1357 108.118 89.1357 cv
cp
@
111.448 88.0361 mo
111.724 88.0361 111.948 88.0361 111.948 88.0361 cv
111.948 88.0361 111.724 88.0361 111.448 88.0361 cv
111.171 88.0361 110.948 88.0361 110.948 88.0361 cv
110.948 88.0361 111.171 88.0361 111.448 88.0361 cv
cp
f
111.448 88.0361 mo
111.724 88.0361 111.948 88.0361 111.948 88.0361 cv
111.948 88.0361 111.724 88.0361 111.448 88.0361 cv
111.171 88.0361 110.948 88.0361 110.948 88.0361 cv
110.948 88.0361 111.171 88.0361 111.448 88.0361 cv
cp
@
114.737 86.8975 mo
115.015 86.8975 115.237 86.8975 115.237 86.8975 cv
115.237 86.8975 115.015 86.8975 114.737 86.8975 cv
114.462 86.8975 114.237 86.8975 114.237 86.8975 cv
114.237 86.8975 114.462 86.8975 114.737 86.8975 cv
cp
f
114.737 86.8975 mo
115.015 86.8975 115.237 86.8975 115.237 86.8975 cv
115.237 86.8975 115.015 86.8975 114.737 86.8975 cv
114.462 86.8975 114.237 86.8975 114.237 86.8975 cv
114.237 86.8975 114.462 86.8975 114.737 86.8975 cv
cp
@
117.985 85.7178 mo
118.261 85.7178 118.485 85.7178 118.485 85.7178 cv
118.485 85.7178 118.261 85.7178 117.985 85.7178 cv
117.708 85.7178 117.485 85.7178 117.485 85.7178 cv
117.485 85.7178 117.708 85.7178 117.985 85.7178 cv
cp
f
117.985 85.7178 mo
118.261 85.7178 118.485 85.7178 118.485 85.7178 cv
118.485 85.7178 118.261 85.7178 117.985 85.7178 cv
117.708 85.7178 117.485 85.7178 117.485 85.7178 cv
117.485 85.7178 117.708 85.7178 117.985 85.7178 cv
cp
@
121.185 84.501 mo
121.461 84.501 121.685 84.501 121.685 84.501 cv
121.685 84.501 121.461 84.501 121.185 84.501 cv
120.909 84.501 120.685 84.501 120.685 84.501 cv
120.685 84.501 120.909 84.501 121.185 84.501 cv
cp
f
121.185 84.501 mo
121.461 84.501 121.685 84.501 121.685 84.501 cv
121.685 84.501 121.461 84.501 121.185 84.501 cv
120.909 84.501 120.685 84.501 120.685 84.501 cv
120.685 84.501 120.909 84.501 121.185 84.501 cv
cp
@
124.335 83.2432 mo
124.61 83.2432 124.835 83.2432 124.835 83.2432 cv
124.835 83.2432 124.61 83.2432 124.335 83.2432 cv
124.058 83.2432 123.835 83.2432 123.835 83.2432 cv
123.835 83.2432 124.058 83.2432 124.335 83.2432 cv
cp
f
124.335 83.2432 mo
124.61 83.2432 124.835 83.2432 124.835 83.2432 cv
124.835 83.2432 124.61 83.2432 124.335 83.2432 cv
124.058 83.2432 123.835 83.2432 123.835 83.2432 cv
123.835 83.2432 124.058 83.2432 124.335 83.2432 cv
cp
@
127.429 81.9482 mo
127.706 81.9482 127.929 81.9482 127.929 81.9482 cv
127.929 81.9482 127.706 81.9482 127.429 81.9482 cv
127.153 81.9482 126.929 81.9482 126.929 81.9482 cv
126.929 81.9482 127.153 81.9482 127.429 81.9482 cv
cp
f
127.429 81.9482 mo
127.706 81.9482 127.929 81.9482 127.929 81.9482 cv
127.929 81.9482 127.706 81.9482 127.429 81.9482 cv
127.153 81.9482 126.929 81.9482 126.929 81.9482 cv
126.929 81.9482 127.153 81.9482 127.429 81.9482 cv
cp
@
130.466 80.6143 mo
130.742 80.6143 130.966 80.6143 130.966 80.6143 cv
130.966 80.6143 130.742 80.6143 130.466 80.6143 cv
130.19 80.6143 129.966 80.6143 129.966 80.6143 cv
129.966 80.6143 130.19 80.6143 130.466 80.6143 cv
cp
f
130.466 80.6143 mo
130.742 80.6143 130.966 80.6143 130.966 80.6143 cv
130.966 80.6143 130.742 80.6143 130.466 80.6143 cv
130.19 80.6143 129.966 80.6143 129.966 80.6143 cv
129.966 80.6143 130.19 80.6143 130.466 80.6143 cv
cp
@
133.44 79.2407 mo
133.718 79.2407 133.94 79.2407 133.94 79.2407 cv
133.94 79.2407 133.718 79.2407 133.44 79.2407 cv
133.165 79.2407 132.94 79.2407 132.94 79.2407 cv
132.94 79.2407 133.165 79.2407 133.44 79.2407 cv
cp
f
133.44 79.2407 mo
133.718 79.2407 133.94 79.2407 133.94 79.2407 cv
133.94 79.2407 133.718 79.2407 133.44 79.2407 cv
133.165 79.2407 132.94 79.2407 132.94 79.2407 cv
132.94 79.2407 133.165 79.2407 133.44 79.2407 cv
cp
@
136.351 77.8286 mo
136.626 77.8286 136.851 77.8286 136.851 77.8286 cv
136.851 77.8286 136.626 77.8286 136.351 77.8286 cv
136.074 77.8286 135.851 77.8286 135.851 77.8286 cv
135.851 77.8286 136.074 77.8286 136.351 77.8286 cv
cp
f
136.351 77.8286 mo
136.626 77.8286 136.851 77.8286 136.851 77.8286 cv
136.851 77.8286 136.626 77.8286 136.351 77.8286 cv
136.074 77.8286 135.851 77.8286 135.851 77.8286 cv
135.851 77.8286 136.074 77.8286 136.351 77.8286 cv
cp
@
139.189 76.376 mo
139.466 76.376 139.689 76.376 139.689 76.376 cv
139.689 76.376 139.466 76.376 139.189 76.376 cv
138.913 76.376 138.689 76.376 138.689 76.376 cv
138.689 76.376 138.913 76.376 139.189 76.376 cv
cp
f
139.189 76.376 mo
139.466 76.376 139.689 76.376 139.689 76.376 cv
139.689 76.376 139.466 76.376 139.189 76.376 cv
138.913 76.376 138.689 76.376 138.689 76.376 cv
138.689 76.376 138.913 76.376 139.189 76.376 cv
cp
@
141.955 74.8833 mo
142.231 74.8833 142.455 74.8833 142.455 74.8833 cv
142.455 74.8833 142.231 74.8833 141.955 74.8833 cv
141.679 74.8833 141.455 74.8833 141.455 74.8833 cv
141.455 74.8833 141.679 74.8833 141.955 74.8833 cv
cp
f
141.955 74.8833 mo
142.231 74.8833 142.455 74.8833 142.455 74.8833 cv
142.455 74.8833 142.231 74.8833 141.955 74.8833 cv
141.679 74.8833 141.455 74.8833 141.455 74.8833 cv
141.455 74.8833 141.679 74.8833 141.955 74.8833 cv
cp
@
144.644 73.3491 mo
144.919 73.3491 145.144 73.3491 145.144 73.3491 cv
145.144 73.3491 144.919 73.3491 144.644 73.3491 cv
144.366 73.3491 144.144 73.3491 144.144 73.3491 cv
144.144 73.3491 144.366 73.3491 144.644 73.3491 cv
cp
f
144.644 73.3491 mo
144.919 73.3491 145.144 73.3491 145.144 73.3491 cv
145.144 73.3491 144.919 73.3491 144.644 73.3491 cv
144.366 73.3491 144.144 73.3491 144.144 73.3491 cv
144.144 73.3491 144.366 73.3491 144.644 73.3491 cv
cp
@
147.249 71.772 mo
147.524 71.772 147.749 71.772 147.749 71.772 cv
147.749 71.772 147.524 71.772 147.249 71.772 cv
146.973 71.772 146.749 71.772 146.749 71.772 cv
146.749 71.772 146.973 71.772 147.249 71.772 cv
cp
f
147.249 71.772 mo
147.524 71.772 147.749 71.772 147.749 71.772 cv
147.749 71.772 147.524 71.772 147.249 71.772 cv
146.973 71.772 146.749 71.772 146.749 71.772 cv
146.749 71.772 146.973 71.772 147.249 71.772 cv
cp
@
149.769 70.1509 mo
150.044 70.1509 150.269 70.1509 150.269 70.1509 cv
150.269 70.1509 150.044 70.1509 149.769 70.1509 cv
149.492 70.1509 149.269 70.1509 149.269 70.1509 cv
149.269 70.1509 149.492 70.1509 149.769 70.1509 cv
cp
f
149.769 70.1509 mo
150.044 70.1509 150.269 70.1509 150.269 70.1509 cv
150.269 70.1509 150.044 70.1509 149.769 70.1509 cv
149.492 70.1509 149.269 70.1509 149.269 70.1509 cv
149.269 70.1509 149.492 70.1509 149.769 70.1509 cv
cp
@
152.197 68.4834 mo
152.474 68.4834 152.697 68.4834 152.697 68.4834 cv
152.697 68.4834 152.474 68.4834 152.197 68.4834 cv
151.921 68.4834 151.697 68.4834 151.697 68.4834 cv
151.697 68.4834 151.921 68.4834 152.197 68.4834 cv
cp
f
152.197 68.4834 mo
152.474 68.4834 152.697 68.4834 152.697 68.4834 cv
152.697 68.4834 152.474 68.4834 152.197 68.4834 cv
151.921 68.4834 151.697 68.4834 151.697 68.4834 cv
151.697 68.4834 151.921 68.4834 152.197 68.4834 cv
cp
@
154.53 66.7671 mo
154.807 66.7671 155.03 66.7671 155.03 66.7671 cv
155.03 66.7671 154.807 66.7671 154.53 66.7671 cv
154.255 66.7671 154.03 66.7671 154.03 66.7671 cv
154.03 66.7671 154.255 66.7671 154.53 66.7671 cv
cp
f
154.53 66.7671 mo
154.807 66.7671 155.03 66.7671 155.03 66.7671 cv
155.03 66.7671 154.807 66.7671 154.53 66.7671 cv
154.255 66.7671 154.03 66.7671 154.03 66.7671 cv
154.03 66.7671 154.255 66.7671 154.53 66.7671 cv
cp
@
156.763 65 mo
157.039 65 157.263 65 157.263 65 cv
157.263 65 157.039 65 156.763 65 cv
156.487 65 156.263 65 156.263 65 cv
156.263 65 156.487 65 156.763 65 cv
cp
f
156.763 65 mo
157.039 65 157.263 65 157.263 65 cv
157.263 65 157.039 65 156.763 65 cv
156.487 65 156.263 65 156.263 65 cv
156.263 65 156.487 65 156.763 65 cv
cp
@
158.89 63.1777 mo
159.165 63.1777 159.39 63.1777 159.39 63.1777 cv
159.39 63.1777 159.165 63.1777 158.89 63.1777 cv
158.613 63.1777 158.39 63.1777 158.39 63.1777 cv
158.39 63.1777 158.613 63.1777 158.89 63.1777 cv
cp
f
158.89 63.1777 mo
159.165 63.1777 159.39 63.1777 159.39 63.1777 cv
159.39 63.1777 159.165 63.1777 158.89 63.1777 cv
158.613 63.1777 158.39 63.1777 158.39 63.1777 cv
158.39 63.1777 158.613 63.1777 158.89 63.1777 cv
cp
@
11.5918 39.98 mo
11.8682 39.98 12.0918 39.98 12.0918 39.98 cv
12.0918 39.98 11.8682 39.98 11.5918 39.98 cv
11.3159 39.98 11.0918 39.98 11.0918 39.98 cv
11.0918 39.98 11.3159 39.98 11.5918 39.98 cv
cp
0.87451 0.243137 1 0.129412 cmyk
f
11.5918 39.98 mo
11.8682 39.98 12.0918 39.98 12.0918 39.98 cv
12.0918 39.98 11.8682 39.98 11.5918 39.98 cv
11.3159 39.98 11.0918 39.98 11.0918 39.98 cv
11.0918 39.98 11.3159 39.98 11.5918 39.98 cv
cp
@
147.716 119.738 mo
147.992 119.738 148.216 119.738 148.216 119.738 cv
148.216 119.738 147.992 119.738 147.716 119.738 cv
147.44 119.738 147.216 119.738 147.216 119.738 cv
147.216 119.738 147.44 119.738 147.716 119.738 cv
cp
f
147.716 119.738 mo
147.992 119.738 148.216 119.738 148.216 119.738 cv
148.216 119.738 147.992 119.738 147.716 119.738 cv
147.44 119.738 147.216 119.738 147.216 119.738 cv
147.216 119.738 147.44 119.738 147.716 119.738 cv
cp
@
145.626 118.108 mo
145.901 118.108 146.126 118.108 146.126 118.108 cv
146.126 118.108 145.901 118.108 145.626 118.108 cv
145.35 118.108 145.126 118.108 145.126 118.108 cv
145.126 118.108 145.35 118.108 145.626 118.108 cv
cp
f
145.626 118.108 mo
145.901 118.108 146.126 118.108 146.126 118.108 cv
146.126 118.108 145.901 118.108 145.626 118.108 cv
145.35 118.108 145.126 118.108 145.126 118.108 cv
145.126 118.108 145.35 118.108 145.626 118.108 cv
cp
@
143.46 116.456 mo
143.736 116.456 143.96 116.456 143.96 116.456 cv
143.96 116.456 143.736 116.456 143.46 116.456 cv
143.185 116.456 142.96 116.456 142.96 116.456 cv
142.96 116.456 143.185 116.456 143.46 116.456 cv
cp
f
143.46 116.456 mo
143.736 116.456 143.96 116.456 143.96 116.456 cv
143.96 116.456 143.736 116.456 143.46 116.456 cv
143.185 116.456 142.96 116.456 142.96 116.456 cv
142.96 116.456 143.185 116.456 143.46 116.456 cv
cp
@
141.224 114.786 mo
141.499 114.786 141.724 114.786 141.724 114.786 cv
141.724 114.786 141.499 114.786 141.224 114.786 cv
140.946 114.786 140.724 114.786 140.724 114.786 cv
140.724 114.786 140.946 114.786 141.224 114.786 cv
cp
f
141.224 114.786 mo
141.499 114.786 141.724 114.786 141.724 114.786 cv
141.724 114.786 141.499 114.786 141.224 114.786 cv
140.946 114.786 140.724 114.786 140.724 114.786 cv
140.724 114.786 140.946 114.786 141.224 114.786 cv
cp
@
138.917 113.095 mo
139.192 113.095 139.417 113.095 139.417 113.095 cv
139.417 113.095 139.192 113.095 138.917 113.095 cv
138.641 113.095 138.417 113.095 138.417 113.095 cv
138.417 113.095 138.641 113.095 138.917 113.095 cv
cp
f
138.917 113.095 mo
139.192 113.095 139.417 113.095 139.417 113.095 cv
139.417 113.095 139.192 113.095 138.917 113.095 cv
138.641 113.095 138.417 113.095 138.417 113.095 cv
138.417 113.095 138.641 113.095 138.917 113.095 cv
cp
@
136.544 111.386 mo
136.82 111.386 137.044 111.386 137.044 111.386 cv
137.044 111.386 136.82 111.386 136.544 111.386 cv
136.268 111.386 136.044 111.386 136.044 111.386 cv
136.044 111.386 136.268 111.386 136.544 111.386 cv
cp
f
136.544 111.386 mo
136.82 111.386 137.044 111.386 137.044 111.386 cv
137.044 111.386 136.82 111.386 136.544 111.386 cv
136.268 111.386 136.044 111.386 136.044 111.386 cv
136.044 111.386 136.268 111.386 136.544 111.386 cv
cp
@
134.108 109.659 mo
134.384 109.659 134.608 109.659 134.608 109.659 cv
134.608 109.659 134.384 109.659 134.108 109.659 cv
133.832 109.659 133.608 109.659 133.608 109.659 cv
133.608 109.659 133.832 109.659 134.108 109.659 cv
cp
f
134.108 109.659 mo
134.384 109.659 134.608 109.659 134.608 109.659 cv
134.608 109.659 134.384 109.659 134.108 109.659 cv
133.832 109.659 133.608 109.659 133.608 109.659 cv
133.608 109.659 133.832 109.659 134.108 109.659 cv
cp
@
131.612 107.915 mo
131.889 107.915 132.112 107.915 132.112 107.915 cv
132.112 107.915 131.889 107.915 131.612 107.915 cv
131.337 107.915 131.112 107.915 131.112 107.915 cv
131.112 107.915 131.337 107.915 131.612 107.915 cv
cp
f
131.612 107.915 mo
131.889 107.915 132.112 107.915 132.112 107.915 cv
132.112 107.915 131.889 107.915 131.612 107.915 cv
131.337 107.915 131.112 107.915 131.112 107.915 cv
131.112 107.915 131.337 107.915 131.612 107.915 cv
cp
@
129.06 106.155 mo
129.335 106.155 129.56 106.155 129.56 106.155 cv
129.56 106.155 129.335 106.155 129.06 106.155 cv
128.782 106.155 128.56 106.155 128.56 106.155 cv
128.56 106.155 128.782 106.155 129.06 106.155 cv
cp
f
129.06 106.155 mo
129.335 106.155 129.56 106.155 129.56 106.155 cv
129.56 106.155 129.335 106.155 129.06 106.155 cv
128.782 106.155 128.56 106.155 128.56 106.155 cv
128.56 106.155 128.782 106.155 129.06 106.155 cv
cp
@
126.451 104.382 mo
126.728 104.382 126.951 104.382 126.951 104.382 cv
126.951 104.382 126.728 104.382 126.451 104.382 cv
126.175 104.382 125.951 104.382 125.951 104.382 cv
125.951 104.382 126.175 104.382 126.451 104.382 cv
cp
f
126.451 104.382 mo
126.728 104.382 126.951 104.382 126.951 104.382 cv
126.951 104.382 126.728 104.382 126.451 104.382 cv
126.175 104.382 125.951 104.382 125.951 104.382 cv
125.951 104.382 126.175 104.382 126.451 104.382 cv
cp
@
123.792 102.595 mo
124.068 102.595 124.292 102.595 124.292 102.595 cv
124.292 102.595 124.068 102.595 123.792 102.595 cv
123.517 102.595 123.292 102.595 123.292 102.595 cv
123.292 102.595 123.517 102.595 123.792 102.595 cv
cp
f
123.792 102.595 mo
124.068 102.595 124.292 102.595 124.292 102.595 cv
124.292 102.595 124.068 102.595 123.792 102.595 cv
123.517 102.595 123.292 102.595 123.292 102.595 cv
123.292 102.595 123.517 102.595 123.792 102.595 cv
cp
@
121.085 100.795 mo
121.36 100.795 121.585 100.795 121.585 100.795 cv
121.585 100.795 121.36 100.795 121.085 100.795 cv
120.808 100.795 120.585 100.795 120.585 100.795 cv
120.585 100.795 120.808 100.795 121.085 100.795 cv
cp
f
121.085 100.795 mo
121.36 100.795 121.585 100.795 121.585 100.795 cv
121.585 100.795 121.36 100.795 121.085 100.795 cv
120.808 100.795 120.585 100.795 120.585 100.795 cv
120.585 100.795 120.808 100.795 121.085 100.795 cv
cp
@
118.331 98.9854 mo
118.606 98.9854 118.831 98.9854 118.831 98.9854 cv
118.831 98.9854 118.606 98.9854 118.331 98.9854 cv
118.055 98.9854 117.831 98.9854 117.831 98.9854 cv
117.831 98.9854 118.055 98.9854 118.331 98.9854 cv
cp
f
118.331 98.9854 mo
118.606 98.9854 118.831 98.9854 118.831 98.9854 cv
118.831 98.9854 118.606 98.9854 118.331 98.9854 cv
118.055 98.9854 117.831 98.9854 117.831 98.9854 cv
117.831 98.9854 118.055 98.9854 118.331 98.9854 cv
cp
@
115.534 97.165 mo
115.812 97.165 116.034 97.165 116.034 97.165 cv
116.034 97.165 115.812 97.165 115.534 97.165 cv
115.259 97.165 115.034 97.165 115.034 97.165 cv
115.034 97.165 115.259 97.165 115.534 97.165 cv
cp
f
115.534 97.165 mo
115.812 97.165 116.034 97.165 116.034 97.165 cv
116.034 97.165 115.812 97.165 115.534 97.165 cv
115.259 97.165 115.034 97.165 115.034 97.165 cv
115.034 97.165 115.259 97.165 115.534 97.165 cv
cp
@
112.699 95.3389 mo
112.976 95.3389 113.199 95.3389 113.199 95.3389 cv
113.199 95.3389 112.976 95.3389 112.699 95.3389 cv
112.423 95.3389 112.199 95.3389 112.199 95.3389 cv
112.199 95.3389 112.423 95.3389 112.699 95.3389 cv
cp
f
112.699 95.3389 mo
112.976 95.3389 113.199 95.3389 113.199 95.3389 cv
113.199 95.3389 112.976 95.3389 112.699 95.3389 cv
112.423 95.3389 112.199 95.3389 112.199 95.3389 cv
112.199 95.3389 112.423 95.3389 112.699 95.3389 cv
cp
@
109.826 93.5049 mo
110.103 93.5049 110.326 93.5049 110.326 93.5049 cv
110.326 93.5049 110.103 93.5049 109.826 93.5049 cv
109.55 93.5049 109.326 93.5049 109.326 93.5049 cv
109.326 93.5049 109.55 93.5049 109.826 93.5049 cv
cp
f
109.826 93.5049 mo
110.103 93.5049 110.326 93.5049 110.326 93.5049 cv
110.326 93.5049 110.103 93.5049 109.826 93.5049 cv
109.55 93.5049 109.326 93.5049 109.326 93.5049 cv
109.326 93.5049 109.55 93.5049 109.826 93.5049 cv
cp
@
106.92 91.667 mo
107.196 91.667 107.42 91.667 107.42 91.667 cv
107.42 91.667 107.196 91.667 106.92 91.667 cv
106.644 91.667 106.42 91.667 106.42 91.667 cv
106.42 91.667 106.644 91.667 106.92 91.667 cv
cp
f
106.92 91.667 mo
107.196 91.667 107.42 91.667 107.42 91.667 cv
107.42 91.667 107.196 91.667 106.92 91.667 cv
106.644 91.667 106.42 91.667 106.42 91.667 cv
106.42 91.667 106.644 91.667 106.92 91.667 cv
cp
@
103.983 89.8271 mo
104.259 89.8271 104.483 89.8271 104.483 89.8271 cv
104.483 89.8271 104.259 89.8271 103.983 89.8271 cv
103.707 89.8271 103.483 89.8271 103.483 89.8271 cv
103.483 89.8271 103.707 89.8271 103.983 89.8271 cv
cp
f
103.983 89.8271 mo
104.259 89.8271 104.483 89.8271 104.483 89.8271 cv
104.483 89.8271 104.259 89.8271 103.983 89.8271 cv
103.707 89.8271 103.483 89.8271 103.483 89.8271 cv
103.483 89.8271 103.707 89.8271 103.983 89.8271 cv
cp
@
101.019 87.9844 mo
101.294 87.9844 101.519 87.9844 101.519 87.9844 cv
101.519 87.9844 101.294 87.9844 101.019 87.9844 cv
100.742 87.9844 100.519 87.9844 100.519 87.9844 cv
100.519 87.9844 100.742 87.9844 101.019 87.9844 cv
cp
f
101.019 87.9844 mo
101.294 87.9844 101.519 87.9844 101.519 87.9844 cv
101.519 87.9844 101.294 87.9844 101.019 87.9844 cv
100.742 87.9844 100.519 87.9844 100.519 87.9844 cv
100.519 87.9844 100.742 87.9844 101.019 87.9844 cv
cp
@
98.0293 86.1426 mo
98.3057 86.1426 98.5293 86.1426 98.5293 86.1426 cv
98.5293 86.1426 98.3057 86.1426 98.0293 86.1426 cv
97.7529 86.1426 97.5293 86.1426 97.5293 86.1426 cv
97.5293 86.1426 97.7529 86.1426 98.0293 86.1426 cv
cp
f
98.0293 86.1426 mo
98.3057 86.1426 98.5293 86.1426 98.5293 86.1426 cv
98.5293 86.1426 98.3057 86.1426 98.0293 86.1426 cv
97.7529 86.1426 97.5293 86.1426 97.5293 86.1426 cv
97.5293 86.1426 97.7529 86.1426 98.0293 86.1426 cv
cp
@
95.0186 84.3037 mo
95.2939 84.3037 95.5186 84.3037 95.5186 84.3037 cv
95.5186 84.3037 95.2939 84.3037 95.0186 84.3037 cv
94.7412 84.3037 94.5186 84.3037 94.5186 84.3037 cv
94.5186 84.3037 94.7412 84.3037 95.0186 84.3037 cv
cp
f
95.0186 84.3037 mo
95.2939 84.3037 95.5186 84.3037 95.5186 84.3037 cv
95.5186 84.3037 95.2939 84.3037 95.0186 84.3037 cv
94.7412 84.3037 94.5186 84.3037 94.5186 84.3037 cv
94.5186 84.3037 94.7412 84.3037 95.0186 84.3037 cv
cp
@
91.9883 82.4678 mo
92.2646 82.4678 92.4883 82.4678 92.4883 82.4678 cv
92.4883 82.4678 92.2646 82.4678 91.9883 82.4678 cv
91.7119 82.4678 91.4883 82.4678 91.4883 82.4678 cv
91.4883 82.4678 91.7119 82.4678 91.9883 82.4678 cv
cp
f
91.9883 82.4678 mo
92.2646 82.4678 92.4883 82.4678 92.4883 82.4678 cv
92.4883 82.4678 92.2646 82.4678 91.9883 82.4678 cv
91.7119 82.4678 91.4883 82.4678 91.4883 82.4678 cv
91.4883 82.4678 91.7119 82.4678 91.9883 82.4678 cv
cp
@
88.9434 80.6367 mo
89.2197 80.6367 89.4434 80.6367 89.4434 80.6367 cv
89.4434 80.6367 89.2197 80.6367 88.9434 80.6367 cv
88.667 80.6367 88.4434 80.6367 88.4434 80.6367 cv
88.4434 80.6367 88.667 80.6367 88.9434 80.6367 cv
cp
f
88.9434 80.6367 mo
89.2197 80.6367 89.4434 80.6367 89.4434 80.6367 cv
89.4434 80.6367 89.2197 80.6367 88.9434 80.6367 cv
88.667 80.6367 88.4434 80.6367 88.4434 80.6367 cv
88.4434 80.6367 88.667 80.6367 88.9434 80.6367 cv
cp
@
85.8857 78.814 mo
86.1611 78.814 86.3857 78.814 86.3857 78.814 cv
86.3857 78.814 86.1611 78.814 85.8857 78.814 cv
85.6094 78.814 85.3857 78.814 85.3857 78.814 cv
85.3857 78.814 85.6094 78.814 85.8857 78.814 cv
cp
f
85.8857 78.814 mo
86.1611 78.814 86.3857 78.814 86.3857 78.814 cv
86.3857 78.814 86.1611 78.814 85.8857 78.814 cv
85.6094 78.814 85.3857 78.814 85.3857 78.814 cv
85.3857 78.814 85.6094 78.814 85.8857 78.814 cv
cp
@
82.8184 77 mo
83.0947 77 83.3184 77 83.3184 77 cv
83.3184 77 83.0947 77 82.8184 77 cv
82.542 77 82.3184 77 82.3184 77 cv
82.3184 77 82.542 77 82.8184 77 cv
cp
f
82.8184 77 mo
83.0947 77 83.3184 77 83.3184 77 cv
83.3184 77 83.0947 77 82.8184 77 cv
82.542 77 82.3184 77 82.3184 77 cv
82.3184 77 82.542 77 82.8184 77 cv
cp
@
79.7451 75.1968 mo
80.0215 75.1968 80.2451 75.1968 80.2451 75.1968 cv
80.2451 75.1968 80.0215 75.1968 79.7451 75.1968 cv
79.4688 75.1968 79.2451 75.1968 79.2451 75.1968 cv
79.2451 75.1968 79.4688 75.1968 79.7451 75.1968 cv
cp
f
79.7451 75.1968 mo
80.0215 75.1968 80.2451 75.1968 80.2451 75.1968 cv
80.2451 75.1968 80.0215 75.1968 79.7451 75.1968 cv
79.4688 75.1968 79.2451 75.1968 79.2451 75.1968 cv
79.2451 75.1968 79.4688 75.1968 79.7451 75.1968 cv
cp
@
76.6685 73.4063 mo
76.9443 73.4063 77.1689 73.4063 77.1689 73.4063 cv
77.1689 73.4063 76.9443 73.4063 76.6685 73.4063 cv
76.3921 73.4063 76.1685 73.4063 76.1685 73.4063 cv
76.1685 73.4063 76.3921 73.4063 76.6685 73.4063 cv
cp
f
76.6685 73.4063 mo
76.9443 73.4063 77.1689 73.4063 77.1689 73.4063 cv
77.1689 73.4063 76.9443 73.4063 76.6685 73.4063 cv
76.3921 73.4063 76.1685 73.4063 76.1685 73.4063 cv
76.1685 73.4063 76.3921 73.4063 76.6685 73.4063 cv
cp
@
73.5913 71.6304 mo
73.8672 71.6304 74.0913 71.6304 74.0913 71.6304 cv
74.0913 71.6304 73.8672 71.6304 73.5913 71.6304 cv
73.3149 71.6304 73.0913 71.6304 73.0913 71.6304 cv
73.0913 71.6304 73.3149 71.6304 73.5913 71.6304 cv
cp
f
73.5913 71.6304 mo
73.8672 71.6304 74.0913 71.6304 74.0913 71.6304 cv
74.0913 71.6304 73.8672 71.6304 73.5913 71.6304 cv
73.3149 71.6304 73.0913 71.6304 73.0913 71.6304 cv
73.0913 71.6304 73.3149 71.6304 73.5913 71.6304 cv
cp
@
70.5166 69.8706 mo
70.793 69.8706 71.0166 69.8706 71.0166 69.8706 cv
71.0166 69.8706 70.793 69.8706 70.5166 69.8706 cv
70.2407 69.8706 70.0166 69.8706 70.0166 69.8706 cv
70.0166 69.8706 70.2407 69.8706 70.5166 69.8706 cv
cp
f
70.5166 69.8706 mo
70.793 69.8706 71.0166 69.8706 71.0166 69.8706 cv
71.0166 69.8706 70.793 69.8706 70.5166 69.8706 cv
70.2407 69.8706 70.0166 69.8706 70.0166 69.8706 cv
70.0166 69.8706 70.2407 69.8706 70.5166 69.8706 cv
cp
@
67.4478 68.1289 mo
67.7241 68.1289 67.9478 68.1289 67.9478 68.1289 cv
67.9478 68.1289 67.7241 68.1289 67.4478 68.1289 cv
67.1719 68.1289 66.9478 68.1289 66.9478 68.1289 cv
66.9478 68.1289 67.1719 68.1289 67.4478 68.1289 cv
cp
f
67.4478 68.1289 mo
67.7241 68.1289 67.9478 68.1289 67.9478 68.1289 cv
67.9478 68.1289 67.7241 68.1289 67.4478 68.1289 cv
67.1719 68.1289 66.9478 68.1289 66.9478 68.1289 cv
66.9478 68.1289 67.1719 68.1289 67.4478 68.1289 cv
cp
@
64.3877 66.4072 mo
64.6641 66.4072 64.8877 66.4072 64.8877 66.4072 cv
64.8877 66.4072 64.6641 66.4072 64.3877 66.4072 cv
64.1118 66.4072 63.8877 66.4072 63.8877 66.4072 cv
63.8877 66.4072 64.1118 66.4072 64.3877 66.4072 cv
cp
f
64.3877 66.4072 mo
64.6641 66.4072 64.8877 66.4072 64.8877 66.4072 cv
64.8877 66.4072 64.6641 66.4072 64.3877 66.4072 cv
64.1118 66.4072 63.8877 66.4072 63.8877 66.4072 cv
63.8877 66.4072 64.1118 66.4072 64.3877 66.4072 cv
cp
@
61.3394 64.7075 mo
61.6157 64.7075 61.8394 64.7075 61.8394 64.7075 cv
61.8394 64.7075 61.6157 64.7075 61.3394 64.7075 cv
61.0635 64.7075 60.8394 64.7075 60.8394 64.7075 cv
60.8394 64.7075 61.0635 64.7075 61.3394 64.7075 cv
cp
f
61.3394 64.7075 mo
61.6157 64.7075 61.8394 64.7075 61.8394 64.7075 cv
61.8394 64.7075 61.6157 64.7075 61.3394 64.7075 cv
61.0635 64.7075 60.8394 64.7075 60.8394 64.7075 cv
60.8394 64.7075 61.0635 64.7075 61.3394 64.7075 cv
cp
@
58.3057 63.0308 mo
58.5815 63.0308 58.8057 63.0308 58.8057 63.0308 cv
58.8057 63.0308 58.5815 63.0308 58.3057 63.0308 cv
58.0293 63.0308 57.8057 63.0308 57.8057 63.0308 cv
57.8057 63.0308 58.0293 63.0308 58.3057 63.0308 cv
cp
f
58.3057 63.0308 mo
58.5815 63.0308 58.8057 63.0308 58.8057 63.0308 cv
58.8057 63.0308 58.5815 63.0308 58.3057 63.0308 cv
58.0293 63.0308 57.8057 63.0308 57.8057 63.0308 cv
57.8057 63.0308 58.0293 63.0308 58.3057 63.0308 cv
cp
@
55.2891 61.3799 mo
55.5654 61.3799 55.7891 61.3799 55.7891 61.3799 cv
55.7891 61.3799 55.5654 61.3799 55.2891 61.3799 cv
55.0132 61.3799 54.7891 61.3799 54.7891 61.3799 cv
54.7891 61.3799 55.0132 61.3799 55.2891 61.3799 cv
cp
f
55.2891 61.3799 mo
55.5654 61.3799 55.7891 61.3799 55.7891 61.3799 cv
55.7891 61.3799 55.5654 61.3799 55.2891 61.3799 cv
55.0132 61.3799 54.7891 61.3799 54.7891 61.3799 cv
54.7891 61.3799 55.0132 61.3799 55.2891 61.3799 cv
cp
@
52.293 59.7563 mo
52.5693 59.7563 52.793 59.7563 52.793 59.7563 cv
52.793 59.7563 52.5693 59.7563 52.293 59.7563 cv
52.0171 59.7563 51.793 59.7563 51.793 59.7563 cv
51.793 59.7563 52.0171 59.7563 52.293 59.7563 cv
cp
f
52.293 59.7563 mo
52.5693 59.7563 52.793 59.7563 52.793 59.7563 cv
52.793 59.7563 52.5693 59.7563 52.293 59.7563 cv
52.0171 59.7563 51.793 59.7563 51.793 59.7563 cv
51.793 59.7563 52.0171 59.7563 52.293 59.7563 cv
cp
@
49.3203 58.1621 mo
49.5967 58.1621 49.8203 58.1621 49.8203 58.1621 cv
49.8203 58.1621 49.5967 58.1621 49.3203 58.1621 cv
49.0439 58.1621 48.8203 58.1621 48.8203 58.1621 cv
48.8203 58.1621 49.0439 58.1621 49.3203 58.1621 cv
cp
f
49.3203 58.1621 mo
49.5967 58.1621 49.8203 58.1621 49.8203 58.1621 cv
49.8203 58.1621 49.5967 58.1621 49.3203 58.1621 cv
49.0439 58.1621 48.8203 58.1621 48.8203 58.1621 cv
48.8203 58.1621 49.0439 58.1621 49.3203 58.1621 cv
cp
@
46.3735 56.5986 mo
46.6494 56.5986 46.8735 56.5986 46.8735 56.5986 cv
46.8735 56.5986 46.6494 56.5986 46.3735 56.5986 cv
46.0972 56.5986 45.8735 56.5986 45.8735 56.5986 cv
45.8735 56.5986 46.0972 56.5986 46.3735 56.5986 cv
cp
f
46.3735 56.5986 mo
46.6494 56.5986 46.8735 56.5986 46.8735 56.5986 cv
46.8735 56.5986 46.6494 56.5986 46.3735 56.5986 cv
46.0972 56.5986 45.8735 56.5986 45.8735 56.5986 cv
45.8735 56.5986 46.0972 56.5986 46.3735 56.5986 cv
cp
@
43.4556 55.0679 mo
43.7314 55.0679 43.9556 55.0679 43.9556 55.0679 cv
43.9556 55.0679 43.7314 55.0679 43.4556 55.0679 cv
43.1792 55.0679 42.9556 55.0679 42.9556 55.0679 cv
42.9556 55.0679 43.1792 55.0679 43.4556 55.0679 cv
cp
f
43.4556 55.0679 mo
43.7314 55.0679 43.9556 55.0679 43.9556 55.0679 cv
43.9556 55.0679 43.7314 55.0679 43.4556 55.0679 cv
43.1792 55.0679 42.9556 55.0679 42.9556 55.0679 cv
42.9556 55.0679 43.1792 55.0679 43.4556 55.0679 cv
cp
@
40.5688 53.5718 mo
40.8447 53.5718 41.0688 53.5718 41.0688 53.5718 cv
41.0688 53.5718 40.8447 53.5718 40.5688 53.5718 cv
40.2925 53.5718 40.0688 53.5718 40.0688 53.5718 cv
40.0688 53.5718 40.2925 53.5718 40.5688 53.5718 cv
cp
f
40.5688 53.5718 mo
40.8447 53.5718 41.0688 53.5718 41.0688 53.5718 cv
41.0688 53.5718 40.8447 53.5718 40.5688 53.5718 cv
40.2925 53.5718 40.0688 53.5718 40.0688 53.5718 cv
40.0688 53.5718 40.2925 53.5718 40.5688 53.5718 cv
cp
@
37.7163 52.1128 mo
37.9922 52.1128 38.2163 52.1128 38.2163 52.1128 cv
38.2163 52.1128 37.9922 52.1128 37.7163 52.1128 cv
37.4399 52.1128 37.2163 52.1128 37.2163 52.1128 cv
37.2163 52.1128 37.4399 52.1128 37.7163 52.1128 cv
cp
f
37.7163 52.1128 mo
37.9922 52.1128 38.2163 52.1128 38.2163 52.1128 cv
38.2163 52.1128 37.9922 52.1128 37.7163 52.1128 cv
37.4399 52.1128 37.2163 52.1128 37.2163 52.1128 cv
37.2163 52.1128 37.4399 52.1128 37.7163 52.1128 cv
cp
@
34.9004 50.6919 mo
35.1763 50.6919 35.4004 50.6919 35.4004 50.6919 cv
35.4004 50.6919 35.1763 50.6919 34.9004 50.6919 cv
34.624 50.6919 34.4004 50.6919 34.4004 50.6919 cv
34.4004 50.6919 34.624 50.6919 34.9004 50.6919 cv
cp
f
34.9004 50.6919 mo
35.1763 50.6919 35.4004 50.6919 35.4004 50.6919 cv
35.4004 50.6919 35.1763 50.6919 34.9004 50.6919 cv
34.624 50.6919 34.4004 50.6919 34.4004 50.6919 cv
34.4004 50.6919 34.624 50.6919 34.9004 50.6919 cv
cp
@
32.1235 49.312 mo
32.3994 49.312 32.6235 49.312 32.6235 49.312 cv
32.6235 49.312 32.3994 49.312 32.1235 49.312 cv
31.8472 49.312 31.6235 49.312 31.6235 49.312 cv
31.6235 49.312 31.8472 49.312 32.1235 49.312 cv
cp
f
32.1235 49.312 mo
32.3994 49.312 32.6235 49.312 32.6235 49.312 cv
32.6235 49.312 32.3994 49.312 32.1235 49.312 cv
31.8472 49.312 31.6235 49.312 31.6235 49.312 cv
31.6235 49.312 31.8472 49.312 32.1235 49.312 cv
cp
@
29.3882 47.9746 mo
29.6641 47.9746 29.8882 47.9746 29.8882 47.9746 cv
29.8882 47.9746 29.6641 47.9746 29.3882 47.9746 cv
29.1118 47.9746 28.8882 47.9746 28.8882 47.9746 cv
28.8882 47.9746 29.1118 47.9746 29.3882 47.9746 cv
cp
f
29.3882 47.9746 mo
29.6641 47.9746 29.8882 47.9746 29.8882 47.9746 cv
29.8882 47.9746 29.6641 47.9746 29.3882 47.9746 cv
29.1118 47.9746 28.8882 47.9746 28.8882 47.9746 cv
28.8882 47.9746 29.1118 47.9746 29.3882 47.9746 cv
cp
@
26.6968 46.6812 mo
26.9731 46.6812 27.1968 46.6812 27.1968 46.6812 cv
27.1968 46.6812 26.9731 46.6812 26.6968 46.6812 cv
26.4209 46.6812 26.1968 46.6812 26.1968 46.6812 cv
26.1968 46.6812 26.4209 46.6812 26.6968 46.6812 cv
cp
f
26.6968 46.6812 mo
26.9731 46.6812 27.1968 46.6812 27.1968 46.6812 cv
27.1968 46.6812 26.9731 46.6812 26.6968 46.6812 cv
26.4209 46.6812 26.1968 46.6812 26.1968 46.6812 cv
26.1968 46.6812 26.4209 46.6812 26.6968 46.6812 cv
cp
@
24.0518 45.4351 mo
24.3281 45.4351 24.5518 45.4351 24.5518 45.4351 cv
24.5518 45.4351 24.3281 45.4351 24.0518 45.4351 cv
23.7759 45.4351 23.5518 45.4351 23.5518 45.4351 cv
23.5518 45.4351 23.7759 45.4351 24.0518 45.4351 cv
cp
f
24.0518 45.4351 mo
24.3281 45.4351 24.5518 45.4351 24.5518 45.4351 cv
24.5518 45.4351 24.3281 45.4351 24.0518 45.4351 cv
23.7759 45.4351 23.5518 45.4351 23.5518 45.4351 cv
23.5518 45.4351 23.7759 45.4351 24.0518 45.4351 cv
cp
@
21.4551 44.2373 mo
21.7314 44.2373 21.9551 44.2373 21.9551 44.2373 cv
21.9551 44.2373 21.7314 44.2373 21.4551 44.2373 cv
21.1792 44.2373 20.9551 44.2373 20.9551 44.2373 cv
20.9551 44.2373 21.1792 44.2373 21.4551 44.2373 cv
cp
f
21.4551 44.2373 mo
21.7314 44.2373 21.9551 44.2373 21.9551 44.2373 cv
21.9551 44.2373 21.7314 44.2373 21.4551 44.2373 cv
21.1792 44.2373 20.9551 44.2373 20.9551 44.2373 cv
20.9551 44.2373 21.1792 44.2373 21.4551 44.2373 cv
cp
@
18.9092 43.0903 mo
19.1851 43.0903 19.4092 43.0903 19.4092 43.0903 cv
19.4092 43.0903 19.1851 43.0903 18.9092 43.0903 cv
18.6328 43.0903 18.4092 43.0903 18.4092 43.0903 cv
18.4092 43.0903 18.6328 43.0903 18.9092 43.0903 cv
cp
f
18.9092 43.0903 mo
19.1851 43.0903 19.4092 43.0903 19.4092 43.0903 cv
19.4092 43.0903 19.1851 43.0903 18.9092 43.0903 cv
18.6328 43.0903 18.4092 43.0903 18.4092 43.0903 cv
18.4092 43.0903 18.6328 43.0903 18.9092 43.0903 cv
cp
@
16.415 41.9971 mo
16.6914 41.9971 16.915 41.9971 16.915 41.9971 cv
16.915 41.9971 16.6914 41.9971 16.415 41.9971 cv
16.1392 41.9971 15.915 41.9971 15.915 41.9971 cv
15.915 41.9971 16.1392 41.9971 16.415 41.9971 cv
cp
f
16.415 41.9971 mo
16.6914 41.9971 16.915 41.9971 16.915 41.9971 cv
16.915 41.9971 16.6914 41.9971 16.415 41.9971 cv
16.1392 41.9971 15.915 41.9971 15.915 41.9971 cv
15.915 41.9971 16.1392 41.9971 16.415 41.9971 cv
cp
@
13.9756 40.9595 mo
14.252 40.9595 14.4756 40.9595 14.4756 40.9595 cv
14.4756 40.9595 14.252 40.9595 13.9756 40.9595 cv
13.6997 40.9595 13.4756 40.9595 13.4756 40.9595 cv
13.4756 40.9595 13.6997 40.9595 13.9756 40.9595 cv
cp
f
13.9756 40.9595 mo
14.252 40.9595 14.4756 40.9595 14.4756 40.9595 cv
14.4756 40.9595 14.252 40.9595 13.9756 40.9595 cv
13.6997 40.9595 13.4756 40.9595 13.4756 40.9595 cv
13.4756 40.9595 13.6997 40.9595 13.9756 40.9595 cv
cp
@
11.5918 39.98 mo
11.8682 39.98 12.0918 39.98 12.0918 39.98 cv
12.0918 39.98 11.8682 39.98 11.5918 39.98 cv
11.3159 39.98 11.0918 39.98 11.0918 39.98 cv
11.0918 39.98 11.3159 39.98 11.5918 39.98 cv
cp
f
11.5918 39.98 mo
11.8682 39.98 12.0918 39.98 12.0918 39.98 cv
12.0918 39.98 11.8682 39.98 11.5918 39.98 cv
11.3159 39.98 11.0918 39.98 11.0918 39.98 cv
11.0918 39.98 11.3159 39.98 11.5918 39.98 cv
cp
@
13.604 41.5903 mo
13.8804 41.5903 14.104 41.5903 14.104 41.5903 cv
14.104 41.5903 13.8804 41.5903 13.604 41.5903 cv
13.3281 41.5903 13.104 41.5903 13.104 41.5903 cv
13.104 41.5903 13.3281 41.5903 13.604 41.5903 cv
cp
0.713725 0 0.305882 0 cmyk
f
13.604 41.5903 mo
13.8804 41.5903 14.104 41.5903 14.104 41.5903 cv
14.104 41.5903 13.8804 41.5903 13.604 41.5903 cv
13.3281 41.5903 13.104 41.5903 13.104 41.5903 cv
13.104 41.5903 13.3281 41.5903 13.604 41.5903 cv
cp
@
15.6943 43.2207 mo
15.9707 43.2207 16.1943 43.2207 16.1943 43.2207 cv
16.1943 43.2207 15.9707 43.2207 15.6943 43.2207 cv
15.418 43.2207 15.1943 43.2207 15.1943 43.2207 cv
15.1943 43.2207 15.418 43.2207 15.6943 43.2207 cv
cp
f
15.6943 43.2207 mo
15.9707 43.2207 16.1943 43.2207 16.1943 43.2207 cv
16.1943 43.2207 15.9707 43.2207 15.6943 43.2207 cv
15.418 43.2207 15.1943 43.2207 15.1943 43.2207 cv
15.1943 43.2207 15.418 43.2207 15.6943 43.2207 cv
cp
@
17.8599 44.8716 mo
18.1357 44.8716 18.3599 44.8716 18.3599 44.8716 cv
18.3599 44.8716 18.1357 44.8716 17.8599 44.8716 cv
17.5835 44.8716 17.3599 44.8716 17.3599 44.8716 cv
17.3599 44.8716 17.5835 44.8716 17.8599 44.8716 cv
cp
f
17.8599 44.8716 mo
18.1357 44.8716 18.3599 44.8716 18.3599 44.8716 cv
18.3599 44.8716 18.1357 44.8716 17.8599 44.8716 cv
17.5835 44.8716 17.3599 44.8716 17.3599 44.8716 cv
17.3599 44.8716 17.5835 44.8716 17.8599 44.8716 cv
cp
@
20.0972 46.543 mo
20.373 46.543 20.5972 46.543 20.5972 46.543 cv
20.5972 46.543 20.373 46.543 20.0972 46.543 cv
19.8208 46.543 19.5972 46.543 19.5972 46.543 cv
19.5972 46.543 19.8208 46.543 20.0972 46.543 cv
cp
f
20.0972 46.543 mo
20.373 46.543 20.5972 46.543 20.5972 46.543 cv
20.5972 46.543 20.373 46.543 20.0972 46.543 cv
19.8208 46.543 19.5972 46.543 19.5972 46.543 cv
19.5972 46.543 19.8208 46.543 20.0972 46.543 cv
cp
@
22.4033 48.2334 mo
22.6797 48.2334 22.9033 48.2334 22.9033 48.2334 cv
22.9033 48.2334 22.6797 48.2334 22.4033 48.2334 cv
22.1274 48.2334 21.9033 48.2334 21.9033 48.2334 cv
21.9033 48.2334 22.1274 48.2334 22.4033 48.2334 cv
cp
f
22.4033 48.2334 mo
22.6797 48.2334 22.9033 48.2334 22.9033 48.2334 cv
22.9033 48.2334 22.6797 48.2334 22.4033 48.2334 cv
22.1274 48.2334 21.9033 48.2334 21.9033 48.2334 cv
21.9033 48.2334 22.1274 48.2334 22.4033 48.2334 cv
cp
@
24.7759 49.9424 mo
25.0522 49.9424 25.2759 49.9424 25.2759 49.9424 cv
25.2759 49.9424 25.0522 49.9424 24.7759 49.9424 cv
24.5 49.9424 24.2759 49.9424 24.2759 49.9424 cv
24.2759 49.9424 24.5 49.9424 24.7759 49.9424 cv
cp
f
24.7759 49.9424 mo
25.0522 49.9424 25.2759 49.9424 25.2759 49.9424 cv
25.2759 49.9424 25.0522 49.9424 24.7759 49.9424 cv
24.5 49.9424 24.2759 49.9424 24.2759 49.9424 cv
24.2759 49.9424 24.5 49.9424 24.7759 49.9424 cv
cp
@
27.2119 51.6694 mo
27.4878 51.6694 27.7119 51.6694 27.7119 51.6694 cv
27.7119 51.6694 27.4878 51.6694 27.2119 51.6694 cv
26.9355 51.6694 26.7119 51.6694 26.7119 51.6694 cv
26.7119 51.6694 26.9355 51.6694 27.2119 51.6694 cv
cp
f
27.2119 51.6694 mo
27.4878 51.6694 27.7119 51.6694 27.7119 51.6694 cv
27.7119 51.6694 27.4878 51.6694 27.2119 51.6694 cv
26.9355 51.6694 26.7119 51.6694 26.7119 51.6694 cv
26.7119 51.6694 26.9355 51.6694 27.2119 51.6694 cv
cp
@
29.7075 53.4131 mo
29.9839 53.4131 30.2075 53.4131 30.2075 53.4131 cv
30.2075 53.4131 29.9839 53.4131 29.7075 53.4131 cv
29.4316 53.4131 29.2075 53.4131 29.2075 53.4131 cv
29.2075 53.4131 29.4316 53.4131 29.7075 53.4131 cv
cp
f
29.7075 53.4131 mo
29.9839 53.4131 30.2075 53.4131 30.2075 53.4131 cv
30.2075 53.4131 29.9839 53.4131 29.7075 53.4131 cv
29.4316 53.4131 29.2075 53.4131 29.2075 53.4131 cv
29.2075 53.4131 29.4316 53.4131 29.7075 53.4131 cv
cp
@
32.2612 55.1724 mo
32.5371 55.1724 32.7612 55.1724 32.7612 55.1724 cv
32.7612 55.1724 32.5371 55.1724 32.2612 55.1724 cv
31.9849 55.1724 31.7612 55.1724 31.7612 55.1724 cv
31.7612 55.1724 31.9849 55.1724 32.2612 55.1724 cv
cp
f
32.2612 55.1724 mo
32.5371 55.1724 32.7612 55.1724 32.7612 55.1724 cv
32.7612 55.1724 32.5371 55.1724 32.2612 55.1724 cv
31.9849 55.1724 31.7612 55.1724 31.7612 55.1724 cv
31.7612 55.1724 31.9849 55.1724 32.2612 55.1724 cv
cp
@
34.8687 56.9468 mo
35.145 56.9468 35.3687 56.9468 35.3687 56.9468 cv
35.3687 56.9468 35.145 56.9468 34.8687 56.9468 cv
34.5928 56.9468 34.3687 56.9468 34.3687 56.9468 cv
34.3687 56.9468 34.5928 56.9468 34.8687 56.9468 cv
cp
f
34.8687 56.9468 mo
35.145 56.9468 35.3687 56.9468 35.3687 56.9468 cv
35.3687 56.9468 35.145 56.9468 34.8687 56.9468 cv
34.5928 56.9468 34.3687 56.9468 34.3687 56.9468 cv
34.3687 56.9468 34.5928 56.9468 34.8687 56.9468 cv
cp
@
37.5278 58.7339 mo
37.8042 58.7339 38.0278 58.7339 38.0278 58.7339 cv
38.0278 58.7339 37.8042 58.7339 37.5278 58.7339 cv
37.252 58.7339 37.0278 58.7339 37.0278 58.7339 cv
37.0278 58.7339 37.252 58.7339 37.5278 58.7339 cv
cp
f
37.5278 58.7339 mo
37.8042 58.7339 38.0278 58.7339 38.0278 58.7339 cv
38.0278 58.7339 37.8042 58.7339 37.5278 58.7339 cv
37.252 58.7339 37.0278 58.7339 37.0278 58.7339 cv
37.0278 58.7339 37.252 58.7339 37.5278 58.7339 cv
cp
@
40.2358 60.5337 mo
40.5117 60.5337 40.7358 60.5337 40.7358 60.5337 cv
40.7358 60.5337 40.5117 60.5337 40.2358 60.5337 cv
39.9595 60.5337 39.7358 60.5337 39.7358 60.5337 cv
39.7358 60.5337 39.9595 60.5337 40.2358 60.5337 cv
cp
f
40.2358 60.5337 mo
40.5117 60.5337 40.7358 60.5337 40.7358 60.5337 cv
40.7358 60.5337 40.5117 60.5337 40.2358 60.5337 cv
39.9595 60.5337 39.7358 60.5337 39.7358 60.5337 cv
39.7358 60.5337 39.9595 60.5337 40.2358 60.5337 cv
cp
@
42.9893 62.3438 mo
43.2651 62.3438 43.4893 62.3438 43.4893 62.3438 cv
43.4893 62.3438 43.2651 62.3438 42.9893 62.3438 cv
42.7129 62.3438 42.4893 62.3438 42.4893 62.3438 cv
42.4893 62.3438 42.7129 62.3438 42.9893 62.3438 cv
cp
f
42.9893 62.3438 mo
43.2651 62.3438 43.4893 62.3438 43.4893 62.3438 cv
43.4893 62.3438 43.2651 62.3438 42.9893 62.3438 cv
42.7129 62.3438 42.4893 62.3438 42.4893 62.3438 cv
42.4893 62.3438 42.7129 62.3438 42.9893 62.3438 cv
cp
@
45.7852 64.1631 mo
46.0615 64.1631 46.2852 64.1631 46.2852 64.1631 cv
46.2852 64.1631 46.0615 64.1631 45.7852 64.1631 cv
45.5093 64.1631 45.2852 64.1631 45.2852 64.1631 cv
45.2852 64.1631 45.5093 64.1631 45.7852 64.1631 cv
cp
f
45.7852 64.1631 mo
46.0615 64.1631 46.2852 64.1631 46.2852 64.1631 cv
46.2852 64.1631 46.0615 64.1631 45.7852 64.1631 cv
45.5093 64.1631 45.2852 64.1631 45.2852 64.1631 cv
45.2852 64.1631 45.5093 64.1631 45.7852 64.1631 cv
cp
@
48.6211 65.9902 mo
48.8975 65.9902 49.1211 65.9902 49.1211 65.9902 cv
49.1211 65.9902 48.8975 65.9902 48.6211 65.9902 cv
48.3447 65.9902 48.1211 65.9902 48.1211 65.9902 cv
48.1211 65.9902 48.3447 65.9902 48.6211 65.9902 cv
cp
f
48.6211 65.9902 mo
48.8975 65.9902 49.1211 65.9902 49.1211 65.9902 cv
49.1211 65.9902 48.8975 65.9902 48.6211 65.9902 cv
48.3447 65.9902 48.1211 65.9902 48.1211 65.9902 cv
48.1211 65.9902 48.3447 65.9902 48.6211 65.9902 cv
cp
@
51.4937 67.8237 mo
51.77 67.8237 51.9937 67.8237 51.9937 67.8237 cv
51.9937 67.8237 51.77 67.8237 51.4937 67.8237 cv
51.2178 67.8237 50.9937 67.8237 50.9937 67.8237 cv
50.9937 67.8237 51.2178 67.8237 51.4937 67.8237 cv
cp
f
51.4937 67.8237 mo
51.77 67.8237 51.9937 67.8237 51.9937 67.8237 cv
51.9937 67.8237 51.77 67.8237 51.4937 67.8237 cv
51.2178 67.8237 50.9937 67.8237 50.9937 67.8237 cv
50.9937 67.8237 51.2178 67.8237 51.4937 67.8237 cv
cp
@
54.3999 69.6611 mo
54.6763 69.6611 54.8999 69.6611 54.8999 69.6611 cv
54.8999 69.6611 54.6763 69.6611 54.3999 69.6611 cv
54.124 69.6611 53.8999 69.6611 53.8999 69.6611 cv
53.8999 69.6611 54.124 69.6611 54.3999 69.6611 cv
cp
f
54.3999 69.6611 mo
54.6763 69.6611 54.8999 69.6611 54.8999 69.6611 cv
54.8999 69.6611 54.6763 69.6611 54.3999 69.6611 cv
54.124 69.6611 53.8999 69.6611 53.8999 69.6611 cv
53.8999 69.6611 54.124 69.6611 54.3999 69.6611 cv
cp
@
57.3369 71.502 mo
57.6133 71.502 57.8369 71.502 57.8369 71.502 cv
57.8369 71.502 57.6133 71.502 57.3369 71.502 cv
57.0605 71.502 56.8369 71.502 56.8369 71.502 cv
56.8369 71.502 57.0605 71.502 57.3369 71.502 cv
cp
f
57.3369 71.502 mo
57.6133 71.502 57.8369 71.502 57.8369 71.502 cv
57.8369 71.502 57.6133 71.502 57.3369 71.502 cv
57.0605 71.502 56.8369 71.502 56.8369 71.502 cv
56.8369 71.502 57.0605 71.502 57.3369 71.502 cv
cp
@
60.3018 73.3442 mo
60.5776 73.3442 60.8018 73.3442 60.8018 73.3442 cv
60.8018 73.3442 60.5776 73.3442 60.3018 73.3442 cv
60.0254 73.3442 59.8018 73.3442 59.8018 73.3442 cv
59.8018 73.3442 60.0254 73.3442 60.3018 73.3442 cv
cp
f
60.3018 73.3442 mo
60.5776 73.3442 60.8018 73.3442 60.8018 73.3442 cv
60.8018 73.3442 60.5776 73.3442 60.3018 73.3442 cv
60.0254 73.3442 59.8018 73.3442 59.8018 73.3442 cv
59.8018 73.3442 60.0254 73.3442 60.3018 73.3442 cv
cp
@
63.291 75.186 mo
63.5674 75.186 63.791 75.186 63.791 75.186 cv
63.791 75.186 63.5674 75.186 63.291 75.186 cv
63.0146 75.186 62.791 75.186 62.791 75.186 cv
62.791 75.186 63.0146 75.186 63.291 75.186 cv
cp
f
63.291 75.186 mo
63.5674 75.186 63.791 75.186 63.791 75.186 cv
63.791 75.186 63.5674 75.186 63.291 75.186 cv
63.0146 75.186 62.791 75.186 62.791 75.186 cv
62.791 75.186 63.0146 75.186 63.291 75.186 cv
cp
@
66.3022 77.0254 mo
66.5781 77.0254 66.8022 77.0254 66.8022 77.0254 cv
66.8022 77.0254 66.5781 77.0254 66.3022 77.0254 cv
66.0259 77.0254 65.8022 77.0254 65.8022 77.0254 cv
65.8022 77.0254 66.0259 77.0254 66.3022 77.0254 cv
cp
f
66.3022 77.0254 mo
66.5781 77.0254 66.8022 77.0254 66.8022 77.0254 cv
66.8022 77.0254 66.5781 77.0254 66.3022 77.0254 cv
66.0259 77.0254 65.8022 77.0254 65.8022 77.0254 cv
65.8022 77.0254 66.0259 77.0254 66.3022 77.0254 cv
cp
@
69.3315 78.8613 mo
69.6079 78.8613 69.8315 78.8613 69.8315 78.8613 cv
69.8315 78.8613 69.6079 78.8613 69.3315 78.8613 cv
69.0557 78.8613 68.8315 78.8613 68.8315 78.8613 cv
68.8315 78.8613 69.0557 78.8613 69.3315 78.8613 cv
cp
f
69.3315 78.8613 mo
69.6079 78.8613 69.8315 78.8613 69.8315 78.8613 cv
69.8315 78.8613 69.6079 78.8613 69.3315 78.8613 cv
69.0557 78.8613 68.8315 78.8613 68.8315 78.8613 cv
68.8315 78.8613 69.0557 78.8613 69.3315 78.8613 cv
cp
@
72.377 80.6919 mo
72.6528 80.6919 72.877 80.6919 72.877 80.6919 cv
72.877 80.6919 72.6528 80.6919 72.377 80.6919 cv
72.1006 80.6919 71.877 80.6919 71.877 80.6919 cv
71.877 80.6919 72.1006 80.6919 72.377 80.6919 cv
cp
f
72.377 80.6919 mo
72.6528 80.6919 72.877 80.6919 72.877 80.6919 cv
72.877 80.6919 72.6528 80.6919 72.377 80.6919 cv
72.1006 80.6919 71.877 80.6919 71.877 80.6919 cv
71.877 80.6919 72.1006 80.6919 72.377 80.6919 cv
cp
@
75.4346 82.5146 mo
75.7104 82.5146 75.9346 82.5146 75.9346 82.5146 cv
75.9346 82.5146 75.7104 82.5146 75.4346 82.5146 cv
75.1582 82.5146 74.9346 82.5146 74.9346 82.5146 cv
74.9346 82.5146 75.1582 82.5146 75.4346 82.5146 cv
cp
f
75.4346 82.5146 mo
75.7104 82.5146 75.9346 82.5146 75.9346 82.5146 cv
75.9346 82.5146 75.7104 82.5146 75.4346 82.5146 cv
75.1582 82.5146 74.9346 82.5146 74.9346 82.5146 cv
74.9346 82.5146 75.1582 82.5146 75.4346 82.5146 cv
cp
@
78.501 84.3291 mo
78.7783 84.3291 79.001 84.3291 79.001 84.3291 cv
79.001 84.3291 78.7783 84.3291 78.501 84.3291 cv
78.2256 84.3291 78.001 84.3291 78.001 84.3291 cv
78.001 84.3291 78.2256 84.3291 78.501 84.3291 cv
cp
f
78.501 84.3291 mo
78.7783 84.3291 79.001 84.3291 79.001 84.3291 cv
79.001 84.3291 78.7783 84.3291 78.501 84.3291 cv
78.2256 84.3291 78.001 84.3291 78.001 84.3291 cv
78.001 84.3291 78.2256 84.3291 78.501 84.3291 cv
cp
@
81.5752 86.1318 mo
81.8506 86.1318 82.0752 86.1318 82.0752 86.1318 cv
82.0752 86.1318 81.8506 86.1318 81.5752 86.1318 cv
81.2988 86.1318 81.0752 86.1318 81.0752 86.1318 cv
81.0752 86.1318 81.2988 86.1318 81.5752 86.1318 cv
cp
f
81.5752 86.1318 mo
81.8506 86.1318 82.0752 86.1318 82.0752 86.1318 cv
82.0752 86.1318 81.8506 86.1318 81.5752 86.1318 cv
81.2988 86.1318 81.0752 86.1318 81.0752 86.1318 cv
81.0752 86.1318 81.2988 86.1318 81.5752 86.1318 cv
cp
@
84.6514 87.9229 mo
84.9277 87.9229 85.1514 87.9229 85.1514 87.9229 cv
85.1514 87.9229 84.9277 87.9229 84.6514 87.9229 cv
84.376 87.9229 84.1514 87.9229 84.1514 87.9229 cv
84.1514 87.9229 84.376 87.9229 84.6514 87.9229 cv
cp
f
84.6514 87.9229 mo
84.9277 87.9229 85.1514 87.9229 85.1514 87.9229 cv
85.1514 87.9229 84.9277 87.9229 84.6514 87.9229 cv
84.376 87.9229 84.1514 87.9229 84.1514 87.9229 cv
84.1514 87.9229 84.376 87.9229 84.6514 87.9229 cv
cp
@
87.7295 89.6982 mo
88.0049 89.6982 88.2295 89.6982 88.2295 89.6982 cv
88.2295 89.6982 88.0049 89.6982 87.7295 89.6982 cv
87.4521 89.6982 87.2295 89.6982 87.2295 89.6982 cv
87.2295 89.6982 87.4521 89.6982 87.7295 89.6982 cv
cp
f
87.7295 89.6982 mo
88.0049 89.6982 88.2295 89.6982 88.2295 89.6982 cv
88.2295 89.6982 88.0049 89.6982 87.7295 89.6982 cv
87.4521 89.6982 87.2295 89.6982 87.2295 89.6982 cv
87.2295 89.6982 87.4521 89.6982 87.7295 89.6982 cv
cp
@
90.8037 91.458 mo
91.0791 91.458 91.3037 91.458 91.3037 91.458 cv
91.3037 91.458 91.0791 91.458 90.8037 91.458 cv
90.5273 91.458 90.3037 91.458 90.3037 91.458 cv
90.3037 91.458 90.5273 91.458 90.8037 91.458 cv
cp
f
90.8037 91.458 mo
91.0791 91.458 91.3037 91.458 91.3037 91.458 cv
91.3037 91.458 91.0791 91.458 90.8037 91.458 cv
90.5273 91.458 90.3037 91.458 90.3037 91.458 cv
90.3037 91.458 90.5273 91.458 90.8037 91.458 cv
cp
@
93.8721 93.2002 mo
94.1484 93.2002 94.3721 93.2002 94.3721 93.2002 cv
94.3721 93.2002 94.1484 93.2002 93.8721 93.2002 cv
93.5967 93.2002 93.3721 93.2002 93.3721 93.2002 cv
93.3721 93.2002 93.5967 93.2002 93.8721 93.2002 cv
cp
f
93.8721 93.2002 mo
94.1484 93.2002 94.3721 93.2002 94.3721 93.2002 cv
94.3721 93.2002 94.1484 93.2002 93.8721 93.2002 cv
93.5967 93.2002 93.3721 93.2002 93.3721 93.2002 cv
93.3721 93.2002 93.5967 93.2002 93.8721 93.2002 cv
cp
@
96.9326 94.9209 mo
97.208 94.9209 97.4326 94.9209 97.4326 94.9209 cv
97.4326 94.9209 97.208 94.9209 96.9326 94.9209 cv
96.6563 94.9209 96.4326 94.9209 96.4326 94.9209 cv
96.4326 94.9209 96.6563 94.9209 96.9326 94.9209 cv
cp
f
96.9326 94.9209 mo
97.208 94.9209 97.4326 94.9209 97.4326 94.9209 cv
97.4326 94.9209 97.208 94.9209 96.9326 94.9209 cv
96.6563 94.9209 96.4326 94.9209 96.4326 94.9209 cv
96.4326 94.9209 96.6563 94.9209 96.9326 94.9209 cv
cp
@
99.9805 96.6211 mo
100.257 96.6211 100.48 96.6211 100.48 96.6211 cv
100.48 96.6211 100.257 96.6211 99.9805 96.6211 cv
99.7041 96.6211 99.4805 96.6211 99.4805 96.6211 cv
99.4805 96.6211 99.7041 96.6211 99.9805 96.6211 cv
cp
f
99.9805 96.6211 mo
100.257 96.6211 100.48 96.6211 100.48 96.6211 cv
100.48 96.6211 100.257 96.6211 99.9805 96.6211 cv
99.7041 96.6211 99.4805 96.6211 99.4805 96.6211 cv
99.4805 96.6211 99.7041 96.6211 99.9805 96.6211 cv
cp
@
103.015 98.2979 mo
103.29 98.2979 103.515 98.2979 103.515 98.2979 cv
103.515 98.2979 103.29 98.2979 103.015 98.2979 cv
102.738 98.2979 102.515 98.2979 102.515 98.2979 cv
102.515 98.2979 102.738 98.2979 103.015 98.2979 cv
cp
f
103.015 98.2979 mo
103.29 98.2979 103.515 98.2979 103.515 98.2979 cv
103.515 98.2979 103.29 98.2979 103.015 98.2979 cv
102.738 98.2979 102.515 98.2979 102.515 98.2979 cv
102.515 98.2979 102.738 98.2979 103.015 98.2979 cv
cp
@
106.03 99.9482 mo
106.308 99.9482 106.53 99.9482 106.53 99.9482 cv
106.53 99.9482 106.308 99.9482 106.03 99.9482 cv
105.755 99.9482 105.53 99.9482 105.53 99.9482 cv
105.53 99.9482 105.755 99.9482 106.03 99.9482 cv
cp
f
106.03 99.9482 mo
106.308 99.9482 106.53 99.9482 106.53 99.9482 cv
106.53 99.9482 106.308 99.9482 106.03 99.9482 cv
105.755 99.9482 105.53 99.9482 105.53 99.9482 cv
105.53 99.9482 105.755 99.9482 106.03 99.9482 cv
cp
@
109.026 101.572 mo
109.304 101.572 109.526 101.572 109.526 101.572 cv
109.526 101.572 109.304 101.572 109.026 101.572 cv
108.751 101.572 108.526 101.572 108.526 101.572 cv
108.526 101.572 108.751 101.572 109.026 101.572 cv
cp
f
109.026 101.572 mo
109.304 101.572 109.526 101.572 109.526 101.572 cv
109.526 101.572 109.304 101.572 109.026 101.572 cv
108.751 101.572 108.526 101.572 108.526 101.572 cv
108.526 101.572 108.751 101.572 109.026 101.572 cv
cp
@
112 103.167 mo
112.276 103.167 112.5 103.167 112.5 103.167 cv
112.5 103.167 112.276 103.167 112 103.167 cv
111.724 103.167 111.5 103.167 111.5 103.167 cv
111.5 103.167 111.724 103.167 112 103.167 cv
cp
f
112 103.167 mo
112.276 103.167 112.5 103.167 112.5 103.167 cv
112.5 103.167 112.276 103.167 112 103.167 cv
111.724 103.167 111.5 103.167 111.5 103.167 cv
111.5 103.167 111.724 103.167 112 103.167 cv
cp
@
114.946 104.729 mo
115.223 104.729 115.446 104.729 115.446 104.729 cv
115.446 104.729 115.223 104.729 114.946 104.729 cv
114.671 104.729 114.446 104.729 114.446 104.729 cv
114.446 104.729 114.671 104.729 114.946 104.729 cv
cp
f
114.946 104.729 mo
115.223 104.729 115.446 104.729 115.446 104.729 cv
115.446 104.729 115.223 104.729 114.946 104.729 cv
114.671 104.729 114.446 104.729 114.446 104.729 cv
114.446 104.729 114.671 104.729 114.946 104.729 cv
cp
@
117.864 106.261 mo
118.141 106.261 118.364 106.261 118.364 106.261 cv
118.364 106.261 118.141 106.261 117.864 106.261 cv
117.589 106.261 117.364 106.261 117.364 106.261 cv
117.364 106.261 117.589 106.261 117.864 106.261 cv
cp
f
117.864 106.261 mo
118.141 106.261 118.364 106.261 118.364 106.261 cv
118.364 106.261 118.141 106.261 117.864 106.261 cv
117.589 106.261 117.364 106.261 117.364 106.261 cv
117.364 106.261 117.589 106.261 117.864 106.261 cv
cp
@
120.751 107.757 mo
121.027 107.757 121.251 107.757 121.251 107.757 cv
121.251 107.757 121.027 107.757 120.751 107.757 cv
120.476 107.757 120.251 107.757 120.251 107.757 cv
120.251 107.757 120.476 107.757 120.751 107.757 cv
cp
f
120.751 107.757 mo
121.027 107.757 121.251 107.757 121.251 107.757 cv
121.251 107.757 121.027 107.757 120.751 107.757 cv
120.476 107.757 120.251 107.757 120.251 107.757 cv
120.251 107.757 120.476 107.757 120.751 107.757 cv
cp
@
123.604 109.216 mo
123.88 109.216 124.104 109.216 124.104 109.216 cv
124.104 109.216 123.88 109.216 123.604 109.216 cv
123.327 109.216 123.104 109.216 123.104 109.216 cv
123.104 109.216 123.327 109.216 123.604 109.216 cv
cp
f
123.604 109.216 mo
123.88 109.216 124.104 109.216 124.104 109.216 cv
124.104 109.216 123.88 109.216 123.604 109.216 cv
123.327 109.216 123.104 109.216 123.104 109.216 cv
123.104 109.216 123.327 109.216 123.604 109.216 cv
cp
@
126.42 110.636 mo
126.696 110.636 126.92 110.636 126.92 110.636 cv
126.92 110.636 126.696 110.636 126.42 110.636 cv
126.144 110.636 125.92 110.636 125.92 110.636 cv
125.92 110.636 126.144 110.636 126.42 110.636 cv
cp
f
126.42 110.636 mo
126.696 110.636 126.92 110.636 126.92 110.636 cv
126.92 110.636 126.696 110.636 126.42 110.636 cv
126.144 110.636 125.92 110.636 125.92 110.636 cv
125.92 110.636 126.144 110.636 126.42 110.636 cv
cp
@
129.196 112.017 mo
129.473 112.017 129.696 112.017 129.696 112.017 cv
129.696 112.017 129.473 112.017 129.196 112.017 cv
128.921 112.017 128.696 112.017 128.696 112.017 cv
128.696 112.017 128.921 112.017 129.196 112.017 cv
cp
f
129.196 112.017 mo
129.473 112.017 129.696 112.017 129.696 112.017 cv
129.696 112.017 129.473 112.017 129.196 112.017 cv
128.921 112.017 128.696 112.017 128.696 112.017 cv
128.696 112.017 128.921 112.017 129.196 112.017 cv
cp
@
131.932 113.354 mo
132.208 113.354 132.432 113.354 132.432 113.354 cv
132.432 113.354 132.208 113.354 131.932 113.354 cv
131.655 113.354 131.432 113.354 131.432 113.354 cv
131.432 113.354 131.655 113.354 131.932 113.354 cv
cp
f
131.932 113.354 mo
132.208 113.354 132.432 113.354 132.432 113.354 cv
132.432 113.354 132.208 113.354 131.932 113.354 cv
131.655 113.354 131.432 113.354 131.432 113.354 cv
131.432 113.354 131.655 113.354 131.932 113.354 cv
cp
@
134.623 114.647 mo
134.899 114.647 135.123 114.647 135.123 114.647 cv
135.123 114.647 134.899 114.647 134.623 114.647 cv
134.347 114.647 134.123 114.647 134.123 114.647 cv
134.123 114.647 134.347 114.647 134.623 114.647 cv
cp
f
134.623 114.647 mo
134.899 114.647 135.123 114.647 135.123 114.647 cv
135.123 114.647 134.899 114.647 134.623 114.647 cv
134.347 114.647 134.123 114.647 134.123 114.647 cv
134.123 114.647 134.347 114.647 134.623 114.647 cv
cp
@
137.269 115.894 mo
137.544 115.894 137.769 115.894 137.769 115.894 cv
137.769 115.894 137.544 115.894 137.269 115.894 cv
136.992 115.894 136.769 115.894 136.769 115.894 cv
136.769 115.894 136.992 115.894 137.269 115.894 cv
cp
f
137.269 115.894 mo
137.544 115.894 137.769 115.894 137.769 115.894 cv
137.769 115.894 137.544 115.894 137.269 115.894 cv
136.992 115.894 136.769 115.894 136.769 115.894 cv
136.769 115.894 136.992 115.894 137.269 115.894 cv
cp
@
139.864 117.091 mo
140.142 117.091 140.364 117.091 140.364 117.091 cv
140.364 117.091 140.142 117.091 139.864 117.091 cv
139.589 117.091 139.364 117.091 139.364 117.091 cv
139.364 117.091 139.589 117.091 139.864 117.091 cv
cp
f
139.864 117.091 mo
140.142 117.091 140.364 117.091 140.364 117.091 cv
140.364 117.091 140.142 117.091 139.864 117.091 cv
139.589 117.091 139.364 117.091 139.364 117.091 cv
139.364 117.091 139.589 117.091 139.864 117.091 cv
cp
@
142.411 118.238 mo
142.687 118.238 142.911 118.238 142.911 118.238 cv
142.911 118.238 142.687 118.238 142.411 118.238 cv
142.135 118.238 141.911 118.238 141.911 118.238 cv
141.911 118.238 142.135 118.238 142.411 118.238 cv
cp
f
142.411 118.238 mo
142.687 118.238 142.911 118.238 142.911 118.238 cv
142.911 118.238 142.687 118.238 142.411 118.238 cv
142.135 118.238 141.911 118.238 141.911 118.238 cv
141.911 118.238 142.135 118.238 142.411 118.238 cv
cp
@
144.905 119.331 mo
145.181 119.331 145.405 119.331 145.405 119.331 cv
145.405 119.331 145.181 119.331 144.905 119.331 cv
144.629 119.331 144.405 119.331 144.405 119.331 cv
144.405 119.331 144.629 119.331 144.905 119.331 cv
cp
f
144.905 119.331 mo
145.181 119.331 145.405 119.331 145.405 119.331 cv
145.405 119.331 145.181 119.331 144.905 119.331 cv
144.629 119.331 144.405 119.331 144.405 119.331 cv
144.405 119.331 144.629 119.331 144.905 119.331 cv
cp
@
147.345 120.369 mo
147.62 120.369 147.845 120.369 147.845 120.369 cv
147.845 120.369 147.62 120.369 147.345 120.369 cv
147.068 120.369 146.845 120.369 146.845 120.369 cv
146.845 120.369 147.068 120.369 147.345 120.369 cv
cp
f
147.345 120.369 mo
147.62 120.369 147.845 120.369 147.845 120.369 cv
147.845 120.369 147.62 120.369 147.345 120.369 cv
147.068 120.369 146.845 120.369 146.845 120.369 cv
146.845 120.369 147.068 120.369 147.345 120.369 cv
cp
@
149.728 121.349 mo
150.005 121.349 150.228 121.349 150.228 121.349 cv
150.228 121.349 150.005 121.349 149.728 121.349 cv
149.452 121.349 149.228 121.349 149.228 121.349 cv
149.228 121.349 149.452 121.349 149.728 121.349 cv
cp
f
149.728 121.349 mo
150.005 121.349 150.228 121.349 150.228 121.349 cv
150.228 121.349 150.005 121.349 149.728 121.349 cv
149.452 121.349 149.228 121.349 149.228 121.349 cv
149.228 121.349 149.452 121.349 149.728 121.349 cv
cp
@
9.30078 44.1479 mo
9.57666 44.1479 9.80078 44.1479 9.80078 44.1479 cv
9.80078 44.1479 9.57666 44.1479 9.30078 44.1479 cv
9.02441 44.1479 8.80078 44.1479 8.80078 44.1479 cv
8.80078 44.1479 9.02441 44.1479 9.30078 44.1479 cv
cp
0.87451 0.243137 1 0.129412 cmyk
f
9.30078 44.1479 mo
9.57666 44.1479 9.80078 44.1479 9.80078 44.1479 cv
9.80078 44.1479 9.57666 44.1479 9.30078 44.1479 cv
9.02441 44.1479 8.80078 44.1479 8.80078 44.1479 cv
8.80078 44.1479 9.02441 44.1479 9.30078 44.1479 cv
cp
@
150.06 115.442 mo
150.335 115.442 150.56 115.442 150.56 115.442 cv
150.56 115.442 150.335 115.442 150.06 115.442 cv
149.783 115.442 149.56 115.442 149.56 115.442 cv
149.56 115.442 149.783 115.442 150.06 115.442 cv
cp
f
150.06 115.442 mo
150.335 115.442 150.56 115.442 150.56 115.442 cv
150.56 115.442 150.335 115.442 150.06 115.442 cv
149.783 115.442 149.56 115.442 149.56 115.442 cv
149.56 115.442 149.783 115.442 150.06 115.442 cv
cp
@
148.01 113.702 mo
148.286 113.702 148.51 113.702 148.51 113.702 cv
148.51 113.702 148.286 113.702 148.01 113.702 cv
147.733 113.702 147.51 113.702 147.51 113.702 cv
147.51 113.702 147.733 113.702 148.01 113.702 cv
cp
f
148.01 113.702 mo
148.286 113.702 148.51 113.702 148.51 113.702 cv
148.51 113.702 148.286 113.702 148.01 113.702 cv
147.733 113.702 147.51 113.702 147.51 113.702 cv
147.51 113.702 147.733 113.702 148.01 113.702 cv
cp
@
145.875 111.96 mo
146.151 111.96 146.375 111.96 146.375 111.96 cv
146.375 111.96 146.151 111.96 145.875 111.96 cv
145.599 111.96 145.375 111.96 145.375 111.96 cv
145.375 111.96 145.599 111.96 145.875 111.96 cv
cp
f
145.875 111.96 mo
146.151 111.96 146.375 111.96 146.375 111.96 cv
146.375 111.96 146.151 111.96 145.875 111.96 cv
145.599 111.96 145.375 111.96 145.375 111.96 cv
145.375 111.96 145.599 111.96 145.875 111.96 cv
cp
@
143.659 110.215 mo
143.935 110.215 144.159 110.215 144.159 110.215 cv
144.159 110.215 143.935 110.215 143.659 110.215 cv
143.382 110.215 143.159 110.215 143.159 110.215 cv
143.159 110.215 143.382 110.215 143.659 110.215 cv
cp
f
143.659 110.215 mo
143.935 110.215 144.159 110.215 144.159 110.215 cv
144.159 110.215 143.935 110.215 143.659 110.215 cv
143.382 110.215 143.159 110.215 143.159 110.215 cv
143.159 110.215 143.382 110.215 143.659 110.215 cv
cp
@
141.364 108.466 mo
141.64 108.466 141.864 108.466 141.864 108.466 cv
141.864 108.466 141.64 108.466 141.364 108.466 cv
141.088 108.466 140.864 108.466 140.864 108.466 cv
140.864 108.466 141.088 108.466 141.364 108.466 cv
cp
f
141.364 108.466 mo
141.64 108.466 141.864 108.466 141.864 108.466 cv
141.864 108.466 141.64 108.466 141.364 108.466 cv
141.088 108.466 140.864 108.466 140.864 108.466 cv
140.864 108.466 141.088 108.466 141.364 108.466 cv
cp
@
138.995 106.714 mo
139.271 106.714 139.495 106.714 139.495 106.714 cv
139.495 106.714 139.271 106.714 138.995 106.714 cv
138.719 106.714 138.495 106.714 138.495 106.714 cv
138.495 106.714 138.719 106.714 138.995 106.714 cv
cp
f
138.995 106.714 mo
139.271 106.714 139.495 106.714 139.495 106.714 cv
139.495 106.714 139.271 106.714 138.995 106.714 cv
138.719 106.714 138.495 106.714 138.495 106.714 cv
138.495 106.714 138.719 106.714 138.995 106.714 cv
cp
@
136.554 104.959 mo
136.831 104.959 137.054 104.959 137.054 104.959 cv
137.054 104.959 136.831 104.959 136.554 104.959 cv
136.278 104.959 136.054 104.959 136.054 104.959 cv
136.054 104.959 136.278 104.959 136.554 104.959 cv
cp
f
136.554 104.959 mo
136.831 104.959 137.054 104.959 137.054 104.959 cv
137.054 104.959 136.831 104.959 136.554 104.959 cv
136.278 104.959 136.054 104.959 136.054 104.959 cv
136.054 104.959 136.278 104.959 136.554 104.959 cv
cp
@
134.046 103.201 mo
134.322 103.201 134.546 103.201 134.546 103.201 cv
134.546 103.201 134.322 103.201 134.046 103.201 cv
133.77 103.201 133.546 103.201 133.546 103.201 cv
133.546 103.201 133.77 103.201 134.046 103.201 cv
cp
f
134.046 103.201 mo
134.322 103.201 134.546 103.201 134.546 103.201 cv
134.546 103.201 134.322 103.201 134.046 103.201 cv
133.77 103.201 133.546 103.201 133.546 103.201 cv
133.546 103.201 133.77 103.201 134.046 103.201 cv
cp
@
131.473 101.442 mo
131.749 101.442 131.973 101.442 131.973 101.442 cv
131.973 101.442 131.749 101.442 131.473 101.442 cv
131.196 101.442 130.973 101.442 130.973 101.442 cv
130.973 101.442 131.196 101.442 131.473 101.442 cv
cp
f
131.473 101.442 mo
131.749 101.442 131.973 101.442 131.973 101.442 cv
131.973 101.442 131.749 101.442 131.473 101.442 cv
131.196 101.442 130.973 101.442 130.973 101.442 cv
130.973 101.442 131.196 101.442 131.473 101.442 cv
cp
@
128.839 99.6807 mo
129.114 99.6807 129.339 99.6807 129.339 99.6807 cv
129.339 99.6807 129.114 99.6807 128.839 99.6807 cv
128.563 99.6807 128.339 99.6807 128.339 99.6807 cv
128.339 99.6807 128.563 99.6807 128.839 99.6807 cv
cp
f
128.839 99.6807 mo
129.114 99.6807 129.339 99.6807 129.339 99.6807 cv
129.339 99.6807 129.114 99.6807 128.839 99.6807 cv
128.563 99.6807 128.339 99.6807 128.339 99.6807 cv
128.339 99.6807 128.563 99.6807 128.839 99.6807 cv
cp
@
126.146 97.9199 mo
126.422 97.9199 126.646 97.9199 126.646 97.9199 cv
126.646 97.9199 126.422 97.9199 126.146 97.9199 cv
125.87 97.9199 125.646 97.9199 125.646 97.9199 cv
125.646 97.9199 125.87 97.9199 126.146 97.9199 cv
cp
f
126.146 97.9199 mo
126.422 97.9199 126.646 97.9199 126.646 97.9199 cv
126.646 97.9199 126.422 97.9199 126.146 97.9199 cv
125.87 97.9199 125.646 97.9199 125.646 97.9199 cv
125.646 97.9199 125.87 97.9199 126.146 97.9199 cv
cp
@
123.397 96.1592 mo
123.675 96.1592 123.897 96.1592 123.897 96.1592 cv
123.897 96.1592 123.675 96.1592 123.397 96.1592 cv
123.122 96.1592 122.897 96.1592 122.897 96.1592 cv
122.897 96.1592 123.122 96.1592 123.397 96.1592 cv
cp
f
123.397 96.1592 mo
123.675 96.1592 123.897 96.1592 123.897 96.1592 cv
123.897 96.1592 123.675 96.1592 123.397 96.1592 cv
123.122 96.1592 122.897 96.1592 122.897 96.1592 cv
122.897 96.1592 123.122 96.1592 123.397 96.1592 cv
cp
@
120.599 94.4004 mo
120.875 94.4004 121.099 94.4004 121.099 94.4004 cv
121.099 94.4004 120.875 94.4004 120.599 94.4004 cv
120.323 94.4004 120.099 94.4004 120.099 94.4004 cv
120.099 94.4004 120.323 94.4004 120.599 94.4004 cv
cp
f
120.599 94.4004 mo
120.875 94.4004 121.099 94.4004 121.099 94.4004 cv
121.099 94.4004 120.875 94.4004 120.599 94.4004 cv
120.323 94.4004 120.099 94.4004 120.099 94.4004 cv
120.099 94.4004 120.323 94.4004 120.599 94.4004 cv
cp
@
117.751 92.6445 mo
118.026 92.6445 118.251 92.6445 118.251 92.6445 cv
118.251 92.6445 118.026 92.6445 117.751 92.6445 cv
117.475 92.6445 117.251 92.6445 117.251 92.6445 cv
117.251 92.6445 117.475 92.6445 117.751 92.6445 cv
cp
f
117.751 92.6445 mo
118.026 92.6445 118.251 92.6445 118.251 92.6445 cv
118.251 92.6445 118.026 92.6445 117.751 92.6445 cv
117.475 92.6445 117.251 92.6445 117.251 92.6445 cv
117.251 92.6445 117.475 92.6445 117.751 92.6445 cv
cp
@
114.857 90.8916 mo
115.134 90.8916 115.357 90.8916 115.357 90.8916 cv
115.357 90.8916 115.134 90.8916 114.857 90.8916 cv
114.581 90.8916 114.357 90.8916 114.357 90.8916 cv
114.357 90.8916 114.581 90.8916 114.857 90.8916 cv
cp
f
114.857 90.8916 mo
115.134 90.8916 115.357 90.8916 115.357 90.8916 cv
115.357 90.8916 115.134 90.8916 114.857 90.8916 cv
114.581 90.8916 114.357 90.8916 114.357 90.8916 cv
114.357 90.8916 114.581 90.8916 114.857 90.8916 cv
cp
@
111.921 89.1455 mo
112.198 89.1455 112.421 89.1455 112.421 89.1455 cv
112.421 89.1455 112.198 89.1455 111.921 89.1455 cv
111.646 89.1455 111.421 89.1455 111.421 89.1455 cv
111.421 89.1455 111.646 89.1455 111.921 89.1455 cv
cp
f
111.921 89.1455 mo
112.198 89.1455 112.421 89.1455 112.421 89.1455 cv
112.421 89.1455 112.198 89.1455 111.921 89.1455 cv
111.646 89.1455 111.421 89.1455 111.421 89.1455 cv
111.421 89.1455 111.646 89.1455 111.921 89.1455 cv
cp
@
108.946 87.4053 mo
109.224 87.4053 109.446 87.4053 109.446 87.4053 cv
109.446 87.4053 109.224 87.4053 108.946 87.4053 cv
108.671 87.4053 108.446 87.4053 108.446 87.4053 cv
108.446 87.4053 108.671 87.4053 108.946 87.4053 cv
cp
f
108.946 87.4053 mo
109.224 87.4053 109.446 87.4053 109.446 87.4053 cv
109.446 87.4053 109.224 87.4053 108.946 87.4053 cv
108.671 87.4053 108.446 87.4053 108.446 87.4053 cv
108.446 87.4053 108.671 87.4053 108.946 87.4053 cv
cp
@
105.937 85.6719 mo
106.212 85.6719 106.437 85.6719 106.437 85.6719 cv
106.437 85.6719 106.212 85.6719 105.937 85.6719 cv
105.66 85.6719 105.437 85.6719 105.437 85.6719 cv
105.437 85.6719 105.66 85.6719 105.937 85.6719 cv
cp
f
105.937 85.6719 mo
106.212 85.6719 106.437 85.6719 106.437 85.6719 cv
106.437 85.6719 106.212 85.6719 105.937 85.6719 cv
105.66 85.6719 105.437 85.6719 105.437 85.6719 cv
105.437 85.6719 105.66 85.6719 105.937 85.6719 cv
cp
@
102.894 83.9482 mo
103.169 83.9482 103.394 83.9482 103.394 83.9482 cv
103.394 83.9482 103.169 83.9482 102.894 83.9482 cv
102.617 83.9482 102.394 83.9482 102.394 83.9482 cv
102.394 83.9482 102.617 83.9482 102.894 83.9482 cv
cp
f
102.894 83.9482 mo
103.169 83.9482 103.394 83.9482 103.394 83.9482 cv
103.394 83.9482 103.169 83.9482 102.894 83.9482 cv
102.617 83.9482 102.394 83.9482 102.394 83.9482 cv
102.394 83.9482 102.617 83.9482 102.894 83.9482 cv
cp
@
99.8203 82.2363 mo
100.097 82.2363 100.32 82.2363 100.32 82.2363 cv
100.32 82.2363 100.097 82.2363 99.8203 82.2363 cv
99.5439 82.2363 99.3203 82.2363 99.3203 82.2363 cv
99.3203 82.2363 99.5439 82.2363 99.8203 82.2363 cv
cp
f
99.8203 82.2363 mo
100.097 82.2363 100.32 82.2363 100.32 82.2363 cv
100.32 82.2363 100.097 82.2363 99.8203 82.2363 cv
99.5439 82.2363 99.3203 82.2363 99.3203 82.2363 cv
99.3203 82.2363 99.5439 82.2363 99.8203 82.2363 cv
cp
@
96.7217 80.5361 mo
96.9971 80.5361 97.2217 80.5361 97.2217 80.5361 cv
97.2217 80.5361 96.9971 80.5361 96.7217 80.5361 cv
96.4453 80.5361 96.2217 80.5361 96.2217 80.5361 cv
96.2217 80.5361 96.4453 80.5361 96.7217 80.5361 cv
cp
f
96.7217 80.5361 mo
96.9971 80.5361 97.2217 80.5361 97.2217 80.5361 cv
97.2217 80.5361 96.9971 80.5361 96.7217 80.5361 cv
96.4453 80.5361 96.2217 80.5361 96.2217 80.5361 cv
96.2217 80.5361 96.4453 80.5361 96.7217 80.5361 cv
cp
@
93.5996 78.8496 mo
93.876 78.8496 94.0996 78.8496 94.0996 78.8496 cv
94.0996 78.8496 93.876 78.8496 93.5996 78.8496 cv
93.3232 78.8496 93.0996 78.8496 93.0996 78.8496 cv
93.0996 78.8496 93.3232 78.8496 93.5996 78.8496 cv
cp
f
93.5996 78.8496 mo
93.876 78.8496 94.0996 78.8496 94.0996 78.8496 cv
94.0996 78.8496 93.876 78.8496 93.5996 78.8496 cv
93.3232 78.8496 93.0996 78.8496 93.0996 78.8496 cv
93.0996 78.8496 93.3232 78.8496 93.5996 78.8496 cv
cp
@
90.458 77.1782 mo
90.7334 77.1782 90.958 77.1782 90.958 77.1782 cv
90.958 77.1782 90.7334 77.1782 90.458 77.1782 cv
90.1816 77.1782 89.958 77.1782 89.958 77.1782 cv
89.958 77.1782 90.1816 77.1782 90.458 77.1782 cv
cp
f
90.458 77.1782 mo
90.7334 77.1782 90.958 77.1782 90.958 77.1782 cv
90.958 77.1782 90.7334 77.1782 90.458 77.1782 cv
90.1816 77.1782 89.958 77.1782 89.958 77.1782 cv
89.958 77.1782 90.1816 77.1782 90.458 77.1782 cv
cp
@
87.2998 75.5239 mo
87.5752 75.5239 87.7998 75.5239 87.7998 75.5239 cv
87.7998 75.5239 87.5752 75.5239 87.2998 75.5239 cv
87.0234 75.5239 86.7998 75.5239 86.7998 75.5239 cv
86.7998 75.5239 87.0234 75.5239 87.2998 75.5239 cv
cp
f
87.2998 75.5239 mo
87.5752 75.5239 87.7998 75.5239 87.7998 75.5239 cv
87.7998 75.5239 87.5752 75.5239 87.2998 75.5239 cv
87.0234 75.5239 86.7998 75.5239 86.7998 75.5239 cv
86.7998 75.5239 87.0234 75.5239 87.2998 75.5239 cv
cp
@
84.1279 73.8882 mo
84.4033 73.8882 84.6279 73.8882 84.6279 73.8882 cv
84.6279 73.8882 84.4033 73.8882 84.1279 73.8882 cv
83.8516 73.8882 83.6279 73.8882 83.6279 73.8882 cv
83.6279 73.8882 83.8516 73.8882 84.1279 73.8882 cv
cp
f
84.1279 73.8882 mo
84.4033 73.8882 84.6279 73.8882 84.6279 73.8882 cv
84.6279 73.8882 84.4033 73.8882 84.1279 73.8882 cv
83.8516 73.8882 83.6279 73.8882 83.6279 73.8882 cv
83.6279 73.8882 83.8516 73.8882 84.1279 73.8882 cv
cp
@
80.9453 72.2725 mo
81.2217 72.2725 81.4453 72.2725 81.4453 72.2725 cv
81.4453 72.2725 81.2217 72.2725 80.9453 72.2725 cv
80.6689 72.2725 80.4453 72.2725 80.4453 72.2725 cv
80.4453 72.2725 80.6689 72.2725 80.9453 72.2725 cv
cp
f
80.9453 72.2725 mo
81.2217 72.2725 81.4453 72.2725 81.4453 72.2725 cv
81.4453 72.2725 81.2217 72.2725 80.9453 72.2725 cv
80.6689 72.2725 80.4453 72.2725 80.4453 72.2725 cv
80.4453 72.2725 80.6689 72.2725 80.9453 72.2725 cv
cp
@
77.7559 70.6782 mo
78.0322 70.6782 78.2559 70.6782 78.2559 70.6782 cv
78.2559 70.6782 78.0322 70.6782 77.7559 70.6782 cv
77.4795 70.6782 77.2559 70.6782 77.2559 70.6782 cv
77.2559 70.6782 77.4795 70.6782 77.7559 70.6782 cv
cp
f
77.7559 70.6782 mo
78.0322 70.6782 78.2559 70.6782 78.2559 70.6782 cv
78.2559 70.6782 78.0322 70.6782 77.7559 70.6782 cv
77.4795 70.6782 77.2559 70.6782 77.2559 70.6782 cv
77.2559 70.6782 77.4795 70.6782 77.7559 70.6782 cv
cp
@
74.5625 69.1079 mo
74.8389 69.1079 75.0625 69.1079 75.0625 69.1079 cv
75.0625 69.1079 74.8389 69.1079 74.5625 69.1079 cv
74.2866 69.1079 74.0625 69.1079 74.0625 69.1079 cv
74.0625 69.1079 74.2866 69.1079 74.5625 69.1079 cv
cp
f
74.5625 69.1079 mo
74.8389 69.1079 75.0625 69.1079 75.0625 69.1079 cv
75.0625 69.1079 74.8389 69.1079 74.5625 69.1079 cv
74.2866 69.1079 74.0625 69.1079 74.0625 69.1079 cv
74.0625 69.1079 74.2866 69.1079 74.5625 69.1079 cv
cp
@
71.3687 67.562 mo
71.645 67.562 71.8687 67.562 71.8687 67.562 cv
71.8687 67.562 71.645 67.562 71.3687 67.562 cv
71.0928 67.562 70.8687 67.562 70.8687 67.562 cv
70.8687 67.562 71.0928 67.562 71.3687 67.562 cv
cp
f
71.3687 67.562 mo
71.645 67.562 71.8687 67.562 71.8687 67.562 cv
71.8687 67.562 71.645 67.562 71.3687 67.562 cv
71.0928 67.562 70.8687 67.562 70.8687 67.562 cv
70.8687 67.562 71.0928 67.562 71.3687 67.562 cv
cp
@
68.1768 66.0435 mo
68.4531 66.0435 68.6768 66.0435 68.6768 66.0435 cv
68.6768 66.0435 68.4531 66.0435 68.1768 66.0435 cv
67.9009 66.0435 67.6768 66.0435 67.6768 66.0435 cv
67.6768 66.0435 67.9009 66.0435 68.1768 66.0435 cv
cp
f
68.1768 66.0435 mo
68.4531 66.0435 68.6768 66.0435 68.6768 66.0435 cv
68.6768 66.0435 68.4531 66.0435 68.1768 66.0435 cv
67.9009 66.0435 67.6768 66.0435 67.6768 66.0435 cv
67.6768 66.0435 67.9009 66.0435 68.1768 66.0435 cv
cp
@
64.9907 64.5532 mo
65.2666 64.5532 65.4907 64.5532 65.4907 64.5532 cv
65.4907 64.5532 65.2666 64.5532 64.9907 64.5532 cv
64.7144 64.5532 64.4907 64.5532 64.4907 64.5532 cv
64.4907 64.5532 64.7144 64.5532 64.9907 64.5532 cv
cp
f
64.9907 64.5532 mo
65.2666 64.5532 65.4907 64.5532 65.4907 64.5532 cv
65.4907 64.5532 65.2666 64.5532 64.9907 64.5532 cv
64.7144 64.5532 64.4907 64.5532 64.4907 64.5532 cv
64.4907 64.5532 64.7144 64.5532 64.9907 64.5532 cv
cp
@
61.813 63.0928 mo
62.0889 63.0928 62.313 63.0928 62.313 63.0928 cv
62.313 63.0928 62.0889 63.0928 61.813 63.0928 cv
61.5366 63.0928 61.313 63.0928 61.313 63.0928 cv
61.313 63.0928 61.5366 63.0928 61.813 63.0928 cv
cp
f
61.813 63.0928 mo
62.0889 63.0928 62.313 63.0928 62.313 63.0928 cv
62.313 63.0928 62.0889 63.0928 61.813 63.0928 cv
61.5366 63.0928 61.313 63.0928 61.313 63.0928 cv
61.313 63.0928 61.5366 63.0928 61.813 63.0928 cv
cp
@
58.6465 61.6646 mo
58.9229 61.6646 59.1465 61.6646 59.1465 61.6646 cv
59.1465 61.6646 58.9229 61.6646 58.6465 61.6646 cv
58.3706 61.6646 58.1465 61.6646 58.1465 61.6646 cv
58.1465 61.6646 58.3706 61.6646 58.6465 61.6646 cv
cp
f
58.6465 61.6646 mo
58.9229 61.6646 59.1465 61.6646 59.1465 61.6646 cv
59.1465 61.6646 58.9229 61.6646 58.6465 61.6646 cv
58.3706 61.6646 58.1465 61.6646 58.1465 61.6646 cv
58.1465 61.6646 58.3706 61.6646 58.6465 61.6646 cv
cp
@
55.4946 60.27 mo
55.771 60.27 55.9946 60.27 55.9946 60.27 cv
55.9946 60.27 55.771 60.27 55.4946 60.27 cv
55.2188 60.27 54.9946 60.27 54.9946 60.27 cv
54.9946 60.27 55.2188 60.27 55.4946 60.27 cv
cp
f
55.4946 60.27 mo
55.771 60.27 55.9946 60.27 55.9946 60.27 cv
55.9946 60.27 55.771 60.27 55.4946 60.27 cv
55.2188 60.27 54.9946 60.27 54.9946 60.27 cv
54.9946 60.27 55.2188 60.27 55.4946 60.27 cv
cp
@
52.3608 58.9111 mo
52.6367 58.9111 52.8608 58.9111 52.8608 58.9111 cv
52.8608 58.9111 52.6367 58.9111 52.3608 58.9111 cv
52.0845 58.9111 51.8608 58.9111 51.8608 58.9111 cv
51.8608 58.9111 52.0845 58.9111 52.3608 58.9111 cv
cp
f
52.3608 58.9111 mo
52.6367 58.9111 52.8608 58.9111 52.8608 58.9111 cv
52.8608 58.9111 52.6367 58.9111 52.3608 58.9111 cv
52.0845 58.9111 51.8608 58.9111 51.8608 58.9111 cv
51.8608 58.9111 52.0845 58.9111 52.3608 58.9111 cv
cp
@
49.2471 57.5894 mo
49.5229 57.5894 49.7471 57.5894 49.7471 57.5894 cv
49.7471 57.5894 49.5229 57.5894 49.2471 57.5894 cv
48.9707 57.5894 48.7471 57.5894 48.7471 57.5894 cv
48.7471 57.5894 48.9707 57.5894 49.2471 57.5894 cv
cp
f
49.2471 57.5894 mo
49.5229 57.5894 49.7471 57.5894 49.7471 57.5894 cv
49.7471 57.5894 49.5229 57.5894 49.2471 57.5894 cv
48.9707 57.5894 48.7471 57.5894 48.7471 57.5894 cv
48.7471 57.5894 48.9707 57.5894 49.2471 57.5894 cv
cp
@
46.1567 56.3066 mo
46.4326 56.3066 46.6567 56.3066 46.6567 56.3066 cv
46.6567 56.3066 46.4326 56.3066 46.1567 56.3066 cv
45.8804 56.3066 45.6567 56.3066 45.6567 56.3066 cv
45.6567 56.3066 45.8804 56.3066 46.1567 56.3066 cv
cp
f
46.1567 56.3066 mo
46.4326 56.3066 46.6567 56.3066 46.6567 56.3066 cv
46.6567 56.3066 46.4326 56.3066 46.1567 56.3066 cv
45.8804 56.3066 45.6567 56.3066 45.6567 56.3066 cv
45.6567 56.3066 45.8804 56.3066 46.1567 56.3066 cv
cp
@
43.0928 55.0649 mo
43.3687 55.0649 43.5928 55.0649 43.5928 55.0649 cv
43.5928 55.0649 43.3687 55.0649 43.0928 55.0649 cv
42.8164 55.0649 42.5928 55.0649 42.5928 55.0649 cv
42.5928 55.0649 42.8164 55.0649 43.0928 55.0649 cv
cp
f
43.0928 55.0649 mo
43.3687 55.0649 43.5928 55.0649 43.5928 55.0649 cv
43.5928 55.0649 43.3687 55.0649 43.0928 55.0649 cv
42.8164 55.0649 42.5928 55.0649 42.5928 55.0649 cv
42.5928 55.0649 42.8164 55.0649 43.0928 55.0649 cv
cp
@
40.0576 53.8662 mo
40.3335 53.8662 40.5576 53.8662 40.5576 53.8662 cv
40.5576 53.8662 40.3335 53.8662 40.0576 53.8662 cv
39.7813 53.8662 39.5576 53.8662 39.5576 53.8662 cv
39.5576 53.8662 39.7813 53.8662 40.0576 53.8662 cv
cp
f
40.0576 53.8662 mo
40.3335 53.8662 40.5576 53.8662 40.5576 53.8662 cv
40.5576 53.8662 40.3335 53.8662 40.0576 53.8662 cv
39.7813 53.8662 39.5576 53.8662 39.5576 53.8662 cv
39.5576 53.8662 39.7813 53.8662 40.0576 53.8662 cv
cp
@
37.0537 52.7124 mo
37.3301 52.7124 37.5537 52.7124 37.5537 52.7124 cv
37.5537 52.7124 37.3301 52.7124 37.0537 52.7124 cv
36.7778 52.7124 36.5537 52.7124 36.5537 52.7124 cv
36.5537 52.7124 36.7778 52.7124 37.0537 52.7124 cv
cp
f
37.0537 52.7124 mo
37.3301 52.7124 37.5537 52.7124 37.5537 52.7124 cv
37.5537 52.7124 37.3301 52.7124 37.0537 52.7124 cv
36.7778 52.7124 36.5537 52.7124 36.5537 52.7124 cv
36.5537 52.7124 36.7778 52.7124 37.0537 52.7124 cv
cp
@
34.085 51.606 mo
34.3608 51.606 34.585 51.606 34.585 51.606 cv
34.585 51.606 34.3608 51.606 34.085 51.606 cv
33.8086 51.606 33.585 51.606 33.585 51.606 cv
33.585 51.606 33.8086 51.606 34.085 51.606 cv
cp
f
34.085 51.606 mo
34.3608 51.606 34.585 51.606 34.585 51.606 cv
34.585 51.606 34.3608 51.606 34.085 51.606 cv
33.8086 51.606 33.585 51.606 33.585 51.606 cv
33.585 51.606 33.8086 51.606 34.085 51.606 cv
cp
@
31.1523 50.5483 mo
31.4287 50.5483 31.6523 50.5483 31.6523 50.5483 cv
31.6523 50.5483 31.4287 50.5483 31.1523 50.5483 cv
30.8765 50.5483 30.6523 50.5483 30.6523 50.5483 cv
30.6523 50.5483 30.8765 50.5483 31.1523 50.5483 cv
cp
f
31.1523 50.5483 mo
31.4287 50.5483 31.6523 50.5483 31.6523 50.5483 cv
31.6523 50.5483 31.4287 50.5483 31.1523 50.5483 cv
30.8765 50.5483 30.6523 50.5483 30.6523 50.5483 cv
30.6523 50.5483 30.8765 50.5483 31.1523 50.5483 cv
cp
@
28.2598 49.5415 mo
28.5361 49.5415 28.7598 49.5415 28.7598 49.5415 cv
28.7598 49.5415 28.5361 49.5415 28.2598 49.5415 cv
27.9834 49.5415 27.7598 49.5415 27.7598 49.5415 cv
27.7598 49.5415 27.9834 49.5415 28.2598 49.5415 cv
cp
f
28.2598 49.5415 mo
28.5361 49.5415 28.7598 49.5415 28.7598 49.5415 cv
28.7598 49.5415 28.5361 49.5415 28.2598 49.5415 cv
27.9834 49.5415 27.7598 49.5415 27.7598 49.5415 cv
27.7598 49.5415 27.9834 49.5415 28.2598 49.5415 cv
cp
@
25.4087 48.5889 mo
25.6851 48.5889 25.9087 48.5889 25.9087 48.5889 cv
25.9087 48.5889 25.6851 48.5889 25.4087 48.5889 cv
25.1328 48.5889 24.9087 48.5889 24.9087 48.5889 cv
24.9087 48.5889 25.1328 48.5889 25.4087 48.5889 cv
cp
f
25.4087 48.5889 mo
25.6851 48.5889 25.9087 48.5889 25.9087 48.5889 cv
25.9087 48.5889 25.6851 48.5889 25.4087 48.5889 cv
25.1328 48.5889 24.9087 48.5889 24.9087 48.5889 cv
24.9087 48.5889 25.1328 48.5889 25.4087 48.5889 cv
cp
@
22.6021 47.6924 mo
22.8779 47.6924 23.1021 47.6924 23.1021 47.6924 cv
23.1021 47.6924 22.8779 47.6924 22.6021 47.6924 cv
22.3257 47.6924 22.1021 47.6924 22.1021 47.6924 cv
22.1021 47.6924 22.3257 47.6924 22.6021 47.6924 cv
cp
f
22.6021 47.6924 mo
22.8779 47.6924 23.1021 47.6924 23.1021 47.6924 cv
23.1021 47.6924 22.8779 47.6924 22.6021 47.6924 cv
22.3257 47.6924 22.1021 47.6924 22.1021 47.6924 cv
22.1021 47.6924 22.3257 47.6924 22.6021 47.6924 cv
cp
@
19.8413 46.854 mo
20.1172 46.854 20.3413 46.854 20.3413 46.854 cv
20.3413 46.854 20.1172 46.854 19.8413 46.854 cv
19.5649 46.854 19.3413 46.854 19.3413 46.854 cv
19.3413 46.854 19.5649 46.854 19.8413 46.854 cv
cp
f
19.8413 46.854 mo
20.1172 46.854 20.3413 46.854 20.3413 46.854 cv
20.3413 46.854 20.1172 46.854 19.8413 46.854 cv
19.5649 46.854 19.3413 46.854 19.3413 46.854 cv
19.3413 46.854 19.5649 46.854 19.8413 46.854 cv
cp
@
17.1289 46.0776 mo
17.4053 46.0776 17.6289 46.0776 17.6289 46.0776 cv
17.6289 46.0776 17.4053 46.0776 17.1289 46.0776 cv
16.8525 46.0776 16.6289 46.0776 16.6289 46.0776 cv
16.6289 46.0776 16.8525 46.0776 17.1289 46.0776 cv
cp
f
17.1289 46.0776 mo
17.4053 46.0776 17.6289 46.0776 17.6289 46.0776 cv
17.6289 46.0776 17.4053 46.0776 17.1289 46.0776 cv
16.8525 46.0776 16.6289 46.0776 16.6289 46.0776 cv
16.6289 46.0776 16.8525 46.0776 17.1289 46.0776 cv
cp
@
14.4668 45.3652 mo
14.7432 45.3652 14.9668 45.3652 14.9668 45.3652 cv
14.9668 45.3652 14.7432 45.3652 14.4668 45.3652 cv
14.1909 45.3652 13.9668 45.3652 13.9668 45.3652 cv
13.9668 45.3652 14.1909 45.3652 14.4668 45.3652 cv
cp
f
14.4668 45.3652 mo
14.7432 45.3652 14.9668 45.3652 14.9668 45.3652 cv
14.9668 45.3652 14.7432 45.3652 14.4668 45.3652 cv
14.1909 45.3652 13.9668 45.3652 13.9668 45.3652 cv
13.9668 45.3652 14.1909 45.3652 14.4668 45.3652 cv
cp
@
11.8569 44.7207 mo
12.1328 44.7207 12.3569 44.7207 12.3569 44.7207 cv
12.3569 44.7207 12.1328 44.7207 11.8569 44.7207 cv
11.5806 44.7207 11.3569 44.7207 11.3569 44.7207 cv
11.3569 44.7207 11.5806 44.7207 11.8569 44.7207 cv
cp
f
11.8569 44.7207 mo
12.1328 44.7207 12.3569 44.7207 12.3569 44.7207 cv
12.3569 44.7207 12.1328 44.7207 11.8569 44.7207 cv
11.5806 44.7207 11.3569 44.7207 11.3569 44.7207 cv
11.3569 44.7207 11.5806 44.7207 11.8569 44.7207 cv
cp
@
9.30078 44.1479 mo
9.57666 44.1479 9.80078 44.1479 9.80078 44.1479 cv
9.80078 44.1479 9.57666 44.1479 9.30078 44.1479 cv
9.02441 44.1479 8.80078 44.1479 8.80078 44.1479 cv
8.80078 44.1479 9.02441 44.1479 9.30078 44.1479 cv
cp
f
9.30078 44.1479 mo
9.57666 44.1479 9.80078 44.1479 9.80078 44.1479 cv
9.80078 44.1479 9.57666 44.1479 9.30078 44.1479 cv
9.02441 44.1479 8.80078 44.1479 8.80078 44.1479 cv
8.80078 44.1479 9.02441 44.1479 9.30078 44.1479 cv
cp
@
11.2607 45.8857 mo
11.5371 45.8857 11.7607 45.8857 11.7607 45.8857 cv
11.7607 45.8857 11.5371 45.8857 11.2607 45.8857 cv
10.9844 45.8857 10.7607 45.8857 10.7607 45.8857 cv
10.7607 45.8857 10.9844 45.8857 11.2607 45.8857 cv
cp
0.713725 0 0.305882 0 cmyk
f
11.2607 45.8857 mo
11.5371 45.8857 11.7607 45.8857 11.7607 45.8857 cv
11.7607 45.8857 11.5371 45.8857 11.2607 45.8857 cv
10.9844 45.8857 10.7607 45.8857 10.7607 45.8857 cv
10.7607 45.8857 10.9844 45.8857 11.2607 45.8857 cv
cp
@
13.3101 47.6255 mo
13.5864 47.6255 13.8101 47.6255 13.8101 47.6255 cv
13.8101 47.6255 13.5864 47.6255 13.3101 47.6255 cv
13.0342 47.6255 12.8101 47.6255 12.8101 47.6255 cv
12.8101 47.6255 13.0342 47.6255 13.3101 47.6255 cv
cp
f
13.3101 47.6255 mo
13.5864 47.6255 13.8101 47.6255 13.8101 47.6255 cv
13.8101 47.6255 13.5864 47.6255 13.3101 47.6255 cv
13.0342 47.6255 12.8101 47.6255 12.8101 47.6255 cv
12.8101 47.6255 13.0342 47.6255 13.3101 47.6255 cv
cp
@
15.4448 49.3682 mo
15.7212 49.3682 15.9448 49.3682 15.9448 49.3682 cv
15.9448 49.3682 15.7212 49.3682 15.4448 49.3682 cv
15.1689 49.3682 14.9448 49.3682 14.9448 49.3682 cv
14.9448 49.3682 15.1689 49.3682 15.4448 49.3682 cv
cp
f
15.4448 49.3682 mo
15.7212 49.3682 15.9448 49.3682 15.9448 49.3682 cv
15.9448 49.3682 15.7212 49.3682 15.4448 49.3682 cv
15.1689 49.3682 14.9448 49.3682 14.9448 49.3682 cv
14.9448 49.3682 15.1689 49.3682 15.4448 49.3682 cv
cp
@
17.6616 51.1138 mo
17.9375 51.1138 18.1616 51.1138 18.1616 51.1138 cv
18.1616 51.1138 17.9375 51.1138 17.6616 51.1138 cv
17.3853 51.1138 17.1616 51.1138 17.1616 51.1138 cv
17.1616 51.1138 17.3853 51.1138 17.6616 51.1138 cv
cp
f
17.6616 51.1138 mo
17.9375 51.1138 18.1616 51.1138 18.1616 51.1138 cv
18.1616 51.1138 17.9375 51.1138 17.6616 51.1138 cv
17.3853 51.1138 17.1616 51.1138 17.1616 51.1138 cv
17.1616 51.1138 17.3853 51.1138 17.6616 51.1138 cv
cp
@
19.9561 52.8628 mo
20.2324 52.8628 20.4561 52.8628 20.4561 52.8628 cv
20.4561 52.8628 20.2324 52.8628 19.9561 52.8628 cv
19.6802 52.8628 19.4561 52.8628 19.4561 52.8628 cv
19.4561 52.8628 19.6802 52.8628 19.9561 52.8628 cv
cp
f
19.9561 52.8628 mo
20.2324 52.8628 20.4561 52.8628 20.4561 52.8628 cv
20.4561 52.8628 20.2324 52.8628 19.9561 52.8628 cv
19.6802 52.8628 19.4561 52.8628 19.4561 52.8628 cv
19.4561 52.8628 19.6802 52.8628 19.9561 52.8628 cv
cp
@
22.3252 54.6147 mo
22.6016 54.6147 22.8252 54.6147 22.8252 54.6147 cv
22.8252 54.6147 22.6016 54.6147 22.3252 54.6147 cv
22.0493 54.6147 21.8252 54.6147 21.8252 54.6147 cv
21.8252 54.6147 22.0493 54.6147 22.3252 54.6147 cv
cp
f
22.3252 54.6147 mo
22.6016 54.6147 22.8252 54.6147 22.8252 54.6147 cv
22.8252 54.6147 22.6016 54.6147 22.3252 54.6147 cv
22.0493 54.6147 21.8252 54.6147 21.8252 54.6147 cv
21.8252 54.6147 22.0493 54.6147 22.3252 54.6147 cv
cp
@
24.7656 56.3696 mo
25.042 56.3696 25.2656 56.3696 25.2656 56.3696 cv
25.2656 56.3696 25.042 56.3696 24.7656 56.3696 cv
24.4897 56.3696 24.2656 56.3696 24.2656 56.3696 cv
24.2656 56.3696 24.4897 56.3696 24.7656 56.3696 cv
cp
f
24.7656 56.3696 mo
25.042 56.3696 25.2656 56.3696 25.2656 56.3696 cv
25.2656 56.3696 25.042 56.3696 24.7656 56.3696 cv
24.4897 56.3696 24.2656 56.3696 24.2656 56.3696 cv
24.2656 56.3696 24.4897 56.3696 24.7656 56.3696 cv
cp
@
27.2744 58.1274 mo
27.5503 58.1274 27.7744 58.1274 27.7744 58.1274 cv
27.7744 58.1274 27.5503 58.1274 27.2744 58.1274 cv
26.998 58.1274 26.7744 58.1274 26.7744 58.1274 cv
26.7744 58.1274 26.998 58.1274 27.2744 58.1274 cv
cp
f
27.2744 58.1274 mo
27.5503 58.1274 27.7744 58.1274 27.7744 58.1274 cv
27.7744 58.1274 27.5503 58.1274 27.2744 58.1274 cv
26.998 58.1274 26.7744 58.1274 26.7744 58.1274 cv
26.7744 58.1274 26.998 58.1274 27.2744 58.1274 cv
cp
@
29.8472 59.8867 mo
30.1235 59.8867 30.3472 59.8867 30.3472 59.8867 cv
30.3472 59.8867 30.1235 59.8867 29.8472 59.8867 cv
29.5713 59.8867 29.3472 59.8867 29.3472 59.8867 cv
29.3472 59.8867 29.5713 59.8867 29.8472 59.8867 cv
cp
f
29.8472 59.8867 mo
30.1235 59.8867 30.3472 59.8867 30.3472 59.8867 cv
30.3472 59.8867 30.1235 59.8867 29.8472 59.8867 cv
29.5713 59.8867 29.3472 59.8867 29.3472 59.8867 cv
29.3472 59.8867 29.5713 59.8867 29.8472 59.8867 cv
cp
@
32.4814 61.6475 mo
32.7578 61.6475 32.9814 61.6475 32.9814 61.6475 cv
32.9814 61.6475 32.7578 61.6475 32.4814 61.6475 cv
32.2056 61.6475 31.9814 61.6475 31.9814 61.6475 cv
31.9814 61.6475 32.2056 61.6475 32.4814 61.6475 cv
cp
f
32.4814 61.6475 mo
32.7578 61.6475 32.9814 61.6475 32.9814 61.6475 cv
32.9814 61.6475 32.7578 61.6475 32.4814 61.6475 cv
32.2056 61.6475 31.9814 61.6475 31.9814 61.6475 cv
31.9814 61.6475 32.2056 61.6475 32.4814 61.6475 cv
cp
@
35.1743 63.4087 mo
35.4507 63.4087 35.6743 63.4087 35.6743 63.4087 cv
35.6743 63.4087 35.4507 63.4087 35.1743 63.4087 cv
34.8979 63.4087 34.6743 63.4087 34.6743 63.4087 cv
34.6743 63.4087 34.8979 63.4087 35.1743 63.4087 cv
cp
f
35.1743 63.4087 mo
35.4507 63.4087 35.6743 63.4087 35.6743 63.4087 cv
35.6743 63.4087 35.4507 63.4087 35.1743 63.4087 cv
34.8979 63.4087 34.6743 63.4087 34.6743 63.4087 cv
34.6743 63.4087 34.8979 63.4087 35.1743 63.4087 cv
cp
@
37.9219 65.1689 mo
38.1982 65.1689 38.4219 65.1689 38.4219 65.1689 cv
38.4219 65.1689 38.1982 65.1689 37.9219 65.1689 cv
37.646 65.1689 37.4219 65.1689 37.4219 65.1689 cv
37.4219 65.1689 37.646 65.1689 37.9219 65.1689 cv
cp
f
37.9219 65.1689 mo
38.1982 65.1689 38.4219 65.1689 38.4219 65.1689 cv
38.4219 65.1689 38.1982 65.1689 37.9219 65.1689 cv
37.646 65.1689 37.4219 65.1689 37.4219 65.1689 cv
37.4219 65.1689 37.646 65.1689 37.9219 65.1689 cv
cp
@
40.7212 66.9282 mo
40.9976 66.9282 41.2212 66.9282 41.2212 66.9282 cv
41.2212 66.9282 40.9976 66.9282 40.7212 66.9282 cv
40.4453 66.9282 40.2212 66.9282 40.2212 66.9282 cv
40.2212 66.9282 40.4453 66.9282 40.7212 66.9282 cv
cp
f
40.7212 66.9282 mo
40.9976 66.9282 41.2212 66.9282 41.2212 66.9282 cv
41.2212 66.9282 40.9976 66.9282 40.7212 66.9282 cv
40.4453 66.9282 40.2212 66.9282 40.2212 66.9282 cv
40.2212 66.9282 40.4453 66.9282 40.7212 66.9282 cv
cp
@
43.5693 68.6841 mo
43.8457 68.6841 44.0693 68.6841 44.0693 68.6841 cv
44.0693 68.6841 43.8457 68.6841 43.5693 68.6841 cv
43.2935 68.6841 43.0693 68.6841 43.0693 68.6841 cv
43.0693 68.6841 43.2935 68.6841 43.5693 68.6841 cv
cp
f
43.5693 68.6841 mo
43.8457 68.6841 44.0693 68.6841 44.0693 68.6841 cv
44.0693 68.6841 43.8457 68.6841 43.5693 68.6841 cv
43.2935 68.6841 43.0693 68.6841 43.0693 68.6841 cv
43.0693 68.6841 43.2935 68.6841 43.5693 68.6841 cv
cp
@
46.4629 70.4365 mo
46.7388 70.4365 46.9629 70.4365 46.9629 70.4365 cv
46.9629 70.4365 46.7388 70.4365 46.4629 70.4365 cv
46.1865 70.4365 45.9629 70.4365 45.9629 70.4365 cv
45.9629 70.4365 46.1865 70.4365 46.4629 70.4365 cv
cp
f
46.4629 70.4365 mo
46.7388 70.4365 46.9629 70.4365 46.9629 70.4365 cv
46.9629 70.4365 46.7388 70.4365 46.4629 70.4365 cv
46.1865 70.4365 45.9629 70.4365 45.9629 70.4365 cv
45.9629 70.4365 46.1865 70.4365 46.4629 70.4365 cv
cp
@
49.3984 72.1836 mo
49.6748 72.1836 49.8984 72.1836 49.8984 72.1836 cv
49.8984 72.1836 49.6748 72.1836 49.3984 72.1836 cv
49.1226 72.1836 48.8984 72.1836 48.8984 72.1836 cv
48.8984 72.1836 49.1226 72.1836 49.3984 72.1836 cv
cp
f
49.3984 72.1836 mo
49.6748 72.1836 49.8984 72.1836 49.8984 72.1836 cv
49.8984 72.1836 49.6748 72.1836 49.3984 72.1836 cv
49.1226 72.1836 48.8984 72.1836 48.8984 72.1836 cv
48.8984 72.1836 49.1226 72.1836 49.3984 72.1836 cv
cp
@
52.373 73.9238 mo
52.6494 73.9238 52.873 73.9238 52.873 73.9238 cv
52.873 73.9238 52.6494 73.9238 52.373 73.9238 cv
52.0972 73.9238 51.873 73.9238 51.873 73.9238 cv
51.873 73.9238 52.0972 73.9238 52.373 73.9238 cv
cp
f
52.373 73.9238 mo
52.6494 73.9238 52.873 73.9238 52.873 73.9238 cv
52.873 73.9238 52.6494 73.9238 52.373 73.9238 cv
52.0972 73.9238 51.873 73.9238 51.873 73.9238 cv
51.873 73.9238 52.0972 73.9238 52.373 73.9238 cv
cp
@
55.3838 75.6563 mo
55.6597 75.6563 55.8838 75.6563 55.8838 75.6563 cv
55.8838 75.6563 55.6597 75.6563 55.3838 75.6563 cv
55.1074 75.6563 54.8838 75.6563 54.8838 75.6563 cv
54.8838 75.6563 55.1074 75.6563 55.3838 75.6563 cv
cp
f
55.3838 75.6563 mo
55.6597 75.6563 55.8838 75.6563 55.8838 75.6563 cv
55.8838 75.6563 55.6597 75.6563 55.3838 75.6563 cv
55.1074 75.6563 54.8838 75.6563 54.8838 75.6563 cv
54.8838 75.6563 55.1074 75.6563 55.3838 75.6563 cv
cp
@
58.4268 77.3799 mo
58.7031 77.3799 58.9268 77.3799 58.9268 77.3799 cv
58.9268 77.3799 58.7031 77.3799 58.4268 77.3799 cv
58.1509 77.3799 57.9268 77.3799 57.9268 77.3799 cv
57.9268 77.3799 58.1509 77.3799 58.4268 77.3799 cv
cp
f
58.4268 77.3799 mo
58.7031 77.3799 58.9268 77.3799 58.9268 77.3799 cv
58.9268 77.3799 58.7031 77.3799 58.4268 77.3799 cv
58.1509 77.3799 57.9268 77.3799 57.9268 77.3799 cv
57.9268 77.3799 58.1509 77.3799 58.4268 77.3799 cv
cp
@
61.4995 79.0923 mo
61.7759 79.0923 61.9995 79.0923 61.9995 79.0923 cv
61.9995 79.0923 61.7759 79.0923 61.4995 79.0923 cv
61.2236 79.0923 60.9995 79.0923 60.9995 79.0923 cv
60.9995 79.0923 61.2236 79.0923 61.4995 79.0923 cv
cp
f
61.4995 79.0923 mo
61.7759 79.0923 61.9995 79.0923 61.9995 79.0923 cv
61.9995 79.0923 61.7759 79.0923 61.4995 79.0923 cv
61.2236 79.0923 60.9995 79.0923 60.9995 79.0923 cv
60.9995 79.0923 61.2236 79.0923 61.4995 79.0923 cv
cp
@
64.5986 80.7925 mo
64.8745 80.7925 65.0986 80.7925 65.0986 80.7925 cv
65.0986 80.7925 64.8745 80.7925 64.5986 80.7925 cv
64.3223 80.7925 64.0986 80.7925 64.0986 80.7925 cv
64.0986 80.7925 64.3223 80.7925 64.5986 80.7925 cv
cp
f
64.5986 80.7925 mo
64.8745 80.7925 65.0986 80.7925 65.0986 80.7925 cv
65.0986 80.7925 64.8745 80.7925 64.5986 80.7925 cv
64.3223 80.7925 64.0986 80.7925 64.0986 80.7925 cv
64.0986 80.7925 64.3223 80.7925 64.5986 80.7925 cv
cp
@
67.7202 82.4795 mo
67.9966 82.4795 68.2202 82.4795 68.2202 82.4795 cv
68.2202 82.4795 67.9966 82.4795 67.7202 82.4795 cv
67.4443 82.4795 67.2202 82.4795 67.2202 82.4795 cv
67.2202 82.4795 67.4443 82.4795 67.7202 82.4795 cv
cp
f
67.7202 82.4795 mo
67.9966 82.4795 68.2202 82.4795 68.2202 82.4795 cv
68.2202 82.4795 67.9966 82.4795 67.7202 82.4795 cv
67.4443 82.4795 67.2202 82.4795 67.2202 82.4795 cv
67.2202 82.4795 67.4443 82.4795 67.7202 82.4795 cv
cp
@
70.8623 84.1504 mo
71.1382 84.1504 71.3623 84.1504 71.3623 84.1504 cv
71.3623 84.1504 71.1382 84.1504 70.8623 84.1504 cv
70.5859 84.1504 70.3623 84.1504 70.3623 84.1504 cv
70.3623 84.1504 70.5859 84.1504 70.8623 84.1504 cv
cp
f
70.8623 84.1504 mo
71.1382 84.1504 71.3623 84.1504 71.3623 84.1504 cv
71.3623 84.1504 71.1382 84.1504 70.8623 84.1504 cv
70.5859 84.1504 70.3623 84.1504 70.3623 84.1504 cv
70.3623 84.1504 70.5859 84.1504 70.8623 84.1504 cv
cp
@
74.0205 85.8047 mo
74.2969 85.8047 74.5205 85.8047 74.5205 85.8047 cv
74.5205 85.8047 74.2969 85.8047 74.0205 85.8047 cv
73.7446 85.8047 73.5205 85.8047 73.5205 85.8047 cv
73.5205 85.8047 73.7446 85.8047 74.0205 85.8047 cv
cp
f
74.0205 85.8047 mo
74.2969 85.8047 74.5205 85.8047 74.5205 85.8047 cv
74.5205 85.8047 74.2969 85.8047 74.0205 85.8047 cv
73.7446 85.8047 73.5205 85.8047 73.5205 85.8047 cv
73.5205 85.8047 73.7446 85.8047 74.0205 85.8047 cv
cp
@
77.1924 87.4404 mo
77.4688 87.4404 77.6924 87.4404 77.6924 87.4404 cv
77.6924 87.4404 77.4688 87.4404 77.1924 87.4404 cv
76.9165 87.4404 76.6924 87.4404 76.6924 87.4404 cv
76.6924 87.4404 76.9165 87.4404 77.1924 87.4404 cv
cp
f
77.1924 87.4404 mo
77.4688 87.4404 77.6924 87.4404 77.6924 87.4404 cv
77.6924 87.4404 77.4688 87.4404 77.1924 87.4404 cv
76.9165 87.4404 76.6924 87.4404 76.6924 87.4404 cv
76.6924 87.4404 76.9165 87.4404 77.1924 87.4404 cv
cp
@
80.375 89.0557 mo
80.6514 89.0557 80.875 89.0557 80.875 89.0557 cv
80.875 89.0557 80.6514 89.0557 80.375 89.0557 cv
80.0986 89.0557 79.875 89.0557 79.875 89.0557 cv
79.875 89.0557 80.0986 89.0557 80.375 89.0557 cv
cp
f
80.375 89.0557 mo
80.6514 89.0557 80.875 89.0557 80.875 89.0557 cv
80.875 89.0557 80.6514 89.0557 80.375 89.0557 cv
80.0986 89.0557 79.875 89.0557 79.875 89.0557 cv
79.875 89.0557 80.0986 89.0557 80.375 89.0557 cv
cp
@
83.5635 90.6494 mo
83.8408 90.6494 84.0635 90.6494 84.0635 90.6494 cv
84.0635 90.6494 83.8408 90.6494 83.5635 90.6494 cv
83.2881 90.6494 83.0635 90.6494 83.0635 90.6494 cv
83.0635 90.6494 83.2881 90.6494 83.5635 90.6494 cv
cp
f
83.5635 90.6494 mo
83.8408 90.6494 84.0635 90.6494 84.0635 90.6494 cv
84.0635 90.6494 83.8408 90.6494 83.5635 90.6494 cv
83.2881 90.6494 83.0635 90.6494 83.0635 90.6494 cv
83.0635 90.6494 83.2881 90.6494 83.5635 90.6494 cv
cp
@
86.7568 92.2207 mo
87.0332 92.2207 87.2568 92.2207 87.2568 92.2207 cv
87.2568 92.2207 87.0332 92.2207 86.7568 92.2207 cv
86.4814 92.2207 86.2568 92.2207 86.2568 92.2207 cv
86.2568 92.2207 86.4814 92.2207 86.7568 92.2207 cv
cp
f
86.7568 92.2207 mo
87.0332 92.2207 87.2568 92.2207 87.2568 92.2207 cv
87.2568 92.2207 87.0332 92.2207 86.7568 92.2207 cv
86.4814 92.2207 86.2568 92.2207 86.2568 92.2207 cv
86.2568 92.2207 86.4814 92.2207 86.7568 92.2207 cv
cp
@
89.9512 93.7666 mo
90.2275 93.7666 90.4512 93.7666 90.4512 93.7666 cv
90.4512 93.7666 90.2275 93.7666 89.9512 93.7666 cv
89.6748 93.7666 89.4512 93.7666 89.4512 93.7666 cv
89.4512 93.7666 89.6748 93.7666 89.9512 93.7666 cv
cp
f
89.9512 93.7666 mo
90.2275 93.7666 90.4512 93.7666 90.4512 93.7666 cv
90.4512 93.7666 90.2275 93.7666 89.9512 93.7666 cv
89.6748 93.7666 89.4512 93.7666 89.4512 93.7666 cv
89.4512 93.7666 89.6748 93.7666 89.9512 93.7666 cv
cp
@
93.1436 95.2852 mo
93.4189 95.2852 93.6436 95.2852 93.6436 95.2852 cv
93.6436 95.2852 93.4189 95.2852 93.1436 95.2852 cv
92.8672 95.2852 92.6436 95.2852 92.6436 95.2852 cv
92.6436 95.2852 92.8672 95.2852 93.1436 95.2852 cv
cp
f
93.1436 95.2852 mo
93.4189 95.2852 93.6436 95.2852 93.6436 95.2852 cv
93.6436 95.2852 93.4189 95.2852 93.1436 95.2852 cv
92.8672 95.2852 92.6436 95.2852 92.6436 95.2852 cv
92.6436 95.2852 92.8672 95.2852 93.1436 95.2852 cv
cp
@
96.3291 96.7754 mo
96.6055 96.7754 96.8291 96.7754 96.8291 96.7754 cv
96.8291 96.7754 96.6055 96.7754 96.3291 96.7754 cv
96.0537 96.7754 95.8291 96.7754 95.8291 96.7754 cv
95.8291 96.7754 96.0537 96.7754 96.3291 96.7754 cv
cp
f
96.3291 96.7754 mo
96.6055 96.7754 96.8291 96.7754 96.8291 96.7754 cv
96.8291 96.7754 96.6055 96.7754 96.3291 96.7754 cv
96.0537 96.7754 95.8291 96.7754 95.8291 96.7754 cv
95.8291 96.7754 96.0537 96.7754 96.3291 96.7754 cv
cp
@
99.5068 98.2354 mo
99.7832 98.2354 100.007 98.2354 100.007 98.2354 cv
100.007 98.2354 99.7832 98.2354 99.5068 98.2354 cv
99.2314 98.2354 99.0068 98.2354 99.0068 98.2354 cv
99.0068 98.2354 99.2314 98.2354 99.5068 98.2354 cv
cp
f
99.5068 98.2354 mo
99.7832 98.2354 100.007 98.2354 100.007 98.2354 cv
100.007 98.2354 99.7832 98.2354 99.5068 98.2354 cv
99.2314 98.2354 99.0068 98.2354 99.0068 98.2354 cv
99.0068 98.2354 99.2314 98.2354 99.5068 98.2354 cv
cp
@
102.673 99.6631 mo
102.95 99.6631 103.173 99.6631 103.173 99.6631 cv
103.173 99.6631 102.95 99.6631 102.673 99.6631 cv
102.397 99.6631 102.173 99.6631 102.173 99.6631 cv
102.173 99.6631 102.397 99.6631 102.673 99.6631 cv
cp
f
102.673 99.6631 mo
102.95 99.6631 103.173 99.6631 103.173 99.6631 cv
103.173 99.6631 102.95 99.6631 102.673 99.6631 cv
102.397 99.6631 102.173 99.6631 102.173 99.6631 cv
102.173 99.6631 102.397 99.6631 102.673 99.6631 cv
cp
@
105.825 101.059 mo
106.102 101.059 106.325 101.059 106.325 101.059 cv
106.325 101.059 106.102 101.059 105.825 101.059 cv
105.55 101.059 105.325 101.059 105.325 101.059 cv
105.325 101.059 105.55 101.059 105.825 101.059 cv
cp
f
105.825 101.059 mo
106.102 101.059 106.325 101.059 106.325 101.059 cv
106.325 101.059 106.102 101.059 105.825 101.059 cv
105.55 101.059 105.325 101.059 105.325 101.059 cv
105.325 101.059 105.55 101.059 105.825 101.059 cv
cp
@
108.96 102.417 mo
109.235 102.417 109.46 102.417 109.46 102.417 cv
109.46 102.417 109.235 102.417 108.96 102.417 cv
108.683 102.417 108.46 102.417 108.46 102.417 cv
108.46 102.417 108.683 102.417 108.96 102.417 cv
cp
f
108.96 102.417 mo
109.235 102.417 109.46 102.417 109.46 102.417 cv
109.46 102.417 109.235 102.417 108.96 102.417 cv
108.683 102.417 108.46 102.417 108.46 102.417 cv
108.46 102.417 108.683 102.417 108.96 102.417 cv
cp
@
112.073 103.739 mo
112.349 103.739 112.573 103.739 112.573 103.739 cv
112.573 103.739 112.349 103.739 112.073 103.739 cv
111.797 103.739 111.573 103.739 111.573 103.739 cv
111.573 103.739 111.797 103.739 112.073 103.739 cv
cp
f
112.073 103.739 mo
112.349 103.739 112.573 103.739 112.573 103.739 cv
112.573 103.739 112.349 103.739 112.073 103.739 cv
111.797 103.739 111.573 103.739 111.573 103.739 cv
111.573 103.739 111.797 103.739 112.073 103.739 cv
cp
@
115.163 105.022 mo
115.439 105.022 115.663 105.022 115.663 105.022 cv
115.663 105.022 115.439 105.022 115.163 105.022 cv
114.888 105.022 114.663 105.022 114.663 105.022 cv
114.663 105.022 114.888 105.022 115.163 105.022 cv
cp
f
115.163 105.022 mo
115.439 105.022 115.663 105.022 115.663 105.022 cv
115.663 105.022 115.439 105.022 115.163 105.022 cv
114.888 105.022 114.663 105.022 114.663 105.022 cv
114.663 105.022 114.888 105.022 115.163 105.022 cv
cp
@
118.228 106.264 mo
118.504 106.264 118.728 106.264 118.728 106.264 cv
118.728 106.264 118.504 106.264 118.228 106.264 cv
117.951 106.264 117.728 106.264 117.728 106.264 cv
117.728 106.264 117.951 106.264 118.228 106.264 cv
cp
f
118.228 106.264 mo
118.504 106.264 118.728 106.264 118.728 106.264 cv
118.728 106.264 118.504 106.264 118.228 106.264 cv
117.951 106.264 117.728 106.264 117.728 106.264 cv
117.728 106.264 117.951 106.264 118.228 106.264 cv
cp
@
121.263 107.462 mo
121.539 107.462 121.763 107.462 121.763 107.462 cv
121.763 107.462 121.539 107.462 121.263 107.462 cv
120.986 107.462 120.763 107.462 120.763 107.462 cv
120.763 107.462 120.986 107.462 121.263 107.462 cv
cp
f
121.263 107.462 mo
121.539 107.462 121.763 107.462 121.763 107.462 cv
121.763 107.462 121.539 107.462 121.263 107.462 cv
120.986 107.462 120.763 107.462 120.763 107.462 cv
120.763 107.462 120.986 107.462 121.263 107.462 cv
cp
@
124.267 108.616 mo
124.542 108.616 124.767 108.616 124.767 108.616 cv
124.767 108.616 124.542 108.616 124.267 108.616 cv
123.99 108.616 123.767 108.616 123.767 108.616 cv
123.767 108.616 123.99 108.616 124.267 108.616 cv
cp
f
124.267 108.616 mo
124.542 108.616 124.767 108.616 124.767 108.616 cv
124.767 108.616 124.542 108.616 124.267 108.616 cv
123.99 108.616 123.767 108.616 123.767 108.616 cv
123.767 108.616 123.99 108.616 124.267 108.616 cv
cp
@
127.235 109.723 mo
127.511 109.723 127.735 109.723 127.735 109.723 cv
127.735 109.723 127.511 109.723 127.235 109.723 cv
126.959 109.723 126.735 109.723 126.735 109.723 cv
126.735 109.723 126.959 109.723 127.235 109.723 cv
cp
f
127.235 109.723 mo
127.511 109.723 127.735 109.723 127.735 109.723 cv
127.735 109.723 127.511 109.723 127.235 109.723 cv
126.959 109.723 126.735 109.723 126.735 109.723 cv
126.735 109.723 126.959 109.723 127.235 109.723 cv
cp
@
130.167 110.78 mo
130.444 110.78 130.667 110.78 130.667 110.78 cv
130.667 110.78 130.444 110.78 130.167 110.78 cv
129.892 110.78 129.667 110.78 129.667 110.78 cv
129.667 110.78 129.892 110.78 130.167 110.78 cv
cp
f
130.167 110.78 mo
130.444 110.78 130.667 110.78 130.667 110.78 cv
130.667 110.78 130.444 110.78 130.167 110.78 cv
129.892 110.78 129.667 110.78 129.667 110.78 cv
129.667 110.78 129.892 110.78 130.167 110.78 cv
cp
@
133.061 111.786 mo
133.337 111.786 133.561 111.786 133.561 111.786 cv
133.561 111.786 133.337 111.786 133.061 111.786 cv
132.784 111.786 132.561 111.786 132.561 111.786 cv
132.561 111.786 132.784 111.786 133.061 111.786 cv
cp
f
133.061 111.786 mo
133.337 111.786 133.561 111.786 133.561 111.786 cv
133.561 111.786 133.337 111.786 133.061 111.786 cv
132.784 111.786 132.561 111.786 132.561 111.786 cv
132.561 111.786 132.784 111.786 133.061 111.786 cv
cp
@
135.911 112.739 mo
136.188 112.739 136.411 112.739 136.411 112.739 cv
136.411 112.739 136.188 112.739 135.911 112.739 cv
135.636 112.739 135.411 112.739 135.411 112.739 cv
135.411 112.739 135.636 112.739 135.911 112.739 cv
cp
f
135.911 112.739 mo
136.188 112.739 136.411 112.739 136.411 112.739 cv
136.411 112.739 136.188 112.739 135.911 112.739 cv
135.636 112.739 135.411 112.739 135.411 112.739 cv
135.411 112.739 135.636 112.739 135.911 112.739 cv
cp
@
138.718 113.636 mo
138.994 113.636 139.218 113.636 139.218 113.636 cv
139.218 113.636 138.994 113.636 138.718 113.636 cv
138.442 113.636 138.218 113.636 138.218 113.636 cv
138.218 113.636 138.442 113.636 138.718 113.636 cv
cp
f
138.718 113.636 mo
138.994 113.636 139.218 113.636 139.218 113.636 cv
139.218 113.636 138.994 113.636 138.718 113.636 cv
138.442 113.636 138.218 113.636 138.218 113.636 cv
138.218 113.636 138.442 113.636 138.718 113.636 cv
cp
@
141.479 114.474 mo
141.755 114.474 141.979 114.474 141.979 114.474 cv
141.979 114.474 141.755 114.474 141.479 114.474 cv
141.202 114.474 140.979 114.474 140.979 114.474 cv
140.979 114.474 141.202 114.474 141.479 114.474 cv
cp
f
141.479 114.474 mo
141.755 114.474 141.979 114.474 141.979 114.474 cv
141.979 114.474 141.755 114.474 141.479 114.474 cv
141.202 114.474 140.979 114.474 140.979 114.474 cv
140.979 114.474 141.202 114.474 141.479 114.474 cv
cp
@
144.191 115.251 mo
144.468 115.251 144.691 115.251 144.691 115.251 cv
144.691 115.251 144.468 115.251 144.191 115.251 cv
143.915 115.251 143.691 115.251 143.691 115.251 cv
143.691 115.251 143.915 115.251 144.191 115.251 cv
cp
f
144.191 115.251 mo
144.468 115.251 144.691 115.251 144.691 115.251 cv
144.691 115.251 144.468 115.251 144.191 115.251 cv
143.915 115.251 143.691 115.251 143.691 115.251 cv
143.691 115.251 143.915 115.251 144.191 115.251 cv
cp
@
146.853 115.964 mo
147.13 115.964 147.353 115.964 147.353 115.964 cv
147.353 115.964 147.13 115.964 146.853 115.964 cv
146.577 115.964 146.353 115.964 146.353 115.964 cv
146.353 115.964 146.577 115.964 146.853 115.964 cv
cp
f
146.853 115.964 mo
147.13 115.964 147.353 115.964 147.353 115.964 cv
147.353 115.964 147.13 115.964 146.853 115.964 cv
146.577 115.964 146.353 115.964 146.353 115.964 cv
146.353 115.964 146.577 115.964 146.853 115.964 cv
cp
@
149.463 116.608 mo
149.739 116.608 149.963 116.608 149.963 116.608 cv
149.963 116.608 149.739 116.608 149.463 116.608 cv
149.187 116.608 148.964 116.608 148.964 116.608 cv
148.964 116.608 149.187 116.608 149.463 116.608 cv
cp
f
149.463 116.608 mo
149.739 116.608 149.963 116.608 149.963 116.608 cv
149.963 116.608 149.739 116.608 149.463 116.608 cv
149.187 116.608 148.964 116.608 148.964 116.608 cv
148.964 116.608 149.187 116.608 149.463 116.608 cv
cp
@
152.02 117.181 mo
152.296 117.181 152.52 117.181 152.52 117.181 cv
152.52 117.181 152.296 117.181 152.02 117.181 cv
151.743 117.181 151.52 117.181 151.52 117.181 cv
151.52 117.181 151.743 117.181 152.02 117.181 cv
cp
f
152.02 117.181 mo
152.296 117.181 152.52 117.181 152.52 117.181 cv
152.52 117.181 152.296 117.181 152.02 117.181 cv
151.743 117.181 151.52 117.181 151.52 117.181 cv
151.52 117.181 151.743 117.181 152.02 117.181 cv
cp
@
12.9785 37.7124 mo
13.2549 37.7124 13.4785 37.7124 13.4785 37.7124 cv
13.4785 37.7124 13.2549 37.7124 12.9785 37.7124 cv
12.7026 37.7124 12.4785 37.7124 12.4785 37.7124 cv
12.4785 37.7124 12.7026 37.7124 12.9785 37.7124 cv
cp
0.87451 0.243137 1 0.129412 cmyk
f
12.9785 37.7124 mo
13.2549 37.7124 13.4785 37.7124 13.4785 37.7124 cv
13.4785 37.7124 13.2549 37.7124 12.9785 37.7124 cv
12.7026 37.7124 12.4785 37.7124 12.4785 37.7124 cv
12.4785 37.7124 12.7026 37.7124 12.9785 37.7124 cv
cp
@
146.57 121.677 mo
146.847 121.677 147.07 121.677 147.07 121.677 cv
147.07 121.677 146.847 121.677 146.57 121.677 cv
146.294 121.677 146.07 121.677 146.07 121.677 cv
146.07 121.677 146.294 121.677 146.57 121.677 cv
cp
f
146.57 121.677 mo
146.847 121.677 147.07 121.677 147.07 121.677 cv
147.07 121.677 146.847 121.677 146.57 121.677 cv
146.294 121.677 146.07 121.677 146.07 121.677 cv
146.07 121.677 146.294 121.677 146.57 121.677 cv
cp
@
144.708 119.729 mo
144.985 119.729 145.208 119.729 145.208 119.729 cv
145.208 119.729 144.985 119.729 144.708 119.729 cv
144.433 119.729 144.208 119.729 144.208 119.729 cv
144.208 119.729 144.433 119.729 144.708 119.729 cv
cp
f
144.708 119.729 mo
144.985 119.729 145.208 119.729 145.208 119.729 cv
145.208 119.729 144.985 119.729 144.708 119.729 cv
144.433 119.729 144.208 119.729 144.208 119.729 cv
144.208 119.729 144.433 119.729 144.708 119.729 cv
cp
@
142.761 117.772 mo
143.037 117.772 143.261 117.772 143.261 117.772 cv
143.261 117.772 143.037 117.772 142.761 117.772 cv
142.485 117.772 142.261 117.772 142.261 117.772 cv
142.261 117.772 142.485 117.772 142.761 117.772 cv
cp
f
142.761 117.772 mo
143.037 117.772 143.261 117.772 143.261 117.772 cv
143.261 117.772 143.037 117.772 142.761 117.772 cv
142.485 117.772 142.261 117.772 142.261 117.772 cv
142.261 117.772 142.485 117.772 142.761 117.772 cv
cp
@
140.731 115.807 mo
141.008 115.807 141.231 115.807 141.231 115.807 cv
141.231 115.807 141.008 115.807 140.731 115.807 cv
140.456 115.807 140.231 115.807 140.231 115.807 cv
140.231 115.807 140.456 115.807 140.731 115.807 cv
cp
f
140.731 115.807 mo
141.008 115.807 141.231 115.807 141.231 115.807 cv
141.231 115.807 141.008 115.807 140.731 115.807 cv
140.456 115.807 140.231 115.807 140.231 115.807 cv
140.231 115.807 140.456 115.807 140.731 115.807 cv
cp
@
138.623 113.831 mo
138.899 113.831 139.123 113.831 139.123 113.831 cv
139.123 113.831 138.899 113.831 138.623 113.831 cv
138.347 113.831 138.123 113.831 138.123 113.831 cv
138.123 113.831 138.347 113.831 138.623 113.831 cv
cp
f
138.623 113.831 mo
138.899 113.831 139.123 113.831 139.123 113.831 cv
139.123 113.831 138.899 113.831 138.623 113.831 cv
138.347 113.831 138.123 113.831 138.123 113.831 cv
138.123 113.831 138.347 113.831 138.623 113.831 cv
cp
@
136.44 111.848 mo
136.716 111.848 136.94 111.848 136.94 111.848 cv
136.94 111.848 136.716 111.848 136.44 111.848 cv
136.164 111.848 135.94 111.848 135.94 111.848 cv
135.94 111.848 136.164 111.848 136.44 111.848 cv
cp
f
136.44 111.848 mo
136.716 111.848 136.94 111.848 136.94 111.848 cv
136.94 111.848 136.716 111.848 136.44 111.848 cv
136.164 111.848 135.94 111.848 135.94 111.848 cv
135.94 111.848 136.164 111.848 136.44 111.848 cv
cp
@
134.185 109.854 mo
134.461 109.854 134.685 109.854 134.685 109.854 cv
134.685 109.854 134.461 109.854 134.185 109.854 cv
133.909 109.854 133.685 109.854 133.685 109.854 cv
133.685 109.854 133.909 109.854 134.185 109.854 cv
cp
f
134.185 109.854 mo
134.461 109.854 134.685 109.854 134.685 109.854 cv
134.685 109.854 134.461 109.854 134.185 109.854 cv
133.909 109.854 133.685 109.854 133.685 109.854 cv
133.685 109.854 133.909 109.854 134.185 109.854 cv
cp
@
131.862 107.854 mo
132.138 107.854 132.362 107.854 132.362 107.854 cv
132.362 107.854 132.138 107.854 131.862 107.854 cv
131.585 107.854 131.362 107.854 131.362 107.854 cv
131.362 107.854 131.585 107.854 131.862 107.854 cv
cp
f
131.862 107.854 mo
132.138 107.854 132.362 107.854 132.362 107.854 cv
132.362 107.854 132.138 107.854 131.862 107.854 cv
131.585 107.854 131.362 107.854 131.362 107.854 cv
131.362 107.854 131.585 107.854 131.862 107.854 cv
cp
@
129.474 105.849 mo
129.749 105.849 129.974 105.849 129.974 105.849 cv
129.974 105.849 129.749 105.849 129.474 105.849 cv
129.197 105.849 128.974 105.849 128.974 105.849 cv
128.974 105.849 129.197 105.849 129.474 105.849 cv
cp
f
129.474 105.849 mo
129.749 105.849 129.974 105.849 129.974 105.849 cv
129.974 105.849 129.749 105.849 129.474 105.849 cv
129.197 105.849 128.974 105.849 128.974 105.849 cv
128.974 105.849 129.197 105.849 129.474 105.849 cv
cp
@
127.022 103.835 mo
127.299 103.835 127.522 103.835 127.522 103.835 cv
127.522 103.835 127.299 103.835 127.022 103.835 cv
126.747 103.835 126.522 103.835 126.522 103.835 cv
126.522 103.835 126.747 103.835 127.022 103.835 cv
cp
f
127.022 103.835 mo
127.299 103.835 127.522 103.835 127.522 103.835 cv
127.522 103.835 127.299 103.835 127.022 103.835 cv
126.747 103.835 126.522 103.835 126.522 103.835 cv
126.522 103.835 126.747 103.835 127.022 103.835 cv
cp
@
124.514 101.817 mo
124.79 101.817 125.014 101.817 125.014 101.817 cv
125.014 101.817 124.79 101.817 124.514 101.817 cv
124.237 101.817 124.014 101.817 124.014 101.817 cv
124.014 101.817 124.237 101.817 124.514 101.817 cv
cp
f
124.514 101.817 mo
124.79 101.817 125.014 101.817 125.014 101.817 cv
125.014 101.817 124.79 101.817 124.514 101.817 cv
124.237 101.817 124.014 101.817 124.014 101.817 cv
124.014 101.817 124.237 101.817 124.514 101.817 cv
cp
@
121.949 99.7979 mo
122.226 99.7979 122.449 99.7979 122.449 99.7979 cv
122.449 99.7979 122.226 99.7979 121.949 99.7979 cv
121.673 99.7979 121.449 99.7979 121.449 99.7979 cv
121.449 99.7979 121.673 99.7979 121.949 99.7979 cv
cp
f
121.949 99.7979 mo
122.226 99.7979 122.449 99.7979 122.449 99.7979 cv
122.449 99.7979 122.226 99.7979 121.949 99.7979 cv
121.673 99.7979 121.449 99.7979 121.449 99.7979 cv
121.449 99.7979 121.673 99.7979 121.949 99.7979 cv
cp
@
119.332 97.7744 mo
119.608 97.7744 119.832 97.7744 119.832 97.7744 cv
119.832 97.7744 119.608 97.7744 119.332 97.7744 cv
119.056 97.7744 118.832 97.7744 118.832 97.7744 cv
118.832 97.7744 119.056 97.7744 119.332 97.7744 cv
cp
f
119.332 97.7744 mo
119.608 97.7744 119.832 97.7744 119.832 97.7744 cv
119.832 97.7744 119.608 97.7744 119.332 97.7744 cv
119.056 97.7744 118.832 97.7744 118.832 97.7744 cv
118.832 97.7744 119.056 97.7744 119.332 97.7744 cv
cp
@
116.665 95.751 mo
116.941 95.751 117.165 95.751 117.165 95.751 cv
117.165 95.751 116.941 95.751 116.665 95.751 cv
116.39 95.751 116.165 95.751 116.165 95.751 cv
116.165 95.751 116.39 95.751 116.665 95.751 cv
cp
f
116.665 95.751 mo
116.941 95.751 117.165 95.751 117.165 95.751 cv
117.165 95.751 116.941 95.751 116.665 95.751 cv
116.39 95.751 116.165 95.751 116.165 95.751 cv
116.165 95.751 116.39 95.751 116.665 95.751 cv
cp
@
113.952 93.7275 mo
114.229 93.7275 114.452 93.7275 114.452 93.7275 cv
114.452 93.7275 114.229 93.7275 113.952 93.7275 cv
113.677 93.7275 113.452 93.7275 113.452 93.7275 cv
113.452 93.7275 113.677 93.7275 113.952 93.7275 cv
cp
f
113.952 93.7275 mo
114.229 93.7275 114.452 93.7275 114.452 93.7275 cv
114.452 93.7275 114.229 93.7275 113.952 93.7275 cv
113.677 93.7275 113.452 93.7275 113.452 93.7275 cv
113.452 93.7275 113.677 93.7275 113.952 93.7275 cv
cp
@
111.196 91.708 mo
111.473 91.708 111.696 91.708 111.696 91.708 cv
111.696 91.708 111.473 91.708 111.196 91.708 cv
110.921 91.708 110.696 91.708 110.696 91.708 cv
110.696 91.708 110.921 91.708 111.196 91.708 cv
cp
f
111.196 91.708 mo
111.473 91.708 111.696 91.708 111.696 91.708 cv
111.696 91.708 111.473 91.708 111.196 91.708 cv
110.921 91.708 110.696 91.708 110.696 91.708 cv
110.696 91.708 110.921 91.708 111.196 91.708 cv
cp
@
108.399 89.6904 mo
108.677 89.6904 108.899 89.6904 108.899 89.6904 cv
108.899 89.6904 108.677 89.6904 108.399 89.6904 cv
108.124 89.6904 107.899 89.6904 107.899 89.6904 cv
107.899 89.6904 108.124 89.6904 108.399 89.6904 cv
cp
f
108.399 89.6904 mo
108.677 89.6904 108.899 89.6904 108.899 89.6904 cv
108.899 89.6904 108.677 89.6904 108.399 89.6904 cv
108.124 89.6904 107.899 89.6904 107.899 89.6904 cv
107.899 89.6904 108.124 89.6904 108.399 89.6904 cv
cp
@
105.566 87.6797 mo
105.843 87.6797 106.066 87.6797 106.066 87.6797 cv
106.066 87.6797 105.843 87.6797 105.566 87.6797 cv
105.29 87.6797 105.066 87.6797 105.066 87.6797 cv
105.066 87.6797 105.29 87.6797 105.566 87.6797 cv
cp
f
105.566 87.6797 mo
105.843 87.6797 106.066 87.6797 106.066 87.6797 cv
106.066 87.6797 105.843 87.6797 105.566 87.6797 cv
105.29 87.6797 105.066 87.6797 105.066 87.6797 cv
105.066 87.6797 105.29 87.6797 105.566 87.6797 cv
cp
@
102.699 85.6758 mo
102.976 85.6758 103.199 85.6758 103.199 85.6758 cv
103.199 85.6758 102.976 85.6758 102.699 85.6758 cv
102.423 85.6758 102.199 85.6758 102.199 85.6758 cv
102.199 85.6758 102.423 85.6758 102.699 85.6758 cv
cp
f
102.699 85.6758 mo
102.976 85.6758 103.199 85.6758 103.199 85.6758 cv
103.199 85.6758 102.976 85.6758 102.699 85.6758 cv
102.423 85.6758 102.199 85.6758 102.199 85.6758 cv
102.199 85.6758 102.423 85.6758 102.699 85.6758 cv
cp
@
99.8008 83.6807 mo
100.077 83.6807 100.301 83.6807 100.301 83.6807 cv
100.301 83.6807 100.077 83.6807 99.8008 83.6807 cv
99.5244 83.6807 99.3008 83.6807 99.3008 83.6807 cv
99.3008 83.6807 99.5244 83.6807 99.8008 83.6807 cv
cp
f
99.8008 83.6807 mo
100.077 83.6807 100.301 83.6807 100.301 83.6807 cv
100.301 83.6807 100.077 83.6807 99.8008 83.6807 cv
99.5244 83.6807 99.3008 83.6807 99.3008 83.6807 cv
99.3008 83.6807 99.5244 83.6807 99.8008 83.6807 cv
cp
@
96.874 81.6963 mo
97.1504 81.6963 97.374 81.6963 97.374 81.6963 cv
97.374 81.6963 97.1504 81.6963 96.874 81.6963 cv
96.5986 81.6963 96.374 81.6963 96.374 81.6963 cv
96.374 81.6963 96.5986 81.6963 96.874 81.6963 cv
cp
f
96.874 81.6963 mo
97.1504 81.6963 97.374 81.6963 97.374 81.6963 cv
97.374 81.6963 97.1504 81.6963 96.874 81.6963 cv
96.5986 81.6963 96.374 81.6963 96.374 81.6963 cv
96.374 81.6963 96.5986 81.6963 96.874 81.6963 cv
cp
@
93.9229 79.7251 mo
94.1992 79.7251 94.4229 79.7251 94.4229 79.7251 cv
94.4229 79.7251 94.1992 79.7251 93.9229 79.7251 cv
93.6465 79.7251 93.4229 79.7251 93.4229 79.7251 cv
93.4229 79.7251 93.6465 79.7251 93.9229 79.7251 cv
cp
f
93.9229 79.7251 mo
94.1992 79.7251 94.4229 79.7251 94.4229 79.7251 cv
94.4229 79.7251 94.1992 79.7251 93.9229 79.7251 cv
93.6465 79.7251 93.4229 79.7251 93.4229 79.7251 cv
93.4229 79.7251 93.6465 79.7251 93.9229 79.7251 cv
cp
@
90.9502 77.7681 mo
91.2256 77.7681 91.4502 77.7681 91.4502 77.7681 cv
91.4502 77.7681 91.2256 77.7681 90.9502 77.7681 cv
90.6738 77.7681 90.4502 77.7681 90.4502 77.7681 cv
90.4502 77.7681 90.6738 77.7681 90.9502 77.7681 cv
cp
f
90.9502 77.7681 mo
91.2256 77.7681 91.4502 77.7681 91.4502 77.7681 cv
91.4502 77.7681 91.2256 77.7681 90.9502 77.7681 cv
90.6738 77.7681 90.4502 77.7681 90.4502 77.7681 cv
90.4502 77.7681 90.6738 77.7681 90.9502 77.7681 cv
cp
@
87.958 75.8267 mo
88.2334 75.8267 88.458 75.8267 88.458 75.8267 cv
88.458 75.8267 88.2334 75.8267 87.958 75.8267 cv
87.6816 75.8267 87.458 75.8267 87.458 75.8267 cv
87.458 75.8267 87.6816 75.8267 87.958 75.8267 cv
cp
f
87.958 75.8267 mo
88.2334 75.8267 88.458 75.8267 88.458 75.8267 cv
88.458 75.8267 88.2334 75.8267 87.958 75.8267 cv
87.6816 75.8267 87.458 75.8267 87.458 75.8267 cv
87.458 75.8267 87.6816 75.8267 87.958 75.8267 cv
cp
@
84.9502 73.9043 mo
85.2256 73.9043 85.4502 73.9043 85.4502 73.9043 cv
85.4502 73.9043 85.2256 73.9043 84.9502 73.9043 cv
84.6738 73.9043 84.4502 73.9043 84.4502 73.9043 cv
84.4502 73.9043 84.6738 73.9043 84.9502 73.9043 cv
cp
f
84.9502 73.9043 mo
85.2256 73.9043 85.4502 73.9043 85.4502 73.9043 cv
85.4502 73.9043 85.2256 73.9043 84.9502 73.9043 cv
84.6738 73.9043 84.4502 73.9043 84.4502 73.9043 cv
84.4502 73.9043 84.6738 73.9043 84.9502 73.9043 cv
cp
@
81.9297 72.0015 mo
82.2061 72.0015 82.4297 72.0015 82.4297 72.0015 cv
82.4297 72.0015 82.2061 72.0015 81.9297 72.0015 cv
81.6533 72.0015 81.4297 72.0015 81.4297 72.0015 cv
81.4297 72.0015 81.6533 72.0015 81.9297 72.0015 cv
cp
f
81.9297 72.0015 mo
82.2061 72.0015 82.4297 72.0015 82.4297 72.0015 cv
82.4297 72.0015 82.2061 72.0015 81.9297 72.0015 cv
81.6533 72.0015 81.4297 72.0015 81.4297 72.0015 cv
81.4297 72.0015 81.6533 72.0015 81.9297 72.0015 cv
cp
@
78.8994 70.1206 mo
79.1758 70.1206 79.3994 70.1206 79.3994 70.1206 cv
79.3994 70.1206 79.1758 70.1206 78.8994 70.1206 cv
78.624 70.1206 78.3994 70.1206 78.3994 70.1206 cv
78.3994 70.1206 78.624 70.1206 78.8994 70.1206 cv
cp
f
78.8994 70.1206 mo
79.1758 70.1206 79.3994 70.1206 79.3994 70.1206 cv
79.3994 70.1206 79.1758 70.1206 78.8994 70.1206 cv
78.624 70.1206 78.3994 70.1206 78.3994 70.1206 cv
78.3994 70.1206 78.624 70.1206 78.8994 70.1206 cv
cp
@
75.8628 68.2637 mo
76.1392 68.2637 76.3628 68.2637 76.3628 68.2637 cv
76.3628 68.2637 76.1392 68.2637 75.8628 68.2637 cv
75.5869 68.2637 75.3628 68.2637 75.3628 68.2637 cv
75.3628 68.2637 75.5869 68.2637 75.8628 68.2637 cv
cp
f
75.8628 68.2637 mo
76.1392 68.2637 76.3628 68.2637 76.3628 68.2637 cv
76.3628 68.2637 76.1392 68.2637 75.8628 68.2637 cv
75.5869 68.2637 75.3628 68.2637 75.3628 68.2637 cv
75.3628 68.2637 75.5869 68.2637 75.8628 68.2637 cv
cp
@
72.8223 66.4331 mo
73.0986 66.4331 73.3223 66.4331 73.3223 66.4331 cv
73.3223 66.4331 73.0986 66.4331 72.8223 66.4331 cv
72.5459 66.4331 72.3223 66.4331 72.3223 66.4331 cv
72.3223 66.4331 72.5459 66.4331 72.8223 66.4331 cv
cp
f
72.8223 66.4331 mo
73.0986 66.4331 73.3223 66.4331 73.3223 66.4331 cv
73.3223 66.4331 73.0986 66.4331 72.8223 66.4331 cv
72.5459 66.4331 72.3223 66.4331 72.3223 66.4331 cv
72.3223 66.4331 72.5459 66.4331 72.8223 66.4331 cv
cp
@
69.7808 64.6299 mo
70.0571 64.6299 70.2808 64.6299 70.2808 64.6299 cv
70.2808 64.6299 70.0571 64.6299 69.7808 64.6299 cv
69.5049 64.6299 69.2808 64.6299 69.2808 64.6299 cv
69.2808 64.6299 69.5049 64.6299 69.7808 64.6299 cv
cp
f
69.7808 64.6299 mo
70.0571 64.6299 70.2808 64.6299 70.2808 64.6299 cv
70.2808 64.6299 70.0571 64.6299 69.7808 64.6299 cv
69.5049 64.6299 69.2808 64.6299 69.2808 64.6299 cv
69.2808 64.6299 69.5049 64.6299 69.7808 64.6299 cv
cp
@
66.7417 62.8564 mo
67.0181 62.8564 67.2417 62.8564 67.2417 62.8564 cv
67.2417 62.8564 67.0181 62.8564 66.7417 62.8564 cv
66.4658 62.8564 66.2417 62.8564 66.2417 62.8564 cv
66.2417 62.8564 66.4658 62.8564 66.7417 62.8564 cv
cp
f
66.7417 62.8564 mo
67.0181 62.8564 67.2417 62.8564 67.2417 62.8564 cv
67.2417 62.8564 67.0181 62.8564 66.7417 62.8564 cv
66.4658 62.8564 66.2417 62.8564 66.2417 62.8564 cv
66.2417 62.8564 66.4658 62.8564 66.7417 62.8564 cv
cp
@
63.7075 61.1152 mo
63.9839 61.1152 64.2075 61.1152 64.2075 61.1152 cv
64.2075 61.1152 63.9839 61.1152 63.7075 61.1152 cv
63.4316 61.1152 63.2075 61.1152 63.2075 61.1152 cv
63.2075 61.1152 63.4316 61.1152 63.7075 61.1152 cv
cp
f
63.7075 61.1152 mo
63.9839 61.1152 64.2075 61.1152 64.2075 61.1152 cv
64.2075 61.1152 63.9839 61.1152 63.7075 61.1152 cv
63.4316 61.1152 63.2075 61.1152 63.2075 61.1152 cv
63.2075 61.1152 63.4316 61.1152 63.7075 61.1152 cv
cp
@
60.6816 59.4077 mo
60.9575 59.4077 61.1816 59.4077 61.1816 59.4077 cv
61.1816 59.4077 60.9575 59.4077 60.6816 59.4077 cv
60.4053 59.4077 60.1816 59.4077 60.1816 59.4077 cv
60.1816 59.4077 60.4053 59.4077 60.6816 59.4077 cv
cp
f
60.6816 59.4077 mo
60.9575 59.4077 61.1816 59.4077 61.1816 59.4077 cv
61.1816 59.4077 60.9575 59.4077 60.6816 59.4077 cv
60.4053 59.4077 60.1816 59.4077 60.1816 59.4077 cv
60.1816 59.4077 60.4053 59.4077 60.6816 59.4077 cv
cp
@
57.666 57.7363 mo
57.9424 57.7363 58.166 57.7363 58.166 57.7363 cv
58.166 57.7363 57.9424 57.7363 57.666 57.7363 cv
57.3901 57.7363 57.166 57.7363 57.166 57.7363 cv
57.166 57.7363 57.3901 57.7363 57.666 57.7363 cv
cp
f
57.666 57.7363 mo
57.9424 57.7363 58.166 57.7363 58.166 57.7363 cv
58.166 57.7363 57.9424 57.7363 57.666 57.7363 cv
57.3901 57.7363 57.166 57.7363 57.166 57.7363 cv
57.166 57.7363 57.3901 57.7363 57.666 57.7363 cv
cp
@
54.6646 56.1025 mo
54.9404 56.1025 55.1646 56.1025 55.1646 56.1025 cv
55.1646 56.1025 54.9404 56.1025 54.6646 56.1025 cv
54.3882 56.1025 54.1646 56.1025 54.1646 56.1025 cv
54.1646 56.1025 54.3882 56.1025 54.6646 56.1025 cv
cp
f
54.6646 56.1025 mo
54.9404 56.1025 55.1646 56.1025 55.1646 56.1025 cv
55.1646 56.1025 54.9404 56.1025 54.6646 56.1025 cv
54.3882 56.1025 54.1646 56.1025 54.1646 56.1025 cv
54.1646 56.1025 54.3882 56.1025 54.6646 56.1025 cv
cp
@
51.6792 54.5093 mo
51.9551 54.5093 52.1792 54.5093 52.1792 54.5093 cv
52.1792 54.5093 51.9551 54.5093 51.6792 54.5093 cv
51.4028 54.5093 51.1792 54.5093 51.1792 54.5093 cv
51.1792 54.5093 51.4028 54.5093 51.6792 54.5093 cv
cp
f
51.6792 54.5093 mo
51.9551 54.5093 52.1792 54.5093 52.1792 54.5093 cv
52.1792 54.5093 51.9551 54.5093 51.6792 54.5093 cv
51.4028 54.5093 51.1792 54.5093 51.1792 54.5093 cv
51.1792 54.5093 51.4028 54.5093 51.6792 54.5093 cv
cp
@
48.7124 52.958 mo
48.9888 52.958 49.2124 52.958 49.2124 52.958 cv
49.2124 52.958 48.9888 52.958 48.7124 52.958 cv
48.4365 52.958 48.2124 52.958 48.2124 52.958 cv
48.2124 52.958 48.4365 52.958 48.7124 52.958 cv
cp
f
48.7124 52.958 mo
48.9888 52.958 49.2124 52.958 49.2124 52.958 cv
49.2124 52.958 48.9888 52.958 48.7124 52.958 cv
48.4365 52.958 48.2124 52.958 48.2124 52.958 cv
48.2124 52.958 48.4365 52.958 48.7124 52.958 cv
cp
@
45.7681 51.4512 mo
46.0439 51.4512 46.2681 51.4512 46.2681 51.4512 cv
46.2681 51.4512 46.0439 51.4512 45.7681 51.4512 cv
45.4917 51.4512 45.2681 51.4512 45.2681 51.4512 cv
45.2681 51.4512 45.4917 51.4512 45.7681 51.4512 cv
cp
f
45.7681 51.4512 mo
46.0439 51.4512 46.2681 51.4512 46.2681 51.4512 cv
46.2681 51.4512 46.0439 51.4512 45.7681 51.4512 cv
45.4917 51.4512 45.2681 51.4512 45.2681 51.4512 cv
45.2681 51.4512 45.4917 51.4512 45.7681 51.4512 cv
cp
@
42.8477 49.9912 mo
43.1235 49.9912 43.3477 49.9912 43.3477 49.9912 cv
43.3477 49.9912 43.1235 49.9912 42.8477 49.9912 cv
42.5713 49.9912 42.3477 49.9912 42.3477 49.9912 cv
42.3477 49.9912 42.5713 49.9912 42.8477 49.9912 cv
cp
f
42.8477 49.9912 mo
43.1235 49.9912 43.3477 49.9912 43.3477 49.9912 cv
43.3477 49.9912 43.1235 49.9912 42.8477 49.9912 cv
42.5713 49.9912 42.3477 49.9912 42.3477 49.9912 cv
42.3477 49.9912 42.5713 49.9912 42.8477 49.9912 cv
cp
@
39.9536 48.5796 mo
40.23 48.5796 40.4536 48.5796 40.4536 48.5796 cv
40.4536 48.5796 40.23 48.5796 39.9536 48.5796 cv
39.6777 48.5796 39.4536 48.5796 39.4536 48.5796 cv
39.4536 48.5796 39.6777 48.5796 39.9536 48.5796 cv
cp
f
39.9536 48.5796 mo
40.23 48.5796 40.4536 48.5796 40.4536 48.5796 cv
40.4536 48.5796 40.23 48.5796 39.9536 48.5796 cv
39.6777 48.5796 39.4536 48.5796 39.4536 48.5796 cv
39.4536 48.5796 39.6777 48.5796 39.9536 48.5796 cv
cp
@
37.0894 47.2197 mo
37.3657 47.2197 37.5894 47.2197 37.5894 47.2197 cv
37.5894 47.2197 37.3657 47.2197 37.0894 47.2197 cv
36.8135 47.2197 36.5894 47.2197 36.5894 47.2197 cv
36.5894 47.2197 36.8135 47.2197 37.0894 47.2197 cv
cp
f
37.0894 47.2197 mo
37.3657 47.2197 37.5894 47.2197 37.5894 47.2197 cv
37.5894 47.2197 37.3657 47.2197 37.0894 47.2197 cv
36.8135 47.2197 36.5894 47.2197 36.5894 47.2197 cv
36.5894 47.2197 36.8135 47.2197 37.0894 47.2197 cv
cp
@
34.2563 45.9131 mo
34.5327 45.9131 34.7563 45.9131 34.7563 45.9131 cv
34.7563 45.9131 34.5327 45.9131 34.2563 45.9131 cv
33.9805 45.9131 33.7563 45.9131 33.7563 45.9131 cv
33.7563 45.9131 33.9805 45.9131 34.2563 45.9131 cv
cp
f
34.2563 45.9131 mo
34.5327 45.9131 34.7563 45.9131 34.7563 45.9131 cv
34.7563 45.9131 34.5327 45.9131 34.2563 45.9131 cv
33.9805 45.9131 33.7563 45.9131 33.7563 45.9131 cv
33.7563 45.9131 33.9805 45.9131 34.2563 45.9131 cv
cp
@
31.4575 44.6621 mo
31.7339 44.6621 31.9575 44.6621 31.9575 44.6621 cv
31.9575 44.6621 31.7339 44.6621 31.4575 44.6621 cv
31.1816 44.6621 30.9575 44.6621 30.9575 44.6621 cv
30.9575 44.6621 31.1816 44.6621 31.4575 44.6621 cv
cp
f
31.4575 44.6621 mo
31.7339 44.6621 31.9575 44.6621 31.9575 44.6621 cv
31.9575 44.6621 31.7339 44.6621 31.4575 44.6621 cv
31.1816 44.6621 30.9575 44.6621 30.9575 44.6621 cv
30.9575 44.6621 31.1816 44.6621 31.4575 44.6621 cv
cp
@
28.6948 43.4702 mo
28.9707 43.4702 29.1948 43.4702 29.1948 43.4702 cv
29.1948 43.4702 28.9707 43.4702 28.6948 43.4702 cv
28.4185 43.4702 28.1948 43.4702 28.1948 43.4702 cv
28.1948 43.4702 28.4185 43.4702 28.6948 43.4702 cv
cp
f
28.6948 43.4702 mo
28.9707 43.4702 29.1948 43.4702 29.1948 43.4702 cv
29.1948 43.4702 28.9707 43.4702 28.6948 43.4702 cv
28.4185 43.4702 28.1948 43.4702 28.1948 43.4702 cv
28.1948 43.4702 28.4185 43.4702 28.6948 43.4702 cv
cp
@
25.9697 42.3394 mo
26.2461 42.3394 26.4697 42.3394 26.4697 42.3394 cv
26.4697 42.3394 26.2461 42.3394 25.9697 42.3394 cv
25.6938 42.3394 25.4697 42.3394 25.4697 42.3394 cv
25.4697 42.3394 25.6938 42.3394 25.9697 42.3394 cv
cp
f
25.9697 42.3394 mo
26.2461 42.3394 26.4697 42.3394 26.4697 42.3394 cv
26.4697 42.3394 26.2461 42.3394 25.9697 42.3394 cv
25.6938 42.3394 25.4697 42.3394 25.4697 42.3394 cv
25.4697 42.3394 25.6938 42.3394 25.9697 42.3394 cv
cp
@
23.2852 41.2729 mo
23.561 41.2729 23.7852 41.2729 23.7852 41.2729 cv
23.7852 41.2729 23.561 41.2729 23.2852 41.2729 cv
23.0088 41.2729 22.7852 41.2729 22.7852 41.2729 cv
22.7852 41.2729 23.0088 41.2729 23.2852 41.2729 cv
cp
f
23.2852 41.2729 mo
23.561 41.2729 23.7852 41.2729 23.7852 41.2729 cv
23.7852 41.2729 23.561 41.2729 23.2852 41.2729 cv
23.0088 41.2729 22.7852 41.2729 22.7852 41.2729 cv
22.7852 41.2729 23.0088 41.2729 23.2852 41.2729 cv
cp
@
20.6421 40.2734 mo
20.918 40.2734 21.1421 40.2734 21.1421 40.2734 cv
21.1421 40.2734 20.918 40.2734 20.6421 40.2734 cv
20.3657 40.2734 20.1421 40.2734 20.1421 40.2734 cv
20.1421 40.2734 20.3657 40.2734 20.6421 40.2734 cv
cp
f
20.6421 40.2734 mo
20.918 40.2734 21.1421 40.2734 21.1421 40.2734 cv
21.1421 40.2734 20.918 40.2734 20.6421 40.2734 cv
20.3657 40.2734 20.1421 40.2734 20.1421 40.2734 cv
20.1421 40.2734 20.3657 40.2734 20.6421 40.2734 cv
cp
@
18.042 39.3442 mo
18.3184 39.3442 18.542 39.3442 18.542 39.3442 cv
18.542 39.3442 18.3184 39.3442 18.042 39.3442 cv
17.7661 39.3442 17.542 39.3442 17.542 39.3442 cv
17.542 39.3442 17.7661 39.3442 18.042 39.3442 cv
cp
f
18.042 39.3442 mo
18.3184 39.3442 18.542 39.3442 18.542 39.3442 cv
18.542 39.3442 18.3184 39.3442 18.042 39.3442 cv
17.7661 39.3442 17.542 39.3442 17.542 39.3442 cv
17.542 39.3442 17.7661 39.3442 18.042 39.3442 cv
cp
@
15.4873 38.4893 mo
15.7637 38.4893 15.9873 38.4893 15.9873 38.4893 cv
15.9873 38.4893 15.7637 38.4893 15.4873 38.4893 cv
15.2114 38.4893 14.9873 38.4893 14.9873 38.4893 cv
14.9873 38.4893 15.2114 38.4893 15.4873 38.4893 cv
cp
f
15.4873 38.4893 mo
15.7637 38.4893 15.9873 38.4893 15.9873 38.4893 cv
15.9873 38.4893 15.7637 38.4893 15.4873 38.4893 cv
15.2114 38.4893 14.9873 38.4893 14.9873 38.4893 cv
14.9873 38.4893 15.2114 38.4893 15.4873 38.4893 cv
cp
@
12.9785 37.7124 mo
13.2549 37.7124 13.4785 37.7124 13.4785 37.7124 cv
13.4785 37.7124 13.2549 37.7124 12.9785 37.7124 cv
12.7026 37.7124 12.4785 37.7124 12.4785 37.7124 cv
12.4785 37.7124 12.7026 37.7124 12.9785 37.7124 cv
cp
f
12.9785 37.7124 mo
13.2549 37.7124 13.4785 37.7124 13.4785 37.7124 cv
13.4785 37.7124 13.2549 37.7124 12.9785 37.7124 cv
12.7026 37.7124 12.4785 37.7124 12.4785 37.7124 cv
12.4785 37.7124 12.7026 37.7124 12.9785 37.7124 cv
cp
@
14.75 39.6514 mo
15.0264 39.6514 15.25 39.6514 15.25 39.6514 cv
15.25 39.6514 15.0264 39.6514 14.75 39.6514 cv
14.4736 39.6514 14.25 39.6514 14.25 39.6514 cv
14.25 39.6514 14.4736 39.6514 14.75 39.6514 cv
cp
0.713725 0 0.305882 0 cmyk
f
14.75 39.6514 mo
15.0264 39.6514 15.25 39.6514 15.25 39.6514 cv
15.25 39.6514 15.0264 39.6514 14.75 39.6514 cv
14.4736 39.6514 14.25 39.6514 14.25 39.6514 cv
14.25 39.6514 14.4736 39.6514 14.75 39.6514 cv
cp
@
16.6113 41.5991 mo
16.8877 41.5991 17.1113 41.5991 17.1113 41.5991 cv
17.1113 41.5991 16.8877 41.5991 16.6113 41.5991 cv
16.3354 41.5991 16.1113 41.5991 16.1113 41.5991 cv
16.1113 41.5991 16.3354 41.5991 16.6113 41.5991 cv
cp
f
16.6113 41.5991 mo
16.8877 41.5991 17.1113 41.5991 17.1113 41.5991 cv
17.1113 41.5991 16.8877 41.5991 16.6113 41.5991 cv
16.3354 41.5991 16.1113 41.5991 16.1113 41.5991 cv
16.1113 41.5991 16.3354 41.5991 16.6113 41.5991 cv
cp
@
18.5586 43.5557 mo
18.835 43.5557 19.0586 43.5557 19.0586 43.5557 cv
19.0586 43.5557 18.835 43.5557 18.5586 43.5557 cv
18.2827 43.5557 18.0586 43.5557 18.0586 43.5557 cv
18.0586 43.5557 18.2827 43.5557 18.5586 43.5557 cv
cp
f
18.5586 43.5557 mo
18.835 43.5557 19.0586 43.5557 19.0586 43.5557 cv
19.0586 43.5557 18.835 43.5557 18.5586 43.5557 cv
18.2827 43.5557 18.0586 43.5557 18.0586 43.5557 cv
18.0586 43.5557 18.2827 43.5557 18.5586 43.5557 cv
cp
@
20.5884 45.522 mo
20.8647 45.522 21.0884 45.522 21.0884 45.522 cv
21.0884 45.522 20.8647 45.522 20.5884 45.522 cv
20.3125 45.522 20.0884 45.522 20.0884 45.522 cv
20.0884 45.522 20.3125 45.522 20.5884 45.522 cv
cp
f
20.5884 45.522 mo
20.8647 45.522 21.0884 45.522 21.0884 45.522 cv
21.0884 45.522 20.8647 45.522 20.5884 45.522 cv
20.3125 45.522 20.0884 45.522 20.0884 45.522 cv
20.0884 45.522 20.3125 45.522 20.5884 45.522 cv
cp
@
22.6968 47.4971 mo
22.9731 47.4971 23.1968 47.4971 23.1968 47.4971 cv
23.1968 47.4971 22.9731 47.4971 22.6968 47.4971 cv
22.4209 47.4971 22.1968 47.4971 22.1968 47.4971 cv
22.1968 47.4971 22.4209 47.4971 22.6968 47.4971 cv
cp
f
22.6968 47.4971 mo
22.9731 47.4971 23.1968 47.4971 23.1968 47.4971 cv
23.1968 47.4971 22.9731 47.4971 22.6968 47.4971 cv
22.4209 47.4971 22.1968 47.4971 22.1968 47.4971 cv
22.1968 47.4971 22.4209 47.4971 22.6968 47.4971 cv
cp
@
24.8799 49.481 mo
25.1563 49.481 25.3799 49.481 25.3799 49.481 cv
25.3799 49.481 25.1563 49.481 24.8799 49.481 cv
24.604 49.481 24.3799 49.481 24.3799 49.481 cv
24.3799 49.481 24.604 49.481 24.8799 49.481 cv
cp
f
24.8799 49.481 mo
25.1563 49.481 25.3799 49.481 25.3799 49.481 cv
25.3799 49.481 25.1563 49.481 24.8799 49.481 cv
24.604 49.481 24.3799 49.481 24.3799 49.481 cv
24.3799 49.481 24.604 49.481 24.8799 49.481 cv
cp
@
27.1353 51.4736 mo
27.4111 51.4736 27.6353 51.4736 27.6353 51.4736 cv
27.6353 51.4736 27.4111 51.4736 27.1353 51.4736 cv
26.8589 51.4736 26.6353 51.4736 26.6353 51.4736 cv
26.6353 51.4736 26.8589 51.4736 27.1353 51.4736 cv
cp
f
27.1353 51.4736 mo
27.4111 51.4736 27.6353 51.4736 27.6353 51.4736 cv
27.6353 51.4736 27.4111 51.4736 27.1353 51.4736 cv
26.8589 51.4736 26.6353 51.4736 26.6353 51.4736 cv
26.6353 51.4736 26.8589 51.4736 27.1353 51.4736 cv
cp
@
29.4585 53.4736 mo
29.7344 53.4736 29.9585 53.4736 29.9585 53.4736 cv
29.9585 53.4736 29.7344 53.4736 29.4585 53.4736 cv
29.1821 53.4736 28.9585 53.4736 28.9585 53.4736 cv
28.9585 53.4736 29.1821 53.4736 29.4585 53.4736 cv
cp
f
29.4585 53.4736 mo
29.7344 53.4736 29.9585 53.4736 29.9585 53.4736 cv
29.9585 53.4736 29.7344 53.4736 29.4585 53.4736 cv
29.1821 53.4736 28.9585 53.4736 28.9585 53.4736 cv
28.9585 53.4736 29.1821 53.4736 29.4585 53.4736 cv
cp
@
31.8467 55.4805 mo
32.123 55.4805 32.3467 55.4805 32.3467 55.4805 cv
32.3467 55.4805 32.123 55.4805 31.8467 55.4805 cv
31.5708 55.4805 31.3467 55.4805 31.3467 55.4805 cv
31.3467 55.4805 31.5708 55.4805 31.8467 55.4805 cv
cp
f
31.8467 55.4805 mo
32.123 55.4805 32.3467 55.4805 32.3467 55.4805 cv
32.3467 55.4805 32.123 55.4805 31.8467 55.4805 cv
31.5708 55.4805 31.3467 55.4805 31.3467 55.4805 cv
31.3467 55.4805 31.5708 55.4805 31.8467 55.4805 cv
cp
@
34.2974 57.4932 mo
34.5732 57.4932 34.7974 57.4932 34.7974 57.4932 cv
34.7974 57.4932 34.5732 57.4932 34.2974 57.4932 cv
34.021 57.4932 33.7974 57.4932 33.7974 57.4932 cv
33.7974 57.4932 34.021 57.4932 34.2974 57.4932 cv
cp
f
34.2974 57.4932 mo
34.5732 57.4932 34.7974 57.4932 34.7974 57.4932 cv
34.7974 57.4932 34.5732 57.4932 34.2974 57.4932 cv
34.021 57.4932 33.7974 57.4932 33.7974 57.4932 cv
33.7974 57.4932 34.021 57.4932 34.2974 57.4932 cv
cp
@
36.8062 59.5103 mo
37.0825 59.5103 37.3062 59.5103 37.3062 59.5103 cv
37.3062 59.5103 37.0825 59.5103 36.8062 59.5103 cv
36.5303 59.5103 36.3062 59.5103 36.3062 59.5103 cv
36.3062 59.5103 36.5303 59.5103 36.8062 59.5103 cv
cp
f
36.8062 59.5103 mo
37.0825 59.5103 37.3062 59.5103 37.3062 59.5103 cv
37.3062 59.5103 37.0825 59.5103 36.8062 59.5103 cv
36.5303 59.5103 36.3062 59.5103 36.3062 59.5103 cv
36.3062 59.5103 36.5303 59.5103 36.8062 59.5103 cv
cp
@
39.3711 61.5313 mo
39.647 61.5313 39.8711 61.5313 39.8711 61.5313 cv
39.8711 61.5313 39.647 61.5313 39.3711 61.5313 cv
39.0947 61.5313 38.8711 61.5313 38.8711 61.5313 cv
38.8711 61.5313 39.0947 61.5313 39.3711 61.5313 cv
cp
f
39.3711 61.5313 mo
39.647 61.5313 39.8711 61.5313 39.8711 61.5313 cv
39.8711 61.5313 39.647 61.5313 39.3711 61.5313 cv
39.0947 61.5313 38.8711 61.5313 38.8711 61.5313 cv
38.8711 61.5313 39.0947 61.5313 39.3711 61.5313 cv
cp
@
41.9883 63.5542 mo
42.2642 63.5542 42.4883 63.5542 42.4883 63.5542 cv
42.4883 63.5542 42.2642 63.5542 41.9883 63.5542 cv
41.7119 63.5542 41.4883 63.5542 41.4883 63.5542 cv
41.4883 63.5542 41.7119 63.5542 41.9883 63.5542 cv
cp
f
41.9883 63.5542 mo
42.2642 63.5542 42.4883 63.5542 42.4883 63.5542 cv
42.4883 63.5542 42.2642 63.5542 41.9883 63.5542 cv
41.7119 63.5542 41.4883 63.5542 41.4883 63.5542 cv
41.4883 63.5542 41.7119 63.5542 41.9883 63.5542 cv
cp
@
44.6548 65.5776 mo
44.9307 65.5776 45.1548 65.5776 45.1548 65.5776 cv
45.1548 65.5776 44.9307 65.5776 44.6548 65.5776 cv
44.3784 65.5776 44.1548 65.5776 44.1548 65.5776 cv
44.1548 65.5776 44.3784 65.5776 44.6548 65.5776 cv
cp
f
44.6548 65.5776 mo
44.9307 65.5776 45.1548 65.5776 45.1548 65.5776 cv
45.1548 65.5776 44.9307 65.5776 44.6548 65.5776 cv
44.3784 65.5776 44.1548 65.5776 44.1548 65.5776 cv
44.1548 65.5776 44.3784 65.5776 44.6548 65.5776 cv
cp
@
47.3677 67.6006 mo
47.6436 67.6006 47.8677 67.6006 47.8677 67.6006 cv
47.8677 67.6006 47.6436 67.6006 47.3677 67.6006 cv
47.0913 67.6006 46.8677 67.6006 46.8677 67.6006 cv
46.8677 67.6006 47.0913 67.6006 47.3677 67.6006 cv
cp
f
47.3677 67.6006 mo
47.6436 67.6006 47.8677 67.6006 47.8677 67.6006 cv
47.8677 67.6006 47.6436 67.6006 47.3677 67.6006 cv
47.0913 67.6006 46.8677 67.6006 46.8677 67.6006 cv
46.8677 67.6006 47.0913 67.6006 47.3677 67.6006 cv
cp
@
50.1235 69.6211 mo
50.3999 69.6211 50.6235 69.6211 50.6235 69.6211 cv
50.6235 69.6211 50.3999 69.6211 50.1235 69.6211 cv
49.8477 69.6211 49.6235 69.6211 49.6235 69.6211 cv
49.6235 69.6211 49.8477 69.6211 50.1235 69.6211 cv
cp
f
50.1235 69.6211 mo
50.3999 69.6211 50.6235 69.6211 50.6235 69.6211 cv
50.6235 69.6211 50.3999 69.6211 50.1235 69.6211 cv
49.8477 69.6211 49.6235 69.6211 49.6235 69.6211 cv
49.6235 69.6211 49.8477 69.6211 50.1235 69.6211 cv
cp
@
52.9199 71.6377 mo
53.1963 71.6377 53.4199 71.6377 53.4199 71.6377 cv
53.4199 71.6377 53.1963 71.6377 52.9199 71.6377 cv
52.644 71.6377 52.4199 71.6377 52.4199 71.6377 cv
52.4199 71.6377 52.644 71.6377 52.9199 71.6377 cv
cp
f
52.9199 71.6377 mo
53.1963 71.6377 53.4199 71.6377 53.4199 71.6377 cv
53.4199 71.6377 53.1963 71.6377 52.9199 71.6377 cv
52.644 71.6377 52.4199 71.6377 52.4199 71.6377 cv
52.4199 71.6377 52.644 71.6377 52.9199 71.6377 cv
cp
@
55.7534 73.6489 mo
56.0298 73.6489 56.2534 73.6489 56.2534 73.6489 cv
56.2534 73.6489 56.0298 73.6489 55.7534 73.6489 cv
55.4775 73.6489 55.2534 73.6489 55.2534 73.6489 cv
55.2534 73.6489 55.4775 73.6489 55.7534 73.6489 cv
cp
f
55.7534 73.6489 mo
56.0298 73.6489 56.2534 73.6489 56.2534 73.6489 cv
56.2534 73.6489 56.0298 73.6489 55.7534 73.6489 cv
55.4775 73.6489 55.2534 73.6489 55.2534 73.6489 cv
55.2534 73.6489 55.4775 73.6489 55.7534 73.6489 cv
cp
@
58.6211 75.6528 mo
58.897 75.6528 59.1211 75.6528 59.1211 75.6528 cv
59.1211 75.6528 58.897 75.6528 58.6211 75.6528 cv
58.3447 75.6528 58.1211 75.6528 58.1211 75.6528 cv
58.1211 75.6528 58.3447 75.6528 58.6211 75.6528 cv
cp
f
58.6211 75.6528 mo
58.897 75.6528 59.1211 75.6528 59.1211 75.6528 cv
59.1211 75.6528 58.897 75.6528 58.6211 75.6528 cv
58.3447 75.6528 58.1211 75.6528 58.1211 75.6528 cv
58.1211 75.6528 58.3447 75.6528 58.6211 75.6528 cv
cp
@
61.5195 77.6479 mo
61.7959 77.6479 62.0195 77.6479 62.0195 77.6479 cv
62.0195 77.6479 61.7959 77.6479 61.5195 77.6479 cv
61.2432 77.6479 61.0195 77.6479 61.0195 77.6479 cv
61.0195 77.6479 61.2432 77.6479 61.5195 77.6479 cv
cp
f
61.5195 77.6479 mo
61.7959 77.6479 62.0195 77.6479 62.0195 77.6479 cv
62.0195 77.6479 61.7959 77.6479 61.5195 77.6479 cv
61.2432 77.6479 61.0195 77.6479 61.0195 77.6479 cv
61.0195 77.6479 61.2432 77.6479 61.5195 77.6479 cv
cp
@
64.4458 79.6318 mo
64.7222 79.6318 64.9458 79.6318 64.9458 79.6318 cv
64.9458 79.6318 64.7222 79.6318 64.4458 79.6318 cv
64.1699 79.6318 63.9458 79.6318 63.9458 79.6318 cv
63.9458 79.6318 64.1699 79.6318 64.4458 79.6318 cv
cp
f
64.4458 79.6318 mo
64.7222 79.6318 64.9458 79.6318 64.9458 79.6318 cv
64.9458 79.6318 64.7222 79.6318 64.4458 79.6318 cv
64.1699 79.6318 63.9458 79.6318 63.9458 79.6318 cv
63.9458 79.6318 64.1699 79.6318 64.4458 79.6318 cv
cp
@
67.3975 81.6035 mo
67.6733 81.6035 67.8975 81.6035 67.8975 81.6035 cv
67.8975 81.6035 67.6733 81.6035 67.3975 81.6035 cv
67.1211 81.6035 66.8975 81.6035 66.8975 81.6035 cv
66.8975 81.6035 67.1211 81.6035 67.3975 81.6035 cv
cp
f
67.3975 81.6035 mo
67.6733 81.6035 67.8975 81.6035 67.8975 81.6035 cv
67.8975 81.6035 67.6733 81.6035 67.3975 81.6035 cv
67.1211 81.6035 66.8975 81.6035 66.8975 81.6035 cv
66.8975 81.6035 67.1211 81.6035 67.3975 81.6035 cv
cp
@
70.3701 83.5605 mo
70.6465 83.5605 70.8701 83.5605 70.8701 83.5605 cv
70.8701 83.5605 70.6465 83.5605 70.3701 83.5605 cv
70.0942 83.5605 69.8701 83.5605 69.8701 83.5605 cv
69.8701 83.5605 70.0942 83.5605 70.3701 83.5605 cv
cp
f
70.3701 83.5605 mo
70.6465 83.5605 70.8701 83.5605 70.8701 83.5605 cv
70.8701 83.5605 70.6465 83.5605 70.3701 83.5605 cv
70.0942 83.5605 69.8701 83.5605 69.8701 83.5605 cv
69.8701 83.5605 70.0942 83.5605 70.3701 83.5605 cv
cp
@
73.3623 85.501 mo
73.6387 85.501 73.8623 85.501 73.8623 85.501 cv
73.8623 85.501 73.6387 85.501 73.3623 85.501 cv
73.0859 85.501 72.8623 85.501 72.8623 85.501 cv
72.8623 85.501 73.0859 85.501 73.3623 85.501 cv
cp
f
73.3623 85.501 mo
73.6387 85.501 73.8623 85.501 73.8623 85.501 cv
73.8623 85.501 73.6387 85.501 73.3623 85.501 cv
73.0859 85.501 72.8623 85.501 72.8623 85.501 cv
72.8623 85.501 73.0859 85.501 73.3623 85.501 cv
cp
@
76.3701 87.4248 mo
76.646 87.4248 76.8701 87.4248 76.8701 87.4248 cv
76.8701 87.4248 76.646 87.4248 76.3701 87.4248 cv
76.0938 87.4248 75.8701 87.4248 75.8701 87.4248 cv
75.8701 87.4248 76.0938 87.4248 76.3701 87.4248 cv
cp
f
76.3701 87.4248 mo
76.646 87.4248 76.8701 87.4248 76.8701 87.4248 cv
76.8701 87.4248 76.646 87.4248 76.3701 87.4248 cv
76.0938 87.4248 75.8701 87.4248 75.8701 87.4248 cv
75.8701 87.4248 76.0938 87.4248 76.3701 87.4248 cv
cp
@
79.3896 89.3271 mo
79.667 89.3271 79.8896 89.3271 79.8896 89.3271 cv
79.8896 89.3271 79.667 89.3271 79.3896 89.3271 cv
79.1143 89.3271 78.8896 89.3271 78.8896 89.3271 cv
78.8896 89.3271 79.1143 89.3271 79.3896 89.3271 cv
cp
f
79.3896 89.3271 mo
79.667 89.3271 79.8896 89.3271 79.8896 89.3271 cv
79.8896 89.3271 79.667 89.3271 79.3896 89.3271 cv
79.1143 89.3271 78.8896 89.3271 78.8896 89.3271 cv
78.8896 89.3271 79.1143 89.3271 79.3896 89.3271 cv
cp
@
82.4209 91.208 mo
82.6963 91.208 82.9209 91.208 82.9209 91.208 cv
82.9209 91.208 82.6963 91.208 82.4209 91.208 cv
82.1445 91.208 81.9209 91.208 81.9209 91.208 cv
81.9209 91.208 82.1445 91.208 82.4209 91.208 cv
cp
f
82.4209 91.208 mo
82.6963 91.208 82.9209 91.208 82.9209 91.208 cv
82.9209 91.208 82.6963 91.208 82.4209 91.208 cv
82.1445 91.208 81.9209 91.208 81.9209 91.208 cv
81.9209 91.208 82.1445 91.208 82.4209 91.208 cv
cp
@
85.457 93.0654 mo
85.7334 93.0654 85.957 93.0654 85.957 93.0654 cv
85.957 93.0654 85.7334 93.0654 85.457 93.0654 cv
85.1807 93.0654 84.957 93.0654 84.957 93.0654 cv
84.957 93.0654 85.1807 93.0654 85.457 93.0654 cv
cp
f
85.457 93.0654 mo
85.7334 93.0654 85.957 93.0654 85.957 93.0654 cv
85.957 93.0654 85.7334 93.0654 85.457 93.0654 cv
85.1807 93.0654 84.957 93.0654 84.957 93.0654 cv
84.957 93.0654 85.1807 93.0654 85.457 93.0654 cv
cp
@
88.498 94.8955 mo
88.7744 94.8955 88.998 94.8955 88.998 94.8955 cv
88.998 94.8955 88.7744 94.8955 88.498 94.8955 cv
88.2217 94.8955 87.998 94.8955 87.998 94.8955 cv
87.998 94.8955 88.2217 94.8955 88.498 94.8955 cv
cp
f
88.498 94.8955 mo
88.7744 94.8955 88.998 94.8955 88.998 94.8955 cv
88.998 94.8955 88.7744 94.8955 88.498 94.8955 cv
88.2217 94.8955 87.998 94.8955 87.998 94.8955 cv
87.998 94.8955 88.2217 94.8955 88.498 94.8955 cv
cp
@
91.5391 96.6982 mo
91.8154 96.6982 92.0391 96.6982 92.0391 96.6982 cv
92.0391 96.6982 91.8154 96.6982 91.5391 96.6982 cv
91.2627 96.6982 91.0391 96.6982 91.0391 96.6982 cv
91.0391 96.6982 91.2627 96.6982 91.5391 96.6982 cv
cp
f
91.5391 96.6982 mo
91.8154 96.6982 92.0391 96.6982 92.0391 96.6982 cv
92.0391 96.6982 91.8154 96.6982 91.5391 96.6982 cv
91.2627 96.6982 91.0391 96.6982 91.0391 96.6982 cv
91.0391 96.6982 91.2627 96.6982 91.5391 96.6982 cv
cp
@
94.5781 98.4717 mo
94.8545 98.4717 95.0781 98.4717 95.0781 98.4717 cv
95.0781 98.4717 94.8545 98.4717 94.5781 98.4717 cv
94.3018 98.4717 94.0781 98.4717 94.0781 98.4717 cv
94.0781 98.4717 94.3018 98.4717 94.5781 98.4717 cv
cp
f
94.5781 98.4717 mo
94.8545 98.4717 95.0781 98.4717 95.0781 98.4717 cv
95.0781 98.4717 94.8545 98.4717 94.5781 98.4717 cv
94.3018 98.4717 94.0781 98.4717 94.0781 98.4717 cv
94.0781 98.4717 94.3018 98.4717 94.5781 98.4717 cv
cp
@
97.6123 100.214 mo
97.8887 100.214 98.1123 100.214 98.1123 100.214 cv
98.1123 100.214 97.8887 100.214 97.6123 100.214 cv
97.3369 100.214 97.1123 100.214 97.1123 100.214 cv
97.1123 100.214 97.3369 100.214 97.6123 100.214 cv
cp
f
97.6123 100.214 mo
97.8887 100.214 98.1123 100.214 98.1123 100.214 cv
98.1123 100.214 97.8887 100.214 97.6123 100.214 cv
97.3369 100.214 97.1123 100.214 97.1123 100.214 cv
97.1123 100.214 97.3369 100.214 97.6123 100.214 cv
cp
@
100.639 101.921 mo
100.915 101.921 101.139 101.921 101.139 101.921 cv
101.139 101.921 100.915 101.921 100.639 101.921 cv
100.362 101.921 100.139 101.921 100.139 101.921 cv
100.139 101.921 100.362 101.921 100.639 101.921 cv
cp
f
100.639 101.921 mo
100.915 101.921 101.139 101.921 101.139 101.921 cv
101.139 101.921 100.915 101.921 100.639 101.921 cv
100.362 101.921 100.139 101.921 100.139 101.921 cv
100.139 101.921 100.362 101.921 100.639 101.921 cv
cp
@
103.653 103.593 mo
103.931 103.593 104.153 103.593 104.153 103.593 cv
104.153 103.593 103.931 103.593 103.653 103.593 cv
103.378 103.593 103.153 103.593 103.153 103.593 cv
103.153 103.593 103.378 103.593 103.653 103.593 cv
cp
f
103.653 103.593 mo
103.931 103.593 104.153 103.593 104.153 103.593 cv
104.153 103.593 103.931 103.593 103.653 103.593 cv
103.378 103.593 103.153 103.593 103.153 103.593 cv
103.153 103.593 103.378 103.593 103.653 103.593 cv
cp
@
106.655 105.226 mo
106.932 105.226 107.155 105.226 107.155 105.226 cv
107.155 105.226 106.932 105.226 106.655 105.226 cv
106.38 105.226 106.155 105.226 106.155 105.226 cv
106.155 105.226 106.38 105.226 106.655 105.226 cv
cp
f
106.655 105.226 mo
106.932 105.226 107.155 105.226 107.155 105.226 cv
107.155 105.226 106.932 105.226 106.655 105.226 cv
106.38 105.226 106.155 105.226 106.155 105.226 cv
106.155 105.226 106.38 105.226 106.655 105.226 cv
cp
@
109.642 106.819 mo
109.917 106.819 110.142 106.819 110.142 106.819 cv
110.142 106.819 109.917 106.819 109.642 106.819 cv
109.364 106.819 109.142 106.819 109.142 106.819 cv
109.142 106.819 109.364 106.819 109.642 106.819 cv
cp
f
109.642 106.819 mo
109.917 106.819 110.142 106.819 110.142 106.819 cv
110.142 106.819 109.917 106.819 109.642 106.819 cv
109.364 106.819 109.142 106.819 109.142 106.819 cv
109.142 106.819 109.364 106.819 109.642 106.819 cv
cp
@
112.607 108.37 mo
112.884 108.37 113.107 108.37 113.107 108.37 cv
113.107 108.37 112.884 108.37 112.607 108.37 cv
112.331 108.37 112.107 108.37 112.107 108.37 cv
112.107 108.37 112.331 108.37 112.607 108.37 cv
cp
f
112.607 108.37 mo
112.884 108.37 113.107 108.37 113.107 108.37 cv
113.107 108.37 112.884 108.37 112.607 108.37 cv
112.331 108.37 112.107 108.37 112.107 108.37 cv
112.107 108.37 112.331 108.37 112.607 108.37 cv
cp
@
115.552 109.878 mo
115.828 109.878 116.052 109.878 116.052 109.878 cv
116.052 109.878 115.828 109.878 115.552 109.878 cv
115.276 109.878 115.052 109.878 115.052 109.878 cv
115.052 109.878 115.276 109.878 115.552 109.878 cv
cp
f
115.552 109.878 mo
115.828 109.878 116.052 109.878 116.052 109.878 cv
116.052 109.878 115.828 109.878 115.552 109.878 cv
115.276 109.878 115.052 109.878 115.052 109.878 cv
115.052 109.878 115.276 109.878 115.552 109.878 cv
cp
@
118.473 111.337 mo
118.749 111.337 118.973 111.337 118.973 111.337 cv
118.973 111.337 118.749 111.337 118.473 111.337 cv
118.196 111.337 117.973 111.337 117.973 111.337 cv
117.973 111.337 118.196 111.337 118.473 111.337 cv
cp
f
118.473 111.337 mo
118.749 111.337 118.973 111.337 118.973 111.337 cv
118.973 111.337 118.749 111.337 118.473 111.337 cv
118.196 111.337 117.973 111.337 117.973 111.337 cv
117.973 111.337 118.196 111.337 118.473 111.337 cv
cp
@
121.366 112.749 mo
121.643 112.749 121.866 112.749 121.866 112.749 cv
121.866 112.749 121.643 112.749 121.366 112.749 cv
121.091 112.749 120.866 112.749 120.866 112.749 cv
120.866 112.749 121.091 112.749 121.366 112.749 cv
cp
f
121.366 112.749 mo
121.643 112.749 121.866 112.749 121.866 112.749 cv
121.866 112.749 121.643 112.749 121.366 112.749 cv
121.091 112.749 120.866 112.749 120.866 112.749 cv
120.866 112.749 121.091 112.749 121.366 112.749 cv
cp
@
124.23 114.108 mo
124.507 114.108 124.73 114.108 124.73 114.108 cv
124.73 114.108 124.507 114.108 124.23 114.108 cv
123.954 114.108 123.73 114.108 123.73 114.108 cv
123.73 114.108 123.954 114.108 124.23 114.108 cv
cp
f
124.23 114.108 mo
124.507 114.108 124.73 114.108 124.73 114.108 cv
124.73 114.108 124.507 114.108 124.23 114.108 cv
123.954 114.108 123.73 114.108 123.73 114.108 cv
123.73 114.108 123.954 114.108 124.23 114.108 cv
cp
@
127.063 115.415 mo
127.34 115.415 127.563 115.415 127.563 115.415 cv
127.563 115.415 127.34 115.415 127.063 115.415 cv
126.788 115.415 126.563 115.415 126.563 115.415 cv
126.563 115.415 126.788 115.415 127.063 115.415 cv
cp
f
127.063 115.415 mo
127.34 115.415 127.563 115.415 127.563 115.415 cv
127.563 115.415 127.34 115.415 127.063 115.415 cv
126.788 115.415 126.563 115.415 126.563 115.415 cv
126.563 115.415 126.788 115.415 127.063 115.415 cv
cp
@
129.862 116.666 mo
130.139 116.666 130.362 116.666 130.362 116.666 cv
130.362 116.666 130.139 116.666 129.862 116.666 cv
129.587 116.666 129.362 116.666 129.362 116.666 cv
129.362 116.666 129.587 116.666 129.862 116.666 cv
cp
f
129.862 116.666 mo
130.139 116.666 130.362 116.666 130.362 116.666 cv
130.362 116.666 130.139 116.666 129.862 116.666 cv
129.587 116.666 129.362 116.666 129.362 116.666 cv
129.362 116.666 129.587 116.666 129.862 116.666 cv
cp
@
132.626 117.858 mo
132.901 117.858 133.126 117.858 133.126 117.858 cv
133.126 117.858 132.901 117.858 132.626 117.858 cv
132.349 117.858 132.126 117.858 132.126 117.858 cv
132.126 117.858 132.349 117.858 132.626 117.858 cv
cp
f
132.626 117.858 mo
132.901 117.858 133.126 117.858 133.126 117.858 cv
133.126 117.858 132.901 117.858 132.626 117.858 cv
132.349 117.858 132.126 117.858 132.126 117.858 cv
132.126 117.858 132.349 117.858 132.626 117.858 cv
cp
@
135.351 118.989 mo
135.626 118.989 135.851 118.989 135.851 118.989 cv
135.851 118.989 135.626 118.989 135.351 118.989 cv
135.074 118.989 134.851 118.989 134.851 118.989 cv
134.851 118.989 135.074 118.989 135.351 118.989 cv
cp
f
135.351 118.989 mo
135.626 118.989 135.851 118.989 135.851 118.989 cv
135.851 118.989 135.626 118.989 135.351 118.989 cv
135.074 118.989 134.851 118.989 134.851 118.989 cv
134.851 118.989 135.074 118.989 135.351 118.989 cv
cp
@
138.035 120.056 mo
138.312 120.056 138.535 120.056 138.535 120.056 cv
138.535 120.056 138.312 120.056 138.035 120.056 cv
137.759 120.056 137.535 120.056 137.535 120.056 cv
137.535 120.056 137.759 120.056 138.035 120.056 cv
cp
f
138.035 120.056 mo
138.312 120.056 138.535 120.056 138.535 120.056 cv
138.535 120.056 138.312 120.056 138.035 120.056 cv
137.759 120.056 137.535 120.056 137.535 120.056 cv
137.535 120.056 137.759 120.056 138.035 120.056 cv
cp
@
140.679 121.056 mo
140.954 121.056 141.179 121.056 141.179 121.056 cv
141.179 121.056 140.954 121.056 140.679 121.056 cv
140.401 121.056 140.179 121.056 140.179 121.056 cv
140.179 121.056 140.401 121.056 140.679 121.056 cv
cp
f
140.679 121.056 mo
140.954 121.056 141.179 121.056 141.179 121.056 cv
141.179 121.056 140.954 121.056 140.679 121.056 cv
140.401 121.056 140.179 121.056 140.179 121.056 cv
140.179 121.056 140.401 121.056 140.679 121.056 cv
cp
@
143.278 121.983 mo
143.554 121.983 143.778 121.983 143.778 121.983 cv
143.778 121.983 143.554 121.983 143.278 121.983 cv
143.002 121.983 142.778 121.983 142.778 121.983 cv
142.778 121.983 143.002 121.983 143.278 121.983 cv
cp
f
143.278 121.983 mo
143.554 121.983 143.778 121.983 143.778 121.983 cv
143.778 121.983 143.554 121.983 143.278 121.983 cv
143.002 121.983 142.778 121.983 142.778 121.983 cv
142.778 121.983 143.002 121.983 143.278 121.983 cv
cp
@
145.833 122.839 mo
146.108 122.839 146.333 122.839 146.333 122.839 cv
146.333 122.839 146.108 122.839 145.833 122.839 cv
145.557 122.839 145.333 122.839 145.333 122.839 cv
145.333 122.839 145.557 122.839 145.833 122.839 cv
cp
f
145.833 122.839 mo
146.108 122.839 146.333 122.839 146.333 122.839 cv
146.333 122.839 146.108 122.839 145.833 122.839 cv
145.557 122.839 145.333 122.839 145.333 122.839 cv
145.333 122.839 145.557 122.839 145.833 122.839 cv
cp
@
148.341 123.616 mo
148.618 123.616 148.841 123.616 148.841 123.616 cv
148.841 123.616 148.618 123.616 148.341 123.616 cv
148.065 123.616 147.841 123.616 147.841 123.616 cv
147.841 123.616 148.065 123.616 148.341 123.616 cv
cp
f
148.341 123.616 mo
148.618 123.616 148.841 123.616 148.841 123.616 cv
148.841 123.616 148.618 123.616 148.341 123.616 cv
148.065 123.616 147.841 123.616 147.841 123.616 cv
147.841 123.616 148.065 123.616 148.341 123.616 cv
cp
@
1 lw
2 lc
68.5044 49.3003 mo
67.7881 48.6875 li
67.0298 48.123 li
66.2319 47.6094 li
65.3979 47.1489 li
64.5303 46.7446 li
63.6333 46.3975 li
62.7095 46.1099 li
61.7632 45.8833 li
60.7974 45.7192 li
59.8164 45.6187 li
58.8247 45.5825 li
57.8262 45.6113 li
56.8247 45.7056 li
55.8252 45.8647 li
54.8311 46.0894 li
53.8477 46.3774 li
52.8789 46.7295 li
51.9287 47.1431 li
51.002 47.6172 li
50.1025 48.1499 li
49.2344 48.7393 li
48.4019 49.3823 li
47.6084 50.0767 li
46.8574 50.8188 li
46.1523 51.606 li
45.4966 52.4346 li
44.8931 53.3013 li
44.3438 54.2012 li
43.8521 55.1313 li
43.4189 56.0869 li
43.0474 57.064 li
42.7378 58.0576 li
42.4917 59.0645 li
42.3101 60.0791 li
42.1934 61.0972 li
42.1416 62.1147 li
42.1543 63.127 li
42.2324 64.1299 li
42.3735 65.1187 li
42.5781 66.0903 li
42.8442 67.0396 li
43.1699 67.9629 li
43.5542 68.8569 li
43.9951 69.7183 li
44.4897 70.5435 li
45.0361 71.3296 li
45.6318 72.0728 li
46.2734 72.7715 li
46.959 73.4229 li
47.6846 74.0244 li
48.4478 74.5742 li
49.2451 75.0708 li
50.0728 75.5127 li
50.9282 75.8979 li
51.8071 76.2261 li
52.7065 76.4966 li
53.6226 76.7075 li
54.5522 76.8594 li
55.4917 76.9521 li
56.4375 76.9849 li
57.3862 76.959 li
58.334 76.8745 li
59.2778 76.7314 li
60.2139 76.5313 li
61.1392 76.2749 li
62.0503 75.9629 li
62.9443 75.5972 li
63.8179 75.1792 li
64.6675 74.7104 li
65.4912 74.1929 li
66.2856 73.6284 li
67.0479 73.0186 li
67.7754 72.3667 li
68.4658 71.6743 li
69.1167 70.9438 li
69.7256 70.1782 li
70.2905 69.3799 li
70.8091 68.5522 li
71.2798 67.6973 li
71.7012 66.8184 li
72.0713 65.9185 li
72.3882 65.0015 li
72.6514 64.0693 li
72.8599 63.1265 li
73.0117 62.1753 li
73.1074 61.2197 li
73.145 60.2632 li
73.1255 59.3091 li
73.0474 58.3608 li
72.9116 57.4214 li
72.7183 56.4951 li
72.4668 55.5854 li
72.1592 54.6948 li
71.7949 53.8281 li
71.376 52.9878 li
70.9028 52.1772 li
70.3774 51.4004 li
69.8013 50.6597 li
69.1763 49.9585 li
68.5044 49.3003 li
0.87451 0.243137 1 0.129412 cmyk
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.2%%For: (Lisa Tauxe) ()%%Title: (lnp-ex.eps)%%CreationDate: 12/30/08 11:15 AM%AI9_DataStream%Gb!R&H!;6&c7o0FJUE5<8_K<\(L!,d"XlHs-&%Wh8.1+_RKUq3h1%PZrKUo?`j99_SEntVdp>`^NCL?f=d!@>/eg3*D_LjG0>BG-%s'Eg:Wfu%W2fC]khGi!0Ts4K?dcuO+MN2JALfcJjf*6&fW2[3-Y:)ioe6R=&g:;QG[pJo$h9K<,f;j"b45Jac^@G(k-,8@8%8WGg%7dKl\o<8)SF7\fK="*O)2tb5S<kZt!2u@m0W$"daDDpAnTC3<Ig:+3P9&@o("RA!7nZ2tkJ1?"\i164HkI:?>&^Y@Mn$M%n%j0F_%o_l/ImmB10,1s?HIUcH^hb"riDn(Z/s')pAkUM!X9ZM];Y+iLnR\.2QC&NMIot/KJA*;tN4=g,@X8VnMm'dge>dJ,+%8A;:Namin%EdVOKiTc;+e83UT>=R"o`oS42B)p\/&E9o1I"&N\+'\bK!@HYd^@XM##KDUqa#h;XEjpPppclP.<HXS$BrZI!:lC@o3pc[agN0EB%p@?i@->3[*)1hb3II!<r_Pu%WS&d"3ri5rF6hoC%rbhBp2EK0&aG?+oU[Ue#<I;u?>2:6tk2%)l[U-[kcDf[DWhhs*D5\*:7a8!F%X64?Kb%hcX@0*9N@4E#5CP4O+JfkM]/0$sB*d/WT5JF5gMV0pmh8alWRr'bGYRda\d?4F=iZG3H[("q2^$nXHgf=&r3[!)PVlYEP%%j6`_bsu<1k0Q>#D.+*RihbAq2coRQjuW>*f"^gGs7B1d'_nHhph<n+l+6XmW<fH*j8Z]N:LR)1prT,YlhEAbbH_]&ZLF2l+dQ[_%Q=\V4Ju7iXNp@mL$\.Y_f0q7B74e@kT86LH+BG=jDcS@_Uf'LKH6&X/l^!6CfB`4E?>&`2)RK:GqQLUc;g_M+fC`AL57n:XKV+'S%D%\F3c`fk5M)a-3r5<ad:9\rI:&'R[YXS>DPSg#0AS_s-@_;/[KOUFT9ZBe-5%7s4n.Tg,FbGVN_4!/$1G1F8i?ru9[@Gd=eXb6M%Q&[^<I3^N!+2l%ii?qN44iggOT!9?Srt,Xn-[M/"KtWE3_b^2aX^h<jT<./\_,&"dp>ICb74'=>YH3+&;9/ag>f_ui1KH`[Fi7a:%'7=4?B=5dKZ[/ls).h3&$q'qY*,M1-9Pb``c!&A`@f,X.Z']oKq\W,]]D.4BfXb<R8@B?sN,u''-J_"CKrbPo_jWAQ@Bq#qL$2IT%G?-fFF]L-T)qJ9dLhIa.4(=&p)0PX:Hd;VpR^8-uUm^m9ishb[Va!k(rR&pIaVDa-ogb>+P:uf,\qSr:nqV/\1*f?#hogVpIQq5"%"=N_VT,XN-U;!@,7[LffWXA^@s-Zneq&`=@:]17G+2_L$rVtQC>er67`;cJ.Z#03hs.B70*;8-,7+i(M;_GC(rr;?2jsKums3L]*%$IpVYq#@Zb[2Sr0s3LZmhB/W@Z1%1GodfnkI^/pHI@="fb^*8Jlh.Pn=%s/(R2WR>r#bq2J)bU^>'B12bJ]u\n!I;7_5HW;4K[YY%H6&W_Or0/*B/Hl07`h_e9L^,]Vt[3KMshbmIR@qiA*)\(oWISr$dYl2l+OuL;,oLd6TeeR94]UZAaMl:NP.c__<48khr`GSRZ4OV%JRK^VpT/*hX=!9s`F,NXY2G!^-W_F,6dS7Qh86(a%Yc0+d`^WE<jl='?>+L&T2ijW*7nc:"fD>u@BF/1Yd.DGJtcZZ)XrE08+*_W%0H=B;pS$EEIV$MDi`@.m&:P)aKASNF<1S?O^kOpA)rBF>37a"de6&?#1&sg@Ab&_V<PJb-[`P,i'?bm"kn77$Z_iTY1<V)F*aE-]%!''H%H5-c"YaPeAT%+it[t*KlGd>HfL\OJ;9MN1'\pd5:N_o6-i4J91g/slc!4)jt/B]Qo'Mg<9nXQPp4,Q=B47"uTe//G6ol<db%;uIQjW]7^Ym/YqhkoYje;%$B4&n/@.1@&1SOcIHHJi*dHS_"9S?Zupsi3LTUP,tB7d28p(qP7>ODOo=n)\Y*)@+Ias($)ZQF`hf/%3M7(d3KusNYn:8Om:G"&NGucN>ZWE-)Vu+B_6U&bL9p,[+$kgM>)!oVY+#pF](!$1heUjgeG<M=2FZq'N"+0Xpe/#jH4ebj1;9lP%[4BkU:/]>QKUYdP@Mq5Y@o]?VH@dQr3<bppH;plp12RF!#>/7%Q/Mtu=C^A/7u?5GXioG@lATmg_>62RCUY-h]LSp89F&76f&Kq6%d,fClKKd6GPZ`Ddi^fX*8Gu8*6n,4*%[069C=T?uN<7]-Ea<QGeD(V(da?#I8(XcBVCLhEXidT!&YN6B<2)S>p7gtr'4d<uT@%5a%!impC'h9lq"6EeNqO)%TUrt:lQ/^D]o9@?19XqKN%Js@K9LoD`NW%/0\S';@hL;Yo,cS]abr-!R+Y?gFFcVR)H:Ut'9gDHR9gNMT%NA9>IYVM=/e3hIBe9)E]I&1.(%(etdia\=7&hXJ#]^K!,%;c1);].Gg@L_jePsF%(C1k,4iTc40*3"4lY3(Nu3(b&.Z#\[,b)0UN%f:Ym[$e!pA'\RMF'?:MWA*LWB\8EHC6G_6B&uVCNo\D#..-_$#r/.@Jh.b.^4;:!-*2+U2miq_5EQjl%iS.Tnft<WBF_C>0hE.B[%^f[$F=0iVYhl;:`^jh7#9/0%"[igP]UZECEPAs*p1!RZ&<b%s[^$#(&m>V-Q#MgLC@$=B"^gC,#j%isfOc;GciG*lZ25*+Bf>BHZ%B`h3n=gt\L7JJjC$[Ke@TPQ%(d<SO>`COMXJiN"7R'ft-'($#jQ--@#bK=)aQo=5==heGcZ#-4Xg_(4;FF:e0$"[G,6ZQ5jIK5X%%Q3kU@-rI@lf:7G>Um5^^X-1e/B75@qPOPQ-.Qq;%:gfuUE%StQ%[.!MeXSV(.I7uN;jlO_H<X<-#O=Q2?iT*>ll!5GD&h01*_k$l%bc<(?:*E:9a#B3W1@JFC>!28F=Wj=U-p>/dg-aT1&fr)k-@=\(cruiO$1;pa1nPJqcSUjK)7+X0T::1IW.ShgKt)%TSdGr5cU63D%;>%R%2JU=.ckVVJI(&"[/2XZ48srfmcAM[pZ.F\8jr/gH%`A[Uk1+jCBe*5"0t,I'TXRWbYu4(bUfC.0YDk3QBXPg,Jp:C/[A>Tb%'-l$$2B8G$T@B@3[7\\^5LkjBI]C9_<:W74`CT(giir,1*sq8Q`Z;8%-5utr9=VqVp/>W_DT;mup.),-4<O!28[CA4?bCfiVh]pA%.-\5se)s,e7]rQ9:e.eI?rAV]jI-,$Uf'3Ic_?5`U\Gqo2-`Am>GC9H(O;O*T];(dVD%nQ_o;hn9f7$[="Dg-_IpX:]NF["XP-\F%'ce/Rphol=R,a(X1>S[j=^=J"qVt&B.dGs]Z%S:_]`(0u6GJ/\10pu&SWD,?8,P;uhq:,Fc$rh[U9'!F\`n*7ek<)Gd;K]0R!AhI%[opJP\Y,`1:g^2rQc&dIko+#KL%\_aIce8h*(/4EQ>s)252PSKe+DcFOt@@$:*(G7s1K#E#S3>8`1A7hXmt6\]u#'2F=PP@C;LYU%93*?e_L,FX?hS&uku=A$Ut0ft2sLLpDlh!hAoO+Y`7^[$-&8Eul>k3*rg5lN=^;kmiUusa>F&<a<b6\GQB]]M28e&/P"t#Edb.m2%/nT-1lZg(^A@-,/X7:U,Z3nfVHF"bb=?WA$IG*\)9T5rS-.!kKC>S<.=_HfahbN%::_.o!O]rs6h\srqgun0P=,inQ%d<f$ODU4]%nl<3=jW7*TQ%C%eWuF/4giL-B/MenZG(er.L!Sk"D2r+gSf3m*kC\Upd3oUu9RhGGhPl>Q(,7_Q=kjP.=ff`c!VJ/dIDY%&F#iKW%j*<XA,"O68q0ZDjNlf$NYtXA^MJ%El%HV`/ffL8`geN]g;@cr)c\!KlYiqetGOS'Xc.S(3Y9b\r(%PK$Um=ME4=n<_].Ue=C.WOr%H[='RZ;(:7pp19F?KmMgam/Fpb;&DXYWND`6F+8\fG&d'SW>Ld9@U/F_.UmhN)PRJ2sOhZmeNi)YG\oqbp-33-PB920rJQg25;Yc%2:Iaumqq'Y--q+pHPeV0:(#mpg%8fGp]90VF$rF8(B-!,iMPUS:&%&(N@drC=erIn7h8]1P5-\ak\I0sSkk%ro0<fo&"7bt_EV[Q%0%5o(.AO66NB,skMg-$[hp`i?nAYlWO.n:V^Ru(8GdM^kaHiSf]H2NDaW(7rPkso'IqBkbPLmU8FKd!(3JVs3_I)=T&TK4"#BR3m%.Mq8>^+O&%N4$:a#bR]7Z7M:(`CAOjA,_Y/@3T_W-!.aB"+9j=8((8u3K^Cg.hH;m)M`c(er\nn]UTljLO!,U?L.LEFZop!f/B"t%Z:KY&@<'(49+_iX0HERoIL)!6qn>2Eo3.,1TZXnojLN6BOZZ70Z$4ARU0T38lY5.\.(JA`nT9u6\>VTW(ZDgaBKD3EHW"DM0dBaf%r[C=_puX9V<CHCHbV'OdYHm`taF@lgTH_P,3#;j(Ae`2=&M7siY=b$./u9Eu2Y0EYc]]#]<Ci$LL*N9FmMRn@2=S.qRE\CWC.jsq%YH[/X==F;7=80?hXmWAhYa$2/Y0P14R&h/8H^C=Cn!Dlb`@?pdM\RdgXU2a^&">!+l4oe6OHi>NS$+K%[4?NfMlf&8CLDT__=]:-%7?1SEZ-MLNOhJ.Z8$!5Yq24+.WJMuj[DI6KXfRAE5\u-Vhd\0jN/L#\$icaZ-Ouc(R_]_1PKuD1WiB@toNkpR;liOp0Kk7-/$WpH%8W6,NVn%!/hBS3s[O*D'3N^(QAkTA!JgtQFO09KrgD+HVpUJh2IB.JD\2C?8Fs.lK43sJTm$[U=St*7cDm*tA(&bj,kQ(>:$gr&X%*RGJ_k32UM*c6$]Dm)5U^H/p9npT]0Ps9$W+7boIXdAqAI%J7.cTHOVTR2ag/I!^`+(+20l$_sY%^t9j_qRDX]0<mO!WKRW\&Wr5%0VQrWgpknZDg(#a&,EE"cEgTei$5Fo*)'2Is5-\n&\[[Spqf!2/Vt^*9.G/_s6E8Xm,Sf;iW!NTQ0.]0j6pmWp#5EnY(2o&?:jM:%&;AZ,S)'D155c2qB+W79g:*X9a'RMe7L=+bm.MOiSm/,mo_P]`?u"6CY>2PYZ&PEaQhT'Pk>eOX#ALp-k:`:[f/1q.9tq`VmU:dq%GkThCBtrZAir&%.o<h$;m6B),o/)(:5;ur<h)rM:P,NgpIR0S0<>'q07*QZIN3__Q?;B+/6bhQb-b'u%s3GbeQRhI;FT1r"5Op>O%L6iD"X`Vp+\+32&dck9='tT5d<UtpU$lb>^`n\aL:@-8[+90-;0C\'6JGtfmo)&6`mn3R#TU.$ZGBof20a<'Kj\*tZn:.BS<rd*O%4nl^h=4#\=N.7fB-UZCpS@R3c6EQ*fcn.GB#BnToo=5%9NTtt7S%Z8h/`5(EbQ#[Q[XoUWjc274HALR8Od&!O-[.kPR=m8O8?*#D%`"W?;q>WDk#_dd8`-GY-<cmJSgm#`qO:;'[G_b'fG5n8nF'&7@qo?0hhVTfCJp$eXGh9J2M<^fC0F.8Io,\qC;Y#3"2X$-qDQDCS%k><)Z5oQMPkZ5E>dV:u/k?aYPpC'R6QSq,3kNCRDh@g!j!n;SaoKu_Td$Y;QC\cBge7.kFos)S'#)CuVT">F%$1"*7^\'\aP9stp%mc4>S654uXq,bpZh0e[rrUro?imi\&+U4n/gJ5)%T>/9<pq1m=qg/R`SQLV5ao?6C^VJl@i(s+;p9!632(t6,h'U&9:Qq.GI0o6-%iUQ`XgZ%Q3r"i0!U]8XjkO73HQeou6ZeP?[@O1#)7X]2=^Bn.upCct%4E9@<kllP7?cjBC/?K>>H1'HN[I1A?7USt^0Lp!3m3?0b%W>XCo_>tR.BoBgpPHcLbrF9k7:$"d?p-1HRT3GG$IpfJZh_`\]hD5[b7/\c31cFgjXk3$Ks1=`d5:;4:]dC=MkU4.Wb:8PPnSnSP%q-R*drte.=n(5>R(L,r"nhB8j5Ml@rY)Btm?g_MR[Ip.C^&--*>P3:[bQD&?mnC%`henEgWC:)koKfVTfAh;Z+\R_Qir=a6);:`a%4gZ8[5@i1)*p.s_?"/,Ie=bPk+'aE2euq9\CsLJ9kWAePbWk@*e';1lY!qLYr7C=#=K2=D(##d=o,c\\EU2SD=cX*f4P#Za\g6?e%"CppLs3$>Kgc[m9k3k@pnbkQ,D>f2$`MH:/'JJGXGbn',PNDPi?,+k5h_q*r06bet9&Pu[>Q=NhV3UMYr]Qo<Y8B.^^:3[(pK%#'%"'N<RUjN&XkG]2KXQB[6nrLHo*qtc2`PjH5[%aRfMU5EAgY$N<*k^tR`IF[3==X-E(RT>4IIb-UI%+rV&g2YuepdjVFRk`3l=OM4%.Bc):KhQ.m>//g>l+Ju@h!Y/m.QlSNHX;)8+N`NsQ4Qt.'Y'?cX%C8@6lh"u<s1&Y<n>/f"!)A,AEPJ!=h](ZfPfV15!Sc@nTmoc%F!PS4f6mDmf)4@H+*CmYf?HV='j1aF1uM-T[r*\OcKf**h\VHtoi:UR#dPt+Q+rnL%("#QT(Ah=-]5F"iT+hVSS,-?hBTct5+8ap%EjsSp@X.QTM8n0>ZGGE1%E^'*%+"4#nHZ=,>;FNV^Kt3^5/2FO#mS4OVgI=4BDdppGJ81Gkm&77#?^BW'F,*Wo<5G(n[ju]65i3,%%P;&EnS"F>WJU\A?ddlT;FO3l]e99Jg_N1Z;;6c3HPl,b`"#9)moHYq@C4n?j6J:qg8Fbr6G"i-6Ec*NPCq^K3cHP19BR',jRUs!%#Tm4HPM,0^?TPo1c9K%)jll=X74T&&%AX.0.O&Gd+OXs=1f+p)TMB#"AXfB^1TahAB81,!2G=,lc`jmic21#\!4X)mP^Z.6%rMgi%]ThO]e3>I-%ttCX]<PVh<8hlJM"E&N+c73hjYF"V>%VA$oYK;i2O1s5\?.!7Xk20BObM_V7h"D4ZfO/a;cI[5'#p,I::?XJ,u6qk%Wi]XTZMXRe5P]%1P[$/Y3#6u#GKuG_,47cT8Oe#^;7R8anca8Le*D`\,>bit_<5^@%<&.EXF"=@FFP**/'i4l-20/9X*<0CD@'JK%n_R2Z:.VS7GQ/p]$H'E$l(tX!E;JKa#`g]@.Y"q"MEP52*In7;BBt!Hc5i;!j=:1Uknif\"'lOtdsJ\AXjZ6%l4or->!/_4V,t<X%`1`TVo$[BjoIYImdTu%4:Q&I,36s(CP@d%R:I9<>LF--4QEL=!Z#GTidcuN$TT&R4f4&.a'$"h(_)YD6`;u\(HIj$bcqA(6+l'i/%)P**)%'QQ>i9l"0f^\ZUQUr>3G4Xfa/@NTG/qc)Q$fA?<`A)R;4>#\K>.7n\^b*.D?dG9L*$/D3kMN]>)?H8XDWfX3F(iu8_?$"!%odJt7JIO>J[)#=LOTc*e+;+I`rj+:,jST;PC&g'[23./";3lE4mu_\;0:=?`HCpTblSe2@eOd&lO*LLF.#D=0Cm]XE[7o1Ca6`X\%bVg,O0#M7?Z@THjoBTJ]eK9J<&42:tU@2="a58Pp^k=ofOh17Pa2nN08g9d_fBh<Wp=mh+SV*jLV]-(>`#<UA^Yl!]E=Yc9<>!^O%mr.`LcZGr7l(Us5J5M-t$WQ=WVu&\`4;+l3.O!85n04N[cct(Xh?M"nnIWdq[U*oQ0AH81k*ZF8hj[d*JM-7Qp:^GYC1aQs,:X+9%o\bAY@!pLEo(WL^\H-ALBuesNf)oM6\'8eDKt4o>"/AH9%iLHl'p/O+)fTm(@EWE&8jmSV]2-+JXYV)H[Ea:QeN*eU8@^&AHEZ.3%SX6^79-.+Q[6ZIZMnsaTon0E0Xs>tQh6:pnM.%Cdmjr2Z4Xm7^qN2mq4<BFF%WH4cUGpaAAH!+3V"]2W-'P+?@Yf6qJ'rG2O4`\]%`(+"R!aU\k#[4.h>LfoW0/OH9p%nPrK=a%(3nqo9F(t.q=$jD*_3oE@['I$uR+2se-)A,^B)].Rf?\A.8ni9p@<)7>YN%RdpjB`K%HOl.MDtMtO^AbOT=oIH"4`,[.=`%2h.?-4RWOB<_@QdE0leAI=bGEmU>[_AemHO5lr4t=9C?a[h*rZ":S6C;E3Ls@-^T:0^/,Pc5%>&DJ\n`Ee^rn-FK]mZhaouU<#r4/\C3kAgLZeF;#0E8+tljI+0pR`qi2m#]Td-\!<hNjL7&&)lH]"Kt6qt!7]hYCcRf=KSkPj5`(%j(j(N]R$J.PjK8nMEZ*o=BSriJb&N9Uunre(%j_6"umAag?WmnT6ak<OJNtoA=Tr;pbh@tp&;MqU\"+T\c8U+abN(5mWYN%)/)*M%MecNq+0"5K0@ct0WTS(8cJMEIi9/ZI]\TLj$bbtWhnM@806GD:@BStp.)m&!A*./P<sTQ,(MZ,$DAD.=rB)shmAYeWI%a'q[5"ec%/GOq]$@]7nfqnZ/KL3q=\`R_'(14#f\5_b9_L?<pe+J&<=.$6gjq$J*Wmndi<"fVH4qs#PbN5NdIk"YE^7G(R6<g6p\!AsbGA`>*%YmeAGe$O@n8$fNFp?J:HchCBeaPq%gfV]1?jR:fh""\UZg8i1C@s,Pl#_a1fLa`5s>Ycp#Hp4(gqh=m0b_g7\Is`f;-PTb!ZX.5q%4gr^Dq7E4tkVdC]F4KKm\+T@b>]83mfSqDgqt<r?bg3CuI?,mXWOoPq^JH=)fW-g+kM8r(Kc5s>9)\Y\8Sh%tlb-)JVpbBT>bS][%ZF0=JOO.%o_eeZ5`aM2,Vb5e%ld6+V\e&<=EID9OhO*#P6LEB0+l(X3HaCNrD(O"e$FNY'T$CK4[Hj`:TV^O(PeF,d)-:LSd$rnk%gU!M9**ZBY\Bt2.mUK_")c&DXE^HI$o?-;iX%.l<N.i+]]6q;=hcf<c(4(;5r[G,!KBqnXRrO.Vju9Fmb5(D#'?f=u]ao%Z^MiS3%fL!pYe4sJHB3V47B.>`>LhZ1XErN(W,S[gRJ,\KfB0!EIMtPhY\3`J/A$IsOjo.[MK<GaGqr-0&pd,K$J,d'\IU7g^oR">t9SK3h%M70g?[.s/HWR/4sF8YcRI%c<7oA-HfY7`<!8tf^0J!R2>#!:R<(C/)(/$q=mh[0j^p$USRQ%=WA7L%,rLJRM+hV'nB.doU)G/J1q%\Ss=A$[m%36C-c/Z@?7[U"\kegifpK@^l+/b6KS?fe4%3i<j%t3-G29W^EI!]ne/Nm^T@FosrdSLqQaKqV`tUoQu)L97X_IB8`Cj%=2.!L:i%S\$I@45Hgfu:.(&sh0!tMc50jUB3A(M?\p_"iq"U6ae^r.@p8Ce=KsgTk<R8=k3l44K#_NZCO40HoiuKOIMeM9kq=`od%Z(QT,J%Flp:2ZTh?%7]ZrmmV9XR'1Fp(O%CY,T\&d>,60ci`s;WP[dk'q`K[R-iWEbHB0ipcK`Ye(YD:_N`#&IHfI@hm^kW;m5r)%qgCt?qe!m`^%65Yj7&ddSFEocBm8a`LL0o-?0-F9Yd_,U^*PnND@SSUhI[Fmmf#7NZ-SbHT/m57<+/A+V&56[.5P:;/k;O;+4$BW%[C([cTBFKMT.`)h:Haa*D(]);F<<FThVMSMWE<N2j.Gb+l[Msup%eB\#:EoAs7C2DM[@]_s0VH*8P=<^rnCS)C,tf[)rH^XPNFWI%2hki"(TombNkTr5pKZq"R&A2%D0:0HXs\4jFa6gP:ER%)hu9I"J!g2@1EHA"E,g8T4u[Vg*r!%r?+i8D(%dLG\N,%DN'>iOG7KZm%g\<V"KY$97G&Q[CCc1qNgWu.qKu3#PTCatW0mLDn^T_^_d.H4%H_(37lHT*18P-%pgG==MHR[]6O"0#9b`80]aYSjSL##Pie5Gu#%@VY0*#L"]:m_;NA?-U.C[j.Dm<i21,Dnm1#I'VF@CTF!RW6OQ2Q04K=g36k8@6/`17["j]-2m],(&O]s\9^4I*o:uJVE:WIhX"!Q%Z`?U>I'PQWO\P?!#9D@pQSt?"gs2EPa`_#DesO3I/p+](@l^ejV7pXa-5:3CJ6C<YroqEU2Ge)I7nTIZ;eC'D>?fp<=/_/9KiG.[%rSasQFtF'WH4D_*]3M:S3[;!*GiM1Ao`!mk%t:3Kb,=F/"2EJ"K2L?/isR^_NT<F(lbA_#W!jG7F,,E8@5\F5LYJUkRu)in2nl,i%,drt#P/K]7+#uu'muh$+o.GW3h>%oQ<HSUq%4[s`nW#SR]?c.Spn8E@q[&Y=LT=>kn@ENs:Ba<o@%0;rq=DdUB^!=f966#\S_aC2%IeZr0s)3Z0,<5"KpoVFIi:6dZs&`?un.!?lE*d60S]KjUkTd%HfrGI`GOo>Y._=&2H_%eK)NG_%nXHA1<jdH"+1qXj6=DJfm=G+=%<RlfJ5BTBB)$s[;Xf^+\dKaGThr!RI/.).9j'RASS*S$GTZYCnZV[;*'SaCkK@fJ:CI*)_m8i,1(b"p&lg+n+IRMBP[Qrs%GY,&;%03"oIPtI)Z<gMs%nWUq-Ll*i8J.-M(L%=*T@&DDnM**/HC#?M5],0)5>X<6NI5EUXEBWO[T>#dRFam6f/a[V)_>+Yb=L<cYgJ84A%bf\dl>Gj.$QD'\26L6g;fQ2`TipJTqq)/'D194s]Eoh:7QE6,#S=/1SMXsDe0DUbn2Wo"*l$UgR0e9&G)G;_lePj)_]ZLD&XUhG'%>[_#Yr2?U&n%C<6KHAITXkf&n.>o43[Hk_ZC4/X^0B's:*-@20Y(earh)Mg54=]M-S#4MZg>*^JBgF8h=FL-V0WRFD0pGWLV:E4=%o33Na=J/[c+/r91C:(8<)Di*0)O-n'C=h!F5f7ia0HfONl_sS5kc;n_['k,UQe:<:P=K-,YEcY:8QP]?':L4=Or%&Q<JjiqLrGR0%;&>&)Y2*i`n@37/n,:Kbma=TG8TM0*+XQdB;Jh8=n@he-il0nXT8r54oTXqJMB?(2;@koZ2O`+lC8,O/*]f4[TmDhHYP_+nRJ'_:%r8rHbDrf@/>`9I7mZP@hdb9oV)X7r[qlH9eCU:%4/bI)DB'TbXBopXXON%+!TN7?%;Q_]as#rG]_g>2L@im1M4-e)BCgUmaQ/(U<%>Ns`eK1cI24a]f#dKUfj=aMjMV;k2Ak&!$,k7@4C+I=^-s)gJ'V$fj9LY2QAZ^+q$>TkW&61^,DH3Mm<M-,qb&)Tq8X.'+0JspjV%NWh;oclD)./M:_jk%/$_3-!coTi)id48.u4EIOubIr0_uO;uu!4na4adCmg?+qAe/YHT%=M2sA@IrB,[h_o\6Qmf;kgh9LWf*ac\%pe6'[mUVs`!H5Jd)<&ll;*/P1+e^K'4^TW`NL((0PW$Jg<J5WiYuM[;"gV)Qls#LgP<m)m<(+rm_3:=K2,Tj02o]fXEjhe.Kt%53%8:I_g,5I'8g7GA=LFXJjW3O6@GdiE(*si#PVI@r1<QZ&2Wmlh3^lpKeaSje[O90t+I2mFET@gmNQ/hgbQKL"Y^"W4/KhV#qJ1!"j%qR#_)#B_dg"Tu%RKc?D-8WS!@c,p"P.)49r7L&\4%IV&I5O/kVSG)GT&i.WMK3>C`b4rO$%h3L-A*TDi%(#B<dA8MT!M0uK8W+mF%T0/<DRmd9>&g>Y8<\R?(BMt?D,l>RThh<<d+!q"$F'6C"W;5J5d$KPk*[/2Drh?cG:D^Q.6;/S=K>,!0Lsb;g7-X=]pTK^E0o9_?%;Js(``'BLF28GcYGYM"t-+t1P1^%)ugmY;I?0U1L.ii/LY)pJfk'aISr*`"M$%Ioa-[AF$O=)%+h<St*%-k[>fMI<Aj`gjeAN+E-%8!*>-j!f;segj7M7dKAQ"[,5*Ep8b$)_u^a.=g#U-m`Em7Uo,<YV6kNFU>c5ElT6H%XGc>o>cH[DLQIX\:4TaFa9E>ma=U2:m+*N%O1d`._>!%fRj4u.=lWLQXH[;/0H!NE[j!P<>b,+C4gsl=VQ<\!V3jAZNGgMAi'_UAgA#IC6tbiu85ub00mcJ>%msu#]-kkt@u(:i%#_t10Jb;=7aJU]M.4)hX[DG2pa<?0lEo7,eR^D:B]Z-<!6sP2ca@aSQbSB."kFP.ILs]mK_eZWT#RQHL$#$^&;g>]2]*BEF/:#W5%fZK.'84ZDnhc$Pj']F.[gp)>EVpRsNqe*f^[(+`ld2?;dSP<_`Q0@!K/tHi-Xo;I[`$^lgffBO`fI%tb"s$f,N;$13hi_&P(+-h4%$_^:#=Z8NTfQ21\SiDkX^*F6F)5h#Y#lJXV(5NEpA81BXWnGDXn@KdZKDF-c?R&VhgHiY-#E.7lbWn3t7rG9Z5[+A^Z*ut0Pupg9%](/%H:@cItFNJ#o'8Y;&;84ql\AVkn6#1^"Ndi,^dd+YY$ceb,i='LP!V>s9?u$%dZ:l>RD.-ga!Q<!<\Q#5W=u52CZ&@R.>-V,p%@N>D35_[t0Z)lSHS:;VN-!(pS-^-D][tR/d1oL)UENETi(?1YL-/TL/;BgHp7bWlUXhTh$Kta[R2c'8(0G8d7W7R*Kl"GU41b-s!%(-#G6i)++UFG3Ho@[RF2##?%+R=h4@WOb"/Z'Rf.Sn-P1ECP&<EL`r/T#+=>pfR"L,!jB_hG+li;Z%YKP+5s*Ka^m7`[it[bu/"5%3RKP:p/35O#s6b%kPL8.?MYpJAf+c,'ApHM8tR&6h==SI;LcT]7I$55<c=(%5I1n3jB.^mEmi)qYU<;2"5@`mM']YKQ!u1Ro.<K9%mSN"#;9D_7['4Mli:8ESNrf%d"5=M2;kA@pbM:3u4gjqOk7f`4p84.HjdWag\m/Z!3HXL'FHMNU&Td0a1[*KXFo35joF/=<Cr'P#%kgD9NK%YaNkKp&<d,bUuae;ARTF5<=NgrJ'SjA\n9I>NI4bJc<G>'-7/fg"YT-fXeQ_$Jj8)_J0ThE_)j8R]h*4k'_jQ$`Uf/R\1%FUrk?-IBciTrO=kkrnmq*OKg5ol_rT^6I^ONOcChki716U"L[(^o*r9p6$f,nK#k$mkbu@:XL__kYAI<N6,Ic)1j9Q280c694PGl%4P7K<F4o;L*&LtW1Hi+41Up'!R?%He?n#*5VT`IjFNC8gCq?LK,Rs(ThO`[=W.rq3_T%&QArn+BafNal]q_jS7)Ll6eTLV0h$cu#%$grZf/he^?bIA-oOmEjuC_NBd%8:paBe)_N>68;4eog)Rl+h!=P4GmrR,&jI=E"W`bZVCjK.AkQd%!3Fo.d#cC//-5DfLjc]t(or%L62tJ-RP5kQ"%o-pp-bN%\DG,j4:L^Ik2R#)]UhBN.spl\)J$V7U*-DEfq+5j0HI6Y<l\>fMt/lSJW]70E(*dbkpbp[h<m%bBpDi%TN-#Ig00")91"nA>j8a(4B*eU&%pM:RJP7#)70WtLciD<oWn`c%$ARh0IJ2M(]l_1SCm)LA0f?*q+/e))2;8?Wf5')lN+>XTfA@N%'JabT\OIO'A&5sah2Q5mlEBkIrn*#?Lu6qh',^OA:Q/MTjNE7b71oW.i?W#!IT>(AJC31[T?/dDa^pn,77+U8PJ)W*,.,V7oZ(rB%?lE)4X@8_oqE:Cb'00'1`#af=N$Q_pP#L-?O8Zo]87#a6M1$R(UiR7TYp7M7fhOd&`&m?3RieVXn(eb3IcSeIXB:cCPa^n_14<J`%$!Tfp9#=M!9ot:\3lr7:EBQ"=56b+;A.;afr`CA:qK#epCO2H*Ci2M7ZLTHWMA$[)O^XSJ"9rGW,uuIZO,W=>6UbN`Wh^/<`R6O.%Z:/:.m7tuh'UM^onC\iJlBbg*,,<JoY63p/=X#WelL+<>]@=Q*LragVHip5Tm4[KfA:f"7W4TCr2_?@#j6uEWSq].N6ma6bd/?&k%#%>'G+rRATjl['dO\(B#,@^rF[*P,0"2(lo8TM7F&fYbO7.Z](WPSJOZT-.3]9C<->X)09G78#MBWro?mUUo1e?l`VZU'M>,n4^6%IeZWX+oCiARq_3*_"=nYeqKo9_*N?h_sM#oh4_ELFh_7/?Cc#p;DX"3D\/W']&Z5YA4b(T<=__$0H8`S%^<M9*EgV5jT_=F3Ji,C%[NB*H=FBI_\5CNn)a5>rIM_XPoAR^CTpdt`DSQb4$0B'e:*+`b%a'Qb4V9MjJ)I:$E8fVL@ejrJq/A(ONZt_7kJLjj-"$fME)OHl%>P]\:%i7#<93Bc]8BRk=FJ4)eHFa)fh@gbf@Q<&Mbd&TOZ:eZ6Z%"Z\H9EaON&r0fdRi12S9]f)l%CD0_pl]ta,&$N3VJD(FP\"P%#C`mH4%g$=L%d\#Z(F&cA!Z[>Ke5G"-SPh>gOJ3=]dAmSFkG$"n'DGOkK+qr6'!<%_qK6CKQPY(2\,bW^bBT;:?46>U6@JDZcug5%c5=GqV?2Bhbd21(S`KJ9psZS_[ojr\i"7bt:.(4:78@X:(+t>N=9ol08uGC^V2Wo^8S"W's.*Oe.M/(S7dB[($"Tj3e)ho2;Oc/4%9BfE]AY]BuZ1OoX0:(j%Ob'osSN[LPOdc4cBR*2i^TW\&8BRX*_eq6H'6R@<Q6O4cASsb'A;b6n<4G=Z2UPJ`oZ%1(kQs.fKN,IW%I[P"%gfSR>bc,R!bpu:YKaXG;FOU2LUr()?'dfLZQP:Ob3'RNBR7.jDc;.2,HjXbQ)"'feYWp^+fR[e)E$iHBl":N=#Tt@si'HF6%pb91ji$$"U/M714d4<16VBqasXUCNX(Q$P]V.<,7%TOsQ6qG_Q)"YNf5f`6B\6*_dXrgr2C&bd@AQQXscVHJlrQW#ZpW)RDlIY<b%RO_>q94'<O+'N#HX6Y\A?WT<R(G5EjFTe)<Q29TbrEbt!S$"N=OM\\/4S_)dg$N0QcGdYR*El#Ka_i3G)b4rD.Za_?[SjYN,UL'.%->&h-c$X7uL)jR#SPZ9X!AE"&Ss8S"+N*VI:G*?beP7Y00@g&mP`%C@bchI$],d<.<+mrhN38WC$4SApi<>Xq8Ju]kHqK.LFM1gN%/6&V;IQg@P'^t'4(^JT`8]bj/But6K<cXm<`ui%kKgtLj.i^b@2j4S38R_)(mWi98TZ:fTZ[/iWB@qb=iZ#YWmVQC?PR1-h-m:]2%?G`)Pc\7X)#)\<hSUSgBS^?MR&U$S@=jh,F6*6sM\KA?C2XJ6]>L!!%)GrB0#,c::4fb8T29*3!/,^mdaI]Hn8lZ)^-V`L]iQY[V%G*?1d4`[f?Wf2(aglPCCaJ!5kB1$i_"_GJ0ik^%kWL([8f[i'U9B6`?QZ2Ct`kAqcX#0=KJ]pg6Ya$t_QJ1Qsa(6>GSO)H#a)-%F%FogEl8FQ'$FJHiaL<HHPRg8^c\4L8\`T>OeT+<_Q2I0Q]0P7tVR8"Ka9/f?&it0DdM*()pcDCuS-(J1&Tkq;";?K]#)*46>DGm+O%+qKl3(Um-afuaV4e&CFsKiUYiOA-N-B*k.;2i2@^\6-@-H_"+o?-50/'?m>3bG>U7*M#SV?(B<>hOeI>?!NZ3-QA,=9c)E2\\_22%BngH8\GhEB%5h0E?'NjS4,$2GVG$V7-^d[f'ZW\gVMgVSZd^=m9fFQBL<HHPRpkD*SkU"kJ9%\<RS=Sg+?/h,]"$:Ra<(,]Zg$Ii%l,'dYn[%K>d`6qi,Ep3GMp%q)gR%H:l/J'B\1MJ?flS)e\L*D4(RId]EZa36'>X:OC6p8tU&2fX%ra6Y-AYBMp`=K88%-@6bh@Yo%(R)S:0!7gGhSi%[eYRR.g%[DnB%qitH<^g?M=4to/@(*t[I5Ik,\B3[="7CM9WB5am;bS9;d>U?mZ*hHq=Ihc'Xs2K9uEdrWKhVu%"u<`@1SU8EkOt788Vl&3SJ%?SXB>$^G=1Gm`F![&4Qe2`90W82GKCcc98<,uXOl7(A9)6SUs!j,Gl%DMIaQu=%JoW"*#giI-,VTa%=X&`1L;3.(0qt%Ud9W&CV+TH!G9ZcuR!lc,;'CAdD"0ktRtj&fl?.;[Go#]ra-i)t#B*IkVQJ(%S]gW9RqXM[aJZLk1d7%>^i]g5%j`?dWkFY!`h8$_=\P*lqadY8qAu-Y\XGLa;gJ&+TKdAb&%9oVQU\R;Jm6j;XIl:9SH4QmR'h>c1+hScZFE5!e:+*Rkl87O=Vu[j,%O4m_Ahgiqkq6?8QLe?ZHi46^DF@J'3JQWW5)0Z2rQ&tE/aqPo0Z\sVK:971#JN]N*lQ&hRNL]m,X6EYGql,*:XO835_b9_!OdMGK%B=MKa&m>%.[1HeYLAP:US-\c<k/09Z!>`DFBu!D)E=_`q:p,/f9mIDa_%:JF`%j6s4,Je&_i4QN;l5J-#%p,K=r>k^W'jE1*bi$N%kR<g(R;e3ejG;em>8=k"EQF&_63AJrO^Z<G?M(oH,)H`7Ig9S_A/p>6h/MQ?=2s-;2psC=gi,4K^"($UE0oRDdiEXraF('A:?\Rf%!Q-;V9mIDo91leUDWk-?*pjui9?M;&jNoj@%CkkL.2p)BI)B7@;pB<Gb!ZlSpi_YXfk^<"g?/%PJ6^`3p;G\IoPJEc+N#H]OSLke%`7jOlES9`sSo_m7$ldHK4!Ogj9H^SUWJHO/l#X,GFHXt(PIK+6B0mrB0jP3Qh]=SJ?\>DR5NeACL>h7HE@pG3\)`0Q!cC8X,c7&K%BW`)W@KY)H+rOhBVX79r,Ym,Ja52b$NQTF<@HoC89K1eSgjSg?,pmqM9k*\]'TOXqi95Hl@NNZHA/VAcXD(@r*5bBg3TM#d.@&lm%>E[AgCa;&r[-qJV*7rHYLW#Ap@aD,g-aY75KFO:aAR2QL*"1ZO3+;k*8]:l]8+C"3q_n^3/u7>U3<"&][llKlRBiChCU?Rr#udP!%kHl41J+P4eqTX%cGp:M7<U"\YeH/CkqmpZ(EeWefHK/f6>HPM7hR:.IWGE@=.[A9,/oK]3I2.L7n/SMNO"Q.S@68ga^5C*hb7u]k%m4.4l]Ao/$=d0!`E/U@V%[3(Fb_LnhkGaKCPCj0Gaglo7l2#fWYu%:rFn7Sqcs2.X_^9#QKa[jIG0SjK.hruH''o6l(4/sG,(.e/%EVZj5.3\G(H7gp0Xo%fjND77lNY-n.IqhW#c@s^96FZ7a>C)R#q:F1!1"^I5?g$b,`'Q]V[3"b"$>m`s.dh_+%ZW1U)6D<tY-nrM%Fg_C=(PW;\VEuSer.0SLY5j"28XM#jhN,_SP_dBS>)T\ipG,T&k)U?#2j8ShN703[DZ/r_Eq`LIS9Q:(g8/YU>\'bUKl/XBfZC^S%/Bp([<J0TE>)!;SE_=d;XAr^I&1Nk_C+DtU@MA%3$#QfUW[;Vb$H?I07$<RB_ctJCFC!\H/6CB\[T94MJ;$dj*'Gfhcjida%lTV6%F[Er*lJA,t0O$F?<@K>b1#jQ9e$JMkU3L]^.U[:eGf]E<Z;57geL.pe2Q3d9S]Kf5@nF6b1Hq!QS%AGnbIW(h&qd$%j!Je]>Rc%0%6J4moC(j_2JYl_6+!:AWS%uRod-#CAejH$E4^qq^]Q^_@M*kr2#;Br-fYCVt&kh)XPpJU0g,*iNFi%:fc0;q62J:Po\(]T4k/\FW%_&7mAou'"7Cc*BZolU:Im3a!!'c4/#Nhp#36RP5(2@s[65'8%8O!N#hn$c2Rj)Bic:4Mc(.@CjkIY?$-n9]BC*32BN>9Fh7WYE^-%R9aYUSo^"0)jdT>fr$Yr.UZ*1a/3m3cFHPB"WXTC!dPQfX67Y>'8H*faR5*XXH]Db_<fki@KS:`*JS&+n+Xr\88XM0djN6l,EZ(R%>r_*iqVu.O/AS>IJDhO),:&(VR!OWg23LK=9KUOa",OWTH59nus,qC&V&cQ\A-&RjE(&9r7a(oBM+Zb91V+)TWJAL(;3,^5e1AC#%Q_`[B7WPRCfeLd3HI<dYKIjq".Ks<.U%M#YT1H"LhUBi<ndT^dgW5`P"`MT\:L2*Z(KHk#V0mo6A=LN6Hu+g*3uL4.?HPbgM8S/"%2o;D=EDa6f?cn^]5Ou`Fji_t"jVX?T"el?+WBK9&Ti-YYR8SYNDY9L;fhcpshaB61-?_;sGk_%<Rheb8)I^*lm(Il4;5'?sX-)iC%$V=pn<khMXL'li(QQ?l6S;@c%Y?sU,nQYsTcA!82?GB0s4SHI;krV8.aOODeqIRb/R_ZUc/<_S5SEnjp1%4d.Dd)f4b0fYM9>B"q%U`2R.me'4k;#CgRiU?GtmABMSbt#:q07ClD_HG5OmUT$V8k_F3]Y:Z=oh.5c[)t1UHi;B2oc*H)Wl08_d\jY_]:aqnf.V$nP^fak%f_=o1+Qkob]mf3FW:qZYY@%-XMR9.*XF'oo'5(f1;Fe=M07H2Uh!,]eSRLT+rM&')jBMT$5,FCj;u"%Tl,kOnZ<a6^lPI0.j1,_;%Q8JTSId%fSK,LY`hs2*"hhp4S(HLYn`-_I2)(9B5)u![Re?O1OP!"SJrR+c&LU`C`N)Mijp[O68pCMhThsf;=nb;mV0+fT#[N4dB%^N<8Cjh-Y(Y@%..IZqlG)mhgS=.%4FId-1CiEZS]hWpMWX5=cgnI;`p,OI\/Yn,=RDY9L?I=).[dMYeuLu.GVbZ0$6%5ZkSIZ\0!%^o`&l`mC+IqK_'8H`Q$P=_Ydc3JfLLjLp"VDU.o^R.!i3?GB(m]ahd.03d<!\G,iF<&3<i52*]!_sP!l\^tclA9dQD^VKfhnuC-b%3DX@uqPB^&2UoEh$$qQB!>-h?ik9g*)kA0-V%N1h91k7$#&u2@cI9p@[S]'Y]mdlD.n@;)0;,g!\,))jHVhH.03ocB)2#SSme'4s%%)%qE1%4d.:PeZqnp'p*V;LPSj,]1AY@!_3`-dqDh!:<WLDfPe^L0ilDtQcJXrZM.^NAKi+H&&I]mf4cJU:#!<*>0ILHQlYb02J+%GC5(hQ-s=#V\6?5;J;Ct0b]=`qSrD?g1!U6)+u?neXMVN@6`A06XHRU]aI+S9gGL>3HD>c]RpJG_PZIuk23&%9=+LaIF"Gr8:/$f%=6l-L(4LIg9?W$SO8?i0=Z3D$hSW*fo@BGfDE7.%qUNg!l)C6Qr)C4U;OVM$YZ>@200W>C:G8VmZ`T#7j]oV_h>;P/5Mbf,hK\mB%n?CY.Fkq]9mD%h^lKdlAdtcu(kHh;=rnI7nf)4=J9kA>D:W**OfKNL:o]pYigIAq^31ZQ+G4h9&kt\9X.O[(`TB<oUh4641Mu.R2%IqRJ^3;*_5eS]SZj_/Dfqptb2[X%Y\q!$)V;!Q4"RSs03;-11iF:OP;_h3_^pMkVlqt@6PgRDJ0\Aa1unP%-6^U;$\kMQ]ZA;\gl%PhNZre*[,5nc;8B@4PA%nU@20d^<DrqQ4)\X07gjn,+[YffaqnRt"5nRJ!X"V[mDri$W_-?EAdYMhBj)\@/]/^ATV./:9!R*mH[:%Si7$IVd!M?J"H)0)XbXoCXGcbKl4K)/_bUos+"3&epGm=S`Qj=j*-Sq9]/#6drO(MNi.asI!uj&"0kjJ-[<:Hdr1[nI:POCgTrmO%S;q42/iNa$Dj:)+eOA*"/T'(Gm1"U5J(aU>p@Y)kD>cS!FNrA/\iXtR?hs]__`"o%gMAFlfW_5QQ*m`P3W(eE=C!Dhe`XAbG1>6,%Q-[!-jfqrdZ#a5dG>E]oV0)O?XPI^M0.Ea[hds1b1UnZ=);bXN\_;>Wf?^=P6rrOF&$n)1;G*f@:HsD?)]e^aZ:I4Ee>AGE!8&DT%ZTte'7,RX)c_#^<Ds"6HQ!Za6IW'VfS*E>RGNF]7.5*p!#7L*T9&\?JJ3/O_7q_,#pS]K)pq?OIH_<n?Q=k@^`.N\fC8neP2r4+6%MhITN0_DIh`B3P9Z:&?kF[\SuM44Y>5f&,M[^p>CC%tV:Zu:F.4PIi6%-@1_`D\gXQR2Ma"2ZgKpVRse):G'U5s!$n*?23=D'.2%%:A4,1PtKL>V:;FsQM++HFEmY)M4SJRer%M6Y=2<G1-aeIg@K$P[cGa6f_D84cc@::.[);\RUJZuY?^Z$`DR\h>[\%uMF:;nIHZ)c%4T!X9f$95,ZMj`NNfBq3Dl6OE!ghfaPu_dHp3PiVMi44AG\QbfpJ7OJ(JB44C";TNoE6h7FDKEF4":p@lJ8/U^HJ3'oF3(VqKDOa%#.mp*Dr*l5+5/M"=*F8E+:W[9<$i*%)YDAlC"SopBDD2rb=8K*\kZbMqURbiN#hVc>B@=XIVH+p#q4q]C'Nn)0ColVqQMB0cMta(%?7KENbe_Wk*^2/-f$5qXOd4OG+1%rldH-g=%jq4](YFO^:7iFm)s9&-H!e@3kBGOP-h.Z4q0A;5BC!Y<bZ*`.Z^%TDO9k'&CG$ad%#<ktNAfjW)HKY6%`-J36a%5[eU0$IF:oPJ6j'%/Dc5b'*cdoY@>MCSUk3_RtdfO=Yq0(l_;u%Is`n*qFZF)HKS[2*.*Wp=#Q*'T$%W*<nU%eT5Y_pDRjSD1kb($$_i`WS@9<qAfcS*usPh2)TF[*BV34$K)Rq)2?,9ioKdnCgGUOj=+ihi,@`9OR+i(5Q7X!O'_KZ\]2u%hlP)5%GeMA"Ikuh>MnH._J3^LG,mlW_*Z]\4oqK;D3j7.,sa1;O3/N#a122.[[rnD,!Au=rj8bVr,ec%-WZR1h(i?'@,OYL(E)Rd%mtU8h"U<Rog:d[HDYjA%@cN!0<1s1R%U;*^:A\ZlTEUk*#E<-*r2eMCLKn7rj'n]2N^[&=Xh4Vmh/SD%Ao*1I9AmAIe1Y`=^:Q45%oWC@b:PitWG!GKNIMY43T,l"U"5OGY*8@"@oc04`n&=NUBB5PT97qEJW"Zja=^6$g=A\CUHDbKpo@G`2hQ@>O-A5..=S/#cE7NKW%rVNcE(0&$(rt$_00#qNgUbcFf`b30JHKB'8h?6FEUG1kj$5Eej@#&+o`'>Zr*/#',gP8R0%^\/PUE#M=P%\2tF\4O2K^NI4b%JTH%mEE[pJfN"\8R*foT)'<P8@_&:M>7Q*;@0QRBf_#[<"cJjUlG]&I#KAV1i>+8"/Bl^'#grs+9F6'U*N@k2F@e-'L.@`(nji_Qcd[c%E(fdINc'on66$$c=Cr3+CRCrp";4ja@qds.%Q*mc1o$G32tW*i\N*EX\UGB!X^2oIW0WZi!ds@4P#*s=1<nl3Bth$_55<$r2ncV'%$"0&7HosMXk9tHOO,)m+#e,.c`jeUa^mJ#?s(7P$;K9q+.4+_k/7YY)P];F.a]N6[V%Ke]Q<jeK@qe;!)g0)G"I:?l4<fV5h3i/C%[F.#Z*XO5>>@a1<_RsE3Nr?i,mB=^t+Wp?@I]Rqr%u5Pb]Q3^1*:ff[hd-'hLO9.XV>jZ=LY?d]r#ZFE:aob0s5B&8DJY2569_p]%"b$Bf+Wio*Nt;&"HaYc]VqER.ZE,tH=I>b)?)A4D+N3:3Q(u,KK:`U3Kc"kjhs\l+C#UV>YhQLO<VdLbVEdS\4\p*K)ij,0Ho*lQ%50Pp^^@T`OTfMZU9T%^kn!"kHqaIqPlZ!5$-0Yeck#:Y?g`!T7IX\LO@Pdoa+.VlSgR::onb>30)B6]qg?PE2n1Kn_[_?+-)1eXL%Qd6ZUhUti?^l'\'U!:=fMlFL:=n(-(cd\C*BBf>d[@D*F<o1)\[HKT1SM-PH4h&"Xh8eE60DVI"Vd-46UT.r[pRQW>eb\"rGJDkB%HY^)sqY?D(WI.n&fl>5Nl`P<db0tVLk"i`B(\k9K?gH+'(4e[.4^ji1?gcLop4nj^B(_M==HbWndSt9ohd48*U6AhjC2rY*o@3]S%2g9$$i=R.0r)K7jHs8V%>2$`m:+\!n)Mq5K&rF?ek`5>\C4H,nr3P7b06H<)0c32EIqW]l[_26Yn7?+]mB&D'T.c)pc8Xdrf"M'[%d!;1h[R(uO>n#M0'A'm!K,22Qhk2Po%t?40QHk!0T^inc;fg.,Bl)ZCr:i+V>h4t/eK997bs+Cq9eF+"?V`91'j[>E(W'[Ze_b=Z%6LRLtO$K5K3Rb]SUNq$j_8k^#jUIW@AZe_>?mQn-gKrr^H]F+:`-hpTBl5ScPiCO<S1\VVmh;?l7%rEhH7qmQ:H9i5B$C(g5e3MV%>7hBH(8UIDRG"tW.)g\3c*$N;M+@65o\fW$Nt(Ve:[oN[@ZiPtjH?u1('tjN612j+Dq12&[K6QW?m'CTQ+.U`3`Iet];X&cm6:G1%dn![lgWdIU#olq\&S6e0pnOBkcPskmGW&N]p54M+"^LcZkD=eilmdD<j3L@f(<4NjOnIW09Q=AUX<$Rt.&EYeie99#MnBaeq+n+7%o=lac<rI"/g%jPs,"Z'u95]\j=KD75`/TsY*5,TcFGa^g1b-gP="<=<O.Ul%*ph_7o%3HU"cXjGo4m4h82@M@GF+BIg5GBUf2&r,%DtfR1%VpZO<<T(BHU=0?#nI60BA]0,kN#Vdb>0PeO(W'AIabc'AN*0[LY'e'HX5PMkZ]e.=#(22)Y?#_]jVGoC_!l-(Xuqb3;0hZ%QKHf6`XMa4ThK#MfiV"r<77dW]Wn!"WMGnV]Wn!"WFS2:`)rlg9`)-#);2)>(+#4'NF65Q_bBHQkq+e5a"0,"bDQgRc>Im7@]DZE%o*?=i#Z,>`@B4'XQeR@T%GgI8jaDXH'j[rG5"l\LB<$R!h8^'-MB.p,&o.Ac9D-p%pu"MtN3fb:j4YBRNZ<1<5h8Ii"ml/jJ2Op7%a2=64hZ^tm>n@dDo=WU9p-.T1TcCNW&6T;^mDQm"1csc,E3V17_r)e>$#9ROF>mYGSF*EKUP5J^%b+R@"[?N5d,GJ<J?;LmPF2tC%_Y_H#'hm9,(B]G<rtI"<8j3We2G_aU/";k7EI)a_'@p6V?3CoW$Gj+M3KTId@8Di4YP*`T'+2q!qT;[m?P1Eq(5H30_F0:7`"eOs%!kCXN`1PW9:a@4fk`3:U!>,RY8qPmf'cdnNj$@":jN.^<1kTYGNY2VWb#B!q)o]&+LtTI#:,C0r8r:`MRF^"ES>2%L;Mha#fn[+X%7Q3esk0jX`b![]c\%aV'*@cb3Z*,cJ,%GPi97)Ri)<sK#T2^_)Fa6f%1d<)W"SAa-eWC19YaJ&XCH4a@"2(&';CS?[@1oaYAKWMP%9]#?aN_0G#dp(Rr^:(C4@+=tTKF*[h4NFQ';16*/EDZT_j6]Po#gSUhj.'Zbd?Cgl`o,^-Z".\:\$>;CfLVR>ot$;TA]QVB-F#_?%;&ZJQgWO_.aOl=')n)k32/=5.eM"HK[m(5[NVM70<U*?$,%i9C2e+M%B9C`Vjji?m,Q>ugKSO>4MbLaT9Qa+bCoBGf@_h.iSPp>s%CqL@TnO(NOpKtR9dLC0>Rh*F7m?u4D7<k`H2iW*(5<^k[MmME43_+6+51bs@V;VV4F*1(@6f#Df_G+j3U3NqLng9OjdK%pn)fNu/%?@Li+]bpb:UASD;nP38UOOj_&Og_oH9(IVdMSK-&Rc7bgl9J\PfK,MnG.SduGIrG^n<Q6JMDS,ETrG9<22j8Skl[3q3k*^:nE7&M%qtBb.EqYkr9L0Fq`/G6$i3NS6&209)it>^`=PlEQ*HSN1a(IdUDasR#JV#q-0+JMdcS$4c1g_Q;B_1O/T.#q]Z_Xf'PKi:MmtL>[%h64NWm`s<rbVZ[>b[(c"+0qljDq@4#_:^M*RNi>;nT]!&&,2OkURB]apM\@Go'+oQA*r%L&MF!/<IO,.>EHN`?K6en`9XHI00lVn%hGVe@11,_pY+U*N-jd/n!8=p>EPcjlMR_^NV+5Vu`\)B0mc?a%@aA`ngK46mGLNf5pKtGK+1;qeQ[#2KOr%<l_s*l3=8X[c9cgj^%aT=n$k?)C$r-!shqSC[E<aEFCUk.ZfVIbo1)Jb`+Fm8;Q'_elMcjQD9i#U9TmO4G3FNefL7H,qR?ZH'G$q4L%V/#D<r=r<La5Sin%KIkCMit$>WHR$npmlBDl4`<M[^XU/ZJN2=m@Lq&(aP423Ypf#!>^tu9T=#Y00.o3=e6_S)V1r6K!0GZ1s6UO5baZl.n&Ld.k!,tc%:<g,[$N.k=gWcdfPLiJAI[CDs]?SUnhLDTtq7W,"iMKTBp8a6urQ!2VZhmOI"[SLPHY5Fjr(<P*I`fu&4d6mN"o(3_Ctq;3DK8@`%%0%s["WrNh:FWlXVOBE.bj'0#"SbP`.GBNWBRjOENhNNG755efhbdA)@b?3l"S%8%5Q63U?f9*L!<"EdjS/7Ihj++&Q?eWL>ofk)%B&55#U2?>g^'uckBPNQ&0M>K<r#WYtU8Fsq_),@T3"/o!(dLDFFb3^aeSkqK.B7-(Qj1k;VBH7)Lo2!t;mU"LeBD<_8l9^G"qt"c%h4gZ[-G`(`!+p:/Xlrs(QiJ$=DjaXfS-j2eJO7n]DE(\$Ank2lkY8#[*hLkZ5ttgE=/a%q;)t&XiGR;kh8ThgPqVO;o^d.%k?BmC%&'`_Wf7.+2OuSl,<O=S'8XW"\R#=+Bg-nBVFb8kX:":qgU8h<J($Pe+3R"d2/I[?<aE3>tVR%n_>he3keZalPY3H.p[%aQ^>(@H/%;E*-6R7bl3/QS`M2l12f%`@nlTG2NT27)KHocT\0oh__43KOeB$Pa&nf*jN=3s2LW=FiqdBMqblEY;$X@O9<FeWVs4mYR&f'q8j'%38ue4pc9jZU8kbYMF/@#,)/=\$IcGV"tGrcPmMsCibCf^E'RNk6"96?kobb]6R$?I.'IAJStJ#_1UR&r&9YGfI;XT[`RY%`g,TPT%\tJU"Ut[kL/4G10K>o4)U=]U$;.=8m_,T6u#_no/)?`u46R.su1nb(u"3PWn_]bCQFEJ9fJ2sW='$MrmR\^V?1,UO_"]_5dG7BW8%Jn[Zm[;CKr5(i)g_mV+J.D!Z07aWqf=Bqb;gQkJd:k+pO&IeXNa9J&aY6\$3P83B`#8F7s?$%X_$qg]]=)aZ1N/P?FWN;s&;aIVn%"qp9sgk&_;%@c;ocnpNoW/V'=iE[,S"^uOUF#C#^g/L4s;:T4LS>,/=/;(BR2-)pNHHe0MJq;D`lZEn7#@TZ@+dof](h$64Jq9qt%GBI;YDI=>cdFL>%^`fQg$j<$aVjl%;/s`P)HPr;q)jN8dXp]qd(4uW8<S&N6r6O5R*n7HQ*2og9:`62H$o$IkitNMf_k8N&;^3,m%+pQMS?uZe)(1Yqt=U.BH0U*lI_9AXqhDL]@+q2K$XWnnVb"rqH%@54H0NE*0%/O&A[Q.0OBi2Df8?@E;k('Np-FM)tMti#-!uAJ$%fPCVE%$Y!%#.h^PBBi02$ld6d67a8PKbA*PoVkOL5qQfL,RiGI.ME'j&j$,i(PGba*X<^eW?CM]%4u(%b!KD$BLiV-P/G@lin)OL%gFs6t->=6T4+(*3<j:E\Qtp-R5bD..CRM$9i';-m6SihB]aFn8Tk%9.d#aQi(I:2LPqAo4KAn$k.UNEh:f2o\4d[!u/t-"fJt?Lh%_69dY%=#]h8UVc+G-KRLZEXOanYAP>%4L+e3YMpThQjC9TIOfBK>7gZNM/A4jg#M\hb\i[j&Mks6$m]1IDA6T@o<[Wf)Zn%!4/@L%ktP]B@Nl42:0,76Q;J<g4'a7pK5:eY#2Kd[a^?fgJ3:V4._pRTR,\1e%$2Z5-(>*4!,IFD)5PMS/VCq\&nI(r;_b8Rd*"Hu#(V7H%`cMZ5]W3i,^p07HK7IV`7q`FL'bW2sLH75f%c]7Y>fU:hgsJ,'$mcqe"Un)_JBMBJ]4bG7Zo$=m0\=1HVd&B[0KeP+"8*N["PmKl%"u'Yg^]s*E@-bmCco@\h$k@?`n%_Bo"ZC[C'NkTqJHg0\m;eS+UDF6*cEN[L!t5A@in6c>AdT2ZVM=pe25d2V(t]JbDU>V\-#E[h%:_A:+FrX`EJTHkDT[+U]$sNnM_>qi`33Eq1!t/MISFM1P=:3:^(9<&TG+%4]WX!^fE.b7mo;!k))/-,Zri$go#oGa0;tU.Z'`=\0%!?Qm`1dq`#&R]$U6j.j00pi6g]a>MoQkJb6Yj;]X!4%i>nKr<"8WsX=<Cc^68Y$>lcZMr^Q;6oO^oZe3/B-O'HIbRl4,aT<>)@es%K0jcZBCYig_5!c@D_^Q+#+5se7^8>`'SB6f$Y!>#,nF0"/-o>_6Q4^jKD":-J?&YjNJ5K][SR^MK2/<h@&Qr<!5TY.CJ(IJF9gtQ%61q$8BLc1n#VDq.B_$7Leoj+JJBE1B-q,/dB^![P'$:l`!/PUUad&q;geh(k'VUK%C-r/l_@oN\aoS!TQm.d,%a>"fWQRara7^?D%b(R%HU%2S/:"cK/=F&TjkYOp).pcYX^o[\fA(F"L17`1%Hl$5]FJpLAZ6gM[k\5:.WEs!u_)R!L@$3&LX_uOn,@HU!Ef2W@F!SB"%j.s_(m1SPe8&N+IL2[6:W0>C0L2[q?VV%u"KNk-[4h8`]g^bFj.B4rS'HQHFI[24j1Ook5>RS&)#ZFakVJu88-:qV8fO,J4PR`s+%'dU=o0T)O<RGecr)8^K\ko&Ho_7[9+4>lQg+\6%U\SqaqBXY_t-K-c_gbV.2\O;gfcihU76=Kf.d'JPO_HB;Epo7;'iRI-PA)WS%%S6pq`0([>APH4l0aDp,/SS<b.D.2mRV]0'%cIsG3F8-'DAT!BEiXr'Z3JMMHFdS6$%WebjS,cu`UBK]h#Qkg`-3\dWJM<I11O=F$%U-n[cI+lE7/-o\l?;,/H@VU9W`@!nVK:s'J-m9"2W`1u5TgBUb=Y]A3&F1>k44A>=.A8nC&k=(KNqkhfY"(1jAPj'W[3hma)%V]k%1<Co!i?(t8?D/2]+fjVS$tC_5%N25H(kr&9CWd0@*WUWO=>E7ZV$0>hL<hbsY!E0DQGcu=2a/A^/hfS<"*6?1X.VadQ;prQ;Ohhr%NuE&jRh!#mVCWl;WbVG]8WjC[)Os_nQ8kCiK4tieVMW$t6PABMYR(NVY[faQD,aX0VDfPi)gsT_P/iPrTgOBgdN;gC=qi"%Ys/^m%d(u@g/U>!tQH@i4NGB2MY\KZUn-AoPm5H=;!<s$E!tDfE92#`l!?/)3cG:>29Ogb!2dnsCZSbm>@6@,d>uapJ'V05@VL=_cOW@Xr%(Ak*FoE0m_q?jro2;o9bO/.Y-/5AW&jK!+G`&NIIb,QJ0-E%!'Vf)W1j9<O2,ZA+Q+'ii]A;^MQ:67b@]>!A]d5f6!oob"aZ0,sZ%WLbCl6'<4PA)H44+G5\ib')0#.G%GaqY&CV!U'Lqaj))(YnY_E`[:QN-B9)'@Y9F:K*%P(>BUPiE2f(P#65MJX;H,AmjXW3->]4&%8KJ$pFNi'r4:d*r;le%^M@$^Yf<EGG:W<P3+%B8Gj"\rQ(aplJB7qs=-a1\aTKrLM]2:`eSsB[@`eJ\JLC@T@N&oX1"3&,d&!DET%U+K:0J00S$?,Q[3h*i0m76BF,,".%q.m'@M==dZD0)JBn_C-lc3O<+pfKbdn?A.R3ilKEMM%^X@L!4b8&I*B%AS2rjWeT*WGKN32%TZ.i2n==cVOjlos5/PC68<X'Q6gLlX-4L65<bh3d!b&l<?(QTi9XQV)j3L[ueR_aGAi'dgfr-ju6&;XN8Ah&?+cJm\5D^SGK!?bS%Y(\Qs/aLiLN'I^S:&LCu_LQL#4N$d\r0a3RcCZif`VMA`^NTSbe8L%*;t\o1cY.`upbQ9LGQ&$(kHR78pA;_!EVk1H:Wr^Nor%8m%%/A;!?WR)DJ1"8nfYE\6.D4T\W"b!UA6B7@GV\_X28#V+"[BXC,R$cPTdBqApjeSq0&Egt68RKfQ9mR&)NZ.+T":"-6CqAC,"J7$%OTJ4JRZcZ,SiZJ\<M%d*U0=.3oRgMB&sZp:T!FVjBqA4g@W%e.Q==p,P*]X&ShZ=9I@eiJ@Y11_O^a*;"d3>RSu%TZOi!b_+\Q8;%Ur]EG*W5u:B1/RUWFp%DGcGD@V7<R=]VYD)BB5mCY3-3aiEjiEOM\l+F!66u4XWW)1OIE)'TVmW)C]Li3BpDd>PL`e'\mc+UhI=%%E_0,NcS^o\n"'b37Hls*:Q":]%\XU0pDc\;Fhi&PV,[ZE&X?B94GQp?Q1,btC%[(i^X=$Uk9N]9+eCJAXdOE/\$WU'3Tng/N:>f&%V&I\1Q^2a+.=o8)j38R>"X7l>+Y=sb'+nrpad]G($WGoh7U!UuVE`KqQT%X%(<!l=PdGDlc+0VR2K*I[/];pU3,-2]\urN/4,mSo%Zj3^VidM(#2#g!Q0/.fP`3`5>]c_.PJhT[78:ae8a9rj;P;11sn,Zrp"1:W@3WL+O]YR02[J+(hf,jPq>:>YL%uMS;)hYe*LQZE@%_8`ZAY1KF3%b+ek_8[U9F&Gp'4kTP;7i+f/8IcTM+D_JW%OWRQhLgepHOVP?Y$t#2f@:FK%.XlU-.Uk)NF.$kc5ERVV:pP4)MF)9%hW:Q/g3^'oCTlYQ=It)N.:sEMNBuF_Unl^kYd%u)`eKG.>^Mi1#%;#'k;Gr4]al'op1h=!>?l->?0jHc^F9"h0_=bN5_=.!#fBW!%OH+-KX"c\9g'"2G/XE'qHs6sCHg^l8#$YQ1M)$\F6H?m#B+1OVh.b:aQq_AZY.*d-@Gk=ph'^Pk!i?hNgJq^]@qi[H5*7b>1rj'#%1N'#4ZUGC+="T#<%bl=40^pAGEk!\Z%ia3sKsl7\j$^K[EOt+t/D-$4;;5V8KC<G,E"SN#8)W9-jD0hC5_QU\ZjFb-++V2oQn>\U%Hk-7tnJ"JEaQ\(2LIPJq8$57)QURBO\qSTM/6QOGBIoWA(_A#pk5`M6`je.0=CY;4a)6"&7%7R&cHQqj><1@LY\E*Q!Z5d$ABVXr%:AusD5bX5.#&S=o6^sCa@5\:#i`odU0nAC:'Rc\%#D9k^;/eQ"0FK39j*8W'm0[]^.4C"'/I^!1MA:^D#B<u0,b4MBNWY[a!#+*3%"=MRonTB/o#[HH-TZ%a*#]CN@j8rbmWiNF1@+816g#B?"$\TCT160e=/GMj_"^sH!3Y`kC@5b7k9-XVXg5<".6>LhnIn=E`oO$R7%8n\Ze))b^\jB;XO/dp6kWBn3t'M3r:.Z1+.[8EV`&LNfqKa,M](#%>%^,b`7Ua1#5Mc-"g(12bU6($]<X\Zg(i1^pQU+r$$at'd]%/_O31cndMeP=jJ/>eC`F<S1B+g"':(&m;Q,]FBOFO5nC>#-N:#p(YX'^su-4SM?E?NNPH</f652HCO@d(iJV?682Zc0ZW*BF:#KP%0Xfp,Es,of]_EI$*U"^O7<NF,6l1F/"9X@NbOU3<[drdA#D*q#80;2$U5QNuJjI"#H,*fE;K[(]*\[jU%9t;'Hb`#c@G:o@E0Xa-%*seY?AA7cQE3J]`mKBm%%bp2NC7ATH>HIM).>GgpGk&0j_JItL-D4+J]L8&QgB=:q"3J:86A(<a8WnKf(hQI#DdK0]R;IO9/h[(u%`YR0=fEh/0/[!+?K$3r/2S'g[VH#2*Z77jU\2XZR\<>m'+A>-@hsZB(-FVS7Se?t`dE8!==@!cnV"I<t>=_F4$\C,qI$`@GL[UCP%$lReENNVG9Z6;6lSnpq-\gJG\ER:J=Eme?XVCgY4Oes^>Y`(e^M(Yf"g-_=FH.kWS_0OaElmZ1]<D:i<dWAN';e\/UC")TbZdD2n%ag=T;HdB&i;gZitN'F_2Y";3.<f1r(4"H"F4?GWJQm92@,l&EXbfB<8UmR5+F,V44To@PG;V/57QDI"odR08bU]=&->6iVOBWXB.%!h96g,9A:)l(*nM'5+U7Q4ch?N"r1SO>a!IS:?tM,+(9F0m],*")t4Ldj>5,+_C_TOan1Bp!2^/[)hKA))8Lm=A`6H2\GdO)N6YX%]!IY]Q7"%f1mnh]2%m-F[,)*^d2c6,;IaEpZ(eTpD'CuX(eN.qFk`Y$,/A$4og&k&"%\DrU`cLX6A!%Ib?.LjWA%A;f#S:'LW;/P%eh4H\/21HH*E6Sk$mQ?V!36]i'rLY!=IOk>5oD25<YR&XCZHi-7FO,2SsW2mC^[^(W2^*>-!3UUBuJt`ke%RhXu]#P-\bA!-U_V.%Q@Ug!/4S>oFb<2,]P\l0Y%T<dX@=aAR+=?-H/7Ig`R0QPKkZP#7*IKcX?;.&<,WG+"dM(R!NqC1LrThKH"Uh=MP3X%<ZIYA:5$p6%/Mi8FlN2&$FG2d%`2mic-&3Y^$",V'Y_'7=$&a"mLS`&>$=cM=NSHpp@,_AO+@SBjgB9<GO[d+t@KitS$!9Jsmh@0\ailr7&jn1,%'r<d&'4J0J',aOb21D#-L/c<Z(,1CY!N\aA<g_H"dC0P%$t;Y>`F4I7NSHoh+q?CgC*N*/;Ht;uR8.JsWtC7)VY/7*Te%hA*`a8_%-ru_daA#(;:Q-^Fj?#;&l7WAc^l`UTnMgP1mt@I'Zkas,PW1]IS-YZ_>Gd#mcpBLRTt5X#Lh:D)#GP``)5e(%';G(nUhp8OI3kBh%SJ[k.SWR,gnC9"!W61?_DXbc8JDm@F-%OO%`<t(?-S/Qb7a/c-UD:`Tdi,cR.c:&]),Q](anFd4-FZMK6\lJmC*[0jBt[HZSuZP9%N2=J>MIK"gNS6eFAm$Gb-%e3e?P#:25endV0S%]0`<t(?-i/Ro\j<DGXZ3C9Xc]*/`sA+"*#Ai[=IW]qaZXm#+iFju2%m-F['5CA%N1e4R8Z+7__n`m*q':_N,MJB*8]asR$mAdSWtC7)VY*^V:";+R=A`7A=CGC.2N]ab*'R6-22tYVm%S2m=I$c8@L'+U$!9JsmtA[*%@.LS(=B].7.'8W$#SQ1'l*Fg&8\?OC630H0-6kBWO[>;hM7?,]%qMIAV)Y7^V3+u[#][=.:dqKRV1j1C*(7?I1/9&8-U?jc[a;Rf%KVGsg11?CqPu6;4i!s[ab@91[al_stLl%/&.0>58/V)B-`<t(?B3Q!_LQ@B/V%nb#VDWB-`SNN/_XkF=Kchh%j*2]hEgC\`nMgP1%n$G6?B&F_f(*sV`M,5(p?+<SQ:9+HR`3E"@`9lPEJK>4UZaBd6,6fYjl^b94ekR)5N`HiE9P`]9Juk'g#Gb><?lLOH*pOOqb#/LQ%2%m-F[,*7pJ^R+8/2N#]'Iudkj<e>")5_66W#BMVf#!\IRndGQ0ML+q"'CObX>$c#_P4ul!*1)A-ru_dW(hA1ChO-:)[:s4%c=3S%0Zn!iE#K$B17`X3MfEl,Q#W<"SL@7#cH$GN\T=\/2J#7NVHJ;1S:DbN$Xbi$Z,3m)M*=R)P-Lagiip;,7W+s?f#]U[e5@=<7*IAB%Hk6AG!)b$_.7i]oOQZ[=#tp7('ul-Z)RY-`jFq;D##8<?Kc6<E>]s)B#=F:g^hUesKk\46I<Kk,N"r0(LD?[DEYD;80U#:RM\[YR%[0^FaR%Ym8#]TrKN<H=*X`qW[*OOZeQ4Zb?N"r0HEYItR'[3&rE$pY1/\KdS<=pp<QiX9X!`kE64.VAqJD$6ne/2@dX=12JRqOgH%P:WSuD9A(GgZ/,aKP1un,8MXtkFF"?Y&4Ja_K=dVJojJ"(l/26o3kIU[74s+QHA1T!eq7FJCR3+$IX5J/5<tA"!>^BV%q"-dMfZQ%G^(p2<t1poCs*].C6O,r?jO">=H*Hb+K]jRX(tn9N2=P@MIK"gNS6c_"^!.GdEu0=p^R_'m7lRoKU;eA7KQVPeiRFugSUgj=AB:,%-ruS`aA'S^'084b_;a3u9WP+\GdaN#+[ciK2.Ei-[,-YR740A(=A`7A=CGAX2c3[tgqdC)*JpZ=(KptN+^+lH&W7C$ohP-RQ'0rK%X=121X>$bRRts/AEC*6dj4HCFVX,h%XnseEiX]ESiijW6hMJs4DRk]@TbWJ#VDWB-EL.W8I_lRu_C\nK?Q.iF"DBPc,7Z(hkFG/5%$EdT*3"\2+3$C=-[nLEr`TS]cN"<;[9F'!O*mCE;*Z;!jM\W,^:@q7^eUpt$>&dYQ=sGt'74E<1#rHnj<h!JX*hqc4&7PjJ)@9M3%>46R)#/q7(,UJ1E"=ZrWe-=p$&06Fs)GK\-I>dU@nmMg/"'CNcX<=Wh3e2l(8aBm>0smZW;-G2'dDYYe*(cg4CkHR9"icsTL4t0:%kp]4)WtC7)VY*\dRS1]48m$)?U0(i-,<&KTA>#r=rOGWma_1n(C'>"h7KBJ$M\W,^:@p,>1P/_+>&dYQ=sGt'.2m:T\`0n.:AHeT%%J@/[+iFgt2%m-F[,0Io@bg&4@qfg3XUnMAX\kRDMdIAejd-H)D%fTa;-ODF6HfF1,69;cl^a&'ZIo8p*gRg6.uG(<20'B#//k#F%j[W0^'?IS'_h[1TEE,JC`$0m`]b;"aRMnSOTbKp&;&Zuf3\Jc_FI3tXn[-tX=M!dM&E!bS)Y$?a9(.G/g)/i=Z*[V2@B:lZOW4)q%p]b*Zf`oTN2EC)JV2rX!o'pVq@K4dll&;QPb)Ba%>#ErrBe3J?q$-tU&2Sje8AGS\@Zj"eJrc_JOGY/L.?,kp(7o3Y8C?+JD:0Yd%NHlBCL(HLueVM0Ods<D<:gG<%'r;Y#'rEj/'CdnR4R<Rh=Ys8h">,:a;)A:uq[gPX`*l)J]b?]LiGArX<ZJ4i<g_GT?3D;9Lnn]7%8=O"I`X=%/H43CGWtC7)VT$1RR'F1fX>jB\X>$brHpN`%ca4_$7%iR3oqq&ma:jeW)R27f3nt*"nBc=r-V>bD';RF=*tLJCL\2T%%Mtd:rd5ZE'd4p+OX@=aAR+=?g-eOk,`/:<)`<t'4@kIs<J4$+\/X4N!>W`_KK:-hfP`4.K`<t(?B/;FZ1YH?@3*K1\0WgJ,M#2nq%luCWg"/AR<+tA?-pb7A7!N\aA<g_H"d5P=R$=ZG<`F4I7NSHq7OTGeKGlF8Z'@b[NecJ;iCD'Ae(+2Z9SL@\P*Z-QjK^$G6"R1jb%XhuRth@tL9'\5+rnVeguH8("S!N\`l<fklo"h\)$_qW40@VA38U9mC-U4F3.)C)(=1]m249KKFD^_#K0YSmgM6!EaD.QFW3$qlYX%'ul-Z)S(\_*`8ml8QT&8^55@)$L(%tS`C[(C;aS8BtY1.'/R3%=A`7A=CGAXYCEKeW>%q'Gf4?d@"rEp4q&T8!3;64'r:Lt.@a45%8&eG9BLT2#ZpnpW]$f@DknY4rQGIM6&27?f;?Bs[=KF3YGJ_c:Xs#s03*K1\0WgJ,Lpoo/=2JD[Bj<#b3H52L180BLLdMJHGpg1h%`GMG:#uc[H#uVXdjVSdJ(a1qn[nRuaCE4Kd$bJ/l,695YM(K[q7?\@I&k=C0'VR@(lO7sT#l:g;_A54P+eG6B^gRMr"'CObX>$c#%U//sL1/a?9$rWJ@(u$ukPrn8QgeF8TVJu@\J7.^h?Q#o,J/+m![VmPuT,MZ"4-ina.nXU</NB-!8f)'<FK6,1JYT`b3J<"rTZ]<S%31LPNGBS)5&\s3!M-u!MN3RS!f6E\!`iFPkQF]NJ>6l)-W!BOF$!9JsD"!TtfWL0E`6o!&7;7b:7$'G3GKAd'3==N6l/7-O,]t)]%&H2XtmVGp@=-i4N"SWpSk;MY!bZ+S?C#^u$Cp:bDABS6ITks4u1:IT*IX>iuUniqk@4ZDlW89OEIs^OICX/n.AO_Ui<-KeY`RSm+%@PpO(b(6qKLYB^H(>]k^,!Wc9DNM.Y:(9f/<.CR:(Y:8l%;3gB'jNCd=g-FM*)Y]4?u]F(lDQtE"RJd6_@o:4V7VuciX42qHYo$I%&la@R[+C'o@La2]d"@S.Zr6>L3AmfS(0#dVU_hVpA$XD`2:kGdf'.;X3.ceHGQES1q5aQ,'U3WQ:f]l)QdT2F"jVZ<1M+6^8pbt7%j'U3r]&7E;3'+O-UTmaMZHZ3qJ:nTfnFOli)p4b9L5aUIeSY4$M=Zo#?%EcIcpG9#.''#P7i<uJ^aM%!A>Y<P951R?h)"uk3,WhJ%)8US\m<M56g4XPiR9fLuX%+hdM+#BQ+kl&NU<<"c9:8pa<@0be_NOJl5tQ[n/u?7)o&oG0RBg-?V7f(bY&T(Ec=579b$2jgMc6BG%1-tR<8p]lh%aKL*(PNGdg<3BSfBXaB?&"P"C1aIc/iegR/e.c05u?C6[+A&PWiLe8.g'L`&&"`2aBXf\C>>f#'1_De<+rM^%!<YT%:A`,kgsSk2a3%<2lZN6r11j(Plm$If*m2W>#g0-oe4i7%#>0;^s6ii6PlIO5G09>QPiMF_M2?Gp1#AtiLA-J1m2UpU)LAE9TXmd1%YFVVV&McIISsQ:\fBX`KOk1>.gBA!dqVbSYFH^ub:m.K_951T#r&KI=VQ?+SBs6.a$-4X8cWU&.og9?4IU!eU4@B&J&l(N"o/;K+%^*(?8.45L+Vq7t2>Q7%O%+?<Hnl"5E6)fJ$&!Z_?C!c=7F-rrjGZi18]jB]cZ@kir`fIbhc^;Gi:CTo0<.CR:f1sg^hrQe^>q\oT%YLcG&7]]c5F-:uC.qpNC#,MX+5>]dD-YdAJP.7LRH>1NJ^!>@mSt?[aA'A#K01=$tU]%u,K@0nQ+"6B]'1M("',=b*9j+[O9>nAc%UQTofmJJ,AUo"V28tD[T!!t$59\Ls7eo#0/:)5T[Y?0=F3$4$'.Q*JX)t/i]6-4`D&!Z_Ga=E8Q]W(1@=iu&=a=O*[a(SamFl><g%0W%I6)O)MGmS_bs1Wu`*;GbrfUU8X>^c?3ATZ(YKgDMt@0eoRqM/tK&>t?tqjBO6K6e;W):)6`&*te[n>.F*?CE+dV_8DKqF_Xa1%T_\a:]s,:77[Dn1G.]A;]j<?(m1+hS3-j9fEZ%sFC(6"d)(25,Lih<qn3brf5cfl0Us&)2cLBSoTn]);VDuSR%]o/eE,(*\,A4#@%:so_cSI=U.:XnBK=iu'(?6Y+=e"kd;o14@%X350$-On3FW;]%RYFVUWq_gAJ>q\oTY7InD2!Yh^#*g-ATP^[h>JhGG+K4^+g2#m@%=j.0fPilU,mIbd^W*c2OJ9mOMA"F+d;k+bj.&cQ3g2#k+2n3'-PkFSqmIe&6pofmb9H=<H]+G4/2V_nuSd%Ta?Q+&N#c^*cdYg1/%,4[j7$5KV%Q_GJ'%pqOIUr61>!fu;,'J1r+QU[`k"P$dMHZ<FFh5^n*o<OVSHG.7^mo;*Rrch2t9]!,.jO=O%Us)e^.IFMV'eqmR%:nF#M[+FUi*_unV;e+OHSc\;hK5J(%V$X.d:ss,,$4m.M'O3-l=f2e>\MU?H[<uOq(WuX"[g&Z7W]s>.CZduX/,^A].W<n];NB@a%BO2&+:<;>=>9"/(1q;PnkeTY`h5.Ip5HJAuHOIuBH'J%!n?facShB!+^[M^h*\IPS9c4k69i1e>P$U4IJR7UL>$WW^=f9jZ4J!Q/%.T[^9@6ZkAQj*ti)O)eOr]j%.hD(rkguY9)j(0\*om2J<=WeTmHASP[N=s@,d:b:$FdLN_*(#$X'N[kO?C'#G?UBQ_>TKP/>8\<s%4F65@."cc!\dKsbO[*0\.O!j56-AHblAh@Y'r.X&X\g>1T-"sfcjko@'*Zm6836,@/N'Dn>$WXQ=g-EbN+6rDNG.J_.<^'c"*&&-%m1"[4/u?7+IsKQ':6apQ.IHg)$j=%rO]s!;Hl`j;>h^Pj=D+KmN:u5jJ`E^a#Y+]9N:QcUYT+mqCk^mZRQl1E5ZlHXCQsH&W;]%R%00\4FEXXa(*%srfY7F4J*6+#-V)AN)Y%(kjO<A?@l96Ja3+k6jRH[-df1JumlU/rQeRG65A`[q;N'9aBaA<5tcXrt7LiV/T8TBlO%@q-A;oD4!M*Uf62'dAdHl)D%?rssmuEW5"$r`K-dSIF,X-G^N,LJ^7=f5k3X"0)ZnNVB2n>ipVRO%Y+g"P$dMHgTliS"qiNXW0kn%]j;fccf,TON^r`_)d$'>6%Kh>URDNUFdLN_48B]2?4+i$H'J#K?!F[U#oZD@b*GQR:"[=/CJ`S"l5lal\E\fEl=NRK\WCk.:cUtZ%+(ULu&CRMI3^2H[etB*rl7SpH\8l=`cV0SrngNnuU#M&]=iWasQT4Q1a(mIf.-h:a(K+"5p/Ve=(1tWIH'!(CO;H.d_8GKk_X]C6%JLXBK"sjSU]9N$CahQ3Ll^>%b*i6PV=(PDHP4P(0&1X$s2ZD#qK9?Af>tTJ2jNjTjB$,FFPkKF:`8ek4,sKW2&l0W?Z#6GK\tMEH%K'Ftb]lrtm1i@6/XHuFkYLcDU4NDT@YQd8s34*Otr3`5l<&k;c]9N$CM-:Rh-r-#iAL[$>]"l"=]E0,`9)5B`5nDueQo(g.(K>T-%mBmVH#miELH!*adI:uR#A]/tnF`_*R0rF3bd#u1AqkqkJ8pbQI6DWY[R9BaD+"6OLU"NsnNRM?(*,Q%F7l+KjKjkFi5>]ddRn[?W%(">q]f1T&nlU+K,[geuE'8_b)0N>Jl]eq4-T_\a:]ln9D3YRDVeQab%=g-FM/1C=QF@oasc0(1Kn%3U3&DG?MT+O7KB53bb9hb8.%'OuMsY7)A<@nLcF\Pq_=W4r2XTN"5M#>0=07+(McM2JI&VQAD8-"?JNn484D/_m\AE%0A76)fJ$&!Z_?.8bFBGW`L76SVo5EkG`Q%PFf80[*t0t.i\)Y[Te>["k7rk3amU&mIO$ea3%<2lU+0]BSFL^UrrYA.g"e@97fuPVYc>A_<MYGT%m#F5)(dU+$-q7>lufZEN<ZX%Ej)=H>GJoL61kITH=;*?\\Qh<9eDBlV6&:(%.K)%TQQ5V*:.;`F45rJTi!SST_\a:]sn`JCQEA53aS,X?6@V2WAOp+XZ<"^i-@cA%i2KTCpC-^"82tUF_R@jMF$ZjLZB0)&&-SRY8H_Njm>M)/Y-K3^3ip&XmN]']:'bL$>tAp>'V\ks7"6:#+#qg2ZV1TSd-?LDK2[E.%$*$3ddVC5q\-_&)WjuH)Z<j`$86$OPKB&Po7k!Fq#BFNL9F6=9/u?7)U([,Xc'7C&.IHeSM3sQ^D_N.mEnDgq\lP&F%LGIlRI2fP%B.*!bEJ$&%`lDMPc\Im`"WJos4^'ip0OpIiXqmo>--oD;J:nSK,ZRIC]qND+=i`S9::J)0%P"W#qH^QdhhpkN:CTo2<.CR:f1m%;%;;P8p]ej<6?8"%.!;*cpd$lVY).ccRI;)4i?Nenb8pfqnnS%<Xo"6NM]j<?HNo](krsCFLpln2C%1Wii.]Dc5g1r)9;Gl%1;qB-e%[+FUiT(V[mrJuZHrRPP-[@J5#-E-o/8M:Q3k:a?'68OtgV'sCMFX1E:h.%=J7Hoah?Q.T.%8%74G:DpudH6j/m`h!hngNnu+jMi?%;?N!6BHtle:/3I%@a##++"6BmTpA?G+8)@/f1T&nlU*'L*Q[7.A/jLpl*mm+,Q6,bU`&GMUmsE,1iM%DSg!.T6-AFbWqjEtg>9SB%UbZ8@Kt]1eZS=Z!phn!%c`'cBXe<6uBs3Y!b89`+o"6NM]jAH4cC*-\%@K2Xp7-/OCAF<PI4F'L[+A&P_C01cH!Zfb?E]]O_4m40%i[@+ULG"r%>V@\XeBs]L/u?7)nm;t;5"!oDJ[Em]=C-H(`Q`^2q")1=9?a4u=U!>]8pbP/D[i'`0iQZHUU8X.=C+b^7M0=0(*jfS%6;R0M#,MX+5>]dD+!XlAq"^d&f1T&nlbfBbE@6K1-QZrFBZIeg]ep^C,H1$.g5?3lUoe6#H!Zfb?6?$Y"Zi0N?=k8HMEYn6[hr;G%^@7QU&!Z_G]6]p'F[Oie16?YTn75ShEE^Df2*[Hc<'+G*`]f(ol7Sm&pouBt!:1SDS1LJ+^4[$[`qr?<nN.F\Z\c-9L.:.>K'El2%o\p*k:,okb`UU6up%ks?;@7l$l1k&F_(d#(<nq>Z)Jt?;Wk4MhidDEM]+C5"ngNnu@:O)LfuD'b*p<*+R\j=c"ol>37!FL@K=A2^%:A?*?iun`rnR44/,l0nNGF3A$$#*^jLcmUD78Wr6P$U8+Y[uO$^8U1==iu&=85jC8O0JE=%3nS-U2$X^)K"pMWk4Mhib=Q%cscK5%=YGia?6@U[O1WM#-[L'uCFAi;o6*dZQ4F&^*i,A%(gpWAQ'>om.IHdO90!7,#GJRD/bVE)*RAo`Xl3Mr&QEs'mDUG5O`o;gb4Dp'%p3M-.LBb-5m_'oqS)VAfcrg"8;'<0;q?&%WpcOQMMD(uGY*Yk&YLcFCI;GKqI9\hsD0fl`2T/B#8ek<TTVNBrW%PG+IT+YedZjEN%]u7bs7jr;4R:!lf>+147LY+E3I7F#$gup?!$-Caf,KAj<\rQ+H7O)&uA?jMeY[0[WLBaR\W]s>.Mh@e6(q5oJNgHTDfB[I:GY[$`%'c&[I65q_iLBaR\W]s>.MpnF]3UN\qj(0\*ocZd#phfPC?YX33'^=ZN.CVd'd=UWoPk;g*O0=b7dS-d'Q_ge8LD4HOLE,3S)b#BW%VXoBKP#I!2B;e$[_?oNqG?kP3<3;@<N77*m^@5@.oRX_O*=qDEX\Y8dU!?@+)<$4"5*T9Y$!F?h7Z>OVFWh!^o>Y8!6b,Q6$P#!h%%8*+`rW!8&SY.:$7GJ:tcUgLDl1O>%VoNZ8m@@/\2mdI#f]UVS1dUd>8p]km"[(;j:iWTOA=[%.75)^3JOUe)Y=IY[;'bt@m?Sl2%!pVrpST]V%2J19u7d8WeQ)$OGf*b!,'9,RPf5M!?':[!^>oN"P(I<21dU#"4Z)1N!SsQ:\f8!&d6GKV;*sBm-5+\S!XeAl?bYWL,%ji!S>C#+Z"*%)+CV[o3Ja$VfsJW6E>G*ufi8OL*['NFfTj2IG=oGJ:+k@H+0ot#ojZr*OU05#T#6ANjlk3^`m6pYs^dU#$2F%tF`%=YGia?E]]OmDjo*i47bb/QRE(<ej)2ehbc<7euC]9g@FW(a"N15-J&=O>FUJIXao\BS?ApO=;i2BMakb\k?b@Sc$YDMPR>?7qo0Y%?'aZE/`QacpNT-^gX^af:f]l)QdT2%q3R>HUo]nQBs6,]>XpF"Z<V[Xa'F$sBXm`^TWEb1/u?7)nfJ23'4nj>8pbtWs#t>Wa&Fb:%$M^=OA%L/q)Kd84Wk4Mhg<'A>PZfAE]f\o6IE;G+)boN8.@o7]*\,hRN>fkAeQkdom<;14TWFJMBs/'ChjdMr*iHNN,?l910@6g9%C4VbOmS_bso=o@?f4UhZQUbbn&,G+j"HGfO2brJ21MNX#SJpTI#cbM$p>Ua][F)e5M6^G/V7f(2H]1`d7&`:=S0,3jEG`1>1licX%mSUu^1HnWM,9Y=T5hbHi6qaDVOb(uY32*2"RViQ@/^"QF(K+"ucOqHs+.XOpa[4/79>V/O%+9l)=,shc)G0c*%#lHS"P"SBkqt5>%-s>\a<nBr0f'2i/)ok/gm'knI_?id?$*om%,n$_;:st7XOsnk&U8m6b.I6XMk,RC](o_/g<tAS-EMSKHbtE\P"P$dMHZ@80cGq/k%TWFJMBs/%UAQ54_)K)<q<WlElQgN?8Tsb6,]9N$C3RV`_>B$H%02$#_f1RY/#`Jc#<Yf"M3Rci>#,TO?It31cVp12$bR;SEa[4#3%6bGF/j0XJ[<k=7PmJ)^:pW(XR6pYs^dU#$2o68t`=YGia?E\Dl;+cLDYSMLd%*+jd)":Iu0M2@g+-KA\5td)TVA@cU;qC8%\9V<B%'7N'm7%X(&ps;VNN'i5\"P$dMHZ?cFNb+K?p$sNuoc[e1:01@u39HSQAojp4et>u.o`n*8EPa`6[bXo+]I[X-^*K3n)@pIi9>2Uq%Z$ge0P]8lSh1_*BLcNNLR=H8)$Rr!'C%9?dK4EQ4=;JkmFJOQPbDKT&+[IM4dsX^\lj&0@`ir02[6B="4s/VlPh(X>Wa)rf=.dAR%:CYH-6f!H\'>GV]>H3@8P6WP7%j1"PWKHU7QHWhSOV$>H\MYe9TXmd10@#M?Sr#Bt=YGia?6:qt/*c*X:3,AS(aMMQXkd0SL=hpZ%/u?6@1O@"F5u?.UUU8X.bikR27f%.blpK6=MRQ!k0Eflg83:g#F@<U-TKF_tBs/&8dGqM1pfA@uAR\J-Wo;O%<'g0^8pYJho[`Ro%;<UX"?C#WE^19^ni#-kOj7X650\RsP>kA/@$V1NJM(TXV4;$;a'%5f55'3Zm`6?2+,9Ihh".)LQd":NnPk5mid$=0-05>XC1hF?a%b`pg^KYCs"&!(lY+Z`HRn'I`/K'Ftb]f723\B7Fb=uh[fqXEFe:\`[fIJ9FE)7*j+N?2R5eK64(`=L8lN.4]l1$3^0b45=i%p`,m%On)0,*Ct!0";Cs1)Q,mI<-KeY`S2I_$_J=&A/Xe+@Jbq[q;OHMNm4U=[TfJSWX7oR1:pps.&F"V6<<,U&FK$sa"^K&-rT+q1-9[W%C.u*+qhp'k&!Z_G9ul;F2U>?A]ej<653s3:h#bSMVk!>125^8)9;<M:61kITHL\.XN2U=#WTJM@b'JKgqkl#Z9J!(7PTS1cNiChQ%c1r&QG:DpuHiFdD/h#&h;VLHS#u8_q:FpC;)Y7o+Z_W\#%8%=6G:Dpu-TGn<+R=li?65rV^7<)<JcJ::/o;WlE6FR5XjK/!TXmd1%00Y/dlcKW=.gOKt+3mdKZjY?#.Fk$9;?Msk*ZC7gW:!R;MpG9WNt@m2lfD!tlbeR(UPbmA6XTUNS3+`F6tss\dQL"0n4>U!Z(;Qp%iZQ\26R>)gRhu@)T;VU,A4<(.PW2%dKp37;0k<npRN^_P6-AFZ.10]i*WJF[C-SM2<7Q&)-p*9;l7SpH\.jWTbm!3S=\=$hW$=>=%&?'P*NX=UAjk3*Y/nn9C,cL-/g5ClGdMeUN4>0?AY7K/k.h5o8o+q'i5?o@$on0.HAJ8$mTVNB*KCS^19a0-A;qC8%9jc&2;fHdu%-&W`2p08N#-E-o/8M@72>Ndkc;pG!`PkFlLP^,C7-*$q,n+]9/U/k<n6ujK_9?\G=V(HV*fkquQ%o$_u%u%A`Ub_i-3`X18Q:;tk%WDQg!T_\a:]s+l"#`9LWNg50se*C1Ubl4=I29rhN3_H*dLOWu6P+]BR=g+Co1PZT=PkOYsmIbd^aLOh@7RB(2k4E3>2ku#ce>V5/%:u.tTf1o;F$M(8,Un(gF0[W8ZE>OHOj<#$0WHh#G[[ZJE0mW+R*4Lo9,,4a,K^sB$Sn59#,B@GW82on);Tna4;8\0^q?&%W3%0'I%QKsHDS+X(Oj7U"NV]IMf3a+>W_HFLkc#-k1X[1'\l49-Oij@dX[5:h$nZnDPqN.*">2rH;\1F/;]`&ZR]k)p&,mgT`PkO+TjPr>7%8]l@)PkOs8Qs@0n)SoXJ)qbe)7%^QSTg^R@Wk4Mhg5.jsL`e.mb>R'[6XoWV4NY^\9AA$[R+u?jdA`heE=l/o.IFNa,'-%Pc:iLi%QI9(]16^1AI1I5J`fXEF81rOC3&N*Y;#Ps.?9;dTj'6#eP3\qnlh)D`3G*ZcOd`V::1b1CihLs;:o^2b"!tWMGVY#Q:XnBK=iu&=%#Ytrrb*a5XHk53:3Dqd,d%D(=o`n*8EQ^L8@,4e)]I[X-5(k::R9kf:LM(UQ1:M\%)FYq[W]s>.Mh;[&aR#d)a3.B3lU1FNJ*BjI%nM[[+7VE-%&D!96*i"*BpS*DL$-)a"N:M7b>_5!?FA/cl%-AEKW*r>_6m3iXl5lal34G\_MT(u3CZSFIlh(>"q'En8QZXPX*FH&`%SM6s28MGb]/u?7)nh67`A1#HFH'J#K]u8"`+H[][<c5Igq'BCbL.7"`K'Ftb]lrtM$b_NIb'J>tp3OEjj(W$mdkjPA/l\7+WIu'p%9rCH(aF`[fPk7;He].-?2g$Ogb>OAPlejBXku%@ji+Xi/U`F[Pjjp(=61kITHL6r(`aeLUW]4=NZ<j`$Lr)c1/L!oCrZN_3">*7X%g<=Z2&O&92$cgSb9_*QF@sgIn"0NT')GtT^_ANhc.j[dt%E^#rr]j%.%L7r7\\4u]p!T)tq@N1!':P^QDA0K8ic1Y$oM_ME7mV9a%dU!p`\<aWsb'J>tpA,?L\Y(VmBp#5-Np/*"^jBclZCq$r-+u9M\E94$Ng"(Vcg0[5&#*VU6/0H3lGseplV_U08eY0RTVU17eC#bG%r1]qOV((a'+_UTF0We;R\sup/iV_==%8%=6G:Dpu3Q!@Yl;!GKEZjcAG(K[.X*FYJq8j"r)*':@*e?:qR\M!$%8%43J"WSRIVBa1%1YY;<MXe!:j7OQU4>)o&nKG>`6q#M1q5$q.[%R6t-,"KuAFN"QRgP1BV6&:(M!3l55LDV"bo>c#kS!C7E,$'l/ZAY68M?*[js/uW%9!4MXXOi6rT&Z5rDkE)+D&D.n/`g321hZo4&(42m&02_(T4Z6PZBY(ZE<":*iY5K%biASU&BFPcd\%jOFdLN_I/f9Y$5I0qH?kbK%qJ[5fA)mmJj*<eJ]>0\\p*%fmT7FK`8LGQ:Z)oi:m%P99b#6gV90dSj]O@#XRa-FsR\G+C'G)jpmS_bS"@T^;-09DT8pbsmLp"*(%L]LW>%#A6A0klS'H?9d!J"WUh#`.>VXF4%#nZnDPq@F7`K7ORf?7N]a2]`EM8e@_I\d)pscA4[@In`hlb+l>qLQq"%)t1Y)?<b^.%cKWoQ1dUd>8p]lp6G3Y<ENKpcSR*r\h2$W;2:<aIcA55[msf(KZCq$r-,'",Q7K-pPoMGM=g&>Rd>^bgBn?_2gXT/^3$\cDB"H#2%*tF/lXr(:q`lDMPc\J`<^*Q>bC3FL*[OpB7/ef6Y6/@*N'@3f@3ej'nX=U3]50Ou,ad*biE]cXHmIIicG\^,661kITHL]e,Y[NUX%VLn-1.I6ZcbTiB-qNu:EproM/&oS4O'3'ISUt<n).W(`Me[8;:Fo$&p76tZ:FNJYsj4oN-o1t@#IL<)>:ss,,$Ki3a;dCcm=J%5o%O#1t^V+QU5[W/08_`U_S:*'Sh+"6A2:*+-;aA"7HQ_ge8L\'Os"!&R4kO?Sg?$YT0V*V)4l49-Oiq)2A=gsekY*Z#ef7ti+'QLu+%dkt19r`5>]>S<\':JCL#iPPg!bM(C_'[K9(`of\q8(tK2Z]n9U"U>Q(3Ai4%LACutS@F$#bMFnNDP!&DXODqC*:?Z1(sa,1bUB/8%k*@-+!pVrpS[\`V>5'?n\lP9*?EY0$$)r'ci)ZH3L&po#H:oZ$$3KK6Un.36c9='VGug6Z?EY0TrDrO0M7R8lmO-MX*WK,WN@NB[%eNM'"E@otg>m:sR]Ne'U]e9%@hDBdNF_M[=(GLS\9t*U"Keq4a83-'J?<00\c&cr9+Q`6hqK-H+BMJlo"[(Wr"h,hV"sjYW5>]c9%$Uik&3^_T*16?YT:dIbqrmY>_n]!6IGrb&3BMb_%q?&%WYe[Ran"uQ6ALZs<\dBGOZadm^a0g5e=]SLdSa`1lC/?fSo`n*8E><_3%fS$c6i-K+[HG*YEEOX.tX6lDd86,>>H6.i2FnL@O/u?7kL7b*[B?KhOPkKF:`:dD&G8M5V\&RrU$]!>=&iE#^W-aVLg<"d8dnZ.8%ngNnuTnd5_3Sg%1I(4kW"mi%W)O*?Or;dO+BV7A'd0oVZ?Vmt%(,AW,R\4,c@-cj%V:%g:,oeQT<H)\LWhB1j-,$OuOdRn#X5db?%lh-s:D*@d5Bhf2JZ;KW+V,?!9T_\a:]ss=Zd%ocmWih\cXOi567!bT'L413B"Kef6hAUMX$EC_&p>U86d<IiPSsQ:\f7tDF3\3NA%6eOFW$]2mXG"WOB/>2Dsg5.m_WQ%h4Ss?.Zf9\\Z9Tbgb'eXLa0TN&n[s_u?#:uhA;VGpY!B80.Qmh:^;;1>'0DAK`c4Zh6)Xc^I%CC.HSAJJ0g.IAuJQ#Z7B.-otlg?\DEEQG_MCmc!_9P+(>>oJqYW;]%R0CHnGY(gqnP2g+&lh,R\Plp+r\p-4[Q&h"$H>?@"%.sir%3,tkuI;r%ZYtc&i:9UugNgmaLdCttQ`c3RYV4an-Q6;E[krp>>3"r&Eb*a+U6B[Up@B@f@PpL;J6BkG?PuCD;#=+ep?<X&/aI2<(%Pk<s7'.S0sW9AJ/b'La-@QCWFJ`A>286aL+Iq_`:T_\a:]f8]rAOKn^<-Go*A\DD'EB?A*.mi&GP(Y0^6_h>X97rB2eK64([8ZA;%nZ3:6W]=COZ<j_5T`P\-6YtRZ\1^':SmchW'NI"Xh1_*B:?D_D!<cr'4@hKG?JTq)`jY2+0]OQ,h\(SfT^G,"Bd\+NTG*QtngNnu%+_RrcH=W`j6I,J$e@/7lNM>M;eQkdoETULeDFPo5H!*adI7OaaKaOO&Yq9[C"k(&C9;?ai)<q`oE7tV%2G/Na+e5'+-O!YN%l(sp%CE'+"dNdTZBueh0]JYQI(0#dVU_h'72YskrWT\S0b'La-,*aT%<kE5o@X*a>ZY,!OI]l!)cC`F4T4<T,\sE0<jkmOs56(QldBRe&%$DXif4L0X$)l.dq:n"'R"!tW?4a(Q*%&"=f,]0A#lh#@O3+<ldi-C"=eaQeq&3kDS:t?NL/u5"\18hEs!?!6q;GR8?ZB>knK?>9;%HsfFi=?>lPBH5Bu5tNl^>t?tq4`+?Kof,=Yab,i,LX5CGY@*#`09ld6:l%'u+]"(B]P"6/:st7db@/;0b"]"@Q_pk9LF[?&Yn5l_%b_)#ML3q!?_iGN8eQkdoER6diXpW>CZBY(Z&CsX"k(q"67RRUK@+&4r%:90&:u.tT(WZ1rr^BMFk@H+0p%h/AGeAt,I>.8FhASo$%0*9]X%H#o+:u.n*(M=(RJZte002$#_&,1D%pl0,a,foX"pd#hdobKi9QdT2fYBLHR\1#\H;VLG(c>Yg.dX:AqPVhg[O)MjVCG`Ui%;#Ps.?CWfFX_e`Z\mCi2?6=p6n?Xbt1:D849;7gkVackNAuIpZ_MLX7gG2+,#8F;(KoFK9OC:1La8SE;Vt2Hr2TXnRmfbnJ^Qe.a%g5A=QWLI!df#shqf7t5:W<ODE[Z-[fCHE2mLBaR]W]s>.CEG@&eiHa[p!T)tq@GKr"kq!M-mI<`edbFO]enH_&QEs'mDW9kPWL$:%lfD!tlb`q_)?TB@Di&6'BfiKF\A+_'f`]hI.-\/2#%1Wh9L[Q+;qC9PmV4h$P%Y']2TC6LJS.lQ&qhO'mQoQ@-hhW91f;iHUU8Y=%c#K3Cc;R?E\oFl.9pOUR%8%@7J"WUh:7LH0=8o(sj(0\*om2J8ds$X289Ys+!sr=aFLjIhm*RJ<l7SpHG+rHH5uO;@V6nk?,p$,u%)FD,:DI<C:1R/M!M2,6Z;"l+"[$*S,L<YsjngNnui?XF-mh*o?;kJP1UX8m2UY''Bo`n*8iNR;@q8a@p.)sG.Nn9'Xe;,&;RN#Qm%iB3^ZDl3f9$E?<edYlFMQPf9e("Z)Wf'C5Aq!gJ[;8!hNbjh*G?'feOF9!qlr]j%.4r*7Cb;Y\k025TQ09ltc0$VIQXur$S2%,3`%4XDRo&5`*DmDO,VM:0mcb-SC<pA.UV_HlH#?Lo=:Mc)"VH"]%l>>X.P[+>ReVO$tEo"6NM]fsp_eOlHbj$TA-QLs_?J4uM,K+\@<%>tTH`d.134Hr8J<UU8X.+u,,>_ttgA.^:he8uDk>$*(V%p>V`V%d'60lfD!tlU0#S<shB4N+?8S_KTRh"<e)M4-4IAR,qS*U5Y@1%Bs/%%b9PW,#,QCGAj($d.0=d.:m.K_951T#r%htR:R(PC..-[NG^94q$K"H`M<fD3L'/Y+W-aVLg<"cU3YQ),4A't6?6CTO<fTtY%3HFUEFgC.6K9?Af>tTJ2jIc%l,\=YO8pe7S$pX2_:ree5[C.(dAos$H1al3th5.L1:B$[L=D#^%H'J#K]gPQfU#tB[Q5H=JIRtpn%4Z+Wb:u.tTf1u<\6_M[t=YGia?E]]O9LK6(??%!`-IXQ*CAUps_aG2<G:Dpe'1J+t"Qao38pe6hZCtMkNW^DSE7h27P\//Q)IC;)%FH99_4#&6TU!AVW@i4>!H=\N$fcp*G\#n'Z>JiW9Y0s4;>toq9/u?7)U/FQS;P'5O[+FUi7\'*IZ[YQ:[FJ*a("04XjXeVPG9Q(T%'1C<m"lqXG83+BO]\LMn/8mDn"fB_(Lg*3`i$+i^5fRLcLssjcb-SC<p3OEfj"@&OcGs48Hjd?4U*AaJVup!qh5.L1:/n%LgmR`G%/>^$d0+i?1S>&n:2dmm2)Fl!<7fBqTe6PU*m0(C_2SU,MS1LJ+?EXj.P_E%S."103[$Iu5F_^-L?3Jea8pbQ5G?XK92H-36V6nk?%*e!Z8O'ErFT)[cFk=35&Ti'7ETXmd10@#l\@8Jc@=W'al]j;h5bVNm9d7=.j[#HCNSJkB:JtT\JBeN5I:(<QeRI\!AV7f&<92et#%!b?'a98jjsF%VZA/YMMtg53_D3Fuj#XHc:iY7CZ_/Ye@H)69#IUZdrUY.$lG,_G;6V7eit3Zek8P-SC8V7jT29XhkFUm+J9,,P_h%'i'`4V?PLU8pbQrF:HD?.I6(mg?\DE'5#:D!5k)j[LjpYQ?[1AMP0eJ-+u9I\lF-Ugf/C./7lLY6qetUVNK9:Kf0R@$dEoY2%"Yu%U&G#uVk*F[l-A@Af$/86OELD]/q#hjiMSf07?=Y@OY4mW!DY5q!VB'.QdT2%;(:GmD5KEK951R?l-be8[N]4Qlb\dZ(06=4*ZC7g%W:!R;M^,*[Vn43'lfD!tlh(n<CQ7@/,kBDj5,8p=<2TkmbY7aKiPPuN<!77u_>5"gpq0@Wgb=7"jc(\[=Ro"<C]X?@VhT0.78Vg8%N7Uf=?YO/qo<OVSqN13g&W$4r>rE0I4l5iT[p+Kj$EC_&p>V%W;Xc<1.I6(mg?VC,CKp=]@e'\P"HgKW@6^)J3N[nu&!Z_GSCXq&%r;3@Sl_Q&rom2JpRS/;5=s;+G&$Pm@$VS\gGaq8lT,PCZK'Ftb]f:8,Wh]dZH!*ad]ma1YUOqp-2rmKUm/s*<)r5TGNC%gmeQkdo%EHHS%#Rd"Kcc]5?lh(mO.hcZEn5UJuU'bXJ'#jAO/Q:cT9_AW_HL4+S[`"R`Y*Z#ef8":<'k^oFU5pan1CfF8TQk6K2F7!@8pZJ8%TeJ:IFcq^Vq2eCB\!8$o@P2NY'=YQ;>Jlg(,,jp-g5GDCGk1T&H!Zfb?69f;CTX,J*@oZ@dG0fC?#j^WU7f(jBeN40c3oYLB$,FF%PkOs8:qWTddQO&^TM^d0V*W4Tl49-Oie6<[9:DjHGZi18I7Pc`N3K_H.n%,eZEI"48t2OR!!t"_-pA]Yap_:r8OLM^_ilEid9q9%%`/JAi-`3pA97mi\eQkdon\aKmBWBNL=YGia?=3C6[ZrefA)Sl+fEjf6`21k1JY;iA-,"Q<i-6<g1DLo`93JG/]0:ARNAU4V=+6m@%*LC!(r>i^rLXA;uj0Qa/-07-i8pc!=[u1FA$@EpahO)56g.DU]6\A8?eK64([8Ton[c%VcVQ/Zf.I6YQmr^X^*@NEV2\,aNL-%\S%>@(JcA$j.MFI1E^48G4S>:!jo4A't6?K1KDPj.q/Ig]b\&N\\k7=YmXqq6n#\k?b@SZ#YqTefW=Q_h(@lQp!N237:JREIT_i=)qh%JkuX#I7QD=&G+IVS#PaV=iu'(?JnB15G%Eo"6504\7'1Ne=bk?l48tqiZ)Rel+`p(SLe<A4sVjA6rgF1j%6R:Vi.=+q:)&_6$8OB%?MhfZ`i[le=YGia?6>>t9;_!_8r*$Y`(ZG0Vj&]@#:HBqN:Pp=k(Eul$#sc<U0Kn#02q3UP+9G,'4!'trG_9k2&a=_W:!R;CCFWX%EKQV;cc]5?lU).<qUlJE*0r+0)3+0a6o2.sV#/7"1*W+;&OB,^h&I5f(mbd'b@qt?d36L`ig3<RrU-Z45]T0`#>0;^!:s+PUN9;[%p!T)tq@LHd8U@?4cH@*@S1BI(:Q5V(cW#CeU_cNTo,I4sZKn>9lh)EQ3L7h<lP.n=6Q4Q0T,IkW$`ZEfdYgc:2L8$Q<-,]'A\C8q%0TXFjUk/$Qr1W4?<Tlf&;?bSm.-\].IN.H??W;!W/7lM$0/9*6Xi/an>cGiO7nsLc'i][UU_d*I*j8A0WR^OEPkB@9`&8OY69(Q<%Gh6XKO][r>l,ePB&!Z_G,j+,2?Y?CM?CJ0+YH+PH/M5K(O)D0Jh#1EP6"tr9&!Z_?M-?jAm=H,*8jV%mo`C2DLl>DEWP=_<.CY(5%W+c4\TJSt-#>0=06r=oM6m^GX;qC:-''jIm7W'eKT53cV?Js49VZrt(W]s>.CZcaoY_AJpY*Z#efBXcQOg2FU(R]".&@<?(Km79-%2F7!@8p]m[W.LteRl]DOSsQ/kYLcFcp(=atQAA[uEV'i?mE[4IfEB]P836,@*=q4_MQW5AXOlbA*qq#i^3e3OZ&VS`g@/Cg$Gr!n%M<GEm4a&"tq/7IYLF/h;lNM/'<K6/97Z[#"34Wir-0!^0@_0HjT:M>],B5N"O(":!ldj8#>qAOc%4,uZA`R]n91)55,,jp-g1r&c%@W],Q4>0?AYLcFkfZ0tUMOS,9;!I"$Kfb#^6XT:+W:!R;CF=uL<s7W1=\=%S?6U$]km'p&S&DS[/Zed!d##FAWk4Mhg51[jEG./i%H!*ad]l%FHDF-%Q#sg$IiOKpY9uEJR%GgW6TXmd1YFWS/A':&+]I]nm5/^'sR$^3[38?fh&3ZW.,sg0qVYc>Afng$#&r070Gs7*?%4s/4K.8KrSZ.L/V1hk72)%qT\1Yl\s%qfJ#%bo5BcUT_0k<mfl4R>%*(%26bP0WBqi;]ic]$!VdNfr7&9+s`Apr^]VNn9UWku]s]%X,QC:,fO/e_51!aNM-+M-+ud<F:MlZU>of6lh)QF#a8X-31A9\3><,QJI[YpLBQ.58pcQATpE$\XHuFkY7J`P*(&29He68GW9\_u%EGA=ETXmd102@P%-;$R,09=Of+6');Ub'm6%kO7N<KE3\XW`73&QEs'mDXq14I]`U4>0?AY7I&LETPQf>"5=[HFaUr8tD[T!"#Qo%;VniSJYs<KXHS?se*GPX_DC1-^7;O6..WE_!CMIC$E/<5G1t'OTFsXhf#jbpf8$$?>YCmRcte3e\?MMB76V*ZH^+'[TZB[mj-fJN%/>^$da*j[V"TdnrnK?4$dT0'?\MP^';#Ps.?6&]2)0ur2*%srfYLcE05$nVaPI7.,GJqo^aRhM>b(ZFTmP2js-gNWgE:(me+,<]W%Y?,mpN\GA\:?U\oJl=/S>+QXs.]E>38["]5[C>0.A>Y7EALZs<Ef&b9s6fn;@QFGX59>=Pc[W_Eb]Uba),1]6AXq6aDN;Q+k-G!V%(H6flBda=:YbB,Vm&=kV+B9!,MBTg;U"T5XNuOoV)2oq-DH9?H!PuX46Re(G!eo0YgPa4s&e-<>gg>^9aC!G@b`tYR'MW?hXe?_\%,;#]brr`flj!Y3C23;0.?C"-Q->5Drm$DXNk/mUs6X(Ie7/nm.%t@HcClQr`JQhl7s)'q<ol/&XBXot-(j"01grSeH:MVLd@9LIP%mU&p85bDWam30WB2#[Y3oXE1.9'(/>*<Q8!GfsnB(G_j+==YVA&%tdVd/&Ym,&5+hf8;/qj%!YI\7KQR"iM&PipKG:&1F^ir7Vk/%Q)?)j<;,l9#pgjA+/*P;T'UrdC#L"4_j*3kF(cOSLrYt$nMiFA^<3_?TbY46.rL3+D9:Mqo0hcbQA64lS=X5"%DK,NUJY:G7\?l6%K-&^te2Ta%BGnQJ)Wc$L`uB2s"GIK?o3\G$AlH\g#CRGr>=_I#W=5oWkq=@s"b'=r!_Oi=a-/O[``P9.QqE&MR-;`AZ)U,'9jZr=%AnmT`9O\hl2RX4eer7Xjg[P:c02@NHcgi\?S1e]WUOHTd@hE3Y$ac-b38YE`)agQ.*5BbY:Y3foW8kp6r'A,,I;(,=D6"$dl-l[s%hQ7VfNt@r'X2%9nKuRcca/j-jq.TmkVN2aiR.2&fJ+NFlXSb@K5"We!OH7iE`n-2rG54I/65uQ@7#<hBn%<Jso1NA(,iKl45N`U\%U$-D9ij^$Lhhm9jeJRnfDM/R'UWPI.^2Vj7'&WHdJU2pU2Nl(\g+["Hmj&T(N-F&s!NRC8)"$@=YN%rn]F$cjI)4JY?Or31<R(e8%Q2J..i\sRH+>N'No"'u)^4\7Kr/N]b8sSr3e(`t#?*61D,Apa/qhraMO/kVnXbA&0X\a0Hg>+RbFN=6W7Olc(CfZR3C8Nq/>QRdW%nWcBrSeLfd9,ZIR-rW[k'*#b&[SbL/\r"E;N._rrj@)j5Ni0nG>k*qlHjuiLhO;_ck/hHJ7=Ut1\1opc]N4;!>N;]bOfo&V[a\5C%7Q.ChlcN:cmCMR&=/:i5f8%omb,7KY4MNBVXTZ;?;3QJ,g4kp9b,)Z-pa-t!rAnlu4Kc)#r!pl(^5<XKh73uSC3QZU^5Nm+G[3:_%TQ0`,CWFTnqFpGAj$h_l?9ot(`p7K+H,NnB`Z%9pBE.hGJ+7FrlMonQiRbjC_k6qQJ&qZWDu]gOs8)?eq>Dsro/D0oe"?X2TE"?R%s8&'Hs3L`<qd9?lGQ7I$rV&PUq="@_+9(NNs7H3g55sW(J+o;es7)`\i@htGnK7eO5Q!=%j0,!JTDnJls68G@iVrtjh!IT~>%AI9_PrivateDataEnd
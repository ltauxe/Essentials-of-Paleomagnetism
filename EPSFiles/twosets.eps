%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: twosets.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Lisa Tauxe
%%CreationDate: 1/8/09
%%BoundingBox: 0 0 658 259
%%HiResBoundingBox: 0 0 657.5821 258.3418
%%CropBox: 0 0 657.5821 258.3418
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 52 8%%BeginData: 6722 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD48FF7D7D52A8FD5CFFA8FFA8FFA8FD1BFF527D52A8A87D7D7D52%7D7D7D527D7D7D527D7D7D537D7D7D527676764B76767670767676707676%7652FD08767D7D7D527DFD13FFA8FFA8FFA8A8A8FFA8FD0BFFFD0DA8FD17%FFA8FFFF7DA8FD0BFFA8FFAFA9CAC3C3A0A0C3C3CAA8FFCAFFCAFFCAFFCA%FFFFFFA8FFFFFFCAFFFFFFCAFFFFFF7DFD10FFFD05A8FFA8FFA8FFFD07A8%FFFFFFA8A87DA8A8FD07FFA8FFA8A87DA8A8FD17FF7DA8FD0CFFCAC39BC3%C3FF83FD1CFF7DA8FD0EFFA8A8FD0EFFA8A8A8FF7DA8A8FD0FFFA8A8A8FD%16FFA8A8FFA87DA8FD07FFBDC3A2A9FFFFFFAEAEFD1BFF7DFD0CFFA8A8A8%FD13FF7DA8FD13FFA87DA8FD0DFFA852FD05FF7DFFFF5227A8FD06FFBCC4%FD06FF83FD1CFF7DA8FFFFFF7D7DFD05FFA8A8FD0BFFA8F8FD09FFA8A8A8%FD13FFA8A8FD0CFFA827A8FD04FFA8A8FFA8A8FD06FFBDCAFFFFA9A9FFFF%FFAEAEFD1BFF7DFD04FF2752A8FFFFFF7DFD0DFF7DF8A8FFFFA870A17DFD%04FFA8A8FD0FFF527DA8FFA87DA8FD0AFFA827A8FD04FF7DFD09FFC3BDFD%04FFA9FFFFFF83FD1CFF7DA8FFFFFFA87DFFFFFFA8FD11FF7D5220452069%A8FD05FFA8FD0EFF5227A8FFFFFFA8FD0AFFA87DA8A8FFFD04A8FD07FFCA%C3FD09FFAEFD1CFF7DFD08FFA8FD11FF7768F827F82076FD07FFA8FD0DFF%A8A8A8FD04FFA8A8FD08FF7D527D277DF87D7DA8FD07FFBDCAFD05FF7FFF%FFFF83FD1CFF7DA8FD06FF7DFD0FFFA8FFFFFF76A8A8F82076A1FD06FFA8%A8FD14FFA8FD08FFA827FD047DA8A8A8FD06FFCAC3FD0AFFAEAEFD1BFF7D%FD06FFA8FD10FFF852FF7DA8FFFF4C4BF876FD07FFA8A8FFFFFFA8AEA7AE%A8FFA8FD09FFA8A8FD07FFA8F8A8FD04FF7DA8FD06FFBCFD07FF7FFFFFFF%83FD1CFF7DA8FD04FFA8FD11FF27A8FFF852FFFFFF58F87D9A4BFD05FFCB%C4C4FD04FF4C7DAEA8FFA8FD09FFA8FD07FF5252A8FD04FFA8A8FD05FFC3%CAFD0BFFAEAEFD1BFF7DFD04FFA8A8FD0CFFA8A8FFCB7677AFFF522759FF%FF27F8846F6FAFFD05FFC3C4FFFFA8AE217DA8FFFFFFA8FD09FF7DFD06FF%7D27FD05FF7DA8FD04FFCAC3FD08FFA9FFFFFF83FD1CFF7DA8FFFFFFA8A8%FD0CFF7DF8FF7744F87DFFA1F82727A8A852A8FFA8FD07FFA8FFFFFFA8AE%A8FFA176A8FFA8FD08FFA8A8FD05FFA87DA8FD04FFA8A8FD04FFC3CAFD0C%FFAEAEFD1BFF7DFD04FFA8FD0DFF7D52A820F852A852F8F852057DFD0DFF%A8FFFFFFAEAEFF7744A8FD0BFFA8FD05FF7D27FD05FF7DFD05FFBCFD09FF%A9FFFFFF83FD1CFF7DA8FFFFA8FD11FF2777FFFF52F8F8FFA8A1A1FD0CFF%A8FD04FFA8FFFFA2FFFFAEFD09FFA8FD05FFA827A8A8FFA8FFA8A8FFFFFF%C3CAFD08FFA9A9FFFFFFAEFD1CFF7DFFFFA8A8FD12FFCAFFFFFFA8A8AFA2%447684FD0BFFA8A8FD04FFA8FFFFFFA8FD0BFF7DFD04FFA8527D277D27A8%7DA8FFFFFFC3CAFD09FFA9FFFFFF83FD1CFF7DA8FFFFA8FD17FF272077A2%4BF87DFD0BFFA8FD05FFAEFFAEFD0CFFA8FD04FF5252FD047DA8A8A8FFFF%FFC3FD09FFA9A9FFFFFFAEAEFD1BFF7DFFFFA8FD18FF2720A1FF7DF8A8FD%0CFFA8FD13FFA8FD04FF7D52FD05FF7DA8FFFFC3C4FD0AFFA9FFFFFF83FD%1CFF7DA8FFA8FD18FFA870A8FFFFCAA8A876A2FD08FFA8FD14FFA8A8FFFF%FFA852A8FD04FFA8A8FFFFC3CAFD0AFFA9FFFFFFAEAEFD1BFF7DFFFFA8FD%19FFA8FFFFFFA869444470FD09FFA8FD13FFA8A8FFFFFFA827FD05FF7DA8%FFFFBDFD0BFFA9FFFFFF83FD1CFF7DA8FD19FFA244A1FD04FF70A17DCAFD%1EFFA8FFFFFFA827A8FD04FFA8A8FFC3CAFD0FFFAEAEFD1BFF7DFFFFA8FD%17FF7D697DFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8A8FFA8%A8FFA8FFA8FFFFA8FFA8FFA8A8A8FFFFFFA87DFD05FF7DFFFFC3A8FD0BFF%7FFFFFFF83FD1CFF7DA8FFA8FD15FF7DA8FF52FF7D69767DFFFF7DFF7DFF%A87DFF7DFF7DA87DA87DFFA87DFF52FFFF7DFF7DA8FF52FF52FF52A8A8FF%FFFF7D52A8FD04FFA8A8FFC3FD10FFAEFD1CFF7DFFFFA8FD14FFA8F87DA8%7DFF7D44A152FFA87DFF7DA8FF52FF52FF52A852FF7DFFA8A8FF7DA8FF7D%FF7DA8A87DFF7DFF7DA8A8FFFFFFA8277D52A852A87DAFCAC3FD0CFF7FFF%FFFF83FD1CFF7DA8FD17FFA8FFFFA8FFA8A8FFA8FFFFA8FFA8FFA8A8FFA8%FFA8A8A8FD14FFA8FFFFFF7D7D7D527D527DA8A8FFC3FD10FFAEAEFD1BFF%7DFFFFA8FD19FFA8FD07FFA8FD09FFA8FD13FFA8A8FFFFFFA8F8A8A8FFA8%FF7DFFC3CAFD0CFFA9FFFFFF83FD1CFF7DA8FFA8FD2AFFA8FD14FFA8A8FF%FFFFA827A8FD04FFA8AFCACAFD10FFAEAEFD1BFF7DFFFFA8FD2AFFA8A8FD%13FFA8FD04FFA827FD05FF7DAFC3FD0DFFA9FFFFFFA87D52FD1AFF7DA8FD%2CFFA8FD14FFA8FD04FFA852A8FD04FFA8A8C3FD0CFFA9A9FD04FF5252F8%7DFD18FF7DFFFFA8A8FD28FFA8A8FD13FFA87DFFFFFFA87D52A8FD04FF7D%CAC3FD0DFFA9FFFFFF83FFA8527DFD18FF7DA8FFFFA8FD28FFA8A8FD13FF%A8FD05FF7D7DA8FD04FFA8A1CAFD0CFFA9A9FFFFFFAEFD1CFF7DFD04FFA8%FD27FFA8FD14FFA8FD06FFA8A827A852A87DA1CAFD0DFFA9FFFFFF83FD1C%FF7DA8FFFFA8FD27FFA8FD14FFA8A8FD07FFA8527D52A8A89AFD0EFFA9FF%FFFFAEAEFD1BFF7DFD04FFA8A8FD24FFA8A8FD14FF7DFD09FFA8FFA8FF7D%9BCAFD0DFFA9FFFFFF83FD1CFF7DA8FD04FFA8FD25FFA8FD13FFA8FD0EFF%A89AFD07FFA87D7DFFA8A8A8FD04FFAEAEFD1BFF7DFD06FFA8FD23FFA8FD%13FFA8A8FD0EFF7D9AFD08FF27522752F87DA9FFFFFF83FD1CFF7DA8FD06%FFA8FD21FFA8FD13FFA8A8FD0FFFA19BFD09FF7D7DA87DA8FD04FFAEAEFD%1BFF7DFD07FFA8A8FD1FFFA8FD13FFA8A8A8FD0FFF76A1FD0EFF7EFFFFFF%83FD1CFF7DA8FD07FFA8FD1EFFA8FD13FFA8A8FD0DFFFD04A8A1A1FD12FF%AEFD1CFF7DFD09FFA8A8FD1BFF7DFD13FFA87DFD0EFF277D527D76A1FFFF%A8FFA8FFA8FFA8FFA8FFFFFF7EFFA8FF83FFFFFFA8FFFFFFA8FFA8FFA8FF%A8FFA8FFFFFFA8FFA8FFA8FFA8FFFF7DA8FD09FFA8A8FD19FFA8FD13FFA8%A8FD0FFF7D7D7DA8A876FD307DFD0CFF7DA8FD14FFA8A8A8FD12FFA87DA8%FD16FFA8FFFFFFA8FFFFFFA8FFA8FFA8FFCFFFA8FFFFFFA8FFA8FFA8FFA8%FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA8FFA8FD0CFFA8A8A8FD11%FFA8A87DA8A8FD0FFFA8A8A8FD16FF7D52FD0AFFA8F8FD0AFFA8527DA8FD%09FF5227A8FD09FF527D52FD0CFFA8A87DA8A8FD09FFA8FFA8A8A8FFFFFF%A8A87DA8A8FFA8FD05FFA8FFA8A87DA8FD18FF7D52A8FD09FFA827A8FD09%FF7D2752FD09FFA85227A8FD08FFA8525252FD0FFFA8FFA8A8A8FFA8A8A8%FFA8A8A8FD09FFA8A87DA8A8A87DA8A8A87DFD1DFFA8FD0BFFA8FD0BFFA8%FD0BFFA8FD0BFFA8FFA8FD12FFA8FFA8FFA8FFA8FD11FFA8FFA8FD31FFA8%A87DFFA8FD04FFA8A8FFA8A8A8FD71FFA8F8525227275252527D527DA827%FD72FFA87D7D7D527D527D52A87D7DA87DFDFCFFFD17FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreateDate>2007-02-12T00:42:59Z</xap:CreateDate>
         <xap:ModifyDate>2009-01-08T13:42:08-08:00</xap:ModifyDate>
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:MetadataDate>2009-01-08T13:42:08-08:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>104</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAaAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYqpXN3aWsfq3U&#xA;0cEdePOVgi1ParEYqhBrcMkgitra5uHILbQtEvEECokn9JD9rs1Tirf6Suuap+i7qrKWrW3oKU2J&#xA;9brviq39NIkhjuLO7gcBWH7lpgQ1f2rf1gKU7kYqi7W+s7tS1rOkyqaP6bBuJ8Gp0PscVW32o6fp&#xA;9ubm/uYrS3BAM07rEgJ6Dk5AxVLz5k9VS9jpd/fRqAWdYVtwK9OIvHti+29UBxVcbzzOUDpplqKk&#xA;USS8dXAJpVuNu67ddmOKuk1PXbfefRzcA0C/UbiOU7mnxC4+qUp3pXFWl806QsiRXrSabPI3BI75&#xA;GgVn68Elb9zI1BWkbttiqb4q7FXYq7FXYq8z0b8pdVs9a0TULrVoJU0aW4eNI7eRZAk1xNOEileZ&#xA;+HqfWOE2x5qijbFU30yLztraXd9D5iSwgF/f2sNotjFKEjs7ya2T43bkxKwgn3xVF/4e89/9TaP+&#xA;4dB/zVirv8Pee/8AqbR/3DoP+asVQ15pvnHT7aa71DzrDa2kW5nlsLdEVaD7TM4HWuAkDctmLDPJ&#xA;IRgDKR6DcpHY6h+YF/aWx0/W5r+8eFJLoR6ZBDbRMy1IFxO0aSfF09Pkab9Mcs48ZELkLNdNvi5o&#xA;7OMReWUcfx4j8o2R8aVdOs/zpvYjL+m7CCMSzRVaJXcejK0W6LDx/Y/nyqMpkch8/wBjTCOmqzKZ&#xA;NnlAd/fx/oTKLy5+a7BjL5ytYzX4VXSo5PhoOpM0fevbJ+ryQZYB/DM/5wH+9Kp/hr80P+p1t/8A&#xA;uDx/9lGNS7x8v2rx4P5s/wDTj/iHDy1+Z1d/OsFPbSIgf+T5w1Lv/HzQZ4ekZf6Yf8Q2vlr8zaty&#xA;86Q0r8NNJh6UHX9941xoseLF/Nl/pv8Ajrf+GvzK/wCp0i/7hMP/AFWxo968WL+bL/Tf8dVYvLn5&#xA;hAH1fOCOexXTIF/XI2EX1a5mJ+kEfG/0BX8tzeYIPMeq6Pq2pLqaW9nY3dvMLdLdlNzLdxupCEgj&#xA;/RlIwsEN58/MvRvJ1xp1peRvNeal6rwxL8KiG2Ae4fmQQWWMkog3Y7bdcVZc7oiM7sFRQSzE0AA3&#xA;JJOKpY9zqOoKP0ay29oxX/T3HJnSo5GBCOO6/Zkao/yWXfFVeDRtOhnW59ES3i7i7l/eTbgqaO1S&#xA;BQn4RQeAxVG4qw382PzCbyF5UGupp0uqObu3tRbRA9Jn+Iswrx+AFVND8ZUd8VZV9ftk079IXDfV&#xA;LVYfrEz3P7n0owvNjLzpw4j7VemKQL2DH7PzH+XHmHUIhYaxpt9qkimOA2l3F9bKR82KxmJxNx2c&#xA;/DtSvbFnLFOO5BV4NI/Rl5Nf3UX6T5lqXslZbuGNuqAHYxdTxiC06cWNWxa0+hmhnhSaCRZYZFDR&#xA;yIQysp3BUjYg4qvxV2KrZYopUKSosiMCGVgCCCKEEHxBpirDdC1PQtQkVvJGrRMiwC5OlkSGzeNm&#xA;KAJUVtyrIVZYvsE1eM1FVWSaXrVvfvLblTb6ha0F5ZSEc4ywBBqNmUg7Mu301GKphirsVYD5u836&#xA;5pn5leVNCtZrddK1cTi7jfkJ2eOhX0/3cgcU6hSvHqxApirPsVYVpmm6pqfkXV7DSr86ZqFxqWsp&#xA;BfBSxjP6XuSfssjDktV5KwZa1G4xVHflz5a1Xy55cOnalPHNN9ZnmRYS5jjSVywVS/xbmrkdi1N6&#xA;VKqba/rcGj6c91IhmmY+nZ2af3lxO393DGN/iY/cNzsMhOfCLcrR6WWfJwjYc5HpGPUn3fsQWk+W&#xA;EW4Gq636Wo66x5i4ZQ0dsK1WG0DCsaL05fac/E3gIxx9Zby/HJv1GvJj4eG4Ye7rLzn3k93KPIeZ&#xA;joaRpounpFA9rGttCEtZa+pEojAEb135L0Ncy9SSckiTxHiO45Hfm60Keg/7wy/8xd7/ANRcuYuP&#xA;l8T97DFy+J+8pjljY7FXYq7FXYq7FWPWP/kwda/7ZOlf9ROo4qnN7p1hfRrFe20dzGjpKiSorgPG&#xA;4kRgGB3V1DD3GKoKItq0zPJGw0uIg24bjxuW6+pQEkxr+yCBX7W444qmiIkaKiKERAFVVFAANgAB&#xA;ireKuxVIbTzv5cu/ON/5PgueWu6dbRXlzb02Ecp6A92UMjMPB196KvF/NH5NecvzA806nNJ5we48&#xA;pQ6k00FulxJNGWV5Y57RYORjt5bXiYq8SGDV68lxc3LnxnHARjw5I3Z7+Ve55F+Rl/F5W/Mqwm81&#xA;2F8bye9ksrC3CKCmoyMls5kDlWPpLK4dFBPLh3xc3JmyTwETmLnLiNkd1ivf190etPuPF0qVzQHT&#xA;HSexgJs2al3awheKLQkzIlV3B+0qAluwJxVM0kSRA8bB0YAqymoIIqCCMVQs2q2EMoieQ8y3pgKr&#xA;sC4UuVBUEcgqliOoG+DiCOIIpHSRFkjYOjgMjqagg7ggjClivlT8tPLHlbUZb3R0ljMsRiEUkjSq&#xA;vMp6jAvV6ssESbtQBBSm9VU91XTfraLNA/oahbhms7kCvFiN1cbco26Mtd+xBoQq3pWoNeQN60X1&#xA;e8gb0ru2ryCSAA/C1F5IwIZWoKg9AagKo3FXkfn6XU7X83fLsVmkDrq1vJCLh7K0drOZQRHcNduG&#xA;nUt9lEoAx2B6jFVtl5J/N9ZvLayav6VrpuofWtRT9JXVw0lu0kBeJ3eNWuAUhn4rIeI9UAD4AQqz&#xA;vyEJBo15yYFTq+s8AAQQP0rc9TU13+WKsjxVjegoNZ1WbzJL8VtEZLTQ0IFFgBCzXA78p5E+E/77&#xA;VafaOUw9R4vk7TVnwMYwD6jUsnv/AIY/5oO/9InuDJMudWgdCdH0PTnS4e7RraErdSVDygxikjBi&#xA;Tybqa5fqRWWVjh9R27t+SAs0H/eGX/mLvf8AqLlzEx8vifvYYuXxP3lMcsbHYq7FXYq7FXYqxzTx&#xA;IPzD13mwIOlaVwABFB9Y1HY7mpr8sVTPVfWuDHp9uQGmo9yzcqC3VhzWq0o0leC/Sf2aYqmAAAoN&#xA;gOgxV2KuxV5Nefnbf6cv5hTaxo7abY+VJBBo97Mshju5nQrFGwHxMZJAJKx7CNxypTkyzxx4j+OT&#xA;DPyQ/MS51nXvNPnzzN5etrG1/Rkc83m6GCaHmlqeD249WSZXJ4U/dUqYwG5fBRbNQMYlWMkxoc/d&#xA;v8uTAvy9/OC68gal5qh8r6XLrPkSyMl8ZJHPq87p4YLSaWYrRA3wr6fEGhNalcWqVdHrWv8A5XeY&#xA;vN35teTfzFspYIvLdvBbXj6dexGO5t2BNwVMKihkdpAeRaqv1qFFViy38pfytuPIj680+oG/OqXK&#xA;NAxLV9CENweXl/u9zK3qEbGi4uZrNX43D6RHhjW3Xz9/e9BZeSlSSKilQaHfwIxcQGmOeVdGOh3N&#xA;xYyelW4USWzQIIw0cFIy0iqAPVPJWd+/LiBRMXO12s8cg77d5vn0H9EdB8eZKQ+efIl9rGueW9WX&#xA;Ubqyi8tX018iWnp8bj6y6ELKZHTh6ZBVtm5Rsy1XkaQJIdaSQpX3nrRdE856V5HuNKu5tU1QiY30&#xA;RWkYuHlIPqclmfh6dHZRQLXfamMYinLw6CUsMstjhjz3335ebP7J5iJYpTzaB/TEuwLrxVwSB3o1&#xA;D777dMkHGCIwpSbV1aw1CDWkbjAoFtqSAHeB2+CViP8AfDmtTsqM5OKpziryPzDpegn8+tFuEbTz&#xA;qTWvr3NvLBEl6XUrFHPHP9QuHkCoOHE3MdKjftir1zFWPeRP+OJc/wDbW1n/ALq11iqp5plnnFlo&#xA;ltK0U+rSlJ5YyyvHZxD1Ll1Zd1LLSINX4WcHK8h5Dvdj2fER4s0hYxjbuMjtEf76uoiQnNrbW9rb&#xA;RWttGsVvAixQxKKKqIOKqB4ADJgVs4OTJKcjKRuRNn3qmFghdKMx0uzM8kUs5gjMssG8LPwHJo9h&#xA;8BP2fbLc9ccqBAs8+fx81ChoP+8Mv/MXe/8AUXLmNj5fE/e14uXxP3lMcsbHYq7FXYq7FXYqx6x/&#xA;8mDrX/bJ0r/qJ1HFUx0xGku76+aUus0noQx7URLYtGRsOpl5t16UxVMMVdirsVS7zF5f0rzFod7o&#xA;mrQi40+/iMM8ZAOx3DLUGjIwDKexAOKYmjaGn8meWZ/KT+UnsIx5fe2+p/UVHFRFSg4kbhh9oN15&#xA;b9cUEvABqvk/8tvzT1D8vPKvl24RvMR060udWmuC31Y3REaNbRSJKrpGZ1cF2H7zkCeIWi5Onwmf&#xA;FLpAWfx5pn5Q83fmB+X/AOYOjfl/r1vda/J5ineWXUHmluWjiH7iOSB5Gkb00WAzTBz8KNSgKkut&#xA;2syY8hEscRCNchfOvPz+zvfQ2LgOxVAaujLFDeK7J9RlE7gcaGOhSXlUE7RuxHGhrT5YqjZI0kja&#xA;ORQyOCrKehBFCMVS5tKP12C9aGC7u7RJYrK7mqs0STcfUTmFevL01qRTp3yO6ASBSNtYGiVy7+pL&#xA;K3ORwOIJoFFFqaAKoHXCAoCthSpXdrBd2k1pOpaC4jaKVQSpKOCrCooRse2KoPy9NPJo9utw5kuY&#xA;OdtPKTXnJbO0DvU/ztGWxV5d580/VdW/N/QmttL5folfTtdWk06/cwvdQuzSx3cdLHjAyISJTWrF&#xA;VWv2lUdonlb84bSby+kupw/UbK9kuNTimvbm7eSCQRp6bTSRrLKFUTuis3EPIn7MeKsx8hCQaNec&#xA;mBU6vrPAAEED9K3PU1Nd/liqrpAW+8yatqZq8drw0y0b9kCP95clfnK4RveOnbKo7yJ+DsdT+7wY&#xA;8fWXrPx2j/sRY/rJ9lrrnYqg9EQpo1ghtvqZW2iBtKlvRogHp1O54dMu1BvJI3xeo79+/P4oCloP&#xA;+8Mv/MXe/wDUXLmLj5fE/ewxcvifvKY5Y2OxV2KuxV2KuxVjmniQfmHrvNgQdK0rgACKD6xqOx3N&#xA;TX5Yqmmgpw0Wy+JmLQo5ZjU1ccjv8ziqPxV2KuxV2KuxV5do/mHSfOH5t3mm6j5VMF/5NE7WWtyy&#xA;MzAl1iQPF6aKomVzNDydthyWhri5+TCceGMhMEZP4RzFd/6O9lH5i6dr955W1CXytIkHme3iIsLo&#xA;LGZghkjlngjd1fg08cQUduXEmlKhcfTSgMg4xcL3Yd+V3kL8ztK8zjWfNmv3F9bNpyKLSS5klH1i&#xA;YIHieMkxAwCEVkRRzLA1+1VcvVanDOHDjhwniO/Wunl9m/39axdapXlrHd2k1rIWEc6NG5U0bi4o&#xA;aHtscVQunalDLa6etxPGt9e24mSEsFd+KqZGRDQkKXFaDaoxVVk1bSo7e8uZLyBLbTuf6QnaVAlv&#xA;6aCR/WYmkfFCGblSg3xVVe7tY7mK1eaNLmdXeCBmAkdY6cyik1YLzWtOlRiqkdW0oW8lybyAW8Uv&#xA;1eWYypwWYSel6TNWgf1Dw49eW3XFXXGraVbLdtcXkEK6fF9YvzJKiiCEhm9WapHppSNjyag2Phiq&#xA;E0SNYrzWo0rwF9yAJLUMltBI1Kk9XcmmKsJ84Wtzdfm95QmhsNUlhsUuBc3ls80NjH6i1T6xxilS&#xA;XpSgKbn4mptir0vFWKeWNQh07yjqmoT/ANzZ6hrtxL2+GLU7t26+wwSNC23T4TlyRgOciB8zSb+V&#xA;9Pm0/QLK2uCWvDH616x/auZyZrht/wCaV2ORxxqIb9fmGTNKUfpuo/1RtH/YgJpk3DdiqB0I250P&#xA;TjbtK1ubaH0Wnp6pT0xxMlP26fa98v1N+LK6viPLlz6eSAs0H/eGX/mLvf8AqLlzEx8vifvYYuXx&#xA;P3lMcsbHYq7FXYq7FXYqx6x/8mDrX/bJ0r/qJ1HFUy0BFTQtOVSSotoqFmLH7A/aYknFUfirsVdi&#xA;rsVYX5x8n+atY8y6Fqmla4mm22lPK7QvbJMytLbywmRC32i3qBSrUAG432xVWk8lTPF573hW482O&#xA;fq86VWRYhpVvYokrheQ4SxSMvGtA1RuSMUiRDFfy5/Ji/wDKMehF7yGaay1G7v8AUFjLrFxmsns4&#xA;hAnEDlQozkgd+wXFy9drPHnxcIjsBQFe/wCbJNX8k6ne6D+YenxzQrN5u9f9HsxfjH6uj22nL61F&#xA;JH723ZjxDfDTvti4adXeiXM3nPS9cV0FrY6dqNlLGSfUMl7PYyxsopTiBZvy37j3oqkOk+RdUtdK&#xA;8n2c80Jfy/qNzeXpjeSjxz2d9bqIm4q3INeod6bA79Kqt+RvJc9jpXlS5ubhfX0exuoTFGCySfXn&#xA;jkB5txI4CP8Al3r96qOv/IyXfl/zfo/1woPNf1vlN6dTb/W7NLQ0XkOfH0+XUV6e+Kpre6ELnzFp&#xA;msmbidNgu4BBxrz+tmE8uVduPoeG9cVSqXyMkmgX2kfXCBe6odVM3p/ZLX633pceW/2eHKvvTtir&#xA;te8jJq0PmuI3hh/xRpa6Ux9Pl6AWK4i9UfEOf+9NeO3Trviqa6OiLf63xULyvVLUFKk2dvucVeSf&#xA;mUkUf53eVLmBbqz1eVJILNllha3vCsZeP1IhcRzLHHISHPpNt4bNiqe6Nffna6aFFcWf7gakG1y6&#xA;vTaJdGwZQOKpbBoKrJzNVo3AJ3ZiFUytS8nk25s3UcL7zFe2gCsSXhl16YTg1FB+657b5Vl5V3kO&#xA;w7M2y8X8yE5fERPD/sqegZa692KuxVB6M7yaPYvJcC7ke3iZ7pRRZSUBMgG2z9cu1AAySAHD6jt3&#xA;b8vggKWg/wC8Mv8AzF3v/UXLmLj5fE/ewxcvifvKY5Y2OxV2KuxV2KuxVjmnmQ/mHrvNQANK0rgQ&#xA;Saj6xqO52FDX54qmmiIsNkbQEk2kkkPFiWZUDExAliT/AHTIcVR+KuxV2KuxV2KuxV2KuxV2KoHW&#xA;yx0m5jR2jlmT0IXRjGwlmPpxkOtCvxsNx0xVGoiIioihUUBVVRQADYAAYq3irsVdirTukaNJIwRE&#xA;BZ3Y0AA3JJOKpV5XSM6SLxFAGoyy3wagDFLmQyRcqftCIop+WKvO/PfC4/OjyZJbzPctZmS3urSK&#xA;CSdIXmUzI8sqOkcDmOMsokqWXdR3xV61irAvLvK4n0qyH2YtZ8xajJU9Vt9RubcLT/XvVb/Y5XPe&#xA;QHx/HzdhpvTgyz7+GH+mPF90CPiz3LHXuxV2KoXSRIulWSywx28ogiElvBT0o24CqR0qOKnYU7Zb&#xA;nrxJUSRZ3PM+/wA1DzHzL5s/MTyxez6npujTa35VtzPNNa2ao11JdNqFzbtAoAeTiRNFMWC7emRW&#xA;hOY2Pl8T97Xi5fE/eXpmi39xqGj2N/cWr2M93BHPJZSmskLSIGMT7D4krRvfLGxGYq7FXYq7FXYq&#xA;x6x/8mDrX/bJ0r/qJ1HFUbM1rp2rG5k9OGLUgkLzMQtbiOoiUnuZFYgVIoVA3LDFU0xV2KuxV2Ku&#xA;xV2KuxV2KuxVLJDa6hqkUaenMmmOZJWHF+FwylESu9GVGLMOoqvjiqZ4q7FXYq7FUo8wTessWixF&#xA;hcaoHRmAJ4WyU+sScqEKeLhFr+2y7UriqbKqqoVQFVRQAbAAYqkOr+T9Iur9tbituWtwgS2rNNOk&#xA;DXEKMsEk0EbrFIU50DOpYDodhirDtCv/AM3HbQINSt72NTqDtql3LHpzFrL0xRJ1hNB+95hTDxIT&#xA;gxLGqsqmP5ferNrupmRQEspdTEJqSaXeuX3M04ilTaCu56DK/wCP4fj7nYHbSD+lkP8AsYx/4tn+&#xA;WOvdirsVQOhRxx6Hp0ccMltGltCqW81fUjAjACPWnxL0Pvl+pJOWRJB9R3HI78wgLNB/3hl/5i73&#xA;/qLlzEx8vifvYYuXxP3lMcsbHYq7FXYq7FXYqxzTzIfzD13moAGlaVwIJNR9Y1Hc7Chr88VT67tk&#xA;ubd4HLKHGzoaMrA1VlJrupFRiqG06+mlkmtLmMx3drxEjbBJVYHjLGKluLU79DUVNK4qjsVdirsV&#xA;dirsVdirsVQmo35tFiWOE3FxO/pwwqQN6E8nJ3CD9pgDTwxVfY2YtYOBcyzOS887fakkbqx/UB2F&#xA;ANhiqIxV2KuxVD6hew2NnLdSmixgUHxEs7EKiKFDMWdiFUKCSTQAnFULpFpcl5NT1CMR6hdKq+jU&#xA;N6EK7pAGX4SQSWdh1Y9SoWiqZYq7FXYqwL8qUDyea7lvtrr+o2g/1IruWYf8NctlcPqkfxydhqjW&#xA;HDH+jKXxM5R+6IZ7ljr2G/mF5L1nX5tNv9H1FbO90oXDLbSqxguWb054I5ipBEa3drAz7Gqhl74q&#xA;x2z8r/ndNrGj3moeZYo7OCVW1G1h9KrwhoS0Z426I5bjJ8XFSO1AcVej6HIsmi6fIlw12j20LLdS&#xA;Ah5QYwRIwO4LdTl2pFZJCuH1Hbu35ICnoP8AvDL/AMxd7/1Fy5i4+XxP3sMXL4n7ymOWNjsVdirs&#xA;VdirsVY9Y/8Akwda/wC2TpX/AFE6jirIcVQ17ZC4CujmG6iqYLhRUqT1BH7SNT4l7+xAIVQ0Gqrb&#xA;CK11V1gu2KRJK1FindjxX0m2HJj/ALr+0PcUJVTLFXYq7FXYq7FUDNq0PrPa2YF3exnjJCjACIkA&#xA;j1m39MUaor8RH2QcVb0+wkgUTXc31q/ZAs1zx4DxIjSpCLXt95OKo3FXYq7FUv1HXbKxnjtCJLnU&#xA;JkLwWNuvOV1Ugcj0RFqac5GVa98VUrDTLx7v9I6rIJLoEm0tENYLUMvBuBopeRhWsjDoSFCgtyVT&#xA;XFXYq7FXkdl5J/N5LHTrabV/igvVuJpf0ldSOo4QI7s7R8p09SGeUW70j/fBNhGMVT7y/aecfLb6&#xA;xb2+gJfxX+q32ordLfRxBlupy8fwOlVIj4g++REavzbsubjER/MjX2mX3lNv0/56/wCpUX/uIw/8&#xA;0ZJpd+n/AD1/1Ki/9xGH/mjFVq6/59q3LyolK/BTUYa0oOvweNcVUrDWvzAhsbeGfyrE08cSJK0d&#xA;/AiF1UBiq8PhWvQZZlkDMkcr6qs07VPPlpbvE3lZGLTTzVGoQjaaZ5QPsdudMpjGgxhGh8/vRC6/&#xA;59q3LyolK/BTUYa0oOvweNckyXfp/wA9f9Sov/cRh/5oxV36f89f9Sov/cRh/wCaMVWrr/n2rcvK&#xA;iUr8FNRhrSg6/B41xVd+n/PX/UqL/wBxGH/mjFXfp/z1/wBSov8A3EYf+aMVXeXIPME3mPVNY1bT&#xA;k01LmzsbS3hWdbhmNtLdyOxKKoA/0pQMVZNirsVWTwQXELQzxrLC4o8bgMrDwIOxxVL30zUYWjOn&#xA;6g6RoxL290PrKMCDUeoxEw3Na8zTwptiq/67rEcgE2miRGB+K1nSQg7U5CYW/v0rirZ1K+5gDSrk&#xA;rRiW522xBFBT1u++KtfXtXeQpDppRQtRJczRoCakFaRfWD0oRtiqz9H6ncOWvb4pCygfVLQekB1J&#xA;5TGsp6j4kKdOm+KqVx5V0tg72Jk0q5cENdWDCFySKcnUhopW8DIjU7Yq08Xm63QiCay1DaifWFkt&#xA;XX/Kd4/XWQ+yxpiq9tS16PaTRzIagVtriJ1pyFT+++rn7Pt1+/FWmvPNEi1g0y2j3Xa5u2VqVHLa&#xA;KGVenT4uuKrW0nXLwr9f1UwxKam306P0OVQQySSyNNIRvsY/TPf5Ko/T9L0/To2js4Vi9Rucz7tJ&#xA;I/8APJIxLyMe7MScVRWKuxV2KuxV2KsS8leRZfLera9fvei6GsTiVUWP0ztNPN6kzcm9Wci5ERfb&#xA;4I4xTbFWW4q7FWGeVPy6TQPO3mbzMlyj/wCI3jeSBEdWBjrQyM0jq3HkQvBV261OKsrvtS06wjWS&#xA;+uobSN+QV55FjUmONpnoWI+zFG7nwVSegOKtQ6lp0yJJDdQypJI0EbpIrBpULB4wQd3Uo1V6ihxV&#xA;57aflXc2H5g3fnO51iFbRrt770PSZXhiFvJE0azvKQqSmbnP8NG9OPpTFXoFxq+k29vHcXF7BDbz&#xA;I0kU0kqKjokZlZlYkAhY1Lkj9kV6YqiwQwDKag7gjoRirzLUvyfuNQ/My285S6jCsVne/XrW2EMh&#xA;lQtbW0EgEnrenWQWgU8ozRWNKNQ4q9NxV2KvLvOP5N33mPzDquqfpS3to9Qa2ES/VmeSJIbWS358&#xA;hKqtNE8xngkK/A4XbauKvUcVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVY9568j6P500I6LqzTJaGVJma3f03PCoZOVD8MiMyN4qTirC5P+cd/LEklq0mramy2lt6ESmWO&#xA;onKSK12G9PksxkmaWqkD1Czd8VVdJ/IDy7YajZ30msapePZrbqsE8sZhf6uIwfVRYxz9URlX5fss&#xA;QMVTBPyY8v8A6MvNNlvr2a2u9YOtBWdKx8l9J7RCE/3neBniK/yMQDir0DFXYq7FXYq7FX//2Q==</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>841.889771</stDim:w>
            <stDim:h>1190.551025</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ComicSansMS</stFnt:fontName>
                  <stFnt:fontFamily>Comic Sans MS</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.00x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Comic Sans MS.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:InstanceID>uuid:194E0FB460DEDD11BEB6B70A60A9292C</xapMM:InstanceID>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -258.342 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 258.342 li
657.582 258.342 li
657.582 0 li
cp
clp
[1 0 0 1 0 0 ]ct
240.07 61.1333 mo
239.548 63.417 237.099 64.3682 236.814 66.8936 cv
236.49 69.7783 239.05 71.1416 239.927 68.167 cv
false sop
/0 
[/DeviceRGB] /CSA add_res
0.0470588 0.0431373 0.0470588 rgb
f
1 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
240.07 61.1333 mo
239.548 63.417 237.099 64.3682 236.814 66.8936 cv
236.49 69.7783 239.05 71.1416 239.927 68.167 cv
0 0 0 rgb
@
239.772 60.9946 mo
240.321 63.2451 243.268 64.3604 243.517 66.8252 cv
243.801 69.6377 240.631 70.751 239.677 67.8057 cv
240.034 68.5342 li
0.0470588 0.0431373 0.0470588 rgb
f
239.772 60.9946 mo
240.321 63.2451 243.268 64.3604 243.517 66.8252 cv
243.801 69.6377 240.631 70.751 239.677 67.8057 cv
240.034 68.5342 li
0 0 0 rgb
@
240.097 68.5576 mo
238.534 71.0576 li
241.034 71.0576 li
0.0470588 0.0431373 0.0470588 rgb
f
240.097 68.5576 mo
238.534 71.0576 li
241.034 71.0576 li
0 0 0 rgb
@
258.68 85.0322 mo
259.349 82.1084 262.483 80.8931 262.847 77.6582 cv
263.263 73.9688 259.985 72.2236 258.863 76.0303 cv
0.968627 0.0431373 0.329412 rgb
f
258.68 85.0322 mo
259.349 82.1084 262.483 80.8931 262.847 77.6582 cv
263.263 73.9688 259.985 72.2236 258.863 76.0303 cv
0 0 0 rgb
@
258.726 75.5601 mo
259.183 76.4922 li
257.962 72.7217 253.905 74.1465 254.269 77.7471 cv
254.587 80.9033 258.358 82.3306 259.061 85.2109 cv
0.968627 0.0431373 0.329412 rgb
f
258.726 75.5601 mo
259.183 76.4922 li
257.962 72.7217 253.905 74.1465 254.269 77.7471 cv
254.587 80.9033 258.358 82.3306 259.061 85.2109 cv
0 0 0 rgb
@
0.5 lw
2 lc
221.917 12.1548 mo
223.901 12.1719 li
225.885 12.2241 li
227.866 12.3105 li
229.847 12.4316 li
231.824 12.5874 li
233.799 12.7773 li
235.771 13.002 li
237.737 13.2607 li
239.699 13.5542 li
241.655 13.8818 li
243.606 14.2432 li
245.551 14.6387 li
247.487 15.0679 li
249.416 15.5313 li
251.337 16.0278 li
253.249 16.5581 li
255.151 17.1216 li
257.043 17.7183 li
258.924 18.3477 li
260.794 19.0098 li
262.652 19.7046 li
264.498 20.4316 li
266.331 21.1909 li
268.15 21.9819 li
269.956 22.8047 li
271.746 23.6587 li
273.521 24.5439 li
275.281 25.46 li
277.025 26.4067 li
278.752 27.3833 li
280.461 28.3906 li
282.152 29.4268 li
283.826 30.4927 li
285.48 31.5879 li
287.115 32.7114 li
288.73 33.8633 li
290.325 35.0435 li
291.898 36.2515 li
293.451 37.4863 li
294.982 38.748 li
296.491 40.0366 li
297.977 41.3511 li
299.439 42.6914 li
300.878 44.0571 li
302.293 45.4478 li
303.684 46.8623 li
305.05 48.3018 li
306.39 49.7642 li
307.704 51.25 li
308.992 52.7588 li
310.255 54.2896 li
311.489 55.8418 li
312.697 57.416 li
313.877 59.0107 li
315.029 60.626 li
316.153 62.2607 li
317.248 63.915 li
318.313 65.5884 li
319.351 67.2798 li
320.357 68.9893 li
321.334 70.7158 li
322.281 72.4595 li
323.197 74.2188 li
324.082 75.9946 li
324.937 77.7852 li
325.759 79.5903 li
326.55 81.4097 li
327.309 83.2427 li
328.036 85.0884 li
328.73 86.9468 li
329.394 88.8164 li
330.022 90.6982 li
330.619 92.5898 li
331.183 94.4922 li
331.713 96.4038 li
332.21 98.3247 li
332.673 100.254 li
333.102 102.19 li
333.498 104.135 li
333.859 106.085 li
334.187 108.042 li
334.479 110.004 li
334.738 111.971 li
334.963 113.942 li
335.153 115.917 li
335.31 117.895 li
335.431 119.874 li
335.517 121.856 li
335.568 123.839 li
335.586 125.823 li
335.568 127.808 li
335.517 129.79 li
335.431 131.772 li
335.31 133.753 li
335.153 135.729 li
334.963 137.704 li
334.738 139.677 li
334.479 141.644 li
334.187 143.604 li
333.859 145.562 li
333.498 147.513 li
333.102 149.456 li
332.673 151.394 li
332.21 153.323 li
331.713 155.243 li
331.183 157.155 li
330.619 159.058 li
330.022 160.948 li
329.394 162.831 li
328.73 164.7 li
328.036 166.56 li
327.309 168.405 li
326.55 170.237 li
325.759 172.058 li
324.937 173.862 li
324.082 175.653 li
323.197 177.429 li
322.281 179.188 li
321.334 180.931 li
320.357 182.657 li
319.351 184.366 li
318.313 186.06 li
317.248 187.731 li
316.153 189.386 li
315.029 191.021 li
313.877 192.636 li
312.697 194.231 li
311.489 195.806 li
310.255 197.358 li
308.992 198.888 li
307.704 200.397 li
306.39 201.882 li
305.05 203.345 li
303.684 204.784 li
302.293 206.2 li
300.878 207.591 li
299.439 208.956 li
297.977 210.296 li
296.491 211.61 li
294.982 212.899 li
293.451 214.161 li
291.898 215.396 li
290.325 216.603 li
288.73 217.784 li
287.115 218.935 li
285.48 220.06 li
283.826 221.153 li
282.152 222.22 li
280.461 223.257 li
278.752 224.263 li
277.025 225.241 li
275.281 226.187 li
273.521 227.103 li
271.746 227.989 li
269.956 228.843 li
268.15 229.665 li
266.331 230.456 li
264.498 231.216 li
262.652 231.942 li
260.794 232.638 li
258.924 233.3 li
257.043 233.929 li
255.151 234.526 li
253.249 235.089 li
251.337 235.618 li
249.416 236.116 li
247.487 236.579 li
245.551 237.009 li
243.606 237.403 li
241.655 237.765 li
239.699 238.093 li
237.737 238.386 li
235.771 238.646 li
233.799 238.87 li
231.824 239.06 li
229.847 239.216 li
227.866 239.337 li
225.885 239.423 li
223.901 239.476 li
221.917 239.493 li
219.934 239.476 li
217.95 239.423 li
215.969 239.337 li
213.988 239.216 li
212.011 239.06 li
210.036 238.87 li
208.064 238.646 li
206.098 238.386 li
204.136 238.093 li
202.179 237.765 li
200.229 237.403 li
198.284 237.009 li
196.348 236.579 li
194.418 236.116 li
192.498 235.618 li
190.586 235.089 li
188.684 234.526 li
186.792 233.929 li
184.91 233.3 li
183.04 232.638 li
181.182 231.942 li
179.336 231.216 li
177.503 230.456 li
175.684 229.665 li
173.879 228.843 li
172.088 227.989 li
170.313 227.103 li
168.553 226.187 li
166.81 225.241 li
165.083 224.263 li
163.373 223.257 li
161.682 222.22 li
160.009 221.153 li
158.354 220.06 li
156.72 218.935 li
155.104 217.784 li
153.51 216.603 li
151.936 215.396 li
150.383 214.161 li
148.853 212.899 li
147.344 211.61 li
145.858 210.296 li
144.396 208.956 li
142.956 207.591 li
141.541 206.2 li
140.15 204.784 li
138.785 203.345 li
137.445 201.882 li
136.13 200.397 li
134.842 198.888 li
133.58 197.358 li
132.345 195.806 li
131.138 194.231 li
129.957 192.636 li
128.806 191.021 li
127.682 189.386 li
126.587 187.731 li
125.521 186.06 li
124.484 184.366 li
123.478 182.657 li
122.5 180.931 li
121.554 179.188 li
120.638 177.429 li
119.752 175.653 li
118.898 173.862 li
118.075 172.058 li
117.284 170.237 li
116.525 168.405 li
115.798 166.56 li
115.104 164.7 li
114.441 162.831 li
113.812 160.948 li
113.215 159.058 li
112.651 157.155 li
112.122 155.243 li
111.625 153.323 li
111.162 151.394 li
110.732 149.456 li
110.337 147.513 li
109.976 145.562 li
109.647 143.604 li
109.354 141.644 li
109.096 139.677 li
108.871 137.704 li
108.681 135.729 li
108.525 133.753 li
108.404 131.772 li
108.317 129.79 li
108.266 127.808 li
108.248 125.823 li
108.266 123.839 li
108.317 121.856 li
108.404 119.874 li
108.525 117.895 li
108.681 115.917 li
108.871 113.942 li
109.096 111.971 li
109.354 110.004 li
109.647 108.042 li
109.976 106.085 li
110.337 104.135 li
110.732 102.19 li
111.162 100.254 li
111.625 98.3247 li
112.122 96.4038 li
112.651 94.4922 li
113.215 92.5898 li
113.812 90.6982 li
114.441 88.8164 li
115.104 86.9468 li
115.798 85.0884 li
116.525 83.2427 li
117.284 81.4097 li
118.075 79.5903 li
118.898 77.7852 li
119.752 75.9946 li
120.638 74.2188 li
121.554 72.4595 li
122.5 70.7158 li
123.478 68.9893 li
124.484 67.2798 li
125.521 65.5884 li
126.587 63.915 li
127.682 62.2607 li
128.806 60.626 li
129.957 59.0107 li
131.138 57.416 li
132.345 55.8418 li
133.58 54.2896 li
134.842 52.7588 li
136.13 51.25 li
137.445 49.7642 li
138.785 48.3018 li
140.15 46.8623 li
141.541 45.4478 li
142.956 44.0571 li
144.396 42.6914 li
145.858 41.3511 li
147.344 40.0366 li
148.853 38.748 li
150.383 37.4863 li
151.936 36.2515 li
153.51 35.0435 li
155.104 33.8633 li
156.72 32.7114 li
158.354 31.5879 li
160.009 30.4927 li
161.682 29.4268 li
163.373 28.3906 li
165.083 27.3833 li
166.81 26.4067 li
168.553 25.46 li
170.313 24.5439 li
172.088 23.6587 li
173.879 22.8047 li
175.684 21.9819 li
177.503 21.1909 li
179.336 20.4316 li
181.182 19.7046 li
183.04 19.0098 li
184.91 18.3477 li
186.792 17.7183 li
188.684 17.1216 li
190.586 16.5581 li
192.498 16.0278 li
194.418 15.5313 li
196.348 15.0679 li
198.284 14.6387 li
200.229 14.2432 li
202.179 13.8818 li
204.136 13.5542 li
206.098 13.2607 li
208.064 13.002 li
210.036 12.7773 li
212.011 12.5874 li
213.988 12.4316 li
215.969 12.3105 li
217.95 12.2241 li
219.934 12.1719 li
221.917 12.1548 li
@
271.705 88.9893 mo
272.26 88.293 li
272.764 87.5557 li
273.214 86.7798 li
273.609 85.9683 li
273.948 85.124 li
274.227 84.25 li
274.445 83.3501 li
274.602 82.4277 li
274.694 81.4863 li
274.724 80.5298 li
274.688 79.5625 li
274.588 78.5879 li
274.423 77.6108 li
274.193 76.6353 li
273.9 75.665 li
273.544 74.7046 li
273.126 73.7588 li
272.647 72.8306 li
272.111 71.9258 li
271.519 71.0469 li
270.873 70.1987 li
270.176 69.3853 li
269.431 68.6099 li
268.642 67.876 li
267.811 67.1865 li
266.941 66.5459 li
266.04 65.9556 li
265.107 65.4189 li
264.15 64.9375 li
263.172 64.5142 li
262.177 64.1504 li
261.169 63.8472 li
260.154 63.606 li
259.135 63.4277 li
258.117 63.3125 li
257.105 63.2607 li
256.103 63.2725 li
255.114 63.3472 li
254.145 63.4839 li
253.197 63.6816 li
252.275 63.9399 li
251.384 64.2563 li
250.526 64.6299 li
249.705 65.0576 li
248.924 65.5386 li
248.186 66.0698 li
247.493 66.6484 li
246.848 67.2725 li
246.253 67.939 li
245.711 68.6445 li
245.223 69.3867 li
244.789 70.1616 li
244.413 70.9663 li
244.095 71.7979 li
243.834 72.6528 li
243.634 73.5273 li
243.492 74.4185 li
243.411 75.3228 li
243.389 76.2363 li
243.426 77.1563 li
243.521 78.0791 li
243.676 79.0015 li
243.888 79.9199 li
244.154 80.8311 li
244.478 81.7314 li
244.854 82.6187 li
245.281 83.4893 li
245.76 84.3398 li
246.286 85.168 li
246.858 85.9707 li
247.477 86.7451 li
248.136 87.4883 li
248.834 88.1982 li
249.57 88.8721 li
250.34 89.5078 li
251.143 90.103 li
251.974 90.6553 li
252.83 91.1631 li
253.71 91.6245 li
254.61 92.0376 li
255.527 92.4009 li
256.457 92.7129 li
257.398 92.9727 li
258.346 93.1792 li
259.298 93.3311 li
260.249 93.4277 li
261.198 93.4683 li
262.141 93.4526 li
263.072 93.3809 li
263.991 93.252 li
264.894 93.0674 li
265.775 92.8262 li
266.633 92.5298 li
267.464 92.1787 li
268.265 91.7734 li
269.032 91.3159 li
269.763 90.8066 li
270.454 90.248 li
271.102 89.6416 li
271.705 88.9893 li
0 0.501961 0 rgb
@
222.416 11.6563 mo
224.4 11.6733 li
226.384 11.7256 li
228.365 11.812 li
230.346 11.9331 li
232.323 12.0889 li
234.298 12.2788 li
236.27 12.5034 li
238.236 12.7622 li
240.198 13.0557 li
242.154 13.3833 li
244.105 13.7446 li
246.05 14.1401 li
247.986 14.5693 li
249.915 15.0327 li
251.836 15.5293 li
253.748 16.0596 li
255.65 16.623 li
257.542 17.2197 li
259.423 17.8491 li
261.293 18.5112 li
263.151 19.2061 li
264.997 19.9331 li
266.83 20.6924 li
268.649 21.4834 li
270.455 22.3062 li
272.245 23.1602 li
274.021 24.0454 li
275.78 24.9614 li
277.524 25.9082 li
279.251 26.8848 li
280.96 27.8921 li
282.651 28.9282 li
284.325 29.9941 li
285.979 31.0894 li
287.614 32.2129 li
289.229 33.3647 li
290.824 34.5449 li
292.397 35.7529 li
293.95 36.9878 li
295.481 38.2495 li
296.99 39.5381 li
298.476 40.8525 li
299.938 42.1929 li
301.377 43.5586 li
302.792 44.9492 li
304.183 46.3638 li
305.549 47.8032 li
306.889 49.2656 li
308.203 50.7515 li
309.491 52.2603 li
310.754 53.791 li
311.988 55.3433 li
313.196 56.9175 li
314.376 58.5122 li
315.528 60.1274 li
316.652 61.7622 li
317.747 63.4165 li
318.813 65.0898 li
319.85 66.7813 li
320.856 68.4907 li
321.833 70.2173 li
322.78 71.9609 li
323.696 73.7202 li
324.581 75.4961 li
325.436 77.2866 li
326.258 79.0918 li
327.049 80.9111 li
327.808 82.7441 li
328.535 84.5898 li
329.229 86.4482 li
329.893 88.3179 li
330.521 90.1997 li
331.118 92.0913 li
331.682 93.9937 li
332.212 95.9053 li
332.709 97.8262 li
333.172 99.7554 li
333.601 101.692 li
333.997 103.636 li
334.358 105.586 li
334.686 107.543 li
334.979 109.505 li
335.237 111.472 li
335.462 113.443 li
335.652 115.419 li
335.809 117.396 li
335.93 119.376 li
336.016 121.358 li
336.067 123.341 li
336.085 125.325 li
336.067 127.31 li
336.016 129.292 li
335.93 131.274 li
335.809 133.255 li
335.652 135.231 li
335.462 137.206 li
335.237 139.178 li
334.979 141.146 li
334.686 143.106 li
334.358 145.063 li
333.997 147.015 li
333.601 148.958 li
333.172 150.896 li
332.709 152.824 li
332.212 154.745 li
331.682 156.657 li
331.118 158.559 li
330.521 160.45 li
329.893 162.332 li
329.229 164.202 li
328.535 166.061 li
327.808 167.906 li
327.049 169.739 li
326.258 171.559 li
325.436 173.364 li
324.581 175.154 li
323.696 176.93 li
322.78 178.689 li
321.833 180.433 li
320.856 182.159 li
319.85 183.868 li
318.813 185.561 li
317.747 187.233 li
316.652 188.888 li
315.528 190.522 li
314.376 192.138 li
313.196 193.733 li
311.988 195.307 li
310.754 196.859 li
309.491 198.39 li
308.203 199.898 li
306.889 201.384 li
305.549 202.847 li
304.183 204.286 li
302.792 205.701 li
301.377 207.092 li
299.938 208.458 li
298.476 209.798 li
296.99 211.112 li
295.481 212.4 li
293.95 213.663 li
292.397 214.897 li
290.824 216.104 li
289.229 217.285 li
287.614 218.437 li
285.979 219.562 li
284.325 220.655 li
282.651 221.722 li
280.96 222.759 li
279.251 223.765 li
277.524 224.742 li
275.78 225.688 li
274.021 226.604 li
272.245 227.49 li
270.455 228.345 li
268.649 229.167 li
266.83 229.958 li
264.997 230.718 li
263.151 231.444 li
261.293 232.14 li
259.423 232.802 li
257.542 233.431 li
255.65 234.027 li
253.748 234.591 li
251.836 235.12 li
249.915 235.618 li
247.986 236.081 li
246.05 236.511 li
244.105 236.905 li
242.154 237.267 li
240.198 237.595 li
238.236 237.888 li
236.27 238.147 li
234.298 238.372 li
232.323 238.562 li
230.346 238.718 li
228.365 238.839 li
226.384 238.925 li
224.4 238.977 li
222.416 238.994 li
220.433 238.977 li
218.449 238.925 li
216.468 238.839 li
214.487 238.718 li
212.51 238.562 li
210.535 238.372 li
208.563 238.147 li
206.597 237.888 li
204.635 237.595 li
202.678 237.267 li
200.728 236.905 li
198.783 236.511 li
196.847 236.081 li
194.917 235.618 li
192.997 235.12 li
191.085 234.591 li
189.183 234.027 li
187.291 233.431 li
185.409 232.802 li
183.539 232.14 li
181.681 231.444 li
179.835 230.718 li
178.002 229.958 li
176.183 229.167 li
174.378 228.345 li
172.587 227.49 li
170.812 226.604 li
169.052 225.688 li
167.309 224.742 li
165.582 223.765 li
163.872 222.759 li
162.181 221.722 li
160.508 220.655 li
158.854 219.562 li
157.219 218.437 li
155.604 217.285 li
154.009 216.104 li
152.435 214.897 li
150.882 213.663 li
149.352 212.4 li
147.843 211.112 li
146.357 209.798 li
144.895 208.458 li
143.455 207.092 li
142.04 205.701 li
140.649 204.286 li
139.284 202.847 li
137.944 201.384 li
136.629 199.898 li
135.341 198.39 li
134.079 196.859 li
132.844 195.307 li
131.637 193.733 li
130.456 192.138 li
129.305 190.522 li
128.181 188.888 li
127.086 187.233 li
126.02 185.561 li
124.983 183.868 li
123.977 182.159 li
122.999 180.433 li
122.053 178.689 li
121.137 176.93 li
120.251 175.154 li
119.397 173.364 li
118.574 171.559 li
117.783 169.739 li
117.024 167.906 li
116.297 166.061 li
115.603 164.202 li
114.94 162.332 li
114.311 160.45 li
113.714 158.559 li
113.15 156.657 li
112.621 154.745 li
112.124 152.824 li
111.661 150.896 li
111.231 148.958 li
110.836 147.015 li
110.475 145.063 li
110.146 143.106 li
109.854 141.146 li
109.595 139.178 li
109.37 137.206 li
109.18 135.231 li
109.024 133.255 li
108.903 131.274 li
108.816 129.292 li
108.765 127.31 li
108.747 125.325 li
108.765 123.341 li
108.816 121.358 li
108.903 119.376 li
109.024 117.396 li
109.18 115.419 li
109.37 113.443 li
109.595 111.472 li
109.854 109.505 li
110.146 107.543 li
110.475 105.586 li
110.836 103.636 li
111.231 101.692 li
111.661 99.7554 li
112.124 97.8262 li
112.621 95.9053 li
113.15 93.9937 li
113.714 92.0913 li
114.311 90.1997 li
114.94 88.3179 li
115.603 86.4482 li
116.297 84.5898 li
117.024 82.7441 li
117.783 80.9111 li
118.574 79.0918 li
119.397 77.2866 li
120.251 75.4961 li
121.137 73.7202 li
122.053 71.9609 li
122.999 70.2173 li
123.977 68.4907 li
124.983 66.7813 li
126.02 65.0898 li
127.086 63.4165 li
128.181 61.7622 li
129.305 60.1274 li
130.456 58.5122 li
131.637 56.9175 li
132.844 55.3433 li
134.079 53.791 li
135.341 52.2603 li
136.629 50.7515 li
137.944 49.2656 li
139.284 47.8032 li
140.649 46.3638 li
142.04 44.9492 li
143.455 43.5586 li
144.895 42.1929 li
146.357 40.8525 li
147.843 39.5381 li
149.352 38.2495 li
150.882 36.9878 li
152.435 35.7529 li
154.009 34.5449 li
155.604 33.3647 li
157.219 32.2129 li
158.854 31.0894 li
160.508 29.9941 li
162.181 28.9282 li
163.872 27.8921 li
165.582 26.8848 li
167.309 25.9082 li
169.052 24.9614 li
170.812 24.0454 li
172.587 23.1602 li
174.378 22.3062 li
176.183 21.4834 li
178.002 20.6924 li
179.835 19.9331 li
181.681 19.2061 li
183.539 18.5112 li
185.409 17.8491 li
187.291 17.2197 li
189.183 16.623 li
191.085 16.0596 li
192.997 15.5293 li
194.917 15.0327 li
196.847 14.5693 li
198.783 14.1401 li
200.728 13.7446 li
202.678 13.3833 li
204.635 13.0557 li
206.597 12.7622 li
208.563 12.5034 li
210.535 12.2788 li
212.51 12.0889 li
214.487 11.9331 li
216.468 11.812 li
218.449 11.7256 li
220.433 11.6733 li
222.416 11.6563 li
0 0 0 rgb
@
222.416 11.6563 mo
222.416 12.6523 li
222.416 13.6572 li
222.416 14.6704 li
@
242.154 13.3833 mo
241.981 14.3643 li
241.808 15.354 li
241.631 16.3516 li
@
261.293 18.5112 mo
260.953 19.4473 li
260.609 20.3916 li
260.263 21.3438 li
@
279.251 26.8848 mo
278.753 27.7476 li
278.25 28.6177 li
277.743 29.4956 li
@
295.481 38.2495 mo
294.841 39.0127 li
294.195 39.7827 li
293.544 40.5591 li
@
309.491 52.2603 mo
308.729 52.9004 li
307.959 53.5464 li
307.183 54.1978 li
@
320.856 68.4907 mo
319.993 68.9888 li
319.123 69.4912 li
318.246 69.998 li
@
329.229 86.4482 mo
328.294 86.7886 li
327.35 87.1323 li
326.397 87.479 li
@
334.358 105.586 mo
333.377 105.76 li
332.388 105.934 li
331.39 106.11 li
@
336.085 125.325 mo
335.089 125.325 li
334.084 125.325 li
333.07 125.325 li
@
334.358 145.063 mo
333.377 144.891 li
332.388 144.716 li
331.39 144.54 li
@
329.229 164.202 mo
328.294 163.861 li
327.35 163.518 li
326.397 163.171 li
@
320.856 182.159 mo
319.993 181.661 li
319.123 181.159 li
318.246 180.652 li
@
309.491 198.39 mo
308.729 197.749 li
307.959 197.104 li
307.183 196.452 li
@
295.481 212.4 mo
294.841 211.638 li
294.195 210.868 li
293.544 210.091 li
@
279.251 223.765 mo
278.753 222.902 li
278.25 222.032 li
277.743 221.155 li
@
261.293 232.14 mo
260.953 231.202 li
260.609 230.259 li
260.263 229.306 li
@
242.154 237.267 mo
241.981 236.286 li
241.808 235.296 li
241.631 234.298 li
@
222.416 238.994 mo
222.416 237.997 li
222.416 236.993 li
222.416 235.979 li
@
202.678 237.267 mo
202.851 236.286 li
203.025 235.296 li
203.201 234.298 li
@
183.539 232.14 mo
183.88 231.202 li
184.224 230.259 li
184.57 229.306 li
@
165.582 223.765 mo
166.08 222.902 li
166.582 222.032 li
167.089 221.155 li
@
149.352 212.4 mo
149.992 211.638 li
150.638 210.868 li
151.289 210.091 li
@
135.341 198.39 mo
136.104 197.749 li
136.874 197.104 li
137.65 196.452 li
@
123.977 182.159 mo
124.839 181.661 li
125.709 181.159 li
126.587 180.652 li
@
115.603 164.202 mo
116.539 163.861 li
117.483 163.518 li
118.436 163.171 li
@
110.475 145.063 mo
111.455 144.891 li
112.445 144.716 li
113.443 144.54 li
@
108.747 125.325 mo
109.744 125.325 li
110.749 125.325 li
111.762 125.325 li
@
110.475 105.586 mo
111.455 105.76 li
112.445 105.934 li
113.443 106.11 li
@
115.603 86.4482 mo
116.539 86.7886 li
117.483 87.1323 li
118.436 87.479 li
@
123.977 68.4907 mo
124.839 68.9888 li
125.709 69.4912 li
126.587 69.998 li
@
135.341 52.2603 mo
136.104 52.9004 li
136.874 53.5464 li
137.65 54.1978 li
@
149.352 38.2495 mo
149.992 39.0127 li
150.638 39.7827 li
151.289 40.5591 li
@
165.582 26.8848 mo
166.08 27.7476 li
166.582 28.6177 li
167.089 29.4956 li
@
183.539 18.5112 mo
183.88 19.4473 li
184.224 20.3916 li
184.57 21.3438 li
@
202.678 13.3833 mo
202.851 14.3643 li
203.025 15.354 li
203.201 16.3516 li
@
250.715 70.3481 mo
250.884 69.7769 li
251.012 69.1934 li
251.097 68.5991 li
251.139 67.9976 li
251.137 67.3901 li
251.091 66.7793 li
251.001 66.168 li
250.868 65.5581 li
250.69 64.9531 li
250.471 64.355 li
250.209 63.7661 li
249.905 63.189 li
249.562 62.626 li
249.18 62.0801 li
248.76 61.5532 li
248.304 61.0479 li
247.814 60.5659 li
247.293 60.1099 li
246.741 59.6816 li
246.162 59.2827 li
245.558 58.9155 li
244.931 58.5815 li
244.284 58.2817 li
243.62 58.0176 li
242.941 57.7905 li
242.251 57.6016 li
241.552 57.4517 li
240.848 57.3403 li
240.141 57.2695 li
239.435 57.2383 li
238.731 57.2476 li
238.035 57.2964 li
237.348 57.3853 li
236.673 57.5127 li
236.013 57.6792 li
235.371 57.8833 li
234.749 58.1245 li
234.15 58.4009 li
233.577 58.7114 li
233.032 59.0552 li
232.517 59.4297 li
232.032 59.834 li
231.583 60.2661 li
231.168 60.7241 li
230.79 61.2061 li
230.45 61.71 li
230.15 62.2334 li
229.891 62.7739 li
229.672 63.3301 li
229.495 63.8994 li
229.36 64.479 li
229.27 65.0669 li
229.221 65.6611 li
229.215 66.2588 li
229.252 66.8579 li
229.331 67.4561 li
229.452 68.0513 li
229.614 68.6406 li
229.816 69.2227 li
230.059 69.7944 li
230.339 70.3545 li
230.656 70.9009 li
231.01 71.4312 li
231.397 71.9434 li
231.818 72.436 li
232.271 72.9072 li
232.752 73.3555 li
233.261 73.7788 li
233.796 74.1763 li
234.354 74.5459 li
234.934 74.8867 li
235.533 75.1973 li
236.15 75.4771 li
236.781 75.7241 li
237.426 75.9385 li
238.08 76.1187 li
238.742 76.2646 li
239.41 76.3755 li
240.081 76.4512 li
240.753 76.4907 li
241.423 76.4941 li
242.088 76.4614 li
242.746 76.3931 li
243.396 76.2886 li
244.033 76.1484 li
244.657 75.9731 li
245.265 75.7632 li
245.854 75.5195 li
246.421 75.2422 li
246.966 74.9331 li
247.485 74.5923 li
247.978 74.2217 li
248.44 73.8223 li
248.872 73.395 li
249.271 72.9419 li
249.634 72.4648 li
249.962 71.9648 li
250.252 71.4443 li
250.503 70.9048 li
250.715 70.3481 li
0 0.501961 0 rgb
@
0 0 0 rgb
%ADOBeginSubsetFont: ComicSansMS Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /ComicSansMS def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 124 /bar putdef/FontBBox {-93 -312 1187 1102} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/.notdef <1C60D8A8C9B7A73DB6F0B6FAFA7BF3C28FD0A21D0FB70854A4518CFB8D731A1977C1C08A> |-/space <1C60D8A8C9B84186EC> |-/bar <1C60D8A8C9B71648409909D4F18DD9439D2771B2C815CBB6A1F034A818BBA43DEA8D9C776D2AE07F1DA6E55397B54D543B5FE2F26EDDFB210F47BCCA11> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/EHPQEY+ComicSansMS /ComicSansMS findfont ct_VMDictPut/EHPQEY+ComicSansMS*1 [32{/.notdef}rp /space 91{/.notdef}rp /bar 131{/.notdef}rp]EHPQEY+ComicSansMS nfEHPQEY+ComicSansMS*1 [12 0 0 -12 0 0 ]msf325.246 131.329 mo(| )[5.05664 0 ]xsh314.12 131.329 mo(| )[5.05664 0 ]xsh302.292 131.329 mo(| )[5.05664 0 ]xsh289.853 131.329 mo(| )[5.05664 0 ]xsh276.896 131.329 mo(| )[5.05664 0 ]xsh263.522 131.329 mo(| )[5.05664 0 ]xsh249.831 131.329 mo(| )[5.05664 0 ]xsh235.927 131.329 mo(| )[5.05664 0 ]xsh221.916 131.329 mo(| )[5.05664 0 ]xsh171.258 107.329 mo
172.038 107.452 li
172.741 107.811 li
173.299 108.369 li
173.657 109.072 li
173.781 109.852 li
173.657 110.632 li
173.299 111.335 li
172.741 111.894 li
172.038 112.252 li
171.258 112.375 li
170.479 112.252 li
169.774 111.894 li
169.217 111.335 li
168.858 110.632 li
168.734 109.852 li
168.858 109.072 li
169.217 108.369 li
169.774 107.811 li
170.479 107.452 li
171.258 107.329 li
cp
1 0 0 rgb
f
0 lc
171.258 107.329 mo
172.038 107.452 li
172.741 107.811 li
173.299 108.369 li
173.657 109.072 li
173.781 109.852 li
173.657 110.632 li
173.299 111.335 li
172.741 111.894 li
172.038 112.252 li
171.258 112.375 li
170.479 112.252 li
169.774 111.894 li
169.217 111.335 li
168.858 110.632 li
168.734 109.852 li
168.858 109.072 li
169.217 108.369 li
169.774 107.811 li
170.479 107.452 li
171.258 107.329 li
cp
0 0 0 rgb
@
132.635 117.03 mo
133.414 117.153 li
134.117 117.513 li
134.676 118.07 li
135.034 118.774 li
135.157 119.554 li
135.034 120.333 li
134.676 121.036 li
134.117 121.595 li
133.414 121.952 li
132.635 122.077 li
131.854 121.952 li
131.151 121.595 li
130.594 121.036 li
130.235 120.333 li
130.111 119.554 li
130.235 118.774 li
130.594 118.07 li
131.151 117.513 li
131.854 117.153 li
132.635 117.03 li
cp
1 0 0 rgb
f
132.635 117.03 mo
133.414 117.153 li
134.117 117.513 li
134.676 118.07 li
135.034 118.774 li
135.157 119.554 li
135.034 120.333 li
134.676 121.036 li
134.117 121.595 li
133.414 121.952 li
132.635 122.077 li
131.854 121.952 li
131.151 121.595 li
130.594 121.036 li
130.235 120.333 li
130.111 119.554 li
130.235 118.774 li
130.594 118.07 li
131.151 117.513 li
131.854 117.153 li
132.635 117.03 li
cp
0 0 0 rgb
@
105.684 73.4438 mo
106.464 73.5674 li
107.167 73.9258 li
107.726 74.4844 li
108.084 75.1875 li
108.207 75.9673 li
108.084 76.7471 li
107.726 77.4502 li
107.167 78.0083 li
106.464 78.3667 li
105.684 78.4902 li
104.904 78.3667 li
104.201 78.0083 li
103.643 77.4502 li
103.284 76.7471 li
103.161 75.9673 li
103.284 75.1875 li
103.643 74.4844 li
104.201 73.9258 li
104.904 73.5674 li
105.684 73.4438 li
cp
1 0 0 rgb
f
105.684 73.4438 mo
106.464 73.5674 li
107.167 73.9258 li
107.726 74.4844 li
108.084 75.1875 li
108.207 75.9673 li
108.084 76.7471 li
107.726 77.4502 li
107.167 78.0083 li
106.464 78.3667 li
105.684 78.4902 li
104.904 78.3667 li
104.201 78.0083 li
103.643 77.4502 li
103.284 76.7471 li
103.161 75.9673 li
103.284 75.1875 li
103.643 74.4844 li
104.201 73.9258 li
104.904 73.5674 li
105.684 73.4438 li
cp
0 0 0 rgb
@
151.682 91.5674 mo
152.461 91.6909 li
153.164 92.0493 li
153.723 92.6074 li
154.081 93.311 li
154.204 94.0908 li
154.081 94.8701 li
153.723 95.5737 li
153.164 96.1318 li
152.461 96.4902 li
151.682 96.6138 li
150.901 96.4902 li
150.198 96.1318 li
149.64 95.5737 li
149.281 94.8701 li
149.158 94.0908 li
149.281 93.311 li
149.64 92.6074 li
150.198 92.0493 li
150.901 91.6909 li
151.682 91.5674 li
cp
1 0 0 rgb
f
151.682 91.5674 mo
152.461 91.6909 li
153.164 92.0493 li
153.723 92.6074 li
154.081 93.311 li
154.204 94.0908 li
154.081 94.8701 li
153.723 95.5737 li
153.164 96.1318 li
152.461 96.4902 li
151.682 96.6138 li
150.901 96.4902 li
150.198 96.1318 li
149.64 95.5737 li
149.281 94.8701 li
149.158 94.0908 li
149.281 93.311 li
149.64 92.6074 li
150.198 92.0493 li
150.901 91.6909 li
151.682 91.5674 li
cp
0 0 0 rgb
@
131.402 47.2803 mo
132.182 47.4043 li
132.886 47.7627 li
133.443 48.3208 li
133.802 49.0239 li
133.926 49.8037 li
133.802 50.5835 li
133.443 51.2866 li
132.886 51.8447 li
132.182 52.2031 li
131.402 52.3267 li
130.623 52.2031 li
129.919 51.8447 li
129.361 51.2866 li
129.003 50.5835 li
128.879 49.8037 li
129.003 49.0239 li
129.361 48.3208 li
129.919 47.7627 li
130.623 47.4043 li
131.402 47.2803 li
cp
1 0 0 rgb
f
131.402 47.2803 mo
132.182 47.4043 li
132.886 47.7627 li
133.443 48.3208 li
133.802 49.0239 li
133.926 49.8037 li
133.802 50.5835 li
133.443 51.2866 li
132.886 51.8447 li
132.182 52.2031 li
131.402 52.3267 li
130.623 52.2031 li
129.919 51.8447 li
129.361 51.2866 li
129.003 50.5835 li
128.879 49.8037 li
129.003 49.0239 li
129.361 48.3208 li
129.919 47.7627 li
130.623 47.4043 li
131.402 47.2803 li
cp
0 0 0 rgb
@
137.553 96.5933 mo
138.333 96.7168 li
139.036 97.0752 li
139.595 97.6333 li
139.953 98.3369 li
140.076 99.1162 li
139.953 99.896 li
139.595 100.6 li
139.036 101.158 li
138.333 101.516 li
137.553 101.64 li
136.773 101.516 li
136.07 101.158 li
135.512 100.6 li
135.153 99.896 li
135.03 99.1162 li
135.153 98.3369 li
135.512 97.6333 li
136.07 97.0752 li
136.773 96.7168 li
137.553 96.5933 li
cp
1 0 0 rgb
f
137.553 96.5933 mo
138.333 96.7168 li
139.036 97.0752 li
139.595 97.6333 li
139.953 98.3369 li
140.076 99.1162 li
139.953 99.896 li
139.595 100.6 li
139.036 101.158 li
138.333 101.516 li
137.553 101.64 li
136.773 101.516 li
136.07 101.158 li
135.512 100.6 li
135.153 99.896 li
135.03 99.1162 li
135.153 98.3369 li
135.512 97.6333 li
136.07 97.0752 li
136.773 96.7168 li
137.553 96.5933 li
cp
0 0 0 rgb
@
167.604 63.1016 mo
168.384 63.2251 li
169.087 63.5835 li
169.646 64.1416 li
170.004 64.8452 li
170.127 65.625 li
170.004 66.4043 li
169.646 67.1079 li
169.087 67.666 li
168.384 68.0244 li
167.604 68.1479 li
166.824 68.0244 li
166.121 67.666 li
165.563 67.1079 li
165.205 66.4043 li
165.081 65.625 li
165.205 64.8452 li
165.563 64.1416 li
166.121 63.5835 li
166.824 63.2251 li
167.604 63.1016 li
cp
1 0 0 rgb
f
167.604 63.1016 mo
168.384 63.2251 li
169.087 63.5835 li
169.646 64.1416 li
170.004 64.8452 li
170.127 65.625 li
170.004 66.4043 li
169.646 67.1079 li
169.087 67.666 li
168.384 68.0244 li
167.604 68.1479 li
166.824 68.0244 li
166.121 67.666 li
165.563 67.1079 li
165.205 66.4043 li
165.081 65.625 li
165.205 64.8452 li
165.563 64.1416 li
166.121 63.5835 li
166.824 63.2251 li
167.604 63.1016 li
cp
0 0 0 rgb
@
146.276 40.123 mo
147.057 40.2466 li
147.76 40.605 li
148.318 41.1631 li
148.677 41.8667 li
148.8 42.6465 li
148.677 43.4258 li
148.318 44.1294 li
147.76 44.6875 li
147.057 45.0459 li
146.276 45.1694 li
145.497 45.0459 li
144.794 44.6875 li
144.235 44.1294 li
143.877 43.4258 li
143.754 42.6465 li
143.877 41.8667 li
144.235 41.1631 li
144.794 40.605 li
145.497 40.2466 li
146.276 40.123 li
cp
1 0 0 rgb
f
146.276 40.123 mo
147.057 40.2466 li
147.76 40.605 li
148.318 41.1631 li
148.677 41.8667 li
148.8 42.6465 li
148.677 43.4258 li
148.318 44.1294 li
147.76 44.6875 li
147.057 45.0459 li
146.276 45.1694 li
145.497 45.0459 li
144.794 44.6875 li
144.235 44.1294 li
143.877 43.4258 li
143.754 42.6465 li
143.877 41.8667 li
144.235 41.1631 li
144.794 40.605 li
145.497 40.2466 li
146.276 40.123 li
cp
0 0 0 rgb
@
148.917 127.062 mo
149.696 127.185 li
150.4 127.542 li
150.958 128.101 li
151.316 128.804 li
151.44 129.583 li
151.316 130.364 li
150.958 131.067 li
150.4 131.626 li
149.696 131.983 li
148.917 132.106 li
148.138 131.983 li
147.434 131.626 li
146.876 131.067 li
146.518 130.364 li
146.394 129.583 li
146.518 128.804 li
146.876 128.101 li
147.434 127.542 li
148.138 127.185 li
148.917 127.062 li
cp
1 0 0 rgb
f
148.917 127.062 mo
149.696 127.185 li
150.4 127.542 li
150.958 128.101 li
151.316 128.804 li
151.44 129.583 li
151.316 130.364 li
150.958 131.067 li
150.4 131.626 li
149.696 131.983 li
148.917 132.106 li
148.138 131.983 li
147.434 131.626 li
146.876 131.067 li
146.518 130.364 li
146.394 129.583 li
146.518 128.804 li
146.876 128.101 li
147.434 127.542 li
148.138 127.185 li
148.917 127.062 li
cp
0 0 0 rgb
@
157.093 57.3511 mo
157.872 57.4746 li
158.575 57.833 li
159.134 58.3911 li
159.492 59.0942 li
159.615 59.874 li
159.492 60.6538 li
159.134 61.3569 li
158.575 61.915 li
157.872 62.2734 li
157.093 62.397 li
156.313 62.2734 li
155.609 61.915 li
155.052 61.3569 li
154.693 60.6538 li
154.569 59.874 li
154.693 59.0942 li
155.052 58.3911 li
155.609 57.833 li
156.313 57.4746 li
157.093 57.3511 li
cp
1 0 0 rgb
f
157.093 57.3511 mo
157.872 57.4746 li
158.575 57.833 li
159.134 58.3911 li
159.492 59.0942 li
159.615 59.874 li
159.492 60.6538 li
159.134 61.3569 li
158.575 61.915 li
157.872 62.2734 li
157.093 62.397 li
156.313 62.2734 li
155.609 61.915 li
155.052 61.3569 li
154.693 60.6538 li
154.569 59.874 li
154.693 59.0942 li
155.052 58.3911 li
155.609 57.833 li
156.313 57.4746 li
157.093 57.3511 li
cp
0 0 0 rgb
@
172.774 107.872 mo
173.555 107.995 li
174.258 108.354 li
174.815 108.912 li
175.174 109.615 li
175.298 110.395 li
175.174 111.174 li
174.815 111.877 li
174.258 112.436 li
173.555 112.794 li
172.774 112.917 li
171.995 112.794 li
171.291 112.436 li
170.733 111.877 li
170.375 111.174 li
170.251 110.395 li
170.375 109.615 li
170.733 108.912 li
171.291 108.354 li
171.995 107.995 li
172.774 107.872 li
cp
1 0 0 rgb
f
172.774 107.872 mo
173.555 107.995 li
174.258 108.354 li
174.815 108.912 li
175.174 109.615 li
175.298 110.395 li
175.174 111.174 li
174.815 111.877 li
174.258 112.436 li
173.555 112.794 li
172.774 112.917 li
171.995 112.794 li
171.291 112.436 li
170.733 111.877 li
170.375 111.174 li
170.251 110.395 li
170.375 109.615 li
170.733 108.912 li
171.291 108.354 li
171.995 107.995 li
172.774 107.872 li
cp
0 0 0 rgb
@
168.269 109.685 mo
169.048 109.808 li
169.752 110.167 li
170.31 110.725 li
170.668 111.428 li
170.792 112.208 li
170.668 112.987 li
170.31 113.69 li
169.752 114.249 li
169.048 114.607 li
168.269 114.731 li
167.489 114.607 li
166.785 114.249 li
166.228 113.69 li
165.869 112.987 li
165.745 112.208 li
165.869 111.428 li
166.228 110.725 li
166.785 110.167 li
167.489 109.808 li
168.269 109.685 li
cp
1 0 0 rgb
f
168.269 109.685 mo
169.048 109.808 li
169.752 110.167 li
170.31 110.725 li
170.668 111.428 li
170.792 112.208 li
170.668 112.987 li
170.31 113.69 li
169.752 114.249 li
169.048 114.607 li
168.269 114.731 li
167.489 114.607 li
166.785 114.249 li
166.228 113.69 li
165.869 112.987 li
165.745 112.208 li
165.869 111.428 li
166.228 110.725 li
166.785 110.167 li
167.489 109.808 li
168.269 109.685 li
cp
0 0 0 rgb
@
137.731 99.6787 mo
138.511 99.8022 li
139.214 100.161 li
139.772 100.719 li
140.131 101.422 li
140.254 102.202 li
140.131 102.981 li
139.772 103.685 li
139.214 104.243 li
138.511 104.602 li
137.731 104.725 li
136.951 104.602 li
136.248 104.243 li
135.689 103.685 li
135.331 102.981 li
135.208 102.202 li
135.331 101.422 li
135.689 100.719 li
136.248 100.161 li
136.951 99.8022 li
137.731 99.6787 li
cp
1 0 0 rgb
f
137.731 99.6787 mo
138.511 99.8022 li
139.214 100.161 li
139.772 100.719 li
140.131 101.422 li
140.254 102.202 li
140.131 102.981 li
139.772 103.685 li
139.214 104.243 li
138.511 104.602 li
137.731 104.725 li
136.951 104.602 li
136.248 104.243 li
135.689 103.685 li
135.331 102.981 li
135.208 102.202 li
135.331 101.422 li
135.689 100.719 li
136.248 100.161 li
136.951 99.8022 li
137.731 99.6787 li
cp
0 0 0 rgb
@
149.027 85.8677 mo
149.808 85.9912 li
150.511 86.3496 li
151.068 86.9077 li
151.427 87.6108 li
151.551 88.3906 li
151.427 89.1704 li
151.068 89.8735 li
150.511 90.4316 li
149.808 90.79 li
149.027 90.9136 li
148.248 90.79 li
147.544 90.4316 li
146.986 89.8735 li
146.628 89.1704 li
146.504 88.3906 li
146.628 87.6108 li
146.986 86.9077 li
147.544 86.3496 li
148.248 85.9912 li
149.027 85.8677 li
cp
1 0 0 rgb
f
149.027 85.8677 mo
149.808 85.9912 li
150.511 86.3496 li
151.068 86.9077 li
151.427 87.6108 li
151.551 88.3906 li
151.427 89.1704 li
151.068 89.8735 li
150.511 90.4316 li
149.808 90.79 li
149.027 90.9136 li
148.248 90.79 li
147.544 90.4316 li
146.986 89.8735 li
146.628 89.1704 li
146.504 88.3906 li
146.628 87.6108 li
146.986 86.9077 li
147.544 86.3496 li
148.248 85.9912 li
149.027 85.8677 li
cp
0 0 0 rgb
@
105.072 76.6567 mo
105.853 76.7803 li
106.556 77.1387 li
107.113 77.6968 li
107.472 78.3999 li
107.596 79.1797 li
107.472 79.9595 li
107.113 80.6631 li
106.556 81.2212 li
105.853 81.5796 li
105.072 81.7031 li
104.293 81.5796 li
103.59 81.2212 li
103.031 80.6631 li
102.673 79.9595 li
102.55 79.1797 li
102.673 78.3999 li
103.031 77.6968 li
103.59 77.1387 li
104.293 76.7803 li
105.072 76.6567 li
cp
1 0 0 rgb
f
105.072 76.6567 mo
105.853 76.7803 li
106.556 77.1387 li
107.113 77.6968 li
107.472 78.3999 li
107.596 79.1797 li
107.472 79.9595 li
107.113 80.6631 li
106.556 81.2212 li
105.853 81.5796 li
105.072 81.7031 li
104.293 81.5796 li
103.59 81.2212 li
103.031 80.6631 li
102.673 79.9595 li
102.55 79.1797 li
102.673 78.3999 li
103.031 77.6968 li
103.59 77.1387 li
104.293 76.7803 li
105.072 76.6567 li
cp
0 0 0 rgb
@
156.229 43.584 mo
157.008 43.7075 li
157.712 44.0659 li
158.27 44.624 li
158.628 45.3271 li
158.752 46.1069 li
158.628 46.8867 li
158.27 47.5898 li
157.712 48.1484 li
157.008 48.5068 li
156.229 48.6304 li
155.449 48.5068 li
154.745 48.1484 li
154.188 47.5898 li
153.829 46.8867 li
153.705 46.1069 li
153.829 45.3271 li
154.188 44.624 li
154.745 44.0659 li
155.449 43.7075 li
156.229 43.584 li
cp
1 0 0 rgb
f
156.229 43.584 mo
157.008 43.7075 li
157.712 44.0659 li
158.27 44.624 li
158.628 45.3271 li
158.752 46.1069 li
158.628 46.8867 li
158.27 47.5898 li
157.712 48.1484 li
157.008 48.5068 li
156.229 48.6304 li
155.449 48.5068 li
154.745 48.1484 li
154.188 47.5898 li
153.829 46.8867 li
153.705 46.1069 li
153.829 45.3271 li
154.188 44.624 li
154.745 44.0659 li
155.449 43.7075 li
156.229 43.584 li
cp
0 0 0 rgb
@
151.561 51.9297 mo
152.341 52.0527 li
153.044 52.4111 li
153.603 52.9697 li
153.961 53.6729 li
154.084 54.4526 li
153.961 55.2324 li
153.603 55.9355 li
153.044 56.4941 li
152.341 56.8525 li
151.561 56.9756 li
150.781 56.8525 li
150.078 56.4941 li
149.52 55.9355 li
149.161 55.2324 li
149.038 54.4526 li
149.161 53.6729 li
149.52 52.9697 li
150.078 52.4111 li
150.781 52.0527 li
151.561 51.9297 li
cp
1 0 0 rgb
f
151.561 51.9297 mo
152.341 52.0527 li
153.044 52.4111 li
153.603 52.9697 li
153.961 53.6729 li
154.084 54.4526 li
153.961 55.2324 li
153.603 55.9355 li
153.044 56.4941 li
152.341 56.8525 li
151.561 56.9756 li
150.781 56.8525 li
150.078 56.4941 li
149.52 55.9355 li
149.161 55.2324 li
149.038 54.4526 li
149.161 53.6729 li
149.52 52.9697 li
150.078 52.4111 li
150.781 52.0527 li
151.561 51.9297 li
cp
0 0 0 rgb
@
134.207 73.6172 mo
134.987 73.7402 li
135.69 74.0986 li
136.249 74.6572 li
136.607 75.3604 li
136.73 76.1401 li
136.607 76.9199 li
136.249 77.623 li
135.69 78.1816 li
134.987 78.54 li
134.207 78.6631 li
133.428 78.54 li
132.725 78.1816 li
132.166 77.623 li
131.808 76.9199 li
131.685 76.1401 li
131.808 75.3604 li
132.166 74.6572 li
132.725 74.0986 li
133.428 73.7402 li
134.207 73.6172 li
cp
1 0 0 rgb
f
134.207 73.6172 mo
134.987 73.7402 li
135.69 74.0986 li
136.249 74.6572 li
136.607 75.3604 li
136.73 76.1401 li
136.607 76.9199 li
136.249 77.623 li
135.69 78.1816 li
134.987 78.54 li
134.207 78.6631 li
133.428 78.54 li
132.725 78.1816 li
132.166 77.623 li
131.808 76.9199 li
131.685 76.1401 li
131.808 75.3604 li
132.166 74.6572 li
132.725 74.0986 li
133.428 73.7402 li
134.207 73.6172 li
cp
0 0 0 rgb
@
155.289 52.0361 mo
156.068 52.1592 li
156.771 52.5176 li
157.33 53.0762 li
157.688 53.7793 li
157.812 54.5591 li
157.688 55.3389 li
157.33 56.042 li
156.771 56.6006 li
156.068 56.959 li
155.289 57.082 li
154.509 56.959 li
153.806 56.6006 li
153.247 56.042 li
152.889 55.3389 li
152.766 54.5591 li
152.889 53.7793 li
153.247 53.0762 li
153.806 52.5176 li
154.509 52.1592 li
155.289 52.0361 li
cp
1 0 0 rgb
f
155.289 52.0361 mo
156.068 52.1592 li
156.771 52.5176 li
157.33 53.0762 li
157.688 53.7793 li
157.812 54.5591 li
157.688 55.3389 li
157.33 56.042 li
156.771 56.6006 li
156.068 56.959 li
155.289 57.082 li
154.509 56.959 li
153.806 56.6006 li
153.247 56.042 li
152.889 55.3389 li
152.766 54.5591 li
152.889 53.7793 li
153.247 53.0762 li
153.806 52.5176 li
154.509 52.1592 li
155.289 52.0361 li
cp
0 0 0 rgb
@
210.92 65.1714 mo
210.92 68.7397 li
207.352 68.7397 li
207.352 65.1714 li
210.92 65.1714 li
cp
1 1 1 rgb
f
210.92 65.1714 mo
210.92 68.7397 li
207.352 68.7397 li
207.352 65.1714 li
210.92 65.1714 li
cp
0 0 0 rgb
@
113.919 13.7134 mo
115.903 13.7305 li
117.887 13.7827 li
119.868 13.8691 li
121.849 13.9902 li
123.826 14.146 li
125.801 14.3359 li
127.772 14.5605 li
129.739 14.8193 li
131.701 15.1128 li
133.657 15.4404 li
135.608 15.8018 li
137.553 16.1973 li
139.489 16.6265 li
141.418 17.0898 li
143.339 17.5864 li
145.251 18.1167 li
147.153 18.6802 li
149.045 19.2769 li
150.926 19.9063 li
152.796 20.5684 li
154.654 21.2632 li
156.5 21.9902 li
158.333 22.7495 li
160.152 23.5405 li
161.958 24.3633 li
163.748 25.2173 li
165.523 26.1025 li
167.283 27.0186 li
169.027 27.9653 li
170.754 28.9419 li
172.463 29.9492 li
174.154 30.9854 li
175.828 32.0513 li
177.482 33.1465 li
179.117 34.27 li
180.732 35.4219 li
182.327 36.6021 li
183.9 37.8101 li
185.453 39.0449 li
186.984 40.3066 li
188.493 41.5952 li
189.979 42.9097 li
191.441 44.25 li
192.88 45.6157 li
194.295 47.0063 li
195.686 48.4209 li
197.052 49.8604 li
198.392 51.3228 li
199.706 52.8086 li
200.994 54.3174 li
202.257 55.8481 li
203.491 57.4004 li
204.699 58.9746 li
205.879 60.5693 li
207.031 62.1846 li
208.155 63.8193 li
209.25 65.4736 li
210.315 67.147 li
211.353 68.8384 li
212.359 70.5479 li
213.336 72.2744 li
214.283 74.0181 li
215.199 75.7773 li
216.084 77.5532 li
216.938 79.3438 li
217.761 81.1489 li
218.552 82.9683 li
219.311 84.8013 li
220.038 86.647 li
220.732 88.5054 li
221.396 90.375 li
222.024 92.2568 li
222.621 94.1484 li
223.185 96.0508 li
223.715 97.9624 li
224.212 99.8833 li
224.675 101.813 li
225.104 103.749 li
225.5 105.693 li
225.861 107.644 li
226.188 109.601 li
226.481 111.563 li
226.74 113.529 li
226.965 115.501 li
227.155 117.476 li
227.312 119.453 li
227.433 121.433 li
227.519 123.415 li
227.57 125.397 li
227.588 127.382 li
227.57 129.366 li
227.519 131.349 li
227.433 133.331 li
227.312 135.312 li
227.155 137.288 li
226.965 139.263 li
226.74 141.235 li
226.481 143.202 li
226.188 145.163 li
225.861 147.12 li
225.5 149.071 li
225.104 151.015 li
224.675 152.952 li
224.212 154.882 li
223.715 156.802 li
223.185 158.714 li
222.621 160.616 li
222.024 162.507 li
221.396 164.39 li
220.732 166.259 li
220.038 168.118 li
219.311 169.964 li
218.552 171.796 li
217.761 173.616 li
216.938 175.421 li
216.084 177.212 li
215.199 178.987 li
214.283 180.747 li
213.336 182.489 li
212.359 184.216 li
211.353 185.925 li
210.315 187.618 li
209.25 189.29 li
208.155 190.944 li
207.031 192.579 li
205.879 194.194 li
204.699 195.79 li
203.491 197.364 li
202.257 198.917 li
200.994 200.446 li
199.706 201.956 li
198.392 203.44 li
197.052 204.903 li
195.686 206.343 li
194.295 207.759 li
192.88 209.149 li
191.441 210.515 li
189.979 211.854 li
188.493 213.169 li
186.984 214.458 li
185.453 215.72 li
183.9 216.954 li
182.327 218.161 li
180.732 219.343 li
179.117 220.493 li
177.482 221.618 li
175.828 222.712 li
174.154 223.778 li
172.463 224.815 li
170.754 225.821 li
169.027 226.8 li
167.283 227.745 li
165.523 228.661 li
163.748 229.548 li
161.958 230.401 li
160.152 231.224 li
158.333 232.015 li
156.5 232.774 li
154.654 233.501 li
152.796 234.196 li
150.926 234.858 li
149.045 235.487 li
147.153 236.085 li
145.251 236.647 li
143.339 237.177 li
141.418 237.675 li
139.489 238.138 li
137.553 238.567 li
135.608 238.962 li
133.657 239.323 li
131.701 239.651 li
129.739 239.944 li
127.772 240.204 li
125.801 240.429 li
123.826 240.618 li
121.849 240.774 li
119.868 240.896 li
117.887 240.981 li
115.903 241.034 li
113.919 241.052 li
111.936 241.034 li
109.952 240.981 li
107.971 240.896 li
105.99 240.774 li
104.013 240.618 li
102.038 240.429 li
100.066 240.204 li
98.0996 239.944 li
96.1377 239.651 li
94.1807 239.323 li
92.2305 238.962 li
90.2861 238.567 li
88.3496 238.138 li
86.4199 237.675 li
84.5 237.177 li
82.5879 236.647 li
80.6855 236.085 li
78.7939 235.487 li
76.9121 234.858 li
75.042 234.196 li
73.1836 233.501 li
71.3379 232.774 li
69.5049 232.015 li
67.6855 231.224 li
65.8809 230.401 li
64.0898 229.548 li
62.3145 228.661 li
60.5547 227.745 li
58.8115 226.8 li
57.085 225.821 li
55.375 224.815 li
53.6836 223.778 li
52.0107 222.712 li
50.3564 221.618 li
48.7217 220.493 li
47.1064 219.343 li
45.5117 218.161 li
43.9375 216.954 li
42.3848 215.72 li
40.8545 214.458 li
39.3457 213.169 li
37.8604 211.854 li
36.3975 210.515 li
34.958 209.149 li
33.543 207.759 li
32.1523 206.343 li
30.7871 204.903 li
29.4473 203.44 li
28.1318 201.956 li
26.8438 200.446 li
25.582 198.917 li
24.3467 197.364 li
23.1396 195.79 li
21.959 194.194 li
20.8076 192.579 li
19.6836 190.944 li
18.5889 189.29 li
17.5225 187.618 li
16.4863 185.925 li
15.4795 184.216 li
14.502 182.489 li
13.5557 180.747 li
12.6396 178.987 li
11.7539 177.212 li
10.9004 175.421 li
10.0771 173.616 li
9.28613 171.796 li
8.52734 169.964 li
7.7998 168.118 li
7.10547 166.259 li
6.44336 164.39 li
5.81348 162.507 li
5.2168 160.616 li
4.65332 158.714 li
4.12402 156.802 li
3.62695 154.882 li
3.16406 152.952 li
2.73438 151.015 li
2.33887 149.071 li
1.97754 147.12 li
1.64941 145.163 li
1.35645 143.202 li
1.09766 141.235 li
0.873047 139.263 li
0.682617 137.288 li
0.527344 135.312 li
0.40625 133.331 li
0.319336 131.349 li
0.267578 129.366 li
0.25 127.382 li
0.267578 125.397 li
0.319336 123.415 li
0.40625 121.433 li
0.527344 119.453 li
0.682617 117.476 li
0.873047 115.501 li
1.09766 113.529 li
1.35645 111.563 li
1.64941 109.601 li
1.97754 107.644 li
2.33887 105.693 li
2.73438 103.749 li
3.16406 101.813 li
3.62695 99.8833 li
4.12402 97.9624 li
4.65332 96.0508 li
5.2168 94.1484 li
5.81348 92.2568 li
6.44336 90.375 li
7.10547 88.5054 li
7.7998 86.647 li
8.52734 84.8013 li
9.28613 82.9683 li
10.0771 81.1489 li
10.9004 79.3438 li
11.7539 77.5532 li
12.6396 75.7773 li
13.5557 74.0181 li
14.502 72.2744 li
15.4795 70.5479 li
16.4863 68.8384 li
17.5225 67.147 li
18.5889 65.4736 li
19.6836 63.8193 li
20.8076 62.1846 li
21.959 60.5693 li
23.1396 58.9746 li
24.3467 57.4004 li
25.582 55.8481 li
26.8438 54.3174 li
28.1318 52.8086 li
29.4473 51.3228 li
30.7871 49.8604 li
32.1523 48.4209 li
33.543 47.0063 li
34.958 45.6157 li
36.3975 44.25 li
37.8604 42.9097 li
39.3457 41.5952 li
40.8545 40.3066 li
42.3848 39.0449 li
43.9375 37.8101 li
45.5117 36.6021 li
47.1064 35.4219 li
48.7217 34.27 li
50.3564 33.1465 li
52.0107 32.0513 li
53.6836 30.9854 li
55.375 29.9492 li
57.085 28.9419 li
58.8115 27.9653 li
60.5547 27.0186 li
62.3145 26.1025 li
64.0898 25.2173 li
65.8809 24.3633 li
67.6855 23.5405 li
69.5049 22.7495 li
71.3379 21.9902 li
73.1836 21.2632 li
75.042 20.5684 li
76.9121 19.9063 li
78.7939 19.2769 li
80.6855 18.6802 li
82.5879 18.1167 li
84.5 17.5864 li
86.4199 17.0898 li
88.3496 16.6265 li
90.2861 16.1973 li
92.2305 15.8018 li
94.1807 15.4404 li
96.1377 15.1128 li
98.0996 14.8193 li
100.066 14.5605 li
102.038 14.3359 li
104.013 14.146 li
105.99 13.9902 li
107.971 13.8691 li
109.952 13.7827 li
111.936 13.7305 li
113.919 13.7134 li
1 1 1 rgb
f
2 lc
113.919 13.7134 mo
115.903 13.7305 li
117.887 13.7827 li
119.868 13.8691 li
121.849 13.9902 li
123.826 14.146 li
125.801 14.3359 li
127.772 14.5605 li
129.739 14.8193 li
131.701 15.1128 li
133.657 15.4404 li
135.608 15.8018 li
137.553 16.1973 li
139.489 16.6265 li
141.418 17.0898 li
143.339 17.5864 li
145.251 18.1167 li
147.153 18.6802 li
149.045 19.2769 li
150.926 19.9063 li
152.796 20.5684 li
154.654 21.2632 li
156.5 21.9902 li
158.333 22.7495 li
160.152 23.5405 li
161.958 24.3633 li
163.748 25.2173 li
165.523 26.1025 li
167.283 27.0186 li
169.027 27.9653 li
170.754 28.9419 li
172.463 29.9492 li
174.154 30.9854 li
175.828 32.0513 li
177.482 33.1465 li
179.117 34.27 li
180.732 35.4219 li
182.327 36.6021 li
183.9 37.8101 li
185.453 39.0449 li
186.984 40.3066 li
188.493 41.5952 li
189.979 42.9097 li
191.441 44.25 li
192.88 45.6157 li
194.295 47.0063 li
195.686 48.4209 li
197.052 49.8604 li
198.392 51.3228 li
199.706 52.8086 li
200.994 54.3174 li
202.257 55.8481 li
203.491 57.4004 li
204.699 58.9746 li
205.879 60.5693 li
207.031 62.1846 li
208.155 63.8193 li
209.25 65.4736 li
210.315 67.147 li
211.353 68.8384 li
212.359 70.5479 li
213.336 72.2744 li
214.283 74.0181 li
215.199 75.7773 li
216.084 77.5532 li
216.938 79.3438 li
217.761 81.1489 li
218.552 82.9683 li
219.311 84.8013 li
220.038 86.647 li
220.732 88.5054 li
221.396 90.375 li
222.024 92.2568 li
222.621 94.1484 li
223.185 96.0508 li
223.715 97.9624 li
224.212 99.8833 li
224.675 101.813 li
225.104 103.749 li
225.5 105.693 li
225.861 107.644 li
226.188 109.601 li
226.481 111.563 li
226.74 113.529 li
226.965 115.501 li
227.155 117.476 li
227.312 119.453 li
227.433 121.433 li
227.519 123.415 li
227.57 125.397 li
227.588 127.382 li
227.57 129.366 li
227.519 131.349 li
227.433 133.331 li
227.312 135.312 li
227.155 137.288 li
226.965 139.263 li
226.74 141.235 li
226.481 143.202 li
226.188 145.163 li
225.861 147.12 li
225.5 149.071 li
225.104 151.015 li
224.675 152.952 li
224.212 154.882 li
223.715 156.802 li
223.185 158.714 li
222.621 160.616 li
222.024 162.507 li
221.396 164.39 li
220.732 166.259 li
220.038 168.118 li
219.311 169.964 li
218.552 171.796 li
217.761 173.616 li
216.938 175.421 li
216.084 177.212 li
215.199 178.987 li
214.283 180.747 li
213.336 182.489 li
212.359 184.216 li
211.353 185.925 li
210.315 187.618 li
209.25 189.29 li
208.155 190.944 li
207.031 192.579 li
205.879 194.194 li
204.699 195.79 li
203.491 197.364 li
202.257 198.917 li
200.994 200.446 li
199.706 201.956 li
198.392 203.44 li
197.052 204.903 li
195.686 206.343 li
194.295 207.759 li
192.88 209.149 li
191.441 210.515 li
189.979 211.854 li
188.493 213.169 li
186.984 214.458 li
185.453 215.72 li
183.9 216.954 li
182.327 218.161 li
180.732 219.343 li
179.117 220.493 li
177.482 221.618 li
175.828 222.712 li
174.154 223.778 li
172.463 224.815 li
170.754 225.821 li
169.027 226.8 li
167.283 227.745 li
165.523 228.661 li
163.748 229.548 li
161.958 230.401 li
160.152 231.224 li
158.333 232.015 li
156.5 232.774 li
154.654 233.501 li
152.796 234.196 li
150.926 234.858 li
149.045 235.487 li
147.153 236.085 li
145.251 236.647 li
143.339 237.177 li
141.418 237.675 li
139.489 238.138 li
137.553 238.567 li
135.608 238.962 li
133.657 239.323 li
131.701 239.651 li
129.739 239.944 li
127.772 240.204 li
125.801 240.429 li
123.826 240.618 li
121.849 240.774 li
119.868 240.896 li
117.887 240.981 li
115.903 241.034 li
113.919 241.052 li
111.936 241.034 li
109.952 240.981 li
107.971 240.896 li
105.99 240.774 li
104.013 240.618 li
102.038 240.429 li
100.066 240.204 li
98.0996 239.944 li
96.1377 239.651 li
94.1807 239.323 li
92.2305 238.962 li
90.2861 238.567 li
88.3496 238.138 li
86.4199 237.675 li
84.5 237.177 li
82.5879 236.647 li
80.6855 236.085 li
78.7939 235.487 li
76.9121 234.858 li
75.042 234.196 li
73.1836 233.501 li
71.3379 232.774 li
69.5049 232.015 li
67.6855 231.224 li
65.8809 230.401 li
64.0898 229.548 li
62.3145 228.661 li
60.5547 227.745 li
58.8115 226.8 li
57.085 225.821 li
55.375 224.815 li
53.6836 223.778 li
52.0107 222.712 li
50.3564 221.618 li
48.7217 220.493 li
47.1064 219.343 li
45.5117 218.161 li
43.9375 216.954 li
42.3848 215.72 li
40.8545 214.458 li
39.3457 213.169 li
37.8604 211.854 li
36.3975 210.515 li
34.958 209.149 li
33.543 207.759 li
32.1523 206.343 li
30.7871 204.903 li
29.4473 203.44 li
28.1318 201.956 li
26.8438 200.446 li
25.582 198.917 li
24.3467 197.364 li
23.1396 195.79 li
21.959 194.194 li
20.8076 192.579 li
19.6836 190.944 li
18.5889 189.29 li
17.5225 187.618 li
16.4863 185.925 li
15.4795 184.216 li
14.502 182.489 li
13.5557 180.747 li
12.6396 178.987 li
11.7539 177.212 li
10.9004 175.421 li
10.0771 173.616 li
9.28613 171.796 li
8.52734 169.964 li
7.7998 168.118 li
7.10547 166.259 li
6.44336 164.39 li
5.81348 162.507 li
5.2168 160.616 li
4.65332 158.714 li
4.12402 156.802 li
3.62695 154.882 li
3.16406 152.952 li
2.73438 151.015 li
2.33887 149.071 li
1.97754 147.12 li
1.64941 145.163 li
1.35645 143.202 li
1.09766 141.235 li
0.873047 139.263 li
0.682617 137.288 li
0.527344 135.312 li
0.40625 133.331 li
0.319336 131.349 li
0.267578 129.366 li
0.25 127.382 li
0.267578 125.397 li
0.319336 123.415 li
0.40625 121.433 li
0.527344 119.453 li
0.682617 117.476 li
0.873047 115.501 li
1.09766 113.529 li
1.35645 111.563 li
1.64941 109.601 li
1.97754 107.644 li
2.33887 105.693 li
2.73438 103.749 li
3.16406 101.813 li
3.62695 99.8833 li
4.12402 97.9624 li
4.65332 96.0508 li
5.2168 94.1484 li
5.81348 92.2568 li
6.44336 90.375 li
7.10547 88.5054 li
7.7998 86.647 li
8.52734 84.8013 li
9.28613 82.9683 li
10.0771 81.1489 li
10.9004 79.3438 li
11.7539 77.5532 li
12.6396 75.7773 li
13.5557 74.0181 li
14.502 72.2744 li
15.4795 70.5479 li
16.4863 68.8384 li
17.5225 67.147 li
18.5889 65.4736 li
19.6836 63.8193 li
20.8076 62.1846 li
21.959 60.5693 li
23.1396 58.9746 li
24.3467 57.4004 li
25.582 55.8481 li
26.8438 54.3174 li
28.1318 52.8086 li
29.4473 51.3228 li
30.7871 49.8604 li
32.1523 48.4209 li
33.543 47.0063 li
34.958 45.6157 li
36.3975 44.25 li
37.8604 42.9097 li
39.3457 41.5952 li
40.8545 40.3066 li
42.3848 39.0449 li
43.9375 37.8101 li
45.5117 36.6021 li
47.1064 35.4219 li
48.7217 34.27 li
50.3564 33.1465 li
52.0107 32.0513 li
53.6836 30.9854 li
55.375 29.9492 li
57.085 28.9419 li
58.8115 27.9653 li
60.5547 27.0186 li
62.3145 26.1025 li
64.0898 25.2173 li
65.8809 24.3633 li
67.6855 23.5405 li
69.5049 22.7495 li
71.3379 21.9902 li
73.1836 21.2632 li
75.042 20.5684 li
76.9121 19.9063 li
78.7939 19.2769 li
80.6855 18.6802 li
82.5879 18.1167 li
84.5 17.5864 li
86.4199 17.0898 li
88.3496 16.6265 li
90.2861 16.1973 li
92.2305 15.8018 li
94.1807 15.4404 li
96.1377 15.1128 li
98.0996 14.8193 li
100.066 14.5605 li
102.038 14.3359 li
104.013 14.146 li
105.99 13.9902 li
107.971 13.8691 li
109.952 13.7827 li
111.936 13.7305 li
113.919 13.7134 li
0 0 0 rgb
@
113.919 13.7134 mo
113.919 14.7095 li
113.919 15.7144 li
113.919 16.7275 li
@
133.657 15.4404 mo
133.484 16.4214 li
133.311 17.4111 li
133.134 18.4087 li
@
152.796 20.5684 mo
152.456 21.5044 li
152.112 22.4487 li
151.766 23.4009 li
@
170.754 28.9419 mo
170.256 29.8047 li
169.753 30.6748 li
169.246 31.5527 li
@
186.984 40.3066 mo
186.344 41.0698 li
185.698 41.8398 li
185.047 42.6162 li
@
200.994 54.3174 mo
200.231 54.9575 li
199.462 55.6035 li
198.686 56.2549 li
@
212.359 70.5479 mo
211.496 71.0459 li
210.626 71.5483 li
209.749 72.0552 li
@
220.732 88.5054 mo
219.797 88.8457 li
218.853 89.1895 li
217.9 89.5361 li
@
225.861 107.644 mo
224.88 107.817 li
223.891 107.991 li
222.893 108.167 li
@
227.588 127.382 mo
226.592 127.382 li
225.587 127.382 li
224.573 127.382 li
@
225.861 147.12 mo
224.88 146.948 li
223.891 146.772 li
222.893 146.597 li
@
220.732 166.259 mo
219.797 165.919 li
218.853 165.575 li
217.9 165.228 li
@
212.359 184.216 mo
211.496 183.718 li
210.626 183.216 li
209.749 182.71 li
@
200.994 200.446 mo
200.231 199.806 li
199.462 199.161 li
198.686 198.509 li
@
186.984 214.458 mo
186.344 213.694 li
185.698 212.925 li
185.047 212.147 li
@
170.754 225.821 mo
170.256 224.96 li
169.753 224.089 li
169.246 223.212 li
@
152.796 234.196 mo
152.456 233.259 li
152.112 232.315 li
151.766 231.362 li
@
133.657 239.323 mo
133.484 238.343 li
133.311 237.353 li
133.134 236.354 li
@
113.919 241.052 mo
113.919 240.054 li
113.919 239.05 li
113.919 238.036 li
@
94.1807 239.323 mo
94.3535 238.343 li
94.5283 237.353 li
94.7041 236.354 li
@
75.042 234.196 mo
75.3828 233.259 li
75.7266 232.315 li
76.0732 231.362 li
@
57.085 225.821 mo
57.583 224.96 li
58.085 224.089 li
58.5918 223.212 li
@
40.8545 214.458 mo
41.4951 213.694 li
42.1406 212.925 li
42.792 212.147 li
@
26.8438 200.446 mo
27.6074 199.806 li
28.377 199.161 li
29.1533 198.509 li
@
15.4795 184.216 mo
16.3418 183.718 li
17.2119 183.216 li
18.0898 182.71 li
@
7.10547 166.259 mo
8.04199 165.919 li
8.98633 165.575 li
9.93848 165.228 li
@
1.97754 147.12 mo
2.95801 146.948 li
3.94824 146.772 li
4.94629 146.597 li
@
0.25 127.382 mo
1.24707 127.382 li
2.25195 127.382 li
3.26465 127.382 li
@
1.97754 107.644 mo
2.95801 107.817 li
3.94824 107.991 li
4.94629 108.167 li
@
7.10547 88.5054 mo
8.04199 88.8457 li
8.98633 89.1895 li
9.93848 89.5361 li
@
15.4795 70.5479 mo
16.3418 71.0459 li
17.2119 71.5483 li
18.0898 72.0552 li
@
26.8438 54.3174 mo
27.6074 54.9575 li
28.377 55.6035 li
29.1533 56.2549 li
@
40.8545 40.3066 mo
41.4951 41.0698 li
42.1406 41.8398 li
42.792 42.6162 li
@
57.085 28.9419 mo
57.583 29.8047 li
58.085 30.6748 li
58.5918 31.5527 li
@
75.042 20.5684 mo
75.3828 21.5044 li
75.7266 22.4487 li
76.0732 23.4009 li
@
94.1807 15.4404 mo
94.3535 16.4214 li
94.5283 17.4111 li
94.7041 18.4087 li
@
EHPQEY+ComicSansMS*1 [12 0 0 -12 0 0 ]msf226.088 133.386 mo(| )[5.05664 0 ]xsh216.749 133.386 mo(| )[5.05664 0 ]xsh205.623 133.386 mo(| )[5.05664 0 ]xsh193.795 133.386 mo(| )[5.05664 0 ]xsh181.356 133.386 mo(| )[5.05664 0 ]xsh168.399 133.386 mo(| )[5.05664 0 ]xsh155.025 133.386 mo(| )[5.05664 0 ]xsh141.333 133.386 mo(| )[5.05664 0 ]xsh127.43 133.386 mo(| )[5.05664 0 ]xsh113.419 133.386 mo(| )[5.05664 0 ]xsh146.23 49.5952 mo
146.898 46.6714 150.033 45.4561 150.397 42.2212 cv
150.813 38.5317 147.536 36.7866 146.414 40.5933 cv
0.968627 0.0431373 0.329412 rgb
f
1 lw
0 lc
146.23 49.5952 mo
146.898 46.6714 150.033 45.4561 150.397 42.2212 cv
150.813 38.5317 147.536 36.7866 146.414 40.5933 cv
0 0 0 rgb
@
146.276 40.123 mo
146.733 41.0552 li
145.512 37.2847 141.455 38.7095 141.818 42.3101 cv
142.138 45.4663 145.908 46.8936 146.611 49.7739 cv
0.968627 0.0431373 0.329412 rgb
f
146.276 40.123 mo
146.733 41.0552 li
145.512 37.2847 141.455 38.7095 141.818 42.3101 cv
142.138 45.4663 145.908 46.8936 146.611 49.7739 cv
0 0 0 rgb
@
131.355 55.1934 mo
132.023 52.2695 135.158 51.0542 135.522 47.8193 cv
135.938 44.1299 132.661 42.3848 131.539 46.1914 cv
0.968627 0.0431373 0.329412 rgb
f
131.355 55.1934 mo
132.023 52.2695 135.158 51.0542 135.522 47.8193 cv
135.938 44.1299 132.661 42.3848 131.539 46.1914 cv
0 0 0 rgb
@
131.401 45.7212 mo
131.858 46.6533 li
130.637 42.8828 126.58 44.3076 126.943 47.9082 cv
127.263 51.0645 131.033 52.4917 131.736 55.3721 cv
0.968627 0.0431373 0.329412 rgb
f
131.401 45.7212 mo
131.858 46.6533 li
130.637 42.8828 126.58 44.3076 126.943 47.9082 cv
127.263 51.0645 131.033 52.4917 131.736 55.3721 cv
0 0 0 rgb
@
105.852 80.2563 mo
106.521 77.3325 109.655 76.1172 110.02 72.8823 cv
110.435 69.1929 107.158 67.4478 106.036 71.2544 cv
0.968627 0.0431373 0.329412 rgb
f
105.852 80.2563 mo
106.521 77.3325 109.655 76.1172 110.02 72.8823 cv
110.435 69.1929 107.158 67.4478 106.036 71.2544 cv
0 0 0 rgb
@
105.898 70.7842 mo
106.355 71.7163 li
105.134 67.9458 101.077 69.3706 101.44 72.9712 cv
101.76 76.1274 105.53 77.5547 106.233 80.4351 cv
0.968627 0.0431373 0.329412 rgb
f
105.898 70.7842 mo
106.355 71.7163 li
105.134 67.9458 101.077 69.3706 101.44 72.9712 cv
101.76 76.1274 105.53 77.5547 106.233 80.4351 cv
0 0 0 rgb
@
102.065 87.8091 mo
102.734 84.8853 105.869 83.6699 106.233 80.4351 cv
106.648 76.7456 103.372 75.0005 102.249 78.8071 cv
0.968627 0.0431373 0.329412 rgb
f
102.065 87.8091 mo
102.734 84.8853 105.869 83.6699 106.233 80.4351 cv
106.648 76.7456 103.372 75.0005 102.249 78.8071 cv
0 0 0 rgb
@
102.112 78.3369 mo
102.568 79.269 li
101.347 75.4985 97.2905 76.9233 97.6538 80.5239 cv
97.9731 83.6802 101.744 85.1074 102.446 87.9878 cv
0.968627 0.0431373 0.329412 rgb
f
102.112 78.3369 mo
102.568 79.269 li
101.347 75.4985 97.2905 76.9233 97.6538 80.5239 cv
97.9731 83.6802 101.744 85.1074 102.446 87.9878 cv
0 0 0 rgb
@
136.777 103.605 mo
137.446 100.682 140.581 99.4663 140.945 96.2314 cv
141.36 92.542 138.083 90.7969 136.961 94.6035 cv
0.968627 0.0431373 0.329412 rgb
f
136.777 103.605 mo
137.446 100.682 140.581 99.4663 140.945 96.2314 cv
141.36 92.542 138.083 90.7969 136.961 94.6035 cv
0 0 0 rgb
@
136.824 94.1333 mo
137.28 95.0654 li
136.059 91.2949 132.002 92.7197 132.366 96.3203 cv
132.685 99.4766 136.456 100.904 137.158 103.784 cv
0.968627 0.0431373 0.329412 rgb
f
136.824 94.1333 mo
137.28 95.0654 li
136.059 91.2949 132.002 92.7197 132.366 96.3203 cv
132.685 99.4766 136.456 100.904 137.158 103.784 cv
0 0 0 rgb
@
136.204 107.711 mo
136.873 104.787 140.007 103.572 140.372 100.337 cv
140.787 96.6475 137.51 94.9023 136.388 98.709 cv
0.968627 0.0431373 0.329412 rgb
f
136.204 107.711 mo
136.873 104.787 140.007 103.572 140.372 100.337 cv
140.787 96.6475 137.51 94.9023 136.388 98.709 cv
0 0 0 rgb
@
136.25 98.2388 mo
136.707 99.1709 li
135.486 95.4004 131.429 96.8252 131.792 100.426 cv
132.112 103.582 135.882 105.009 136.585 107.89 cv
0.968627 0.0431373 0.329412 rgb
f
136.25 98.2388 mo
136.707 99.1709 li
135.486 95.4004 131.429 96.8252 131.792 100.426 cv
132.112 103.582 135.882 105.009 136.585 107.89 cv
0 0 0 rgb
@
173.304 116.362 mo
173.972 113.438 177.107 112.223 177.471 108.988 cv
177.886 105.299 174.61 103.554 173.487 107.36 cv
0.968627 0.0431373 0.329412 rgb
f
173.304 116.362 mo
173.972 113.438 177.107 112.223 177.471 108.988 cv
177.886 105.299 174.61 103.554 173.487 107.36 cv
0 0 0 rgb
@
173.35 106.89 mo
173.807 107.822 li
172.585 104.052 168.529 105.477 168.892 109.077 cv
169.211 112.233 172.982 113.661 173.685 116.541 cv
0.968627 0.0431373 0.329412 rgb
f
173.35 106.89 mo
173.807 107.822 li
172.585 104.052 168.529 105.477 168.892 109.077 cv
169.211 112.233 172.982 113.661 173.685 116.541 cv
0 0 0 rgb
@
163.999 118.175 mo
164.667 115.251 167.802 114.036 168.167 110.801 cv
168.582 107.112 165.305 105.367 164.183 109.173 cv
0.968627 0.0431373 0.329412 rgb
f
163.999 118.175 mo
164.667 115.251 167.802 114.036 168.167 110.801 cv
168.582 107.112 165.305 105.367 164.183 109.173 cv
0 0 0 rgb
@
164.045 108.703 mo
164.502 109.635 li
163.281 105.865 159.224 107.29 159.587 110.89 cv
159.907 114.046 163.677 115.474 164.38 118.354 cv
0.968627 0.0431373 0.329412 rgb
f
164.045 108.703 mo
164.502 109.635 li
163.281 105.865 159.224 107.29 159.587 110.89 cv
159.907 114.046 163.677 115.474 164.38 118.354 cv
0 0 0 rgb
@
131.186 124.604 mo
131.854 121.681 134.989 120.466 135.353 117.23 cv
135.768 113.541 132.492 111.796 131.369 115.603 cv
0.968627 0.0431373 0.329412 rgb
f
131.186 124.604 mo
131.854 121.681 134.989 120.466 135.353 117.23 cv
135.768 113.541 132.492 111.796 131.369 115.603 cv
0 0 0 rgb
@
131.232 115.132 mo
131.688 116.064 li
130.467 112.294 126.411 113.719 126.774 117.319 cv
127.093 120.476 130.864 121.903 131.566 124.782 cv
0.968627 0.0431373 0.329412 rgb
f
131.232 115.132 mo
131.688 116.064 li
130.467 112.294 126.411 113.719 126.774 117.319 cv
127.093 120.476 130.864 121.903 131.566 124.782 cv
0 0 0 rgb
@
147.468 134.636 mo
148.136 131.712 151.271 130.497 151.635 127.261 cv
152.05 123.571 148.774 121.827 147.651 125.634 cv
0.968627 0.0431373 0.329412 rgb
f
147.468 134.636 mo
148.136 131.712 151.271 130.497 151.635 127.261 cv
152.05 123.571 148.774 121.827 147.651 125.634 cv
0 0 0 rgb
@
147.514 125.163 mo
147.971 126.095 li
146.75 122.325 142.693 123.749 143.056 127.351 cv
143.375 130.507 147.146 131.935 147.849 134.813 cv
0.968627 0.0431373 0.329412 rgb
f
147.514 125.163 mo
147.971 126.095 li
146.75 122.325 142.693 123.749 143.056 127.351 cv
143.375 130.507 147.146 131.935 147.849 134.813 cv
0 0 0 rgb
@
209.935 72.9692 mo
210.603 70.0454 213.737 68.8296 214.103 65.5942 cv
214.517 61.9048 211.241 60.1606 210.118 63.9673 cv
1 1 1 rgb
f
209.935 72.9692 mo
210.603 70.0454 213.737 68.8296 214.103 65.5942 cv
214.517 61.9048 211.241 60.1606 210.118 63.9673 cv
0.968627 0.0431373 0.329412 rgb
@
209.981 63.4966 mo
210.438 64.4282 li
209.216 60.6587 205.159 62.0825 205.522 65.6841 cv
205.843 68.8403 209.612 70.2671 210.315 73.147 cv
1 1 1 rgb
f
209.981 63.4966 mo
210.438 64.4282 li
209.216 60.6587 205.159 62.0825 205.522 65.6841 cv
205.843 68.8403 209.612 70.2671 210.315 73.147 cv
0.968627 0.0431373 0.329412 rgb
@
131.668 81.5854 mo
132.337 78.6616 135.472 77.4463 135.836 74.2114 cv
136.251 70.522 132.975 68.7769 131.852 72.5835 cv
f
131.668 81.5854 mo
132.337 78.6616 135.472 77.4463 135.836 74.2114 cv
136.251 70.522 132.975 68.7769 131.852 72.5835 cv
0 0 0 rgb
@
131.715 72.1133 mo
132.171 73.0454 li
130.95 69.2749 126.894 70.6997 127.257 74.3003 cv
127.576 77.4565 131.347 78.8838 132.049 81.7642 cv
0.968627 0.0431373 0.329412 rgb
f
131.715 72.1133 mo
132.171 73.0454 li
130.95 69.2749 126.894 70.6997 127.257 74.3003 cv
127.576 77.4565 131.347 78.8838 132.049 81.7642 cv
0 0 0 rgb
@
148.598 61.9331 mo
149.267 59.0093 152.401 57.7939 152.766 54.5591 cv
153.181 50.8696 149.904 49.1245 148.782 52.9312 cv
0.968627 0.0431373 0.329412 rgb
f
148.598 61.9331 mo
149.267 59.0093 152.401 57.7939 152.766 54.5591 cv
153.181 50.8696 149.904 49.1245 148.782 52.9312 cv
0 0 0 rgb
@
148.645 52.4609 mo
149.101 53.3931 li
147.88 49.6226 143.823 51.0474 144.187 54.6479 cv
144.506 57.8042 148.276 59.2314 148.979 62.1118 cv
0.968627 0.0431373 0.329412 rgb
f
148.645 52.4609 mo
149.101 53.3931 li
147.88 49.6226 143.823 51.0474 144.187 54.6479 cv
144.506 57.8042 148.276 59.2314 148.979 62.1118 cv
0 0 0 rgb
@
151.546 57.1167 mo
152.215 54.1929 155.35 52.9775 155.714 49.7427 cv
156.129 46.0532 152.853 44.3081 151.73 48.1147 cv
0.968627 0.0431373 0.329412 rgb
f
151.546 57.1167 mo
152.215 54.1929 155.35 52.9775 155.714 49.7427 cv
156.129 46.0532 152.853 44.3081 151.73 48.1147 cv
0 0 0 rgb
@
151.593 47.6445 mo
152.049 48.5767 li
150.828 44.8062 146.771 46.231 147.135 49.8315 cv
147.454 52.9878 151.225 54.415 151.927 57.2954 cv
0.968627 0.0431373 0.329412 rgb
f
151.593 47.6445 mo
152.049 48.5767 li
150.828 44.8062 146.771 46.231 147.135 49.8315 cv
147.454 52.9878 151.225 54.415 151.927 57.2954 cv
0 0 0 rgb
@
154.885 50.4077 mo
155.554 47.4839 158.688 46.2686 159.053 43.0337 cv
159.468 39.3442 156.191 37.5991 155.069 41.4058 cv
0.968627 0.0431373 0.329412 rgb
f
154.885 50.4077 mo
155.554 47.4839 158.688 46.2686 159.053 43.0337 cv
159.468 39.3442 156.191 37.5991 155.069 41.4058 cv
0 0 0 rgb
@
154.932 40.9355 mo
155.388 41.8677 li
154.167 38.0972 150.11 39.522 150.474 43.1226 cv
150.793 46.2788 154.563 47.7061 155.266 50.5864 cv
0.968627 0.0431373 0.329412 rgb
f
154.932 40.9355 mo
155.388 41.8677 li
154.167 38.0972 150.11 39.522 150.474 43.1226 cv
150.793 46.2788 154.563 47.7061 155.266 50.5864 cv
0 0 0 rgb
@
157.642 64.811 mo
158.311 61.8872 161.445 60.6719 161.81 57.437 cv
162.225 53.7476 158.948 52.0024 157.826 55.8091 cv
0.968627 0.0431373 0.329412 rgb
f
157.642 64.811 mo
158.311 61.8872 161.445 60.6719 161.81 57.437 cv
162.225 53.7476 158.948 52.0024 157.826 55.8091 cv
0 0 0 rgb
@
157.688 55.3389 mo
158.145 56.271 li
156.924 52.5005 152.867 53.9253 153.23 57.5259 cv
153.55 60.6821 157.32 62.1094 158.023 64.9897 cv
0.968627 0.0431373 0.329412 rgb
f
157.688 55.3389 mo
158.145 56.271 li
156.924 52.5005 152.867 53.9253 153.23 57.5259 cv
153.55 60.6821 157.32 62.1094 158.023 64.9897 cv
0 0 0 rgb
@
169.599 73.6138 mo
170.268 70.6899 173.402 69.4746 173.767 66.2397 cv
174.182 62.5503 170.905 60.8052 169.783 64.6118 cv
0.968627 0.0431373 0.329412 rgb
f
169.599 73.6138 mo
170.268 70.6899 173.402 69.4746 173.767 66.2397 cv
174.182 62.5503 170.905 60.8052 169.783 64.6118 cv
0 0 0 rgb
@
169.646 64.1416 mo
170.102 65.0737 li
168.881 61.3032 164.824 62.728 165.188 66.3286 cv
165.507 69.4849 169.277 70.9121 169.98 73.7925 cv
0.968627 0.0431373 0.329412 rgb
f
169.646 64.1416 mo
170.102 65.0737 li
168.881 61.3032 164.824 62.728 165.188 66.3286 cv
165.507 69.4849 169.277 70.9121 169.98 73.7925 cv
0 0 0 rgb
@
147.498 95.8218 mo
148.166 92.8979 151.301 91.6826 151.665 88.4478 cv
152.08 84.7583 148.804 83.0132 147.681 86.8198 cv
0.968627 0.0431373 0.329412 rgb
f
147.498 95.8218 mo
148.166 92.8979 151.301 91.6826 151.665 88.4478 cv
152.08 84.7583 148.804 83.0132 147.681 86.8198 cv
0 0 0 rgb
@
147.544 86.3496 mo
148 87.2817 li
146.779 83.5112 142.723 84.936 143.086 88.5366 cv
143.405 91.6929 147.176 93.1201 147.878 96.0005 cv
0.968627 0.0431373 0.329412 rgb
f
147.544 86.3496 mo
148 87.2817 li
146.779 83.5112 142.723 84.936 143.086 88.5366 cv
143.405 91.6929 147.176 93.1201 147.878 96.0005 cv
0 0 0 rgb
@
155.947 104.283 mo
156.615 101.359 159.75 100.144 160.114 96.9087 cv
160.529 93.2192 157.253 91.4741 156.13 95.2808 cv
0.968627 0.0431373 0.329412 rgb
f
155.947 104.283 mo
156.615 101.359 159.75 100.144 160.114 96.9087 cv
160.529 93.2192 157.253 91.4741 156.13 95.2808 cv
0 0 0 rgb
@
155.993 94.8105 mo
156.45 95.7427 li
155.229 91.9722 151.172 93.397 151.535 96.9976 cv
151.854 100.154 155.625 101.581 156.328 104.461 cv
0.968627 0.0431373 0.329412 rgb
f
155.993 94.8105 mo
156.45 95.7427 li
155.229 91.9722 151.172 93.397 151.535 96.9976 cv
151.854 100.154 155.625 101.581 156.328 104.461 cv
0 0 0 rgb
@
120.202 30.4897 mo
119.679 32.7734 117.23 33.7246 116.946 36.25 cv
116.622 39.1348 119.181 40.498 120.058 37.5234 cv
0.0470588 0.0431373 0.0470588 rgb
f
120.202 30.4897 mo
119.679 32.7734 117.23 33.7246 116.946 36.25 cv
116.622 39.1348 119.181 40.498 120.058 37.5234 cv
0 0 0 rgb
@
119.904 30.3511 mo
120.453 32.6016 123.399 33.7168 123.648 36.1816 cv
123.932 38.9941 120.762 40.1074 119.808 37.1621 cv
120.166 37.8906 li
0.0470588 0.0431373 0.0470588 rgb
f
119.904 30.3511 mo
120.453 32.6016 123.399 33.7168 123.648 36.1816 cv
123.932 38.9941 120.762 40.1074 119.808 37.1621 cv
120.166 37.8906 li
0 0 0 rgb
@
120.228 37.9141 mo
118.666 40.4141 li
121.166 40.4141 li
0.0470588 0.0431373 0.0470588 rgb
f
120.228 37.9141 mo
118.666 40.4141 li
121.166 40.4141 li
0 0 0 rgb
@
138.733 41.5806 mo
138.21 43.8643 135.761 44.8154 135.477 47.3408 cv
135.153 50.2256 137.712 51.5889 138.589 48.6143 cv
0.0470588 0.0431373 0.0470588 rgb
f
138.733 41.5806 mo
138.21 43.8643 135.761 44.8154 135.477 47.3408 cv
135.153 50.2256 137.712 51.5889 138.589 48.6143 cv
0 0 0 rgb
@
138.435 41.4419 mo
138.984 43.6924 141.93 44.8076 142.179 47.2725 cv
142.463 50.085 139.293 51.1982 138.339 48.2529 cv
138.697 48.9814 li
0.0470588 0.0431373 0.0470588 rgb
f
138.435 41.4419 mo
138.984 43.6924 141.93 44.8076 142.179 47.2725 cv
142.463 50.085 139.293 51.1982 138.339 48.2529 cv
138.697 48.9814 li
0 0 0 rgb
@
138.759 49.0049 mo
137.197 51.5049 li
139.697 51.5049 li
0.0470588 0.0431373 0.0470588 rgb
f
138.759 49.0049 mo
137.197 51.5049 li
139.697 51.5049 li
0 0 0 rgb
@
149.399 41.5806 mo
148.876 43.8643 146.427 44.8154 146.143 47.3408 cv
145.819 50.2256 148.378 51.5889 149.255 48.6143 cv
0.0470588 0.0431373 0.0470588 rgb
f
149.399 41.5806 mo
148.876 43.8643 146.427 44.8154 146.143 47.3408 cv
145.819 50.2256 148.378 51.5889 149.255 48.6143 cv
0 0 0 rgb
@
149.101 41.4419 mo
149.65 43.6924 152.596 44.8076 152.845 47.2725 cv
153.129 50.085 149.959 51.1982 149.005 48.2529 cv
149.363 48.9814 li
0.0470588 0.0431373 0.0470588 rgb
f
149.101 41.4419 mo
149.65 43.6924 152.596 44.8076 152.845 47.2725 cv
153.129 50.085 149.959 51.1982 149.005 48.2529 cv
149.363 48.9814 li
0 0 0 rgb
@
149.425 49.0049 mo
147.863 51.5049 li
150.363 51.5049 li
0.0470588 0.0431373 0.0470588 rgb
f
149.425 49.0049 mo
147.863 51.5049 li
150.363 51.5049 li
0 0 0 rgb
@
147.292 46.5962 mo
146.77 48.8799 144.321 49.8311 144.037 52.3564 cv
143.712 55.2412 146.272 56.6045 147.149 53.6299 cv
0.0470588 0.0431373 0.0470588 rgb
f
147.292 46.5962 mo
146.77 48.8799 144.321 49.8311 144.037 52.3564 cv
143.712 55.2412 146.272 56.6045 147.149 53.6299 cv
0 0 0 rgb
@
146.995 46.4575 mo
147.543 48.708 150.49 49.8232 150.739 52.2881 cv
151.023 55.1006 147.853 56.2139 146.899 53.2686 cv
147.256 53.9971 li
0.0470588 0.0431373 0.0470588 rgb
f
146.995 46.4575 mo
147.543 48.708 150.49 49.8232 150.739 52.2881 cv
151.023 55.1006 147.853 56.2139 146.899 53.2686 cv
147.256 53.9971 li
0 0 0 rgb
@
147.319 54.0205 mo
145.756 56.5205 li
148.256 56.5205 li
0.0470588 0.0431373 0.0470588 rgb
f
147.319 54.0205 mo
145.756 56.5205 li
148.256 56.5205 li
0 0 0 rgb
@
157.399 56.9141 mo
156.876 59.1978 154.427 60.1489 154.143 62.6743 cv
153.819 65.5591 156.378 66.9224 157.255 63.9478 cv
0.0470588 0.0431373 0.0470588 rgb
f
157.399 56.9141 mo
156.876 59.1978 154.427 60.1489 154.143 62.6743 cv
153.819 65.5591 156.378 66.9224 157.255 63.9478 cv
0 0 0 rgb
@
157.101 56.7754 mo
157.65 59.0259 160.596 60.1411 160.845 62.606 cv
161.129 65.4185 157.959 66.5317 157.005 63.5864 cv
157.363 64.3149 li
0.0470588 0.0431373 0.0470588 rgb
f
157.101 56.7754 mo
157.65 59.0259 160.596 60.1411 160.845 62.606 cv
161.129 65.4185 157.959 66.5317 157.005 63.5864 cv
157.363 64.3149 li
0 0 0 rgb
@
157.425 64.3384 mo
155.863 66.8384 li
158.363 66.8384 li
0.0470588 0.0431373 0.0470588 rgb
f
157.425 64.3384 mo
155.863 66.8384 li
158.363 66.8384 li
0 0 0 rgb
@
156.971 64.6362 mo
156.449 66.9199 154 67.8711 153.715 70.3965 cv
153.391 73.2813 155.951 74.6445 156.828 71.6699 cv
0.0470588 0.0431373 0.0470588 rgb
f
156.971 64.6362 mo
156.449 66.9199 154 67.8711 153.715 70.3965 cv
153.391 73.2813 155.951 74.6445 156.828 71.6699 cv
0 0 0 rgb
@
156.673 64.4976 mo
157.222 66.748 160.168 67.8633 160.417 70.3281 cv
160.702 73.1406 157.532 74.2539 156.578 71.3086 cv
156.935 72.0371 li
0.0470588 0.0431373 0.0470588 rgb
f
156.673 64.4976 mo
157.222 66.748 160.168 67.8633 160.417 70.3281 cv
160.702 73.1406 157.532 74.2539 156.578 71.3086 cv
156.935 72.0371 li
0 0 0 rgb
@
156.998 72.0605 mo
155.435 74.5605 li
157.935 74.5605 li
0.0470588 0.0431373 0.0470588 rgb
f
156.998 72.0605 mo
155.435 74.5605 li
157.935 74.5605 li
0 0 0 rgb
@
154.375 63.1914 mo
153.853 65.4751 151.404 66.4263 151.12 68.9517 cv
150.795 71.8364 153.355 73.1997 154.232 70.2251 cv
0.0470588 0.0431373 0.0470588 rgb
f
154.375 63.1914 mo
153.853 65.4751 151.404 66.4263 151.12 68.9517 cv
150.795 71.8364 153.355 73.1997 154.232 70.2251 cv
0 0 0 rgb
@
154.078 63.0527 mo
154.626 65.3032 157.573 66.4185 157.822 68.8833 cv
158.106 71.6958 154.936 72.8091 153.982 69.8638 cv
154.339 70.5923 li
0.0470588 0.0431373 0.0470588 rgb
f
154.078 63.0527 mo
154.626 65.3032 157.573 66.4185 157.822 68.8833 cv
158.106 71.6958 154.936 72.8091 153.982 69.8638 cv
154.339 70.5923 li
0 0 0 rgb
@
154.402 70.6157 mo
152.839 73.1157 li
155.339 73.1157 li
0.0470588 0.0431373 0.0470588 rgb
f
154.402 70.6157 mo
152.839 73.1157 li
155.339 73.1157 li
0 0 0 rgb
@
111.825 55.6211 mo
111.302 57.9048 108.853 58.856 108.569 61.3813 cv
108.245 64.2661 110.804 65.6294 111.681 62.6548 cv
0.0470588 0.0431373 0.0470588 rgb
f
111.825 55.6211 mo
111.302 57.9048 108.853 58.856 108.569 61.3813 cv
108.245 64.2661 110.804 65.6294 111.681 62.6548 cv
0 0 0 rgb
@
111.527 55.4824 mo
112.076 57.7329 115.022 58.8481 115.271 61.313 cv
115.555 64.1255 112.385 65.2388 111.431 62.2935 cv
111.789 63.022 li
0.0470588 0.0431373 0.0470588 rgb
f
111.527 55.4824 mo
112.076 57.7329 115.022 58.8481 115.271 61.313 cv
115.555 64.1255 112.385 65.2388 111.431 62.2935 cv
111.789 63.022 li
0 0 0 rgb
@
111.851 63.0454 mo
110.289 65.5454 li
112.789 65.5454 li
0.0470588 0.0431373 0.0470588 rgb
f
111.851 63.0454 mo
110.289 65.5454 li
112.789 65.5454 li
0 0 0 rgb
@
89.1899 70.1309 mo
88.6675 72.4146 86.2183 73.3657 85.9341 75.8911 cv
85.6099 78.7759 88.1694 80.1392 89.0464 77.1646 cv
0.0470588 0.0431373 0.0470588 rgb
f
89.1899 70.1309 mo
88.6675 72.4146 86.2183 73.3657 85.9341 75.8911 cv
85.6099 78.7759 88.1694 80.1392 89.0464 77.1646 cv
0 0 0 rgb
@
88.8921 69.9922 mo
89.4409 72.2427 92.3872 73.3579 92.6362 75.8228 cv
92.9204 78.6353 89.7505 79.7485 88.7964 76.8032 cv
89.1538 77.5317 li
0.0470588 0.0431373 0.0470588 rgb
f
88.8921 69.9922 mo
89.4409 72.2427 92.3872 73.3579 92.6362 75.8228 cv
92.9204 78.6353 89.7505 79.7485 88.7964 76.8032 cv
89.1538 77.5317 li
0 0 0 rgb
@
89.2163 77.5552 mo
87.6538 80.0552 li
90.1538 80.0552 li
0.0470588 0.0431373 0.0470588 rgb
f
89.2163 77.5552 mo
87.6538 80.0552 li
90.1538 80.0552 li
0 0 0 rgb
@
103.49 74.4014 mo
102.968 76.6846 100.519 77.6357 100.234 80.1611 cv
99.9102 83.0459 102.47 84.4092 103.347 81.4346 cv
0.0470588 0.0431373 0.0470588 rgb
f
103.49 74.4014 mo
102.968 76.6846 100.519 77.6357 100.234 80.1611 cv
99.9102 83.0459 102.47 84.4092 103.347 81.4346 cv
0 0 0 rgb
@
103.192 74.2627 mo
103.741 76.5127 106.688 77.6279 106.937 80.0928 cv
107.221 82.9053 104.051 84.0186 103.097 81.0732 cv
103.454 81.8018 li
0.0470588 0.0431373 0.0470588 rgb
f
103.192 74.2627 mo
103.741 76.5127 106.688 77.6279 106.937 80.0928 cv
107.221 82.9053 104.051 84.0186 103.097 81.0732 cv
103.454 81.8018 li
0 0 0 rgb
@
103.517 81.8252 mo
101.954 84.3252 li
104.454 84.3252 li
0.0470588 0.0431373 0.0470588 rgb
f
103.517 81.8252 mo
101.954 84.3252 li
104.454 84.3252 li
0 0 0 rgb
@
111.235 69.5635 mo
110.712 71.8472 108.263 72.7983 107.979 75.3237 cv
107.655 78.2085 110.214 79.5718 111.091 76.5972 cv
0.0470588 0.0431373 0.0470588 rgb
f
111.235 69.5635 mo
110.712 71.8472 108.263 72.7983 107.979 75.3237 cv
107.655 78.2085 110.214 79.5718 111.091 76.5972 cv
0 0 0 rgb
@
110.937 69.4248 mo
111.486 71.6753 114.432 72.7905 114.681 75.2554 cv
114.965 78.0679 111.795 79.1812 110.841 76.2358 cv
111.199 76.9644 li
0.0470588 0.0431373 0.0470588 rgb
f
110.937 69.4248 mo
111.486 71.6753 114.432 72.7905 114.681 75.2554 cv
114.965 78.0679 111.795 79.1812 110.841 76.2358 cv
111.199 76.9644 li
0 0 0 rgb
@
111.261 76.9878 mo
109.699 79.4878 li
112.199 79.4878 li
0.0470588 0.0431373 0.0470588 rgb
f
111.261 76.9878 mo
109.699 79.4878 li
112.199 79.4878 li
0 0 0 rgb
@
123.552 77.0933 mo
123.03 79.377 120.581 80.3281 120.296 82.8535 cv
119.972 85.7383 122.532 87.1016 123.409 84.127 cv
0.0470588 0.0431373 0.0470588 rgb
f
123.552 77.0933 mo
123.03 79.377 120.581 80.3281 120.296 82.8535 cv
119.972 85.7383 122.532 87.1016 123.409 84.127 cv
0 0 0 rgb
@
123.254 76.9546 mo
123.803 79.2051 126.75 80.3203 126.999 82.7852 cv
127.283 85.5977 124.113 86.7109 123.159 83.7656 cv
123.516 84.4941 li
0.0470588 0.0431373 0.0470588 rgb
f
123.254 76.9546 mo
123.803 79.2051 126.75 80.3203 126.999 82.7852 cv
127.283 85.5977 124.113 86.7109 123.159 83.7656 cv
123.516 84.4941 li
0 0 0 rgb
@
123.579 84.5176 mo
122.016 87.0176 li
124.516 87.0176 li
0.0470588 0.0431373 0.0470588 rgb
f
123.579 84.5176 mo
122.016 87.0176 li
124.516 87.0176 li
0 0 0 rgb
@
127.538 59.127 mo
127.015 61.4106 124.566 62.3618 124.282 64.8872 cv
123.958 67.772 126.517 69.1353 127.394 66.1606 cv
0.0470588 0.0431373 0.0470588 rgb
f
127.538 59.127 mo
127.015 61.4106 124.566 62.3618 124.282 64.8872 cv
123.958 67.772 126.517 69.1353 127.394 66.1606 cv
0 0 0 rgb
@
127.24 58.9883 mo
127.789 61.2388 130.735 62.354 130.984 64.8188 cv
131.268 67.6313 128.098 68.7446 127.144 65.7993 cv
127.501 66.5278 li
0.0470588 0.0431373 0.0470588 rgb
f
127.24 58.9883 mo
127.789 61.2388 130.735 62.354 130.984 64.8188 cv
131.268 67.6313 128.098 68.7446 127.144 65.7993 cv
127.501 66.5278 li
0 0 0 rgb
@
127.564 66.5513 mo
126.001 69.0513 li
128.501 69.0513 li
0.0470588 0.0431373 0.0470588 rgb
f
127.564 66.5513 mo
126.001 69.0513 li
128.501 69.0513 li
0 0 0 rgb
@
130.152 78.54 mo
129.629 80.8237 127.18 81.7749 126.896 84.3003 cv
126.572 87.1851 129.131 88.5483 130.008 85.5737 cv
0.0470588 0.0431373 0.0470588 rgb
f
130.152 78.54 mo
129.629 80.8237 127.18 81.7749 126.896 84.3003 cv
126.572 87.1851 129.131 88.5483 130.008 85.5737 cv
0 0 0 rgb
@
129.854 78.4014 mo
130.403 80.6519 133.349 81.7671 133.598 84.2319 cv
133.882 87.0444 130.712 88.1577 129.758 85.2124 cv
130.116 85.9409 li
0.0470588 0.0431373 0.0470588 rgb
f
129.854 78.4014 mo
130.403 80.6519 133.349 81.7671 133.598 84.2319 cv
133.882 87.0444 130.712 88.1577 129.758 85.2124 cv
130.116 85.9409 li
0 0 0 rgb
@
130.178 85.9644 mo
128.616 88.4644 li
131.116 88.4644 li
0.0470588 0.0431373 0.0470588 rgb
f
130.178 85.9644 mo
128.616 88.4644 li
131.116 88.4644 li
0 0 0 rgb
@
132.692 92.3818 mo
132.169 94.6655 129.72 95.6167 129.436 98.1421 cv
129.112 101.027 131.671 102.39 132.548 99.4155 cv
0.0470588 0.0431373 0.0470588 rgb
f
132.692 92.3818 mo
132.169 94.6655 129.72 95.6167 129.436 98.1421 cv
129.112 101.027 131.671 102.39 132.548 99.4155 cv
0 0 0 rgb
@
132.394 92.2432 mo
132.943 94.4937 135.889 95.6089 136.138 98.0737 cv
136.422 100.886 133.252 102 132.298 99.0542 cv
132.656 99.7827 li
0.0470588 0.0431373 0.0470588 rgb
f
132.394 92.2432 mo
132.943 94.4937 135.889 95.6089 136.138 98.0737 cv
136.422 100.886 133.252 102 132.298 99.0542 cv
132.656 99.7827 li
0 0 0 rgb
@
132.718 99.8062 mo
131.156 102.306 li
133.656 102.306 li
0.0470588 0.0431373 0.0470588 rgb
f
132.718 99.8062 mo
131.156 102.306 li
133.656 102.306 li
0 0 0 rgb
@
156.517 91.0361 mo
155.995 93.3198 153.545 94.271 153.261 96.7964 cv
152.937 99.6812 155.497 101.044 156.374 98.0698 cv
0.0470588 0.0431373 0.0470588 rgb
f
156.517 91.0361 mo
155.995 93.3198 153.545 94.271 153.261 96.7964 cv
152.937 99.6812 155.497 101.044 156.374 98.0698 cv
0 0 0 rgb
@
156.219 90.8975 mo
156.768 93.1479 159.714 94.2632 159.963 96.728 cv
160.248 99.5405 157.078 100.654 156.124 97.7085 cv
156.481 98.437 li
0.0470588 0.0431373 0.0470588 rgb
f
156.219 90.8975 mo
156.768 93.1479 159.714 94.2632 159.963 96.728 cv
160.248 99.5405 157.078 100.654 156.124 97.7085 cv
156.481 98.437 li
0 0 0 rgb
@
156.543 98.4604 mo
154.981 100.96 li
157.481 100.96 li
0.0470588 0.0431373 0.0470588 rgb
f
156.543 98.4604 mo
154.981 100.96 li
157.481 100.96 li
0 0 0 rgb
@
141.94 72.0493 mo
141.417 74.333 138.968 75.2842 138.684 77.8096 cv
138.36 80.6943 140.919 82.0576 141.796 79.083 cv
0.0470588 0.0431373 0.0470588 rgb
f
141.94 72.0493 mo
141.417 74.333 138.968 75.2842 138.684 77.8096 cv
138.36 80.6943 140.919 82.0576 141.796 79.083 cv
0 0 0 rgb
@
141.642 71.9106 mo
142.191 74.1611 145.137 75.2764 145.386 77.7412 cv
145.67 80.5537 142.5 81.667 141.546 78.7217 cv
141.904 79.4502 li
0.0470588 0.0431373 0.0470588 rgb
f
141.642 71.9106 mo
142.191 74.1611 145.137 75.2764 145.386 77.7412 cv
145.67 80.5537 142.5 81.667 141.546 78.7217 cv
141.904 79.4502 li
0 0 0 rgb
@
141.966 79.4736 mo
140.404 81.9736 li
142.904 81.9736 li
0.0470588 0.0431373 0.0470588 rgb
f
141.966 79.4736 mo
140.404 81.9736 li
142.904 81.9736 li
0 0 0 rgb
@
133.868 68.251 mo
133.345 70.5347 130.896 71.4858 130.612 74.0112 cv
130.288 76.896 132.847 78.2593 133.724 75.2847 cv
0.0470588 0.0431373 0.0470588 rgb
f
133.868 68.251 mo
133.345 70.5347 130.896 71.4858 130.612 74.0112 cv
130.288 76.896 132.847 78.2593 133.724 75.2847 cv
0 0 0 rgb
@
133.57 68.1123 mo
134.119 70.3628 137.065 71.478 137.314 73.9429 cv
137.598 76.7554 134.428 77.8687 133.474 74.9233 cv
133.832 75.6519 li
0.0470588 0.0431373 0.0470588 rgb
f
133.57 68.1123 mo
134.119 70.3628 137.065 71.478 137.314 73.9429 cv
137.598 76.7554 134.428 77.8687 133.474 74.9233 cv
133.832 75.6519 li
0 0 0 rgb
@
133.894 75.6753 mo
132.332 78.1753 li
134.832 78.1753 li
0.0470588 0.0431373 0.0470588 rgb
f
133.894 75.6753 mo
132.332 78.1753 li
134.832 78.1753 li
0 0 0 rgb
@
131.327 72.458 mo
130.804 74.7417 128.355 75.6929 128.071 78.2183 cv
127.747 81.103 130.306 82.4663 131.183 79.4917 cv
0.0470588 0.0431373 0.0470588 rgb
f
131.327 72.458 mo
130.804 74.7417 128.355 75.6929 128.071 78.2183 cv
127.747 81.103 130.306 82.4663 131.183 79.4917 cv
0 0 0 rgb
@
131.029 72.3193 mo
131.578 74.5698 134.524 75.6851 134.773 78.1499 cv
135.057 80.9624 131.887 82.0757 130.933 79.1304 cv
131.291 79.8589 li
0.0470588 0.0431373 0.0470588 rgb
f
131.029 72.3193 mo
131.578 74.5698 134.524 75.6851 134.773 78.1499 cv
135.057 80.9624 131.887 82.0757 130.933 79.1304 cv
131.291 79.8589 li
0 0 0 rgb
@
131.353 79.8823 mo
129.791 82.3823 li
132.291 82.3823 li
0.0470588 0.0431373 0.0470588 rgb
f
131.353 79.8823 mo
129.791 82.3823 li
132.291 82.3823 li
0 0 0 rgb
@
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginEHPQEY+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenright <1C60D8A8C9B72DDD4BB51EC6C49AB7306C1A14C493E9BA5D78AE2C195B29D94044F912FEED39F75BE34A7150607FEA016A23803EFDD2F9288AF7A180AEFCBFBF998E3FBDAC6F3A4074B0F5D69EFDE59096176B6B29149A14AB78FC2B3577A37D471DCCDE635BBEA2665A37EE893BAA312D5DB22CA01C4916AB9D79F1B336301D84554794> |-/a <1C60D8A8C9B7BB5CA503F41BCABD6C718309D7FD3EAFD4723590A6DB54A64A3783FF0E8915C8665146025473AABA73A7307808FC49DF54120176FFCE6E5630D745DEC9D7FE687B22D69E14177C1006B659795051D4F564854E1C732886E0B2617B0D55057161A197AD04FDD89E349DC800C8FAE6C2E2E7218942027A386140843CEC6D038F4E517DF6E091EE1EC97061608AA6DD07992C53BB029F315A3C165875CF85B20BCD136667E2BE57C24163FB07309C0F29C421C91BBF197F69B4468BD92D4E0F963A574D94F4959F6C142EC285F75B0A57DCD73FA9D71DA6249A4005429B> |-/b <1C60D8A8C9B7CA6425CFEA7643A8DEBB5A06DC7605086653C2C486B6F4158198BD8053CFA2CF0B5746D9FD99FA76ED96704A3EE6AD5240E402B445EE535F8D30988D2BF1D277FECDEFAAF08DE0E8B511C56F4A81B9520ADA97B65EF70A3DA2FEDBA1CA8476F2464DBC51D59ED582B47C20AFEA363D12C1DF79765DCD8D8A76043722F8B425E1F7011ADD62634BA97617AA71C6A854B0F0CC686D37B26387C30ABB6C12591354F3ACB70299295B8E1528868221EC40C239E0BBA6645FF00A6753502A06D2C7D368BE1A45974809B92A1817D27F99B4A021556897221B8E32123B695D2F3CCFD1AED08823BA> |-systemdict /gcheck known {setglobal} if end {end} ifendEHPQEY+ComicSansMS /Encoding getdup 41 /parenright putdup 97 /a putdup 98 /b putpop%ADOEndSubsetFont
/EHPQEY+ComicSansMS*1 [32{/.notdef}rp /space 8{/.notdef}rp /parenright 55{/.notdef}rp /a /b 25{/.notdef}rp /bar 131{/.notdef}rp]EHPQEY+ComicSansMS nfEHPQEY+ComicSansMS*1 [12 0 0 -12 0 0 ]msf9.35303 41.104 mo(a\) )[6.14063 4.39453 0 ]xsh267.517 46.7129 mo(b\) )[7.11914 4.39453 0 ]xsh394.739 218.282 mo
394.739 7.68164 li
645.839 7.68164 li
645.839 218.282 li
394.739 218.282 li
cp
1 1 1 rgb
f
2 lc
394.739 218.282 mo
394.739 7.68164 li
645.839 7.68164 li
645.839 218.282 li
394.739 218.282 li
cp
0 0 0 rgb
@
gsave
394.739 7.68164 mo
645.839 7.68164 li
645.839 218.282 li
394.739 218.282 li
394.739 7.68164 li
cp
clp
2 lw
394.815 218.282 mo
394.829 217.86 li
394.829 217.439 li
394.898 217.018 li
394.938 216.597 li
395.042 216.175 li
395.298 215.754 li
395.321 215.333 li
395.415 214.912 li
395.443 214.491 li
395.443 214.069 li
395.464 213.648 li
395.468 213.227 li
395.493 212.806 li
395.595 212.384 li
395.67 211.964 li
395.762 211.542 li
395.809 211.121 li
395.88 210.7 li
395.944 210.278 li
395.954 209.857 li
396.191 209.437 li
396.264 209.015 li
396.292 208.594 li
396.497 208.173 li
396.506 207.751 li
396.538 207.331 li
396.549 206.909 li
396.614 206.488 li
396.651 206.066 li
396.653 205.646 li
396.657 205.224 li
396.662 204.803 li
396.681 204.382 li
396.696 203.961 li
396.813 203.54 li
396.819 203.118 li
396.827 202.697 li
396.834 202.275 li
396.869 201.854 li
396.954 201.433 li
396.997 201.013 li
397.001 200.591 li
397.073 200.17 li
397.082 199.749 li
397.094 199.327 li
397.094 198.906 li
397.103 198.485 li
397.104 198.063 li
397.127 197.643 li
397.164 197.222 li
397.224 196.8 li
397.247 196.38 li
397.302 195.958 li
397.342 195.537 li
397.394 195.115 li
397.438 194.694 li
397.532 194.272 li
397.636 193.852 li
397.653 193.431 li
397.732 193.01 li
397.795 192.589 li
397.855 192.167 li
397.982 191.746 li
398.003 191.324 li
398.022 190.903 li
398.03 190.481 li
398.163 190.062 li
398.215 189.64 li
398.251 189.219 li
398.348 188.798 li
398.512 188.376 li
398.56 187.955 li
398.585 187.534 li
398.642 187.112 li
398.682 186.691 li
398.712 186.271 li
398.896 185.849 li
399.032 185.429 li
399.055 185.007 li
399.065 184.586 li
399.114 184.164 li
399.124 183.743 li
399.13 183.321 li
399.202 182.9 li
399.267 182.479 li
399.284 182.059 li
399.337 181.638 li
399.372 181.216 li
399.468 180.795 li
399.482 180.373 li
399.497 179.952 li
399.534 179.53 li
399.677 179.11 li
399.743 178.688 li
399.874 178.268 li
399.892 177.847 li
399.942 177.425 li
399.944 177.004 li
400.108 176.583 li
400.121 176.161 li
400.17 175.739 li
400.204 175.319 li
400.245 174.897 li
400.261 174.478 li
400.27 174.056 li
400.274 173.634 li
400.325 173.213 li
400.396 172.792 li
400.483 172.37 li
400.555 171.949 li
400.611 171.528 li
400.629 171.107 li
400.655 170.687 li
400.661 170.265 li
400.772 169.844 li
400.861 169.422 li
400.942 169.001 li
401.03 168.579 li
401.09 168.158 li
401.124 167.737 li
401.239 167.316 li
401.299 166.896 li
401.357 166.474 li
401.415 166.053 li
401.418 165.632 li
401.568 165.21 li
401.622 164.788 li
401.635 164.368 li
401.658 163.946 li
401.731 163.526 li
401.882 163.104 li
401.94 162.683 li
401.962 162.262 li
402.02 161.841 li
402.12 161.419 li
402.151 160.998 li
402.272 160.577 li
402.347 160.156 li
402.398 159.735 li
402.522 159.313 li
402.546 158.893 li
402.561 158.471 li
402.595 158.05 li
402.604 157.628 li
402.694 157.207 li
402.779 156.786 li
402.878 156.365 li
402.938 155.944 li
403.149 155.522 li
403.635 155.102 li
403.645 154.681 li
403.778 154.259 li
403.86 153.837 li
403.906 153.417 li
403.931 152.995 li
403.962 152.575 li
404.024 152.153 li
404.253 151.731 li
404.298 151.311 li
404.305 150.89 li
404.345 150.468 li
404.395 150.047 li
404.474 149.626 li
404.634 149.205 li
404.854 148.784 li
404.863 148.362 li
405.009 147.941 li
405.015 147.52 li
405.187 147.099 li
405.219 146.677 li
405.267 146.256 li
405.296 145.835 li
405.401 145.414 li
405.429 144.993 li
405.593 144.571 li
405.696 144.15 li
405.782 143.729 li
405.813 143.308 li
405.834 142.886 li
405.903 142.466 li
405.921 142.044 li
406.025 141.624 li
406.066 141.202 li
406.079 140.78 li
406.089 140.359 li
406.091 139.938 li
406.119 139.517 li
406.157 139.096 li
406.508 138.675 li
406.645 138.253 li
406.647 137.833 li
406.729 137.411 li
406.735 136.99 li
406.776 136.568 li
406.823 136.147 li
406.829 135.726 li
406.995 135.305 li
407.168 134.884 li
407.34 134.463 li
407.414 134.042 li
407.433 133.62 li
407.485 133.199 li
407.515 132.777 li
407.523 132.356 li
407.537 131.935 li
407.565 131.515 li
407.673 131.093 li
407.742 130.673 li
407.862 130.251 li
407.909 129.829 li
408 129.408 li
408.019 128.987 li
408.083 128.565 li
408.132 128.145 li
408.155 127.724 li
408.33 127.302 li
408.378 126.882 li
408.835 126.46 li
408.846 126.039 li
408.937 125.617 li
408.957 125.196 li
409.055 124.774 li
409.085 124.354 li
409.33 123.933 li
409.44 123.512 li
409.579 123.091 li
409.706 122.669 li
409.711 122.248 li
409.922 121.826 li
409.943 121.405 li
409.966 120.983 li
410.005 120.563 li
410.315 120.142 li
410.358 119.721 li
410.388 119.3 li
410.397 118.878 li
410.505 118.457 li
410.667 118.036 li
410.707 117.614 li
410.761 117.193 li
410.851 116.772 li
410.88 116.351 li
410.976 115.931 li
411.322 115.509 li
411.409 115.088 li
411.524 114.666 li
411.663 114.245 li
411.671 113.824 li
411.691 113.402 li
411.766 112.981 li
411.835 112.561 li
411.979 112.139 li
412.017 111.718 li
412.102 111.296 li
412.127 110.875 li
412.3 110.454 li
412.351 110.033 li
413.132 109.612 li
413.192 109.191 li
413.451 108.77 li
413.521 108.348 li
413.528 107.927 li
413.604 107.506 li
413.832 107.085 li
413.967 106.664 li
414.529 106.242 li
414.536 105.821 li
414.54 105.4 li
414.627 104.979 li
414.634 104.558 li
414.665 104.136 li
414.733 103.715 li
414.797 103.294 li
414.852 102.873 li
414.999 102.451 li
415.007 102.03 li
415.456 101.609 li
415.523 101.188 li
415.81 100.767 li
415.864 100.345 li
416.024 99.9243 li
416.345 99.5029 li
416.622 99.082 li
416.659 98.6606 li
416.866 98.2393 li
416.875 97.8184 li
417.324 97.397 li
417.67 96.9756 li
417.909 96.5547 li
417.992 96.1338 li
418.085 95.7124 li
418.116 95.291 li
418.192 94.8696 li
418.286 94.4487 li
418.309 94.0273 li
418.378 93.6064 li
418.411 93.1851 li
418.417 92.7637 li
418.515 92.3428 li
418.597 91.9214 li
418.684 91.5 li
418.768 91.0791 li
418.874 90.6582 li
418.935 90.2368 li
419.118 89.8154 li
419.49 89.394 li
419.538 88.9731 li
419.834 88.5518 li
420.008 88.1309 li
420.475 87.7095 li
420.542 87.2881 li
420.582 86.8672 li
420.61 86.4458 li
420.634 86.0244 li
421.317 85.6035 li
421.398 85.1826 li
421.537 84.7612 li
421.575 84.3398 li
421.628 83.9185 li
422.037 83.4976 li
422.049 83.0762 li
422.089 82.6553 li
422.185 82.2334 li
422.375 81.8125 li
422.41 81.3916 li
422.8 80.9702 li
423.227 80.5488 li
423.467 80.1279 li
423.482 79.707 li
423.749 79.2856 li
423.964 78.8643 li
424.337 78.4429 li
424.497 78.022 li
424.507 77.6006 li
424.782 77.1797 li
424.782 76.7578 li
424.868 76.3369 li
424.985 75.916 li
425.087 75.4946 li
425.335 75.0732 li
425.467 74.6523 li
425.586 74.2314 li
426.065 73.8096 li
426.102 73.3887 li
426.271 72.9673 li
426.282 72.5464 li
426.423 72.125 li
426.75 71.7041 li
426.817 71.2822 li
427.315 70.8613 li
427.378 70.4404 li
427.966 70.019 li
427.987 69.5977 li
428.043 69.1768 li
428.297 68.7559 li
428.334 68.334 li
428.517 67.9131 li
428.517 67.4917 li
429.466 67.0708 li
429.473 66.6494 li
429.565 66.2285 li
429.715 65.8066 li
429.89 65.3857 li
430.517 64.9648 li
430.649 64.5435 li
432.251 64.1221 li
432.472 63.7012 li
432.538 63.2803 li
432.595 62.8584 li
432.867 62.4375 li
433.12 62.0161 li
433.249 61.5952 li
433.334 61.1738 li
433.569 60.7524 li
433.661 60.3311 li
433.726 59.9102 li
433.889 59.4893 li
434.075 59.0679 li
434.218 58.6465 li
434.407 58.2256 li
435.178 57.8047 li
435.372 57.3828 li
435.395 56.9619 li
435.588 56.5405 li
435.595 56.1196 li
435.712 55.6982 li
436.114 55.2769 li
436.341 54.8555 li
436.818 54.4346 li
436.958 54.0137 li
437.087 53.5923 li
437.363 53.1709 li
437.381 52.75 li
437.502 52.3286 li
437.709 51.9072 li
437.73 51.4863 li
438.132 51.0649 li
438.373 50.644 li
439.073 50.2227 li
439.202 49.8013 li
439.456 49.3799 li
439.48 48.959 li
439.734 48.5381 li
439.779 48.1167 li
440.221 47.6953 li
440.428 47.2744 li
441.212 46.853 li
441.524 46.4316 li
441.864 46.0107 li
442.163 45.5894 li
442.467 45.1685 li
442.837 44.7471 li
442.991 44.3257 li
443.018 43.9043 li
443.306 43.4834 li
443.374 43.0625 li
443.546 42.6411 li
444.106 42.2197 li
444.27 41.7988 li
445.052 41.3774 li
445.393 40.9561 li
446.304 40.5352 li
446.646 40.1138 li
447.039 39.6929 li
447.173 39.2715 li
447.291 38.8501 li
447.413 38.4287 li
448.134 38.0078 li
449.064 37.5869 li
449.078 37.1655 li
449.235 36.7441 li
449.241 36.3232 li
450.244 35.9019 li
450.367 35.4805 li
450.519 35.0596 li
450.711 34.6382 li
451.167 34.2173 li
451.25 33.7959 li
451.342 33.3745 li
451.41 32.9531 li
452.169 32.5322 li
452.232 32.1113 li
452.294 31.6899 li
452.761 31.2686 li
453.044 30.8472 li
453.653 30.4263 li
454.69 30.0049 li
454.914 29.584 li
455.595 29.1626 li
455.815 28.7417 li
455.932 28.3203 li
456.093 27.8989 li
456.191 27.4775 li
457.291 27.0566 li
457.668 26.6357 li
457.884 26.2144 li
457.972 25.793 li
459.073 25.3716 li
459.808 24.9507 li
460.003 24.5293 li
460.128 24.1084 li
460.853 23.687 li
461.111 23.2661 li
461.971 22.8447 li
462.664 22.4233 li
462.665 22.002 li
463.571 21.5811 li
466.771 21.1602 li
467.688 20.7388 li
468.179 20.3174 li
469.773 19.896 li
471.082 19.4751 li
471.35 19.0537 li
471.791 18.6328 li
474.355 18.2114 li
474.974 17.79 li
480.177 17.3691 li
480.647 16.9478 li
482.153 16.5264 li
482.45 16.1055 li
484.294 15.6846 li
484.705 15.2632 li
484.86 14.8418 li
485.151 14.4204 li
486.106 13.9995 li
486.439 13.5781 li
486.949 13.1572 li
494.024 12.7358 li
497.013 12.3145 li
497.585 11.8936 li
505.849 11.4722 li
506.149 11.0508 li
506.989 10.6299 li
513.034 10.209 li
515.784 9.7876 li
528.241 9.36621 li
528.955 8.94482 li
529.847 8.52393 li
624.722 8.10254 li
1 0 0 rgb
@
grestore
gsave
394.739 7.68164 mo
645.839 7.68164 li
645.839 218.282 li
394.739 218.282 li
394.739 7.68164 li
cp
clp
497.922 218.282 mo
497.922 7.68164 li
0 0.501961 0 rgb
@
grestore
gsave
394.739 7.68164 mo
645.839 7.68164 li
645.839 218.282 li
394.739 218.282 li
394.739 7.68164 li
cp
clp
0 lc
[6 6 ] 0 dsh
474.355 218.282 mo
474.355 7.68164 li
0 0 1 rgb
@
grestore
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginEHPQEY+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/zero <1C60D8A8C9B7D98F6DA0BC0D56993DFD731859E73082C2D7636333544D763DC27197575AA0521EF215B0E83E609598D159BBB4BC56CDE2CDE3149C3DB2DB921DD2B021218A530AC8F4FD6B7D0FBB9FC522AE09EAE356903AFB4F0709B48EB18E9FA0317579E49D7B062061DF3902491F8FAAFB0B6154A16F4A168AFC4E808A4715BB30BACE27> |-systemdict /gcheck known {setglobal} if end {end} ifendEHPQEY+ComicSansMS /Encoding getdup 48 /zero putpop%ADOEndSubsetFont
/EHPQEY+ComicSansMS*1 [32{/.notdef}rp /space 8{/.notdef}rp /parenright 6{/.notdef}rp /zero 48{/.notdef}rp /a /b 25{/.notdef}rp /bar 131{/.notdef}rp]EHPQEY+ComicSansMS nfEHPQEY+ComicSansMS*1 [13 0 0 -13 0 0 ]msf392.863 236.785 mo(0)sh0.5 lw
0 lc
457.515 218.282 mo
457.515 214.532 li
@
457.515 11.4316 mo
457.515 7.68164 li
@
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginEHPQEY+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/five <1C60D8A8C9B7D98F6D54D48ED68EA6CF969F0E5B50A1A83CDD96ED54CE7E034617721CFF9E66FC1EED4AF925D2EABE5F3887295B9694FAE87E5068EF00B2E19BB68346DFF7F2616719067C9E31024F97634B80D817FACCB1FF4B22DB7BC4AE86BF0B2C1A9A0C794826FE65E1181EB10541F6D1BC25C237A065541FED0BE699DBCA3EC8C9BDA955EC7075994950DCC22C238275A937278BA07424607EEB10C1AE2226536CB6BDB9CC86C61FE2B4A63BB08CE3F5FF5E415AB86FFD87E55E1E4FB7393915DC53D001D3942F0A19EBE33E976F335D27A4E9FA42922038F9E9924E840CA20833DB114F82CEFD215963C9F09A5A31BEE9615AEB04B263C62CEE55CBD81DC2A323B20160F4BB153DCC4119196063B9B3AFABF0E64C37924ADEBA5A73CF27B225CFA4A00591BD57F0> |-systemdict /gcheck known {setglobal} if end {end} ifendEHPQEY+ComicSansMS /Encoding getdup 53 /five putpop%ADOEndSubsetFont
/EHPQEY+ComicSansMS*1 [32{/.notdef}rp /space 8{/.notdef}rp /parenright 6{/.notdef}rp /zero 4{/.notdef}rp /five 43{/.notdef}rp /a /b 25{/.notdef}rp /bar 131{/.notdef}rp]EHPQEY+ComicSansMS nfEHPQEY+ComicSansMS*1 [13 0 0 -13 0 0 ]msf455.639 236.785 mo(5)sh520.289 218.282 mo
520.289 214.532 li
@
520.289 11.4316 mo
520.289 7.68164 li
@
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginEHPQEY+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/one <1C60D8A8C9B77914873F98803C60EEF5E4A6DBE96AE9B81EFF493D2F1AA3FEEAA37FD443D04034D23BA9D609D2C8CD762F92B8820610EEE88821C53021C3E08017ADDCC0C56E5E2D7504080ABC696FC4B2BC78B7B384642545B6D2D0F5C638D5E5DAF1603C704B0CBDC68673A92C16CF8AB7E549BF3031EC2B504C05A0AE024AB48F99F68753D2CFADD79C925954659602A92A0F92089F7F8763F72499600C23C55121FDAC89B86D3B6C51F53AFAF0B4EDB2432FF0B89CC30A4C8DD2B8E7547AC479FCA4589851D61C952B27> |-systemdict /gcheck known {setglobal} if end {end} ifendEHPQEY+ComicSansMS /Encoding getdup 49 /one putpop%ADOEndSubsetFont
/EHPQEY+ComicSansMS*1 [32{/.notdef}rp /space 8{/.notdef}rp /parenright 6{/.notdef}rp /zero /one 3{/.notdef}rp /five 43{/.notdef}rp /a /b 25{/.notdef}rp /bar 131{/.notdef}rp]EHPQEY+ComicSansMS nfEHPQEY+ComicSansMS*1 [13 0 0 -13 0 0 ]msf516.538 236.785 mo(10)[5.85254 0 ]xsh583.063 218.282 mo
583.063 214.532 li
@
583.063 11.4316 mo
583.063 7.68164 li
@
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginEHPQEY+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/quotesingle <1C60D8A8C9B737EC2BDC682CDA95F8AAC0FBFFCF0593062E0CDF5CC82EE80C33CF4356D6E48C1CE0797A3037BF2F6FD9E643CD8AE0E7DC628C1EBFB46102FCAF7B16087D23EB6DCF4F2255F0A6DBA86EDD02590108BF8C8068B0D2A1B4CF575CA0CBA8320AE9E903> |-/period <1C60D8A8C9B873D04176F39500737A58796A799ADAB2F011EB6B5082CCAD878260DE39AC958F27A9CCD72274D2585DDB51967C7CE61906AC0AD40C9D3B0A49FEC45F14EBB22E> |-/two <1C60D8A8C9B7D98F6D8F3D7AA695A6A6775D351A3C5B32DF9BF22260E9F8506C6C0AFACE341E1E92FBC3EF784C227B64F08462D61DD043B72D0EF946A3AE72A4250C97F9534EA1ECB8D1F844DABC2780EA5497B3400E0115082BCD52CA33A42EB31BAFC00E89283E1398238FF501EF46348166C5D0796F4F302EEFDEF2C569616B35F3A295FC3051C30E10E4927C117B901A9DA57C3B1677644528E481FA057A75ABBC2AFB35C7AE1B05FE0BDF0A1E3241A7236A535A6C63ACD853B32B2C1D37907B8E7DB8A4A38921C6A2C9DE2A43FF89B38C12B866B35B39B6383EDE8BC72433248A45DEF8A4F70A87D3942EB09EC1FED7DD26A9A13A5550450B987E697E0B> |-/V <1C60D8A8C9B67F584FE6CD90D73BA48EA3DC82A273F1837A53E63C132DF16C4D7FEF26CB96317C6DB58E37F8A029B4537FDB3A2AC76518B29BE006EC6713F141E67CE79BEE838E766AE754A22162DD689DF0FA988EFF6D2A540C52B8C3E74079AE79D16ED37A5686948E82E4D680EBE0E7B0C156FF6C8578E8F253D60257A9CFF44385C9F1AA7FEFEA8FA620322FA0FC37D8D9EE1E52FE269E88> |-/W <1C60D8A8C9B536D0CDA67495C778630A8DC2511919E43231A0C18D2973EB9398FC65133D4B1C1FD822BED43906F0A8844D802931B27D6EE8DCF0AACBAFE3E82F733FD0FB0D8DEAC05767241E9F7448C42B466ABE313818470686D6E92C5C38ED2E26C957C5B36EDD0C1B76E6CA0F5715836993E6CBAC445E502DBD9478491087D2DB34E4215C09904450602533067D974FCB69C1C42C5E354524CDE7F7138BDA3512AE512BA7640757F235266D7F29FDC793E25C618EE71BEAA0CDF47A9F3F7A3485D7D912ED62068BA272F19CE6DBDCED6935ACB2E53FF460220BC39BAF396EF09A34A4EFD78027C51155554CD7937332C5836E80AE011DA26759CDDC785C15E6> |-/n <1C60D8A8C9B7B07F0BB93457D6C8288A70E0DB940B4E04FCB07C44C762FF75D1D950F6658944215ABDB8E09DA0C33F6809AFCF2421406F8688ABED2DEC4D49A55251B25C4373E5276DE26457B8215FA156A3918E62986142B216E3D126083708C5AB3D018A7C93A0546D1AE450568C33979D5D1886CAEE4F45CEF158C9F75F841729756DC86B9981305315BE025F34658A8B30DA9E4FC92E74778770409CEEBC81A51BD2DBFB108DC9287AA20C6C0FDC2D19D58643D88EB36209DAC3D913F6852F2F8B06C4883A03EE882CC27439C56A729CC60E3CAC44D3416B7B9356E70E374DD5228445902D99BC6E06C8C6558C> |-/o <1C60D8A8C9B78D34A55956A51486C357D04D448C2012FC2F5B0A5FE1B320E5CD61418E269420C85D10935D5D9B29D4FDDFDD85C698EDEF649FCF7B4152030DE7FB7B0AD250869A491A4776C5C05E1436F84934B318F30DD94DF542C1FA3FC71DCD30BC8EC67320F785CD0C113E143028BDC1093B4CB998C3891C7A3F7C> |-/s <1C60D8A8C9B7544E0B2F4A61F93D1126BE4C1AB23A9BC15E8D4F67C7217D859EAD9231FE71D3434A8F690FE356BFC6DC5BE77A03DE604D8B1C950D5ABF263BD11471F4641C413AA949D9FA9D14073F73C97069B262302E724A697D3CA7C59E77556DAF46750C504A58130B4D898FE3BF71EC7F017C1E1F27AB7041A63DDE724A2C84E3A413C54A5DDF57F8C9D27A1E3CFE7B403B1328B029B85307F57108ADCCE743F949020583B39DD4E46122F513D45ADF2471EB3FC18875B6CA7F87645D6D9F43435BEAAB1F189966F0EC695829B6348DF5F29560E30CB97F829CCD3E61BBBAB11852283FEDA3181F7D> |-/t <1C60D8A8C9B7445140689D163BE9CD19CB6263AAD663E751BFF4FC3EFD289F54C938D7522CDBDC78B86C3A6B352FEC6C942B3A84D1DF37948F119DD042933AE483D22B2D630A0536911763BEC72090C0E7972085EC665EF1618CB3A1E365C68118F7319C489021F7E5BB1237C8B28D9185CA450113B4347A96F5A190A1E41185CC68C22E0D8B3619F65EBBC7C09A7899C42BB7EC5C668E84BEB96E5966CE04926328B6CA13AB435E16BBB7670DDC776BE2EE98FDA0050964E0FA7809BCE05F1D859FB5837E> |-systemdict /gcheck known {setglobal} if end {end} ifendEHPQEY+ComicSansMS /Encoding getdup 39 /quotesingle putdup 46 /period putdup 50 /two putdup 86 /V putdup 87 /W putdup 110 /n putdup 111 /o putdup 115 /s putdup 116 /t putpop%ADOEndSubsetFont
/EHPQEY+ComicSansMS*1 [32{/.notdef}rp /space 6{/.notdef}rp /quotesingle /.notdef /parenright 4{/.notdef}rp /period /.notdef /zero /one /two 2{/.notdef}rp /five 32{/.notdef}rp /V /W 9{/.notdef}rp /a /b 11{/.notdef}rp /n /o 3{/.notdef}rp /s /t 7{/.notdef}rp /bar 131{/.notdef}rp]EHPQEY+ComicSansMS nfEHPQEY+ComicSansMS*1 [13 0 0 -13 0 0 ]msf579.313 236.785 mo(15)[5.85254 0 ]xsh641.713 236.785 mo(20)[7.93457 0 ]xsh485.163 254.285 mo(Watson's V)[13.5137 6.65234 6.125 6.32813 6.83594 6.80469 5.04688 6.32813 3.88477 0 ]xsh369.988 218.91 mo(0.0)[7.93457 3.2373 0 ]xsh394.739 176.161 mo
398.489 176.161 li
@
642.089 176.161 mo
645.839 176.161 li
@
EHPQEY+ComicSansMS*1 [13 0 0 -13 0 0 ]msf368.988 179.791 mo(0.2)[7.93457 3.2373 0 ]xsh394.739 134.042 mo
398.489 134.042 li
@
642.089 134.042 mo
645.839 134.042 li
@
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginEHPQEY+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/four <1C60D8A8C9B7D98F6D9D19B2E0513FC5E4D92EB9CF4009902AEA1143FA8048680F0116C2DDAB1D204D80A50B6C47E295405ECF6B9D8E67656139D8AB0B99F70F10190AB1B69AE519C94E071FC1BE80E3AF65DBEE53E56F3CA5CE81F21E9C93C6700EB048CAFE7BA1F01073473AC3EB439C41FF3AB8A358FF25E1E33F82DECC7B8D6F2A15E44E1041> |-systemdict /gcheck known {setglobal} if end {end} ifendEHPQEY+ComicSansMS /Encoding getdup 52 /four putpop%ADOEndSubsetFont
/EHPQEY+ComicSansMS*1 [32{/.notdef}rp /space 6{/.notdef}rp /quotesingle /.notdef /parenright 4{/.notdef}rp /period /.notdef /zero /one /two /.notdef /four /five 32{/.notdef}rp /V /W 9{/.notdef}rp /a /b 11{/.notdef}rp /n /o 3{/.notdef}rp /s /t 7{/.notdef}rp /bar 131{/.notdef}rp]EHPQEY+ComicSansMS nfEHPQEY+ComicSansMS*1 [13 0 0 -13 0 0 ]msf368.988 137.67 mo(0.4)[7.93457 3.2373 0 ]xsh394.739 91.9214 mo
398.489 91.9214 li
@
642.089 91.9214 mo
645.839 91.9214 li
@
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginEHPQEY+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/six <1C60D8A8C9B7D98F6D410A565F86C07E28623A8A30C45B3B253252287FF35E356C79AC66AD2FE890317E5BEDE13DA65D4DD9FEFA4A8DFF9CB28F7E30962E9383AE3EAD6DEAE2B16B6F1B34D04F870BFED7898255C19B9AFC0426057874C8B988A599BC31593CCD1C2687B840C41197BFB5E2F0C696FA1CFEBDE6A1FAB216E151994B62236FC38B2E21028335BF2980D1D4BCF4B195CB5D36B5C88F8109053C66029BF6146437EE12EF20EAA8182B691161DB7D213B7CE925835ED4E58E76> |-systemdict /gcheck known {setglobal} if end {end} ifendEHPQEY+ComicSansMS /Encoding getdup 54 /six putpop%ADOEndSubsetFont
/EHPQEY+ComicSansMS*1 [32{/.notdef}rp /space 6{/.notdef}rp /quotesingle /.notdef /parenright 4{/.notdef}rp /period /.notdef /zero /one /two /.notdef /four /five /six 31{/.notdef}rp /V /W 9{/.notdef}rp /a /b 11{/.notdef}rp /n /o 3{/.notdef}rp /s /t 7{/.notdef}rp /bar 131{/.notdef}rp]EHPQEY+ComicSansMS nfEHPQEY+ComicSansMS*1 [13 0 0 -13 0 0 ]msf368.988 95.5503 mo(0.6)[7.93457 3.2373 0 ]xsh394.739 49.8013 mo
398.489 49.8013 li
@
642.089 49.8013 mo
645.839 49.8013 li
@
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginEHPQEY+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/eight <1C60D8A8C9B7D98F6D411A3FBF3E1364E3BEC4A5E775ACA412F07D5A94C3BEF77D5E53216BEB0522A622C88CA1692970DDC6947BF81796DD7CCB824FA7EE90A4943F8AE44614C58C7911AB9D28D9C0B88A93C3B727D580C159061F84BE60E69517D9839A4A451A2414216CE43B99EFB70961552191831694714DDE8DDC8255990930E16813418A900FE62548470B5CC1B3B6A98598E41570742E202830AFBD33243EC6ABB72886024764019A44EA984D8DED1FCBB31F0E230348D3C16A805BC89F2756CA3905F9B19C15A371AF432FD6D69D1C4299F3A5FC90ECA58C45C9> |-/C <1C60D8A8C9B7C054165765BAAF0C92CCBE2C6ADFDFC36958D81859F00796D344CC054E333538ED46E12E7F5688AFCF3135F7BCF04A6B81068C72B36BF7E3914834347D57ED2E2D044D0BCFFC5B59F76B5C38341A800AA9211C98073803A5DC16425F7A27A5DB2025E06EF163670F55818C9860E39CE252532EFC51C2C7AAEA1AC0A03F3A9AB8FDAF9C04A014034CBE8449C94C8B8BD9D90AD14C972CEE5EF16F02C7A2122CEBDBE881C9E97730465657789925229B337B911F77129D0B7B7E9920> |-/D <1C60D8A8C9B6079F6CB7E532E9AD798E1A9E0E9D7042D09A7BE48F45147E8A93793F66954E6B8860A43BD585E271E7F03DF5D6C9950D5A044D1FE3254F4EAD6D0257E1F7146FDFA5A3D2A9A61D3334BF45C9B76ED37AA7790CA2367DC42210F7B8AB7BE54697E148355064439150DAAFCAE012FD6A53460284F1817ACDA3BA1D6FE529F583F3DBE567DEFBD6B4F46E74C8B3983FEEE97D9D20161BB1B829D78C7A812DCE9E582CC4E03359DF24245D1A751E847C0CB9A4A968631656593E9133F2157B422B2BC9FC4D97AC> |-/e <1C60D8A8C9B797474FA4303150FF95D22C1576367C7C82BE107A33DB836FE273C47A9F1C294729003E4BC6906C807AE64492E567EB699590C33760698497B7D8BD4606E6533DD313B7408096D0253255EE30E5A5E3E06503BE924638C5951A143C8FB027E022BA2CC9736D9A6F100D38EB1D4C686421142EAA9CB9B186F914996503E87D112FD301022C9ED0ABE9EC3841A2AAB1D0ECFBD04DD27FAC9222691EA422325A2608DE3AA47EDFE24D5B> |-/i <1C60D8A8C9B8524CA9FFF1D59707FAB92D69C69B7C857EED4D13A4787BF89B18996B1BFB164CA796A0EF07F1407DF3454BCAB96192B46A6EDEDC573AD74AE5EBB6C7E282C40345BC6C9BD822E381040AF84910E37D38B52009BFBA09050BADAEBC8553B469DC8708DC8B7D087E48B2E8AA99CA401E54F66DDB7E9923B974D88CDA4785FD295B41FC4A68D170B03EDBFBD3758274FE3E0C921CDB5782B906DFB9938B6191061DE008B5105239C6B4135C4008792AFAA4EA6826684C0C> |-/l <1C60D8A8C9B8581A5C985F5B74008F0E2CA964639DBBD35F5DD00E39B9E95E3CD2193CB410613D02E647955F9BDFF4F3308822726BABA78ABE406A4F243D0D7526BB93B898D78CB4E4A407748C335667C85BC7C5DB0D0060EEAC> |-/m <1C60D8A8C9B6FC2D96873601FD7D92169A9B88887C32231D12B856F0FF258B62829FEDF861E7207C12D5C53BCDFD0EA3F0EF441B3104EE7A8DCCC9135A66A3908121FDEF89ECB4290FE2DEBBC0D2CEC922FC3B50F2ED674EACC69E69FA370309E0EBFB994E62CF35AAC76A68A27F1193FA80070D9751608DC309EBC2115575AE6BDEEB113F39584664AF7AAA3C82601F097876EB086034E5AE78A75047B10841E51F7380B84CCDD035E85E1A5870A2BB0942D4819E585F0952EB73250253334BF49322F96375F5B49CB7CFA7A0B232F8AD1DD38A4207A81B8B16535F38363976D31BC82130B6F42B86DA3EA4FFCCC6C8DA3BAD0E6D585D10CCC6A4EFCE59BB479065B92972F3D516BBD63C0E7C814F065EEF1040A3FF51C243D5475EBA7E962CAD4F75D3AC0EDC0C293B5BB6A5776BF4AC8F3BC665CA79374C2D10BBB5A4EE69B305850280C1> |-/r <1C60D8A8C9B75BE51651FFE67439D51A25F90110BB907676984B99DD0B35C7709F13E9D884F7A5E4D5DC6EAC702AA1CA7DD0308EC3E47EA3A772341F5B614E58D6E83BA0E5BB48DBDD3ED30A643443B6748E7F94653D8C84439C4E79874BBAE5D54AF00F5DBBDC68AB601F5B54A0C720942814BB32E87436> |-/u <1C60D8A8C9B7B3D0EB94C27794C8FF7A66F97FA6CF9FABEE835E1A1626320F2E2E58AACC9742E2863A234D717CCEC554B38E6670782546BE1280DB3D026E3D97D899C4DBB14646E84E5FA9BF09835296C032D42FE102EFEF2CF2250B419A68387C6038BB86A74FB974D87A0B2F0A7872D9B0CF5DA9A83619FEC0CA43F47D29F1B253EC46F0FA880E9D913D7D1074998F6C45D6194D53073B871AAF04BD179A8644CD091C1AF599D8C323C678F3C145D207E61A3CA7E44F7257600C6DCC4283614DCCA35CB9A41B86A4FF> |-/v <1C60D8A8C9B7551CC4B76227E48910FB37916D7C56B65D2F41528CD8DC3D2EE0385DA3DBEFE36C76CA28A2306F805FAD71FD93D66AC0D5D6063DFE9F94F7ECF232ED6CD6AE4A2A47419E742660F4B5C0ECA9FB578F4D5AFFAA60D0BA98239728D0EC75F6F1E79AE8393E88B210DA67C60C> |-systemdict /gcheck known {setglobal} if end {end} ifendEHPQEY+ComicSansMS /Encoding getdup 56 /eight putdup 67 /C putdup 68 /D putdup 101 /e putdup 105 /i putdup 108 /l putdup 109 /m putdup 114 /r putdup 117 /u putdup 118 /v putpop%ADOEndSubsetFont
/EHPQEY+ComicSansMS*1 [32{/.notdef}rp /space 6{/.notdef}rp /quotesingle /.notdef /parenright 4{/.notdef}rp /period /.notdef /zero /one /two /.notdef /four /five /six /.notdef /eight 10{/.notdef}rp /C /D 17{/.notdef}rp /V /W 9{/.notdef}rp /a /b 2{/.notdef}rp /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s /t /u /v 5{/.notdef}rp /bar 131{/.notdef}rp]EHPQEY+ComicSansMS nfEHPQEY+ComicSansMS*1 [13 0 0 -13 0 0 ]msf368.988 53.4302 mo(0.8)[7.93457 3.2373 0 ]xsh369.738 11.3101 mo(1.0)[5.85254 3.2373 0 ]xshEHPQEY+ComicSansMS*1 [0 -13 -13 0 0 0 ]msf365.238 169.486 mo(Cumulative Distribution)[-7.83301 -6.76025 -10.0991 -6.76025 -3.56104 -6.65234 -6.12549 -3.64355 -6.32227 -7.12207 -3.88477 -9.38184 -3.64355 -6.32861 -6.12549 -6.24609 -3.64355 -7.7124 -6.76025 -6.12549 -3.64355 -6.83643 0 ]ysh1 lw
2 lc
394.739 218.282 mo
645.839 218.282 li
645.839 7.68164 li
394.739 7.68164 li
394.739 218.282 li
@
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginEHPQEY+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/c <1C60D8A8C9B7B9B9DE292882013E19E33F82B7ED3A5C89FE0A41E2745CE52BF345EF21317B06CEB633B4C461C86DB59ACA948BD5303B9C1ECB87024259662E6DE6401329C576CA7C717795A8221E64812E10D7279DA0C4ECEFC761695BC43E126B44B9576721BB314891B8E9D440D85A903F31586B4587EAE794E85616ED3F2F41CC7C8432421936554CA0D609EB4EA211DE1B1E7934AF872FDEE11CAF3B598B06E47B41> |-/w <1C60D8A8C9B6218487477493A6ED6FC49ADE7DB5A336FA1EBC5DDDBD48D99F5928C02BD528261F4B15A41301EAC0B328314A22E884D6FD1C59CA5497BCB2DD47D888224B9D6A58A779C950597CDE4E747B3963BC377CAE93AA58AA7115E69CE989D76E37B26207B544A0ED52C2A2EC01472B28F0E832B7D16EADBE6104D00877050F8D30EEE2CBA8A97FB7E3C2997DC2B38AE56987D1577B31463680DA7FF636A537A36637C58577517E9D0FA948B1552DF9E47467B7AAFAD757883931987E128011F634BAAAA9FF3D857B1ABD99308B07> |-systemdict /gcheck known {setglobal} if end {end} ifendEHPQEY+ComicSansMS /Encoding getdup 99 /c putdup 119 /w putpop%ADOEndSubsetFont
/EHPQEY+ComicSansMS*1 [32{/.notdef}rp /space 6{/.notdef}rp /quotesingle /.notdef /parenright 4{/.notdef}rp /period /.notdef /zero /one /two /.notdef /four /five /six /.notdef /eight 10{/.notdef}rp /C /D 17{/.notdef}rp /V /W 9{/.notdef}rp /a /b /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s /t /u /v /w 4{/.notdef}rp /bar 131{/.notdef}rp]EHPQEY+ComicSansMS nfEHPQEY+ComicSansMS*1 [12 0 0 -12 0 0 ]msf500.113 158.61 mo(V)sh507.912 160.86 mo(w)sh441.863 194.61 mo(V)sh449.662 196.86 mo(crit)[6.16406 5.76563 3.36328 0 ]xsh406.517 29.7129 mo(c\) )[6.16406 4.39453 0 ]xshEHPQEY+ComicSansMS*1 [0 -12 -12 0 0 0 ]msf120.585 132.328 mo(|)sh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/EHPQEY+ComicSansMS*1 uf/EHPQEY+ComicSansMS uf/ComicSansMS ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 11.0%%AI8_CreatorVersion: 13.0.2%%For: (Lisa Tauxe) ()%%Title: (twosets.eps)%%CreationDate: 1/8/09 1:42 PM%AI9_DataStream%Gb!R&LOSg*Z3P\_J9M8*":371]d1G6R$n-jdL2b(KGM]oH_%(L)T`Fu)cLeO55/9rPlrX2UX@;!Au*3&FE3T,\2+ur\]MUM7s$/,%'TRj,@L;Zkc.JQ3_Vhjaf9Q_rj.p(5$AB?sRL)g<8/T$,#=>[DHB"Q(Q_Wtn;4UG8h>'/p),=f8jAGWCk4n/?fgei,8'g#ME:Q4`%gp#K2;8"/I`X=1U)%G;Dc11_s:A+*o3LpWbh2Yeb[MW]aK4.iKbXTjr;(OuKGG,4Yr-jZ0Kbr+njQkg84^<0A<RcE*;]MLOF*J73%i4n`lMZrB#C4f"#hrZqA:Qe3^rm1Ohg[,O6Mck*UR#KocUuH]E1`\Ij?-KE)6O+f*O[LH[7B!`YUKASb9K:3`",UtVI`)4.'9NQ0%BK-Q9,0Wn.Q3]1L8=7&`E4>_J62,klLo'LTGVPV9Oj6u4D8Hd+[^[:S0C!aD9F'SI7/Vk<'3$(eTulo\jfghY*tNmg%"+<_'jOHo%h')3t=GnkL!\[*RC%4.YNteNOBDq6"$-Heg"AYW`..P^XE`?cPe"+b&g(KC7Bm3gS4CGc!#mO6p71htE3AcmN-@-@67ukqLW';%a%*#%)&EP!Dd:^L)EeK%#0<(4]J1E5rkj.od0f#Z/A*G$X/bYao.^g.5a<W=GBrs=sh_i$s-/5f1uNU2p.%n-YX^r75bYN;]?D@V2$%9`,/*'cL("LW!ZG2]'a";)H9H7tpBGO19ZT+CPu\(CJ")BG>nB'(@]HQ+d]]i--RP:I?:M)@DV)JcK_Q\"Z_J'og).BG='-UJNEY%'a1M]6itLV&l9p+rk[?G"I)M(TG7;-5G;%7$`1.3GVbhC-eU&8&Hm>.#gk'5/I:iN&BHqd@R;`ALU9UD_OK!F:rqdPT25mk"@&Ro%oL\<sGm6E`T25`<"@&U;&gtc4cmSSpT:e^D'5A_=+uM`Ki$\.9I`&YA-YS]_PI(jsTO71%ap8&r-]JX5:3]IB8@Sdead]*hKR,sH%ToHDhPY5L3Pp$+"'_Dob6;:tn8[$5l11K_l8jWKQ&LLa+mm@'4-[^O&On"4!KQ?hlIR5LI+8dCZ8>Lq.Q*_&R8hpC29Ca<e)53+1%*D-pX8UM[E-e&7[KJ(\*WEC,m;F:3bAY=71A4#bCD:34j'`&&!TbNW-kTAaiGo(or)<dX9.7ptD4+q[N"X;cc$qmlM8K1K$,_a<k%U_hIH'##%E#hMY[KPs,d1a5iT#jkG\C7WjLhC$Xk5=.BX9Hq_lbR&2Y%0HN!jB'`PnrCsDBrdt2&t]lk-djTg]cqsq[N\)%VCSDm%EEO.aTLe&f]WH-?U/dphC7!FChF(rts+B4I.am<@L*9?WhrJ-(9KjuAaZl7.boZYPnsfQ8`Q2]R2u+8NPL&d/e95*pa0Oc_nsfR;%3:^5J:&`h94AW[gIZo8l*;Q]6-N>Li+0ju_G4:]S/,:`E,/7"TQuFr'&bp<M&7U$GO"bBTi$4&ikdU1K:NM+!@E;A*%cuVeRoB/V%o/e4INl$9SNr4o7lJLgmBS6tB.ZQ^7n"[<XlF,Y963DpT5X0Nf:CO$#ScI<h;d<4.'3R44b(a#UV;QQ`L$u@LqL<`/rfJ,?\*Dk<%%LTZ];=OZNa4Rom2XgcHLqZq=QG0,(13F_ELoLTE"[,=<N/,dOXSb1NhGjJ`j5_*W:6<6ND,*,AQ5)q`Uhu,^4_E?"86LttO\pb&%:g*%26ojB_H&loJXFl;CnT[Ik>69aC'>r-mMd/.ZL:?.1("u**iH?Dc0?@hB?O:T(@L5_l=FXH;Ok_!R`e$phU?,\H'm^8`Xc,RK%klpo(-f:W3;(N16,Ad_0[0oBg=#e:(;M49:>8-"\[mf/VpE"(3jb]mLG_UH5Kd.!@"fF"+nV3"+aB/0Hd^hEl+Ceho<'aEEZk+kP%Uio%:<,KUKLso$+rK$SCQ:/q)BNsi2df2;#0?,e&i"_3A8r?_J!^rW`8SV5#5c$WK.'=GscdJTtN&RUf/5d-/*!T#+:Slc1016k[%``J<\>R*(iZ75AbfdmV10)&E*-E8<1k&B(Nh1XR%_O%bf`enSrV_LKCMOH_a'lJpSLT/*N&dJmn=@<\^>8GoZ/0^.f(!`NlEiZR/%[NZ-b[&S+s\%t,0UAh5c]399[9`r!G@ms+O,fkdm,fISt+c:*0<%F\5j:4PXjd+8Hlc6^naFn(),jN><M488\d;Oo`-V.>j*#>bb%+GiAD%X\BU,4d"Ua:HWDNYi52Um;idGLU+Gdh]gUb3E198INVP`D?VR+,sMFrh:U"`?9$@Fq`?-Z=5"B'[Dft=DBP9NVK6h9Ir["%.C>&uVm2h(`O7(-i>m["Tot^tA=M)TU*Q]^#NCW;>d4up`%@ETAiHf>W$Roh*(Ipm/G4+M&nTWopaK>T#1%nDpkr)sN+GDG&!8+[%?O=3d@JO$a12n?04Y(st-CV5L2+5V5gVnj6X=(Cn-Z-/r4>VLN([Dlc%FH4FZQElblOC*mWa;A:=RMO*!hO,I4"U(*U+E(FdU?_2%Lu4rSI>*<R[e+lug.nTe-^k#g2+B%C,1!K&$+2r1Hd52Ff,H.[f8oi</>']m4G*]PW9p+dD=-+1p;!&9ljZAsfHr!ZB)#SmFE&p1%]Wa9nOF/Ei->=4j6_aK&8JUln'),HKD_f'MqP*'L)"AoVL.Zq_8b0VQl]ZTZH:C)^rs<7ikE92SjqaB:[(7a5QuOljUh1GSW)]Q[%gCg2cWgc,kF/\:iWp*TG+JB2B7o(C'T/E5=l.G8,k`5ue0mRl:*XRK5P,D*'YZ5"#E^T[Tnj>9MWb522U^M0bg[Mp63uD*HW.eZf%3_K7NO`0.eX//^fOjkSt\]UeNkT@'3]Lp*%`9,FJ`*]!taf=T&m&jN<Uf#!p:U-$M>-L.f>CK&57jWXlh7@(o_"5oN(_92=?`I24%k,\/)?EWWj&o),l%!:VZYnZsC9MEoV1!Y>i&1*Rj[7VO@8Wn._ZB^jmfhisG"A:js2Be-jJ[`V>J'k:+5a$<K)N*d$WR?*R9LL]"%j9X?k/MT"%Oq,\(X\pJA_b<V0WCf8VILDbZI0#.^i.#Q3oVm_*&N%h\)LWefS5+$dG:6TW2,1#dM5lre+^qc*W@fnT!"*e#Q8K1W%)R8'9/Kh/T+sK2apb@S?C'g%dI#0%Mc>f>lb+W,A'nYN6C&c5^8Y"\t+f!^]rO2D+X3O0_1p'k1;+kF]8:1Sl%oH5p0&#!_b'Jqg%?]:YQB!WehGm</!(4#k85u"A\!I1l44kIkKcr&JC,1]_RBuN%N4Ka>eT9,/?8P1LR]s;g\]j+PD6*`:E.?S+[eL[1dg$]'K%Tj[g%-Sc]^nk&I-L"2LNXG%kA#rSjMhl(s0Ul87P`\Gl`2ki,_CU/R;"mPIe/P/T/WcoaZ!oLpeGt^H@=/6qd]ZNKoN/o]V>uB`h@S9-C%L;s@JkB5^h1H4a;g(O333uPk4i*9H.Wm2s/8Y8,/s2Ik&\r5\"p1as]K"oLNU,sHUqnqi!+r]goRfDZiqGiXE%(\7eA0,8ok]&<2%mWJfP@5F9d[[2nin9Qf+G.PL/WL,8^0>Gm[7@L`p@'`"`[?mZFYl!ls;^k)jDrSpo;WV3^VCgFHYBEpLG3)d1V"t*@1Jj>SaCWB$%H<Y>Tb"bL\M5oo1/it5P/4n58.CrK9g4Du.Co>tTGA"`%,-]f2[Lp9,o0mj]KO2m7D-6B<[[+g>G7g?'B>B)_<tN&"C5tBX+l^oY%Y7m\b3l1N#qTj!)s&oOAZY$*sC<h9[KEeut^j*0KFF-;3(VH.HS+A;&r7,o!S<!m7V,Bk\rD.VW*%eR*gXaM=^F-?_YD]D!N4\TR%W&\cLL[[SZcpZcLXoC#cF6I.Iniu/BpYY@HF+jQ]dPY\sLZep;Xkn#K#'ZVsrXoZ_G;NG2]=iphM/]1N*"JjmoD,cHmKQfL(p#-%%iicU+!\uP!+Hh?4&cRIf)6k#[.X`F^i_R_kjNGj,?NUiNR;"G&TB3h6ZR-R;gi><hP[[@Ll,K?7Fgb[rJ3#6=#AQ7Y7I<c0+<Yp1%'g6=ik?XK@quIO<HqfoJ,U0Z>WtNgMl>MtZ7SY9_7p&\8h\Xi&>*KC08YI)$kXJREeF+>SiguCE=''H=*d(kdk4:l8oem\D;6rCf%H(T4NZ"=q*"Arm-dC.ubEnkTYQD7l0\NkI#)0^R^m3[/*<mT_Nr(*eaT.`^jjO#i28G4oK1R/og-a;8LH.5Z-mo\9.nJY@k$EB#H%I0oQ_;B`>s;KYM&fs4i^BA0c,dSX1IjWcf%$6kdXJ!\D'q@F)G`]^+1Mgn]`#&M'YOIb_r@:8&HNK2J\Db/b%KBBBokk0P+59mfU%,WM>h3m0Fe"p7ib!pgi*5+W&:N4SuMOc<+(Jk5]'GE1lT/D-Je(]H!aOba8<mVpQ9@d($EYXm1@[la#%O-hU)Kni3P)gD=@>*EA>%8:Ic74@30'5ch)^EIhs7[d,A)M)VHP-$kfJ9pX8f\2U\'g!6DD4fUCV?Url_WRopH,^r6I*g&D.\!=eE]&^IgF"m9SelSK[Ss96%%:$W`98G'4_L%<jOEj4bFY3<"t4#(>;gh]"N3iYt&6^b[=7l$LlfD&Pus523n'u)H:)&#cK[j2a9[`$H,s)kH:d`*l3L]>W,B:ES?%_)(_VXk/*KF1EUfCl?;d@<:""hT$_7h\O-CC\D.";P[1_9bf3THe?%/#C.)[c*d)thIJNBYml2P)uls#S4lpNb28k[l0,B4S!m=d%_h9RQ#AFIpB8)>/d1j"u*o26%Vd3!ai_.'5mjs:bYW6UHNpud`Q!f'&r$$KrC6HY^Ehs@%qeFUCpRBpUX^=V\-a:4#nIM'0Cr,ZZ%\O6/0;%iP14@-=XYFD<TOj=fU)iTltQC^uE2`<,s$R[@bL^HO[nSj<(Io)7ehM=YKM5[f#m\so!p=hb/K0GOH+5c:_s#CE.>ogVm%;b%l#mF*X>pOlcX_P!.\#gFPVoNO];/,H]b*%p*m$'_pq_1.i0gF]@9/Q5@_:lW#EL.1(k`dt-JOoLEX#\^U!Z;.NF(FSYEe,S.Q%G'@!A[ONZR+Z6`gUf:05l609q-8)N\8CA2t6js2toDaVRUP^m8)H8?;.W$da+_DrII7BA#T*Eq,DU/7/s3/c#:%Dp(9p4=@Tt*E'%<$o]8!GS%`k8kmjL1Q;$3u<0b8bM+iZSh)9X(!@n!^b;0i,':@;=8/)dii;$UEG>nooU343'Wk8R`LkZY@>^Q&@HrImS!idnl8fi%VEGgBA4kM6&\D:ANc(<tcjfu`X/Q[cnn<nShX"o>(bLMFGXrEMX:@iFgYJ;TB:YeUm'e:eh60o$I9qqoPb#1SV0<;dXl2.+5*AD<%8+T712HA7/'tO>"`=Xe,jNQ(Qja,A>lAcPCa1k+mDX2ECW.N]qKu/B9g9CKt'aL[E<N?"O_NS,(A@==`dSoqGph)'3a*g"?2u_?t%bu6(rX,HtX3F#0fiVU/O\Zs@sOcoO_VuNOIBasQ\J(asF&/10S'!^38+a*#O$0eU@7!#^Iam/j7-gdODa%G6bOp;p)4aTtop>46-%%`$Rt&c@V5q0tu`PQ.qil;7+;/B,uLp2[m7N;g/Lm-j!h3H'Ln$LS0T*EL/Lch.@enm=f-ru\UihYWrFin=)kX9S:TT`'Ar(<_4o%d6fkXlT\E><sg/NA%e"EO;iN;DbID4TC,E1&dq+e)i*R*#+``"Pn&WSs0J8*,4RoH9ZK*blDk;n3EE^;Q2D/NSePrYFf70#+HN2D%m4ASddRr-Bht\pmrNY%fRk/4>/d<L!a/=DD8c>PY(j-Y>%e>AJV'E5m*@Dj^(L]bD</"C!(fF='4ZSETKe171?eqL!^Uga#Uo3A;%0=6Lektud/*oaqq@$Q-ac2!U?)jB@bQFW(=MqR0hCU*B'qeq=3MNZFJ.n+)1+6<H'\%S0QN`s\9F51*J%FOg1`/18*Hic:tUD>D[%iMA9a5_P<e'dS[>](7R8f7]>ZWq;Beoflq#OJ34)ogoo>MMA'pb&<T(.4S_3I5DQC71<*r7l6rIOpOTXCb]^ckL1aj\+W%BKL+d7%/gnh#<XF\j@e10Ybf#La190Iq(>YkAR2!h_,ZZNhY7*g!P3"_;StfP'Y\:HL_nk=SH.4)o>"e0]RcFCQg$]t^-W=aC;D<(WafNtY%&G)roEK5Y&PJt])<M@K6mpNB)/CtV><g/&lQtRL]`"qGqmYmBCV3KEVAn!J<6"Q&_ISX,J`*q"(X[UYRRj(lVC$TtE];7);ru"L7%81f<RVN&I,L=s3Ie>]dgGXPu&U,6T#;UpnmKN@W*o\Z$qM50T/0lBL60fE@%q*=6,js2Wu_BeZ`2J?6tO]g($hPtF'/>Ai.=G#H5%0k-[,Loo;U;E>>8(dMhEV2uNDNU<s5dK[NDl->1.,4/Dr\6pHsg;VdBD3nRmIUa_+Qdq@A26TP*bKM0L2ficBX5pD-IGI2uVUJ[u%A;uO*#0M&/6Bu3hBfS<&Q;`)+Z%QO7[I^K'bYUoO)^rCWg7%_o$`TWE@fe99B;nW!AVHrQHA8cA#l-PooZT@IafHR<V-,A@09r0'%?Y\G8%_GVE)pA3'KQ:=23c+h+/-_nDHTX7I,V$,;$tU5E=604QT>2Gt3&d'fhGC\fThKekR2V:E)_V8`iQ@8GQC0C1;QgqNQKE`A%RL4cr[*/WS!U-(gO`@jk*34RWom;^2](#hT8=5VZdP+`Z(Mh#W;f;Tbm(c@]R7"Q^^iLN?k?@2K0(n[I@)\2W@l>e=5.E?+W5)rt%Snof/2sE@UcrjP@;)Ia0C[S8[6[W!rgL^Wi(M\uN'3!).9;tYNb!lcP2o)mG>DH:WmPQ3OMkO[:Z-OOQ-2P#9BsF&RGE\cM%d;#R%CmfrjB2b@S$Z\Pn=^qF:D$=<SXgO<"8a.IV6m*O000E0lIk8%=36?VcS9H<nhRpJQ<:!7V9\7PUFQ\;U\@E6lkn_4Tfb1V5)[fDe%"#CT@QYXlNK>jd'U:=$aPaSWYS@Z$L11J>2?-K41KaF_T;YGWFE;H("bVGT;f<g*+:p>`Ad+;h%^S6f,Pet_SBjGt@l&K1d`DkL3%<.q)R@Cf$-`6cJ2+cfBKM<N)-'Lg^[*pBVrUJE9@56DU\Ca_2?m:G!.]0]cWC<krgEir*d8Cgd%Cn\)7`YQ_B<a<./V:A0X2(T5n%MtnjQ((/5a>:?PHg-TM5kqR-iVR,,iCo17cM&:fHcHV+]3=+H[lKfUe%-HB6<qUH?UK=a>`CPNc5]"AJ/IA+XNb%B49]7M5WpB,8%R9g:WkK9ft.]d9Zd]1)H[2r'l>8('sb!Aa4"!%MYdPG)=^/odd+W>]o/Jd@Y*nB"r%@BoZ7F^eIbWSbBI(@bp$(`'QAq%9$GPLak%o-3lFU,o8kdQ,;h;ahri_ImHE'("IV9(SVJnt?eoR,K7+hU[C,-96KM6sl[`(Rm5JrtHfi1=TWFcJC/Ah<_Z%T8W/Cr/TG#A+!kc%]?#0j(ZF>5qn.7!VHt_a07W5'4=*2[c8+V>pPYQN&h%uX^D<N!4mT)$kKNi24a;)'S0IKiD'>FP-1?O-4`g,,k3iCuIWiSPBA>9*%]rF3cjeD]+I_3g1$%1g^_:I<04hOY:V!>@!+?5Dr&tejpH1$g\hI_B2IQCS=?cn`gRkk^_:_T7]]H/MK'7sDM8Vmj[\R3j0Uqd`i%8LIuff.6T@c.p:\R7eXuf_4W0'DC8!?X.%g[,2MD]Vg`YUJaY[T)G"DFL9gnU/S6W+/-Y7>JKHVF3WC=e&tJJf.5al\F<$:l+$]G%H[Zq4$A9mc1jesQlK-`\QYe.@bP&]VhSf04rlP[[[iV@],\->hm&g(%L)1`r7G`JC1$^!C3Z67"bNI1eqWRHGS^V4X'T::/Ai<<,%T4[O5redHKhauTf,'VgZ[Ys#7^4_Q8jI+71X`_t&d,>r!/8=bT50=g&)QAF>Ak%c/cJF$epR4Qg:8uo_.sftB1V/Rkj,^QEUP3[(%ao:K_RQ`p+],[$6c)K=Hg%$rWE46grDgIChdnI`ZVpU]lLR7=_VGYhMBf>ne64$oh7[Ls3_KXci%]-1OND`*H>qg*ePR0S;Y_CKh%C\YG-jn#fkrD=;Yn!S"*"_6ilXc9;qPS>(=\m2aBgkn(kU"Mg&$TC\MZ)ugHW4pR6q1gFVRT^N(n9]Bl\G,;J3\?S4://&eUX<j,%F^ij6HhJ&LTCa)9cCLO(7[I1KUGf$um/1D:#tBmi/t"HmU>KY:oB]0\n#uC&7=oXLYrU,cO(V2#^/@9AG@Aj3oYbbD0M<9?qYX(p%mtFuB;:HDi.*Y]9TA[VXDPML7o%L<F=1=g4d;LjY8!6!(:TFt=2SI,gRW*EfbLhB^P[E0Y-,r*+NB[6qRRX&rQ(J<0B^Y7X5Vf5)%lUuu4]]LELN?/mbkHUYC>#_uYX0^KpYYes,Ii;HjBm-?#<tBG?m*>8C/c4GJSZZn)gZVr'18Qgb`auR2laK3;1MSa>4h.*CqMeNN%Q?W:.-a)&LZ7le(H=GOYqg:(^1hsBk4\S3\K17LW%j-k)/8iu"eFrS*Z?9d3BVWBr*Xs$9$WHLQFcTk(2Wt#5qPO;k`2Cq')>q2S%e-m9:<P>;+7Z@aSU\:1sNIm+'qKe@qb[/tJ<k$K3[m+WSBY7`&]V[0SdH9sCY;D./"f]c.D#*iEL1\c`Pih*RjnW#=)Q;%s:tt3s%fr[VXoI"XedV._-Pe%K?)Olq1?+:9C\f-s\qkXs>oQ#AWW<DR+-W'n%R\86oe@/#$1j\E3q34@29a1gV=lIASRq:FmajR1<]_A91%k9Xf+>rRK3Zp.SOrC2cQ1>531K1c_m'ZMG%$`s'0E6gO?e%!fPjaEu2daOE3H)1+jB,Y[DkU0,dT,+gYbc.R!mp\1b>N:(61R-HQ%(S>_ffCOFPXebi9fsIZVigY.#nC3.qTptZ=M;E;1#(k1hj;^9EeM1jAEAT"%BR%*81rk<RBlr^!L@A+^8M5s7Z((JS`8L%%,#2LX%`:TZ;:[OR>a';@1<:\(iMi1QF=?;l9^Km_n.pd.)C%*t5\B\>1>m=*J4e&dHN'6rYT?"-BBTN&]oc9W1XBR0s+ck]q`)i\2pW_=F%"b*JhYtEaKOA.rO%,U-l*Z_QfBCN:dCLj452pG9h@ooc$II7Deo\[BsrVE*EEaFBr:Z%qo4NJ@%*W=]^'E:ieY5eFq]dip)lVHEa%?=iA-J(j[GOK>-.a-ofJq6;S"keGr%\eZ(%2dQB[4mN!hoj'[<i0a,@ep25hY:oS*T$>P"[8<a_G/MeQqGW,!hUK%I4C'a01U]#)%o8ES'`@K7fVOmEZ%d0_1bkU=PkBZ480,i<EO;9ma2ZCEMT/uY^^9j5a<nZ20n3cnXg?^9GRsJbV?<Snfhj'fr$e/KsaTl^td^'gt%E7g;TceA>o`3\:ooj*=p!VfEoqtSnsr-21m6CUm[$i03nm[8"M>uUsQX8m=7_^4e:raVY,GRNOQV#=qbSZN[meXUh)3`T&cdIZg-%1"Yu/K](e$jh]?F3#g5iR;1UAffS)PK.T==*Z<RTo`?%SP%Y6BL'bt<T8qP1s5EHRS:k-,&nb]-_[qj?&FmFji</J)I.4g1*su>n%a"E1eW96@d:7qm:Y7.!GGpjHof/=7sU9a[\n5Y<PN6"BVR3?h_E=f+sk/<+=3/ZFmmjsQE8s^I`9tWi5S;K:@c3tks^lI$%/Er_K%NFpkcn%E@^+RJQcb4M^&]4.]'d5S!4Kg6D'o;5H]>JmI;?_hRCWJhJ4l0:aLT!b-=k85L=lLiDe26G5jYFW=Bjqr-bXAkLtIa)fn%=PE2L<*AWqd$$oPLE*YanT4ITpX9'.OH8sJaFdciSHlWREOH9e.BBZ*S16iic][Ygm<OnZ7?/4(:ecgMB"kQXi<HGRaJ:Jd4BTdA%4Xt#=qo`7A\bee/PEKTj^=YG9$l5/H=K6OCK`ikM5J;ccZJ^]Y@@Hs'ZBrZp4?0W>3X6&QbP>+%ZMq1Ho(0=)(Xn']7h*2EPr(\l%An)qV!"-4\kLm%@@EOq[^YD8Pi:oc;X3lhnrfsBBY%E]g'9V`W..]2?G0DP`D0;jGPp/sNrW*-$LgLi`+E;#*OaFl2j=dV.5fjng%]b_JF-iRO!^SDoMPH#[cin*R)<8$Lh/eVI"BefIX*?CaHpS^5-psnJsnDf1A>uF+9Xf*LAPo*Zj/)><W$;+\"l_u^A2Q',R9uh"F%Vb?WQg731jnW-m@*m(8BOEX9_.i&=U1CV4=k`FsghIdrf_gl@[DR4>$M*0\GjC7EBbf0&gdj<8#aj8YQKijH-l4GCTiE"#uo?MSo%o+/@Y5%sZsR>dmeY(kt+e:[WJ<VS\!;ME-]b[s.s-Znd)T&3'+87,ouhL;SiB7W#t?pL7,GlY7n\)uhkU!YeH:X=^UhC^Dh9\;j1%A&?TF':55ugp./F&@B*D&QXg%^3iOBs&N2RF)NuF%4<@K@%sYBVT.&<>dc/TX>Dtr;:VViM7^mB0=eBcRsLXD5=D?aM-+'CSrYbI%+l1b5LPP-CF%R19:V=CA4o8$^b"#/jZ9#"0MH*H2pt![k)THop@*EmP^@QeN/$0Fq9N'40qd_`4>:1o1,>">,%#@Ne?VL7Uj4pA*%SR2OH%D,7NN1Y%2E%d%\6qITG(&XMFc_[U72TMq]8*Quil=/5sG7N='POgk8$['\M%IGqp(V^F%.os15(:,p*)mEiDK[LPK';kOY%CUt)tS0WOXLY)^AhPE#/c/XOZ2tSpo[UVieJ39AKD3;JJ##$`T-#rlP^W(*JFiPD%f9W]'/)-SgHhnDJ)S)bki)jmGUi#8`aLM[0%!^H4cWDAWW8),KlGf@?4=!?2>G$ZoX#P#i`ig0MI'C4_]\b8)&>tpOi$<O(0Q7J4P/k[OVD2o7Y4\_HJ>K_F!_T;<oX4:Db7)GHR%:,<;\pItl:?QF"SSi0?e@OnC%-Vnm"]+=e;`N%_<kVMX2f]8)r2.id+&(H.Vfn0+3c9T9m+#.`j4RU?W(`1+W4JS>AgZApoREt;d%q$^CCGt&IfD/j!%bdNqcq?7ilBP(d2Qe\g:c1.s]8j/X=FaJRphDc*=mci>3.=SNW]ClUU8#fhI,(;8JkOP<qAV&sO%J=NTgT&j2%'K(M:mm[4n]M4oolZj[l2iJ2rc)E(\qPFRUpi^YYOU$eHe>&(spLY"H:h-@V8<gB=Ts0Y,N;@2'DV3MA8[:*)YO]d$O4R05=8D^I%Zq&O!>FuG]hYWP&&Mc?7o=d+P`:Su"TaZ6dQ-ep7V)r>Iap8StgdnccM`[`XFRi9s`er>0+D]FOlD`>b!,JRk<t"8uU=F@RD'^E<%&6q$[$a4@#"H@_$=8_,P2npJ9E8Q3XLI"OM+`"V-GoG\dNIoEc/U?(u\#p>JGtT:+_VA^f3,Fd;V7/AP:+*ReE[6+>8ob<F4f\/*%W2,d:g+Bj8dZ'E58@!mg8[ijQf1U"t%\esI/_nHrP$@3W";6!e<WdP:DBYe5<m6MuQ+LRiclcLcDV6pg54Qh_S_V("77<ASHHWlR%,_!XW,jAq!2t:TLY%2rl!'%EMN*<&/\ojT92bcX8,-Kp2-E@NL1eCgt9sUGtb1akH,[]DT:C\MhadU\9,[660b:j*dbr`J!*SiE/%,\ufgAQn+u:<Vs@]R_6j<Wf6h^1CH2-4kUKh)K=S,'n<nCn$9-T'e0=A1+1$h7;:&:MLtV+j&Ml2=SG5Y&tiAA@<0C0H5H0O/ZGD%>'0\i8=ND[#!S!^,b%6Y%;=?(/IW:`Z6gh_Pc_PN4"%IF$49sC)6r*X6Vl$Nf=5olhg?:JolPQ"e]j*U;4_'qabhZq]#2h!c+1Uf%`A2V0[3QSYc]6_[g-MMgbJ2pCWT@5tDNSEup-?YeL)d6u1ZPLd`3X-K3nH5VgFp!%2sSQX[b4I54M=$)a5!k$*IUqI7`c!BU\PhT%H@7]L-!&?A4GI()O=<_<Y\b?2pXS)Ed+KACRj96$"Dqh\LBu[F&\rS63eP[Fi*i?*.Q'ACrQ3XR>j1FCPm'bfo?5&40T5?A1g]P2%R&hNNdD+08S#"aIAT#BRob%U4%J]47,qs,P9#Xg]n$kQW_HIi3Z:6tl7Pi;WM7#aC9@fORBgm`JVhtg3)>Ka,hVsh=X'(.S#7Fst%TaL,MbOa4[M7;m:gW<V7DC<KaH"oX!D3gD'M2fhrXJ4<2NK!CYK6Uf8)AV*l(;nA%ZIl[Qkr$O8@#eAl1b`/i+L@GA^p5X%=PeM9%apC[;P#9#HkdfM/F]sVPJ[.WI/3Whh[%?I<,@Ef#D-9H.fJ\Z9g[F!e#-ouc6s]TuU+24M>??%'f*=(>9m4lo-R9+qrugQ\/0H$q%YA!Op.TCV3*u&9[J!FnO,-J<K<:*kPKc9V`G\O%lN>ZKm@#=h5RLigb7,g-_]mW"tN'T=M/Bq-_>ost$9/X0Eqfq=n>i4#Z51BD?%`&D:QEjt,G>*(;bNNmIGN&0tX/5IM]XS_;2ZFPF="?$FOmmc,.LTj#:Ybm]?eu5?2%D15.f1it:5GSd/:S">-mUBB@ih!l+-%:'?%jIUfY`dX'\_74<%Oe;C!+\e3NRTjosXlp>jI!f\V:UZub87"u4BJg<1ZM>cH]<B5K`#EA9WmQ3*ca"%[Fe<,XD^TAf4k&MNUWY#E%djqgY%,)Au<!R-VHEY"!4uk,,>]>t`m,P`u?KZh%//Ki\hi^4gQL=N@mp/*E\">;#?hl0$l,j?/DaGiA_c#*&SKGek@en1B<FI_+%-SaSd;0<.WbQUB1*3p[,q*7Zab5'ntK3ZpH*(r&!#b?r^?f!9p_[tE]5C%KSi14'0/F&-%42+6t?_98DB0B$+E4rU>B2XHL[5e]<%UBKlKb)e^hfB\7KHJZo'K+gSgcYqBBa4$+RhGO*4Q[90]2Q%UAY$rp.QcM6+$/&W6^-5r[SZ5O)IAoYb5CHO0b.MXl=Y4^,Z*MFe%SFS?jX:"\*O4H=tZ*NR"SGDfcJZ`LV:MHi73V=kCL9LF!NKqc+(?df]FMBjU3HgpjOqu^=]GXs32fT8OI;rDg$k=FrD!Y^&<$R<W%@mh5tfi+Z-iM0SJQ5tAs2Lk,VUoW@GCAGj/RreK#m/cL_n`*U90trIXT4T-jod-RB/:[<Qf7'&VF'T&7I0jQ7Ic3]mcB4-i`Yb=o%HOD"C%rp3u7?O'D*KZ*6!JED3]akq0dh0kWU=!=T+Q0AQ7+=I,F"jk5G16N2W^$<KJVdD(?r'g$Xi?XN/AMlT<>hNH:G$B(\%4F!%@n,$S]$5%I$B(o:h+aa"]fd.aAd(]+WX>q3R:')JClAK_F.;X/a0F8ID[FKn?.pWo<2r-fh?%tU\FjBkY$Td4U3*MF36hrkfBW>4%Y["LM9l<u96aeH><)`^Q+kuX*f!B:2[%rQ)\$WALbEC+*7Lu\sT<&#^G<lb/TPG'o*k"*%nAC#N%r8EVS"R@)/S)$O\AS+#6_fG2%gML^@4`%Goe=Pm_eTbH<%j)]QN3/pRp='_$fS[M]HUjJ]W9<Rf,6bc&MX'!ED.d5*;tC/-KtYq10H5$T:o![a>H:P'("HH1#'W:A%E(E>D^RhA[_3!??jsrftW@-/CpmYPn%>rU9ZtTolV)i[8KM/V`(T!>)J75ZrVF6Wj9\1e[:?qLoc!$h_HtaDH[N>d/35#au4p/'U%JQIYk1[nTWKI(HlMWS:WecbBPQ!,#J=,cor'DoCs&p_`Vir_iX"lu:Mb<g7SmYFT&GB[^Hk!?W=]JTehl>_q1ohj<X"iriTC]kJU%ou?MGL@r[tTp;`V5r21qZ^C(mlOUHni,J@G`]mujLQOV>%QKDi?O\$a&8:9#i8X<L]<$T-8p>-]N*-R3CH20MX^X$.Qsj9JV1j6>%fBTcO(hfc&b/d?-KLD<B7ARLN>Zc[oG+3!"eArgm5;S0rMgDok1TfG_Zs8MgN>$H_%O0rUf'UHMFT)4D.BLe3(g!$)?1#NfeW.89%`KO"sV@c/uoDD7X\FSq>#$'=o,cp=J)WT6t*?S\)2XS6KU)no#&%4p8[kM%GK9`r=6?-o"!b!\(3%F00`n*FHcZGd[ao!F5D>e"@%Ebgm*DOUW_Kdl77nSTK5Yko!qVb=V.>gHsLKRPE8m/YoJqHR4hSO0[#VS/.H/bh)5A0Xqe[[1maD7`En)Ou:qXHLgG\u[Q0K1*ef%Hl."F\j%e8Ln7c26eP:AG<3&<9kpi5e9-Cf;*KrM_RSBnHO^+S[Mu74G$(@,Np=399u)kI!ssUUY'XUk0Ud3l\o'K)B9fcne^Yp`%#tZ/(+lWs]kgm=F3\)ptU=X%,=>;Y?G$+9PV`+V,Ena1:,a/:+j4+kgrDPPTXq<rqc1f7]?F)m[?2'Pl1B>j`#_:3<5L\obecXSi%Z]%W2N&.mPm'eu6iJcC$j.37tB%B/pXU`CY3=]PZD)dPC]snGP=JOXiXQ]tk@,A$J6ih%m[>]C?E.HbCh=(gV^%uP;NJ8kJ\ogB>%VGL9bc"XuYLPZ><k<B_uS(6=8]0h5&0dD/K%6iPcT,BJ1]+[MSKa-id\IK,ZhES0M!Y)SahY;QH@*SJ?EB3*Rg_)Hr1tQq*BX!B-%!"@_3H@smSKPKFB;oT*iX`emg#';5"a(WL6RViYI*sVSQ[ViGsg==9rfl@<0`hje*X,oKsVAP9SIC:8.<meQl^<RL,WaHt<DSD,c%a"4<?=S?mu'A<JSBfH7udW1tN0cDUhg[ARJ@)St@oc4Wk9YldF4b!m8H$9AaYFe214RR)L)UT`/=.Xs:gHS.-\=8'J2N)'j[Hgg.%RU%ihYC)]d(spDU'/3Q,fjbAD)V:lp9muS('O+;J8[m#b$:\%OCP)X."Llo139dj[;R8C6>9jVQ4@m&m!.(g"\$gnpC:%rQV<.I\%mms`F^K??=Sda)/3]"'q,9rB>m>dtfV_f=sHV\tRI\p7&UNdkX(,331(A;dOp,&FnrNG=IG2"$@A[nXNef_m0oR+_#h-%E#21&hX%ohiPOoiXZ5DhAD*JumiO'te!K7833eOS(@Ypb9ec9rQu%OS*snK(X1$LIMI-^GM<cRhJW7kN`mqB2l*e#sOu/HD;;jN*84q.TeM7%L:@+&"r44p#r]QcG8F5_l#"0?6NudaJl-&u?rX?OEAm!R;8IQYXcEB(:r.IF@%6c7W*m<=CsGDCJi@`:+K/[29X#\\G")Z$JSdgd%p40)L^"6Z:iio@h4\RQ8Q3Tk_lX>D<,4YV._0VJV?%6ZD<3T\/3o9Y'W8J[-WB6c)NAC!Y70W!cK(iBR0L,g-p!ghf\Qbe[or=0n%Q96!6=:Z'=Z3l@T"mZbuh$LVV.TfKM[$dun;8J-X;)#gjm=_j"$F[V!g5Km6n=+!tD-Rf56PjY_M.1So!U_9m`thl^jft2428L'3%mtTQ/R^,)bfP$O_gUi:OqhN'VMe>=o]URQD,c`:3Dn;FjS>6ntrZ67sRq%BNc,!T$(+XX7rU)!j`tn,ehSlqUiXNA`lCs3GT>T3g%0O$s^DiZL$57?1;NS@j!EOKLQFRf(W@Pj#1!G]$"/RH];>=02Gc-ho!I?r7!gLH07cgEJW(U*RT'=M#NraHaNHpFd3$+bA.BIqhV%[iN&)HYi6+Y+%"4_`G5.S[Gn`/j=e2>6>(HM(Ln6)VkO#XN$-$72Km'/N-(;>Oh!\@Z,*'4LrbQl_9:h\DJ3@Z#mSA2X'/fZ,Jfm%lJ*"VCuiF$To6D#(0cg<%-t0-!/OA+%UH_12.U9/4*:#df])90gf@/[cuXSWDOReQ)6jLV=EE@TMK_"OUo1,2gL?Ckb4TV2;:aZg%/69227N(Y72QH+O(hI_ohqAk="(RR>a,+_e;;R6F56OGY3pgGmV//lfXCIKsSCb577bJ\THs_j'ar(dH9)1/W;j'A2cKd9Io*hnL%$IX4K/qSMUc>+<:5J]B2VEbC,G;-,)Joj1Ak/n8$X@T",%.?@c/CfR^#KJl0_nPMrFgd%cg)'(Vcm<,WrrVMf+J!Ap^V`)_8E]s!%kf-`fSPGj3)XFK'X6pIl"(@`8V"4U@]GB#Ib0JsOZ-MZ\bJ1hRms/9'7BH+WSQpYqF]R!lacIJ`l`B.So^cRJ_)a);kKU?cmTAZN%<iiB3SZSR5p;]3E87r5ZqA38s?'/CH@@]@5NdVbGZ\!9_e.,JAXKsY%%Z,=75IK`/Yg.Q$hr1ic$8U::?hVN$.uYghjkjI:Psn%<%H[$&([$$QsVXseY=D&k3h-mS6)_m0S_)a);k6"+DL03UZilW:GcGobW%uGF0(AUt/[/I0o2U%FoDu>[#c;lWUqdZ2+47-Q[XL#bP%%>sbM=D%g%]X!uF@'&rP2]!PaX)N$ZoAOR>[cZo.G/H@F^U.+0@u%u`.nF=Ba8QG3]XlkkYHZ<pLp*s,*Z"(S1AZKTFk5]>rW_]$%q+R&@@%ES^_+r(d_E'3".*C27@%DGk`Vol'XOO/hf\s*\3]Oi<^cF"#2=M%tItVrN>I"#<XL$IQAO!9&cA_Z+=D)2OOEX+j!S1C>%3h+(bHXiVuE_:h5F]MPt:!\XJ'C.3SpSLE'G5Vm$=fDqhoDV6^BC.^:ItMmP[$J'Xele,[gE0mqotA(,A"AmU36%*"r`Eeu3a_)R%(_a!W3Nh$TeSK:J#1m[OC6n<Zh%SE,2+9CWS;4p<S"lGBrilR`Ra"^S3qp>UKPNJ92+omhmYbj=7lBVg.D-%kfc8PTq+b@6\7Te]%ZZ;u5I^j!2<3mXdG/6&*UREcRbS%)3*7_]JTD7iaAogqXqV7ZjE6[ODB#n-t!nXO6B;cplda$g"ER!W-*S#W05.G3GS>l%L_V=%<%bu)aO-g9u)R5(_pnfIQ8\7Tfj@0H<*E6T.0g]tVPS"lEpcl>.+Ra'Mt!PrUZf5+3PE\?-r\E5Z^>"Q?mLOcUTf<K'$r*HmFF1,d`%GrF]O7?1O(Ll(nPEFHA`lQ^VXSR!>J"7>Ht*Hl'3&qMo=Yg:UtggPALTlG?>3Q02q5h@&jB34M/41g$AK;@II#M[pc;97<SZDou/%%!"eJX!Lt?\S?UfnrNWa6iRG*?.kTm[^rfgE/A)&"cfI1XQACV-m<6,b?bp8gN).OY0lePCaQ&nl6Q,h?=P,S:Yb_!R2nDdr$DYI%[Yn2TY$E%0GT,"s]JXqo<U=<aCV)O\?YNi7\Jpm_5HW=X+?$a2lN:S,^AjC9*:B>i]Wrf$[(Bg`'XHt;4S$TGej6ZD/kTEm-_$fk%fB04V@GK:6"I>QZlO;9)6Zk$rZB`%$<I+Sg0^c=XGZG]\\&nd]gu-1e($*rqaHE*"7V6g`@HEk.M\4k+@dUgh>nEuN9.%6ZQ>aFR%fa:-P:6QchE(Lk(9+,@O.P@]nMbDb)"<P.%W*`[l9hSj6O9fZFA=2oNcRk\TZB6'C=B`C"h+Bh2%N\cVAT`HQHIc+TGNkC4Mme5@%1kRWSDckB*<uNVQ+]ZX.[JQIq:E$c&7n9cL*8^N%k7*ggZb("^\AR!!+][`>o6K5&AK+@i2AiLNdF#Of\E,fBXeMT"Y[`$QUQ+ub%=M)K(g<=`*0ZYVG]YiDP3Z:b_hu+&JFggP0UU<2O[_'G&WtRcNiM6'A7)BpJG6g$cN6M[3bbMEf"+\e4[mS:D41`'?oB`dOD,eqV%Sa:_.;94k.=P4+V]d_8u&4`Q!m=[#2#.51d,^smF<+o("Zbgtf,<Tj4P('hELcWW5<er"tqLbHg'>J<TC3Yc5_3SR?AS^^efqoT8%\YJ;S:?:qUU9;V,L%M[i'6I)_qk%sZhC*4A`G/O]0CNC'X#X8igCpLH"5T/C5)d)4)l9+f\Qk'(0eF?El^%:Z!D28;8^`O8&Q&eL%<rtrjbF"F:l3_X$WTu#`D2YN^YX'dN[+4_Bj1=QHDS!ef9@QqVb*%Tuo7$2oBQ'GAT+;&$"0HHe[h.gl:X9g^=g::V?'"`(]>Y2I%Epod5Wa!^8%Wi0e!Aq"@%ZP#C)Pl&*6h6PPao^C"&Q-R%X5V^i%jQWg%;qZapiM-_H\Ai`3F"f8cJcD*k4=dZCGai5$T2hoC\7$d%gs#'ZO2i)@H,_2=qQTi;G,Qk5E'0W='SUVC2mdUJ[2Q%C+eb1"VlJ7Z0n/!]hWWgrLU.RE#a"2^O-,On@V9N"G7Zme^"tIV]<1O3%!:gnC%e7PuR:Ql1ZjJ=G&4<rsdlg#Z_Fj;%+.La#gNbd:'mfXEK;-=p+#^rC%=Oetgpj`t"f>K3J1QthZf-STm.Rn)(p,-X^0:#L%X<:D^DnPLH(#*@9YZP`+l^6JD^!@DtX+L[.mhWU-c-.q,S^ufB/R"0O?6<JCF`9fi1UN</p)6`CS+leNL`n:q9)<d6(p*EVMT<V.%_$Y2t:VbP)%pD!LJ3Gk$T!pfGk]+WgK?aq:oWeEM-TT"D-CqK9GCq_V36B:rR?.Q%]R-Ma-$f`,*G,XZeHZblaZ8k&,!0p"[89:`%:PZU%eogtl>2duEpMJ)XCj#0>fFoe#3cCEq7J5[sj0PGN%N(hs)7_K.RXhbsGLX/f_T7A;K'[<tX<K_bSBmhX^$9$AAEO;#'\0_n%T%EWUY78,.hB"qo*b:nSKG<9^s-EMG"Q*hCi*!DLEPm2renR>2*dGW=*<TQ!1Eh+u^of$dk]I\`hs)J&_:3*"6+qPeD7riDil2)*%_,"+$>:]H\5ArYKA?A>7;g),e8E=i8\dO^#Ft2G[+E+Q[]P:86.s_PL@]$;89657+/=*KC^+"NI7C3h>D^Ur"2iO"lBeRGTXN#'Q%[r3mDSnIKhU+mYrBq[nXVMat::\_"B&T>sm:;qic6,Z\of@7dE>Idf0>XdU?P]QD,mP?-$1Z)]IpMKU<DIK,_BXV5N/<t.qGNC3u%!kh]>nq!:6oPDOk^[+M=95(9,*@o>`#?&6D^+Z:'a38@Cc>XTon'>m`EuYSB>tIYm3ULIC]:,9^hHbD*_^("`36QR8b?lkOG<HC4%66_biK_P3BQ1lkKWCi+rV(/Z%D<gD&*h_q!XpB1%\E'UcmoG3iE/hW2LC3uQ4\SKYlLD1!;suY0i/PK)!`)djkT<`qB=CY$1]?:#%c*%#JfpmJOcK:>>ibY#f]Zs<M>V?Yg,gQ3t[sEglfClQMUj<Vqfrsg(-PLP[?/=ef_b9sF0qJQ&;^U;0G(&3nj#6(?^!ub&lU'-E%;+l,.^frm)&%4(kX^:an#Q9][G:\r(rtt;Q[i6ANf;RIlX>-4=9.)c5"/PRpeg>#3Ug>O1"P^(R265G2^7B(`Ep_1X'rZEOVUPO?%/rtRALgu6:Vpsmp]4QU_hGcRqWh:st.&$Vg;#-;HFZ,:FG31EtA4eR(5J<T)Ii"J(5OD,$1jo7YLl5&jN0V[p*Lo@nkQL7Wh``!l%#6FLFRiHhNT%H-^dtGCT\&tYjXL]="+p0OtGgH)ul4%X`A^@2pObu(h[5Y6h$_2VWpW@KThC.JnCM30A[XS8TJRnF*TWX(IE9l#U%jZAonUX&4hIhB7fr(1OhbJ*.XT;'rjc>b2@8=)*JGpam`:4B4Ra%Y\!%Fb(r5C@^%@gc.\$e<N"B%!#A@8OH=W4Tk>W94PgF6YiB%^OE`@bs_b97M_CO'H[WUJ)i!SjaB/2Ual)+oNh8PP:Afi]Y)S$'\nCO1$XQ@HASZn.>pkqbq%kB/#XS7S4PoT#Jf"V9Q,r9HuRmi%>]eh!/=&kmISf4MjTU\%W"ARe&bnn-SF)ks<O6&k#*7Y5qj..ip+#Zko`'=0'0R.\$e_`8p+k1#%j)B6@foiN9Q2r@kobW>k;61^%4L\0f08uFaO#gMIs5!Rr[En2`k[Wh@0:/DW3PXC"07=8b$LT\2jGVp13U+-l,UHUm$Wi(P7jI8gA1PFhNa+[2M/ZOg%t0q2)ie3Q%SuY!/;^'K^KWXk?%_aoMC'a7L-dDD`Y;`E"cS3eZc2t*='0@h:rQ<'"ge[$Y-@B-j`k8j;VZL(OI%5/n:<19'+.bTBZ$;3'P,O]E%,p@L*&/X[s[jsOR#&->orsIH9qml4dmWhg_UC>F>o'%dYp8._(os/cnM87OiNTmj3NHFT;&^*BZ0J;G@O=-7)ac;Kk4IiaQ8S*p<%H?/.OV^#Hb07W0,B.dq*V7j7^OoNFA+;K0T=pf.(3.d&)m]%k7Q'C;Z,W56-0:W04"H<>&G46L]U(0C?<LmY-%uAs9m25!3Ub%Es%0$6Ys7(LI$0,:^.rg^1K53IZgiPOa$G2GoO>c[;^.-)\kWK2Z%0j]@i*k<@ga<u2Q/U[2T5!P&_l)9"7UNXTc?e\LV(kh!)m6>+I%q"0<-(Dt/dOSaHaVTLQ2T?$9B1%m4RSj%/cd(^/VhBime7Iedr[>=2<kX79f2]pET4M&$n/ChI#[7"@DEin(.nrndJ<mj@f&PClM%ErD?Y"-NrX55GmRCEZP9J(Hf=rAlPc?!!H$hc8WMYL-M8/mH&$DeSE*q",hWCpqXFIc"f1\T4<.XaG42cU`/I%p1^*qhV"=U%0[5%_0rZ[p<+*kI&b.BN@(j8HnU\0@nV2f1:t=BQg9Y<T+B92m'tUD7'0i4_PZ;!CYnIAgrBqR??#U1:l&]OQ?@Ro9I]ftnk@]XFP>`k%9<Q:SUTo?b5M(=V3Nj.Wqu%-[kALmfMj*c>]M[U9Y.TeY#u*S:SAD8<+#mchdLfdAT"SUA-CN3>"aaIgSBKsib71$8)W.)mL.*b+%\;6e%66.Dn7&p.Cl(NY>DRa-Q,Rt/?iHqtX""`Ygbum$:4\pV<]g?c(>$u!+=>XlbTH):1)W85[ac4h?+V1p-ljf$'Y#:$.2Lh`'%_7br*B+EeMquoL$V\H<\id!@5)-=9W0!\c1Vu/[$G%QjDk>.q;6GrCu"p;BZ<[N_D+EXXI@eOS_>L0]ac3;>fj6oIpCd!.&_qi*Z%a85Af6%r3V[ea0Rb;H/fDn]I=N_#Gs:6>\-4IXU2*\#+t?EdH0YYOO8r`HeHHOtEtk6B6DM4a2tWhi$,a7lKVLVLaX''[EQ*On^J%GsecO^$[G8ipm35bRG7rFH;!P'r6'J[qshYSL!I0r>Ka#2/AlUU2<YH5?dRWP5R+:j.]<-R(GPq]ALa?+>L1E&^YS$P4(=CGOCU*%.WM'=$r1Jn(:Y>!W,Hh].TeRU\:ATL;dJa`2JNT#5MKVINqO488h=+9<mgQk*.F[Ym.j&<@OVO$rckEDPj9tY^R8Y:4MOFG`1o!E%9_/$-`_M!O4jr)6(Z/_.<LAmjV"o>`Pl-<Y4,RPm4AlaZ-XZF<-TQ)kOI+,'UBu:o5=)u'\ZkS^<YCAhmE`?+d5sTc<W)u$`\4iN%Bf+W@!"u:j,\+6oJ<9SOST-S]QQ)AcTc*1DT:($qrk)/8%<,=!r@IG)KcZF$,f8q$=a>50'9cgb]j"0sljYld\DaB-N'+(4LHLjJ%8Q3UfPCr<-\KPuS.hfiKq\P89WDM:h7T4:*54dOpO)]gZgH>YuNB)+[,Og<@.3Z`Y@]<ZW=NC$6mUees5&_`]W@p)V++J;0,jukA%62go%DFYGs*[=,=I^A#4ZAi_lV'@de(WYI;ggfeUoUV3%.@GFZq<'3ajubgY+Gk'toeu2aiSOdp(KG_\dEC;:UYn=a+66ULjeXe7%SC8h)JSuQ!+&:.5ZjfO##s,J%lW6%=`)(-^V7QDm!S@<6Sr&ZGituK7Fcc6%`#]9=cQDS6msZlrKZ<"eQq7Y1VYo@3n'&OR8@ng6%mD&2)pG/lA9tXF^-LaC["h)!E25?*#i`p.*KD%toQ`@?J<7t%l/\D'HT-0WR?OH-Jkl[7dOpM#Ue_PjK`DJmHopbQlk5j(QD'1K*%ePWM2iEUHti^+khbt<mtPpc;)1tB]*5C9_92sD;tN/*RYYW5]1Kr!.&OW!nW9)D3"@ZW`iPH9?_[;5P)U7n7*_5@1'!qAu=n'G#T%I,iE3F:^R6&593?9Prd9k&5:8ABR>@,rCMoQ]*:]H[fM-d-2F5%1]!,'p;7#g5W>])4LjY^Ne\Ak+E=OI.G+Smg^+LaV6F%Qq"f#%\#Z<FV?dRPXUZ2%)iBIVQK5H=eMeeNVbJS0NX?U%R<T2^;L=2/%&$ND_]Rla%_&a0'XEK-U'$9#X4N7gY_#N5/Ub:#hQbTt]oIcZ%Q%A!sD5D,P/,DrYW1I4$l%7BL#?K82-c>hNI->\A(l's#P4*bT-S*D%437upors1W`-,cur$-R?Fs4akq[6ZiTsd5XXSigQIbB1"%D?gu0L\N1T`%Qk0m#mkp;[G0]a?BPP5!i3B38)Q#T?\9)YfpbJV#n("REt3n''$NF'`bsec88kAdu_%L;AZ9!h`7]1c_KXA22.l#%Ot,913^G`QJrg=Zp?WKT>[68^$FrtEK>IiRs'FQloC\/@7-c,78(q%4EZm=]b0eID(/^:-XPf.!#CrPj(7HBcNF_IRj6Yf.'A9YY%]GBI[\$$m$ar./e\P"a;bk:c[#*M@B(%Ol@:[jU)Go(fE<q84n5YatOLL3uXTiVkCW%Sq9rmDHOj*F%iT=oPiE)F/V5-LjHW#IbL%`X%^n,?J88%bLlt?5UeO@<!;dZ(n!ph4KWX7s.'##H]A6.VE7?`mZ@N6<q/t/j7,G@XDkkP.[p1f\TfiQ'(N24YbbbVY(=pb*B`J%0KtA6pV4%.0(aT)]KRe,!@ulmk%S2R#tr[,9`D]U=f>mM`>q9TH/)P&JM]<59-fd5%#SP)-,0"35F&n8cj@fG?:5/RUbBf7Dj*2#%/_R=%H1C6LguUpuQ$e\BVGQX;Lgo#+\P1b$<<4N'(*al#B)2Blnm$-!Eo0:]8%W2"pLVuKU(OuLpr4\L,.H$BM:_],2c&E2"DB]`%e]UoPq9<<E>@9J>rI()OJ`Wg`q_Ht/bJEc<a`InA[qV5tVFo1>bKst%;"@q_'I]hU4M+)?$,1h";A:FFcD?;a8\lbBD+HS1Uajm#%mTd?@9U`.A01)T$g,6c2h$*=BMR:fR/j7EP.O#uDkL.8lUgRVS;Ltr^;OGG3EOmfpgYq)K,U:\3Hah&\9T!ZWJN[qbR1uqi)a*Qk%bbR`),0cs>R7UJ(G'sPsB_:+Xk0..)=Z,L\N&mF%pGM7PN&p+RIV.Df;-.YUhV"uGN&p"hJ".`>1Wh4;*HZd,ZYmUXPPO;N"!fGH%39'hY!!sTe=F&fDX;;l*$Y3>56Kk^=Ah4'UfVkQGr\d$Y7U<lir)nQ'$QJ<Qi<#hJS%gSILQUN1="2P!^)*41;1bQ85HdM]+)eUg%#oe"P5l>>HKT/%Pf\Zm(.u9ld"\:otNBWo/9%@AN)>+=Ur9AP\@GW(c3e%qg@AAkGQbNrjYY7F&pSS$)2X7a<b^/J0(ZhWf]8qA_%(^"CP"fX0<k!jbNUU\!?[p[_IHP:Q]lP:1"?XL5slP>GjD8iShE^d!mcWi6oo/A/[>gC[[Fs^MLgK-ldm(R)fJl*?]ZB&.t@+<0C%5>Zt0U=Ji[UFm7rTS+&TN\&DgB&/&9\*\+b/]]c3jF,:a"euQKV.I!Yputi@p6+ArTs/"W/JrWO_>\-U7^^,1LFF'MI5tgF7[8bF%B&*R4BK>32`8,6@eh%_]A7>Hq"bVMno]6T^0WI;*LJ#Ci"&t<>0;f[KpD3KP7U8,RkO2;&ir&Af.2XVb?t'$k"bVdqp;a8'oiWIu%W8?UEQZJYfO51UlL"B/L2-YeDIopYYi(gGGUc*=`:>kN2I]D-8P/o<fmf.4,^+k`ej6ht#FM[2IKhb"/*1GaK3/A^bR58J\LcbP<%jS<j6(3bnNjon%rc0!gL`SCSj1bMg^3+"bDIE?h`!T-=bOM<AF^&-m&eZ_QnQTpl]Q2/h)2a`npFto4m4IsY>IE#;T/$*?GFIp5*%l.33`e1fVG28!+0r8N9>:">\d12DJZGS@HfiJ</si+%I$ZZFaqfP]Gp1+hXg5WAs0^QLUQ^[F`GX'>PS,kLgkG[+;Sl`\,RRX6N:%"]`@Za8M7=Jh#\aC'RQ%QK\7u).M]DH&nhZ4L;o09-tJbZ"Jo_&GoUdBN`%FU;ba<ibk[s\r_ZHJEHfYQ/VbD[3WbY?lFau-/JEB%okPH4q[EiKB5r:'DQYn2W;E$G.YpsMIPL.X<Ig@Q5=gTE<'_=cB!)Oj`&gW-[bjN<DI40A..ua@])>gE64=:>?/=Bh@UM1?E)2B/%dhpau'T'`e)04eQI`D!Eb#"pLQ@j16e)$]J%uG3OG^WHMO@0&:U3^p:6,Sp;"UC1E10&X84]n'k+@EG+,;:bB=LEDf6SP_#IT+>&%]riK@/g:]g.T[$W#KZ6.M_0+@e:E;5gQXf;]eQ/D7%(:RdZ_g-NM9'24O/N*cX"Hb=VVcEKt,(C2>Z_RFY-04n8$I^=FP7f`BTj@%;F7'34%8T:#I:c9E&?YBS/"A,Y+2^7equPEs3BH@c9@(9[-kZLZ'-"8*(-u'l[qW<]jAT#%f6]</E3@%]>':agW[iN^a%*\Jr)O"%ctndr1S3Pq)GWEi3oar3Q!FBj7+6jK$i+;;B`*D&9:Jin0l3Zks%P!gUGl:J;DT!TQp!qq>:ucnS8tob8X8,&1:Hp]]nSL9?KAhS%""o1@ZiF,?G1Qhs>(FWS_!)jka3^=`q6Ae/9;%cpXiLjM4Ug/H<04f.SC;d;>'TEfGMVJ^_Z,aG178ahN^]*/l!,oid1oOr%D!(O%mU`:9S^2bhN9gBhC>m.>f>O^NFB&@e,1og3/?"/P83PJ:"?f`r:H@0,)/,Z>'tKscBlVu"qe4J:#DC=_'Wd2[o\s6G<<1BQ;Gr5T%@s)*C>5>WHTs-#.qd0bsiLOl`qoHm_]O$1`a)N)L%/f.2kVUPLi5hb%.+8]>3B0/+Em/W'o,=\U>'P&5bu$IPB=uXE,t8<aXkkFM%L:lVTAWi:&!I!8?iH$0[($J!"T7].jU%9@%C"i=>\q)7hKfD.,`6dj%,iDV*:h].?=Ek:#9'\-Rs)@o?Ne=-+%)70!UEIUH3ahH9%I*4`Zggu(/jC%h0aH"7g82s"ki8FFnS4(2I(fs+;k.?.B6F8Cm_o[02o&<]RflSrGLKa3?jZGMR!V(W>Qo^2$C1rW8(-C.a*lE]7%IFlH>R3!P^VXlK**c7cF4T=X`9fu[HDVmpAq"!\]G<2fZ*_.T][j+q4`VqPf<hJ,f&bS4@F3i;i*%pcLV=-oq_1$Rj?[:#a,8qa\%0']4(^g*/7+1g,pWd3.@H+uOLA7$I[S<a_UKaIoma!ra+-OH.>jZo8^NPW''j"ZY2g0[;H-ik:]-uM#5qK(N"BJ93e*gbjHL[X"k%]1^C\k<UM:1.P?0B`QVV-qUCs*+*b*R0^)/rleC<gLJ(k>[=Qm=oSZRP2\4#RY>7!r,AeHV9lp4hTW#a;rudt9F[(.e$it=foo)V%mH\kuIDSP=PMbTp8puH2>'j9!?8!nQfK)N=:8JodXQ)(6l0DMK?^R"qSt7>nKabV3?RKKDGr4i$oYg1Y*5#u]CGr)9?WGnf'jjHF%2<SUgSUWr]mIY04cI0R.SlXh%R9"8,8%(85`.NU3S%Df[kMhU2jADt:kdbnJ;NoM7nhen+425k(k>-gOQ@^?/`(Y,hE=\"W8`[NC%/g`Ai-VjoS2O[;%W)S*Hp$>?EQITpDq/C_?$q.c@3_d<9l3AgmMQchf0A4Xgj->Grp>,[FTej._*de=].r@d>Kq#iQZO1$cE;L#K%iKI[pWG_9K-t@M*1TC*Qnh]G-#oNVGc?h^Ro=`7'Rc[+aI3I@Zc,+HjD_Ts?G&Y`PUW_E=A+hEVm-q\p'j6"Dkgru"nZ8.kVM5OJ%Pj^tbNh<meNn_&,oCV^.Xdu<F\-VPQ^sn1<*t@\BA[ta'K]2t4P6?@*)GqT26kPSgB;(V78KRWflaqls=;BX_'EI@g#(1`G0dA,n%ij^!`+%iDsTCXAtfa/IDA6AKoRUYaJj#c4p(L3i9bFT_G7.+T7/9HL-WFs?IhFgX*NP;DLKCO)>>Vu'IMbg)2<@OeaZfD:UDeC,;%pGGtNdes"Q\Ymu7i%?p[1l]eHT1N56?M+UX5Og17.deD>Ph)6tfQpIF]W=!5oP8bH7BZ9(fgtm%YjS!?ZnlQkkV+l,aAgU&<Mgt#%XYfnbNEuT^D/u5`b0q_l,U;gtlB!:L.*7RL9ZV%GM8U?roW4-bF)F?EIRfQ;cE2oVL87I2c#e*cfHBQpN\'EYS4nC/8H5!]Nt`'d%=A[*:,1b;NJtbSt&l$)^et0&R"<Gij82tF2<QeJ?!\.i[kN@d`q?u8!^!V@;*rWfbFNN`2lPUf:p3UR*jYKk!N-[[Lnm*0&)3lHh%E^J04Y3N+6'qr37#'Ui_eEBq3.J!?)4QT3eG*c223t20D0<Wge4:JW,[J.%8O&kUQTQr>:la\pTQ4h@)Wd_A)/7jA9J9s/Hp42E8%kDs&*Xj2q9Ve)mDhmEmCFafi6BD&CBo@jCL$Fh@PC5"]]C^#oY0k/'W:#2B/>V"HZKD]I+fV)ldB,]($GsBKe^GNZE=GQ_sTAl"N%$FSXTkKi'c/G+>dJ6_f%h<qBc=6r+?W8!B>/F%<$]g1Uus-<0cr'R'f3d!gd.aAF"WR"7aYWS5Gpg8=Ns.Xt)qIK%ik$F2YK4BOq%G.TkUS[it384rc#?WEkK*YulLP[AkBocAAN0pZtFj6EUC^Q;#KcF#&b/KQ"q5JA=3&W2/1c[m.kLAqnBq=fVa0I2N,i+P[K_2u%I%djN7VeFE]'R05".S2VDj2s$d=*eiD.B3rJ"q0]S,P4"fPa=8>#OIQt(nV'ITbh=?MJYmLF`iF=RW'q>i_f:c,HX6QMeGC\b^P-Rq%=Z7&nET0B,n/`COm'<%IcKUX:a3[9IF<IF*R]kKW?_Cf;-H`hNgrc1K>bZOjFpBC`h6!9<CX9E%m=h5R^g+Fuc.0u%/![*Ng?\)a%[uA,t*m5e!c*aVFW,d!BnEHt1/,PP-2^Y7Ur*AHO-*AVR7@#Tnn"-jmYNL)t7>mS0$[a1O_c;(>A%$`Ql68eoGM,Bail).6@AGT"%63]9bFI)_*G>-1os1.![9!Hm0-7:K%D:T3;CQ@%$oj*_YWLGn;dS2Z'mMX%=?6`66Z)-gF,NN&Hom+M,L\<%kj2+HhRqP#O<acSh%kBk\<N[jZj\f]+k55](lYJ6oi"C>_n+0^d3coIdkJ9)D,L7<:%q!@Ml=61+UjPZf_7#[Q1Ut$(gS8/DBS7W:14_dPDX`jF3_u9K[%:;s%"bu^KS*p9`S=FL))fJ]@<@1!OC>f7<KR]f[]dcNS+52Diic@&%M"cA\aoL#c%.G0cjoINe5j>]&dik*mI5Re&!FhfMq*p6<G%Fgn;irqQ4*htP^5g"qE:,K)rA%l/B<nU,7cJ)K,7QJeoQ1;&O:\\Qa)0J:J^==*653ZkVUN8EtWqM.AqUX_&(r_.t5g,$d$HW$VY%g,o.9Ts*+%-YCCc8ljhMO'%'H%tCl2*ZmIm?m,VZi4CdlK3W6qa'C/g?Y?oCP3N1MMdLgp9a#sqZEnkd"/.8D9XQXj>iQNrY4;%*%=D3f$p+]GXn0O)A[?hap2I&@U&]k5r$ql@lKVcR]3Unde[l[Ad0&t?$'-Ft<j\C65ls7?s/Y@&fAFE^N*_tlf*KHU5-sVbs[_bVW%o4JDLWr%]%q\;1s!hkZGS1dB/kSZ;Ri/:aOHD>4t9_%L71XI.'*TH(BF0%fPT"`P!XaZltd\a#JD*huEJ&Y,*?st6DPFQh<3Yc9k%MLQF@FkOP45'L"I(eAsuT\'NjB`,37F2Qj'^42q=B?b>HSGQCuX$)_jJ(8R)WgUJB*KNYN>:r\G17&C0>0H.laF5_mW`(9IHe7ci%>0ClD=%:%u+p+,!8LVL\QZpMXHOM)S1ZbkeP=B?`e;<p/kW-Ic(nS^@a$QOJS9a*N?FV+.h:TAu'*ao9aR)2Gb?^kt$Cm"H^f<2M%FOL]7q8kLJD/0NW=*?P]WEt=-*`4nOJ>[h;IK@Z"!ql#PVb5M21LcQ7W"m>Qku54$GE#GVO>"?b4PUJG1_Gj!3^u*KnGZ9^gn^+Y%'p-kVEhUs_I[]PM9J8c2T@\A$)[Ho9bm7)7rPn"8$`?G.31l=58@CAlAPB\Pi3f8!hj@j7$dM'Y9=mR5j[<7B'sb@KdE0qfOnu_K%eUtM;84iQO")a`VEP9e6ka8'JA8chn);bgLIip7C4bhF9S\[T;P7+XTmuTXVj3spZdmp[)/7-I#V0\:B/;TK8>AR6e;[a/9SL`>)%Oa7Ip\*t8k]1U^/WfO:oqtY9O][+Vak4@pp04*mt&+TQm_&X?Lc`iVL_0i+@BddUA1:EbGY;$UV9JM\.>QLH*-4A1c$Sh7X<[>!)%(tf(inM4a^X<J%@:!'\U,l=VD.FeZIfPRWc/,`TD=7mjTEcsdTm$Fch62m-^q"@F6l89P$hJ4^=[ZZ)2p-1aCb!)>5\ukTtZ6/k]%63Hs!bkZj;HigS#Q#te8Eb"_"LDT$7p&jAF[_-GAM_Mu\nj4mmP8?$>8[L+[iuL3<0Mp#@C8I?U8OYC%;$)dpH$N+hFRl>F2iat%%5d!^:aSiVeHg4<DH.n7=E0V(I2gk?NpFFN<b:>gJqT-&bQgWm]AEJ&s(fFO,H4iD;dnM80.CXBCAgAOlOGmHAbbQk:qPr0.eL*>,%RAj0U3\h?G6J\t715Q8e>mk)L-AL$.+@ue:O>3P;":>&EMBTBS/6&;\^3E!"p9MgbI*B=3E^r04nN.rZ%K!bqLGPt!0nhRhDfAn`%Cj]&sMid@a8@['35=gD.\5HU6ZjQC$\uGpPaQ%4adrTQoJ8A7iI@#p+Efhkf,jE$ofq;hX%Q%2%eSqPE*BDAb3Hm>bHs9-k^rIrV%8k+Dc,)]\RGrJe-,C38P4G,EYB_7K1GkDY8Xs1:UR8bVbL#t@'ao*pVG/<UY(#X?0(MPk`'O.3J?81:,2A>Uc\@#8TT77W^Q#PcY%gY(=9PEIlUD:T\IgA3Dp9C[t!7phQ0HpOVZCP8n+W)<D"6d9-(Y"q^:?sK^N6cOh+c+A$01QO'<Jt*iK*5%mMqmWe&bp^XF[o#<]%OQ`Q;UeF-m8a!"nJE^mRh'@_VX/5c$HhuYX_e9/*0dYZf_oKrW7(a@FWa*!gr,V1aT>iUt'X9keC`fqB4H-,(I@l<9hj^8PZbmKi%)RHV;lrYj.I>PYC&cVdSM:W#(fA0!M"IcH>=!QR44P$["\6:b2NShRTW9B&/?JOOb0mIj8)ku(^Ih`SL=/m*_;%^l`qLB9__!XK&%V!]7?WSL@O81S,7c)Ia>SPrm9;p&Jr9Z7B8UA77'pO4.Dr/%d$$]Vg0j:u#2!Yu!p'aAX__nm*<d@^Rpm(K1C<'om;P9\^t+FVr"%E`hP)FMe"gb6GD@qrRKO6icJRLit@qQ&#Dc=VVTl5#agf`D?$P`@:P?N\>`*V+?)M0fSH7Ug`;$<g&V(-(N?rs%6%#D7_=;K3MWW%9&JY?qQ=m*od\iffSgo'K0D^'*Ch'fq<%jK\M$I!odTcGXk/BQgA<DkQud]87I0?jod,MEb'bfT!E"ebA>D-X*:<Xr7q'RmMU7qV%4BsKL(N$n]1<HHD$!GZS=.8\`$e^_->J7K=B#T%BET,FS]^sgR]''rgUh7fECA7:.qH>,T:Qh7Eb8QC/ps]6qDEa=<&JMM%#(q+"%G@/XTn"/`O)F[.",Iik'H[]BOm']o6-`DSoaH8T^$j,AOX)nY^e,_a36Zio9/mdiF+iI5&l:Q41i`HmT5JngkA2"#k(b4?fGuu1B%/7+Xe@nA2%^</SL7j%:=ToNU1@[?:BfY\h+'hIE$]f`#O.DD-%^JBheI;*o^GnP/%Z,H#4,9Yhs]KW\He!,ALlArTV55dJH_/:=f%gd_BuLW[/]1f;>3]mdrpI=Bh]GH+jB;/ugcCFrhR.4g7Z7q<(N*^8T15;U>1Q\]`ql[U9-<XE+VPM&o5c:QOmm@$S]Y:&r-'*$*I%&l1O?"F^7fIIoPC\MfUF9c=;_[5LPYRAYTE"'hB%*9:LAIK6Y,KkahrFP4a!'S[A#D!_+dn2p$N:X-s%9XhbS[/1n.T'a7m-f49(%6Zp$@mdersi8YNQ$/`RCmkuQkc.W&l`$bJ*A+qk7Gq%>2I%bh*H=D"G%g.;\YBB0'[l@J9q_",0_^[AKWg,7-Ai$Kiglj\8"u'5U%"=rs%3mTKE^e<8LoU\NQkKS_Cgf05?$=r,5Iu2o>o.M.5I"CG5)?c`eB6omJg70+c$WM[F%/[[\oH^nVRKT7sMDq@;MgF],^\4qo%qYl5ciJ3Ar_Whdk"bdtXh"T0<#&`O^i%F`\V$m7ga.d,uNM!Ir8c)n,SfmXgqi]Ot+\K=_1HJT9V4%'HZD=&^<=+kSW*5'b=5rM'%Prn>qDk"[airUdmPHg_ZklRs24G_a)!ENUbkH,YGGEE-2n*j@!oo:XI!;WbW:LqKs7\KXsT4EE(.TY4Gre,>_&%cGT(Oq=Pf:CNP%Xi6q-g`B*#kW\Map;[ri)9MS&L(PiiWY>cNG5nWFE[#sq8ZL#3Y=+Xk]mCUB.ok4P.YIL0jqheF-lR`h%,2[4ED&0lUc$lM.kJe,%o(e"67BCDr2Gbn/a\J5l-\1F2=?;6cr(HBbq=3]cqsYFmAMP>&,^g$_bcp"S7Hi;::,^3P1Rc-WYJNIVO5U)`9/pQ;#01boQlOTT%J(a_EmDbFQgaD#AN+PK>!&Uu*8WcutdO=98ar5tVlp(6tDcLpFK*3V'"RT]G0<]`jlkYE(U#PfH9nQ%d:4fTO*aiVV/(X46iNHTj%nGoms+K;5;12Faqh45r;?`]=f8krW;90]fTZ.H=foKi?q[S1WtQZ&iSJGD>kDdKtqi0a61c[f[+]Sqt<O31\2_(BHURf0q+9"p\2%)Hi]`Sm:>gR9X%-S$r1MD`=qgbQq88WE=Rab:BmH`^A"`.a:_qbj^(.a5r/Q.S,#(WVMQ54eVQ7p[^38]Aqfj*aU9_7[lZK@AX5C%!bFuXp_S2[6;gJRV#81Ph`sY2IdHog].%Q8Y!dr].VRa!d2;H///LL\9!0:$Um"mWHi?e/o8@Fb\3JVr-Gf$fiCQAp&s"Bm+9-CD%<e?_[QqWt*P/;%[TK\4XbM775BjL<#A`M2MF;b\ar7JrjoKrqHT%IPOAJ-Hnddtm*9Ruad'O)kFnjIf@N(L,6H&2-P7=(\C.D>bm%IKt<"[$D'o8U9CX`qq]lHfS42eu2F30Q/eRh2jRQb8Tm\+F3+/R^,C%Y<C\$b;4&N[f_=kR:G)%:;%C"H0:1Hm#4:$S%K>Bl+b=Z%Te<T"_;H)B]@F]soPLb",J,$JU")nCSm:kVEE5/$DoaeS'PFfiEmG]D=m`FG3TlC]/2Pe@q<![rXEIo;2.>>IXnJ$^8Yk^SVm>#4%pgP,BG5.Ano0u'L7'];'jiKH"'IPgH\`\rm5]oO9[oEh&Rc5SNM_UHMF!scIq'iVJ0Ng,*gk;RH?4;D"e=ZE13GWqRL)*+m<V06]%.iU(A4F(%S\u?.`?*EpldGa(%`J0P*ZY6,"@GA:oSRZpS?Q%&=9RCI6]%H4iK-pZYD=".snU=&dmV(JMJXg''^D"U;D#:*pJ`Epa%CiK$!<sXATS1J,pAmPqVD]GjCHCY-28Ib#cju)>8Ah^GfRFd.%bi0oROkjhu6+a5Hgp=9XGqfQi64B4KK#l:TqcY!T+L:7<c1.j0%#?J4`Wga9+g8qg'qTh"Lg5Pa3[D)$6[!n?Q[&8V+pjXJG^6L'!.=/<_GtAI*c[QleBs`)he4j7IqQTbpG[;$VT)7=BL6m#;W_DYG%7ahm\fAn+0bTn:sAs+qO0#eqUr=ZNOKJ>WbieR]lhS/M]G9lZ$jkf3us$F7?RU2(c35M9oPGFu-cdKc2^cb-uNcDc\K0T@K;6dkc%ib_A=[M#8_[8qA_R,sa.)f;eD=TA$5H7)a*Tcs>K;t$64%@>Un)HJC5OHs>6-Q[%/4m^Yjb?G=5M,V9L^0R9YoD=-P/Us\.3)ss!%/W#4#Fqi'%lt1j)mMte[ZgoufFUHIO0uk)641D*u-"D5YU>@4@%S!jG]4.8JdR_O.OBO3$V/^3$ZsdZ*'QQCiKhjk;<i?Y5<PGZe%0ku]qjus/-="B3ML)=scYV]850mZ&*^IE=VcI-A;a&iCbW/g7'4KEDCXc2/`X=oqK]d;Q<HJG&\K:NfmD9pVFY-O$<NVjYdHKE7"%$mi<'B'&SZ]t!&r9NH<AMAWI"%fL[S7F9u?-d0CRN`sWkF)5F"2EGk?:mtX0k/.B/jlb6\%q4FYi,VJ?bM22QA8;,sn+KK$:d$M-%2K_(!Ao6"8ajInm.bRrCX[8hC*"A@AbUeaL*"Cbo6YC,WS#([Z/.GF>'C,`Z7#5^ERPdo"7)l7CDC%,=$@ee0#u%92ONFJA-f8+p%LOSo>GGH(=8O-Gt+%r5k]7nLpdZh/E";dU6jn7)dAKJBc>b#(IGrRtV`GY109G)G@<bbo#"OD:[#o<i+5g>tPqhacISV<Ir--'&n%m)?FTfG^@V'bOC(N#@$Kb1O5ZK+=9C'>6!!^<N;ClL<(&)%ka&rRsW@s(-4Je`L(LWJ;CSp)PK?dA)W):_DHW]e/t^[\^gLpQr/g%U,YcW^i,^joTb3CM">hSOq+oMmq7c\[2N\Y(,@S?dplnq`Oqu5S_$m*-#fa8)p_,:%Z8'MaPX&(5P"LtD<LG;MH#5b=0ZN7n(`!!%AoG.$kb>V'#I&c:,Or9;AS%hu7F*/.^-5Mt9,K!aK>M_#A#"auf3Ht%q<T158orWnV9([f-]3D:0X]9BQJf3^ZOh'W:ItXKadCX-%Uk>1J"Is"4E^]sUi2?<YGLjP=/Y(1<(>LjQ_+P2QlURidP_b&+;=K/K%?<?*6>oBkRUCF$3O"!GZ)%-8"<4j4Wj'<.(MqcrWDu?)%:Dh:;n53sX\@Nbaj!jGqj2!#[]V/P&:`mI0fWSM-^RqE4Z`daWpq``Z.O%A&m":.:l1IYH4LgCUQ_DDY1jG_H#p*>AK6*/AZ,MJB%Q9\d_Q]>n*pr,mV%7uEc_0fg;Ce.H78>-lQ%G=!_aB6G3?ua7!;<KDR2C'_,KP(oZXoe;+15+ZbRB[o,OWg*sb)Qp&M@;de:NgPF%;Ig&6T?E$"3B2@YM@=2R@gTC`8Wb0(?$(T+aXtEb()ufbUNkn`&8?3m0%s`$Pe(9o(7O6)[XSkEruenZ+M'@;6iQ6m\sorJ8Wb0%%X[SnsZu%CHDm:HW4W`Rq7^4*H(mDof6oWl&YT\)=lu(4+SUC,i!A]=P1!>F`M<XqLR_t3PFj[P:>$_HkTMtqRq.a>d_RTD(/V-$s%-kQNm/N2[Z43$(e\^`::+^q.Ta*M.dSY,7Fb9cMQ1VmhWnesB3Z\hg+F68:(D7)cdE+t^T)j1mQ_RjAj`J,X,L1!aQm+@DqaH1'L%/lR=p#Voq?,Rt]dc@.*V85`uS`dQ$\%7uEc_="/QYou]$+cTaSFP)\N0kQ<YB?#ZO7>>32eEkhLUrX*p8m&ECG@2U02C'_,KTKK-%You]$+l0+[fn^&N;0fHYc.\ksZdR,0Li5,,kWt(_F_%V'(KlH7ak9j7<S]KYc.\t$(=4]Te>uAZ6G[s3TOr&hMR=QYZdu3HF8+g;%@]!]^8Qf1@SYFT<@Vr&GWFB]i6lPOaV5magTOP%)$J7Yhg6<@h`gX;,/(PnOXHP,+TuSth1_-!`V8E),cc5Ui!Z99lo8>(Fqo<[;%c)3R2]StuM]]Z"1(@M9>*6\(EMX<g,_aD6aiga)0jZ1XG7uLEmSH%?U^eR&u4:FTphV@C/m?&Po&N&jS4)mCk>OlPM=e$-;Cri7S%F#Q"0NA(hTKruXRLUGXo<dYXnFsF2W([>2iP*qTdR)$"n2'UK$f'+c%WhPp0[SCaDUZ??%>NZ:%k4Vo@=WOIJff@uZeg7k0S^FCu%P!?3Sh,*nkWDO]+?WriId@4]%Wl)"$;6tSD^HY6(21/%8ZW]/b7o$b^UdfM)N-tf<DVTgC([@)]p('(8f-,E'[ee8cC9e'>#fE*3%PLTCc]hsbKV%dNa7\a.lCqA=+Jk&?&`/)GOec,fO)`SP9qJ"1=N(,\eOcrZ:Z*&:tSo*dN-!"2iZT=jY/\5F>0rmmKA2C5S9W?3p%+RiT5R+3(6C2T*sB(bN+X(0H4I4Vc2>c2$cC7P%<=qg:5ePRc._Tl:h0Q'&jLO!DJG%H@:IU,a=,Ne5A>-NMR(Bou47BAQ#*OYdD%82]Ol[9,:'EN6DLf)>2KA)FF+f7!6+`i?kr^E-Z-&WJY-X+[lP?r)OqhJSVc_5q>4=EQL#4cN8%<ie@["8/ka,Zam74+TQNVKPIm%0Qf^/>16r+L8c-YC$NX*J!dg`";Vm3>f,!mmHHsBZS6MWHQ)K/>mOBpp9^dEhh<b,_[bb_K\XJp%9g$`SM53(]4*@D[MJO[<&*b(%F(?hq?s7>[:MUfd4N#YXp9a2ae_N"JL$jVn)sh;./@lFjDQ7p.Pq[?54^CSrVTrdLVtQ9/g!fSXI)FGgp,)Gkb!/Rjc4eMBVXB7I%RF[td\9oZN>#h'<>Sj3L4jBg.Tr@$W`;Z;ogr7,/S5gFK/N)7s/aV^+\Z+BqHZHO-@k@=`Wj3,LGZ`",.X$G-c)QO@1Zh\OC,<5p%0pA!KU@,sk<]5FDl@O[^Vfg5*]e2ih:CHK_Hd/D.T#Rqpe!F9.D%^VWG+lG\Tm&e(G.5!rd2$`p;`C%89j<SN`Su5=7=#'4U+OC7%mYKXLA%Cq1>90b%%UO(^-SBR9>=;-K>N-hH\b"!>BT!ipes<hu\-"P6(<KJNNk!_]fG&Buh\$_=d2##X[1#,3UbK!s<iJ5,2J8N[%n\6r<.E8[D41W#PE<$_Ss*Na7a0`gUr0M?'&E1BGYITl5lc[[kM5;fp:(uLr(GjGS3G5I*?Vt]Hc)u/)>D<\qWc%YRENs$-,*su<%`5U/=`_+p(EhcIt9#@F`9B#7#>U_ap[TK3jdIZ_k]%:Ue>VntIrsW&:]>GMT(/n3>ftUFLh&`,*;\GlleEM.WNJs$`e[K_-fc15d%L0Zq2,P)r9g:!UD?I.*5_fMU3?`U7sjE/o@:XQUNEiZh'[$]j4KY'cR&k"<WgQEZg"[ND)PCH/cL4UO]_k\mkEk^G'Y1Ofa_4<>^%ND2N6@6]Pug8.no(ocY_>.YEJedU,]U;UZ'<Gs5"IO%@[[kZMK?p>";0#ajRMAi-+jB19DlGahMRKRV&h253f<WS8@G:-E37]N6Z%I2T)?YF\m6)ll/6k<8cDG!6Vi'4=%F\,'R=+1sp2(L)dFHXZoM>I!Jn)HL#YWG]aKlSMW_7]J=OR<u#]3,M*T%^@*m&/"/9eKe4"%@6_P^kut/LPT.Jdm7OH@oEV-+Fco"i%gUe`gA)X(;j0QXOD5*#52$;Fed?2`3FH-.)mIm]*S#aZYZl=[^aGKOC\;en8Jn[L&>"mU%6`bF242qK+CR_BbpG6#2F!UOf)U*<(]Oo\\3?=RQ<2m9p!Gd#!6C.f*H60VT!UD(-@TNW^n*e^aTTQi+Ybkf:A!OCU"4e0hk*!K;%!UKM%6[8p<andS'],\%%K=q;bP(199_UZNcD]>oEn$pXaO2?#o?qiZsXmrOuXJ;&s3XSt2^O<"1WCPV9rT1ouWu`niGmCFc\,(-G%$=2k=^m[q/N%/p,@'0+-l!hGs_U[(4l<:u,<LrMl^m`-j'Hu^Q^m`-j+CVi#Y`<f\l<:ul^6J7_2ZqWIi9k"S,YYa,la-t#)_]+"%"KZ004A!?"6.G.BX2>-3:ZosF^HF<eAYG5_N\ps@1Z'o>@!uY4^KoHrIq?sm;Nmfg[^grq.I<P-UWH74eg-t$Fjnlk[FScdMZN,t%A(AhS22/(7cQ[)=HKtIo@([QQQ;4K9on/g_[3]uX*'!U`q]Ifjj6Np%LiN$*j0^PPpYAd=Buqdt=Edt)MFnQl?enjjlhToabuced%WpaWo<=_=ZF4VK=-o0[8[X2goS4FopB19F7*/#NhLqCH)p-N\3VL,7Wbe>rP`;KKfG+kBs9^TOUDC-s9n%kf[J('a(_5f,UQZ!DI%o9VHm[pCeTk3M]c/_D>Vp\qiWfZs=KU*ngJi-PlaW*=Zf;88p/^6c?f6`m9Gj]mY:?1#<l0n&`.jL+`8FKQ=83?$`RA[QF8:%"=K%kB'2f"?)rW1R8MC6ZFG3<b_f#Jk`6lYdE0o=IFWcl=7F,//&turrf=.iTAZ0*Hf0d2CA7Lg@k<T1Hcsk)!_jtePS"rTk$(2'@a/T%g&dP@[b07WR(M6b82B'Wc6PWj#g)th&d[abH(K7#I[mI]f_O7dq#1+qM$j3L,88[b:YAnJ?\9MQK-j$<d9@+)kp(CjUps)1^6UJR%asJr6!Fi+s-aq$k#r/\s<pqb04%$*Voq2/<=%A-Tomqh9I8HIVR+,=W"`%_.Rsn;R]9D[t-glO7*.n3iSB?ZXocH/@DnfK0M;0.f%Lbip_586'fn#1[3P(d7Q`VYr:UTE7F#M&Wg*je0`S,)pintPjDUZ\GfMLN@DN+k)0OgFpC7TP";`FY;iU#a>Qb4GIgK/N$$l2b-2%%"Q^>T>Fm`0++fLSK,b)nA5Q79TbmBQVEe`P0LLod].dCAlIh6GMb6p0k9Ni1qsugDa`FBcu"37?@?;U#[$9A=1rACmSt="qM2Rf%\R$@[]K8D0oE?SJkGLj?0"i6$FX3RS;7N'obJTH,dLSYXEU-5r]Y/mmi$Kt@rm"hE/"FX"fOKg]kJ,s`B:j>$qV,aCe=]Q+TdGfS%mm,9Q>H>U]0sNEXAt3i;TsS$U]c*E2.)kL"2$XM[(1YA.h)FKSr<M<$Dr3oq"4&JKmp04J'38p##%\[1W%1L,I.cm,<V;)/b;)#M%1.#chRt^:Ghp5IB3CS<ZF3g(Mh@4(BP4`\YUh_2`'U/0+9T[k35V]RqWV;jpCEr,eA:5CYl.RP5YloIo4"9/1Z8g;pP0(<oB#=8;%kh9]H`1-M(bo61Kg9iY=8ajm%K+k^o7WXqc.d:s%G0[TT0?h@?)qFo&](kuZE<^SRWRQHh/_kp/ZINGAFDW9r*c#k9=UQ*WhFYt-%oT?K#]T\f9\<E-LD="'6@jJg]3p)tiia!s1be(5%m%<Fm<i,oa!T,*[*_lfXg4(&M+-jl]ru[f=8j[9#n@lL/1q*]2_1?A!EsQPB%\o7_+H0S\;g15?rCAKktHF59jd_sk7?euiLlr?kMYC:r/rf#t*a/C)<nj!sV@uX1P5>ZZlD/PEb9;b;KQ1_?[!Qp7O'tH8,.$d%$%T1A(&FmC*_oaWOZ+n*@RV?ZCmF$79BqKmS`&qrC>9>db&ZX0[BHBYfGj#\NfFo?=R<><L6fAeGb8qX#XGNGCQ4!1lJgVk)u/9c8Q%C9KhJG64[hHhe&]+/,`B0gRKhIY,.:mg5TN=3$L`]7]jCX1pmV#tkEaWXMP00K035JNHH*?\W2'?H4H\6B-K3ZiC/Xg>QJg2Zj+S%.@7,(1ad:_o@prbE(`JW_N8RD90?9k=(qhuq""dfU)W?$F&N%\o0,u7#H'n4`T,J[P#2+-#oreAZ1llZH/bZWHLYHj@!(HLXLarq%EBa-j7q#3fY>dE@h"T7jgbS*9o"&P:'E42m;#Y(9<'S(\4i!E\:&1.Gqrpa<bcA)Qof)CC^?^oMSfs3F'CUl'&=6B_<+gsp!Ib_R%hR@Ok^<=6uFmL"Q`\$"-?3r_Aa0+G^Ij2q9Kj/c2,'n9PYB;/)-=KEV<!b=fD:r@=\Y0[PY*C+srraT@f.'(@>QDtmGH2?%1'AuK%L!g%+%hm+jfGhSL[[)lKO3ccIqReIAk*3jiQoA)]<aUo!G?bG0j8ttobK^;_aot%9R2E$uf.sOeUDmUMDN>Z.o;2U_1-P\ms4U(l%]U"L^AEt&#D(#@P!iO-heHj1u0&H5b\PP,qkZV[K-<?U`p0_BsrjMRbi*2B>FR;muHp60Ela+SdlTtBaq(QFAf"oaQ#2%l#a't`5%i6<$R!59%8iVP`VP2:OJ2K6,_#QNNJ^g2TIhO[k9$[5>F/L%grf@A:7&f]V2Z+sGAcX>:m)a$Y9V2>/m?ef2H=h.?]JBj30be)ku%$mLB:mDFB.9!F?S-J=];I9Zd31?'Y\&ft/.lKE]2*GohHWPP<d^di\W))='q?@N\,@7&[,f=X>MEF%!YP+j*gJXG<_P8(njO7nsg%Ilj/4O\^#!)3Z/+6YJ6;ho]F_Za7@7nr#/af#M>)\\D@B^Vl7?MtOW<AWb?4`T*,+nnNY2l<,^iL54PgGP^9=Z$&-2=q$C.5Bn3`%/T6-QJRh!tIc6:kgH>I(J)KZ@[%fR>qG@4h(V*/nofdI>cG<8)*3;75pDn4>CO,U_jh\'#]BgKJ"[i4NT??@c[?op3n:+i(Hi:Id%?ctNX]gK2Kp[&<oe\^&J7JJO#pBP6uQ?UR/Ru2W-I$JouY<Ga3RJjV6dZj?BO%/jMGP0ATL\YI]C#WU`V=Nesosf$L5!H/UDB==p%`;?mX&U4JCrU-^mr]8cr\G:iL_*8"U`)_&uaudj^QL>1\HtSEdAQ#nu;:$AB0I^sEKho%([`6_5U-nA*7r-uPV*"K>jH[5;PjlXq%B;0"nhYqioiV'p-2:Srqgo:H1`jt8)P:("X8eW;AYJSgsm!1!tY"]tT;sk,SItoY(Z^3M]`fUK_J_&n*+8o[>p1n/u?:d,,,HJ!d%';Q3L'kR*ImL5R1M\Wdfeebbk9\LAm7H1FhHc>]47K4Z:B@tFV@6lSk[3DQ<_#Hb:6#.KNme,:d*TPN#UX181U:Y:bB]NE;B^OV>%asH0)!2)@*a<Mt$j3ZMTcr?p"`jg,(hm\D7/)*)#RMNWVTh2F^m+R**&[4An<`A[AD+8ZF_kBrGl.[8`Z9Ed$H!T5Vn^*'^E&%X=%42i)tp.@9-@qg*A-HAGS(D^i8S:>mg2lr:9*;a26j6#BAPiH.5m9(b&GLSX4*NPu0rj=Ou?Cj>3Zc`7b_j^9"[Y80&:F>F$4u2$"%%B]3JBSE#G>tl9IjpI8,(?aUhDN:+U/'f^io+'dHj9Rl!g)]ok@XgPGKge1<[i0]YH*ai`>.kjm/M?r>ldMT'&N=`>=i\@57:_'G%FhiH\p+K&)G;sG,I:0Vk6W0tl2OoBGnfn'^BR<T%pn<N.!t"(P#f%#O7uV_%'d]tr0@t'cJ/NE7k,ta\lP8SACu+3lT+8?)nOaiR%IB%4'c(.)UP9(d65<7s)rVk)+kM,0n^:0;q1JopNdAh`n^C/BI/?U=]pNuLF#F3hJmI5F9U^>@2rp,3,:p>*=GEMb\i-_]"hGisZ%NhQY,m,[j4UD90NO,KTlZg40ROUGe1jN>;SolfreN3\!ijZ0URbLHP@+J?7?)D)rn>(bU4\umYl4Dr*V/I.X?c+osTQhkWDkSPfE%_:.34]<bBQSXc5.ku&'t?ZRa$TBg/r]LcIgIEh`dH@@:2bjF7fT);qZAP5980CS9=K%2gEQT'qjNb`9Gf+6U/&usE^ep9jdlu?NU%A+XJj8$[DbEc(\4#3=CH-@NNeJ\/"N(R:o=`GKYX$H4u#+PI@"1HtkXV6L4]:S:'>TPq0Q%k&.P4Ft0D!*L75o*"+lbL$hK'KbQe%Q.-?.@`KJ5%qsQLVc@A[mm(oGc4iFul8uc:!F<2jMk%^tKO!C/30&XY:8T58pCf<53l&cNMWl#Fl*j)k-e9Pl=*f7!TbrQH97i34%mD!mn>j4g*!2_^+47/N1>K:o#(cRi$%=R,s\:(@GEPJ?'M*]5ENK7"dX?pR`i+**T0KC"6U*cp+<'%TLStlnM0l'!q'G&2/3c]QM%O^2BF8?9DqG2<N?75I>e.M$[L_f"c1nFn</.">Aojrumje`L8#J]Vjp(!IW?"4)lN$E`=\d(DC0]@TJspj;pfI_X_l^[c=Rddlbo%@;:%Q9hr%[kX13WXL/$LE!Xm6I_C^4RjiNpG.#2%6a1=868;e5Ro_'M"Y7Yfg"W!0HDu9hEP`Mb:-6:>FD=c[[-I!IIpKle3hgFL%^t2PF],$XuL&:Q!_2MN`n7NU$Dd<[KdBLbs#75#oHi-&cHJ_9."reMgf_++BT!Ig/@u^*Nk1gQ*7sB0'@\UI+EB_2ZRuLd+9f))t%?!d8*&*o#GO[HnGm\a\EGhri"E2\n-gIto.hVN5+Mf6?W/\NI4a$-Sug=mP[`HZGf2gTE):Cd=bNaFr^hD!"]5SWkBefO%jdm;)`%qK/_rpTIeBGBY,l&k99aMIPaZ^,UW?!(*mOKUDl"A%YN@2Y[rapO?*2+^G!/R5sLse.5A20$=3A4td/)bG0[WmZ.%XI23?nj$*c3%`,-"((QsZcR?YGH[;A!DqUN<A<'"RA7KY=nBd"p.eN@7hWG`/9?*10]D(9SD-GuFl#u38MrO)t]_'N)#VdJVoa$^UtZ.ee>h8HSP%S$[Tse'<#^K%9j+IFa0pV=J4pjjfO&jXmi.NTC>`in^lO=K[Qe*$NAn0$W*(gJM9TDP^JT[KY3mahKZJ!uMDmVR1k`jTrkhSAb+5%l;#/tE%:Hp,M!Kd7Ahn2)a#1#L&O`Zr:UVDZL6?KW\CUsna>V7o2GEVbMZ)9IHm?sbhO+NLrSDXd$uIKd4"p.%q^b0p:`,pN1PTs%^K+Po0AkWP804K-Z".0Xm[go1-7!auONXCMrKu$7%54QmdbaOE\03pQc*,V"eNt6l-EpN#W0Ys1WPMc_WLfl"9;pE#2,me4[?<e_%`pCn)YZo\&AFaP9Em:ZuejXp@H*]AlP"JJthnC>!)`OB8J%1@&5gf;E^!OK3@@U[g+LVNVB?E:=cLKjlFoM!*%pU&pR*TXLgMUBE%aIe5.S7#C2q3\Pnrhd^GW'i;/b*C<LfuWUg\bV]$FJ5Y7a#`FIjk,)#H7a4%"eO0h=P\$ojE6AB46.?Zo"I;T-g--=n#)HHcn1nO%,Y'p0CNl!:TIp)rYl:fr0ok8k#nHUb^NfWM8e`;%mHVsqTV_YZ>d/%S-Oq*#+!XA/Q)Cmh@A4XJ@,jc5bS4<0*jomL%#A?PVpA\*%RU(ohpU4o9oNZdJqNA,RB=ckKXjQD55L:ni#r_/g&=V%RqXuBHTWC>CF"DjlY&\u?"gC%jG`W2U"RFJ:j!<lt.--W5Bb*>c*a]-8%;(CK9,4.0PO&?">$<a&mWIRLo\qiV4-j]>poI(IDW/qa?PR;X\1VDCcq,pfX88jll!ba1M)cld\S"CaC'ZV,RVJ$t785H<nD3*T#%9UEPT^6emdGd>Pnf>[mBjKeXMf9Y+cd.0So3`g/LrRT97eA-J%Qdo=6Jur+9QH-u6PmT6!FhRp/q0X.ZWQ3-%94dPN+BS^PqDbkL%iik/m[Yk5YbO6A\C[pIr]T1!T$QK>@[c'QP[a=t*ArW14Iu>pkHNSZg)er&@Tp<<jg%R(Wo9[n$n[k-#*B'eOBBIC8Zb>STS@d*7%YC#a,1Xh]@g#6fCQKm8BnOWlKF>Ca2C2bY2R6IKA[J?8u['Cb/R9b0ACeT8*`*oLX[R<?A?f[b_&',sQ7m#Kf&EF'&10QnJY#Rq=%DVbM]*W\qnYP(sPn4<<kj@rI"5O)#US>Cfs8sj",+T0ifg.D(3P#:f9'W2aHm.8s;r*ac@f;"1:"33J>8)s=a[=O7m8s$^-YPaFC%SLSsu8+NP2*Si9<9-ism;71.Q:%Re'jLrrkKPX$Im[3(+UgI$_,]CnbI7*V?he`=e]#n5==^m"fr<j'?._<ViNhCbZH8'-,MPMk"%Tqadd8R7jHlG4h8;PE*lRJKl.m8<s'3E_u3d$ANGTi0S90l%+O3HMQug+):)H>_30U:Eq9oLW;S$ES"!Kp&tUW>4\J]/#Knh*%na%>c3jH6c\WbC.RtFBr3B$:(sstPJsaF>R.t#WbU^1^#01B0@3,OYsb$MC?p8?c2X@3&OQV<rCX]^pBMLRX/Fd1n<F-.-n1E),EW"B%&#Q!TA0<X\pp%b:L5\M)T&WI;A]RDQM"VY^QHG;OaM9<YF]=k[!KeOgXo=p7OHIV7*=YnC));gBW6SC`.RQZLKC"ehONNZIaFI.R%'NBgG7#"/Qq&:eN7NqqTh`@GfJ'JNO+>TUVP`=+]L<'?Q9R_tr4(8OEDB'ZaA6>SX7*d%\Pp%B7+ajlW/1;U!.!D9bF$g'KE>Mnt%`RfB"n\dg"/hK.7op^KQ&?4CU4d@08O[1^#P#3)P&fK%k:-iI487^X]dHic91*Qgp#Z=J:1(kJaGB->+6Ui7%T<Z=6L5\M)nAWgP%));gBW&m@e.RQZLK?,@80CYHga?\XGV8."!,(kjIF]sX24cpnhU=jNZk;G^4e^'tjKo!5Y92&p<87[f^B+n/\1(kI6Z_FS$$lOm1%YV'Xg$lOm1+CW\p))A&jE0$ig11\U8#fL"MH=DXt#)pF<;AifMj/<A(M%!@W4ZSe$aZ<*bAE]\I<=0oP<ME#ZAJeH9#'TQW\XA]'%:ai3811VXcKUItJlH6PrbGO]>P)79Lhq?7"I9kP"6jA3@lF="`E*FLgYM7NO?.np>#'!s1Xt/7ua8hAf%@&)HO?rNClaX+aIn+_L%7Nqq,QkWMSN'mlQ.hbi!1(kIn:n<Gge7j^I=G\4*Q/R3te_)i[L9=RJ<E+^37"tsLid3/mE&Jn-TpU%*]Jq);Sc.VKL5\M)=T('U%L5\M)*kOs:A]RDQ-koTW)2>I0)%+=mgBo8O1*lIRgBZWN-SjVZbeL8fV1H]QH*QF0L5\M)0)6/Z));gBW!bl!b!RV6$s8!18nFAI%QTj-;BEfZu5;cF?WM0/a%FsN-L4<s:VBn"=9&Q,\V^<TC`3BO#:`2#$)3DV*K$'1;aFJ:0'NBgG6jE#"Q%I/?Oi[#$la`/#OHIU\%.&N^oA0`pDoduA());gB3&`!8Pp%B7!EMDoPp%B7Tob;WOHITak9US&+X<*MUh(Go6Ui8Pm)tTSb)hb,ck^VfWF&pNO[3#08P!Es%Ap7<WdM!MFhbQOLa@Ki,?;eN9lJcV_l6r35^UgW)\C[Mdm)c48)2SdZAk$f,q;g&OigU4\k\$#&>J#"mc-Go?m>28$b9f67+X<+8%el543A]RDQ-koTW));gB\1a/8b)hb,:ai3H_(u]Ag/VjITeb\1&%3LD+X<+8g6N&E$lQ<<Ou8>_b)hb,d(3+j/<qA'OTBj7Y4Z<2%M%#)[</-?"#-->,V4J*hAYprbG+g9NB[')t9fIARKL?#R$[/Ks6V(`9'YDt\Tckr?V4J*hNr_&f[@RdMOeHn6JBiKsKL?%:P.K2-%+XAh!S_TL%$mC`6X`<3gD<!WH?r@(XW<q7C%kst+@L2[02h4KW7RpY`PDkuhZi5ntL9;cgaT=s:7(7"%`n3`C'pI@L)/rmPW0l'u%c%%gg4=V\c:G]dbEiGGU50\W7CE=4SEl7KmOCgcU=<83@g8>eq3E8afT4S*%P"Wcip1X_;MkK[!8aXt8Y`j.-R++=EJ-_l3.OMQ!%1LOf?O,?NrdgVU:b+iEDq_SE$mrr(mWI:39oh->@PM2oP&8Rh,`ME3A#1EB/<(q&!Al)f3LD?$,V]!j5c(e`Gq_SD&9.gsCg8>ek%:9!928aXt8M>/_EV\q>@9h,q^g8>gmO&[59PDkud)m:Rf3?_n26iODuTtPgNk<bs*h%foF85!d`N0_n4<uNm9b5'k1bWp=Zg<!W;%b`K3+:(Fu#$H7D*anBNTX?P7d`XK/-C3LUQ[)2LtgR'.I9Bo\jL>hT9&`hB-JT`sr<P$nO+lQ2aYV?6b):7O7C1@IRo-n2"c,L11%AcS=8]8[[pl_9l.)(8lXojPGbR"64[JQ:o?@g4,';!mmm2J*d9\HuPXbWotKc5#_U@g3:]UJ1)j@g:(>M7@-k)DdJ%JbAlNg6_oM%@6aH%lY9o6$DJ6gE:@p_bWr&4jRIAp0a"ZuV"`T'cS2>),\rfJa\:q'3[quon^[(<3[kPQh[)@.jK-%=;^gd12Q8"X^*RD;fDa*j%hePDeP?Pi&^eW1YCf8kF,OP@m(\0,He?Wa#H@38g9kmffM'DG7Ptc!r1^Q='gr^sTkVJB7s6#bsAbNE$/R9@_opf7>Um=H5W2=uL%AWp:59`fYm^TpE_M^DlX,.FjL/W1r!+sOM%8M,iITq.]Xfqap&PDEe6=4sC8-5:XEc)ke[,'8.OAWp:59u>H,X_^nYU.HV=ng^-Y%dZZ*oF"Eg1Z=oEb@@'dCUm=H5Rd`#%PYGmq1^SG!\Wol-DH/M"Ah:^&8M,fHSXcaZ6Df3L8P.9lB9B<g>>c++p\<f38C/L"^?Of=%J+3/-GD:UY1]5^miLfNHs)_oKV`Vd\h&64VcL=VRL4?cjr3,A10Rs!Z!MuLGN3srhUnT]=-_?1EOG_I_8/),d+Z2*1#[:.EDU"fk%KjroHPN&=pe0d!&g.?:KL(#s,1GjY8'_AJu'PA7Tmkql68TBuL68@r_8TBuL68@r_8TAOg1KJeP:29?0TB^?NlcZb\;B2N!+bt->%SJ7E$8Q?WZEtdb<4#qZTUc:u!b#[\+4"63<JG!=AXdp.rBda\eY+67sBaD>pjAe8jNm`HG`-c>J`H_rL]?%I);B2MV_KsM(G#B<V%6"<(@<')Ohd\([<o;S8p7qmLES9+(n3(cQ3R!7qn3(a;GZcKOt;B2NafRgZb:5[4"`-%=4XEIL3.4rme3S$r_UGO*j[hYn$G%+i7%5uY5qPQp!hUnaf)#q-7RiKKI')FE"?L8JjrDkS9t_Bl2`G.C$Dp\2:0K84VC(fBX3M[%!4m;e,>6AN[QA<[:cZ#$4j<0RRr6.Ejh%%3=So&lKVZ&!Mk"O@j%kUc/sd+k>ujo9J-Jd=AdZ9VdDBPQmP^k\c:_>l>/*:'i?YMJ(>e((Jd:-4?dr'r=4Kr*=3fT_7C2@Z(F3%\]R0P84@5(keSm\BFp>V\@X=2UbC<T((HYibsZ;;7;:[#5VeE>;Ge>H*i>ti)GlIU:m^Dc8d!2?/>S"'PQk/K0Gd0;mYmrr<0RTe%4.:lQOG_K5)P<PHr(]Xo+=:/@WT!+];^DmLThrrl%N\D[TR'5dCm.?W"VN.$W?E"Q6,]#!iD"'dS2OA(gQNP1dngr^?7[\-+Vggs%g5dljW?E"QTli!P)cB$Q8jf;>OjoJMdSS"8c-hp+OC]f;mfZABP(hDIMUFbTNj=`b;Ge@Z8'XM;84@6CZ_*6,OG_J:<R!=^)H'EN%>-jg8+Z6'i1iR8,##[f<8d!W,cU)A;7;8F_E`kpBW@/4<lDA8d%Dum.%?7lU`2&,eP_MLZ,H2h$V1J47=\'"$-k0TT[ZmSB<0RUG%nYITjUnT\r"e1@uE1Mm7&3"*%3kMet1f25_*'1^>#GDiPlKm(qBt4!:Y.eK(I2YM%bOhTb<0RT79!1'sC`&VnJt2qB&f?@,gbPdV%gMrG^if%Ck25Hs''T*c"%B6GV6<6uO.S9eT&i5Xg;Ge>fpI\(IBh4Pnm'KPUj%f#;T*DAbObqSLMUI$H74(o".S>>TQK^sMW@/4?%Hd+ll84@6c^-#Oh%B1`b@2(=?WF7aqV#a`FR7IeSnBamoL-dU>W?E"Q!P*-:8.DOH%>A7\;F;p+"88nB6u#7]C#Jp3%&AVWPQo@G%AKj"-ap2Un"k/SP;Ge@J[`h3U84@6S\3?J5nE2=j4q6n)8U9uCaG*JcgSY'hrq*"@h21Z$PQoL"fglRO-k632^!\\1C#JZK3W`8,%J5aEddHj2lL-ep=6Rk]\W83S;aLqbR+^6QJD4_#=j":G5+dL,F;7O!/L/aBAfONT*%B1`bKjmML6Rk\qBNq>Z25Hs':sL6mW?E"Q%!P-aK8.DOH%0\%!;j&%s;&[4gcUMY?7;:[^lO9SD<0RUVP-U2g;Ge>>`JgUI<0RUP.[u.AOG_I_-tX_^UnT[[MA\tpW@/3XK.%D4%+VggS,Oh*l%B1`bSFrD[/lPY?"6![oO;chL)GWr3%?q'!QY`IP<0W.4DC0Z'BkY@2GGS(;`[rF2#&ADFF$&hS%1.?Wjj9pa^UR?K%>#I^;8jiS`s5Hp:buHU4dAI#m:mji`W@/40XJCR\F%P3Oe%dtE)+Y49-k0S#G*Z`36to2uPI(!t&H5=K;F;p+6`Q/_RJSfTMA\tp%W@/43kfuS284@7.MP-A.%B1`b9s!N\oP#]f1QiYS;&Vdi2'o513";^8,_$S-6Rk\1<B&/hC.Ld--tFV]UnT[ODF/YI6Rk\1Y"L*>%6Rk\1U=:r\)H*Cc>5,/EZVQ53<[T.M9QB5GFe8kT`mTtf;Ge>do:CfgOG_IOrdGV\6OQN(q.Z@m&ufg&[6>'"Z[/IU%n!C(C"WMe%\Te"qg8=sm(7@]&W@/5.-SZ:6+dFq-d81]O%B1`b+tK+Re<#R9:hWJIGG@r$gO*RMI2^&5UaJ$qU,;'k]"?Rl6$?d39km3fBkYPn%aKJBl7&m%025Hs'OA*qdC.Ld-J=W3ie3LhHdd>?!=b<ZSBO.Ea.)c`.S;%/ss#._X.Z`-Z5@H$secfX+^u0W`nS)kO2VN]`H6'lp%O"Qs<QCE2%Z(&l#imm\ik]M&_@dVPrDi[$SWi2"\5<iA%7`Tlb;/2#9?_Q]l$>!b*rku^%Cias)?915qYH36H%o?@8/A/[Dd`:;;%k^9XQh8>T9J^$%4SJ]r-J6d?$kBBRKDsq!N1KOJ&W2]`sf;aJ[jR'hZ%S9T)^n6%35R1E3\$a'$MnAQ*n"#NniU(*6:dsg=f$n#S%T^UsUG.G<aKm=">%i(9FWKWsI%G,rYVu"s6jN[,NIHBb_cZbL=#g2>,WJ.l;ODXE]+=/,BN_'dbM!TF<2A$<,7L,[<JT@fW)[@q3%bXdV+\SeSegkH@@knXF)0I-<jG]<N`no4'Y#e.SVSAaS&fZE&[Dt*\!n73G"`thfFj5[eUH<EHlD%%(7V&cTYaK-I)qGjfpfF/0*%]qpR3nR?fPFQ=DUe'=e!KoEm?mU)r0*kCa9mCD>\o"&P:;^dYQ;#Xq5<'S(\4ht.q9eh[uqrpa\7s7=\r69VH:XQ9g*322[:W_uM%nmYlW5"0`8^!h1mWA-o%(I+PO;j=1Wr-d[3erCj<3>S52HN`pn>qJ5TqI1>":Y!5IVk%1=\YLL4J"Q.LSThLj'K_&BV<X83Op7),%"G1cC1=8?bO[([oQW,5l<8"`[SLmI3+UJ:CP)T[/$6`Ej8cqYJiDh-7RGlC(FuR1h`s0"bf<!Z]@5F?FdN#@on<)m`^ZNu$U8HrJ%Z!7i(USG&/4n)#!H]ZRa11OX9rK]JA=J%Hgc`EccP`'It[<]9"RJ!XZ$l7XT>P#3+Wb$X8%F0DR[`lZHr#1$25&;j1p!c6Ec4"I&%NB0tAa1B8#%im+K00->Ud;P%bU_Gl'$gdAE)brDO0!W<(]4L*L%M-,/jGS/;*BpPA'sP`i`XZpgUY$T1GfU?WbfB.U_aA=Om*3oe%G'I])F7*7Vf\rNbJK:T!`=<EhiDM!M@Y\=HAo)].c<1)4n;nS!rdNJOiGJ,_SZp!BhL"7H42ih``"!=6!b)O\M&dWUOG/'eY&=`H%Im[g?B"%d5I^dtgTj%LQf'F64RocA'eJthe<9$_5#4-_NG2Bmqm9dqi*?Mcq]FmYWf\tZMP54QIF`q9(MLBUG/ZR)72ii%/@(QC3%fst[Z3FR?%:!UW$)D6TY1?CDR"$5-ogWdJ$E-F>Pf#@$lmT:,CHuH?'NY[Us8gni1(n8/@e1[@<>``4a]pA`VnpSBo0IrK>lGXKV%@^<:$:uiVQ1`S9hO(g/Nh)Y)tm`t$lhfbO]+Y&$Nq;fg"SR@fEpMfrg"Tk]!in5&c!b9jt;l-IIgCqpUmiu78,94<b)lD'TZh3af%r5@%h4Qa>+[`5/Mj=C.-(u%K&[W"B=R&@]VQ07fR^HP`u\qgL@Y=<8.=20LZ>rP0r@:?u1GRQ03G?V`VI.Zi*AW*]j>3?@HS70'M%)GsoZ+>O%_BAWtAG-8fXjOj(R?tj2ao(:?p.`g,V'SF;.mWC&RkO9))Z#`i56I0KW$\./A%]ZucHQI$%rY4YZfL*8j@Wg<a,/0&0%0J8>;#p2cYO-e\K\'kdgX4\*'%1UO2T"SE%R+p5sA9\N6qHdLti4$J@cq`0[1XIck8&:g87ZT%-o.ij@5WKQm`[tNW#4]QqQJqFJ%;p0]n<PFJA037Ae*0r[0n5riGIJGD_@p]J9n<)<e_b7daH8lO`GeEdPG4k0@<q"W6pNQaMl,[h>41>-VCCD7fGp-=k<S2V&h&=>,%niI0cb#;HngWH*@=ks<5W%`t5a^Dm/*_TOFr'>;'%.hbkKt!WMV1$_]iV]bMnh'02><P3!$t<9uVc;ckF?15:?,DZY4B:1bhI"J`%Xr-<e_,G(=AH0!KDN8U-CtdVj?XJ7Rjmo;@qf[0ZA:>$N%65<8Y^Tg&g\'T\PoGu_i3h(/J%@G%8<l-3LPFEjhne9.PM:MN]>MnN%PIFm<F(Bu]UH,XV9);KBTLrMi`aGM&f$?=Q6[S$>mg#4#f<so=rh`2X*o=LhOo'B>Yg:G^eAB";D8(C<Z56![,Qje@j6!_]4kb6T%O;_Efo(YQ=BDM4;HFn4jno`+,@&\1S=.fFNrf&u<(S839jmMEuW,hPl\7)Vpq?G[GDbWdDf!QjWdrquS&e(@(dTFZ=6Ib/\?FKoG%k4hc,[qtV\nr.2eej)Sj6cCj)LdEZ3J*%RQ\+u4U3EjE^7&FhsA#ZcFkA8WQQKJA/&]d2P;cZ?u%sd@>[3eVKn`SNeIJ%2clXtpV%V[^A5U%TeiBQ8%c2`LmerH#G42i\'=iQpaX'SO,NXC&2ratK(tk96XkS)<>T\a/fUn'rn#>R4]uZaY+#namBD.2]a0qt+hREo#PQ%l#5g%$E`2l[DrEC_(3;"`U]5jf;&;pgN*<`D7!pi:MOft^%u\t+Ydf:-g:G.KpEd-H^0Bf]'eW4i>42#gJ;O)H:l!&ki;<nhXJ4_%)Eqg5Ad:kc*?*McKS=uB)t$l$qSDLmD0c$Mm>EBMQ)Eg2T3s_(p8[NQ_&p(p\DIZtV=IUB*a*cBH0Y2mJh%%G;6kM#^LIEB7gA_P%f\q%9MpQSYBWjX.@f6.&)4d`"L1Q6QXeM:+\A?bBo&eZN6eT3N]#(UDc>5.)e&<-1&9d#XrbHXjkbqQ-E0Bm9<>jkH=(%X@D,$!0%<fcRs&U.@+6S6Y*7I'MnDP@!A_e@@?@6VCkI'DJ"+8*I0qha8Ln+X]Sq."!7H?9(.=?l]\o0b88onT/YKTZ!YnA=VL0j$?WRU(H:%&[,Mh)OUnaG4+PakB-[hBtU?#;4H@6j(^4=4s8-Zj:r1%h,h;f4>DGVH_(%,4<S#1Ikq8So8Fd*kIY5aA,&:.\%\GOhUgZRn*XP3%N"dTHj5i_YgjQ_^XhWcKm+hNZBD(r_lhT])o>ee1nacD/ih?rMlK\'=jp1,`GI//Eh>Yaco$Z'j^ee*-#=9Y[nn+WkdSS17[V]k$%)#qs24tIC>HjGYaSbtaarrASf]1)k>qtnUVbP]iXLWdj9l=RRhnm\1acC2NHlEBNW)DR8+J6,hl<Bc<*f73NE.:-Q]Z97]d[T$E?%5%a_HWP,S5l_+cR7.'sJd&8#:%sI6ejlrhUpPG%p3)q3R/>=a'?Y.gSTBLW5G&=GRpNL?LF/V,>fU(W`)I"W+f]lB!G'@T$]\oBb%%0t2NCd%"<\t1udqR&$K\+b.oA[Nt*pU#AMhX8d[f&ZqQr12lj?KJH<s-1N(<+O/J9d-1N*4`\NiKE^M85WDQOlG8l9g!WA':(u6%!)=B8%m;pss5NKB8=S4hZcfV1ATN5]ijoDS5K^'i';p:;;n`N#Qq%,;I]iMp<,,A':GW6`bL_Hqo#BYSC/j"Q/$C8W8J*a\rJM8s%X"assIb(YLAtGLjP!('a*0/:9*"P`eh/%#r2L@Y,aCr3V\FT.7[t%Z26?-K-@WRjp&)'XV_G@aQYjf8[>\8ENH(_o9E-48iT6E%k%YAP>?lf<EQi%KCEcdRP)3^C;"L_r1:]p5LbMHP73J(k['rp=G33a_+=o^Uo`HH2/5I4tnc8+OfAo'=AkG@#^iP$Kn1G0;t^5=S96%pK*"<oucaR`VSOhq4CSqR,Pa/5NqBNEW3*7FB#o#1H#^&7m+Qq:AWZ,EG1ht,\"H*E)W(3,O<,@&](]rJCQ?\pU<>j\A+jUB2o'U%7SAYMdU7b))k^E]=]bn:9o&D_+/Tj!WO$3gAP"p)a(#^BkesJaEIbe`RQG.+$7BbC8YPbOWOIG:k(aF0K(;/(N,s@(]H"Q8T2A%<%Im6,b5$>%J@njO-%@YPZ>N#:,%(Y,Z%a4d)//#i.@8tV@=e/cfI[MGH!i>#/b"$#aF+#uhGPmf>A#jd`\W?NNjY:u1h4L=?D:tOb%AV`7te\ff"pr-3>=@<Z]A>Ee=76,.1U-ut*AY\?Si@30pG5BQfU7B;VF@)6#h*Z(f:X(!+PP>[1F4:FXJ,3CPGn)t]7@t5GOBnmt%gru@S?iR2<.=-mL_tCp05S5QQ=$EUa$bmcVn+4k$@-O;$$=4VJ2,"7u5(]DFV^HP0Is0+&E0[>2aCc.u$_Rfhd,#1eZ!l@U!KK;H%s-d+@NISUcOtBN/]%C,'D[*0.d;S-Okg<WWQFq?tokd-KiesI8/W2sD'P-.a_W98HBZ"s8jkSTWd@G`r>U7-4@R/j?Ph1o(<AMM'%K)U))/qld7A4I>q%&_i$#W#]5e9ZP=lc9IN\c_.$/KYK![/Di=B^=dM\9?OaFG:Wj4c4cTfDc=e.@4hDH@,M[;=hq,A(:gM*X6"U%?4CnTY>#V(KMuZFN(ZNDF7to-IK0"l69,l2D`tcC#uuFX*lUY*P<),;n.9\HkpPm3+/qn;TFf:*3*?c*k.IH_*r5aeh'R&t[Tp&a%2g#MJc0:e]?8^n4+%0s!bu7OLmZ>HeZqXg(lKBrdqj?/Xh$F<^eb<\=QK]1-fQaEgT5F53H]MrD"GJJsR(G9lqp>+iQ$aU83jjG;%cIK*oYZC2KK[%iV2J5.^XPQ&j4i1r=nF0H9cMN+R<`ZC'<]9*a_`?;[HN^OZ&Op*Cip_<=\[C7Oc0Ea,X'm]kr3Ps,D>U>R^U1S0%^/5%giqOmBY5">7-.7\o6#0ffbte+-4(Btpi9FZ?5_a<d^5hnu/YBjDHrg[TD!Xff\<Q<fW>kX8f68>@>ba.K\:.[)l<>?K#"'B5%K]rj3qgE=!m8G-G@cb+L[IjH@-$rUHIf_(HpPf+BTK&nu2n*AeA:L!_RJSW=e'U_D^#o7\lb8K=:bu<?l[oE]LoVSf$16f=/Q)<R%[Z\GI5>C!e5CD']qHNr!$G!,=*ZCX,Y$L?a'mVSta(6eH]/aK*gePtIl(;;+K&!M+bU(VTf>Ie>VMtN2GFK&f@rj_u[cH`2)H^-V%PXLC8U%@Qh-ktRrVe3E5[dI&RoD1rECT:Rj6/7udc`i2ea6\NNF2O?%W^c8XG8n9(op>AG+$>&EV$"Pb7:44)Z.@h/nZuOTIeT\a%CVB\5nd^0E).1,iXCd,sAfI?9r]Y`p&5d#^@l:KnH_YtQjmWdhV)=>g@EC>[*J3#7H9VM(Ati)tRQG._hrKn[H.PuBW*LF6Zc^bF%pd=7CNSfdjbg:9$H^i!Hpt'/Y<%rbcZWj1hJ.3b''_as.`::ej#j/BZ'`[LcjPt7gA:&9J'W@Mt3@d1"6>?"6jSc_t4u.KMF#TB5%HHk=c=.XXn5J\,d^T-sIoa3JdRrfa@ro#;L[g<s`it^qXMuEM:mJ,;/0mhZmeb@\k1rEj`!P57Z>[88Zq?[*.48J2i%.Sn$?goX?%G<Ap7n[s9OT=`gGK?ZE$T^=i>Q,"AUrCYV$mI6D!<&VEha_LWLn5jZ^r@8J7msM8!9,[D[]A@S"@%Z<o>#"MZhfnDZe)ONV,R5PI%'5PV:RJXC'm:$"K>m+S[]A^P&Ee!b6YZu5[hMt@I@9Y^-HKaqLL,p8hV9+q-?_rU?d8s"1K>"Sa\l6:j>oSZMh^P`5_WL9a/&V#3%a?uL_6cH$r="1+*B5^O=lGq(kM^dhQ\k`ij)2gWN\A_')D'`KPk(c^!!qY,*Xg8,[pMa;G^@/_rU^g0p5)WL2s7C3UXJ!;QlL0p<%l`9$AQ@b%Im1oLjk0ccc=#tZ:0!QTcbEp)6Lq],Q8l*'78RJGne6cs"j0S\WAUGe+QS^@lT8<=#Y=Z]1gt?TjO>;\<3r:;fWHNd/%Oi%8[K*UtI`Bs_3B-.ZFjNZr1Bu<7G%a5tW`>ltP[cdQJmZ_4g8$-]DDs2dR5OP3IQb?VDI.]FR-BI2q>b("4DC5WXY_#>^LTfge%6T[<uVRl]H-tZ#.jf_L"9AP8*WhgJH]r=b1h"JDR:(=t7okdpTl19h/#CmA"M;S$,j_[;!?B;RC=1"1YK;2JV^$XafSqP.L1=Pau%2YD&A@>2k3\Dt`HjggpcG(62FrYoq514&Ju(/j'UP60s+2;]/W$D2C"X1;G^/T2a)Hrenql3$9_;1C,#\kF5,;W5gIUWX"`o_>`a%kVA)FVT"mu8!ah6/LA+^4h?U;fqlWRV+6mBc6_`EAa.TR`7I_?02%?Yj/fA)pp0PU15SCpK.flY0#Oc(>'sJ!FIA*(VSSUq8!h&;%8W>ArO"M*EPZ7F`o]S'a@p,aGWR,40ip$s%Q2k3FrT`t3bI'j,'oLi-d"U[=MC>@?Q_d3=8Z#E)Hs(c;)15(lHs(c;)4\k!pp0PU%1?>pB`L!DkQ_=SP(13@K?&!b2dc/HuUW^I1:Q7##O"Nd+P87Mk*aJuNT+PEg$&;p91s]nif/e5Z:b9K)p<DdP)d_Hm<Gq6m?WJfY%oB*_oro!fh_#NBnHGL,Uq*18,^je='\oLpj\@oZSHG;0>J#p9sMJ(u2pWr.'e`ZnsbJj@.rg:KprRI1h`TiM@+5sVk56g%_N&.s^%r\TFm[53'FZ\%_B%0(8G?\L0.5NBe1_&2bpNug=DHG46ap^bF>R0EW[*@((4s#4c?E!#lkAQiD"Z@;m6fts62+DE(pJA;!V>6O-!%r$11:piQ0NrsA_1"TN^sTn!$FJ#rW/3\c(gisT`>/C,AY*-dk:(h:d%hN):f1Z/^k\@+=3_"0/(*-6Kss(rUE:BN.uR<3:mbk@J'%isL5=DrFhON5=%qkJ:0LQt':o41Mb2gHY2Q2V;1e@Z<)eJ=fj$VgH2t1BW\@_;LCEmEbP(Qb+=APtLiZepH`Uo)^Sqjr<asZQ%7m%=?aAYrsBhp&>&!ER?iDriJi,CaZm[b>Sutp$OEeh?f6u"he)KaT&j0qJMUo,[RFQ]15A'/FN"JESmg$mi!uW>+3qlRg[otX[J;;>%=P**VIFW3Ypb=Jt@t0P(_Db0f#h-9Iqqu)aZ1-!tp/Jj%FW/7Lg3mor_C>`5FDuReNpF=.%iU(M0i-\R((4rBiSLmB=:?#>S'0SA%bI2eG3fNmEZn*&(/j.Mg>e#Uu'5ADp-"+:dDp5NVV(HK,1Hh19)"VP[a1O.]n/,C6>Jg('GJT[2^k':*>IFnIB0#GlGgk6U"PsqY%_KM.1P(7I3]WZ7jDW.5H\hIJ,C_kpFV6^4]B%mfs\`L^HKuLNK+#]DQd7Z823&KVTN5!MI542q(&&o%5&G5oBbU),%[KFg;@66Aq%);Hp=M)8Ln4tKqZIV'H^ZOG1HR.K?F"j:moWXSc[)o,]7=;,pt#@GUHq3YT[5?8,W$]F0,0b&(Kc%*eN9OZl-QiUP]A%#L+^`Nr#%pcogOPr3O@^mO<^/reh0@#W*qJ<.MiB+B@kN5;Zm+U2jrGVisJ$ITb2';+7N]J6%p*8hZ]Z\>^k@s5Xp),?^\#<n-8(8L2C=B#Z(%+m^V=Re1p?$*o8VJa_jPDgg8h6%IDcbA"j[a"d?:_aOiMl\Ok7b?57WK/GPMRMK!V=E:%RQt+Th"<b.?Mq>e>3Zd)fr^j^9`sh+Z%]>1P:kM\4)DI&UCQX8RcpG5)^S,@^h]=s-r1ZUC11;YQo%ZQmjA'u3HGCcmZ_Fq^ZTHQ9.n/N9sRJ0DS;jZr9(Ve#_p_Z\s@DcjT%/tGHO$H>1f&2<1("X^C?D8M&GGf"hINbC\ER;`ikfFBOX,00kI`bbXGY_V/]Bs60d$SR8WL+?Yihnme\\>N`2i6]i?QiYt\pOsFA%rh0j4-Jp_SXl,;ooI^QDCXR>H81OUDL4YksK>k5`b2SeHEZEpR,qu\$(hb-%57Jm1mg&c>!D!_+YCftg[(*PuMMSDkiI6/D/ND6>%!dfjYr$qJ\R*ZotZc6Bbk\_ef>Z?*RLZ6d\1"_1$D@77-'[?f?_+mK$jeChFkT`?=EF%bE:@W/3%"tjG)o[M*@F?='6%5<;#HJ,c%eR\;Kcm6%)g'BkE0(\ikD6ACs+2S%ukn@lX50=Vl!?lB<-c!IfnQ\'C2>h?r3%bOG#C!)`Y6t&0UNZ9C.cDJPKjOh0&nfd=;!Hqf%Kq$f!6'DF1nR0PUQikOsd1[Lar&-!!fEM2NY_'(s8Ng4j9,$<XOS*Fm3`0JJQn('B9ONAP&B?o#IY/#0:eU^If_-_p8-AX7s#[I5%Ae:'JFTR2-dj:IejY4?Zn'LC:A/gi]9V@Iu1$/X!KU)VqYTOcK6olTNRJ8O=DGJiHYd9]6o0F/%%'FgL']Z3g=lqIr^dq;;*ZP9o%#&\(Jr,bXf7_/cK&EsrM!Z;:,"NG7_9I@bE]YMS)R5>o_YqF<*?"_#4@AXl_I!>^_E"F%M(ucaZ!6'WF)TQ4ffH<ak"6<EhMBUTj%WA?fG>.,9"[DO.I,G',[W>G#Y"1l?-*(u7D0F'99S&2I90h.YQ!D*R?,)3`1YCaISS$j.@9T\fTb#Q1R*Z3[]^uq9f'>N.S1&*LX%.HQqTG67<r3*\Y#f>5VI;,t(lX&M6S57GI@I&3UQ'1a%.=cjL*T`WuqM0pEO'bD3JA0O9h^q;CM_Ap3?WY95U*EWQm1ECo?@K1@F%Y:YrjS&r&hD)E?dRK7;AD:)da_=ce"@WOMJ,RcCLEYF#c,F,.]CCZk&;T@FVFANU;I+mZ4"cF1?\CeB?LH?V=5SF@u6#^Xb]]](d%JUqUp_mi5MkK8?c:[2(EILb#WV!bX#$AO1Z'7$*ViKXh:a52AW%u8'O`Iig6g?*-GM@mlAdSpl=%[p`_hn2i<3H4CL+jPf6JuJn'%)>Le)Eu7FenRYT8JjB`J`Jt3u#8CAR(_P0\J1RoEIO_0"G#/t,7RU(*FZsDpqalA,Qk&j:1r8X2J0=/a;\8F@3*j7plOh0*A`l.D%\cH_Ig/gls3G9jD>daq"ja]VtB/?:B?uM!l@_JTjF?jNT".65IiB6_^;ju5;3F\Y:U?Q#H5[20`k\2!;,270E?(]jo>F9.%]&'n^%[KO>'kk5%)'YGcZ?dat=dA.Ob+mf`./9ie$Ug7G^'U!5^m2'`=iNNUB8(]i1+7MXrfg@IVTHq&rQ$/?#1<VM.m3CsJgW/p,^I+Gu%2TRW%kOMAOCGsgR9RMW&l>2Q!;KGIr&%j=)H7P\O#gsHr10;cLR'a[>'/DrnSN(5%XfICZ)hauJiQ?ta_)A%tV]!*+#/1*;XY>WL%OJ908N,`8g_`G[1,+YZkC`EP"api8tN5Oc]ZbthC]eJ/[N&^n\'?7]p?3;39bmD0?3-3lS&C(?i#!Y)9;h8GO/F!,/o7:D1S&NNA%!RFH2?008fQtOfQ;a(_POegKS,9.AD8GQ(A-KeP.=u^+r6,Y.W6'VS57:XbiUG6lW<^Il=a*aL@64O2m]]`pcY@-F7+RhWA7367)%.5SZYl[^T7Z(QRN#!Yq_l^nQZ`IY-(R2->cTPi#qoV$VjVa@"f&1$0GR??S2f@kl;'3R4))P0T#)D3\!%H!mmK\HJ0G@6fcm/eJ`%DfKVuJ`J/a6/R.8+uuRi;NMI6F/$;"7'DNG1u.aHUd=M)Ojda5L34\q#_[bIi`!8&#/VLuTSe1H9nU2PG]poYL$rW>I`<rRaQVu)%ZG857/t@aAYRHI7JVgAJ(>+LPlrgn*@N^(>f8YS9L@2Q=@nNQ%JB&ijai?(^'At;F,p^BAL?1iL.@?H3E551Ri\E@[HnQ\3@7=SU%=A5(>%,M[DEM,sN"s<*)8$-J.L6H')%"t(%_*n.D1Na/E@(n4O[V2+c_=IDn+44-uQQE!(VUlZ$&TA+&qN&HF,`/Sd8VT;IHu3/[%1-CE_J\'QH+B_s>ED8MNYT%#?10ogU]jTSuNiqae8/jPgVJ[,&[-j;qlIH%CAXN%eQ,1gbo3kWVCP96WQ<,kG(trYJB?dqp+K,^d%MASY'6(?KtF^p8Z4Vj]3W7b.o_%UNOCbHbad&,E22!1GaO.R$<EXWCX.r+[,;!(5tAfJV2JNnZ`+52ebNAQkDR]VEV"tF---=n%J%7P@Xq>o=Pu^)JeH)+`!Pr^So$E=@jp`+!=dbdh,Sl]sDgdD=9_E/(h[*(Ms;EQg9;LdB@'F@YOUAbb:&1EBhH&/`,F.TFZR^bPJt%1j9%W.,M):--Wgml.+Q*7NlU'/YSYdA$?l3mLJ1m9U_rm9fU.j=a='W6dt*eKK^64)/+SV^)E#W32*$)7mgg(LL+>4R;reF].#*_%I&_3C_flL%dI8*>cPh7Ikh:bi'"Yknl82RF9l]AobCp5XDRE`<GHR63oA\<kCX0ZJ-<a52D'po[TXLC,A5M#ZMaaR]XMla?G1U1B%l<%^C&9WB-:l.5F>"D(&7kO;+Nia(j;9)n!j<uaU7=:?0clthLXCr1k-%<3lP7get6qW:l/TR]+Seg6^i_^):8L^[YbET52;)KY_%[Fgr]h'tah"M>Mj;i3hupF1fi`<DN9$,_Njs(G8!V5L\.Us`mZcr0*k/[hYNUD<r3H;off.XeA:<0^e@,-OUgCCsaHkI!j`Z3Ram%YHf+SaKVs'Zj<tC6aTCjZ<+Dh['FJSaL*jSZiIS@P-dKaZDP!Z\MUn)\@Suj_XP/miPH_NZLkM+^9S$PR(kHt_p!Wd0=:q71./H;%K="\PI"X=kot5u8IeEVn1m7MoLp3`KFGVibosBT5c1U^e1u\*aNAU>$FH1GLoX'[$*VAucF><DEP&s.bFH^fLoX'j)D7&YpoRQQZ%Qh6O7A=3"foV@oI]_(9Ro[*4US8dQ]>[:9'Dl'[D0Rm%0(rNU!bj@3XM8at54;Wp4>"9q9pWF76J.q40"=GYm9OjYgnS_N-*\8N6%K?"UZ80dXZQn=4!]d(DhB[m;(3ek%r$Tp-Jn)8<Gn&W]9AtI4S(qpPIYgs$=&R!J!#/(mLQS299VFRo`5ilnmS.^mGVBAsWbAbip%AUl+HjPB%8i%>W+-%)_D7fh)^Xs:tp&,DI9"f#1KJVBO)<Jq3Ti/?UHj)3l>K4`';Hm5L.R>3LZU$"#7#TXegE<=&nJ0erga>Stp%"p[1k,3TM[J42d-NDiX.%V2dWE.@s+j8AR$*kFg8"n%@!`_9&QTK2Rq7t3eNE4CUZ-CLO"D6D-2MauV46QC*mAiAZm!u+u@j^pb%%3BXA,$WV]rh'2RrK1)Ao//eV[JW<RbEd`h&O>060Na0fViu%Okr&Re/\?Ik0S3M6H$1>WZ.@)()iN?V!KZ>3H-c/M?$@OuuUk-?V%72k30,_hfp;F8,5:B`aMq?3GL#>F9+Gqt4m+FZpKm!8r#+a)'NGDo4(e,b=i^;r&"EGtsbU4?a^3+"?d%"4(BnWY`OV_<]/kQt(F%gkl*j:7jgL/PQ1P8=+U^(pcd$iB#+W6Ym<O@gqs4Ses3b6CeCo(kYh]`=,]s\97_b&nB.\I:Aq_bc_+K*K[*!_T<'G1$3^oEF:cY%o4@(?U@]GlCl__>bf#L%-c!2[_B0PTZBK6*@/DombRZCc%:`ck1HC300qL/L$Iiu'h!T,"RAo%sVl\k,1(iWakL-Vcdg\+uaS5;I%pk+"_\FTUn4p,LBr%f>QL)pU8iQL5nJ-ZWUpiqfHkDH/Y6#??@\Di^6AMck[>:bO[o7D^U:NB*``1j",#qcN[fA[A_g]O@):rrM2%(ng7`PDo@e'4WrGRE-eNl,gtn7P=fecfN3d8&N`N+^!ejlstdeTFL@0(DAa?Kea:]5`Gp+@$j'M(a.[,*Zu]C,EEc#i]A"fRUP2a%!C%as\1Kun"R79H/LeCc!XqZ[pVRi(-;,=j*sE[F_#a,GU%cW(J2'DB%gICeHspcA!5?ZIQ%EM#&/ZO)jCM"I!X+I7T8R31GWjQn%\;L&`-KQ36$&\$FXq65E::uE]RjWJH>ahP5SKanE9HJr(8ML;JWBdqVc]`-`/-8@P#N9,Oa+c)i/aR/f0u97;#*p)6/BmK;o]%nH%!OMhQD&MK"CoKXn8fLdF6)m.0^(1YYJUW/=`j<WM60&-rR)(b<`t4sT`kYO3_/%&O[nB2mN+_bT7*!nk1@FNK0#('a<F&t50q(4U%-faE^_mi\M14UHp`nq-D^gl='+Btp/>$p%n_>$/XdXe=?C(saF'Mp1I-lX4#%^3[hT]Pt.`7]%D5sb.;r$9**Z+4F[>>bK(gce18%<#g>ULFm5>MI8E4e>*k"dlMjd@%Y=hi8>aj*Q<HP%1eD:1+pH%2B4#p#K,Y(0"jH"N6lhaq&,Q+%!J@R0'4%\+[<m6!oRCpdK2[d%(JTBUDQ_]#\8h!l]4+usZ=6!f$;k2^)`K$Ed(99VRq%!,8@U'jaN`^X(R&hq-i,=$97_3/Dp^a;T>h@#U&]QI0R1.oA,@OVCfA=o%E"QpV>@6<5:gj,D-O3h2E!@_+I?F86\90q)bY0X!0V@O%pd,M:0_ocE&kSHIN8UJbjS;+!2n52&ZMMc](,t@gHu<[s"9MrV6VE;L%qGE@d4r%!IQ7%l_jI1A2E5Eb,I%^<"@YBKN*<HEO<!,<=AXRP^'5eF&'6l+#1\Ecf"5IV.A.euT=H)9l*02K5D%T<Z0reV"*8L_^%_fn*pa;'4QgCcauLS>8h/n+ee]d&IM3$RhW$J0r_,<VTTp5auA"+:]**NY;8nF-SUO?E8s3e2YeC<#Df3Mle_fmu8tQm672$PJP/%IN<0B1=S!1`%>$qo3rJ*eHWGb!a/R>_*K4<A-SZ$*>unX0/NQSMkXM%_%\$=9_o*SXAf*F\G=8AJ49!Q%N=B)'K^ia1OP5XE`&?q%go)>p0*`jaZksXYG&<(O+Ml+F\DWhlUF)kaI3&RSOW,!6INXadn?E\r_AJgs0gFI+5onkioFYn>KCg2,;-RHgE4+XE=h[/!+OgKF%E'/%O9``9c?p"iG245sHFVB.L`fE'uO&5+mT*-NCJpt5*0ebI(G[cUV;@SS."VT'iP3luqU/unT>a'q*IF"#,OjS`RdD-<4-MSt.%q_<aB=BnID#2_Q\C$#<u%Ugatj0:A;%mqIT0[Ru'Ij,__9G1.XLN(q>$=HpsnhLOi4$FRS*!6s_#A`e>[XL:L:53[WSqjb^@Cl;N%U%uf(1\1+(<u*J!ooXq+%YDc4@"'uk1.P*.KD4JQ;`2)qk*=c<d20X8]X#X!IBadI;QdfcnMPGob[!Y<hJj!R\[FjZTAV]+YO<a\%3sbFWDE(<c819GPQ^GdS;GHRd9QpV5+Fj/EL]*"lE![)Me)6l$j]R^Ej.I&rEaMrh/dHeD2in"_3eNg,+ZPI)<\_-0haF&Ma7?cs%da#R:\K%<>aTr+T\'7^='IB,o,,qT!*)'662OF)71c^A$2n9>5&e&hfNo<RR&.(DANVVSWUd0#e*gekCqGM8n/-P6/!K/Be&:P3W%m%?VJ"JA6jCeXB0idOe04/U22D4:CCPTbuYJ.UrO9J'.a:t$ePM/&)]Unlk`<+QV/ob42Z*>V2!&:qq3Nrq!kD20!,f<ZbiLpWn/%`itQ/;L;lm<J$.=NlAZ4E'BO:FpqfFBIXtm]]='IWZC]I*qsQ:"^hQp4'Z8e9>MrW$eHEIU;3;*+n25So"]Wq@.E8*/JQEE9>I.+%A2+$84=t.7@%Nm%!LdSQl#[duOqnb/h$!pJ=^%2aVoXd.O^T$_'d,DK\RDpR!XbcXLSt2LT+W;8Q6;2Z=I6B3&Q-?&Lgc.U"'^G#%K`-bs"P</i5"OUW?jSA_L3^k3`A(snm9Z:A$+:9-OF<(DML_URPoYioQ3\^+HQ1?L,3uDuEWU);NqA"HIZIlkKUkm]OMI1W+S#aK%/E4:%`!;F^J7Cos.fTRj9S:C4V&t;>'[IS_+lTW_QoM\"Y9AE(o-HSVIY)'anD:"6K]!]PK9STS@re0;gI5KhbEM]DEmJ\5j9Js<%h)GK$"G+Jr$/?5Y[P`f)"4N69`jd(Mg^`Bcr_n:tVZ&[YLQ\hGdY<B2[*Prs0%9L>`UkX]7q>e>J[s.*&,A=76(c#.`_;sS0KsM;%/51m=d:L5ROR'K?jg@bg\I,eH_?r;>9#C^U@Z,$V$3UJL%f5m/SGK#L;Y8C#41^nUiIL1)*WmC@3K_d!\idm3T-BBE'K4H:)o4`E%6)Y9iC%+&Y-Pqt4^+5jAidb5]NA3#a#m/9];kXL+9L1[P056"A1K=_1e`;d&(d)H)aXMt)3Pn6BH,_6<N8GAm4j9Z)kT"@.OWeKJ%K5R+t`Oq^R0N4=I$r&kANQ>Z8NtZa_-,2/V(_@6XM0[`h4KYW_"&(BE.,mRq_-e2?$ntu!@()4cJO;$-4Gk-C\dFXn,ZlphL.P;6%%5l\V0Lpu:<`>-JFQI2#:m3XsL?L1%)Aa'qi8@eMB#\)ZcYTIoE6JVMa>qa,4i<d@-<N-`!;";Z1JHVF^e?T0[q9&V^7%qIRO*Q"%D-C2h@_q[q7C4np#1MWe9+_Pf+bCX>J"!3e.<`'c6?<JInO*r=bUuTA3uDkcbVMrd]CZi3)2Fjb;PfhmLYr22s-d)H@ts$S](q/t%"-OdqR>CnIH;Vp,7<!nB,Glfp>&hd%%"r6K+ts'l$=C8o&O>;`>"1<6EK!5@RSce0%"aXr`]!oW%,90HF:Rg0,.9T76-p4kCjlMG%G_h@f>m!Q7O,Fc7&;WOWS;<eg6X]4Jr"0pDK<+f"3+h(tdJOs#_;McLr#cuS.'_nf&Vc$P3V9?XCP/<Uc2GL6GSOTWdV-^^\8jDo%G'<*?KpO770YCQP6&#nMcmJ`uTc4oa^N*AmcO>6UE&p>C=&#1H,HL(ZHtg+uR`hfK968A.RVFIf>'nNC=*m>n#cPG471Rh=dio38%Deah/[>2/?L"bir?pgIk/cMHhNYX!>B2"5]W3`FV?.>:m_DCInCLJ2/"13$.Oqh/&8BI)MHDEri(1\$Z8de':0rBZ+Pdo0d>=pG]%&MPLp[7H\uZW]akM.8..VSonYTi9rVMrZ<E&-i&s[a=#c8ulXq6`#4<32=o">!,\s1G*LD[%8&i<8(1WK.81IKhI]:e\\=Y.;R=4%WOoP\X]"[m0NVEZ@E;O'$X.(CfbIZn=kOm#UflA">!uQI1KrjCff`Ml>M2MM,[B#">/X[7>?YE?=_1b:?<M2MTO(cH>!QFtK3I2?%g5K3a5ZsCV*^Nr%>/!:*Wd7u<>-rVT6<_*LSjQ]&H9O_6dX'V8g=pq"7G?jL)FiHLHFcT"q0H47q?)'?8,<[@RRm8kH9+Xo+aVj6%qC?l<9):Dk)GBokHFccG8U=Q6qGV_:9_r$uQ;+r'H886?EI,p5.CU\@61J)B2+F#3L-'Y.im>\1=rV!%o=SRS'(21-86"W:Yd8;-%k6MYXaM\@fNra#g84't%F#**M`b\9jdKhDBK+&`<KNVqpYjcL,+<hAJ.D0/3>3]6eYqQXM;\94/m6\UA`K>M=j3-?g@kLPMJU6;D%fUO+2VD4"i.XKTrVho046YmFe5RGpW7h9md^nQId*L!UNVD1O?2Ujf4W+D_d6+,br=A?$.9n%a81cTpRd7oI]B8TI<**%T1!5XtU%ml*Wi`V45gBr#JE'_Cq7.lJ\.Sgd(nGnLDFH]m!;kXZ\&*0Yst>-=>,hB97;F$AQN!n'24L@15h8rBrN?k*8@AqFRZE,n&J6!*Em%joGE;`R$nJ=co@A.7GnY#XCj2!\:W4IVP;rmb2I9Qn=19aOe?b8Qck5M*o#="R=>jLVU=.`%abm=iFY*ORMtQ5*s>H?j7bn[UXp:%g2c5@-Rb-u\^@0M6#3a\3$r1OG"c.CgQ@MQVoI1E,W_ALH7Cfu%L()IUM!%VgY/&=.ZT<rb;4b\\;[-)1P6/sit3-53_]WRm;-8T%Jg/1ffu?8[<M@gc2CBsl?<$p&n;J]DLo\LC3[K80'P$]QLQXk=N%m<jAih>uW(BO=4c(#+P`Q_o&f`/C+u,s*nArLj9K_cH*s3/[%iRX.$+50*+O,h&:$-7#<NX;gNdhp>sp4c,;+gS-AMJ,I(W]Td/U`#U&?-b>s_GQpsA/Z:kA0Sj9+IlAP,+G<%cSXdoQD6)k>#=3>%[Fc7KDNHZP0/d^AVBF5A6-MpYCASX'9?oa/pEbiFLnTanbN=&n1L]_YGTNFr1qG9ZMjtbD\gdIr3BB-fNPU`ini]7W=o.YXhh*<K%_W)XL[e/V9*2[uC]F8%!9`j8j<G'ZI&@uC7];CLZVMN&Eq5$1t(<T5@5rn$YP`t<L#3[C%"=5WpP6_+]%q:?ON-P#_fj],H%*fN\%Td)>+aedQp;q!em2)VM2?8J=!q!'[s\Ctb6\l$_LVB"-&lH6BZe^Tmh;r29"2<CqP:c.:im.G(>;R8%+VUXr?[4*=)7[*kK*?36+%;TD6_J^gr]Qp>2V2Yf_o$.hj.Fi$"79qCd0W>6(6\k+=SO`"&(6)7_L;@l8Jb%=Em'UQDQ/&e>so1E^7Z$FebpCZ7RJMg\B:lM1M%aSGLrW1Xqt'"o;F*$.kVG!;e'_1A<g`0cJ<0n^-ko!$Z3_8cUaJE@iC`Sf\b='!SOEO$.i/2=>a?:VKCG/BtV%Mpo()eVk,lN5*B%2>*=>9tPdC';/[.or*H\L7ipJK11kM%LI6a#f^:0L%=VYN'h](h#0q/"$PQ%`%-b&,%""X,]muiEj^XDCN;cr''$QDN%m*9bn)"8%#l^BIl![5F+]AJuCtFaSCtfY6?D,Zr4IUl\XMC-98A]Q1R)R#r,,%#!+3#9Q7F<gI4q3I5:X-p.U.K/U`a97a4FtKm/Bc+3pmAoD%(BS_BpFVM5O/=lH=WCD!#s*qmig;]KQin[q(@UAlS@0m13;Cug,Yh'2J]L\n;i>$@0#,[HTO3pUaJ-U->Bnq*5DMM=#b2G+A63d]%:f[q-0sTRD54O65AYBi7?sD^=M9Y7)Hs4>7!gmm@QbY?7F7-V%@#RIMfQ.=:E=h,dF^&B:4GU9,ED2*N-oa_>.g*)&q2c^i">U-I%'d'BEQ&i^g;[f(a1P('h;(TTDN,N/EGiEm#Ksis#>Wq!Va35a6^_!mt@#R"7N!8f-cK2DRAQdu7`0DV9OtV=.$d7L+(M*j@<@iod%_/ae[Pr\Q$W!01B+N;Vt`&N.DOX)>)@62+?VR2a;,aK8\@"2W)aAkZcKh']\i0=!F7n.[,H@hM\r,SN_qA:6<WH=3D$X,`t$H[LF%TSB0N&7mo,N24]C^lF5o?qLM/4qV'W&CV&Z*sMNm=-@*5G7kk<6A$VH)r!&P:3&$O/t\5?BaNK)fZo%-'TCWsF4?MMl5W2u5S$3n%,acr&(o*5s"H.>7L`dikQ(YZqnM.r>T8'1+3PNo'oNX!MGc68;<'!o.#l9b0iV?`+E*a^e<Wj:';6uG*HnMg`XPrbCR"k'$;<I@.%E4Bc)7@n34I*=LYoL0sXc)8N<<Q.EK;T5UJTe7mG@G%)YAVu^.B"VuL.T]'\Le'hn5;@p9pb.TtDE75g#\h;\Bj,Ms;Y1;'a')GM%9+6LnaKcP=LXTFg1Mk2g;</C7K,We5apKs"W8EDL8K6HLb`&Lc7K\0%gLEt;*tr%eN+7?aluW2:K`BZCo?H:<p!&!%J&Au;hu8"O%s%bX/=eO38VI$FWr:-rlrTA=>($._[4Md&)6IqW/H/=MAGr%8&Ri+6C%(:>>2tQXRRJ6*nLl-dAX2@iOjptTj3cc`b;:\d4Zpi<#%^tFIeKC7'U'THi2PGc9;`bYo>f._Us(q,egV6[JL[5M9X+lS$q!3<rod_YF,YXYgJ=[D[@K.E&)rOC+M4dO5Un:DYFol*T$O5sC#%OMR1i,4c'CXBgOMC!&MQ2a^S`7%\0"QC7_eBY\%3<W<2ESbB&JG1r1:a$uq$]No'*)jb$1E(QHg8t%_jc"f!tdhl1?%ZST15\S^l%W=tK\Z6T`g!ZcjdL>.&aN!`KF_uf$#!%c0(dr.ru=[]DK&S;WgS\YE(qIBIh@`uX?o0rM%7JdK8>mapc?7dX\U0m)&#\<"FTGp&4%g??it!"Su#7+sWk($[RACXqgZ=cncqB2?7550Jqd6#1"hl2VS#'hese(kU.i$r5*&@i3A->SECXQ6fFrW.^-7WISJ4*`=A>mJF3!%$@'h(d/Ufr^!>cJYP$XQ+V$t)eO$1"s&?ZPDGuR%;BN_#W/Y5>+0)lO?"Sr1'Dh+#O<JZi:PDU*rg<D"kc``m0Hr_*]Is+aFh;Tf%_P`,e(VZFu`=4=`bMu6Q8&2<Tk*^%cY`.p8?G-AT>_'#nY62t8UX_%HkAkaBkON7n=U;;@0biW)H5f%<p`[^G">@1K>ZoKL],ql'%4H,ss([O:;Dm]8FeS;&/J3E:WT/r_A\:0hkpZ].S\'p3ueIj]DrU$frQ/I:pY>Ehb?Rp&m9o=7s2L4TTZq5.;$SLHZrq7s)77,#)%]P[qaEMbjG@,.2-k))37XpcO!l+q@M%2X>;6sEb'0B7\t%WW%a&_W%HB-9g^M;HQTa;=MS#E*hq;E3%h@0hsYK#=cWEeGH(d7%Jp%aE9D0n5f1)(,*cAGq;9$>V#YsQDdNPItkO0qcn8.D-H"Ap$%\/Vb_BoC=!kr9gdXF2JQqIoOPUl(QQ$-gkDjWW/Lr_*Xj)Pp&o+<%Ti.I6,5/H96XsCJ?7_49$Oh,d0q75,Ie5\j=W6^?n?>gOW>M]1-019)SUln8;0,K]"dT>RG[V$0Jii0dY;8R&%de^95GA.Np0:bA%3.*g9S+Onn)oAYmD[l04c&$bH2L"`ZoJpeo$X=ju5kLYgj*2!M=O/fNl74!`hiN#>,HE;NI>.BNaa@F3JT5umNnKX6[Lpnu86a)&%r";Ff*&Do//[pgb3udK-RF0&a^6V7<b?6sI\Y=QV@G5G:'^Scs1,*bY&S2P51O.tNHR+maEd?1@okM-e&H,LUJTdITU$?gTKW'Z@%';o/3S)D;?i*$CX$lIcn'kIEF+cMo<#Y(^`4u*^^7Etug[cV))2,W7fKj\]Qr<0U!d*05&re\%V-jLd'%^C%ZDlW\C4NDX$aCA)M%#rO8?Nm&V5_TDR#\6+oFj2;L>:LGC63\#nNp%H;8H(mp)r_u[ZaOf8Y>JC`O<r7dD]'sLcrNo^)cOD6t]q.F.N@Visa5R@Q`4T7j%_;e*(:2.Uq"JVupBMd^`]RVk@FB!>qLPVHHnhLhW.j['=U*AeV#/gToHC:a/eD]d'=\0ca.RnhsM,+%f#lN_uZg\oQ-3U=cb@+5M%<PK#:)1)/(0NAiE4OPK^.e70UY>DC8^V!,78p)e(2T,^*3KpYC:Mo,)d)'1))Cu+dJT@i1p.R?_GeaUfjTba-5T!Xq!g*$[MmFcZ%f'RP="[U2#LhjnTEM7oOc52%J^(8-)0[n3IoQD(K$mH3NW3.OGVd9jcf"?)np^mX*j-LXX*1;8D+b3\KmBGX]:IV4[@YIpaY,&`N%64t=$l/*%Y(4L"C2f21J;mi$W0;hTbj$I^mj([q`+k."]_,3XrO6eADNGrefSjC:Li=)FgD7`-W+sIOF)6o[6J8kp/&7+jW(R!:N%!s)d8]d)r8*e(mB;=_7-eI1CT,l)mK-J1TS1N5mXJ2,J;N#2FJLSoqPGB5`-+S&L$BD<]i-P=l)=/bGlY8-eib_gX_AG3t-7:s)M%25FqO?'5W?[@)E!/8fi57)S,3775XT6jSMZa:FtH^1$LV%Y#9.s%+>\>KmPRV$9>pG,!TF[S>`J&C^+=Wgi:Q3+ao`7\Q/i&0].Y%%/C>ljP!N+o!85j<Mh/QXPM+Ye]&fZ`3R&"M8#Fp=`fd%:tKER.de+@'(OVqb_ar0b](Hd8CO#?#E`;BZiFuI#?:L/CYF-08>IO]%`L0h>MM(%k^GUZfMpe,_P9_\-Eh+1V:DHNJP?OfWDO)BXcGur>:?6k'QAu=qoisj!rsR]p=g?c%$,6S^>Y"_C`9=rT^!72fD=m]C%gcs5ZM]#5]V.oCRVK?5"Om`RZe%So?:S/I!>^cV4qs!_-\/s'^E2Z;@6E7;^+1Dc*aU7"kEja+=#0SbW=5!_o,,/8DY(AnBe:<UZ%U3YrBo7gI#/9_t<LS5a)X&Ja;;/\ssX(kFbY@jf&^Yr6*gKLUd4tlbT9H\-DgR4e[O8`7FkKkEVLZ6RbU7\-^dlpjh:R`-m>]'>e%qe=O7\/M_D=B:D2<DgHPJ;Hf:07.GBHr*Xt9^[[54Z$L)OqH3]jhWS$'20]'mZ1*];Wg2Eeil")J<*S%QcO;?,o)-%ebooqOURjt%?p9RjkN)L`oISp-XM+dPWJRh[QA6[rKmk%Cb-tL6I[7d=l-HbJ(F/>G/5NWcd_6s=0)XSqIc7qmcOK&5]q74/:$]V)3^XSpFif[g%Hd:[`,ogs9lpW_QUbXK#s-A!I!>F.4b"k[*N:/<N*nWT\*6>!l#W$H"IrT,1A'&^rkpP\=kSjTsKf'a1&K)JUQ%\Z-@l,l(oO';1%JO#G+=[3c\VPGsEp64B;46"2X;kchZZumOb[<X5Xj*1O,eaIug7^dSfg-48gDK"?$p3$0l4Ou^->[e9&Pf:Z2d8dFKNd/$PTpFjR%/Ss2?H_E>3eE$1Ki5`qo]aa#qZeK/3O.2>RHg>P:DI9lsnXH?lnPV5F&ti,-Vurp'k&&HA#[CE$<T,s)nLZBMUCM0'As8=.RItmJ%[ZBB.GR\8,hV\6kG.[^_IpP".oA+b+_L;6oEpIh9j!aUOI!%Id[Jl1S5P_JTGm,282t%3;rk%XR,?M=6A,^?`msNtI0Cum#r6=\7%k5"Cj3,!VuPX%%+k,U>4g()Yo\(;3kEj;!n6[Vq2$+!P=UC[(HK^&UTQ=QF!N94QD'Oe1`ITH^pjRTs3F<3%&h$p+SC&Pb.C/^I=%jEY)E%nJ/*s/r=Hmd>(^K)P\V8$p8e?RNd_o55-2=1>Hk*d4$:q9IaEh*13a`=GW#A(78/PGKOAor@Uqc!>7IfjJFDiiOr8JpSX.%,#_'0ge<=[V>nmGK?2iX7O`XEqYfjaUAaM*Fhm(q?414.?u+*71JmY?FVMgA[m$&ATjN:m%Li'cdmQX3h7]'P3WZB8hf]VD\f\fV%B=FSkSp$TdgKSSpGPeo)'L+,P$a`?7goT#PlN5YLm>cGRXcOu8A.UsC;3hPt-M'Atr8ji#Su,f`naG#nlUX,Z$.tuUWd7^,Zt..'%"B=6cc)%\?hA9-:eUo(#NmVl/+;spp!nBRGW]iR_dOdGD.B7O[3esh5Ip[<Q+-GkW<pMJ87WP'e!K=q;YrI5/^\7*AV0GXuO1c$R%Na&Hnf29n[#Q9b\'MF,Sl2W1bZdG-!.+Pj7cSXpbHhbsdpc;n]%^2)Wm<.-<^o/L4HDogA3M;rjl2[<W"_@M@[@tU(]C7^^H-\Gf%VDb(V,3HCr"G6]9D,gmn=Z!7?%H16.31bnA)aO3$p6()2SIVT5#3]*Y'LRNWe2(029HN&qCgZ15Bq$-Eo'\![MK5cbE2=mMgsJ,U%jMN!m"T#_02F13"*bp+h-N\4)3nMh\CS(`JDqsPGS%J]BY\:7ieZXZ,,:V\'NhOkNC?Y,`)@4Nj8'($niU5Q2\m!X^95$4k2>3OB%^DX,^e)>Rt%*:U;jbW?V)CufI^dG$KeV37S!S%[(S,u.7:)ef^iOW7;B0ku,fnTDPFh]t67]O]o!bhMJ)*?cBpAb7ZC03<be.=,m%&WoU`#:@eIO9:>U_R4+mYXbJJ4topb,V-`D$D&8_"$tgI5AI3n&Jt1.Ai\8V*l$`!3XrY@LR2UV2e(4&Z"5lM&qi:$BclHs_U,H_%l)8qJkkh7`9]7ddnnpKiKUBQ!\tFYH>OPG3p8\99PjiE)f3A_@s142AKmf8Kf+]@"HQG<N2!8K&PS0*uHAAeDXTh=,!EDh(Fq55S%lY'C$_B-mNICjQ9m*V=.4p3Xm?03sNL;5AP?31t^B&q\3`,fUu'XPr.<\AeZ%R2pMY!Yl&aCtK7#DcoZjk(i0M'EY3VuaP;#L<d/%O81Th271`#'0USA6C/$(dfps/1QZ($XU^am8HMqDfmd;Bf>m??M2cuQK*kEiZIE4a1_I)@llNu`"O3K^76r(rB1JU,-hU&0TbBC@%!,>C("@Z.2e64%TJ_%ZM,oK^f<R`&*Ps0\a#IW+LELVR]b=gS!d<^6\[JCIJS7<[5I("J_<-iK2^>DWk<bg<J];\0,76B=m@[a8#%WqTU&&7,RBeQ=SW@.p_0F_.VP#@1t)Fo]<5;=ZPf$32o87q:m6J8,;><G]=J)Z>&m5AQ7Cf!:?N-jqDEDKe(K!nCs*Mn0V0O4+1`%:C\)BEQZ)c.4O/F7W<fkoIc/&>@ds3]@.4efXP#'/HEMHcjuGs!Z[pHNZGS9X`dQ-1iFHqcN\Rj\>;GTRLG*oRt6_Zd+?:6#M7Zp%-l\KtW(Yl*=Vnc*Llb'qn[NC(nJ57&j&-X-gmRR_Dc+Nno>W(pC:S"i$=t=e](fFl$o-:D(X3KH,"B3.,mY4ghGr36;c?[B"9N?^%1`BJ!>L48ubm336J;R&1$1sN%GS`e@GNKb^G:6_-3,A.+%)koLB;"/nr=)k2%nsB-o0n<I!RV\F!7560+H+nQ?"$P>:@eP>Z8%5F%L!Y3.#WdaK6Bg\:gL8V<67qoaY^U83'og1A,lu+gO)8D[A5*e->0G,],dl2=Vnj/7$m`>K5;9/ug20>1l*0l=GaY9c+fn$#;mnI>%:P/M1G[;FW.Tr0]rXM2m@>t>B2p*%oeQUI$0NafTg`fY!GVOea40F.\1lQ#"P><:8BiH&4Drf@&+-'cr,HW%G\sf1B\o-0k_Ah:Y%-ju3_0<E$=(?h,LP=hB:3Y*<!\;@2Dg+D..i`-Fc]&Ajg^Y3]G=DRJ5MLt\%lkqtsZ4o-A_\3+4@'Uja.Ulg\[ahKH1a[Km?\1!B%kc3U<+WG-QiQXqPOMSg"P:W'J)/JZbolj@tJc3&?%qL2odbT9##dGIqhab"A5LS@Ap8F<aLJ*T7o^cs(Y+)8&'AR1q=0Gf\DmPto%33B4^lr4;nhm$o5?q2p)Nn))Mg\8<S5^m,Lg"7k&@!I%U2H=M#*S/JZ>n=O-Q9>R]Ja&D;>PYiNp0R(@QH'%GE2hl2@"B>B#AA`L%3UM%RN/I"$o5m'T>E04sc7Q$5U[7=B:?7OoRkOM$,'caK^iEd-)Ht6Y0DA)u=r[g3EW7:>nj:g<h,=V"U+4j/cdI(Cn*Rd]dQ'jS%DqAKnaFrcuEfDE'3+trlY1k33aaSFcV\\rAbOp;ZqiDomopSYV7>ZfqV@Jb-.pHAf7\V&!!"Mr:,i$<^V(ktHC'293VQ(7p7[;<T%<*H$40oK+]WkNQXe+fX]PM-X`Oh[mDV!^Ag`c!=cJN&mjEi3MEQVA?ZOAge0,C6S4MEVWPg4^/"m=A6]h78m^W?)-LA===6HCHQg%8>;gM\2..u`gL4<DFR?pTluVc1l\+1/.tgA`CNT)?kL4J:1GbNYsK4E0tNGqOgQ$=$1J%'HaDZDOY:-Rhe]t/k+4&jDDkptJ!-qF%fT$9mlk#?&Zn[]"-tfeR'.*+3]e)-X.`#`)fX?X*GMsb$Cg^eJ5$DdalPagPa'qsl9.7]sp.gjJ)^BBlkf<nq[[?W"O7M_Xj@?(j%P/T:L<4`NiioWQM;\d[=C8=!@C_rE`dI&C#R[`Vp9XK/)Mh=]&BT"BoN,HPP@m]6j^3NaNc&M\I"-[QED0=?i[@1-?:*Nio2n/8L%ZfrJ_:Rb\OmB&<[oCd;cT6(S&k.9Eh3^)9QPh[8;gXP%!juLD=@m-/fEPUb#/WT[4g7(;kGJN53c^h@p#Nh%M_?b5G/`DGp6^Oai%grW4]@da"qOCK>j,o/6Hcn/c`ce/q6RHJRH^s$l36u(l[?6VH%*`sUNj18=o7.XG^!_N"W=TV@iQ<F>go/9eS=S(+U`OY-m\:hc>%*P+Y``_F&JfB.e""Q@A6]u93uotJB:VA<9CIoBQ&0uBniQ<<.r5"j+>C8iL93ORNQ_OOeJ$$B#1\:d8J(;3.3Vm9S0XA^K"J_6s5%Q[nI&nOm86RK?+^Ga]%6TQln@90dck+LelPZrE@\oX&:t0_R2JQ>$$"O-Za>[%irNq6[Vs./UBpQ>$3'hj15>[.BUIrj2p^/ASJ/%f5/:-0A!;BYX@%/6WgC)P%#99CGKB:^MD8-(s-Q6AD#=G&nT_NCU.O(k%dk,f^N\I-;=@qa"oi02&A)3LG`^$4H)/,1d$mX#8I`l%R]79Tc'm'!rm*1d28#_hEbtMKCC4qR>\g3Rph";2DYS0dk3aD1pZ]T!!efg/gttgq=4-R##nRA4BAf#>lV6OOQ00kBk:TW<Cj/1_%fH"iA1.P22ah\Q?X/u6l#K@!q9T2ElSBu=;6S6.bLT>jUY*U1K"Ud?;<!-RilZY*`Y>GndSY6s$b:3`senQ-6U"X5bS^=tD)>1q'%AC:'<+Os26]hJRT]\.m;q`qAY-N:PERt7]SYMVq,]E\&6YZnK[Nk"Ig-/_*k@bELYTYZqs-U-TfS5R'R$o<N*b65+]c<EaTq3M`X%/Ta&9^ta60B=o^3RuRH<4Y4WeUTP$<U;P*-*4d#6bC,?G+h-s@5d`C\KY;+B6"pA'W8-#+]%Tij7=XrQ"p!LIR/^.epJ'b]CZp6U%0XX>=mi5tcOTh9*6eHh_8n95<<leX)kQkePpe!s!I1$'foah44jq=(DI-4HQ3o-,[Vm6XK4O2qr0R?l>A<Z!tQ5cH2#-DCGCH_k"%k3I6._TRt@W`f"0Nua(P3MNE]7j:m,e_R2BcLu9lMCPDBarZ>8W#e.ap!Ar[#N<b>)LEDW>n2&jd.4H5D#t:OZ$2`*,$c3>rYW4O%Y+IK5EL6!HB[#UPa1-R(]PM9m&@dK<ic7DD<+V--L:AC`1Mou32Ju(%2`gO!ofM]Vf2\,q0R"?-$fp\:fffa@^4%H:p*uJ\F4P9R%h3!?_)`+IK<q!e#]&=g^od\W$oDCY7C3@1YaL#*ThTb+kd-:4dA]$^fef%E`Cp#WRQ#;/b[:TM(KRdATP&%So8k_m8QBt=6=qG0!%Dp!iCbcAs'<N[q:-E0ma/*ja^jAtLAmbBL]O5Z4&3?BQ.flF`h0[8ms*cIP\fnA\]ILK2garf)Yh(G?WBJPk]#iEh9[IjTIN#94M%s)^NmG"\\qf]8B7'#1_+<Hn25<p.;OJ!K'LN$c)[onS*FmUT$G7J@VpK/^Jkk+ZnYB.c5XIcd3Lnaa?cDO9$]<9'Lo75`BT]MjfN%T'!?:Mu'"Q^8UM2i-4J`dI19tk$hfDNObDnF(='p(lp<%Ecr3SBUkX4$CYVjc3i!W5BoT>+^_=YH--q=D4^;[C[LO>>)g[E's0s%%YG0RC**:OY:&4!%//RG`p5TN%21*AtH"ZjM"T4kO97oarGN#NMm_bWQ7$XC$7$XC$7$XC$7$XC$7$X@#7$X@#7$[a6'%J)]i_\kr%&k&)QqH$.p)/U+086DoW)l"mCO?0e5\5/84:@=Md:,bJ@7TlkYkYn]K$ZaYNdT^[ackl<5b'Hu[_u=kJC[*biBEYgYJ8V=#)8/</%'O6?YbA7.CfDk*%huDY"s7YOb^\uu4hgGHBf6i&?lb=V\GNm60YF3#kJ,A&?55s*9IeCmNQTr4`cen][)h.Y8f1^YdlbC.4pEt=f%F#r*X0(n_eh<H4/[e8s@<A%Qrb4#KG)Lr@<BT37Og,5N>EPsgt_@184#dOM<np-.uY10E[0Ih,mge7qH^HV;#_ufqj:\SCuN5[J%%ML>cG"JcT]7HqpAp[o]Pfdk8RP7<lNMt6Y'pUT*EI2$dd\g!0`*%sF$'-VRB0)o(\/HCuD(7g*.pGacWk,Q`sOhbU^T*U^K(ahS:%_L!&'jRobsC(3`PpbHlZ?A&Z&ArIs,9R)_ETGSosY-DOVSlFn`?fT%?]C2f!-S)"ncVFJEGaHSG+U"<u8id,`Go[bJVF4;rCM/h<%LH>ZW.+CH_IF9<j6@*M@O1Ysm9T5:\FElYQ1CP9o?=:qsR5`PhO*9,co?S+Y+(`3)K1t31ab-<AI?>eJ-#nunCgihI1'J<kM\AmQ%1ZDpHLSSl`W,7M$L[CYS-3d#M'^^\-%b1T%VT,E7"gD9l"TY+Z2S6+-2XNS%Ao?'=fUeG"mfq(NWcM]hf0?S-i9[&$$E3*nAp]lV%RuPKXWl3rMe?hLdhdle&[Q2K](OEO02^ZSth&(2RDSi='1qIu%XL\t)PtFb/c4!QXc+iVqI(7-5M**9M;TqrJZRp9"EY]eoOf3Mi%X@)Q\L0XS!\Cq'KPZ$:>Q_7lSd8jTh0<-<ZTd'VSMQh.;U+>@Hc)UDEWeK&,=beTjB2*O_[S(Y4XT[\s'jlRV!L`s+g1S=s'S4^8%hNX0uIf\]$Y?$bfP-]64Ir2P\^)0P(5!3FB4;'bJdFgoIqRRSjS^6iWI(CB^H4/dg.N=C&eY#jiE\2K+(eQsBj4mIZYdmfL=kh"R%SII`Xnes)^O-(nMcDsV[PHn's:Rc".a#*/=447V0C8jhYae-n69KKcZLJhnj$D/ehQoSS$d(S2.+'t$a0@jPm1g@nAGiO5a[(`DN%B.3%[P97+7Rb$5M2EGD*6_Woij'7gaTKuG"XTFcD[1b\+7,W+Y-'9,jQq5S&?:5@%HlVSk(*Ua669Nj4&NJcuB!MIJOsJqKVOIg_%4%`8h:%aHrj;soec@%;@1Vj*1c-\*EFlK2AgTBim"AJ5FL*k]8(PVI`j6_6*&A*3c3N=eU)K#3MrtJd/;:F%4SgM#nW`&C_>B5L<%2nfo4%lD''V/Yg#cb2YY8<2+-bb2&F5=_Yp$oT2DI:u0s1Zf`4+^V)?"eH"if<b0.=hl$@-L0T>Q-AK/8dicge]>DmBhW>s0TTi-%C[&N#gPOGa6;?2C8ub=,;75WE2jZ>en4W9CF9orDZJ.p'B?=+&/GPgeG:6(2*bI$R*RL-AAJ^5>\8sGFqbq_B6=&5D?NE6*X^Ul/%AmPWVQnR'DjK5a-<5^$Ab_R1U26InsM,p6l(E5brkT5MZ)lqW[P&>&3k,ZWpXs8^5":8$dr.pFYYj[5[cH*GuB8*fB$Id67-G493%VSq\pP`!SS/])Pf_V*hWXFWY]Ce8&p$G^!XKToG<diHXD-<)Q$@oD!o:_R8Q&6KP[!\]R]n%6bS:?mN9!2f2his0@TB.'IRJh<J`%o,J[5""BKkMNBq3j\'l%#-I'pSX_h^i`3??=[D7]f4X,$,,i+GI#8g.?X-T9[3mobAZ6Xepb$/M;*seTm[d%uEk\+2L\B#cm_8Zu%8XY`r7=)>^kI;hO,a1[FWZW3*eXi#k9H^>6%Epe'=&C^%PJG@e8/q1;_BRr5.PVZF!U-K.]'gMg#kmJRB]c),@?>h*0cZ^PT@F?i%oPU1uL1*b;K6XKB"*0rFRNA2tVLl_626JM:79+V3%h1tCOlC`DY'%C"SF*?.LrK4K72^2%a;kn\`\oH_'37^aU)1GQ!UI#FjH\\c%#.;9EL9'X+<88PMQii:NHXe7\nT>bg#m(Tag7<FUj4Oq!>FrX0[<S^Z4mhJL1Mbnma?gW8OhUX)1/LpA-fRn.0Mk>.o`4\[h3X_6%RrB)*ZBfJ66*?kQdX)bpFY.Ga=(q2l\18sp2787a0Amep8]sG:k"SeLMc,-:p50QOD\ea8d-=6lkR%Gu7PG4H4O<O!821@a;n%pc%CZ5bi#Osg%ef>S:V[<2%9R7TbNY*n[J"i5K`Y6>rn*c1M$p0gu)Lb>n\K*E9VF\F__!r,Rk:g?t4AIa'Pj[sfQ0UDBC>';(`=s45%be>%'j0G+-/[cds<qG+\bI#p[P]5[L:;NN*nl8GXcq(K@apu]Ol04&I"f%Fm7JnWe/$l\-?Ku_0-(=0slJS75fQa61KP<\b8!A**%8X-RFmqY:(+!o\,RXnD,mCJ6$rM%0XX=WKLgcXbC]JJ/=*h4k+l\El\6u1>3:OHJ-R-Ze"0aMD.2]N$/otqm'b=hP>n%hf#L6tV:%B_kqPU5E#EY^JAJnFLZ.SiGD8kp?`dS<I$2P__'Lk39E?"%Aa2N@*DSfZ4Yc1tS<9W1$2AlX!')<L?$ZY/:_oPX9BeP05nt8#?>B%_&QBMp?2us/H3Ft4XL0)$^nM(:;-ss=!Vjc0;/7-Yf^sa\fu)rKY&R<'DiYGn,+Ap,RoYHnA\1a'%MPfVg/A_@6$FWI>8G]%OP#L%[l)cfSdHfao'0g^g4JE9-k$j85m^OM\aKO[#Qt3l-.YMP+4(Yq_Di$b9c'_;N\52FNg%Y8cR*ZEaEZ3SM"cj!KDdgj6\B\ReZ6>Q%,O2.3:K=/1@3k.'0:VSY"X<(LU]$B6:b;rX@!kWepXrLCgUC;)*eW+Zbjok8la-C+<0.Eh-5SD>i<8bcrjka3BI/VOd^6!)!lWFs%;.*0kIW/5uM_`.B(Me!A5E#kHht;!"Khf[@C+[mJ&->RX6h'`],fgGqe2uCFN*O,jeab^@!<oUs6&7B<!V*I,J9,ck!eM/=5Hu8*%]KY33[=oiEmNumParqaU6Y8Y@D'1aNU$rB'_E&u=JGch'pNrO(JG+sVjS/-HWhMbV.ibX4;mbVpqHcEqF3L%[L;GKr*&H_m,+dSQ%I-`D_KTo_uKgbl;`0Ufk@[=d?I$aT*MX^bY]dae3FTnJhlBAh7*E^2)Rr/ES/.>AP.4Ma[\VB1I,lR\pJ2b@<9(9F\hFiVPdS^_Y%XgG2)k5ZHVVpJYiV$,!B\?[k"[aTJZlF'3'-3HJig$7s8rt.nODd:qq.=N/oQaXduVCMd"^>VU6k'T]PF.P9_&I)'3E,ngh8sZEB%4k,C6h)>mq3]ku_JN1"4c.O&<Wf[0J/>37mTfnt!$C#fs$4:E$'/]2\#O[UHr9;`5H`H2@s1$UZ`U'<59FTuk=QXgg6?nk8E_rXQ%UZd*a)$pL:6)a_#*2]\>=:4ki9^Q:$6"jYeAg&uWk;*:rp#;AjVsEci)Z0=8`c`4Af7imm`cbR+??,?iRg/-iB9YLP<7`CRkiUT_%f*<C9A8cZe(/^g9%+oIShdeo^BS_d)faGuW,s7p@d@oODSIRt5GT!IW[f$iIMo\u=='N:H\\(^>^WahFrK,M,e!@_)Lpl#DF8\e`%r%nKo??b(r>cnun4:ho61:c-#:`=4uNU1O9b!@@sV;u&"@PV4*IacBf=+aY@CfS=uHZ$ZO5o]@c=.[ql@?g4k"rt-;o\/#i/bgkn%g%7c-YjrohlPM0'03YpCQ^'cMI9]hpcHpsg]9O1gH!XPnbkiWe.usqHT3l!fVd$[44CPjM?WWgG&4f$(/!$*RJ%2Yo\@M4:nm]ec%lcS6'T'+qP1R7(sU+9"ohfdk[4DJ!%>umO`N&S&_Puj/TGA=kb;</lBK'017!uG+>X752],h5[k'o1W/38]MOSh@[S-",t8G_CDR%0M8YG:L!Q=UQ&.7jM-FhF;S$ckSC^"%9:Xq..ELWPQS$_m?dO8Co5h%j`ul/*oSKnJ*JMNCc>[lV&e=!PF,@`qq8a&\gJ-sknV_P%GLmgI^K*qF)KCl47eX(Spa7+LR<kX+3:VYbRXF]_:-=*UXHOTO;;s+_FE.PCWp^Qnne#Jk:-@K25bW%lSW8>gI/]4)p=!'6>"JsN%MP3W.g%iQ"ike-Jh5D"55^$:.2,679Bjk6B][JZ5S)$p`pemi$#m^!Z@>)CsWRNYTr:rlj@,^@Xh#^brgKh>r*LkqigiE5DBI.S-%mk&oa7MO0eG<rg!=KuHCDPtihcYOqqlONBHUjh%B;FcFZ8@ZAKmG)*!Z`RSnmA]<32O+h8];mua\F+A;`$UEHm1%j$_.FZWQ4$j>%:oeTo3$@J?joiP%I-,."PJp1FS6.L%\Y\S'fT[+F8m5JS^E)9k-5R)k`d%M-7pc);ZaZhn!^nqap?8gR_O!3ea.*'M>0#^a`B@dF%>]"5s<Uc"=Xl_3WGoXODO3J6+-/0JAA4[)]mduWbJr>XaB:*qN14i+ceEr#X3C!&6V`ctQ(rGM0P_ear]b&!_K'.+dk#pQMl9pJT%^0`^6.Qpb1'K2*VEo#bP!(nWtLiLq/F'NrJpo%"MQ*Po9?%8=&=Kc-3?Ob5Zf<S,5g"/@Da<"Ag@@,G?[8uZ$.5b.cI]0&EL>^0g%NhUt#s%PdTb4*$L/^S'AhgV#5*clb\iD^c76G1OY%dqmFK7W9Z[dL56g>)BL]'*5;e>scBp7g8&U8E'lJiHNi:?X1UFP*31<dZs_%GQ"/6Y<E[uk4>R(@:XdO4=ViTU=\Mbo@gs82oePX`S+>VUK<]s[MI"C1.lrf^$&nL1O/H%\*Z$gfnbtg-W(<!#FBMgXMf741V$%K%C-`L>6d:NMN*RL2_rHS7c.>1[Frfi^j,28KV*=sVa!#l^ZKG*I6Gf(\57aRQ&ic7,H9.JEF5hb@Ht%/*V]ZI_h.IkTnJEPiWW/VA%3ii*k-cJf?+;84FJ^haP0psZFgMI0XJ*"$-^S@s[`R]=c#c:b#SBL\l.=50DJ_oeVn.bY[lP.mUV7K5`'sbp34XT83ZT9%0/8C%D%:o[cF<'K,UUB8BF4*&tb=&XXKZt'@fjG?M?F@WB$!#K%cX1H>GKa]pIaZ`^X[\-nPD3G-!e%MWqeo9<@dLsFCTWj=Z<RZ@QUBu`l%iS9B>\o6.2H^'gN2Kd)*J*#2mgg*5?WZopO2`;IhI+Ftf)qj6t:Bf&."+O4Dj\+G_)1"?EIQ@:oQ@<W:OMmP]d+GDl)i<kYo\N,/%F!^J+@rJl5YuI'8M-ZkS@$U+T]]U_3(!C%8lZaO)4uE*Ce\]H3g[nHcJU?72#6:1)=^R<`5(0H,!e#cp;6S`^?)doU\0t6p5,SZa%-@kG]3kiO4O2?j8X@0"jqW-8fSXkYoQXbEcPWc*r-2ggAX;pl*J@DH4(I^hof;SK#_sUOg:cD\"Qa_^e)l0?oN.Sh`H&aIbY0%V<%m89gQbOZ-(@KLlaDM.<"1N;r`p1s@N=+/_mIC`G%X"Js%jWl58T<h0Uq5mm2]?-7O57Foo<Y!Q>-&*RHbnkfF2-8)cLlC=$"DhN;%c$i$fgEO;1DV4"jfk:8b^QCZ13u&sVl-I,#pbl'u:KMmbXO]MtE+R%biW-GIJ1u-,b=7#oCj)#&c(,[*(@;-*RduW?Q5u_f2,hh)%G*XWH*ek"o?4@kl<.D?r!8[24f%%4'U7,T]UXl;@H\bWXGY'o"4K#de"^KaA8fR$j6hf3[@^ClLcYiaX,s6F<Wp$hoWY>taZ\?B=%km%!cht8q6a(6&^l$h[UGa1r^2!?QW.VPK11j>k)D,_P7gZ53P.%-crD3hcY(DqS>mC?u/'m28/Odm`:T:WL^`J(HA4L1Mu'^(uS%TTk@=QS'Rj@iuIrJukbJc0B&l36nHOkIBm+'kH-U6-%Og6>9$2eOiN[9@25pM-/Hs(KpTD#T:;W?1KJ"kfp:W;isP;=FDE@>^GZo%WuEgg(#1*Jg$-eJFEk!?DS&K])l6*<:F0Ncq9.WCd5SQh+0=<3Q#c0AKCZ-Ck03^%';IIJ@sae]8%G70'+iVXHSZd4abO(l'Ur(<%?ct0c6Ra6'&KMe2m_,R5ND9?m*%4,h^du6u6f)p'LJ+=@#td^?qW=LSA61BF),BB'XF2o)UgA%#\k^AV?;&lNZHpP2GU%PgE9A`3%D_%TB_VWYW'CJ[?MQ5M6Y2!9s@P`W`NTPcQfttT=`L\:H+K0W7kjT.uX[eFdrkXJGT,=uRiFGCKB)9a'i54G4;cB@I%<k[-6)9U,%13g<!cjj.\F#9JKfd-lX;UD_L&7CDn*14"6Xm<3;Z4X$.qB@(Ek8ee7MC<m3Q`.?+Wh\.D^QCZkA.MKepHUGmg]S@c3n9+fQ#"FJ%CUW05H:#Mca6]pY#/$=b?+jKnGld-&Nit%hqq+j.5K!6?.c,JT55'dN1=.7"94$F3gPUo7j_`FqHfXRME=c+Q_Vg4_fOKt;@R,Bd%CHD.R-q!<X(S$+1JP._S=&ar+C"tkhDsit*o-G$T?kgb;:[\7-<V"]!eD-$Do3#'Nq]"5K78JSnY^+oO&^DABcj>VGi'k(J%>>;[%7?@G.boMZabEitoN[?,Ve\9IU2^cJa7g7-\OP`+mcP%nBe"DPlP<X404fA1L'n41f+_Q3PSNuX?E=?]5]t&Tm:gE&JCRn9!JmH6W%UaELk\$g'cMY/_9F]jH-OGZWZA5@T(9-2;-I;ZH6)Wg=7/PT441ckL.PUUraG;<j$1D/$\H]/O%%`kI"S+?oof-nhZcD?OqMd"l6%+4!.=RJ&#q"#<oe8T+?'o+AMq\X)?6$XXo(B1^Xkiu(_nKFA#&L$@6uAdm,*VJ!XX_-s"bS<"A,,ddcrWN%gTc`^.ef@ID+*/IZp%f2elkn-)tup*p5X?XV]jHa(HSfjfBh,k(Fqe\Lu`,B%L2lam*!XGD't:OXqc`1I8oM2%,$NBBE1;^)ID`5fXm:id/E!4q1$,.^_(%gqa7;9V[]&$iW<Br7b$94:eI$Ip#uYd`6oT62SdEJ+_^G'(b6)`9rI5J6hVS,16`7YlTC*GOsZ7'7^\#5]8u$kc\=K884L%e-3XZ%Kk66;/S(MmD.WY08UCF]e[/L,5[e3$d?k\PF/)+D+<!Mr$rAJmTerFS&ll(X)[%>ca9A73ekQ=^MoX/L9Ape5/muGV.B.ja'Ejjm%4UVX(>lYWD]ufD%Y%9r9WZ)\GK#<af(Te$W<G9$s2A^BK7,GNu9Tc_L'C_:mE49AP5)7qjS6t&IiQ-)fmV0gid'$tE0"EF;;KlF+%PETF=X(mHOF3(pV=j"C2be8Fh<c@r(ZGVdt!p9n.^ir&t#<.3FeM-a7W!XF0295it9/7(=JA*[N4AIR[<GfZsI'TKs<JB@JI'WV/%OW=XQ[>_OlaLeouI'OX@[u'C2/668TIS6OU9sLK]7\_7&p0#EiKL#[\S*Go!Aeb4YR+r<3iPXcnUO+?rW*IGXj:`;6T:]@;eZ$&*%Bs+6UGf\T&5M=-HQckJ*)4sUh^SXT^+H_3(&es3oM_uUo!DElQa>e640J-eofaTeZ#$eC2$Pk?8"#UTWIW^a19>FqRaFk4eXQEE8%beSGIBTeZ!+qr7n,JKPt(dp\%&K'4tW;jKF-Ehc5lQIa5rY2]M:Dk1$&/GPZ_QmosJo-T%84H`9ZI:'IaH#S;Q]-?7PDL\<7hN1@%C<2#-+dr5@.Sp<@4"tX@*1ndhST-'$h0i*FPVIdGVuXoaYmr[I/&CFZDaSVKFI_G0+sR)fZ_N7KAQd*SiUW,qU.6![/<YQ>IG'[s%"Jd1k@]oiNH:W-*&-G^BaNR4@5^C]9HOhl5i!sYe#a#PnLT4TY*FISQ\P0C#^$VK7=":/6OJtfLC;^f=P#:89HeN.gaP?#R2"41K%$t<r!FggE%`P*`\b@X7p/7O7/7GHQ&LaJ46Q%?Vm`"s6]HY='0iZFRdBj-&3RLpE)gQ`o<6WC?T-,+HAQr*`FZqN4@#6/B.:ChHJ%!D$_=8BF\)aFqnV1,3o#X*'@S(:XRS@bLq+baWcXj+[u0./5Li]^8W%B7p7"oCuinlVqV*NdZ<GFZFTdl?o,mUekd(I2?$OR9.3R%L75*ETgEpg:br)M6;%?s^_*$?)O.2#,q(T[@(&>F+ej,&e=hGpmd\CV@!n5D$T1jm2$c4OnMm.jdY6gEOfT"hO4;/sHcM=.f['*0%Jp=<f+kJnA=h5JR&1A\`$[A=Dk\PNlZ50,`-b#.4<hE<5_T\X"q"bX"Ah<B/PE)T5ECeWicYFK&`]7R;\l@3'L71-8Q]Rc7O69g2%?5>OmDP7pYT+Y]"#RZumIn;l%:c!kmU6(3Nc8$Pk,3sBa<^@2):A-S1\S9ITU[.+<A96>#>CCt+nl*Vi&t6'/bm_f(_o?DD6?^Jn%Ygf*Zc&qZN'MYpm=$^'9TkKmQ@Ze&XC<_IY<W+&6#+M*?7)a3?nN.V%[0BomAVNm4e9t-QPBBeJ4)='"1KI3R\=jj;2ZP'9,_flu%dd]qND$i^QRQ(=Nh;e('d1hB=P'_3H:(q2=25+ndVM1i=cR>tX`+!ehiF5n9<JO79o-)#OYCgV"aI#i$H&hF:_D+L1[rZr&)I]YM%8`qJ-8#lEQ-0QBooJB0m>,HHdA@72=lkG0EQi"Q,eeNfdO6eXbN[[%93h^8m81gOPY&0j?$)lrrS6AjB8Tnt2!T+Y*Y%M;*:?cq!%&?4F&ZC^\B6?-%e'N8Is+ZiE1K?Rp\_=MJSU[&FZ9aQ<SJe[GVgRU%IiO]j^"PL9dQ*W4s_$3sU0Uf9kF+]k(5"(aFHqMoR'PX!Y%nM.;0A=P5^2%DAsEB\q`'_d`#,th:u>33WXoX?[Ep@6*_^Q8L'q:m`6oH=TE='b/R!R7/>+bH9o;&HeWHN=D(.%jTm@plDIFp6!&%[k,$=ONE3X?r7fa=YeZ7Xh"Vf120PS',cTAR<lZ1Q1,`l6cjlkdZ`4VRPrh_`'F(e3-38$hg?S.oYi:,*M_iSU*-P:6EW\\[V.u5%=iR0R80oFCoql\KHn`R>J5A/U#[+&'<e[Ci+&#lB8+B9f#\O6:LLq5ChI>SKic[a;:ijg[G]Y;XQUHMeObmu)16\-R2nI<g2@CuC%FC?;YCka2Y[@"!^10q5.VM*Pl)(37JADO^G,#O]SZbONsmk0b93)-fT5t2YO\2$@nLWnm7=9dN-T"8N!OkFd!b!&!"+R*"^h2$Xa%aZ3gc(@.j`PorWZOI9gJRUI]S7"fr<Y0jtmXIu_TY[^*Hi+Vi"faZRKZI4_uUm29)]Im1nPjukJPI;jJ.U+6$".;2.6e4Y1Q$lkj%9[n8c?I)F3IYGAZr5mJ@:]N`ad_'*RAEnTKbk/T^)#Vi<Tml`m&MB49UoMgg/;)[e;$jF'39=s[aL;SO/t$l7IJKdH0Igh6hWW0*%OsDEY2r?21j*F"gdXmQ03n'kRd'>4.l>mML,4]%C#V3mg'%,]r!\o.b_gNCr&d3m"NOUIN/[]Ft,TgCg@bWf4haF'DD>(Rn1OXHK%ik^[o_<`GefJkpe[La4IZ_iiW4i$';c"[hkXK<>1D9Hq)cN(<VY-(kY,/[MLFuCj?MKk?C`_%pq+t?U+ckK\r^S44oo7gfuC*p)?%Tp!qc-Ja%OaEhp+6<:!rjdPHUC*nlCA7msD45@E]2>7J]Q9g*9=k]"Xo?:dOS\GF4V4]$5,^%k^df^8\6@iC](JEd<k8o's[]V#o%k[-775)-1WD:5#tpJ0NQ'`g;UB!mFd>ZqMo`,5E'39$,8SsIKm;ARnSMgLJb_$dkbVoXOfPd7n6/DDoQ%=Diu&Xhj^&m0P4M`"X+%,3ut"k`;a\`T0Xs>-+D5O9lcS1-,-Z0BDU@lbI>7@JoWBWPU-*A%=>e`HA-XR1Atd=_8#=F:;i+ah$0h/mi'M9j.RcINL<TV>B?O%2F\iD2;r)#9n?!'!.F?B@/Y!nMkup!ORC3.m$268*0RBQ_4\ZO8C7EJ/NcM6%?`/Z<:F:XTso%\Pc7[TD7aBXoYC_@7SH]?4)\u(%loc.8q.*Ql.qKOr'VB4<^7uGl.%]LfR$qD\01pD@9ZCJ]e,Z'(*OkiHK.hh>*\e:3-F^f+LO$O"?CE@(_I3Rt,]<c=_BpokfEbHE%ATe&ao&PpulB;[h]`5FNk:'qdpLKV2[u*HuSioWb:#IMIl#<q88&6C5Z/nQ:-s;V:Z$ok*eeT6Z"R7qdnL<$_ObC43OF+Aq_]F"'%U8,;7p]u)+MU$du]6,(*.R.aPBWERWp3?`C'>f?4MH?dIfBPbHP,!uLKrj$5+BP(ZS=N(q:a4)iHAB?l^7Ztk$E=W6^b@$+NsO#)%9]Kiu=Tpk!feKRVN#uRZ+)Lb*"0jDI70']JL.o;V@4d,u2"4/!CCEJ"\d-[UB)<1.#JoKnnVXJu<D^cLgJoH07pD2QV<(utH^8Lq%c>YFj$R^16O-VOs>oksKVLQM"PaYMY7eP_0-@f&Fl^L8(320kE`4?G&OTt81g;f4m(s-.NeC%ge6RuE3h3PnEs!fJ"s%>#6]=HG0%'f,N7&_=:+TaP.)MiC_aAuLY&"r@H8k"%le1,R.r_b3+NE)`"n+RZ@&87bQk1m>s;e/Va]<\-LP$D^GjKQfRJF1S<S$,T+n,//X[%=Kmo*>)6AUh:Fji/]JiSY3O!6b]q]M1-ZuS'V[ZJLJ(WbOcApQh/kMb`dP%)k."CZd3V\F^`iqfOTio^ZDpP(c*j2''llj-2)@H@%;f7=2X;!iBkRUc0!NEM_9S$q%6?VT0A50jWAPe`R=I]&hQ9i]-=`glZo2a$`mm.&"1ri8NP[cW$@rNqBPA3(sm>3@tN'EtFi?eoR%)C,d'Wt28K(0j;n=$I^$C!$"T1k,lQ3FkT8;L<MAN&@XCCrbuJJWVP5/RqpAS5_H%Y%9LnNH$$a7;;tT[JNY,5l<RhK!TJLOpc#F%2gMKV!A_P@FH.?-!X--Ij,7h\!LGWq17Ys6+u1;H*Ku-hR<rWr'gB+s[loQMTa[Yt`=0+='\SoU<\]5D2!PmLDG%6GlVYuMpiKFT%<Wjs>kh)f&3.`bb@&>lTmM6slA3kp/X>BsBW*<jE=V]Tis"/u+%W9J8E"`D'g.]VpRu^[9b;)lHr4A"$;$[c1MW,iRj6<q%JD6N8%@Z(5ji$c0tGdGX?bVt`P/)Y@NDk_jCaAN"P$":i^,7t1Ym6`iTeql_(&sEL_P#a:=Fl9-3ia:so;ecWlaE7gf(-;^E[)5KJ"HCig%=ekd!feKaKI)LU*^j\dsl1]8?e=6]RI'm-?MlRDN?-ABtG3\2l@(ojeSC*A:DFi?9B-?[d;eLnt!JT,0\Z8%6HU&/H=ZJ8/7'V,D%)Qu+*r(i.YGoi!M+?PMS,$<&5H#*P/4GHP2X]-b'c5'#a0i!m.+=pH3&Xb\_OIa33%=UpSmmU?2La(bFK(-!</f_0/mFfOnG@n`U%>,K^_A?#m@9GgBpI9(-R^,a4c#2Rpl'A3qYP/qh>Yuea49KqFn-P4QjVVXS]p-WdkTO@PJ'E!sc"#RnR5Tb1_#ZmM_a):Vf;9=!q%.-Nh51O9HbE!8:5nM7A)FX/@E!kner`Q&q#>4Q28<2g0Afb&&*1l(PN2hWkQr!eHNp%anIKNVSCQ&$V=Mb"[hT0<f6OFi6:9DNdB%"$r#?guWo4:&lCBoY*U9/RQ8%BWH8_P3N+)6SK!S&"*`Mo3a&d>?AB<=Y%*kE4Xa'lE'';LbFa7NC_##Q\_YTo!>Q<D'mF@N<9b4%A-1OOFp*L:f^DRWad3]&D%BrgA7o`P?JR/i%)so9<$:*nH&Ts0eW9e"-&5/s/S)OEHnVo6?'i78*oAaCa!5BnX7>ndJb(IkA(J^F%#D;@k3nu?t'88.%niGQH-feA'#YnV[Z+OV(qPLSN*(::J"s^K(h%)r]<ID4mPm1BtST^D_Ecj#IVUc?RlVQmVR((jqD'KlLmn71K%Qug?kY40+a^rbOY'A^^,%h4j.qgnUPi3*(USq:[\Qp$bU^&GXdj5);qqr\LiqnmV"rl6Q_r0OAS"5ne5^MK]*rg=2n9S$IieUHse%q?a'eM!\)O2eC15+%Q9r*V#P3YJSmHkk-KXHooE!]XI+Gs0I.OVqXdKLH8sqHDpkB5Q4:ap;[u,^<:\C8%&)gB_:1Z+*qcP[X35(%B._E!U1:.dYGY4[]4foQk\eOmr)hjQM-J!r%]/(s`bTt'W%oB_k9aD&4Jg5_VsJ&V3PA(mpVdBn."*=g[L@JE/VBYCA^FBLEsMXr%<T+H!qBnE(RB2;1R=(([cSJE^irG,JBU3AG]&9co19GDO;!%8kH-P1Do#Hg]>t2dd^7T=RNnj=hjI,FB7m)9F)t<F1+$\UHa+aAD%a#ikobCGpa_(t$3QZL5l^\mV3I^aU]5B+gk]!@@l(3*KtI/E#Bbj-p3r0ZA)]$IsnSk:L0B:f@NnJ>mbH-\m)c]ib%7!d1DqFNa0%rUm_-COc&J5*HG"IqBeMrm#Z`I\2m7WNH1[YjEMj1%/^Ss/j7iqt-p"?iBQ1emJI5GQ7="Rt(>/qnMrr%psbXhnT!3\,Ysr2o#=h%mIq]OoD<J*hmX]Bq<g?$q<e3qrl`@>I/iU&Y7Z0Znb<(]]737irQ4j1='tp^J,:l@r]f8bU`'~>%AI9_PrivateDataEnd
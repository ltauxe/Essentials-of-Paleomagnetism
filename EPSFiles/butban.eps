%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: butban.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Lisa Tauxe
%%CreationDate: 1/4/09
%%BoundingBox: 0 0 384 344
%%HiResBoundingBox: 0 0 383.8779 343.0972
%%CropBox: 0 0 383.8779 343.0972
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 116 8%%BeginData: 8160 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD76FFA8527D7D5252FF7D7DA8FD76FF52527DA87D52527D5252FD%1BFFFD047DFD57FFA8FFFFFFA852FFFFFF7DFD16FFA8A87D7D527D275252%A8FD56FF7DFFFFFFA87DFFFFFF7DFD14FFA87D7D525252A8A87DFFFFA8FD%56FFA8FD04FF7DFFFFFF7DFD12FFA827525252A87DA87D7D525227FD57FF%7DFFFFFF7D7DFFFFFF7DFD12FFA8A8FF7DA87D7D525252A8A8FD58FFA87D%A87D5252A8A8FF52FD12FFA87D52275252527D7DFD5BFF7D5252FD047D52%2752FD13FF527D7D7DA8FD62FFA87DA8FD90FFFD707DA8FD0FFF527DFFFD%07A8AFA1A1FD20A87DFFFD13A8FF7DFD15A87DFD14A8FF7D7DFD0FFF52FD%0BFFC3FD63FF7DFD0FFF52A8FD6DFFA87DFD0FFF52FD0CFFCACAFD61FF7D%FD0EFFA852A8FD0BFFCAC3FD60FFA87DFD0FFF52FD0DFFCAFD61FF7DFD0F%FF7DA8FD0DFFCAFD35FFA8FD0BFFA8FD1DFFA87DFD0FFF52FD0EFFCAC3FD%2BFF7D7D52A8FFFF7DA8A8A8FFFFA87DFD07FFA8A8FD1DFF7DFD0FFF52A8%FD0EFFCACAFD2AFF7DF827527D527D277D527D525227525252275252527D%5227A8FD1AFFA87DFD0CFFA8A8FF52FD3BFF7D52527D527D7DA8A87DFFA8%527D527D527D5252527D527DA8FD1BFF7DFD08FFA8A87D7D277DFF52A8FD%0FFFCAC3FD2EFFA8FD06FFA8A8FFA8FFFFFFA8FFA8FD1DFFA87DFD08FFA8%277D527DA8FF52A8FD10FFC3CAFD5BFFA87DFD08FF7D27527DFFFFA852A8%FD11FFCAFD5BFFA87DFD09FFA8FD05FF52FD13FFC3CAFD5AFF7DFD0FFF7D%A8FD13FFBCFD59FFA87DFD0FFF52FD6EFFA87DFD0FFF52A8FD15FFBCFD57%FFA87DFD0FFF52FD16FFCAC3FD56FFA87DFD0FFF52A8FD17FFCAFD55FFA8%7DFD0FFF52FD19FFC3FD55FF7DFD0EFFA852A8FD18FFCAC3FD53FFA87DFD%0FFF52FD1BFFCAFD53FF7DFD0FFF7DA8FD1BFFBCCAFD50FFA87DFD0FFF52%FD1DFFCAFD50FFA87DFD0FFF52A8FD1DFFCAC3FD4EFFA87DFD0FFF52FD1F%FFC3CAFD4EFF7DFFFFFFA87DFD0AFF52A8FD1FFFCAFFCAFD4BFFA87DFFFF%FF522752FD09FF52FD21FFCAC3CAFD4AFFA87DFFFFFF7D277DFD08FFA87D%A8FD21FFCACAFD4AFFA87DFFFFFF7D52A8FD09FF52FD25FFC3FD49FF7DFF%FFFFA852A8FD09FF7DA8FD25FFC3FD47FFA87DFFFFFF7D7D7DFD09FF52FD%28FFCACAFD44FFA87DFFFFFF7D27A8FD09FF52A8FD27FFCAC3CAFD43FFA8%7DFFFFFF5252A8FD09FF52FD2BFFCACAFD42FF7DFFFFFFA852A8FD09FF52%A8FD2BFFBCCAFD40FFA87DFFFFFF7DA87DFD09FF52FD2FFFC3FD3FFF7DFF%FFFFA8277DFD08FFA852A8FD2EFFCABCFD3DFFA87DFFFFFF7D527DFD09FF%52FD32FFCACAFD3BFF7DFFFFFF7D277DFD09FF52A8FD31FFCAC3CAFD39FF%A87DFFFFFF52527DFD09FF52FD35FFCAC3CAFD36FFA87DFFFFFF7D27A8FD%09FF52A8FD35FFCAC3CAFD35FFA87DFFFFFFA8A8FD0AFF52FD39FFC3C3FD%34FF7DFFFFFD047DA8FD08FF52A8FD39FFCAFFCACAFD30FFA87DFFFFA8A8%A87DFD09FF52FD3DFFC3CAFD30FF7DFFFFFF7D277DFD08FFA852A8FD3DFF%CAFFBCCAFD2CFFA87DFFFFFFA87DA8FD09FF52FD41FFCAFFCAFD2BFF7DFF%FF52527D7DFD09FF7DA8FD42FFCAC3CACAFD27FFA87DFFFFA8A87D7DFD09%FF52FD46FFCABCCAFD26FF7DFFFFFD057DFD05FFA8FFFF52A8FD47FFCAFF%C3CAFD22FFA87DFFFFFF7DA8A8FFA8A87DA87D7DFFFF52FD4BFFC3FFCAFD%21FF7DFD04FFA8FFFF7D277D52A87DFFFF52A8FD4CFFCAC3FFCAFD1DFF7D%7DFFFFFF7D52A8FF7D5252A8FD04FF52FD50FFCABCCAFD1BFFA87DFFFF7D%5252A8FFFFA8A8A8FFFFFFA852A8FD51FFCAFFC3C3CAFD17FFA87DFFFFFF%527DA8FD09FF52FD55FFCAFFC3C3CAFD15FF7DFFFFA85252A8FD09FF52A8%FFA87DFFA8277DFFFFA8FD4DFFCAFFCAC3CAFD11FFA87DFFFFFF7D52277D%FD08FF52FFFFFF52FF7D7D27527D5227FD1BFFA8FD33FFCAFFFFC3CAFD0F%FF7DFFFFFF7D277D7DFD08FF52A8FFA852FF7D52A852527DA8FD1AFF277D%A8A8A8FFA8A87DFFA8FFFF7D7DFFFFFFA8FFA8A87DFFA8FD1FFFFD04CAC3%FD0BFFA87DFFFFFF7D52A8FD09FF52FFFFFFA8FD04FFA8A8FD1BFFA87D52%A8FD05527D277DFF7D527D527D27FD04527D277DFD22FFCACACAFFC3FD09%FF7DFFFFFF7D52A8FD09FF52A8FD07FFA8FFAEFD1AFFA8527D7D527DFD05%527DFF5252527D527DFD05527D7DFD25FFCACACAFFC3CAFD04FFA87DFFFF%FFA87DA8FD09FF52FD0AFFAE83FD1FFFA852A8FFA8FFFFFFA8FFA8FD33FF%C3FFCAC3CAAF7DFFFFFF52F87DFD08FFA87DA8FD0AFFA858FD1FFFA8FD3F%FFC3FFA87DFD04FF7D7DFD09FF52FD0CFFAE58AEFD60FF7DFFFFA8A87D52%FD09FF52A8FD0DFF5883FD5EFFA87DFFFFA87D7DA8FD09FF52FD0AFF7FA3%FFFFFF8383A8FD5AFFAE58837DFD0FFF52A8FD09FF4FF97FFFFFFFA88358%AEFD58FF58FFA87DFD0FFF52FD0BFF55F979FD05FF8383A8FD55FF83AEFF%FF7DFD0FFF52A8FD0BFF79F92BFD05FFA88358A8AEFD51FFA883FFFFA87D%FD0FFF52FD0DFFA92BF9A3FD06FF838383AEFD4EFFA883FFFF797F7DFD0E%FFA852A8A8527D277D527DFFFFA8FFFFFFA979F92B7FFD06FFAE838383A8%A8FD49FF835EA8FF2B250353FD0FFF52FFFF7D7DFFF8FF7DFF7D7DFD06FF%2BF94FA9FD07FFAE838383AEA8FD45FF8383FFFF7F25A9FF7DFD0FFF7DA8%A8277D527D527DFF7D27FD07FF7F4FF94F7FFD09FF83837D8383FFA8FD3D%FFAE8358AEFFFFA92555FFA87DFD0FFF52FD09FFA8FD0AFFA95525257FA9%FD09FFAEA8838383AE83FFA8FD35FFAEA88383A8FD04FF4F25FFFFA87DFD%0FFF52A8FD15FFA979F9254F7FA9FD0AFFAEA8A883837D8383A883A8FD2B%FFAE83A8588383AEFD05FF4FF9A9FFFFA87DFD0FFF52FD19FF7F79F94F2B%A37FFD0DFFAEAEA8FF838383AE838383FFAEFFAEFFAEFFA8FD13FFAEFFAE%FFAEFF838383AE83AEA8FD07FFA94FF9A9FD04FF7DFD0FFF52A8FD1BFFA3%552B25257955FD0FFFAEFFA8FFAE8383A8838383A8838358AE83A883AE83%A883AE83A883AE83A883AE588383A8FD0483A8FFA8FD09FF55F92BFD05FF%A87DFD0FFF52FD1FFFA97955252B552BA9FFFFA9FD17FFA8AEA8AEA8AEA8%AEA8AEA8AEA8AEA8AEA8AEFD11FF79252B7FFD07FF7DFD0EFFA852A8FD21%FFA9A37F55F92B252555A97F7F7FFD30FFA97F7FF925F97FA9FD07FFA87D%FD0FFF52FD29FF794F4F552B25557F797F7F7FA9FD25FFFD047F254F2B55%A9FD0BFF7DFD0FFF52A8FD2DFF7F554F554F552BF9557955555579FD0455%7FFD11FF7FFD04557955552BF94F552B55A9FD0DFFA87DFD0FFF52FD35FF%797955795579557955794F254F554F5555554F5555554F5555554F555525%2B7F5579557955797FFD13FF7DFD0FFF52A8FD3FFF7F7F797F557F797F55%7F797F557F797F557F79FD1BFFA87DFD0FFF52FD6FFF7DFD0FFF52A8FD0D%FFA8527DFFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD05FFA8FFA8FFA8%A87DA8A8FD3DFFA87DFD0FFF52FD0FFF7D7D7DA827FD055227FD0952277D%527D525227FD05527D7D52FD3DFF7DFD0EFFA852A8FD0DFF7D7D527D2752%525227527DA8275252527DA82752527D5252527D277D522752A87DA8527D%A8FD3BFFA87DFD0FFF52FD0FFFA8FFFFFF52A8FD04FF7DA8FFFFA8FD07FF%A8FF527DFD08FFA8FD3DFF7DFD0FFF7DA8FD6DFFA87DFD0FFF52FD6FFF7D%FD07FFA87D7D7DFF52A8FF52A8FD2BFFA8FD15FFA8FD15FFA8FD15FFA87D%FD07FF7D527D7D7D52A8FF52FD707DFD07FF7D27527DFFA8FFFFA87DA87D%7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87DA87DA87D7D7DA87D7D7D%A87D7D7DA87D7D7DA87DA87DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D%7D7DA87DA87DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7D%A87D7D7DA87D7D7DA87D7D7DA87D7D7DA87DFD08FFA8FFA8FD83FFA852FF%7D7DA8FD11FF52A8A87D7DFD11FF7D7DFFA87DFD11FFA87DA8FFA8FD11FF%A87DA8FF52A8FD11FF7DA8A852FD0CFF527D7D7D52A8FD10FF7D7D52FF52%A8FD10FFA87D52A82752FD11FF7D52A87D52FD11FFA8527D7D277DFD11FF%52A87D7D7DFD0BFF7D27A85252A8FD10FFA8527D7D52A8FD11FF52527D52%52FD11FF7D527D7D27A8FD10FFA852527D27A8FD11FF52527D52A8FD0FFF%A8FD15FFA8FD13FFA8FD15FFA8FFA8FD13FFA8FD15FFA8FFA8FDFCFFFD36%FFA8FD0DFFA8FD17FFA8FFFFFFA8FD50FFA8FD047DA8FF7D7DA87DA8FFFF%7DFFA8FFFF7DFD06FFA8A87DA8FFFFA8FFFFFF7DFFA8FFFFFFA8527DFFFF%7DFFFF7DFD4EFF5227277D7D7D2752275227A8FF2752527DFFFD0452277D%27522752F8A8FFFD045227527D527DFF7D7D52527D7D7D52A87DFD4DFF7D%5252A87D52527DA87D7D7DFF7DA852A8FF7D527D52A852527DA87D7D7DFF%7DFF527D7DFF52527DFF7DA8527D7DFF52527D7DFD53FFA8FD0DFFA8FFFF%A827A8FD08FFA8FFFFFFA8FFFF7D7DFFA8FFFFFFA87DA8FDFCFFFD24FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreateDate>2007-01-23T03:07:40Z</xap:CreateDate>
         <xap:ModifyDate>2009-01-04T23:03:02-08:00</xap:ModifyDate>
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>232</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA6AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq1JIkaN&#xA;JIwREBZ3Y0AA3JJOKsQ1T81/J1nDPJa3Emr/AFdPVlfT09WBV5cDzvGMdklG6h5gcVS7yv8AnNpX&#xA;mK8s7ey0XVGt7yea2/SyRRSackkMjx0+uLJ6UvNojx9D1Ox6Yq9BxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxViXn7QZ/MEmlaRHrOp6HHPLM8l3pFx9VuD6cJopcrIOPxdKe/&#xA;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</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
         <xap:MetadataDate>2009-01-04T23:03:02-08:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>792.000000</stDim:w>
            <stDim:h>612.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ComicSansMS</stFnt:fontName>
                  <stFnt:fontFamily>Comic Sans MS</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.00x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Comic Sans MS.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:InstanceID>uuid:CA6671F640DBDD119694C530E56F11B9</xapMM:InstanceID>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -343.097 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 343.097 li
383.878 343.097 li
383.878 0 li
cp
clp
[1 0 0 1 0 0 ]ct
1 lw
2 lc
0 lj
4 ml
[] 0 dsh
true sadj
40.7363 302.599 mo
40.7363 31.8789 li
375.536 31.8789 li
375.536 302.599 li
40.7363 302.599 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0.74902 0.678431 0.670588 0.901961 cmyk
@
3 lw
74.2163 224.625 mo
74.5513 225.748 li
74.8857 225.748 li
75.2207 225.748 li
75.5557 226.896 li
75.8901 226.896 li
76.2251 226.896 li
76.5601 226.896 li
76.8945 228.071 li
77.2295 228.071 li
77.5645 228.071 li
77.8989 228.071 li
78.2339 229.273 li
78.5688 229.273 li
78.9033 229.273 li
79.2383 229.273 li
79.5732 229.273 li
79.9077 230.504 li
80.2427 230.504 li
80.5776 230.504 li
80.9121 230.504 li
81.2471 230.504 li
81.582 231.766 li
81.9165 231.766 li
82.2515 231.766 li
82.5864 231.766 li
82.9209 231.766 li
83.2559 233.059 li
83.5908 233.059 li
83.9253 233.059 li
84.2603 233.059 li
84.5952 233.059 li
84.9297 234.387 li
85.2646 234.387 li
85.5996 234.387 li
85.9346 234.387 li
86.269 234.387 li
86.604 234.387 li
86.939 235.749 li
87.2734 235.749 li
87.6084 235.749 li
87.9434 235.749 li
88.2778 235.749 li
88.6128 235.749 li
88.9478 237.149 li
89.2822 237.149 li
89.6172 237.149 li
89.9521 237.149 li
90.2866 237.149 li
90.6216 237.149 li
90.9565 237.149 li
91.291 238.588 li
91.626 238.588 li
91.9609 238.588 li
92.2954 238.588 li
92.6304 238.588 li
92.9653 238.588 li
93.2998 238.588 li
93.6348 240.07 li
93.9697 240.07 li
94.3042 240.07 li
94.6392 240.07 li
94.9741 240.07 li
95.3086 240.07 li
95.6436 240.07 li
95.9785 240.07 li
96.313 241.595 li
96.6479 241.595 li
96.9829 241.595 li
97.3174 241.595 li
97.6523 241.595 li
97.9873 241.595 li
98.3218 241.595 li
98.6567 241.595 li
98.9917 241.595 li
99.3262 243.167 li
99.6611 243.167 li
99.9961 243.167 li
100.331 243.167 li
100.666 243.167 li
101 243.167 li
101.335 243.167 li
101.67 243.167 li
102.005 243.167 li
102.339 243.167 li
102.674 244.79 li
103.009 244.79 li
103.344 244.79 li
103.679 244.79 li
104.014 244.79 li
104.348 244.79 li
104.683 244.79 li
105.018 244.79 li
105.353 244.79 li
105.688 244.79 li
106.022 246.465 li
106.357 246.465 li
106.692 246.465 li
107.027 246.465 li
107.361 246.465 li
107.696 246.465 li
108.031 246.465 li
108.366 246.465 li
108.701 246.465 li
109.036 246.465 li
109.37 246.465 li
109.705 246.465 li
110.04 248.198 li
110.375 248.198 li
110.709 248.198 li
111.044 248.198 li
111.379 248.198 li
111.714 248.198 li
112.049 248.198 li
112.383 248.198 li
112.718 248.198 li
113.053 248.198 li
113.388 248.198 li
113.723 248.198 li
114.058 248.198 li
114.392 249.991 li
114.727 249.991 li
115.062 249.991 li
115.396 249.991 li
115.731 249.991 li
116.066 249.991 li
116.401 249.991 li
116.736 249.991 li
117.071 249.991 li
117.406 249.991 li
117.74 249.991 li
118.075 249.991 li
118.41 249.991 li
118.745 249.991 li
119.08 251.848 li
119.415 251.848 li
119.749 251.848 li
120.084 251.848 li
120.419 251.848 li
120.753 251.848 li
121.088 251.848 li
121.423 251.848 li
121.758 251.848 li
122.093 251.848 li
122.428 251.848 li
122.762 251.848 li
123.097 251.848 li
123.432 251.848 li
123.767 251.848 li
124.102 251.848 li
124.437 251.848 li
124.771 253.777 li
125.106 253.777 li
125.441 253.777 li
125.775 253.777 li
126.11 253.777 li
126.445 253.777 li
126.78 253.777 li
127.115 253.777 li
127.45 253.777 li
127.784 253.777 li
128.119 253.777 li
128.454 253.777 li
128.789 253.777 li
129.124 253.777 li
129.458 253.777 li
129.793 253.777 li
130.128 253.777 li
130.463 253.777 li
130.797 255.781 li
131.132 255.781 li
131.467 255.781 li
131.802 255.781 li
132.137 255.781 li
132.472 255.781 li
132.806 255.781 li
133.141 255.781 li
133.476 255.781 li
133.811 255.781 li
134.146 255.781 li
134.48 255.781 li
134.815 255.781 li
135.15 255.781 li
135.485 255.781 li
135.819 255.781 li
136.154 255.781 li
136.489 255.781 li
136.824 255.781 li
137.159 255.781 li
137.494 255.781 li
137.828 257.867 li
138.163 257.867 li
138.498 257.867 li
138.833 257.867 li
139.167 257.867 li
139.502 257.867 li
139.837 257.867 li
140.172 257.867 li
140.507 257.867 li
140.841 257.867 li
141.176 257.867 li
141.511 257.867 li
141.846 257.867 li
142.181 257.867 li
142.516 257.867 li
142.85 257.867 li
143.185 257.867 li
143.52 257.867 li
143.854 257.867 li
144.189 257.867 li
144.524 257.867 li
144.859 257.867 li
145.194 257.867 li
145.529 257.867 li
145.863 257.867 li
146.198 260.042 li
146.533 260.042 li
146.868 260.042 li
147.203 260.042 li
147.538 260.042 li
147.873 260.042 li
148.207 260.042 li
148.542 260.042 li
148.877 260.042 li
149.211 260.042 li
149.546 260.042 li
149.881 260.042 li
150.216 260.042 li
150.551 260.042 li
150.886 260.042 li
151.22 260.042 li
151.555 260.042 li
151.89 260.042 li
152.225 260.042 li
152.56 260.042 li
152.895 260.042 li
153.229 260.042 li
153.564 260.042 li
153.899 260.042 li
154.233 260.042 li
154.568 260.042 li
154.903 260.042 li
155.238 260.042 li
155.573 260.042 li
155.908 262.313 li
156.242 262.313 li
156.577 262.313 li
156.912 262.313 li
157.247 262.313 li
157.582 262.313 li
157.917 262.313 li
158.251 262.313 li
158.586 262.313 li
158.921 262.313 li
159.255 262.313 li
159.59 262.313 li
159.925 262.313 li
160.26 262.313 li
160.595 262.313 li
160.93 262.313 li
161.264 262.313 li
161.599 262.313 li
161.934 262.313 li
162.269 262.313 li
162.604 262.313 li
162.938 262.313 li
163.273 262.313 li
163.608 262.313 li
163.943 262.313 li
164.277 262.313 li
164.612 262.313 li
164.947 262.313 li
165.282 262.313 li
165.617 262.313 li
165.952 262.313 li
166.286 262.313 li
166.621 262.313 li
166.956 262.313 li
167.291 262.313 li
167.625 264.69 li
167.96 264.69 li
168.295 264.69 li
168.63 264.69 li
168.965 264.69 li
169.299 264.69 li
169.634 264.69 li
169.969 264.69 li
170.304 264.69 li
170.639 264.69 li
170.974 264.69 li
171.308 264.69 li
171.643 264.69 li
171.978 264.69 li
172.313 264.69 li
172.647 264.69 li
172.982 264.69 li
173.317 264.69 li
173.652 264.69 li
173.987 264.69 li
174.321 264.69 li
174.656 264.69 li
174.991 264.69 li
175.326 264.69 li
175.661 264.69 li
175.996 264.69 li
176.33 264.69 li
176.665 264.69 li
177 264.69 li
177.335 264.69 li
177.669 264.69 li
178.004 264.69 li
178.339 264.69 li
178.674 264.69 li
179.009 264.69 li
179.344 264.69 li
179.678 264.69 li
180.013 264.69 li
180.348 264.69 li
180.683 264.69 li
181.018 264.69 li
181.353 264.69 li
181.687 264.69 li
182.022 264.69 li
182.357 267.182 li
182.691 267.182 li
183.026 267.182 li
183.361 267.182 li
183.696 267.182 li
184.031 267.182 li
184.366 267.182 li
184.7 267.182 li
185.035 267.182 li
185.37 267.182 li
185.705 267.182 li
186.04 267.182 li
186.375 267.182 li
186.709 267.182 li
187.044 267.182 li
187.379 267.182 li
187.713 267.182 li
188.048 267.182 li
188.383 267.182 li
188.718 267.182 li
189.053 267.182 li
189.388 267.182 li
189.722 267.182 li
190.057 267.182 li
190.392 267.182 li
190.727 267.182 li
191.062 267.182 li
191.396 267.182 li
191.731 267.182 li
192.066 267.182 li
192.401 267.182 li
192.735 267.182 li
193.07 267.182 li
193.405 267.182 li
193.74 267.182 li
194.075 267.182 li
194.41 267.182 li
194.744 267.182 li
195.079 267.182 li
195.414 267.182 li
195.749 267.182 li
196.083 267.182 li
196.418 267.182 li
196.753 267.182 li
197.088 267.182 li
197.423 267.182 li
197.757 267.182 li
198.092 267.182 li
198.427 267.182 li
198.762 267.182 li
199.097 267.182 li
199.432 267.182 li
199.766 267.182 li
200.101 267.182 li
200.436 267.182 li
200.771 267.182 li
201.105 267.182 li
201.44 267.182 li
201.775 267.182 li
202.11 269.803 li
202.445 269.803 li
202.779 269.803 li
203.114 269.803 li
203.449 269.803 li
203.784 269.803 li
204.119 269.803 li
204.453 269.803 li
204.788 269.803 li
205.123 269.803 li
205.458 269.803 li
205.793 269.803 li
206.127 269.803 li
206.463 269.803 li
206.797 269.803 li
207.132 269.803 li
207.467 269.803 li
207.802 269.803 li
208.137 269.803 li
208.471 269.803 li
208.807 269.803 li
209.141 269.803 li
209.476 269.803 li
209.811 269.803 li
210.145 269.803 li
210.48 269.803 li
210.814 269.803 li
211.149 269.803 li
211.484 269.803 li
211.819 269.803 li
212.154 269.803 li
212.488 269.803 li
212.824 269.803 li
213.158 269.803 li
213.493 269.803 li
213.828 269.803 li
214.162 269.803 li
214.498 269.803 li
214.832 269.803 li
215.167 269.803 li
215.502 269.803 li
215.837 269.803 li
216.172 269.803 li
216.506 269.803 li
216.842 269.803 li
217.176 269.803 li
217.511 269.803 li
217.846 269.803 li
218.18 269.803 li
218.516 269.803 li
218.85 269.803 li
219.185 269.803 li
219.52 269.803 li
219.854 269.803 li
220.189 269.803 li
220.523 269.803 li
220.859 269.803 li
221.193 269.803 li
221.528 269.803 li
221.863 269.803 li
222.197 269.803 li
222.533 269.803 li
222.867 269.803 li
223.202 269.803 li
223.537 269.803 li
223.872 269.803 li
224.207 269.803 li
224.541 269.803 li
224.877 269.803 li
225.211 269.803 li
225.546 269.803 li
225.881 269.803 li
226.215 269.803 li
226.551 269.803 li
226.885 269.803 li
227.22 269.803 li
227.555 269.803 li
227.89 269.803 li
228.225 269.803 li
228.559 269.803 li
228.895 269.803 li
229.229 269.803 li
229.563 269.803 li
229.898 269.803 li
230.232 269.803 li
230.568 269.803 li
230.902 269.803 li
231.237 269.803 li
231.572 269.803 li
231.907 269.803 li
232.242 269.803 li
232.576 269.803 li
232.912 269.803 li
233.246 269.803 li
233.581 269.803 li
233.916 269.803 li
234.251 269.803 li
234.586 269.803 li
234.92 269.803 li
235.255 272.566 li
235.59 272.566 li
235.925 272.566 li
236.26 272.566 li
236.594 272.566 li
236.93 272.566 li
237.264 272.566 li
237.599 272.566 li
237.934 272.566 li
238.269 272.566 li
238.604 272.566 li
238.938 272.566 li
239.273 272.566 li
239.607 272.566 li
239.942 272.566 li
240.277 272.566 li
240.611 272.566 li
240.947 272.566 li
241.281 272.566 li
241.616 272.566 li
241.951 272.566 li
242.286 272.566 li
242.621 272.566 li
242.955 272.566 li
243.291 272.566 li
243.625 272.566 li
243.96 272.566 li
244.295 272.566 li
244.629 272.566 li
244.965 272.566 li
245.299 272.566 li
245.634 272.566 li
245.969 272.566 li
246.304 272.566 li
246.639 272.566 li
246.973 272.566 li
247.309 272.566 li
247.643 272.566 li
247.978 272.566 li
248.313 272.566 li
248.646 272.566 li
248.982 272.566 li
249.316 272.566 li
249.651 272.566 li
249.986 272.566 li
250.321 272.566 li
250.656 272.566 li
250.99 272.566 li
251.326 272.566 li
251.66 272.566 li
251.995 272.566 li
252.33 272.566 li
252.664 272.566 li
253 272.566 li
253.334 272.566 li
253.669 272.566 li
254.004 272.566 li
254.339 272.566 li
254.674 272.566 li
255.008 272.566 li
255.344 272.566 li
255.678 272.566 li
256.013 272.566 li
256.348 272.566 li
256.682 272.566 li
257.018 272.566 li
257.352 272.566 li
257.687 272.566 li
258.021 272.566 li
258.356 272.566 li
258.691 272.566 li
259.025 272.566 li
259.361 272.566 li
259.695 272.566 li
260.03 272.566 li
260.365 272.566 li
260.699 272.566 li
261.035 272.566 li
261.369 272.566 li
261.704 272.566 li
262.039 272.566 li
262.374 272.566 li
262.709 272.566 li
263.043 272.566 li
263.379 272.566 li
263.713 272.566 li
264.048 272.566 li
264.383 272.566 li
264.718 272.566 li
265.053 272.566 li
265.387 272.566 li
265.722 272.566 li
266.057 272.566 li
266.392 272.566 li
266.727 272.566 li
267.061 272.566 li
267.396 272.566 li
267.73 272.566 li
268.065 272.566 li
268.4 272.566 li
268.735 272.566 li
269.07 272.566 li
269.404 272.566 li
269.74 272.566 li
270.074 272.566 li
270.409 272.566 li
270.744 272.566 li
271.078 272.566 li
271.414 272.566 li
271.748 272.566 li
272.083 272.566 li
272.418 272.566 li
272.753 272.566 li
273.088 272.566 li
273.422 272.566 li
273.758 272.566 li
274.092 272.566 li
274.427 272.566 li
274.762 272.566 li
275.096 272.566 li
275.432 272.566 li
275.766 272.566 li
276.101 272.566 li
276.436 272.566 li
276.771 272.566 li
277.105 272.566 li
277.439 272.566 li
277.775 272.566 li
278.109 272.566 li
278.444 272.566 li
278.779 272.566 li
279.113 272.566 li
279.449 272.566 li
279.783 272.566 li
280.118 272.566 li
280.453 272.566 li
280.788 272.566 li
281.123 272.566 li
281.457 272.566 li
281.793 272.566 li
282.127 272.566 li
282.462 272.566 li
282.797 272.566 li
283.131 272.566 li
283.467 272.566 li
283.801 272.566 li
284.136 272.566 li
284.471 272.566 li
284.806 272.566 li
285.141 272.566 li
285.475 272.566 li
285.811 272.566 li
286.145 272.566 li
286.479 272.566 li
286.814 272.566 li
287.148 272.566 li
287.484 272.566 li
287.818 272.566 li
288.153 272.566 li
288.488 272.566 li
288.823 272.566 li
289.158 272.566 li
289.492 272.566 li
289.828 272.566 li
290.162 272.566 li
290.497 269.803 li
290.832 269.803 li
291.166 269.803 li
291.502 269.803 li
291.836 269.803 li
292.171 269.803 li
292.506 269.803 li
292.841 269.803 li
293.176 269.803 li
293.51 269.803 li
293.846 269.803 li
294.18 269.803 li
294.515 269.803 li
294.85 269.803 li
295.185 269.803 li
295.52 269.803 li
295.854 269.803 li
296.188 269.803 li
296.523 269.803 li
296.858 269.803 li
297.193 269.803 li
297.527 269.803 li
297.863 269.803 li
298.197 269.803 li
298.532 269.803 li
298.867 269.803 li
299.202 269.803 li
299.537 269.803 li
299.871 269.803 li
300.207 269.803 li
300.541 269.803 li
300.876 269.803 li
301.211 269.803 li
301.545 269.803 li
301.881 269.803 li
302.215 269.803 li
302.55 269.803 li
302.885 269.803 li
303.22 269.803 li
303.555 269.803 li
303.889 269.803 li
304.225 269.803 li
304.559 269.803 li
304.894 269.803 li
305.229 269.803 li
305.563 269.803 li
305.898 269.803 li
306.232 269.803 li
306.567 269.803 li
306.902 269.803 li
307.237 269.803 li
307.572 269.803 li
307.906 269.803 li
308.242 269.803 li
308.576 269.803 li
308.911 269.803 li
309.246 269.803 li
309.58 269.803 li
309.916 269.803 li
310.25 269.803 li
310.585 269.803 li
310.92 269.803 li
311.255 269.803 li
311.59 269.803 li
311.924 269.803 li
312.26 269.803 li
312.594 269.803 li
312.929 269.803 li
313.264 269.803 li
313.598 269.803 li
313.934 269.803 li
314.268 269.803 li
314.603 269.803 li
314.938 269.803 li
315.272 269.803 li
315.607 269.803 li
315.941 269.803 li
316.277 267.182 li
316.611 267.182 li
316.946 267.182 li
317.281 267.182 li
317.615 267.182 li
317.951 267.182 li
318.285 267.182 li
318.62 267.182 li
318.955 267.182 li
319.29 267.182 li
319.625 267.182 li
319.959 267.182 li
320.295 267.182 li
320.629 267.182 li
320.964 267.182 li
321.299 267.182 li
321.633 267.182 li
321.969 267.182 li
322.303 267.182 li
322.638 267.182 li
322.973 267.182 li
323.308 267.182 li
323.643 267.182 li
323.977 267.182 li
324.313 267.182 li
324.646 267.182 li
324.981 267.182 li
325.316 267.182 li
325.651 267.182 li
325.986 267.182 li
326.32 267.182 li
326.655 267.182 li
326.99 267.182 li
327.325 267.182 li
327.66 267.182 li
327.994 267.182 li
328.33 267.182 li
328.664 267.182 li
328.999 264.69 li
329.334 264.69 li
329.669 264.69 li
330.004 264.69 li
330.338 264.69 li
330.674 264.69 li
331.008 264.69 li
331.343 264.69 li
331.678 264.69 li
332.012 264.69 li
332.348 264.69 li
332.682 264.69 li
333.017 264.69 li
333.352 264.69 li
333.687 264.69 li
334.021 264.69 li
334.355 264.69 li
334.691 264.69 li
335.025 264.69 li
335.36 264.69 li
335.695 264.69 li
336.029 264.69 li
336.365 264.69 li
336.699 264.69 li
337.034 264.69 li
337.369 264.69 li
337.704 262.313 li
338.039 262.313 li
338.373 262.313 li
338.709 262.313 li
339.043 262.313 li
339.378 262.313 li
339.713 262.313 li
340.047 262.313 li
340.383 262.313 li
340.717 262.313 li
341.052 262.313 li
341.387 262.313 li
341.722 262.313 li
342.057 262.313 li
342.391 262.313 li
342.727 262.313 li
343.061 262.313 li
343.396 262.313 li
343.73 262.313 li
344.064 260.042 li
344.4 260.042 li
344.734 260.042 li
345.069 260.042 li
345.404 260.042 li
345.739 260.042 li
346.074 260.042 li
346.408 260.042 li
346.744 260.042 li
347.078 260.042 li
347.413 260.042 li
347.748 260.042 li
348.082 260.042 li
348.418 260.042 li
348.752 257.867 li
349.087 257.867 li
349.422 257.867 li
349.757 257.867 li
350.092 257.867 li
350.426 257.867 li
350.762 257.867 li
351.096 257.867 li
351.431 257.867 li
351.766 257.867 li
352.101 257.867 li
352.436 257.867 li
352.77 255.781 li
353.104 255.781 li
353.439 255.781 li
353.774 255.781 li
354.109 255.781 li
354.443 255.781 li
354.779 255.781 li
355.113 255.781 li
355.448 255.781 li
355.783 253.777 li
356.118 253.777 li
356.453 253.777 li
356.787 253.777 li
357.122 253.777 li
357.457 253.777 li
357.792 253.777 li
358.127 251.848 li
358.461 251.848 li
358.797 251.848 li
359.131 251.848 li
359.466 251.848 li
359.801 251.848 li
360.136 249.991 li
360.471 249.991 li
360.805 249.991 li
361.141 249.991 li
361.475 249.991 li
361.81 249.991 li
362.145 248.198 li
362.479 248.198 li
362.814 248.198 li
363.148 248.198 li
363.483 246.465 li
363.818 246.465 li
364.153 246.465 li
364.488 246.465 li
364.822 244.79 li
365.158 244.79 li
365.492 244.79 li
365.827 243.167 li
366.162 243.167 li
366.496 243.167 li
366.832 241.595 li
367.166 241.595 li
367.501 240.07 li
367.836 240.07 li
368.171 240.07 li
368.506 238.588 li
368.84 237.149 li
369.176 237.149 li
369.51 237.149 li
369.845 237.149 li
370.18 237.149 li
370.514 237.149 li
370.85 237.149 li
371.184 237.149 li
371.519 237.149 li
371.854 237.149 li
372.188 237.149 li
372.523 237.149 li
372.857 237.149 li
373.193 237.149 li
373.527 237.149 li
373.862 238.588 li
374.197 238.588 li
374.531 238.588 li
374.867 238.588 li
375.201 238.588 li
0.882353 0.768627 0 0 cmyk
@
1 lw
74.2163 210.204 mo
74.5513 211.048 li
74.8857 211.048 li
75.2207 211.048 li
75.5557 211.907 li
75.8901 211.907 li
76.2251 212.78 li
76.5601 212.78 li
76.8945 212.78 li
77.2295 213.668 li
77.5645 213.668 li
77.8989 213.668 li
78.2339 213.668 li
78.5688 214.573 li
78.9033 214.573 li
79.2383 214.573 li
79.5732 215.495 li
79.9077 215.495 li
80.2427 215.495 li
80.5776 216.432 li
80.9121 216.432 li
81.2471 216.432 li
81.582 216.432 li
81.9165 217.387 li
82.2515 217.387 li
82.5864 217.387 li
82.9209 217.387 li
83.2559 218.36 li
83.5908 218.36 li
83.9253 218.36 li
84.2603 218.36 li
84.5952 219.352 li
84.9297 219.352 li
85.2646 219.352 li
85.5996 219.352 li
85.9346 220.364 li
86.269 220.364 li
86.604 220.364 li
86.939 220.364 li
87.2734 221.397 li
87.6084 221.397 li
87.9434 221.397 li
88.2778 221.397 li
88.6128 221.397 li
88.9478 222.45 li
89.2822 222.45 li
89.6172 222.45 li
89.9521 222.45 li
90.2866 222.45 li
90.6216 223.526 li
90.9565 223.526 li
91.291 223.526 li
91.626 223.526 li
91.9609 223.526 li
92.2954 223.526 li
92.6304 224.625 li
92.9653 224.625 li
93.2998 224.625 li
93.6348 224.625 li
93.9697 224.625 li
94.3042 225.748 li
94.6392 225.748 li
94.9741 225.748 li
95.3086 225.748 li
95.6436 225.748 li
95.9785 225.748 li
96.313 226.896 li
96.6479 226.896 li
96.9829 226.896 li
97.3174 226.896 li
97.6523 226.896 li
97.9873 226.896 li
98.3218 226.896 li
98.6567 228.071 li
98.9917 228.071 li
99.3262 228.071 li
99.6611 228.071 li
99.9961 228.071 li
100.331 228.071 li
100.666 228.071 li
101 229.273 li
101.335 229.273 li
101.67 229.273 li
102.005 229.273 li
102.339 229.273 li
102.674 229.273 li
103.009 229.273 li
103.344 230.504 li
103.679 230.504 li
104.014 230.504 li
104.348 230.504 li
104.683 230.504 li
105.018 230.504 li
105.353 230.504 li
105.688 230.504 li
106.022 231.766 li
106.357 231.766 li
106.692 231.766 li
107.027 231.766 li
107.361 231.766 li
107.696 231.766 li
108.031 231.766 li
108.366 231.766 li
108.701 231.766 li
109.036 233.059 li
109.37 233.059 li
109.705 233.059 li
110.04 233.059 li
110.375 233.059 li
110.709 233.059 li
111.044 233.059 li
111.379 233.059 li
111.714 233.059 li
112.049 234.387 li
112.383 234.387 li
112.718 234.387 li
113.053 234.387 li
113.388 234.387 li
113.723 234.387 li
114.058 234.387 li
114.392 234.387 li
114.727 234.387 li
115.062 234.387 li
115.396 235.749 li
115.731 235.749 li
116.066 235.749 li
116.401 235.749 li
116.736 235.749 li
117.071 235.749 li
117.406 235.749 li
117.74 235.749 li
118.075 235.749 li
118.41 235.749 li
118.745 235.749 li
119.08 237.149 li
119.415 237.149 li
119.749 237.149 li
120.084 237.149 li
120.419 237.149 li
120.753 237.149 li
121.088 237.149 li
121.423 237.149 li
121.758 237.149 li
122.093 237.149 li
122.428 237.149 li
122.762 237.149 li
123.097 237.149 li
123.432 238.588 li
123.767 238.588 li
124.102 238.588 li
124.437 238.588 li
124.771 238.588 li
125.106 238.588 li
125.441 238.588 li
125.775 238.588 li
126.11 238.588 li
126.445 238.588 li
126.78 238.588 li
127.115 238.588 li
127.45 238.588 li
127.784 240.07 li
128.119 240.07 li
128.454 240.07 li
128.789 240.07 li
129.124 240.07 li
129.458 240.07 li
129.793 240.07 li
130.128 240.07 li
130.463 240.07 li
130.797 240.07 li
131.132 240.07 li
131.467 240.07 li
131.802 240.07 li
132.137 240.07 li
132.472 241.595 li
132.806 241.595 li
133.141 241.595 li
133.476 241.595 li
133.811 241.595 li
134.146 241.595 li
134.48 241.595 li
134.815 241.595 li
135.15 241.595 li
135.485 241.595 li
135.819 241.595 li
136.154 241.595 li
136.489 241.595 li
136.824 241.595 li
137.159 241.595 li
137.494 241.595 li
137.828 243.167 li
138.163 243.167 li
138.498 243.167 li
138.833 243.167 li
139.167 243.167 li
139.502 243.167 li
139.837 243.167 li
140.172 243.167 li
140.507 243.167 li
140.841 243.167 li
141.176 243.167 li
141.511 243.167 li
141.846 243.167 li
142.181 243.167 li
142.516 243.167 li
142.85 243.167 li
143.185 243.167 li
143.52 243.167 li
143.854 243.167 li
144.189 244.79 li
144.524 244.79 li
144.859 244.79 li
145.194 244.79 li
145.529 244.79 li
145.863 244.79 li
146.198 244.79 li
146.533 244.79 li
146.868 244.79 li
147.203 244.79 li
147.538 244.79 li
147.873 244.79 li
148.207 244.79 li
148.542 244.79 li
148.877 244.79 li
149.211 244.79 li
149.546 244.79 li
149.881 244.79 li
150.216 244.79 li
150.551 244.79 li
150.886 246.465 li
151.22 246.465 li
151.555 246.465 li
151.89 246.465 li
152.225 246.465 li
152.56 246.465 li
152.895 246.465 li
153.229 246.465 li
153.564 246.465 li
153.899 246.465 li
154.233 246.465 li
154.568 246.465 li
154.903 246.465 li
155.238 246.465 li
155.573 246.465 li
155.908 246.465 li
156.242 246.465 li
156.577 246.465 li
156.912 246.465 li
157.247 246.465 li
157.582 246.465 li
157.917 246.465 li
158.251 246.465 li
158.586 248.198 li
158.921 248.198 li
159.255 248.198 li
159.59 248.198 li
159.925 248.198 li
160.26 248.198 li
160.595 248.198 li
160.93 248.198 li
161.264 248.198 li
161.599 248.198 li
161.934 248.198 li
162.269 248.198 li
162.604 248.198 li
162.938 248.198 li
163.273 248.198 li
163.608 248.198 li
163.943 248.198 li
164.277 248.198 li
164.612 248.198 li
164.947 248.198 li
165.282 248.198 li
165.617 248.198 li
165.952 248.198 li
166.286 248.198 li
166.621 248.198 li
166.956 248.198 li
167.291 248.198 li
167.625 249.991 li
167.96 249.991 li
168.295 249.991 li
168.63 249.991 li
168.965 249.991 li
169.299 249.991 li
169.634 249.991 li
169.969 249.991 li
170.304 249.991 li
170.639 249.991 li
170.974 249.991 li
171.308 249.991 li
171.643 249.991 li
171.978 249.991 li
172.313 249.991 li
172.647 249.991 li
172.982 249.991 li
173.317 249.991 li
173.652 249.991 li
173.987 249.991 li
174.321 249.991 li
174.656 249.991 li
174.991 249.991 li
175.326 249.991 li
175.661 249.991 li
175.996 249.991 li
176.33 249.991 li
176.665 249.991 li
177 249.991 li
177.335 249.991 li
177.669 249.991 li
178.004 249.991 li
178.339 251.848 li
178.674 251.848 li
179.009 251.848 li
179.344 251.848 li
179.678 251.848 li
180.013 251.848 li
180.348 251.848 li
180.683 251.848 li
181.018 251.848 li
181.353 251.848 li
181.687 251.848 li
182.022 251.848 li
182.357 251.848 li
182.691 251.848 li
183.026 251.848 li
183.361 251.848 li
183.696 251.848 li
184.031 251.848 li
184.366 251.848 li
184.7 251.848 li
185.035 251.848 li
185.37 251.848 li
185.705 251.848 li
186.04 251.848 li
186.375 251.848 li
186.709 251.848 li
187.044 251.848 li
187.379 251.848 li
187.713 251.848 li
188.048 251.848 li
188.383 251.848 li
188.718 251.848 li
189.053 251.848 li
189.388 251.848 li
189.722 251.848 li
190.057 251.848 li
190.392 251.848 li
190.727 251.848 li
191.062 251.848 li
191.396 253.777 li
191.731 253.777 li
192.066 253.777 li
192.401 253.777 li
192.735 253.777 li
193.07 253.777 li
193.405 253.777 li
193.74 253.777 li
194.075 253.777 li
194.41 253.777 li
194.744 253.777 li
195.079 253.777 li
195.414 253.777 li
195.749 253.777 li
196.083 253.777 li
196.418 253.777 li
196.753 253.777 li
197.088 253.777 li
197.423 253.777 li
197.757 253.777 li
198.092 253.777 li
198.427 253.777 li
198.762 253.777 li
199.097 253.777 li
199.432 253.777 li
199.766 253.777 li
200.101 253.777 li
200.436 253.777 li
200.771 253.777 li
201.105 253.777 li
201.44 253.777 li
201.775 253.777 li
202.11 253.777 li
202.445 253.777 li
202.779 253.777 li
203.114 253.777 li
203.449 253.777 li
203.784 253.777 li
204.119 253.777 li
204.453 253.777 li
204.788 253.777 li
205.123 253.777 li
205.458 253.777 li
205.793 253.777 li
206.127 253.777 li
206.463 253.777 li
206.797 253.777 li
207.132 253.777 li
207.467 253.777 li
207.802 253.777 li
208.137 253.777 li
208.471 255.781 li
208.807 255.781 li
209.141 255.781 li
209.476 255.781 li
209.811 255.781 li
210.145 255.781 li
210.48 255.781 li
210.814 255.781 li
211.149 255.781 li
211.484 255.781 li
211.819 255.781 li
212.154 255.781 li
212.488 255.781 li
212.824 255.781 li
213.158 255.781 li
213.493 255.781 li
213.828 255.781 li
214.162 255.781 li
214.498 255.781 li
214.832 255.781 li
215.167 255.781 li
215.502 255.781 li
215.837 255.781 li
216.172 255.781 li
216.506 255.781 li
216.842 255.781 li
217.176 255.781 li
217.511 255.781 li
217.846 255.781 li
218.18 255.781 li
218.516 255.781 li
218.85 255.781 li
219.185 255.781 li
219.52 255.781 li
219.854 255.781 li
220.189 255.781 li
220.523 255.781 li
220.859 255.781 li
221.193 255.781 li
221.528 255.781 li
221.863 255.781 li
222.197 255.781 li
222.533 255.781 li
222.867 255.781 li
223.202 255.781 li
223.537 255.781 li
223.872 255.781 li
224.207 255.781 li
224.541 255.781 li
224.877 255.781 li
225.211 255.781 li
225.546 255.781 li
225.881 255.781 li
226.215 255.781 li
226.551 255.781 li
226.885 255.781 li
227.22 255.781 li
227.555 255.781 li
227.89 255.781 li
228.225 255.781 li
228.559 255.781 li
228.895 255.781 li
229.229 255.781 li
229.563 255.781 li
229.898 255.781 li
230.232 255.781 li
230.568 255.781 li
230.902 255.781 li
231.237 255.781 li
231.572 255.781 li
231.907 255.781 li
232.242 255.781 li
232.576 255.781 li
232.912 255.781 li
233.246 255.781 li
233.581 255.781 li
233.916 255.781 li
234.251 255.781 li
234.586 255.781 li
234.92 255.781 li
235.255 255.781 li
235.59 257.867 li
235.925 257.867 li
236.26 257.867 li
236.594 257.867 li
236.93 257.867 li
237.264 257.867 li
237.599 257.867 li
237.934 257.867 li
238.269 257.867 li
238.604 257.867 li
238.938 257.867 li
239.273 257.867 li
239.607 257.867 li
239.942 257.867 li
240.277 257.867 li
240.611 257.867 li
240.947 257.867 li
241.281 257.867 li
241.616 257.867 li
241.951 257.867 li
242.286 257.867 li
242.621 257.867 li
242.955 257.867 li
243.291 257.867 li
243.625 257.867 li
243.96 257.867 li
244.295 257.867 li
244.629 257.867 li
244.965 257.867 li
245.299 257.867 li
245.634 257.867 li
245.969 257.867 li
246.304 257.867 li
246.639 257.867 li
246.973 257.867 li
247.309 257.867 li
247.643 257.867 li
247.978 257.867 li
248.313 257.867 li
248.646 257.867 li
248.982 257.867 li
249.316 257.867 li
249.651 257.867 li
249.986 257.867 li
250.321 257.867 li
250.656 257.867 li
250.99 257.867 li
251.326 257.867 li
251.66 257.867 li
251.995 257.867 li
252.33 257.867 li
252.664 257.867 li
253 257.867 li
253.334 257.867 li
253.669 257.867 li
254.004 257.867 li
254.339 257.867 li
254.674 257.867 li
255.008 257.867 li
255.344 257.867 li
255.678 257.867 li
256.013 257.867 li
256.348 257.867 li
256.682 257.867 li
257.018 257.867 li
257.352 257.867 li
257.687 257.867 li
258.021 257.867 li
258.356 257.867 li
258.691 257.867 li
259.025 257.867 li
259.361 257.867 li
259.695 257.867 li
260.03 257.867 li
260.365 257.867 li
260.699 257.867 li
261.035 257.867 li
261.369 257.867 li
261.704 257.867 li
262.039 257.867 li
262.374 257.867 li
262.709 257.867 li
263.043 257.867 li
263.379 257.867 li
263.713 257.867 li
264.048 257.867 li
264.383 257.867 li
264.718 257.867 li
265.053 257.867 li
265.387 257.867 li
265.722 257.867 li
266.057 257.867 li
266.392 257.867 li
266.727 257.867 li
267.061 257.867 li
267.396 257.867 li
267.73 257.867 li
268.065 257.867 li
268.4 257.867 li
268.735 257.867 li
269.07 257.867 li
269.404 257.867 li
269.74 257.867 li
270.074 257.867 li
270.409 257.867 li
270.744 257.867 li
271.078 257.867 li
271.414 257.867 li
271.748 257.867 li
272.083 257.867 li
272.418 257.867 li
272.753 257.867 li
273.088 257.867 li
273.422 257.867 li
273.758 257.867 li
274.092 257.867 li
274.427 257.867 li
274.762 257.867 li
275.096 257.867 li
275.432 257.867 li
275.766 257.867 li
276.101 257.867 li
276.436 257.867 li
276.771 257.867 li
277.105 257.867 li
277.439 257.867 li
277.775 257.867 li
278.109 257.867 li
278.444 257.867 li
278.779 257.867 li
279.113 257.867 li
279.449 257.867 li
279.783 257.867 li
280.118 257.867 li
280.453 257.867 li
280.788 257.867 li
281.123 257.867 li
281.457 257.867 li
281.793 257.867 li
282.127 257.867 li
282.462 257.867 li
282.797 257.867 li
283.131 257.867 li
283.467 257.867 li
283.801 257.867 li
284.136 257.867 li
284.471 257.867 li
284.806 257.867 li
285.141 257.867 li
285.475 257.867 li
285.811 257.867 li
286.145 257.867 li
286.479 257.867 li
286.814 257.867 li
287.148 257.867 li
287.484 257.867 li
287.818 257.867 li
288.153 257.867 li
288.488 257.867 li
288.823 257.867 li
289.158 257.867 li
289.492 257.867 li
289.828 257.867 li
290.162 257.867 li
290.497 255.781 li
290.832 255.781 li
291.166 255.781 li
291.502 255.781 li
291.836 255.781 li
292.171 255.781 li
292.506 255.781 li
292.841 255.781 li
293.176 255.781 li
293.51 255.781 li
293.846 255.781 li
294.18 255.781 li
294.515 255.781 li
294.85 255.781 li
295.185 255.781 li
295.52 255.781 li
295.854 255.781 li
296.188 255.781 li
296.523 255.781 li
296.858 255.781 li
297.193 255.781 li
297.527 255.781 li
297.863 255.781 li
298.197 255.781 li
298.532 255.781 li
298.867 255.781 li
299.202 255.781 li
299.537 255.781 li
299.871 255.781 li
300.207 255.781 li
300.541 255.781 li
300.876 255.781 li
301.211 255.781 li
301.545 255.781 li
301.881 255.781 li
302.215 255.781 li
302.55 255.781 li
302.885 255.781 li
303.22 255.781 li
303.555 255.781 li
303.889 255.781 li
304.225 255.781 li
304.559 255.781 li
304.894 255.781 li
305.229 255.781 li
305.563 255.781 li
305.898 255.781 li
306.232 255.781 li
306.567 255.781 li
306.902 255.781 li
307.237 255.781 li
307.572 255.781 li
307.906 255.781 li
308.242 255.781 li
308.576 255.781 li
308.911 255.781 li
309.246 255.781 li
309.58 255.781 li
309.916 255.781 li
310.25 255.781 li
310.585 255.781 li
310.92 255.781 li
311.255 255.781 li
311.59 253.777 li
311.924 253.777 li
312.26 253.777 li
312.594 253.777 li
312.929 253.777 li
313.264 253.777 li
313.598 253.777 li
313.934 253.777 li
314.268 253.777 li
314.603 253.777 li
314.938 253.777 li
315.272 253.777 li
315.607 253.777 li
315.941 253.777 li
316.277 253.777 li
316.611 253.777 li
316.946 253.777 li
317.281 253.777 li
317.615 253.777 li
317.951 253.777 li
318.285 253.777 li
318.62 253.777 li
318.955 253.777 li
319.29 253.777 li
319.625 253.777 li
319.959 253.777 li
320.295 253.777 li
320.629 253.777 li
320.964 253.777 li
321.299 253.777 li
321.633 253.777 li
321.969 253.777 li
322.303 253.777 li
322.638 253.777 li
322.973 253.777 li
323.308 251.848 li
323.643 251.848 li
323.977 251.848 li
324.313 251.848 li
324.646 251.848 li
324.981 251.848 li
325.316 251.848 li
325.651 251.848 li
325.986 251.848 li
326.32 251.848 li
326.655 251.848 li
326.99 251.848 li
327.325 251.848 li
327.66 251.848 li
327.994 251.848 li
328.33 251.848 li
328.664 251.848 li
328.999 251.848 li
329.334 251.848 li
329.669 251.848 li
330.004 251.848 li
330.338 251.848 li
330.674 251.848 li
331.008 251.848 li
331.343 251.848 li
331.678 249.991 li
332.012 249.991 li
332.348 249.991 li
332.682 249.991 li
333.017 249.991 li
333.352 249.991 li
333.687 249.991 li
334.021 249.991 li
334.355 249.991 li
334.691 249.991 li
335.025 249.991 li
335.36 249.991 li
335.695 249.991 li
336.029 249.991 li
336.365 249.991 li
336.699 249.991 li
337.034 249.991 li
337.369 249.991 li
337.704 248.198 li
338.039 248.198 li
338.373 248.198 li
338.709 248.198 li
339.043 248.198 li
339.378 248.198 li
339.713 248.198 li
340.047 248.198 li
340.383 248.198 li
340.717 248.198 li
341.052 248.198 li
341.387 248.198 li
341.722 248.198 li
342.057 248.198 li
342.391 248.198 li
342.727 246.465 li
343.061 246.465 li
343.396 246.465 li
343.73 246.465 li
344.064 246.465 li
344.4 246.465 li
344.734 246.465 li
345.069 246.465 li
345.404 246.465 li
345.739 246.465 li
346.074 246.465 li
346.408 246.465 li
346.744 244.79 li
347.078 244.79 li
347.413 244.79 li
347.748 244.79 li
348.082 244.79 li
348.418 244.79 li
348.752 244.79 li
349.087 244.79 li
349.422 244.79 li
349.757 243.167 li
350.092 243.167 li
350.426 243.167 li
350.762 243.167 li
351.096 243.167 li
351.431 243.167 li
351.766 243.167 li
352.101 243.167 li
352.436 243.167 li
352.77 241.595 li
353.104 241.595 li
353.439 241.595 li
353.774 241.595 li
354.109 241.595 li
354.443 241.595 li
354.779 241.595 li
355.113 240.07 li
355.448 240.07 li
355.783 240.07 li
356.118 240.07 li
356.453 240.07 li
356.787 240.07 li
357.122 238.588 li
357.457 238.588 li
357.792 238.588 li
358.127 238.588 li
358.461 238.588 li
358.797 237.149 li
359.131 237.149 li
359.466 237.149 li
359.801 237.149 li
360.136 235.749 li
360.471 235.749 li
360.805 235.749 li
361.141 235.749 li
361.475 234.387 li
361.81 234.387 li
362.145 234.387 li
362.479 234.387 li
362.814 233.059 li
363.148 233.059 li
363.483 233.059 li
363.818 231.766 li
364.153 231.766 li
364.488 231.766 li
364.822 230.504 li
365.158 230.504 li
365.492 229.273 li
365.827 229.273 li
366.162 229.273 li
366.496 228.071 li
366.832 228.071 li
367.166 226.896 li
367.501 225.748 li
367.836 225.748 li
368.171 224.625 li
368.506 224.625 li
368.84 223.526 li
369.176 222.45 li
369.51 222.45 li
369.845 222.45 li
370.18 222.45 li
370.514 223.526 li
370.85 223.526 li
371.184 223.526 li
371.519 223.526 li
371.854 223.526 li
372.188 223.526 li
372.523 223.526 li
372.857 223.526 li
373.193 223.526 li
373.527 223.526 li
373.862 223.526 li
374.197 223.526 li
374.531 223.526 li
374.867 223.526 li
375.201 223.526 li
0.87451 0.243137 1 0.129412 cmyk
@
[6 6 ] 0 dsh
74.2163 32.6255 mo
74.5513 33.2773 li
74.8857 33.9385 li
75.2207 34.5806 li
75.5557 35.2041 li
75.8901 35.835 li
76.2251 36.4736 li
76.5601 37.0923 li
76.8945 37.7188 li
77.2295 38.3237 li
77.5645 38.936 li
77.8989 39.5259 li
78.2339 40.123 li
78.5688 40.7271 li
78.9033 41.3076 li
79.2383 41.8945 li
79.5732 42.4883 li
79.9077 43.0576 li
80.2427 43.6333 li
80.5776 44.2153 li
80.9121 44.7715 li
81.2471 45.333 li
81.582 45.9014 li
81.9165 46.4424 li
82.2515 46.9888 li
82.5864 47.541 li
82.9209 48.0996 li
83.2559 48.6289 li
83.5908 49.1631 li
83.9253 49.7036 li
84.2603 50.2129 li
84.5952 50.7646 li
84.9297 51.2852 li
85.2646 51.8105 li
85.5996 52.3037 li
85.9346 52.8398 li
86.269 53.3428 li
86.604 53.8506 li
86.939 54.3242 li
87.2734 54.8423 li
87.6084 55.3252 li
87.9434 55.8535 li
88.2778 56.3457 li
88.6128 56.8013 li
88.9478 57.3032 li
89.2822 57.7676 li
89.6172 58.2788 li
89.9521 58.752 li
90.2866 59.23 li
90.6216 59.668 li
90.9565 60.1543 li
91.291 60.6455 li
91.626 61.0962 li
91.9609 61.5508 li
92.2954 62.0093 li
92.6304 62.4722 li
92.9653 62.9395 li
93.2998 63.3633 li
93.6348 63.8389 li
93.9697 64.2705 li
94.3042 64.7056 li
94.6392 65.1445 li
94.9741 65.5874 li
95.3086 66.0342 li
95.6436 66.4849 li
95.9785 66.8887 li
96.313 67.3467 li
96.6479 67.7578 li
96.9829 68.1719 li
97.3174 68.6416 li
97.6523 69.0635 li
97.9873 69.4883 li
98.3218 69.8628 li
98.6567 70.2944 li
98.9917 70.73 li
99.3262 71.1138 li
99.6611 71.5562 li
99.9961 71.9463 li
100.331 72.3398 li
100.666 72.7358 li
101 73.1353 li
101.335 73.5381 li
101.67 73.9438 li
102.005 74.3525 li
102.339 74.7651 li
102.674 75.1807 li
103.009 75.5396 li
103.344 75.9619 li
103.679 76.3262 li
104.014 76.6934 li
104.348 77.125 li
104.683 77.498 li
105.018 77.8735 li
105.353 78.252 li
105.688 78.6338 li
106.022 79.0176 li
106.357 79.4048 li
106.692 79.7295 li
107.027 80.1221 li
107.361 80.5176 li
107.696 80.8496 li
108.031 81.251 li
108.366 81.5879 li
108.701 81.9951 li
109.036 82.3369 li
109.37 82.6807 li
109.705 83.0273 li
110.04 83.376 li
110.375 83.7979 li
110.709 84.1519 li
111.044 84.5083 li
111.379 84.7954 li
111.714 85.1567 li
112.049 85.52 li
112.383 85.8867 li
112.718 86.2554 li
113.053 86.5527 li
113.388 86.9263 li
113.723 87.3027 li
114.058 87.606 li
114.392 87.9878 li
114.727 88.2949 li
115.062 88.604 li
115.396 88.9932 li
115.731 89.3066 li
116.066 89.6221 li
116.401 89.9395 li
116.736 90.3389 li
117.071 90.6611 li
117.406 90.9849 li
117.74 91.3105 li
118.075 91.6387 li
118.41 91.9692 li
118.745 92.3013 li
119.08 92.6357 li
119.415 92.8882 li
119.749 93.2266 li
120.084 93.5674 li
120.419 93.9102 li
120.753 94.1689 li
121.088 94.5156 li
121.423 94.8652 li
121.758 95.1289 li
122.093 95.4824 li
122.428 95.749 li
122.762 96.1074 li
123.097 96.3774 li
123.432 96.7397 li
123.767 97.0132 li
124.102 97.2881 li
124.437 97.6572 li
124.771 97.9355 li
125.106 98.2153 li
125.441 98.5913 li
125.775 98.875 li
126.11 99.1602 li
126.445 99.4468 li
126.78 99.7354 li
127.115 100.025 li
127.45 100.317 li
127.784 100.61 li
128.119 100.905 li
128.454 101.202 li
128.789 101.5 li
129.124 101.801 li
129.458 102.103 li
129.793 102.407 li
130.128 102.712 li
130.463 103.02 li
130.797 103.329 li
131.132 103.537 li
131.467 103.849 li
131.802 104.164 li
132.137 104.374 li
132.472 104.692 li
132.806 105.012 li
133.141 105.226 li
133.476 105.549 li
133.811 105.874 li
134.146 106.092 li
134.48 106.42 li
134.815 106.641 li
135.15 106.973 li
135.485 107.195 li
135.819 107.531 li
136.154 107.756 li
136.489 108.096 li
136.824 108.323 li
137.159 108.552 li
137.494 108.897 li
137.828 109.128 li
138.163 109.36 li
138.498 109.711 li
138.833 109.946 li
139.167 110.182 li
139.502 110.538 li
139.837 110.776 li
140.172 111.017 li
140.507 111.257 li
140.841 111.5 li
141.176 111.865 li
141.511 112.11 li
141.846 112.356 li
142.181 112.604 li
142.516 112.853 li
142.85 113.102 li
143.185 113.354 li
143.52 113.605 li
143.854 113.859 li
144.189 114.114 li
144.524 114.37 li
144.859 114.627 li
145.194 114.886 li
145.529 115.146 li
145.863 115.408 li
146.198 115.67 li
146.533 115.935 li
146.868 116.2 li
147.203 116.467 li
147.538 116.735 li
147.873 116.87 li
148.207 117.14 li
148.542 117.412 li
148.877 117.685 li
149.211 117.959 li
149.546 118.098 li
149.881 118.375 li
150.216 118.653 li
150.551 118.933 li
150.886 119.073 li
151.22 119.356 li
151.555 119.64 li
151.89 119.925 li
152.225 120.068 li
152.56 120.356 li
152.895 120.646 li
153.229 120.791 li
153.564 121.083 li
153.899 121.229 li
154.233 121.524 li
154.568 121.82 li
154.903 121.969 li
155.238 122.268 li
155.573 122.418 li
155.908 122.72 li
156.242 123.022 li
156.577 123.175 li
156.912 123.481 li
157.247 123.635 li
157.582 123.943 li
157.917 124.099 li
158.251 124.41 li
158.586 124.566 li
158.921 124.724 li
159.255 125.039 li
159.59 125.197 li
159.925 125.516 li
160.26 125.676 li
160.595 125.997 li
160.93 126.158 li
161.264 126.32 li
161.599 126.646 li
161.934 126.809 li
162.269 127.138 li
162.604 127.303 li
162.938 127.469 li
163.273 127.801 li
163.608 127.969 li
163.943 128.137 li
164.277 128.474 li
164.612 128.643 li
164.947 128.813 li
165.282 128.984 li
165.617 129.327 li
165.952 129.499 li
166.286 129.672 li
166.621 129.846 li
166.956 130.194 li
167.291 130.37 li
167.625 130.545 li
167.96 130.722 li
168.295 131.077 li
168.63 131.255 li
168.965 131.434 li
169.299 131.614 li
169.634 131.794 li
169.969 132.156 li
170.304 132.338 li
170.639 132.521 li
170.974 132.705 li
171.308 132.889 li
171.643 133.074 li
171.978 133.259 li
172.313 133.632 li
172.647 133.82 li
172.982 134.008 li
173.317 134.197 li
173.652 134.386 li
173.987 134.577 li
174.321 134.768 li
174.656 134.959 li
174.991 135.152 li
175.326 135.345 li
175.661 135.539 li
175.996 135.733 li
176.33 136.125 li
176.665 136.322 li
177 136.52 li
177.335 136.718 li
177.669 136.917 li
178.004 137.117 li
178.339 137.318 li
178.674 137.52 li
179.009 137.722 li
179.344 137.925 li
179.678 138.129 li
180.013 138.334 li
180.348 138.54 li
180.683 138.746 li
181.018 138.746 li
181.353 138.953 li
181.687 139.161 li
182.022 139.37 li
182.357 139.58 li
182.691 139.791 li
183.026 140.002 li
183.361 140.215 li
183.696 140.428 li
184.031 140.643 li
184.366 140.857 li
184.7 141.074 li
185.035 141.291 li
185.37 141.291 li
185.705 141.509 li
186.04 141.728 li
186.375 141.947 li
186.709 142.168 li
187.044 142.39 li
187.379 142.612 li
187.713 142.612 li
188.048 142.836 li
188.383 143.061 li
188.718 143.286 li
189.053 143.513 li
189.388 143.74 li
189.722 143.969 li
190.057 143.969 li
190.392 144.198 li
190.727 144.429 li
191.062 144.661 li
191.396 144.894 li
191.731 144.894 li
192.066 145.127 li
192.401 145.362 li
192.735 145.598 li
193.07 145.598 li
193.405 145.835 li
193.74 146.074 li
194.075 146.313 li
194.41 146.554 li
194.744 146.554 li
195.079 146.795 li
195.414 147.038 li
195.749 147.282 li
196.083 147.282 li
196.418 147.527 li
196.753 147.773 li
197.088 148.021 li
197.423 148.021 li
197.757 148.269 li
198.092 148.519 li
198.427 148.519 li
198.762 148.77 li
199.097 149.022 li
199.432 149.276 li
199.766 149.276 li
200.101 149.531 li
200.436 149.787 li
200.771 149.787 li
201.105 150.044 li
201.44 150.303 li
201.775 150.303 li
202.11 150.563 li
202.445 150.824 li
202.779 150.824 li
203.114 151.087 li
203.449 151.351 li
203.784 151.351 li
204.119 151.617 li
204.453 151.883 li
204.788 151.883 li
205.123 152.151 li
205.458 152.421 li
205.793 152.421 li
206.127 152.692 li
206.463 152.692 li
206.797 152.965 li
207.132 153.239 li
207.467 153.239 li
207.802 153.514 li
208.137 153.791 li
208.471 153.791 li
208.807 154.069 li
209.141 154.069 li
209.476 154.35 li
209.811 154.631 li
210.145 154.631 li
210.48 154.914 li
210.814 154.914 li
211.149 155.199 li
211.484 155.485 li
211.819 155.485 li
212.154 155.773 li
212.488 155.773 li
212.824 156.063 li
213.158 156.063 li
213.493 156.354 li
213.828 156.646 li
214.162 156.646 li
214.498 156.941 li
214.832 156.941 li
215.167 157.237 li
215.502 157.237 li
215.837 157.535 li
216.172 157.535 li
216.506 157.835 li
216.842 158.136 li
217.176 158.136 li
217.511 158.439 li
217.846 158.439 li
218.18 158.745 li
218.516 158.745 li
218.85 159.051 li
219.185 159.051 li
219.52 159.36 li
219.854 159.36 li
220.189 159.671 li
220.523 159.671 li
220.859 159.983 li
221.193 159.983 li
221.528 160.298 li
221.863 160.298 li
222.197 160.614 li
222.533 160.614 li
222.867 160.932 li
223.202 160.932 li
223.537 161.253 li
223.872 161.253 li
224.207 161.575 li
224.541 161.575 li
224.877 161.899 li
225.211 161.899 li
225.546 162.226 li
225.881 162.226 li
226.215 162.555 li
226.551 162.555 li
226.885 162.885 li
227.22 162.885 li
227.555 163.218 li
227.89 163.218 li
228.225 163.218 li
228.559 163.553 li
228.895 163.553 li
229.229 163.891 li
229.563 163.891 li
229.898 164.23 li
230.232 164.23 li
230.568 164.572 li
230.902 164.572 li
231.237 164.916 li
231.572 164.916 li
231.907 164.916 li
232.242 165.262 li
232.576 165.262 li
232.912 165.611 li
233.246 165.611 li
233.581 165.962 li
233.916 165.962 li
234.251 165.962 li
234.586 166.316 li
234.92 166.316 li
235.255 166.672 li
235.59 166.672 li
235.925 166.672 li
236.26 167.03 li
236.594 167.03 li
236.93 167.392 li
237.264 167.392 li
237.599 167.755 li
237.934 167.755 li
238.269 167.755 li
238.604 168.122 li
238.938 168.122 li
239.273 168.49 li
239.607 168.49 li
239.942 168.49 li
240.277 168.862 li
240.611 168.862 li
240.947 168.862 li
241.281 169.237 li
241.616 169.237 li
241.951 169.614 li
242.286 169.614 li
242.621 169.614 li
242.955 169.993 li
243.291 169.993 li
243.625 170.375 li
243.96 170.375 li
244.295 170.375 li
244.629 170.762 li
244.965 170.762 li
245.299 170.762 li
245.634 171.151 li
245.969 171.151 li
246.304 171.151 li
246.639 171.542 li
246.973 171.542 li
247.309 171.936 li
247.643 171.936 li
247.978 171.936 li
248.313 172.334 li
248.646 172.334 li
248.982 172.334 li
249.316 172.735 li
249.651 172.735 li
249.986 172.735 li
250.321 173.139 li
250.656 173.139 li
250.99 173.139 li
251.326 173.545 li
251.66 173.545 li
251.995 173.545 li
252.33 173.956 li
252.664 173.956 li
253 173.956 li
253.334 174.37 li
253.669 174.37 li
254.004 174.37 li
254.339 174.788 li
254.674 174.788 li
255.008 174.788 li
255.344 175.208 li
255.678 175.208 li
256.013 175.208 li
256.348 175.631 li
256.682 175.631 li
257.018 175.631 li
257.352 176.059 li
257.687 176.059 li
258.021 176.059 li
258.356 176.491 li
258.691 176.491 li
259.025 176.491 li
259.361 176.925 li
259.695 176.925 li
260.03 176.925 li
260.365 176.925 li
260.699 177.364 li
261.035 177.364 li
261.369 177.364 li
261.704 177.806 li
262.039 177.806 li
262.374 177.806 li
262.709 178.252 li
263.043 178.252 li
263.379 178.252 li
263.713 178.252 li
264.048 178.703 li
264.383 178.703 li
264.718 178.703 li
265.053 179.157 li
265.387 179.157 li
265.722 179.157 li
266.057 179.157 li
266.392 179.616 li
266.727 179.616 li
267.061 179.616 li
267.396 180.078 li
267.73 180.078 li
268.065 180.078 li
268.4 180.078 li
268.735 180.543 li
269.07 180.543 li
269.404 180.543 li
269.74 181.015 li
270.074 181.015 li
270.409 181.015 li
270.744 181.015 li
271.078 181.491 li
271.414 181.491 li
271.748 181.491 li
272.083 181.491 li
272.418 181.97 li
272.753 181.97 li
273.088 181.97 li
273.422 181.97 li
273.758 182.455 li
274.092 182.455 li
274.427 182.455 li
274.762 182.944 li
275.096 182.944 li
275.432 182.944 li
275.766 182.944 li
276.101 183.437 li
276.436 183.437 li
276.771 183.437 li
277.105 183.437 li
277.439 183.936 li
277.775 183.936 li
278.109 183.936 li
278.444 183.936 li
278.779 184.439 li
279.113 184.439 li
279.449 184.439 li
279.783 184.439 li
280.118 184.948 li
280.453 184.948 li
280.788 184.948 li
281.123 184.948 li
281.457 185.461 li
281.793 185.461 li
282.127 185.461 li
282.462 185.461 li
282.797 185.461 li
283.131 185.979 li
283.467 185.979 li
283.801 185.979 li
284.136 185.979 li
284.471 186.504 li
284.806 186.504 li
285.141 186.504 li
285.475 186.504 li
285.811 187.034 li
286.145 187.034 li
286.479 187.034 li
286.814 187.034 li
287.148 187.034 li
287.484 187.569 li
287.818 187.569 li
288.153 187.569 li
288.488 187.569 li
288.823 188.109 li
289.158 188.109 li
289.492 188.109 li
289.828 188.109 li
290.162 188.109 li
290.497 188.655 li
290.832 188.655 li
291.166 188.655 li
291.502 188.655 li
291.836 189.208 li
292.171 189.208 li
292.506 189.208 li
292.841 189.208 li
293.176 189.208 li
293.51 189.766 li
293.846 189.766 li
294.18 189.766 li
294.515 189.766 li
294.85 189.766 li
295.185 190.331 li
295.52 190.331 li
295.854 190.331 li
296.188 190.331 li
296.523 190.331 li
296.858 190.902 li
297.193 190.902 li
297.527 190.902 li
297.863 190.902 li
298.197 190.902 li
298.532 191.479 li
298.867 191.479 li
299.202 191.479 li
299.537 191.479 li
299.871 191.479 li
300.207 192.063 li
300.541 192.063 li
300.876 192.063 li
301.211 192.063 li
301.545 192.063 li
301.881 192.654 li
302.215 192.654 li
302.55 192.654 li
302.885 192.654 li
303.22 192.654 li
303.555 193.251 li
303.889 193.251 li
304.225 193.251 li
304.559 193.251 li
304.894 193.251 li
305.229 193.856 li
305.563 193.856 li
305.898 193.856 li
306.232 193.856 li
306.567 193.856 li
306.902 193.856 li
307.237 194.467 li
307.572 194.467 li
307.906 194.467 li
308.242 194.467 li
308.576 194.467 li
308.911 195.087 li
309.246 195.087 li
309.58 195.087 li
309.916 195.087 li
310.25 195.087 li
310.585 195.087 li
310.92 195.714 li
311.255 195.714 li
311.59 195.714 li
311.924 195.714 li
312.26 195.714 li
312.594 196.349 li
312.929 196.349 li
313.264 196.349 li
313.598 196.349 li
313.934 196.349 li
314.268 196.349 li
314.603 196.992 li
314.938 196.992 li
315.272 196.992 li
315.607 196.992 li
315.941 196.992 li
316.277 196.992 li
316.611 197.643 li
316.946 197.643 li
317.281 197.643 li
317.615 197.643 li
317.951 197.643 li
318.285 197.643 li
318.62 198.301 li
318.955 198.301 li
319.29 198.301 li
319.625 198.301 li
319.959 198.301 li
320.295 198.301 li
320.629 198.969 li
320.964 198.969 li
321.299 198.969 li
321.633 198.969 li
321.969 198.969 li
322.303 198.969 li
322.638 198.969 li
322.973 199.647 li
323.308 199.647 li
323.643 199.647 li
323.977 199.647 li
324.313 199.647 li
324.646 199.647 li
324.981 200.333 li
325.316 200.333 li
325.651 200.333 li
325.986 200.333 li
326.32 200.333 li
326.655 200.333 li
326.99 201.028 li
327.325 201.028 li
327.66 201.028 li
327.994 201.028 li
328.33 201.028 li
328.664 201.028 li
328.999 201.028 li
329.334 201.733 li
329.669 201.733 li
330.004 201.733 li
330.338 201.733 li
330.674 201.733 li
331.008 201.733 li
331.343 201.733 li
331.678 202.448 li
332.012 202.448 li
332.348 202.448 li
332.682 202.448 li
333.017 202.448 li
333.352 202.448 li
333.687 202.448 li
334.021 203.172 li
334.355 203.172 li
334.691 203.172 li
335.025 203.172 li
335.36 203.172 li
335.695 203.172 li
336.029 203.172 li
336.365 203.907 li
336.699 203.907 li
337.034 203.907 li
337.369 203.907 li
337.704 203.907 li
338.039 203.907 li
338.373 203.907 li
338.709 204.653 li
339.043 204.653 li
339.378 204.653 li
339.713 204.653 li
340.047 204.653 li
340.383 204.653 li
340.717 204.653 li
341.052 204.653 li
341.387 205.411 li
341.722 205.411 li
342.057 205.411 li
342.391 205.411 li
342.727 205.411 li
343.061 205.411 li
343.396 205.411 li
343.73 206.178 li
344.064 206.178 li
344.4 206.178 li
344.734 206.178 li
345.069 206.178 li
345.404 206.178 li
345.739 206.178 li
346.074 206.178 li
346.408 206.958 li
346.744 206.958 li
347.078 206.958 li
347.413 206.958 li
347.748 206.958 li
348.082 206.958 li
348.418 206.958 li
348.752 206.958 li
349.087 207.75 li
349.422 207.75 li
349.757 207.75 li
350.092 207.75 li
350.426 207.75 li
350.762 207.75 li
351.096 207.75 li
351.431 207.75 li
351.766 208.555 li
352.101 208.555 li
352.436 208.555 li
352.77 208.555 li
353.104 208.555 li
353.439 208.555 li
353.774 208.555 li
354.109 208.555 li
354.443 208.555 li
354.779 209.374 li
355.113 209.374 li
355.448 209.374 li
355.783 209.374 li
356.118 209.374 li
356.453 209.374 li
356.787 209.374 li
357.122 209.374 li
357.457 210.204 li
357.792 210.204 li
358.127 210.204 li
358.461 210.204 li
358.797 210.204 li
359.131 210.204 li
359.466 210.204 li
359.801 210.204 li
360.136 210.204 li
360.471 211.048 li
360.805 211.048 li
361.141 211.048 li
361.475 211.048 li
361.81 211.048 li
362.145 211.048 li
362.479 211.048 li
362.814 211.048 li
363.148 211.048 li
363.483 211.907 li
363.818 211.907 li
364.153 211.907 li
364.488 211.907 li
364.822 211.907 li
365.158 211.907 li
365.492 211.907 li
365.827 211.907 li
366.162 211.907 li
366.496 212.78 li
366.832 212.78 li
367.166 212.78 li
367.501 212.78 li
367.836 212.78 li
368.171 212.78 li
368.506 212.78 li
368.84 212.78 li
369.176 212.78 li
369.51 212.78 li
369.845 213.668 li
370.18 213.668 li
370.514 213.668 li
370.85 213.668 li
371.184 213.668 li
371.519 213.668 li
371.854 213.668 li
372.188 213.668 li
372.523 213.668 li
372.857 214.573 li
373.193 214.573 li
373.527 214.573 li
373.862 214.573 li
374.197 214.573 li
374.531 214.573 li
374.867 214.573 li
375.201 214.573 li
0 0.992157 1 0 cmyk
@
0.74902 0.678431 0.670588 0.901961 cmyk
%ADOBeginSubsetFont: ComicSansMS Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /ComicSansMS def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 46 /period putdup 48 /zero putdef/FontBBox {-93 -312 1187 1102} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings4 dict dup begin/.notdef <1C60D8A8C9B7A73DB6F0B6FAFA7BF3C28FD0A21D0FB70854A4518CFB8D731A1977C1C08A> |-/space <1C60D8A8C9B84186EC> |-/period <1C60D8A8C9B873D04176F39500737A58796A799ADAB2F011EB6B5082CCAD878260DE39AC958F27A9CCD72274D2585DDB51967C7CE61906AC0AD40C9D3B0A49FEC45F14EBB22E> |-/zero <1C60D8A8C9B7D98F6DA0BC0D56993DFD731859E73082C2D7636333544D763DC27197575AA0521EF215B0E83E609598D159BBB4BC56CDE2CDE3149C3DB2DB921DD2B021218A530AC8F4FD6B7D0FBB9FC522AE09EAE356903AFB4F0709B48EB18E9FA0317579E49D7B062061DF3902491F8FAAFB0B6154A16F4A168AFC4E808A4715BB30BACE27> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/PESGSK+ComicSansMS /ComicSansMS findfont ct_VMDictPut/PESGSK+ComicSansMS*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero 207{/.notdef}rp]PESGSK+ComicSansMS nfPESGSK+ComicSansMS*1 [9.996 0 0 -9.996 0 0 ]msf34.2363 318.599 mo(0.0 )[6.10107 2.48926 6.10107 0 ]xsh0.5 lw
0 lc
[] 0 dsh
107.696 302.599 mo
107.696 297.599 li
@
107.696 36.8789 mo
107.696 31.8789 li
@
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginPESGSK+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/two <1C60D8A8C9B7D98F6D8F3D7AA695A6A6775D351A3C5B32DF9BF22260E9F8506C6C0AFACE341E1E92FBC3EF784C227B64F08462D61DD043B72D0EF946A3AE72A4250C97F9534EA1ECB8D1F844DABC2780EA5497B3400E0115082BCD52CA33A42EB31BAFC00E89283E1398238FF501EF46348166C5D0796F4F302EEFDEF2C569616B35F3A295FC3051C30E10E4927C117B901A9DA57C3B1677644528E481FA057A75ABBC2AFB35C7AE1B05FE0BDF0A1E3241A7236A535A6C63ACD853B32B2C1D37907B8E7DB8A4A38921C6A2C9DE2A43FF89B38C12B866B35B39B6383EDE8BC72433248A45DEF8A4F70A87D3942EB09EC1FED7DD26A9A13A5550450B987E697E0B> |-systemdict /gcheck known {setglobal} if end {end} ifendPESGSK+ComicSansMS /Encoding getdup 50 /two putpop%ADOEndSubsetFont
/PESGSK+ComicSansMS*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /.notdef /two 205{/.notdef}rp]PESGSK+ComicSansMS nfPESGSK+ComicSansMS*1 [9.996 0 0 -9.996 0 0 ]msf101.196 318.599 mo(0.2 )[6.10107 2.48926 6.10107 0 ]xsh174.656 302.599 mo
174.656 297.599 li
@
174.656 36.8789 mo
174.656 31.8789 li
@
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginPESGSK+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/four <1C60D8A8C9B7D98F6D9D19B2E0513FC5E4D92EB9CF4009902AEA1143FA8048680F0116C2DDAB1D204D80A50B6C47E295405ECF6B9D8E67656139D8AB0B99F70F10190AB1B69AE519C94E071FC1BE80E3AF65DBEE53E56F3CA5CE81F21E9C93C6700EB048CAFE7BA1F01073473AC3EB439C41FF3AB8A358FF25E1E33F82DECC7B8D6F2A15E44E1041> |-systemdict /gcheck known {setglobal} if end {end} ifendPESGSK+ComicSansMS /Encoding getdup 52 /four putpop%ADOEndSubsetFont
/PESGSK+ComicSansMS*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /.notdef /two /.notdef /four 203{/.notdef}rp]PESGSK+ComicSansMS nfPESGSK+ComicSansMS*1 [9.996 0 0 -9.996 0 0 ]msf168.156 318.599 mo(0.4 )[6.10107 2.48926 6.10107 0 ]xsh241.616 302.599 mo
241.616 297.599 li
@
241.616 36.8789 mo
241.616 31.8789 li
@
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginPESGSK+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/six <1C60D8A8C9B7D98F6D410A565F86C07E28623A8A30C45B3B253252287FF35E356C79AC66AD2FE890317E5BEDE13DA65D4DD9FEFA4A8DFF9CB28F7E30962E9383AE3EAD6DEAE2B16B6F1B34D04F870BFED7898255C19B9AFC0426057874C8B988A599BC31593CCD1C2687B840C41197BFB5E2F0C696FA1CFEBDE6A1FAB216E151994B62236FC38B2E21028335BF2980D1D4BCF4B195CB5D36B5C88F8109053C66029BF6146437EE12EF20EAA8182B691161DB7D213B7CE925835ED4E58E76> |-systemdict /gcheck known {setglobal} if end {end} ifendPESGSK+ComicSansMS /Encoding getdup 54 /six putpop%ADOEndSubsetFont
/PESGSK+ComicSansMS*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /.notdef /two /.notdef /four /.notdef /six 201{/.notdef}rp]PESGSK+ComicSansMS nfPESGSK+ComicSansMS*1 [9.996 0 0 -9.996 0 0 ]msf235.116 318.599 mo(0.6 )[6.10107 2.48926 6.10107 0 ]xsh308.576 302.599 mo
308.576 297.599 li
@
308.576 36.8789 mo
308.576 31.8789 li
@
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginPESGSK+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenleft <1C60D8A8C9B72DDD4BDDDEFA1F2E33EFAB2609E3C9DE388E20E9C059C4F1BE51DE95F72A2C12C7492DCC98E0E6966BF3C6ECA33D6154D0170812D5FDFD86FCB61BC83579E6C82B47DC2EF7EFEC0791C5D64493C14198901FA2252477E06D36F6FBD8470D6ECFD0F8931D63CA891EC08EE802E9833B5640A882BF6370D5475D687E5637A4> |-/parenright <1C60D8A8C9B72DDD4BB51EC6C49AB7306C1A14C493E9BA5D78AE2C195B29D94044F912FEED39F75BE34A7150607FEA016A23803EFDD2F9288AF7A180AEFCBFBF998E3FBDAC6F3A4074B0F5D69EFDE59096176B6B29149A14AB78FC2B3577A37D471DCCDE635BBEA2665A37EE893BAA312D5DB22CA01C4916AB9D79F1B336301D84554794> |-/hyphen <1C60D8A8C9B71A7335DED7128A2BEC26C4F799019A87FCF9EF4AFAADE4B5E99E37751436BCE6B1DBD30F2BB03235CD0D7C430BFB986809660F0F2A> |-/slash <1C60D8A8C9B7BB5CAA6C4651B4301707BFED427647F0D4D7919F12225500DEE27358A7B1E02CA4F458CAE83F77FE9C20B1E694E7EC69B2AB3550D5FFABB8305C6AEE03FB9B1CDEDF09FBF571B0F668A5CBAEFF29D85E64068F41B8816123FA45F63829790B090819AB8C> |-/one <1C60D8A8C9B77914873F98803C60EEF5E4A6DBE96AE9B81EFF493D2F1AA3FEEAA37FD443D04034D23BA9D609D2C8CD762F92B8820610EEE88821C53021C3E08017ADDCC0C56E5E2D7504080ABC696FC4B2BC78B7B384642545B6D2D0F5C638D5E5DAF1603C704B0CBDC68673A92C16CF8AB7E549BF3031EC2B504C05A0AE024AB48F99F68753D2CFADD79C925954659602A92A0F92089F7F8763F72499600C23C55121FDAC89B86D3B6C51F53AFAF0B4EDB2432FF0B89CC30A4C8DD2B8E7547AC479FCA4589851D61C952B27> |-/eight <1C60D8A8C9B7D98F6D411A3FBF3E1364E3BEC4A5E775ACA412F07D5A94C3BEF77D5E53216BEB0522A622C88CA1692970DDC6947BF81796DD7CCB824FA7EE90A4943F8AE44614C58C7911AB9D28D9C0B88A93C3B727D580C159061F84BE60E69517D9839A4A451A2414216CE43B99EFB70961552191831694714DDE8DDC8255990930E16813418A900FE62548470B5CC1B3B6A98598E41570742E202830AFBD33243EC6ABB72886024764019A44EA984D8DED1FCBB31F0E230348D3C16A805BC89F2756CA3905F9B19C15A371AF432FD6D69D1C4299F3A5FC90ECA58C45C9> |-/W <1C60D8A8C9B536D0CDA67495C778630A8DC2511919E43231A0C18D2973EB9398FC65133D4B1C1FD822BED43906F0A8844D802931B27D6EE8DCF0AACBAFE3E82F733FD0FB0D8DEAC05767241E9F7448C42B466ABE313818470686D6E92C5C38ED2E26C957C5B36EDD0C1B76E6CA0F5715836993E6CBAC445E502DBD9478491087D2DB34E4215C09904450602533067D974FCB69C1C42C5E354524CDE7F7138BDA3512AE512BA7640757F235266D7F29FDC793E25C618EE71BEAA0CDF47A9F3F7A3485D7D912ED62068BA272F19CE6DBDCED6935ACB2E53FF460220BC39BAF396EF09A34A4EFD78027C51155554CD7937332C5836E80AE011DA26759CDDC785C15E6> |-/a <1C60D8A8C9B7BB5CA503F41BCABD6C718309D7FD3EAFD4723590A6DB54A64A3783FF0E8915C8665146025473AABA73A7307808FC49DF54120176FFCE6E5630D745DEC9D7FE687B22D69E14177C1006B659795051D4F564854E1C732886E0B2617B0D55057161A197AD04FDD89E349DC800C8FAE6C2E2E7218942027A386140843CEC6D038F4E517DF6E091EE1EC97061608AA6DD07992C53BB029F315A3C165875CF85B20BCD136667E2BE57C24163FB07309C0F29C421C91BBF197F69B4468BD92D4E0F963A574D94F4959F6C142EC285F75B0A57DCD73FA9D71DA6249A4005429B> |-/b <1C60D8A8C9B7CA6425CFEA7643A8DEBB5A06DC7605086653C2C486B6F4158198BD8053CFA2CF0B5746D9FD99FA76ED96704A3EE6AD5240E402B445EE535F8D30988D2BF1D277FECDEFAAF08DE0E8B511C56F4A81B9520ADA97B65EF70A3DA2FEDBA1CA8476F2464DBC51D59ED582B47C20AFEA363D12C1DF79765DCD8D8A76043722F8B425E1F7011ADD62634BA97617AA71C6A854B0F0CC686D37B26387C30ABB6C12591354F3ACB70299295B8E1528868221EC40C239E0BBA6645FF00A6753502A06D2C7D368BE1A45974809B92A1817D27F99B4A021556897221B8E32123B695D2F3CCFD1AED08823BA> |-/d <1C60D8A8C9B7F000DE2C8396BDB351B4990D8D398AAE78675B97459FA78429037C4BA1F4D53EE5133D48D0684659BD3916AD44F9EF388C820B65831703EFEBCB54E84A08629938E7E1E9BD71B24EDF23DBE596C10C019E480A33F574EB4B56CE5524F79CCE926D853B8A82B0FC6533439ADAC617F645B18C65D98BB846B0DC1C7B681B7522D351F2F82B4E916C460C2918D70553B74A3820D6E276C27FBDBE6C2473D5769F6125482A622191509AEBF182367421867D352ED6C0E76416F79DC149E960E3968BEA79DBC1A9A96F0CC21F57FD172BDA58BC> |-/e <1C60D8A8C9B797474FA4303150FF95D22C1576367C7C82BE107A33DB836FE273C47A9F1C294729003E4BC6906C807AE64492E567EB699590C33760698497B7D8BD4606E6533DD313B7408096D0253255EE30E5A5E3E06503BE924638C5951A143C8FB027E022BA2CC9736D9A6F100D38EB1D4C686421142EAA9CB9B186F914996503E87D112FD301022C9ED0ABE9EC3841A2AAB1D0ECFBD04DD27FAC9222691EA422325A2608DE3AA47EDFE24D5B> |-/g <1C60D8A8C9B7883C34847673539A3C47283D2869DE727C001A8ED17F310363C066266AC877F71DE696B52BA5756C41FA2C6742427FE25CABE743DC5A8409CA03A46FFE172EB266EBE72B596730C9547F1BA9130523A2B6925FB6C63D24A5FA2932E01CB40C0D974065C69BA7D95C92F84E75317230A20A5B57C1414477131B85EE5ACE9CF2CFFA8F81FDD0E1570B07F54AEF9E9559FF767E5E4A6770AB6167D2B403FC1CDDEF440629F36A00CE900D50814788B0FF5D0993B3F9BE201807168AC2FF35AD7144226A32EFAB4AE57534B933FE2F650AE3AB04CFB63638BA8BDA42DA1BFD76C61D93DA> |-/h <1C60D8A8C9B7F942331D263A3CFBA3B9EBF03F980E00D0F1D27326C82FFD201AECBD022977AA1E0D941B50CF40E2252C13449F1B526768F4FF8F3B35D635BA79049C632C8D93F40FA3D65B4919DC249999AF595543B05BB9E3D553D6A4D06BC3071066915C6AADEE1777A88F11E51EFD7CACCB4548865877FDF6CCFA4354CAC26FDBD4DD9BCB32241000DBC1885716260CE6C2F8CA8BFCAD463770D7B8A9C86F4DCBF5E02D8934AC4CA9D3F2ADF013F9C85E9FCF15B65F105FF737947A93A60146633ED9F20D919596A73A57C422CA8CB2588E395D294B3A8FDF5162BB0F2955418BC69D1C2B1DA52DCF8528385D883EFC6D36000E> |-/i <1C60D8A8C9B8524CA9FFF1D59707FAB92D69C69B7C857EED4D13A4787BF89B18996B1BFB164CA796A0EF07F1407DF3454BCAB96192B46A6EDEDC573AD74AE5EBB6C7E282C40345BC6C9BD822E381040AF84910E37D38B52009BFBA09050BADAEBC8553B469DC8708DC8B7D087E48B2E8AA99CA401E54F66DDB7E9923B974D88CDA4785FD295B41FC4A68D170B03EDBFBD3758274FE3E0C921CDB5782B906DFB9938B6191061DE008B5105239C6B4135C4008792AFAA4EA6826684C0C> |-/l <1C60D8A8C9B8581A5C985F5B74008F0E2CA964639DBBD35F5DD00E39B9E95E3CD2193CB410613D02E647955F9BDFF4F3308822726BABA78ABE406A4F243D0D7526BB93B898D78CB4E4A407748C335667C85BC7C5DB0D0060EEAC> |-/n <1C60D8A8C9B7B07F0BB93457D6C8288A70E0DB940B4E04FCB07C44C762FF75D1D950F6658944215ABDB8E09DA0C33F6809AFCF2421406F8688ABED2DEC4D49A55251B25C4373E5276DE26457B8215FA156A3918E62986142B216E3D126083708C5AB3D018A7C93A0546D1AE450568C33979D5D1886CAEE4F45CEF158C9F75F841729756DC86B9981305315BE025F34658A8B30DA9E4FC92E74778770409CEEBC81A51BD2DBFB108DC9287AA20C6C0FDC2D19D58643D88EB36209DAC3D913F6852F2F8B06C4883A03EE882CC27439C56A729CC60E3CAC44D3416B7B9356E70E374DD5228445902D99BC6E06C8C6558C> |-/o <1C60D8A8C9B78D34A55956A51486C357D04D448C2012FC2F5B0A5FE1B320E5CD61418E269420C85D10935D5D9B29D4FDDFDD85C698EDEF649FCF7B4152030DE7FB7B0AD250869A491A4776C5C05E1436F84934B318F30DD94DF542C1FA3FC71DCD30BC8EC67320F785CD0C113E143028BDC1093B4CB998C3891C7A3F7C> |-/r <1C60D8A8C9B75BE51651FFE67439D51A25F90110BB907676984B99DD0B35C7709F13E9D884F7A5E4D5DC6EAC702AA1CA7DD0308EC3E47EA3A772341F5B614E58D6E83BA0E5BB48DBDD3ED30A643443B6748E7F94653D8C84439C4E79874BBAE5D54AF00F5DBBDC68AB601F5B54A0C720942814BB32E87436> |-/t <1C60D8A8C9B7445140689D163BE9CD19CB6263AAD663E751BFF4FC3EFD289F54C938D7522CDBDC78B86C3A6B352FEC6C942B3A84D1DF37948F119DD042933AE483D22B2D630A0536911763BEC72090C0E7972085EC665EF1618CB3A1E365C68118F7319C489021F7E5BB1237C8B28D9185CA450113B4347A96F5A190A1E41185CC68C22E0D8B3619F65EBBC7C09A7899C42BB7EC5C668E84BEB96E5966CE04926328B6CA13AB435E16BBB7670DDC776BE2EE98FDA0050964E0FA7809BCE05F1D859FB5837E> |-systemdict /gcheck known {setglobal} if end {end} ifendPESGSK+ComicSansMS /Encoding getdup 40 /parenleft putdup 41 /parenright putdup 45 /hyphen putdup 47 /slash putdup 49 /one putdup 56 /eight putdup 87 /W putdup 97 /a putdup 98 /b putdup 100 /d putdup 101 /e putdup 103 /g putdup 104 /h putdup 105 /i putdup 108 /l putdup 110 /n putdup 111 /o putdup 114 /r putdup 116 /t putpop%ADOEndSubsetFont
/PESGSK+ComicSansMS*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /slash /zero /one /two /.notdef /four /.notdef /six /.notdef /eight 30{/.notdef}rp /W 9{/.notdef}rp /a /b /.notdef /d /e /.notdef /g /h /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /.notdef /t 139{/.notdef}rp]PESGSK+ComicSansMS nfPESGSK+ComicSansMS*1 [9.996 0 0 -9.996 0 0 ]msf302.076 318.599 mo(0.8 )[6.10107 2.48926 6.10107 0 ]xsh369.036 318.599 mo(1.0 )[4.5 2.48926 6.10107 0 ]xshPESGSK+ComicSansMS*1 [12 0 0 -12 0 0 ]msf131.136 339.599 mo(Width to length ratio \(b/a\) )[12.4746 3.36328 7.04883 5.6543 6.93164 3.58594 5.6543 6.31055 3.58594 3.28711 6.57422 6.28125 6.36914 5.6543 6.93164 3.58594 5.76563 6.14063 5.6543 3.36328 6.31055 3.58594 4.39453 7.11914 6.14063 6.14063 4.39453 0 ]xshPESGSK+ComicSansMS*1 [9.996 0 0 -9.996 0 0 ]msf15.5801 306.599 mo(10 )[4.5 6.10107 0 ]xshPESGSK+ComicSansMS*1 [6.9972 0 0 -6.9972 0 0 ]msf26.5801 302.6 mo(-2 )[2.91455 4.271 0 ]xsh40.7363 184.948 mo
45.7363 184.948 li
@
370.536 184.948 mo
375.536 184.948 li
@
PESGSK+ComicSansMS*1 [9.996 0 0 -9.996 0 0 ]msf15.4395 188.947 mo(10 )[4.5 6.10107 0 ]xshPESGSK+ComicSansMS*1 [6.9972 0 0 -6.9972 0 0 ]msf26.4395 184.947 mo(-1 )[2.91455 3.1499 0 ]xsh40.7363 67.2959 mo
45.7363 67.2959 li
@
370.536 67.2959 mo
375.536 67.2959 li
@
PESGSK+ComicSansMS*1 [9.996 0 0 -9.996 0 0 ]msf19.1895 71.2969 mo(10 )[4.5 6.10107 0 ]xshPESGSK+ComicSansMS*1 [6.9972 0 0 -6.9972 0 0 ]msf30.1895 67.2969 mo(0 )[4.27051 0 ]xsh40.7363 267.182 mo
42.7363 267.182 li
@
373.536 267.182 mo
375.536 267.182 li
@
40.7363 246.465 mo
42.7363 246.465 li
@
373.536 246.465 mo
375.536 246.465 li
@
40.7363 231.766 mo
42.7363 231.766 li
@
373.536 231.766 mo
375.536 231.766 li
@
40.7363 220.364 mo
42.7363 220.364 li
@
373.536 220.364 mo
375.536 220.364 li
@
40.7363 211.048 mo
42.7363 211.048 li
@
373.536 211.048 mo
375.536 211.048 li
@
40.7363 203.172 mo
42.7363 203.172 li
@
373.536 203.172 mo
375.536 203.172 li
@
40.7363 196.349 mo
42.7363 196.349 li
@
373.536 196.349 mo
375.536 196.349 li
@
40.7363 190.331 mo
42.7363 190.331 li
@
373.536 190.331 mo
375.536 190.331 li
@
40.7363 149.531 mo
42.7363 149.531 li
@
373.536 149.531 mo
375.536 149.531 li
@
40.7363 128.813 mo
42.7363 128.813 li
@
373.536 128.813 mo
375.536 128.813 li
@
40.7363 114.114 mo
42.7363 114.114 li
@
373.536 114.114 mo
375.536 114.114 li
@
40.7363 102.712 mo
42.7363 102.712 li
@
373.536 102.712 mo
375.536 102.712 li
@
40.7363 93.3965 mo
42.7363 93.3965 li
@
373.536 93.3965 mo
375.536 93.3965 li
@
40.7363 85.52 mo
42.7363 85.52 li
@
373.536 85.52 mo
375.536 85.52 li
@
40.7363 78.6973 mo
42.7363 78.6973 li
@
373.536 78.6973 mo
375.536 78.6973 li
@
40.7363 72.6792 mo
42.7363 72.6792 li
@
373.536 72.6792 mo
375.536 72.6792 li
@
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginPESGSK+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/L <1C60D8A8C9B794D334770456CCF0A82C129EC023E78036E25CE3966F0B6AAB3C4C83B4F7D0D9A184D63B7096E17BA69777C3186423804DB983F8414E906B2BB350BEAAA6EDA9BB2F576EAE256DA27D8CF69C1D67E4408804E8B236A01E7241FB871846F7D1AC875484813B7B645BDAA48BC0691B0C9FAE688D3DFF8EF2DE5034FD5743EA653CC67389EA1B069F> |-/c <1C60D8A8C9B7B9B9DE292882013E19E33F82B7ED3A5C89FE0A41E2745CE52BF345EF21317B06CEB633B4C461C86DB59ACA948BD5303B9C1ECB87024259662E6DE6401329C576CA7C717795A8221E64812E10D7279DA0C4ECEFC761695BC43E126B44B9576721BB314891B8E9D440D85A903F31586B4587EAE794E85616ED3F2F41CC7C8432421936554CA0D609EB4EA211DE1B1E7934AF872FDEE11CAF3B598B06E47B41> |-/m <1C60D8A8C9B6FC2D96873601FD7D92169A9B88887C32231D12B856F0FF258B62829FEDF861E7207C12D5C53BCDFD0EA3F0EF441B3104EE7A8DCCC9135A66A3908121FDEF89ECB4290FE2DEBBC0D2CEC922FC3B50F2ED674EACC69E69FA370309E0EBFB994E62CF35AAC76A68A27F1193FA80070D9751608DC309EBC2115575AE6BDEEB113F39584664AF7AAA3C82601F097876EB086034E5AE78A75047B10841E51F7380B84CCDD035E85E1A5870A2BB0942D4819E585F0952EB73250253334BF49322F96375F5B49CB7CFA7A0B232F8AD1DD38A4207A81B8B16535F38363976D31BC82130B6F42B86DA3EA4FFCCC6C8DA3BAD0E6D585D10CCC6A4EFCE59BB479065B92972F3D516BBD63C0E7C814F065EEF1040A3FF51C243D5475EBA7E962CAD4F75D3AC0EDC0C293B5BB6A5776BF4AC8F3BC665CA79374C2D10BBB5A4EE69B305850280C1> |-/s <1C60D8A8C9B7544E0B2F4A61F93D1126BE4C1AB23A9BC15E8D4F67C7217D859EAD9231FE71D3434A8F690FE356BFC6DC5BE77A03DE604D8B1C950D5ABF263BD11471F4641C413AA949D9FA9D14073F73C97069B262302E724A697D3CA7C59E77556DAF46750C504A58130B4D898FE3BF71EC7F017C1E1F27AB7041A63DDE724A2C84E3A413C54A5DDF57F8C9D27A1E3CFE7B403B1328B029B85307F57108ADCCE743F949020583B39DD4E46122F513D45ADF2471EB3FC18875B6CA7F87645D6D9F43435BEAAB1F189966F0EC695829B6348DF5F29560E30CB97F829CCD3E61BBBAB11852283FEDA3181F7D> |-systemdict /gcheck known {setglobal} if end {end} ifendPESGSK+ComicSansMS /Encoding getdup 76 /L putdup 99 /c putdup 109 /m putdup 115 /s putpop%ADOEndSubsetFont
/PESGSK+ComicSansMS*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /slash /zero /one /two /.notdef /four /.notdef /six /.notdef /eight 19{/.notdef}rp /L 10{/.notdef}rp /W 9{/.notdef}rp /a /b /c /d /e /.notdef /g /h /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s /t 139{/.notdef}rp]PESGSK+ComicSansMS nfPESGSK+ComicSansMS*1 [0 -12 -12 0 0 0 ]msf10.4395 223.74 mo(Length \(2a\) microns )[-6.60938 -6.57422 -6.28125 -6.36914 -5.6543 -6.93164 -3.58594 -4.39453 -7.32422 -6.14063 -4.39453 -3.58594 -9.32227 -3.36328 -6.16406 -5.76563 -6.31055 -6.28125 -5.8418 0 ]ysh1 lw
2 lc
40.7363 302.599 mo
375.536 302.599 li
375.536 31.8789 li
40.7363 31.8789 li
40.7363 302.599 li
@
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginPESGSK+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/G <1C60D8A8C9B65DE77AFD4F51F81ED3EBD4A285F80C2B83CE74B44388C826A0F4CB7FC7408B35179849A78CC02526B9D5979B48BCE15D3D20F91BDEB5A83C5165D3585DED34BE4F3DD7F360671E644A7D3B726A44668D72A0DE5FAD07877D976EBC61FA78717E09209379330FABECF1A48284F21529C32DEC3DCF052014289C8DEDFCBB389098F2BAEAEB130101E28A62154C896A369780E7DB77BB705D60BB395C0CD45958B98E7F072EBDFB9AFA88F235BB7769C939DAA7CD343559031E247AB7910389A05A77014AB5031A027F3F729FA83E9DA927C662BBE5F5A3C38A> |-/S <1C60D8A8C9B628237790AD4658CF43512B88CF6291C92AD3157833D0727158E115F788930744DCCE13B9EF38BDC27C8E014E078FBB056AA6D9CB016D19E883D19CDF8033D08D547D5D80A3FE9C39FDEE411A7B35FC8AE765E13D02BE7ACBC307F7F32787CBDEE9ABCF006D4619D0C247F6E0B41E16A4C1C4214C84D3C939A30D93EF290EA5C62DA90EBBDE04C58DBD56852AA46650C7E91B27CD37CE3C1E878BCB595B818969A34C673C0F2C078B01E2D0F4D3CA28C1783BA1C4C7245DBADB7E8BA3EA428618A3547EC5E16465D68D17> |-/p <1C60D8A8C9B784FA605C1E2DE9CD48D992DC3CC70A48B838E2D397F5893EBF5E6CB31C410B2D579A798B247824C0B1DA0D694D5A554F49A7F104B09B8C8123B1EE0F250469E618A08C9EDDFB5A51FAF77BD9EC9F3207514B493F3B559D151CA44FECA1422F66057BA97C6A129E034A9C3AB70E463FE85C8478F346F06A6148E354DA6D0BE5EFF6256E4BB886B9C73833B34381A812E73BADDAFCE8754E4C232F6A62C54AB66D9B9D76ADD04785EFB7DCFC18E5B399366900582D047B460CC42F08F2E9ED5B222614010BACB1AC2FAD7F735C4AD14F71C1> |-/u <1C60D8A8C9B7B3D0EB94C27794C8FF7A66F97FA6CF9FABEE835E1A1626320F2E2E58AACC9742E2863A234D717CCEC554B38E6670782546BE1280DB3D026E3D97D899C4DBB14646E84E5FA9BF09835296C032D42FE102EFEF2CF2250B419A68387C6038BB86A74FB974D87A0B2F0A7872D9B0CF5DA9A83619FEC0CA43F47D29F1B253EC46F0FA880E9D913D7D1074998F6C45D6194D53073B871AAF04BD179A8644CD091C1AF599D8C323C678F3C145D207E61A3CA7E44F7257600C6DCC4283614DCCA35CB9A41B86A4FF> |-/y <1C60D8A8C9B7B202A5830BCB89572D4CAA1828530B4C7A43C892E79126B4E916330B53C34B415984C412BF2B91501F199A00E0EEB36801E5C6C4B96A328630D8109B95A2744C5BE5BF5BFE00A713EDACDB62A7B27EF5D0BAA40EA7DBB9CA276B4EBCB844D20A4804349C4F910157B64CA0E9CA2D8701B2B253A960994A4F888E6CC95DBACCD8EA343526343BDED882> |-systemdict /gcheck known {setglobal} if end {end} ifendPESGSK+ComicSansMS /Encoding getdup 71 /G putdup 83 /S putdup 112 /p putdup 117 /u putdup 121 /y putpop%ADOEndSubsetFont
/PESGSK+ComicSansMS*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /slash /zero /one /two /.notdef /four /.notdef /six /.notdef /eight 14{/.notdef}rp /G 4{/.notdef}rp /L 6{/.notdef}rp /S 3{/.notdef}rp /W 9{/.notdef}rp /a /b /c /d /e /.notdef /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]PESGSK+ComicSansMS nfPESGSK+ComicSansMS*1 [12 0 0 -12 0 0 ]msf46.2363 245.493 mo(100 s )[5.40234 7.32422 7.32422 3.58594 5.8418 0 ]xsh49.2363 203.493 mo(1 Gyr )[5.40234 3.58594 8.15625 6.24609 5.76563 0 ]xsh154.236 210.493 mo(Single domain)[8.32031 3.36328 6.28125 6.36914 3.28711 6.57422 3.58594 7.04883 6.31055 9.32227 6.14063 3.36328 0 ]xsh85.2363 288.493 mo(Superparamagnetic )[8.32031 6.24023 6.41602 6.57422 5.76563 6.41602 6.14063 5.76563 6.14063 9.32227 6.14063 6.36914 6.28125 6.57422 5.6543 3.36328 6.16406 0 ]xshgsave
92.6284 8.90723 mo
86.3462 8.10742 li
86.5327 14.707 li
92.8086 15.5288 li
92.6284 8.90723 li
92.9966 8.01025 mo
93.3911 8.06006 li
93.4038 8.53369 li
93.6089 16.1045 li
93.6216 16.5767 li
93.2275 16.5254 li
86.1685 15.5977 li
85.7778 15.5464 li
85.7646 15.0757 li
85.5508 7.53564 li
85.5371 7.06396 li
85.9282 7.11377 li
92.9966 8.01025 li
cp
clp
0.25 lw
0 lc
92.6284 8.90723 mo
86.3462 8.10742 li
86.5327 14.707 li
92.8086 15.5288 li
92.6284 8.90723 li
92.9966 8.01025 mo
93.3911 8.06006 li
93.4038 8.53369 li
93.6089 16.1045 li
93.6216 16.5767 li
93.2275 16.5254 li
86.1685 15.5977 li
85.7778 15.5464 li
85.7646 15.0757 li
85.5508 7.53564 li
85.5371 7.06396 li
85.9282 7.11377 li
92.9966 8.01025 li
cp
0 0 0 1 cmyk
@
grestore
gsave
63.5557 18.3389 mo
57.1914 17.4824 li
57.4165 24.2646 li
63.7744 25.144 li
63.5557 18.3389 li
63.9233 17.4189 mo
64.3228 17.4727 li
64.3384 17.9595 li
64.5874 25.7397 li
64.603 26.2251 li
64.2041 26.1699 li
57.0527 25.1772 li
56.6572 25.1226 li
56.6411 24.6387 li
56.3828 16.8911 li
56.3662 16.4063 li
56.7627 16.4595 li
63.9233 17.4189 li
cp
clp
0.25 lw
0 lc
63.5557 18.3389 mo
57.1914 17.4824 li
57.4165 24.2646 li
63.7744 25.144 li
63.5557 18.3389 li
63.9233 17.4189 mo
64.3228 17.4727 li
64.3384 17.9595 li
64.5874 25.7397 li
64.603 26.2251 li
64.2041 26.1699 li
57.0527 25.1772 li
56.6572 25.1226 li
56.6411 24.6387 li
56.3828 16.8911 li
56.3662 16.4063 li
56.7627 16.4595 li
63.9233 17.4189 li
cp
0 0 0 1 cmyk
@
grestore
gsave
63.9233 17.4189 mo
92.9966 8.01025 li
93.3911 8.06006 li
64.3228 17.4727 li
63.9233 17.4189 li
cp
clp
0.25 lw
0 lc
63.9233 17.4189 mo
92.9966 8.01025 li
93.3911 8.06006 li
64.3228 17.4727 li
63.9233 17.4189 li
cp
0 0 0 1 cmyk
@
grestore
gsave
64.3228 17.4727 mo
93.3911 8.06006 li
93.4038 8.53369 li
64.3384 17.9595 li
64.3228 17.4727 li
cp
clp
0.25 lw
0 lc
64.3228 17.4727 mo
93.3911 8.06006 li
93.4038 8.53369 li
64.3384 17.9595 li
64.3228 17.4727 li
cp
0 0 0 1 cmyk
@
grestore
gsave
64.3384 17.9595 mo
93.4038 8.53369 li
93.6089 16.1045 li
64.5874 25.7397 li
64.3384 17.9595 li
cp
clp
0.25 lw
0 lc
64.3384 17.9595 mo
93.4038 8.53369 li
93.6089 16.1045 li
64.5874 25.7397 li
64.3384 17.9595 li
cp
0 0 0 1 cmyk
@
grestore
gsave
64.5874 25.7397 mo
93.6089 16.1045 li
93.6216 16.5767 li
64.603 26.2251 li
64.5874 25.7397 li
cp
clp
0.25 lw
0 lc
64.5874 25.7397 mo
93.6089 16.1045 li
93.6216 16.5767 li
64.603 26.2251 li
64.5874 25.7397 li
cp
0 0 0 1 cmyk
@
grestore
gsave
64.603 26.2251 mo
64.2041 26.1699 li
93.2275 16.5254 li
93.6216 16.5767 li
64.603 26.2251 li
cp
clp
0.25 lw
0 lc
64.603 26.2251 mo
64.2041 26.1699 li
93.2275 16.5254 li
93.6216 16.5767 li
64.603 26.2251 li
cp
0 0 0 1 cmyk
@
grestore
gsave
64.2041 26.1699 mo
57.0527 25.1772 li
86.1685 15.5977 li
93.2275 16.5254 li
64.2041 26.1699 li
cp
clp
0.25 lw
0 lc
64.2041 26.1699 mo
57.0527 25.1772 li
86.1685 15.5977 li
93.2275 16.5254 li
64.2041 26.1699 li
cp
0 0 0 1 cmyk
@
grestore
gsave
57.0527 25.1772 mo
56.6572 25.1226 li
85.7778 15.5464 li
86.1685 15.5977 li
57.0527 25.1772 li
cp
clp
0.25 lw
0 lc
57.0527 25.1772 mo
56.6572 25.1226 li
85.7778 15.5464 li
86.1685 15.5977 li
57.0527 25.1772 li
cp
0 0 0 1 cmyk
@
grestore
gsave
56.6572 25.1226 mo
56.6411 24.6387 li
85.7646 15.0757 li
85.7778 15.5464 li
56.6572 25.1226 li
cp
clp
0.25 lw
0 lc
56.6572 25.1226 mo
56.6411 24.6387 li
85.7646 15.0757 li
85.7778 15.5464 li
56.6572 25.1226 li
cp
0 0 0 1 cmyk
@
grestore
gsave
56.6411 24.6387 mo
56.3828 16.8911 li
85.5508 7.53564 li
85.7646 15.0757 li
56.6411 24.6387 li
cp
clp
0.25 lw
0 lc
56.6411 24.6387 mo
56.3828 16.8911 li
85.5508 7.53564 li
85.7646 15.0757 li
56.6411 24.6387 li
cp
0 0 0 1 cmyk
@
grestore
gsave
56.3828 16.8911 mo
56.3662 16.4063 li
85.5371 7.06396 li
85.5508 7.53564 li
56.3828 16.8911 li
cp
clp
0.25 lw
0 lc
56.3828 16.8911 mo
56.3662 16.4063 li
85.5371 7.06396 li
85.5508 7.53564 li
56.3828 16.8911 li
cp
0 0 0 1 cmyk
@
grestore
gsave
56.3662 16.4063 mo
85.5371 7.06396 li
85.9282 7.11377 li
56.7627 16.4595 li
56.3662 16.4063 li
cp
clp
0.25 lw
0 lc
56.3662 16.4063 mo
85.5371 7.06396 li
85.9282 7.11377 li
56.7627 16.4595 li
56.3662 16.4063 li
cp
0 0 0 1 cmyk
@
grestore
gsave
56.7627 16.4595 mo
85.9282 7.11377 li
92.9966 8.01025 li
63.9233 17.4189 li
56.7627 16.4595 li
cp
clp
0.25 lw
0 lc
56.7627 16.4595 mo
85.9282 7.11377 li
92.9966 8.01025 li
63.9233 17.4189 li
56.7627 16.4595 li
cp
0 0 0 1 cmyk
@
grestore
gsave
63.5557 18.3389 mo
57.1914 17.4824 li
86.3462 8.10742 li
92.6284 8.90723 li
63.5557 18.3389 li
cp
clp
0.25 lw
0 lc
63.5557 18.3389 mo
57.1914 17.4824 li
86.3462 8.10742 li
92.6284 8.90723 li
63.5557 18.3389 li
cp
0 0 0 1 cmyk
@
grestore
gsave
57.1914 17.4824 mo
86.3462 8.10742 li
86.5327 14.707 li
57.4165 24.2646 li
57.1914 17.4824 li
cp
clp
0.25 lw
0 lc
57.1914 17.4824 mo
86.3462 8.10742 li
86.5327 14.707 li
57.4165 24.2646 li
57.1914 17.4824 li
cp
0 0 0 1 cmyk
@
grestore
gsave
57.4165 24.2646 mo
86.5327 14.707 li
92.8086 15.5288 li
63.7744 25.144 li
57.4165 24.2646 li
cp
clp
0.25 lw
0 lc
57.4165 24.2646 mo
86.5327 14.707 li
92.8086 15.5288 li
63.7744 25.144 li
57.4165 24.2646 li
cp
0 0 0 1 cmyk
@
grestore
gsave
63.7744 25.144 mo
63.5557 18.3389 li
92.6284 8.90723 li
92.8086 15.5288 li
63.7744 25.144 li
cp
clp
0.25 lw
0 lc
63.7744 25.144 mo
63.5557 18.3389 li
92.6284 8.90723 li
92.8086 15.5288 li
63.7744 25.144 li
cp
0 0 0 1 cmyk
@
grestore
gsave
382.807 3.66162 mo
369.63 1.24951 li
369.908 18.8535 li
383.075 21.3345 li
382.807 3.66162 li
383.123 2.73926 mo
383.453 2.7998 li
383.461 3.29102 li
383.744 21.9492 li
383.751 22.4399 li
383.421 22.3774 li
369.596 19.7686 li
369.269 19.707 li
369.261 19.2183 li
368.966 0.640137 li
368.958 0.150391 li
369.286 0.210449 li
383.123 2.73926 li
cp
clp
0.25 lw
0 lc
382.807 3.66162 mo
369.63 1.24951 li
369.908 18.8535 li
383.075 21.3345 li
382.807 3.66162 li
383.123 2.73926 mo
383.453 2.7998 li
383.461 3.29102 li
383.744 21.9492 li
383.751 22.4399 li
383.421 22.3774 li
369.596 19.7686 li
369.269 19.707 li
369.261 19.2183 li
368.966 0.640137 li
368.958 0.150391 li
369.286 0.210449 li
383.123 2.73926 li
cp
0 0 0 1 cmyk
@
grestore
gsave
368.559 6.0791 mo
355.395 3.64941 li
355.688 21.3101 li
368.841 23.8091 li
368.559 6.0791 li
368.873 5.1543 mo
369.204 5.21533 li
369.212 5.7085 li
369.509 24.4268 li
369.517 24.9189 li
369.187 24.856 li
355.376 22.228 li
355.049 22.166 li
355.04 21.6758 li
354.731 3.0376 li
354.723 2.54639 li
355.051 2.60693 li
368.873 5.1543 li
cp
clp
0.25 lw
0 lc
368.559 6.0791 mo
355.395 3.64941 li
355.688 21.3101 li
368.841 23.8091 li
368.559 6.0791 li
368.873 5.1543 mo
369.204 5.21533 li
369.212 5.7085 li
369.509 24.4268 li
369.517 24.9189 li
369.187 24.856 li
355.376 22.228 li
355.049 22.166 li
355.04 21.6758 li
354.731 3.0376 li
354.723 2.54639 li
355.051 2.60693 li
368.873 5.1543 li
cp
0 0 0 1 cmyk
@
grestore
gsave
368.873 5.1543 mo
383.123 2.73926 li
383.453 2.7998 li
369.204 5.21533 li
368.873 5.1543 li
cp
clp
0.25 lw
0 lc
368.873 5.1543 mo
383.123 2.73926 li
383.453 2.7998 li
369.204 5.21533 li
368.873 5.1543 li
cp
0 0 0 1 cmyk
@
grestore
gsave
369.204 5.21533 mo
383.453 2.7998 li
383.461 3.29102 li
369.212 5.7085 li
369.204 5.21533 li
cp
clp
0.25 lw
0 lc
369.204 5.21533 mo
383.453 2.7998 li
383.461 3.29102 li
369.212 5.7085 li
369.204 5.21533 li
cp
0 0 0 1 cmyk
@
grestore
gsave
369.212 5.7085 mo
383.461 3.29102 li
383.744 21.9492 li
369.509 24.4268 li
369.212 5.7085 li
cp
clp
0.25 lw
0 lc
369.212 5.7085 mo
383.461 3.29102 li
383.744 21.9492 li
369.509 24.4268 li
369.212 5.7085 li
cp
0 0 0 1 cmyk
@
grestore
gsave
369.509 24.4268 mo
383.744 21.9492 li
383.751 22.4399 li
369.517 24.9189 li
369.509 24.4268 li
cp
clp
0.25 lw
0 lc
369.509 24.4268 mo
383.744 21.9492 li
383.751 22.4399 li
369.517 24.9189 li
369.509 24.4268 li
cp
0 0 0 1 cmyk
@
grestore
gsave
369.517 24.9189 mo
369.187 24.856 li
383.421 22.3774 li
383.751 22.4399 li
369.517 24.9189 li
cp
clp
0.25 lw
0 lc
369.517 24.9189 mo
369.187 24.856 li
383.421 22.3774 li
383.751 22.4399 li
369.517 24.9189 li
cp
0 0 0 1 cmyk
@
grestore
gsave
369.187 24.856 mo
355.376 22.228 li
369.596 19.7686 li
383.421 22.3774 li
369.187 24.856 li
cp
clp
0.25 lw
0 lc
369.187 24.856 mo
355.376 22.228 li
369.596 19.7686 li
383.421 22.3774 li
369.187 24.856 li
cp
0 0 0 1 cmyk
@
grestore
gsave
355.376 22.228 mo
355.049 22.166 li
369.269 19.707 li
369.596 19.7686 li
355.376 22.228 li
cp
clp
0.25 lw
0 lc
355.376 22.228 mo
355.049 22.166 li
369.269 19.707 li
369.596 19.7686 li
355.376 22.228 li
cp
0 0 0 1 cmyk
@
grestore
gsave
355.049 22.166 mo
355.04 21.6758 li
369.261 19.2183 li
369.269 19.707 li
355.049 22.166 li
cp
clp
0.25 lw
0 lc
355.049 22.166 mo
355.04 21.6758 li
369.261 19.2183 li
369.269 19.707 li
355.049 22.166 li
cp
0 0 0 1 cmyk
@
grestore
gsave
355.04 21.6758 mo
354.731 3.0376 li
368.966 0.640137 li
369.261 19.2183 li
355.04 21.6758 li
cp
clp
0.25 lw
0 lc
355.04 21.6758 mo
354.731 3.0376 li
368.966 0.640137 li
369.261 19.2183 li
355.04 21.6758 li
cp
0 0 0 1 cmyk
@
grestore
gsave
354.731 3.0376 mo
354.723 2.54639 li
368.958 0.150391 li
368.966 0.640137 li
354.731 3.0376 li
cp
clp
0.25 lw
0 lc
354.731 3.0376 mo
354.723 2.54639 li
368.958 0.150391 li
368.966 0.640137 li
354.731 3.0376 li
cp
0 0 0 1 cmyk
@
grestore
gsave
354.723 2.54639 mo
368.958 0.150391 li
369.286 0.210449 li
355.051 2.60693 li
354.723 2.54639 li
cp
clp
0.25 lw
0 lc
354.723 2.54639 mo
368.958 0.150391 li
369.286 0.210449 li
355.051 2.60693 li
354.723 2.54639 li
cp
0 0 0 1 cmyk
@
grestore
gsave
355.051 2.60693 mo
369.286 0.210449 li
383.123 2.73926 li
368.873 5.1543 li
355.051 2.60693 li
cp
clp
0.25 lw
0 lc
355.051 2.60693 mo
369.286 0.210449 li
383.123 2.73926 li
368.873 5.1543 li
355.051 2.60693 li
cp
0 0 0 1 cmyk
@
grestore
gsave
368.559 6.0791 mo
355.395 3.64941 li
369.63 1.24951 li
382.807 3.66162 li
368.559 6.0791 li
cp
clp
0.25 lw
0 lc
368.559 6.0791 mo
355.395 3.64941 li
369.63 1.24951 li
382.807 3.66162 li
368.559 6.0791 li
cp
0 0 0 1 cmyk
@
grestore
gsave
355.395 3.64941 mo
369.63 1.24951 li
369.908 18.8535 li
355.688 21.3101 li
355.395 3.64941 li
cp
clp
0.25 lw
0 lc
355.395 3.64941 mo
369.63 1.24951 li
369.908 18.8535 li
355.688 21.3101 li
355.395 3.64941 li
cp
0 0 0 1 cmyk
@
grestore
gsave
355.688 21.3101 mo
369.908 18.8535 li
383.075 21.3345 li
368.841 23.8091 li
355.688 21.3101 li
cp
clp
0.25 lw
0 lc
355.688 21.3101 mo
369.908 18.8535 li
383.075 21.3345 li
368.841 23.8091 li
355.688 21.3101 li
cp
0 0 0 1 cmyk
@
grestore
gsave
368.841 23.8091 mo
368.559 6.0791 li
382.807 3.66162 li
383.075 21.3345 li
368.841 23.8091 li
cp
clp
0.25 lw
0 lc
368.841 23.8091 mo
368.559 6.0791 li
382.807 3.66162 li
383.075 21.3345 li
368.841 23.8091 li
cp
0 0 0 1 cmyk
@
grestore
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginPESGSK+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/M <1C60D8A8C9B59575D87BE2168EEA28120D9030AFF41D7AF515ACBF3649BD2F40DE0809DEF2C3B0D88F5433D0339D1594A8BB5B7D6E9E407C9B2CF774E827F6D240DA9788FD58FD6A6693D238D2DD35EBAD61FA6DA2B1B88D98FCBA1CE329DEEDC1A2CF7DB3CFF85E91DB1E05982789211A03C97DDC1A73F165FD37FA7D660E3EF66841B5442F7DA5B28127C6557F4AF9EAE68C31E263F78BC4FE967BBD3724E8E4E7783BD6F3F0D1F9D36FC073BBDC3BB91498E2940FACB05B3E1AAE653273D1E1C1DE5C399F68768F7EC53985E7DF8ED50093CF6E6C7AD007BBE64BE70B06C3BE97174E50F93FE7A1F609DE48AB13B0AFA023A5454E929FDB> |-systemdict /gcheck known {setglobal} if end {end} ifendPESGSK+ComicSansMS /Encoding getdup 77 /M putpop%ADOEndSubsetFont
/PESGSK+ComicSansMS*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /slash /zero /one /two /.notdef /four /.notdef /six /.notdef /eight 14{/.notdef}rp /G 4{/.notdef}rp /L /M 5{/.notdef}rp /S 3{/.notdef}rp /W 9{/.notdef}rp /a /b /c /d /e /.notdef /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]PESGSK+ComicSansMS nfPESGSK+ComicSansMS*1 [12 0 0 -12 0 0 ]msf219.236 62.4927 mo(Multi-domain)[10.5938 6.24023 3.28711 5.6543 3.36328 4.99805 7.04883 6.31055 9.32227 6.14063 3.36328 0 ]xsh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/PESGSK+ComicSansMS*1 uf/PESGSK+ComicSansMS uf/ComicSansMS ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 11.0%%AI8_CreatorVersion: 13.0.2%%For: (Lisa Tauxe) ()%%Title: (butban.eps)%%CreationDate: 1/4/09 11:03 PM%AI9_DataStream%Gb"-6LOSeT[QaWF!;A_c$%r:2FAaO,Uldnb]b$&m88,8:cedjM5:stt2p2#iRI`N/bYA4?=^#!'97#YaTK&@#H\:j$EUn>):M3co%bu4O/.d`:pik@\9CiCmqjtb=`P"e6Y.%<dR;!Cq9)5i[s$6+t;QkZR@9tKqY0V6h58QV"LdUY<LV6%H(:ODH3[Qi0'[f8o9%O_;I%(PhDGO0/gS):+u>A2NL.g1.,9col3hVpjTikZJWMS0qM<?mtLXER^TU;c*n9@p?J73skQe(!tk!lgo+?3:@/2e@j3j+/-^f4@lmL%h[O!P6UO=kd&?h>p$#@=PcUL7VW&JN6,/V_FI]2t+&jGT7Xnqs3g6B<_3\BbF!/`Gp1uE#^P,4f9jok![V#YR-C[Rr'7Q6>^ea?9%\Ki($@6"Gi:SfhoF=NLE-Sj`n;G,uVnCKr#<u/'M3uH9jdMEdGD9sT1.>Y=Mi-u:K;AmKHU`&ajm<g=<GN/^C'7Z8jeZ+h)0Z8U1%lghqOE.c%-UZLCsJ##?9/Ue$_,V,);*(HFjV^_GhomCl3r^RMG\[>,sAh&b/PC#u?KP'6C'`*maV\;XOMG<u9,j?OKq;ZJ*3uW;l%;Zl]d[aH]4>Res2NB$\QN3dQ8<3%2QHJ1KY(k8"P^skm'])OP.ItU'Df%E_6b669fX&RX'Tr9B%[T'='2'6t\m/\nu61#j:80_;q%B\LL3He(YkTTbW?9_d@Lr+?6)7A52^$U9hHpmK7>cVd@1Q=]#6bJI2DKr6IpT(5"n-FK"..$[KCVdpE4-'M.TRH/XibtJ>aA26t.%P6#BKhbYedJPttRr.ItE&sOl2TOt/+:J)o]_t3A^kEAK9c1CFpk=H[\0qjr\6[C"RTr.CNAUOUS$)M$'n.SF1R$<_rB.tP)$"[L4%n.WgDE.ZSn0u6Z\"=&Mjck>:NBc0AC5@N@:)nq"\6(`h"Ujjcrj+<n"L?IMWAU]/M_ILGO_BntKC6F\ml3Zj22UXZ`Y0<#+K)C7!%0L#7</WgnrUF+=.N59E\"liNnQuIc/L%2uTp]R?:o++%ljmW`WKMjKfpdo([8."6*koY4NA,n#Zj@>Uo66G/IPTkKRpd.GFW!CHO%?)1iUZ8,d_K^oYr^uuKSK[E)&12?@o`Wn`%'Tm;N+5mO*$U:<nN6W59,[8Y:_E$$HO`!UB'j4D0%4ETe6=`C0$Y<'>h[+FYl_In)%2kXED&S5d3Fss3Z:0K%<a`I$6:eij282HZT_Ago)O8fgfe[1msnHBVDeMKqXP:$/p\eVd-j:?!@18JTp2TlGo[<Vb0'M^u3N>i5,%$GB'HUg6l^VCDERIM8bQbPrE64OJVAJ+5MoXSjLGI"=\;I&$Wes&(<:=o1qmV:4LH3j&%FQN%[,jGET"r$rQ)BC.YRk6l5Kq*t6U%rft[fZhBmdUXXe3T#9@":GT-7ZgrtN7cS"<V0IUT;M]sZFFm)(.5&F^(nQMt$>K&6^4B)@R9Y@8"m@.FKVRNUNoq$(BS!Mu/Wmg+%$'!\og/'TE0e'&^]GtZLOi1hl>0:3^<h+P)H:orf"]>j,:*dqg<*X2>f43`cdKe8GFH]am'VWtlctY,_Ki.&LOhO];1nb1'-Vm99%i!$(dh^UeLQFTBqg*6Fr5/Fb&"KK:)9diI*S<R6.^G@Q.>`'_thuf3sn'J_E:p57t0$l`$:bkgCCP6Hp<s!l,pd`&L^I\gC2PR+f%U>B!MRQSFbF7Ka<V('ct6E,L,d81`q,"Ip?lsdP`pc5]N/_&n?R8O^4#<eBn,<oZOndH;UDgIOtZI/j7>*4aJpW\o1#liFY.=(W+%9D[$bP`sKK"oK(XLa%uB2j"\-J(d#:Q7scCDF*ZjUdtj>af;[@g**i"n9CV7d^gVujDWg_;5Q1Pkm1+\bR0dn?Jto`QMHeFqUY:U%JV.[b[k]^*.4t^GPm'>sMYbah0,4pp\44qXY&n521)1*unl`B6K#Vr--0/dFKUuc!F.4^"^VQ`[Ep49/Mm5BH&]+dIq50T0REbpQ%\"RDga?2T&hs4g?:91M&8umX.\7STUQ.:phRC?W35;UDFk*dj[k%DgVOWNQEKe[$g+l%aK#0Y(b"gndj';U]!1,IRS6O@4/@%Q:8%6^.Lgfn*7jbd\uMb)FI(/P=2iYI'cA>`EA%S^=jk2ImLsWT@$temusg;(NBE<r7lGWRUd`/Z*V7@b(:os+j\+;-?k&Ab>oMQ]fCk%c=i_'p92S$DNQ=,@<pnCot6OR`"iU=RH;Y_<*BFjJ=\P(Q,JiQk!pFPX.)`tf@F+OG"&/>XK,M_BuNppk??(*dKt>9@Sr!KO^:m6%ClqlFo4$U3bGfXhQRo)qdd\#TPUY4_jV57\P1C6q[u5MA/X+js8k*Q,3okJE[&,9G;4B;b6Yhi'B+uEFdO?E[8nh0BPtmLq`FY5o%:*aehKOUJYeT#&jJ9!bEL,$kR61k4u?a<C^'9A,CJ@%`7VfAP]`Hs&9ao.K8.td."J#JESL_j'c(t'Jt"r9iL's4en`!\'/=7a)Y%]He1dZXe`r6/RM8eB^f4@4ImGGR,ndob2Zr?Lar33t`VLk>W<DD9ulXK@8EL'2L2q$F)gQs+dP7Q=CJlE/[ko;2JNLnu,))i<G-]%#tL7?R7%CXDhV7r7%i0sKn"hifXA\F^mHh;7Iumg>Z=mgj[&E1,SDDH%4t^"-)T&K&/[2<=.`lG"M#m9U<'lfYP9b2g+S\UW(:&Q%&EtS6:%V-D;kXBhQdGJ^3N]Xab'`O:"Y<KDS7W(_A>rdhJ4O:*a??n7:re+?cp^EEgP#.)dO&(=idk+%)cpN_Kat=Gj[:"VStn32%<HrE>&o\s&1agH"k_O\Wa-P]m/Fb#KT4ZP'eu8`8/'SuB#cNLabG9AooP$2a2RQ4Z.EY7O(J,jN5T5t\AVb2$Hbb-+HA\6YHNAJ]%iA8Pmb4Z6i.H$=9B_#:D%j&4.(J$=2aqRqjX[6s9(HLV$ohpTp&s&1N-L3+/4KcmZrgb4>Uj+m$0$CAoM4?pQK'4^PH)AY.-oSoA%1hdju<_:H(iX?r+)Fs2<;Q[<1`i[Cr_Cb7NU6%*!K$_!8H6=eLh+BtYR%lX%.F+#u;B0D1GVVDL1?N>>N0-[W&drcY7,/moR06P>%,V9m&eppYPB!q#Zp:XoWi]LnF3Qb@]DOJ6GTGR3o5[#:I&A$h=&h>DqKD$^7$Shc./nD=qoJ(Rt9,"$$eLn(n.idsZc^?ZmR6tQA%J+?3`HmX:-CQQ*DZ^6e';"=\aa;ZZT$TT5h&&^iR9Cc?U6_8XiS+nqdNBD7R)s1Ame*oGmj#$b[X88C61e<UP'X#MtNT[YSFNM2=%./jn+JG^MQ\+(F.+7X]W%((SrRT`tZ0Jqoq#5CqA!Y-K;4JuRnGWA+.T0Nb![\t*QdVf?P'(J!-'2Bke.AG"kjBsEhLl_jUJoMsV%1U9.ubQn=IJm+#Ss+)LDn@[[!)kKKs%J8U6o&L`fK'7%QEt5[oO?[,-cVp4K`rG%c2UX,RZi82p^cDIL>"q]66M:Pc#'duiKcbtg%j#:'F[)bjD%J'tYQW'u[0iG7S:Q7@Bo%K^\3@/8qfb@aqK7WtFSf.RR-o$pO&(1<`&uh@sMrKuV%#LuTX@V>$/Jk>`XlVj)m=]Ba%[3XX]BjT^0V=Ompe4Oa#1'^]Fa5hW9m-AdNo1H+!R-c(RJE8niph2MqUWBL!WCg:kenQ^<+=5<fp*#p'4B4-g>5!j'-M*qTMu@R2%Q(\(&oBiBMeShR.Y;P,42ZHh@"7qIr.e(\ThaGMM9J;XN3mXYP\PhF62;^hQ2H?+$U6YD9'!3&6!p@=/=]X/R1o8.76pd/>Lf>jr%Po,iUbbT/T6B3CMb1^$%^Q<URh9e\_1k;\+Q(COiqH?9Obd@du7TcNmO[.J?Oga0;Y]%C`8Rbm<S#LWOD*:0?=6dAgf;+&;kPCGP%Y@]&&\gXa$oW9U/9Nd-;9o'$?s2hj0BEn8Ca)SDm+T=d69M-1oX?kqqq?Td:`@?8U4`U<uXAVC6F(0Q^<O$O,Vj&?hbA.q@j2*<i%9D]4q9<\U1b;1L.Z:lbb:!/aiLd$pR@cF2,TKMYYc9M-*1`=-W$qWGm:_P4oaX;A2rf*O,K\:b<Hh"A/f^F2C';WJ>F"$f>ak3ND%r_%e%"gLC4+Gf6<'J#"'ENIY)H@t1\*@nV2o9g0%SdgE;+a0Upo>U.I)JrBJNE_=K]*#<"+8(E+hm'UjL=C/%`k+k'!j:dG$)FSo%X"(&J#Gh.r.5T>9)5q,d\9VFt6HW%ofnllu6nLJDUs)EX3@R#@MY^e'[;<&Fq'h-)*[4Dl@U6q@Qo#Jp+cJ`#\o8Q6esR&(_CRT^%Mnjo.<t*Ur[E#u+&91:[VfYaN]i]J6rC7iTIa)=XZ/$'_D=JuCBMc=!N[M0)d#SpaYo@E0QG.b3=4?,5)@a]-XcW,N+(6-.c-9Vm%(<S)@-Xs84TV_p'!WF.JV=&^:+-ZhDoY'&Wmp(r^OM/cN`\HH@m]\jkIj4+qFPB/^6*8ZZ:=/&SP4:P&;_<qTZ_>a<BqGYYK]-l(%Koo$WG#sJ7aCGuq@?Z2+@hXrdE=\0G'1Va5(1b?mgo0dp[#%"]hif^?K>.U5+=bi>Sj03(ou/hWdILP4?qR]$W-%&q\2dot5<o=:%`<5cQS"b?Y4V//ef:&:Rg6/*ALd.Q,Z`hJU66bEI'm(X'f)8ksP#58:.hgL(POHijid.aC3[]W!8>-u.Hcij:8;TE+i_JCT*I6.e%R?F@39NR]W`2MK,6/G%]'Phot64fD/)XWH2c,ZGnEBY;Lk;/ohPHjTjlaBYR?aG\e==#S'9kcd(ZMnY3OIS,EAu[u]:>dC*f&+mr%]e^YGH\pu/`Uq-jM6Z2!Bb8r_V)a$(S.!SkVLn8j:=?Etqrne66S&gukNsGhOGjXgIA@L^IrpPPCqp49SJ9d3Z1,S"VeOL:V!kWU%He9;0q_9q!&O)!eRu3Ed]Sil-!4=cg]7ubMB4<eEiNqqGd@!B2.6m$VT?a6Am4#()[nK4;*TMh3XR0Za\1FjTdJcWQIgUWO:-mh^%'&cmOT2B5VCrOJ6_oNLEPqBr.)O_I%<T^ob_NT)B2OpO4'lc"$Sr`a^?a.nHF9I)q4o=ddLIf+SOC/!II.WU@khE/S?NU$Ug)`pT%NpS\m3$\4_^Zg+j",SMN?YFpHk(B)[hGBsT#N\@';4L9droR`H<9Z2&;TY0<`ns,Ys,9-V\AJ#Q9K9`<P?boY;aHrPa7Y$Vg\64>%r[50]C*RAD4nPC_eUb\\[3tN]M9bm)>84I@pnRE7K32U-*_7MM)Kjre_")T&6K9.%=cD-?j+RD"*9l+1^FbNH&r)ULN_&g^jI,oV%D/njj1e\RgQp%5g=J%H/:.A/Ae*V($[AO'QGP9#9Opqq24D^)5U*"lg2@8LNaY0r47[$6S;]AG]g"2_-8As1./mTVfT"o('fg!P@%pgTS"'Fs(4r[\u*G_0Ue?+3=Urt(^t$rNudN@CCV#=C0rW-mh;%DYaHODdM=R)e83LK9ZYaRT6h=":YT6!%D\SGWYQ<>bZ.n4&Yc%U.2WnNeZ9I5Q32Pdq!VPFA]\!o\^lA-4^QnFR/O;BUsCJa+@)KjSeiaqJ_#bpdSWhb9-I[r@`)R^PBOO]_+Ri7hd6m$23Q[5(?D\%D$Z8do4'9K3M/M?>%'/Z&dhs-I+f"`Td$_YREJ>663W:g;##ZeP#2-N(uOt35VQfU`\h[>TZgY;)mS@Q_l/AXZ(/Sampl)c)o`S&%3NPuS5#sLj4NPqje5_A`#:N.8^k5hl"ZAX\)mpLuLda(]e:1+g+h(Jr<&C.Bl3nj4jp'g$BoL<(+$@Dm#]9@J2N^OUo=)66Z0XIX%g;Xb_""c#caka8bDP,!DOO"UiPtB$h6`'#Y)%B"^$p:2^OI96./!iuLC"g?U7cn/BPq[0D=_NGa#V-NbQ;4H6`Q?=`C0X`0RoI8W%)^@:-72*df>1WmhB06o'1YN\nf1ucB:s)&e</NPld"5Yo:dHmO"+M/AEAYQOR6`L7JX[,:mdA(s/ln?7CFFK^s#h%Y4lI4\R/H4+%o,#du#5N^%A.YjI\UcRX[f7KmAI]:]L5#RsdR<^I/JCt=5PQ=o(Xd*q'Wo1S&_['GA0r0B6OTd5n1Wathj9"aqud=pqOm?P5QXUf%mT(':J^DOGe(L(]UVZ`/JMcR!Ko.S#';<q>^mNCMO?rY*Tb8Km`BII4(Ijqr>-Z2E_\A'mUFRaR$'(K*<$>jYYZnL7#&I0oP@<ZC%ML]>q)/FT-lqku8e"j0j:Vc0:4aAUQQQSm&n>a&;_;dp^M8jR"2R#[IRf)Jfd-D"u"rRF_(Sd"kMeng6Y+[bO!d;lcfg*28T"WjL%9)<H0D"CVIWtHT%?)]tEHnE[5r3at/bYPV]<<1Aq)T8W[Z89*,Yh<GaD=,--X"b8eMNgs^?7C!%8[Fp%+MEOP.D=d4ML_*B\MB[G%P"0GJ(P/W6`E862BK?*j$&M^=f(8^!\dMf&'>k?"?)os0T:f*^(T[LAXS..KRVf-lVW&JG_u8I4XecZM!(@@KR#Eb[EsUA1Bf9g9%QlN9*d^7t[a)DL,G)W></WjI>(?&FHRRj7I/RWb-M.hcAk^tjMBT8\poBm<oAQT%YZs\kc)HlUF0j)mKXT&[Z2AN;><71ZZ@.!uG%2(_p'l[lOa?o/n(_&<J$mQ%"E?L18Gd?_K_oPJq=S@porW8;Cls2.h6WAr+jC7N!hO*b($dPV,am'2(W$DtMfnP64^EXFqqa8bZ]%>Zt"jqJ&Ha%]-dK;Qs6$3W0XC$kjFZ-.bdgj:TMH6Snb7r&&61oVG:B19J\N)W^6S/#I\`Oo_1s.Yp7n?`HG20H^+uq_$`ISduDu%qpbo?aUZ(5UBK"Y@[[-:KqNLFXg;bSA_JJ.DP3h0W_m!s0n"a<VaS7NQiu0AhK0;T?cD,F\s&gY^<$D,rka%@n_^e6fE:]VVA9bF%r6t?R&M";[o-'D&;FGLL:]_MjcD3&cr*@:`TWpU[YHF!nZt(-@q<u^MN#kJ#1W2Rl4qhJL@g,_GP>ZnAM%-hq/(OS:%""]kZU`uh%ne?PsrgCq,%IT4PemE8kb3=RJ?hCPqE3>FZmj4HD@o[\_8gM<Ps&/8-(F"*3b])#/JO%VR1J5au$0J8Jl4!1D8[O8X+lP]KJsZc:%n``\bB_p?A"RX8::ZEP(;2jX+n6K]"^IchZIsG(;./IkJBGb'"0$P`<J$10qF)mY5g(55j1k8QLX#U)u]kG2rpHOCsrs`-]p&F\,%m#D%iC*3rjh>_Y&bf8<aQ-lm[G%:K6ZTRYSr2&P.riP3QZdEkEQ#Rbp^BQjBG.A,V0)4lUQ$U!:bGbF6Ul59Hd3pqa\r>bn0;J@+%h`_riH"]-qc=DYrJh*NZ,8W(\):`2errDeSm9X9X(V9a_qK*r/n@s<iG#9bkaM"Sp]ObH`K[ktdkY(r&-(M8cWZTh$?ZN1%"FA@=%);Sbms8&",dZ%%A<$#uQ\[+dXqJT]glk!![#N6^i,#@&sE?CgeoRFCHSkNdL&_VhY+.'/"^KkKCLGbZ&Q^TX=q1&;"S0Ng7E%Vnq%a@CN][//5Np456Mg/OSiM?%Ymb>Tn7;#EP*BYp\moZg++RQ(?"k@JlG<W3)P,hIk1s&ht2k[OSJeB!pfDjpU%cm8;ap$X59,g=uU%p8kq[*LSeLf]gKsF'eK6=4j2"G_](?jr[,-\Bs,o%i<<B>nFo\diu##<Y_D`Fi+XrLMlk5Z2($^V#)s9chsC<E._6lPbIW:q.toq%3&e%./Z:?:gLFsO7U5?[KA%@<r0"W#QqSdXK^CsqT17k2HS#Ra::^6)'5,beAJnd[Y!n[k<`ENB=(9^CZsb.nnhDD>;tt_%0D>[W%G%[HOXd%Q#ii_`MHi,mBIgZ2/A?&=oI[2F4?elMf1COP-^P%YY9&9p$&4qd:lUuDVK..]^A@)=0"4DUlj<s>0.*&LgPJ76?$Cg-L%"\L^SI16e3?0!Z44%"tn["n$gGB$Eh_*@_<InqHObhnrc99"\mX3BlJdq;SeB?f_,s%X4)pamNcK&eSn]0Dr,@qG@sWDnbK[Ad3-%BdN_hn;_ZFk\n]!ZNV"P?%L?+J3)5>=;TJWK,#?bMc;,?r!`YcMpg8]l2"pQCCe[QBMepT-daTRSP%os<85m!C02>aV6;4ObG,,s%24E;&A/ij:R8hmLR^F3XX'1bR1b;)==JIVPn0&eF7O3,@ONC5JOp7?oO9U;8=TUdh5u<bT+Mcl2XX0P.<lY``oY4;bN2;s@0%K#C%LbIF]I)UE5dFEQF`iRfu_PAURI(,\9o+\S3!qiqfd<]oCQ1U8W*h#_t8\#VC<3>dbI3kuee?'?nV5eEuW0QR>agJ(DC<=V]>cL]W%/5Pt\CGgQY5",MY!M*8d."%^X'TWhGi3u./bcZJ`rl2V"T*taBXW>Y?=Z=TTWJ,1WgK77J^-2'P%,f-l7:0pbG;gT@m96IBm[BN?%HTKN/4/PJ>PNb:>*nY"kAaA`5XO\rW:nF#<bBHXUi+\9#dHED->l\?>)J"*^VY:-7p-&4L;P?4AcMf7!_kCV8f212n9HPD2&#9=o%)[_`8Eep_P'%7m"2$o3:A?^>>;6DcaR=M'PVESbEJlc3q*:rD5@Jkh#[>fo)9Qd69pCbsG'X@*u-].uoTg`3t/iH.UK%;HEJrsYd%1$N=)m@_ht-fio/gl*IM!`5dZ&W$U<3/r8>l+gj8IMgLB&8pEW,p,\bHT#L6j,"OTqZgUNSPQ&4_?fnbV76ng';Z)#L?5B[0*6%a%Mh"dD6oeC;`pQDL?e!-eL(u9h?%IoS5b-do$F7T-XZ?nA<Dr&gGR%<(5UF(A10=$e^_W`r,7d=RHR:;0[?P\pY=LCobTb#mjVFiW%cE7o3D`SW.j9V*c[Qp6%3OCBM@9Pf`@4nH>4TMZ%Zmhh93YB#VKB2ln]XbD8MP7*im$ddY0;S'fC7r'J:5QKK+p1Dpm0pttB[UrI%>3n[*ib-c'B"?,m\n/?n.1,f#6#"NMgg:PUj$M4'pE+`$9?M@sOqT3?RFtuH-G_7Pl>uS2Pn_H!6Q*7I'7)9B]&I78:NCqIMtVm[%.BtEKbra(H(os7(k`DIlCh]$+SH7rHA!+%cfq,0I'K1ZVBLRtX69CDLdTmi\/Jnpq3K-lL"jP7oQ@_NM=HLa-:1*;TC"/6qZ!oU@%"3Dm:_GPm+Zo`7V+?9iN([0+,3=/VIB?_0<,3$LfgiY@P\57N7T$1G4ktS2ZHt64Z_B<kpV87R3&1PkYMEStaK+bq$[gJtn@bTHT%MGAMk-c<3%&uIh$2@12LK(e%'YG\+6M5.PC1I^QuX)QP5Klp#qr!H_rioELjX5B>DfMb;d@k)(.OnJoln2YA*2?GE;ip#gN-^%^B%lF%$?bI+1l?oDa]-nZ2[A]2P>$VN./N#7FkB9Il%[4eLK_B!k1Ztt@nG.qN36N#o].O`q>QKW*.rf8TW2PkBFmFW1t1;Xl'4?JE^%ECO'e27>R\74au1k$RO:W^0T#MB[J$=O\2P=;)#lV#ac4\.fU!#X:9J$L."S>Eg*Q?$"Rfg3$TcTs1Q<*m0@p+O7*r?B(/W`SlDU%a[igp_CF(Wb3Gr!:tfH-C]^')fUn+n'FT[.UFAA=iAee)6kEs"s3FS$Sl[a!5@3>OQ2L8`-6QP9<arMAN4(?/G/ddW\3X1J,9Gk1%jcuU::XH%#J:^[&QN_>2AAp,+)N90#dL;8AT"&414e#[frF2OM\AB$TAK=0E?bS[n+Zi<NZUHB<'8+&!_ou#T=XV+b'ka9!)74W=%=;*&f1`--=@5seTb9g!4f67_foRm[Lmc^:8OP;&>ZH+@fFbq9mXgkr*(:Q-X#6$#p#e9GgP'Ir>2Emd:GKMS-EhfG.?,r]"Hkj2P%Z/Kq^SIE%[b81DXaC^[F["/!e2:1J4bkda(U+)GKl%R-J9:PUsR;g'.1"H^fIJMF#gnRE]p/734N9`;P7grnWFcVLR6onm7:_#p^%-#=H1Uc:e5'?Pp(D_T\g1fi.i+ph.QFG*r:4R#=Djo+h1>Wes&`u;X'\.`Yb`H4-ZB=0gtChHc.N`F6?5e#.@HCQP+M[a8L)L&!r%TGh^bBJ;+mAW:<SUJ`Mc24AWP7Vf&1qPQK"'h?EQ37=[4\@6:=*I$[T/FRIj4F9e7+^T/[/s!S3/L*!/fbo-u)4g-*>&&@P9C4/f%A/7Z"7=nYq-@jLK>7%[_a$5$_Rme-%k8'h-m7JAY"YJ((\[Vf$7$M>u(jrOe"sW_,UNCsV:2m/f*aJUV#bN@e]6Pjt\BS;cFSgHa%c4oia`V3d<o]G0ZotXJ=S<+2=n]0EF>+"h%=7^ih/,V`%^'gRiG@D7BS0\NO9tm%A:>[hKkN(j[(H@;"n.XRol7XM")Y:RK@GL[C%j>n['UVc+[Gt/QE8j2U1^MafNWXkr]o2R!YSVC@0R?,?R*n>[#.>P+$BAq=C)4T8.L$EZ7OfIW]6dQX2M*LCunY:F(N\Al@/pGtI%]gpBZFuVc=cHG23eH:#@^=>d3c:_0/9:YDcRYC8Pe>VJMc2'O@P7hMrO(RL`r(n)Fo.fM$.!AX9^;P-h!r:K-R]*#]X@QK`&CcV1%8n-F%s.[4@B8*Z[2LsHMoht^tAf@Ylr95C$fSs!3'0j-`^P\F&hgN`p/"nSaNN9C\_l(Rir[<'fM+"8p$p6e9bsJbjMjN2X9-@K0%8CrUbT(hbKBBf'>Fnk_iq%[JE1.R&<c_t4=5+HeiE4PW:<=3BQ`N>Kd0Qe>_>!XnJFi;o*9,oE:iKMF8T#.T+1`Bo9_T\W93p:'%%7.p8F3*@dr-@&J48WVk8LoXEqj?&:?8*$gt>7scWn8iuHaWC3YaguF&L&p2iDFpaEG=g)gdmTc*&a_XX&DqqLGG\,`!N"OK-[FI,%0UA8%km,qFe$F9G;#%<`oOrSIg>AGpI0$CRMXunmDQpHoqeFYqpkZJd)ej>*kPk9<@HnR"6Fr.@4]?__H"4tSD>lW14(`OkX%k+X%h`\=5FH;8CQ*H%J(i0&K7o_%uPP)$J^NWANfmu/C*%oJ"r[9:@>2.rTS`3u:=_5SLfGEt?4t(Nq``[^%hmiP%FIHDJV>+8B(;5W.%G<.n!n-)MAC7Q]TWSEM>Vd8gU9g;g*H<i_eq+]/8>,T)beuc;8/b4(USt.WHqUrI/Gj$TH)r=k)Fc$=d391Gej<"lc<b&!$9_lW(%e)\elj'Ks_FSbW!nS`'L>,Q$bH;TiGJY1SC_m7b6iV_E<ds^12Iq.=!d2%mU;4?'ZU"c=G#1r['do:c((edBBSR/.M:NE@/OeA]&%AE2t<Soe.brS`ltl,WXjVlj@K$-Q)Qc[M_?cV?W;fkL+E*8#Fl/H8MH<7&36FSZWE)HfA3mdr:*HJ&rAB9o)H>,OB_;`$/IDQdEn%/rFhCQDj]Za0]ue=$-#nB;_*)l4dBgq^Zu%44_#9X>70KoTHeXZ?_p7:IFmF%j(u1W@qX#lbdH"^p_]mX"\n)l1?i.^"kM4<h9'g%de<@YkP$3FFC<5K[op(UgZbXPhKuWqPc%^Xh]po*aI$\C2u/R1;NOM:SX.#88XiK(B3Pnue.q5T]fiE0SK`JJC3(lM+(!sRmI>eV%h!F)gn+0BaFde8W48h.Kh3C)#aW)-Y9ml>*<S>jr!mLX8nB@i3;,R2&fRZdn(Hp#CFR+&saeMTee:LJESRb9hVnqqteg[oH^u2<r%J$Y3JA_q%P$_o/`$g5fq0;-e2U+*aM,H7`WDq+##A+!;9S;)!\0JD+*e2Z$c]4,1:#^=F_hHaD)7_818,s!^3dhEUXIV*NqEE5:/%T:/u?/jutk);g,Mm#gPCr3VjJJ%E7<]s)lFDf6XnkHEj4c-q*j$f.+`4''\T*:S_fJ`89e:G'doB:MZc]/2WU&=W!mYA&$iT4IIj%$V<N$MlE2TZ\2'?fdoji4K#9QT'pOXD][&Ddo.P6gHM7k0$c1o,jX0NeD!t_S=&%n9t%4r-hDbUVjDg=TU&=.7kC:1YFk&UnFYfO%St7K:.V`%Ua[M'$9((NC?cjbkW<L>FNe7#%UPHKVmGbt"XuIi`4?YcBQ'0Bndo2NAeH5c!*+D:d[BFM`^84jjD"I;hHc/N2`ocOL%f,'fBIY>*$o;B'd)ETT9I62[NV0h`Hlh=_jL6`fp5;L:6LFM)k[d\OdcaI`pl_f0rm;)b!I+sBcJVSR?5.G``C/nIPO'?`b?OmA"%Bn#S$;`qgo(J!t:_$GmOed2)<Xg`^RH[[^Z*DP)Gg_?0E6\u=:M8@?92')9YI#g1h^JBlf!NTeh;4'u,$MB&(],JS/$[Z-.)PRVa%MqQn`h;r-[LAJNLF4$J\,>hu`]3EA-QaS(SRA[1)YO<h9Lr+B6eff6AJfbNWU<j_'QA(iJ:k%EXNKYkV,bBPtgth/(T?&qJR_?`2%#`^)6bZ:E\euY.S'"b'<(6Z_qSb$kLP36>-j%]l`?=e%?#=P-?k6d3dTA@BG6iDSh5H^PBVZF*W6>OJt@^c##KaILf)a;q`p[Lkg%OEqtRGhn(0miN-*d//ZDY2A<m=>`7uLU@uloLZ>%BE]1!-I7u?ZkiP?]+Tm"ATuV^Mme)>,7gp&Crt.^K9[AB9Ura.8#s)aL'R;C%k_iKnNH]%VV^%4bQm#uT$KK)SbD%=Ndo'WFHP]kULoiU7@oc;qql)aWm+X@OQ9ZK0$QnJ"\$f#)YpdN^dMTr1*n=N[H86#ZRU[$r%Bf=cdCO;bU;VubCk84QP]JN['I]9hultG_3;e+oNhF\RJ6PPn6\"D[1noOQ77m<s':]rjE30#Rt;4Os=b%ikA5Y(%Y6+4"FJ)Ta)%<[J"j<0LeRq6/4J]S0SKo1(0,%]j6DR8gJiTC[*t8U)N<.7pm>m_!b&(sL<]WEfD!"pn6uI<l9NPopu0#<21jQVOjr4?7.I.Y3:6%/0F/+PTg@/m)SQ`>##m>]63o:<mg];?m53W'h&Mu`,Y#lFZ/>607Sm-RBt^foX'oHa])S+Wjgk<;fjAVSS.Q?;e!e!Z>XMV4mF4'%#iHdYnIN.(]EFB\gPn5q%T`SAE<KIj8.(uZPQU]9O8MmF:s8,n5`/omIo0^&^UQgT(8U'B&&$`X8:6Kp/&o:+/c\+ZR/KtK*3,QF%#ukc$/<?'6n*Zf^@pO#Kb$=`D%V'XO/&Op@c6Muce?S!T[tHl,9<fW.PeOg$0G10r+;VtK]`%5?-GhSKa<M)[et"2Z%]beWBs8u,%b@=54iZYWMU=;I[aG$aP;mL?Ho(9T$TA%FNmdq1"H\XT@j@->6f8XGHG;\[P@kU*<[H7]X%miCPbAU9i*P!D);9=1`oh(e\ilHcR%EPB3me=tBRS;BV>mnB=<#qNc^SCj45pThnoTa*[VC>O!Q&X5T..^hfK0:J0L4YloDQ?$,W]pY9JOdO-D2>oA>k5-Q;Wue95A$HnO%9DS^7R*=<tG\J(neKFAm=_Vh!ermP@D%gn[pW_dXC&/,&;.o8dc<>ai,!0DuUSdK+$e="LW[G"F(<loL`^QY1cZpnPEtMP*]b4mP%;Le`@dEs1c-RuPK8L?(p6tM"s%X^;g#%aJhY/V.bCZK<omr6D`T/.:f9!XS\f[hBrXLL%9*-^%s2H"h"MbWYQ?s'qn3GtKjW9lo]%\0^_-oPI:XZ,5=?Qj(fR_[^mGdcND#VSt4s\e,nJA.S2@Gm&B,b@7X.gF]aL=D<M)a,k0=GnsW<13q&:Qt?[XjS]n\(/*&A'jEN_%/RutJkmPSkktcV?(S4ZX@q@Tsm1f&g\I0qi5AA4oVT;+II]36j_5!?@+W&@G75N[;M8t(nT&R!qn)Q'Rp(kSH-^o\):$JaUTs<;8%KgTA<Ws&Al1HUNGEh/&kM`f+!p!OM9E@.i%RKfkjNY>9hNSL6U=19aTJr9:PPjg9[YG2k&\J+4[i]$<AO*NTpBGgKnL*bM?ppnI2%>JH49\7cpbAK]2)@NkGYcLJ>!""jH(S`\7[Ki("%4E%P>B4JB/5PmR\lNNJBFpc?.gMpThqRj1Fnup7.;i\kS8/<:sG<N'8]Qi&S%1Nk^$H*tTe`O;>dqe"@\bC)#1/@i4>mh'5J#+=>38n5NX3mTSP7,2\5)ZX6\8iWqI','isf!0B1/7MJKhL8Xt7>O5];.G\=A$/I5%]1<cuc\('C/M&0hcFga3UU!,?gtT#5R]k1(72K;q\`iG:TscaD-Ke,"1p7KGrUOYNRh8UUQ6S?uQFE/866mJYe#`$0("-Y/q'[Fs%kM@C*Df-2Ie/T3R[Bq!ULNM4[f6!G,OHHhO>Vg<)nG]^")Z?0EioJQ22^;@Bh2.5k5tPr;CUk@/-K:PTJhO>ZH-7SEWYq;=-'7<+%GBkJEgLRecQ4*.4P$@9jk,5"$[ijG#95feBXO:=R-+>KX=%Onf=kMPHd-SZPP$;mWa>LYb#J!TM97Mga+ceNsi!RRXA/'WaR8L>3%PtVgZ7$#GAT.B(\^WbER/Y#[+6oh-R]F.*h2f;'IAHq"N:G02@`LR%fQm!>YUb'&uT#i`^6H15<igj[s1V5KcV+$ikAH^`D`hF`N%hM$/3+N`;_^l'Ib>m4Pd$bg^(U`hhbi^U6Hi/0:,MCk`mMda8X+VAJ:4hKA;dZc)?A'<C^^SS'rSOrC_'D41f>8YFQaK<G>DFHbR%@rRDQk6TWc"p_^T@rMZk-g+oCA+95l<An"jr6\2"]3(O>`l?,dcu>cBrBh+E"HmS)Os%m__j?W%gYdZmSp*XdKZu4!A'7"fMqN=2%7RA>*??%R'UHhdl<GQ'J-'&KT/GfM7gKuLA)qmr:Bah,B]t+kF)RCXRGt9a33g*!ng"?Ic&/fMi6'K@>m>70kT/sD;6d'DV_D%FI%HZP73h;'"qEh)/.j6Z)8ZqFHX(7k2M(>JEa4L&)d$/$@s6Dbmk@bY/^p[uG6[l>>3RNs-#Gk9@"%2$+f,(T'JG6U-c_#6Yo<168`%kEEUV>Sq1mb6FdJs)L?WbbdH-9c/XG%f==?N%a@'PB<^rS5&dL<C4O&!B9FJ!jc-T.[Je6a6b#b2Tsa9/R#,-nh^R]ee1D(-#[e!%(DVCfC+?;ri)c@lO%3fpAecBU4Y0NJ<S0oNSu/qg]^/0rG8@K'.g6\a;\(AEo;';qC_".]<NO2QOteT#OXTSQUr'19`A"X2Cc3nV%H>W3\Qt%0q%;`K^L_mC$YfrUQ/?cf]jTLiKP21]nd<"X=3k_UFJ[/!&=ShYJ]9qbgA&3adg@:>$n[XS+lgNPq#-p#d6raaVU+-[S%7orbRf*=(>9QneA,U?&nA0^>n&g/:*X0hJ<'hXkL`FKjmhPE##7+If'2=Di:B[KG+k>!M^&lC;$9C/",6[WlVM;QgbcLKOB#.=4i%G>]0(HY?_J[Fj/9-UKcRqApa1EUSeuh\*28pCtGiO=W5IZ2I!+BAf-0SjqddO4BM4F6a5@*"$^MNOkViiHX^<5qA:=d6`Ul>@FF.%2jKE18KB9Ep?'Z2Me.%0q"SDLnZ-G:naXYBmAK.Zb_o\]r3WmBR8um"a_Q_!7>HargNt"%A1ousjMauON-Q7q_^?bRF#>!bhF9"m%Mp=D2SomT-q\2tYh'o/VncF#!3dlZC]lK%J@(u/'GEGq+s3a^%S$V[j=n/LC^)shES(nN[.`O);Cru&M(Cfdhgh<Q0>C1G`=/CXD%m[*^h=2($s.8\WM-9"JXc#U`#<H0j<4":0(<SQUGQkP45RGHRlF4!$U/K_]4a,7u+Am:BP>Nfo"qXdfE+1A[cC$5IeK6Nc8ZY1m>%m._i1H?jObcA!B'i-NB<7okE2o`]0RUNl'sC.k.QleP:kL>JGWK,[/::TrV_a&COkn#4CSo::^t?bhQ3rUWeV;^$'l`0^<:l,<rZ%2KYLikY!`.qsiu%VtkbQ`p3A(f>\G1E6H/G[OF<S4BojbCLbI,\F\t8Ks#:lP;5#W$Wo8%LgP3FY)Q"m%s72E$"#hsNbqjrX9\G(%D?eY")opmnQ[KC(_'NVDf0Q"sR:HnLN(>0KH[6A]I+6?g]Orh7cIHfU"T8X,cP<p-Njk>C%oCTST7H?gnO`:g07Vktc:L**q3*nT%>E'!\FY%k8*7#]qp`91Bh4pccNU^G"[Li$-YjQPd'Y1c^!/Xf`5^9%cqf#Hf)r]QrRf127!mV`U6k=BY"qs(17r;)(f$<.Z9WU;\%]44C>g,C@)J0gSOZ:3C5GrRqSok4QLN%BX(mVK46(=i+1&!`U0p3:,;(EB]_.D00PJ6hhe0G4L?k^;M6YJjg-:I#EYdP`hV;QZ)S%*loSE/LFsYoucG0V<\<&EF90het;,\m@&aZUq8D7Z;&N?3oXL_fk+g%Sdrea>FP>99+NDY4P;94oWSr+j976K$@:>*?+WDpYV0C<%+5Si#fSiODKBfVJOh#Gj%c`='N?2Ep[&mF%Yg47cCSHTDl[8q$]P7!l[[)*i;buUc0*VZR*G$"ZSuWrljK6iZ\pHr6otG+8c5S5O%H^4J:>]Lt6UA"suBM[:r[FfYWE'J8^8OK\eR&G)AOSJt'4%#sI8&o]Gm\-`h`T[EWZioMhT/jBu-$_\4d]7W.0_e<od@i;8rCUpg%<[1nSQ=pD.jpe`[-UK''.KdH26nDm,2<**or"9\%$/9+>*#udUTRE/)$esX_.mD.prp!.5MWqqH"shk(o$:r\TecdP`29Q443S=Y%Dr,J?RXnE9]I5<'O^O4O/3^e[Jr731j*26THXjM2aprc1RO/CqVT-R*e*R`,>^N::%i*>tVp:b6%V+>H6\dfU1or!BG.P.f<l#QJ%]5UrnBao3#48Z.Vemb4*_j:'i&+)@FeXKdJd7UI1Od2kRAXg?N8p+^TYRW*%FN,*\O[VQ2Zs0N$>NOG+[*f+l\Zeu>:Xgg@M!Q'b%Zkpp7otL\[CsKrN2jURIf3t0:`8.uERnX</`"p0?IH_GIh0j?AQ'FYPQ4^2]0&>"L!B+aMT,U#(685OX[`%_PAk@BS[]WM)SF/li%]O_sN(KQ=]X`)X/4K!>\I$<g#EACG&"Xgq9+[BLF/hE632%Xjl\-_fV.=EpXb[do1I_)aE!Ord7q-n5a$dB$6p+AHI_,i?9Y!dOp%?KuRbek"HqS:>CWOtXVB2J8OS,%Q#1)0Np05J:;64_*QjV6.>3FCuD1CAUZ'X%RPS\J]ODH+?!HD$3PGAZMuW@<jJ,<7aQT!f$>b%8/N%`>n`]XdCeo4l>iY[Og:8&eKJi;8Y(96`#EGGBF_'oG%(sBW6b:F@d%RcZJsDPDZHm#Z;/soP6+Qjisq4E/Xg#?Lg[%(kMn\n%=eLm0`lZCA!9HTO5\HGXZrX*t5kY^N@h[X;`nl:F^470JGTf+Sa]`.cXlF:N3+gHUfQ59u3Y),N/mr,TEbhnW+8(52pR2a!W,]p8%k2!oYG)oAP3u"dMo4]f1U9L-D%AfX_?$j;9%BJqF%]ktF4P2QqV`Rq7"tsFTrWG'&F*i:0d,=#'#[%l\Ck^s(4>_<]FeomfYh/cl%f7O9sjq#_[-84I]TYZZ!^5YF2FmK9>Yl!es:4!SaM+:k),=%SVh#SA>Q!tcG'6hORDY-%"N-/RdBLT;/?*(Bn#pP=&h,%.G[';tQ%(sVs=6,pR3H(AE8-14aK5i1%#*IEflf_b.Xl_lbL"#/3T"U!1nSWbcT/C3YNAm@%Le)TGELc&H,_e/?Z_e@oWJGkE#OL2J#f;fKH%!cV-E]\`H=!l/p`pA6ttATcO)=dVt?@(c&B>VMh9%1\clN3(uiTuBG:ChcbZM..nMS.-On\mX%;STuqtJ`-7eK!Rbh+>mLkImh0I%`e/)H$)$HjHOD3WTLBA->'aMIi=edhrJR$8fqWE\dD@,T\2#6I>jb3VE_Eb+@dh]Zhp4#-B"-VePXV.FKSQn(`fW_bYlBEIdV>[I%CJ=9gWF1ouIsfu2M=-PWJXWu$][j#hX7j1Ll^'m@HU65dNs[et;Ag.\0k@tT$Jl2sh@144"L<Ic<3UN5@ah8`r0I^'ljEeCpit3'%XGdM;0YtenO)P_AJl+0?7Kpt)_=h`\Rm@3^@=k'-p:CY]f^Wgn)aad5@=lnL@`,-P/)kr-9r!<BRPN1f-;_NZQsa9/e#6ZTVL3qh%UOlc3[LlKC'dhS!@k4=+Xh_Ac"M6s!YZ3R5Ze-fYfEr:NXQ>16_,cq2X-NI+W*h,LY[or*(+Rt:.>qke9iUThLt!/9_0-^kc(]fl%0YqPk=kKC!X[_U7%Co-+JutJ>h^l;m<3R)aQt-piM$g[8c?p7FI8mG9?C<TNl_B%h1S\B1QT>H;#o2h&XL/_rY2ZXVg#fjrl@^cr%IO0m![2X?LYqri@b:\jrCod`IGk!VTqejRIfODHuSn6eRCcahn4S3k7[-P>\SOrBuZa&8sM4I3ni:kiJ2mG0IGhj@@2f,aR(L-@a%`6R#peaC%O(0g.rp/4P*na\kKrt]4Mki1^/`R]6!HYII;Cba6//;Yuc*a=T9fG^D`YLm;o#2U<1fZm-:cLlHL(GCh$[_BAk)-sm7%;E&EsDZ@[3\p/j0;$V45o$CKZibgbunab>lKi9p'b_C=XYs)sj'j\HQ8bN>s=qY&P5r?.T[TJS*onkA.*a<HAi:[f6Hc6ctFEqnb%M75khHO.A\fOErcdq-nFb@?H34Optf[b*3aF[?ltO"L(<(:.kuMZFqYGr^!:o$iblOlas/b@?Hs6Z@C_3P[-6[<U/R\!I[g@#IbJ%>=RpapRCfV<,Pitnk-I,V(p+>>a!.IQGk94PJ_R'D%*15md"(:U:t&po'/4)AMD9p3:T^NPa0uuN$r7U.d%hIm,bsqoeFVGE8p1m%PRVh)W$pcPYY@diGe1*)H(AT+Fk2Z"DPmck_)a5['`SHi=Yg3s351A\SMd57"u98g=D(>0]jl<=6"&qp4P2XEfc0X%?*(@k,hKV0%B8nMIoDU,Ac5P-a(\i&RB+=+<4rW5ulb(XT<(g_l20H;h6*qf:Z\ESY!/B*X\p?@s]IMKX0lQk8Yg.$u0?GHiH1@G1Ifer;WN2=.%ff[hgb8".Ba#8Qmer\2F?>Obco6NK!?Eqd^:hf6*SMd4LJee4t=Q`\H>g$QHh;41*)6C0!FPbLR<@b/W4i]I;F^D_gktb]XXeNPS%A">JfZG!uRO*0"j9k):1K6>a'$*E+&]-3i4MKF%6qeKZ3m1=H1`B(V?&iYDber\/r==)X0SQAopY(1Z'5L7)9XL#@WY=#.gru,G&%>R?G1rt*c7$RTkAXRgJASZI]kesKl4EGcKVX<F,D]*TFr3j8,:iXKH62NDq:gma58`B(``Yg2*4>&;<c9k'YNUbfr!IgYLX4Djtn%Yg1s])g;oRMfgr%rZB$=Rr_2O#4(W)Vog?jcJ&'O,ikT73bsp-bLdoQ3a:s/r;j"+et+3uS&[Qoi;!9Oelb);J_pIuLTo&34'$h6%lg30:XG:r,nAp(Zl`BmcogH_?^cH7%B8?0Zg0!NlSC/Lq3bu@pNd!mmM02kOHW):>]D`5i=_eP_kPYp"S^$mWrY_fDVnJn6Z-JfV%qu._hffJEQ1tGekM.=<+=<Hi;8EUX:$fcb[G/cC$URHU^c/>%];9eAf;V/iELE07:^;+?"c-E8"I"#l6\7TAQZc2fJ=2HgVURIH,%jK=DVG"+>n]i0.j>dH5dg&7JYhJg`bW+PFf_X$0LSPdX4**WTum#5]Q^bJWpAnP)LnU9Dtj-lN9c2)d6f"j4*URE?A]a7rM7@^'(%Ca^Zdf>TU/T6/T'am7lRST1P#mhB(<fBeH2?G&RJou?>qc(<7s]AT-KfnL*o)o+=X5]CWAfBeH2[Qno8KPPaCRg0)*-X<u6ESA*F%lf"9KoZE8==UtPloj,VL1[o2=R[r,Dg?!=p29R!2EY&oSoAmj`ACl0R@jenFb8WLq<Sm)a/gLK+VI5sY?00>$lpC=7]!I6W?%B*6%d)iH]`_L[X;&`*EQT')n$_rfsK4K,nJ?[-1=mhS,]unmG@nM.@fsQg#;!fdbjKmI%?+*rW.rB74H"8Kc[m:<\HV=(t&DWlK[VC_l%Y@)F]7FNHkf*pC9d=9U<QcZ<?.95.)9[tbAI<Y'p1Y:*;YuJBPF1bs@1M5D/o);8E`gjrV]_--$p(QBtZ7\n*j8T$RAp8=j"BDf\%H+VNG9;@RhDrX]5DXe42p%"j,Km^0>$@0I3XU*rfmNV-7]R"4`eK(Z*Toct#93%>AGDC/k*5M0g5c\03@%^.0CK?O$7jCZ%G1i;:%fnl&2[QL_fAg[u\IB8#k?.^p;Hu$:Y4.NuL'UprTiJ'udR@SXX1L>&mB9p'''gU^Dl$]o'rAH6C*CD$Te<OJ9ZS-U8LW#GrgU4Ef%FLmf^]NdS)fS\(k5W]?8S#_Lj'LdAb=#rX9SI[8Ri[\lSSrfsO"S4Wdj%UbBcKJrZal0)RiTu`\E-c`q'(9d_<(J#jg=bqACs:H%%/;(32*?B"-')2;6B<UO_-1'8&k\.U"0]([Fm*2k:1H,&>O7.&]MN3GGk#[%fo-2qjdF%(iGK[\;H)V`K4lN0<Da_G^>7:d2JW)5^%U!/.;+9R/A[?!\T#Wqm'@El.$\[Tt?<U+,V4,DPFCt-X:#kOPVli_<MZ([AC(Rm^-Z+HE2b9IbagZQ4g*l&$l99EbUm/`q>nnosG%&h*]Jd--nT"XURi8($J?Z&,c?E5Lj9N0;uDF3J+Tn`ZXKft)t2ZH!o+;.JqLF=Ft%g&m5_ZauabV=qUb?p,K*S6g*s4c,Mp;-3Zb%l%!h-f;!4W05]6^anNLM8b(n6Z<E)0U,IV,"Hnq>0dH,O$?S;-WtCW*`)0/eTTuiFC=t:pmM<:$/ofARFVXSTA`@bq%pg3WXg@m$%@GlO+f0f!JQMN;`j4QnFXO'KSfDDV^`=0<bY+rM<\!T$2F:SZY1`LIjFu&1hdVO7QH-*P<!o7/p;>/^Zin3BH,CqW[6!qG,Fp#30%6Hbr?DJo1/E+A6`J$NXD[YK:)7G#&hl91!lXHn<%p<^s76Ir4KX1uO^FlaL$k6j8DE:2;3<Z61_OkO^d>)>_K9?l5OpH@Gom^u"K%Y%U+O1p;=eKRt"%.-(jsJu?2d\jg/:rI#)>?6[T:dC;?GS=u3S@3l7i#e0#B7VG4m#sR;-$eRm0pD\L6*e'm#\]8J-ggI@pZ&UOt%mVRXZma_I_9,Hp(gi-A!rp9l4]*W/P*hjZ.Lt(uGB6dY!nlZ,I(/)Y.%e&=^k7n3@8VEXYO3rtLZg;V.oltP9R:G[^UP;kUB,'0q%Q1T7Ph?CN`pJDJh?D*SUp8TfKo1]o0RrQ7_EYUZDDl3iRghoAqgFo.b]BSNf`?^)T)fk31aC]=1Jtl!TG<rD:C%cM0PIEUs#lo8D%9S6dH$I%4_$eD]j%bT_]pf3HI(,*)BXca_aq%h``itpM]Vr`9_Q@+Um`Hs#a`/<t)G9!l^f'>-h]:g9)\3@eO\KuPr5^L7.>.d):%/qWbJlthMbOe"-!o9V"8orp9Ydsr0%/ZsTcFn*CcCWl6a&"m2eE_]n+$G3s#97KUOTmLJBA30>Go"HAf/T11h4C[6+$XB/_+oA,"%W]'u]%2X-DX-<3al:]NlQ(M@7YLKP]rC"06aa/$ojZW'.Y4m]&ZtOU*Np[=4HI%U*F1>fE.ddB/-9K@>K0jmh;V3!;Fo@ajX/fs@%Hu\mTM[N:CFgc6Nag[2GeE,mB9QBO@2&ioN..NuY0j'jOVITU]n'Rr3F(s(c5Ha.)2ojBt(;]8Yi]1jhqVjK9>UY!$U[TO3$uhQP%&!h]T^;og.]7iCm$hH2C(Rc/H\b7WNmd`(h6PV9:>kI1E8/)s+CC;Tf"e)IW>m%DcUUgB.o#Vu=[i&%*Ar7s[Dbn3O^c3(dg<W[0%0<fRQC"0VZCnhoo%C8J[689Rr]DUB\b1BRXi\T[Y`P9*W;3f&p/Tm=.^/.lacX!Ps+@W8!DEgEE>,OgSm^prCme=b/eGU-\9ANAs%G,^8G%S+4gr'3+<2N'asXn0W$qDbto:`i3r+]5n4m#+d#/La;U]lS1bS\7QUdpbPa?=f/-[SUaIjRq*?kG39agu#-g'a%,Zf\REZ%487(GPMNJ\j7epcl[&T+O\P]SgWbXo,i%Hrq^;%]+UPg;.PtY+;a@BB_oK%'"14WAkMG'NgdNn&&"`&cq**=AV9b&?Mn9"1<`s3n%])cru=05/i>G%@-[;0#+g[:?=+6=D;o+XALMI\;a$sZ1?6[[U_5,uH1#8W#7h)K/$3^'23jo\CZFs](D8jDsDrS>S[@Wm4sjkWHP%.aC8ek(hF\o`lZn4[CiHEU^8<N2.NsJ3Ap/M1`8STUp).KD3:(6K@QT;Rd`k/l<4cAmBg0"#,.Q.t)k(>K*:43*+Hr3o4E?dC<L7%E:u^a.p'sf8%IGBr?-MmB\n0P,?]GSlJ!c%#;+Xfo,W,;A=tdBSpB:WgZcu+V74V7A+I4\gWmiO7i1ugeB@BMSY'*]+j[ltBc<UC%LA-b4KsTi@#IVhSk)W7Zj.LAcd.S@/Vk-Y^hVR3Gr:O86h4,`uB4R<(6h(cGN[0'G?fC1=I-t`B<5-!"cK?f%qdJnH0^"($kNBtC%<2Q:e"Wg=Xo[Ld+RAiLTjm@Hh0fT0YIY)q$9rA6JXg=5J.p@kmEu.&SE0lnI]RHVXjse5iM8ZpR5Q7[J^>^^Sf/Ym^Et>*^rWVQd%n`2'Cbl=9"^0\DBSBr6>+BG?DY_SVqhUJET4Hc>Mgu[s&(H(m0W-SC'mQSsFpHQgVK<5@SaR4&7(Wf-,Z5'oK5-hYFn<+,tkMO$c%jh#.N,phse2hnq71DuREY(#h_bM?\W;656%J,05ciHRT('sI&o-oNp=.5\TI?1*+8f]%OI&";fS?>`St+*"*#]bsr8a27W<i)_5=%=T#`+(AX$V?7K3oIlo5d5!2Mr_d4uqB\kt.\F];r1mUi&,'(MdX7p=WlS,hU)RO!2+O>Q5;ZH-OIt%j>kh=E2B.*T/.!H2_,)+`b%s&p"cH!$K`lbc&`fD%ccs4E$N+lBT!I.jEo7Y5W0>Sp2<,Xg-lT\S3>i?Am,]20f';@dRA*?FQK^9JY+738+eZQP\VI\5X>[1:VW%CA3Wd\p@,Dm6m?Nbl2a!n=>N3!C+eNK4N9q&[fm<1&0(r.Z<n-ZB,J.jgoha^&m%).3CI[a2MJ93:d;G_WsXkghH222"EElh#!N5%1#74/4qrK5m%HJ5+TL<M`r%O5+!nBaR'g[KpsP_U_SFKQ8!*mc$fBh1r!_&!cBj#fPI\kLGb<%"br1S70V1ILF8pO'^V<Mj=GkP%%q9(e(^S;h*jP7Bq:[m`1,,niA#.9VA\M&/E7jq-p+$/'d@0`9;lkMaWlh<poMKd2*e3O=rdd`gk60`[g'[p(,+%>n,MY3=3QuA3A%D[SK\Fi/]^Z5bc,a2,jU8+Pp0/rt=((NuF4kdKrbC-qQT7S_q-7;8Lk>tB13+1^$64_<n8HX5Y-q:ocEK'Q4N'0L6Am1fS?s)_K_%GM4.;(X,3*1jlY`$(p>;pAHAZ#Po65W).0OS+u!1Mr_c(1au+qdnVV]0@gNqA1G`C:X)8RS/7&Cr;GVNV:YV6aj/9De2SuX<5Z>i%*L_<D"_-$%&)=F/\so5I*kYmhAsn_OPJV2.<)VoR[l=dQl^T)g`oSUZ3(ongHkW#[-7?H]qIh)JS)Q-8P6Q`1E;dAt!Xj>C$_6V>%*p:=n<fpYTcYtR0/=LjTTO#lr3oG\-jMku5OG>Q4]0`Ffr^Dl0Du\=[JNLS>Mn@bQq\Kh6To4"UPHLR(amTU3#a)UW3gWX[;GTtk%'dL7oQ>_I`0#7P5937>1%1kSNFKtHq^MT:Kcc<\-rpb3-mm=@&f>keE/B@VX(d`psksFe!ijIR1p:e)\oBh4Z=EtEK+O)'Zrq/N2%Ol3<;M[Z)n^>b4Hlc)*6KmG]16Y(Y!2q5tbN<8"0o*51(>>(b2ZXC//XbPMq6F.Q>,fS:=g790rN?N*?;m2;>h;&jpLXSh\:2aEJ%c5O"n\gZ8KE/p^$#U'")0%Ps&!5DgPhJ:mu'aBaWZ7Z]m$3RSP2j7YFTieuVL5$o-d$-XCQDnQH4Uej;WeojAPZ)XGWVcOjbnhS#%?D4g^XV.bSP(dE]\\Ik-)u6h<*Q>uq]7p%Wo9H$)k</d6T-)2L(We2tjE!GU^&CS<-GOaJV06CAlPK81i0!ICIm%Hqn\aDsX^i%a%;NUAQG7g9=b2KC774Itc*;8<3#E<JJ*t'1Y-,Z\=rZ$\7_?6T5[4d&Ar'KUkKVl?o77-[)A?=XDo(i"rZ$8(^%mj>XjKTaMGptS-%<!#0D^eO?'#LR1AIE8]bKY%<=H/D>/-F&#n0q6Gr2oQA9*0,@".$?XI<F*.'\iN'*gu\C;iXc9a<tiNMXY7>AUtDGM*4b"M?2h>5%3Q<RC3:7ZLhj?c4hP8CVSDq^s.$a+j`L>Go=ro#dRtDiXQMNr9Hi'i\a`>#318mE&fXFZZ\(aH9K^V8*F5Fkoq/eP[Q-RD]YMA+#%=cT&Z_N[#$9)@3#]#E#>(6D5&ol>D$prpGBggO(s!@1HZNun)ShV4^YBjArK\LIf2niH9J\,-K@k<Rau80\A1Rh_CBS#snrn%Rq;%]?m5'rS86#kJ+Wg[&l7-L/1_AB;LZ]iW1ESbb+^^lt`!7nq"7G@(R&M]U^I^s.'"7jn`n^Zn=6C;ooa"%1c7=e]"PVS6aF#q:77.%Q-Yb;[6c3a)530.Sq*D.ONmWlo7^'8&408c,(/5a:CeWa7gmc1Dtu(=78_D(J\!Sd7&0%dbAHcp+3dWaUhjdO4VmJZEkQMjUG(b_%Cg_'7*a2%M(XSQaP"OV-LrH"A;1rI2#,T#9S5fh@:70u&m/ah#I_]"ROSO.r\3N3LY\\<_?FDG;pFMOq$B8\%cK-JF_3;qDEu$e4%fIM/kGnbljMZq.JKZB8O(*i5+.,.VKR^cq]#Z:$U'8+ZT'jD4SYYEc0d[fXG1#4uW36+ZE'YJXO6#*g5jl]t.'8Q;&:"Bsts8)D@%YEU6N"o0L-5M6!\OJDMX\;HgVnIDj7@"C#fWVbXS"c$j67pP\+7=Eb5,+mhVa1f@[>[F#Bp`:&<0#PtrBqsmfp(iVs3^"NBM1]p5%rUZ9=[j(!GB:\:qi[H<7q8N1Xqb!Y6]al_rrU+)%UY'*h%fZB!NINU';(^bUAZ#daq1`@Ad5e2'b9^hi<F*%'cKsnWc;#RXHm'W<%^Us&c;!%S,/I]dun0u6p0s.c'ia)?^F"p"*?S9Y:+*%\B,03rN6Lr-#;4#11\)J9NSUb4-Q]kJ^Q+>3%4]J>=6LCl-6oM$.LE'i1%DdS>H+/7Gd_`tVA\oRHVNE%@RD!Yr#0@Q'>o+q+=VK,r1c1J<!JiCD$hsM?cqkuK%c"+3s/QrRY0"?fMBb,t'fSd!r,Xld;4PPVs%W(RQ@6H7NF2rG$el2:VIlJ`?fK+n[.G*<b)A<KC&-a-u>DWMF,Q\p,O;+s-5i9o;iLZfk$^i?UV3..JSBA`LL8*$R8Vg+uTGhN:=%_!][,_;brHdG^3"hDpS$J_iSO-5Hi$]fGg)I[_0"ojF[SOIC/r^a.VZL<8n*%u!Js+$"!qE`Plhf4QMgh"nfHOOE<iZj!-[<u`Og%\/ME9#;pS(1ZdmbMEg87d+'/no\kJD!sT_4V$,AXLiQ"p+iPc5r]"HhB`o]Y#CCitQoS!+$u"=S(<U=0GBsq(1uHu>H!(+h&UWF,%kf;4.5,XVTTik)6#"R@)bnslQ#mO!#"%LqbMf$`FRnU%>i6_gc@tV\Z;s&^XVl9Spn!MoE]/=kt@aPIN9X'hng8GTAR:*CJr=_ZQ%A:b9R/iI<p6Yt`>TM1tHWFW*aN"uEdr:GE_K^)Y-)`5DY'27cF`f72o>fk,tj$q[3Jl0b\A:tI1Y!1jt@V2fo(`Y_BOhHhs?%TmC%Z5<C1mgNNb]snmI%!H0"#h8%#50K:2+AP+n4'1eW](3HP-b!gCHb%Dr3;lUHQ'^6aO!Bg(?YD5Z:.B;l]j0`E\&@]_$m*c1>)4l+%ZRO39*j2OoqDb9(Na?TZ4q=r?c/kH#*s[tAe8ijWa$!.1[*X%[@ggi](tHt+:/*oi+WgM*$Ou.@/W3qQ1Hs)#E;"=AnSpaVQXc+[%kZ-8EH@EGc&N6%bjH9Iq&N6%b`3DO8KM<fG(KeQ\UP6^0FDA+r<n>m3EVjN_I=2."p6XSsM"!e@%niZA0G$[@g"RL0e\a?ck`-jq%7:=*4'`)ld$tT1;'6e^mq'[V4s+"%c\"%_N]"'P</#dLSG9:lW`c,R_7tb@i\jGS4[Y;(4.l%k5?<u5&X1lQZR&NVacU5l3(%:^0%F?OHZ<2>e*=f!T'a+B@"=:j`7],/[G)I$2P7BDlVm(TSPX&T,%#Q'e(W!pa+XO#riruY"!_-&bD^2*A"4Dg9Pgkdbk[G3gC&I)9.%0?70EXbnOs(b,*TP%5ie)o1:PPP:]PqmOcllb<*nn=S3Y\q7j7c0G3E4;OA@qXN@l@p-'<QK18n(":eC?HgR%Z4q1(6="1X_"r^R%J%ZgHhX.-V0(KYK:defsm`mG/#6-oJPiQ--3f^j5@;C/p3n2F32p^5,\uuK,26T2o2h3_,G,*h]GUGf&Ni&4+^<i6a2pfqH*^6Jj%(p#ePnl^GqLVM]<@Fei4[#\\"d54`2+!ga*Vp"TV*8pWF\!jY4E`cfF#aP^69Ka,+h!I!AHE,3s2l4S%$MVlU@Fbd)e1qPImjRQK%NioYMY!@j'EEDlEO5o.P2aDEQ\X!1Hm,[-FK>V"+ZPr:5_okj@HFaph]@Xa9L<Y/6U:Ss$Mcb2%Mk$!dRKY!pOuO%5`]ZtBWV9OS%ogbRf*_)E.eV5Gr)"UMif6O1+!#k1a^ilfVT!u1):+M>L]sAV+ig@\eWUeG2)3<<sUr%:!k%1>t0h+o\m\"b"QSe&c?^Q,NGID^m%*FYh4dn6!c7[)0Z:m99(\<TkGa:B>BRP-M3l&PHO]\$mZN_'-Z+>pf*ad_^Rf*n<jd=OGAM=\PW1/s9e-WB\c>a;J)Io9*e:O[W"%1HIUHAT*s_W0l!t5h06gDQ5[D(JA-,oCI"dmMq8[1u!!//lS\j<7#H'W*QR`YHuB;r*p"li;>9!SbBNhOk@:Sj/O-MP1Re.CMMKo%c>VBkdT>uZl!hDn^i(/Q#TR]0,bLqemtI73Zfh77s/sXs0SKWiY^2NQh,;JMc((iY;F3+S7IG:oF5<<81.&ATN9)84jt7.T&tqgE%9bADrjA(2RN1UXJ8U;!%NYP-!/;,EHC,cb^]Xu0O/P/iWDhL\KeoH<inhR7]><Yp^jcT8VY3UK'XbH,B'UaKaS<_"DP:"nR>TXYp%UW+ZglJ@gl/)sFOTXmg2E*NfUG'Z5ZhA+l),\1'hG)GepV?dDJWBrrj2u*,rCi1(s*fc/4k$7rRiXtl7%GemhB)N+HQpY:a9]dFG%;=-Z?0U4;1h$#e=Q4p-e[i\>8U9PPB*i<R#S5`X;VWCR@caq+qLb9CM12g(Rb)3=DphZ@U3mBl/ZnY-CXUj;`:ORe%BD;+b&61s9%]ip8ZeP*<]R@gK"8ae!h!5H:i$!X.^Q!eORP6CVb2.tNIM-?#ejMdE.$=?*)]K&l4hjZo8;YL4@%ZMZ\=^(Y:Pll`1nZS7L.LQ!.%:FmZL)(+@b7Np[C:3qp7:=XEDfmUbVrQC_Hm!$Q;.DtaID>*AZGA(E2:'(9=To#"Z/8H],Xm.@AD_"fc;Db\bR8M`GRf,rA'S&VT%(fZ,(EtBi")u^7pl?2C.:4l'FCt?m,f35r4Rt(79InnK#P&7N>?VK>/Z9WaiTmTnWd-P:Y7;#&&[89qA/.2gN9jKtID:MY?Y+-5H%UYq7d(%u?XdqlMTcn,36Ba%mM.6%,nRYBRlPW5=N(kn]S,!?C9#Pgj3_G8)D-.2:VnSs,&m2h.Ti.*sh:-Slldr=^^ooe!r28Yd"%j)f)*pnkHAn0ur+R:PlfpecGfPoiWQO/QUT&MKbua+p_Tls&0.pn^]g%0Z"uYK'ZsS3(Tm0'2m-n98&0VYV!T\Gqgt^aa1aI<t?N%O)Jb;*fS.)IplPh]A0)([!]#9Z<\an'feMP1F"CXr)[;dh?F)=1803YBKUEEIq_5!mTJ4`GYXSeZ"F[/*@X%X,9;L,EZuFsrZ,`3%&PUDdh?E='&tIpG9`!o6jU0RJmB+9,YDI^MT==M8g[s(RS?)XUS?uW_<H!#W*_m5`oMiLV"/Lbagj!3<TM58.ncg;DXU7_#goWGt%g9FcZA&!;eUi/G8nC_F7-MKmK3o,j>MbnQl$X25ISfet-jZiI!g.FGnh/^,uaJe:adi>!P1s&4LMjt<-kEYj3Z*2;d$(n\C4I*We%d(GljR*!_nf?3,"4@U$MKY<mP%M+SQ67-mkQ<092e.1`#AU<r?VRT@$H"Y7a-nsN<,DUhC\T@#q*f]Z2Us$TcX.04cPC4a)YO*>e%@/aoNH1fH8k3<!@^_f5[ec7ToWcIg''/JD@]JthaEW,-F:R<%\8\V%l\b?@bPg.f"fr2V;`SMam3&BHfL\p*4rt?]Y@al#*1#FY8%\BHooGe[o:`_6o.6sU)F33]_AhG6"4Oag6--0aUh_<Xnek;T^pDtMk5ER'4uCb5!5[ui$2)>1F`>qT>E<DRU$kpqp8EPbb*Rh&9Z%1g]l&T<@Bm+VRIbWAAD@GfW!:Z5jfA35.$gCO*JF3TC6^X$pn`!i-KmZ0t&18][A*bh;r$0bI"rcM4I)qNKg=Fs.OrR@3O8d(St5%:mO)eFn3;defNMu7s6GA3KMDS+epHF_1KP\#M@WA+uFh*j$(A'Td6G79t8+&7Un9"A.)FV9Hrb(,2`UOU.f55JX&N2Ya2q%o&(Dr%Fngj_]?P`"#8BGGA8:?#BbC">fJ05JF/\_r3g^$(RX?gFgHpc5*MDEa&R.q)NY)`u]PuX*'Y/ZlC+)OA6b</8I0Gc4NRaPn?9HR!%c;>]B8E@s1U%KE2JIS?7[hmPJ1j`,"jljG69q6(jU%r"-RI[8&/?,jCNn.iJnN%R8jo]Vd-_G1uC5<2RiBedZr<$co7cmq1HGNu%%P$Z]PL[R0m50b\mA#4!`%5c8d$]lkKSrh,l>AUmLTt>-ZWf:AOmKOjm]"QpU_VMX83e=5c"_HQMRuXQaP+N7j'f*<-:?5KAmK5RG%aMP$YI/7PL:dQOY_A5>(=5f@@LI8KeH`P9i,^VF7ZX9osG/>W_SSb5]]LjE&jOirNPM:_2U.K`^.=FaH.DYs;E;.L5CbiuIVnne>%mSuK4BG@;;o`C<eaR?"AE1a>'M\:Bl4Mfd4aB*7"1a;33Pc/%sVSki&iqLd?-%8>RgL@Ra*HdtBBDL=OqNCjaIPBo*FF,*BkA6i>%R6f`\@4-&V\1,e\Z^WKZg3q;qOhb\Km*mk(l0WE\2E!O?jP\huVpo:W?"E]<W!bG^"<bb%H,R.I&;GPhI"=mtLYXPX1:JY[MnB8\%gHh>oVCmKaI^,I,6Y$1;4![L:?F>PnZ+:b$(o5qKWa&JVpZ2#^EIQcb=BK.0;ngfj98R@u<-QE'2LVP<^baB\r=J>di9`E:-f5^e%PNWa<ZQNM9cQ+O&#2fbPp?.45,C%UQ;g6Uoq+D3.VP^sjHi_\@6te/Qr!D6RoikQ63f)`pC.dCghW4Yd/&8e9;(g@3eZDjplMH`L%6PV7)&:@--/m=B7eD&-Z$>q"4W46`/!q4R:=,4`)!QEPcI&k&?O-&[Ph+&M?Q]frRW<_K&jiqZ7Qa4OK`7a/,>6_?B[Z_MOH6RTq%CH5FF3.+P($'mk@?`9;tY`VZ:*G;]t'8?(@,r/TWai*_,0JVo:'Ca4128bi,HAa6pn%Zt+\&Tk!rL%cCS%&9CJV8%*o6?-Y<R/IP%,kk]^]=X!`IkXU@C:cgom5b+O70[EK<MNM%mfW-[n"Fb<"]m0Mq%dlRCPZ]kOdg9S5iq[NghE&f)T#6U[7mnIM\XAmCsQGLF/+q^%Z68+un-65iEV+hPGOc%a[#g=8Tm"_R\CbsQKhoAFN_S`(%<)^"8h1I3Xu3=IoSkHh\.0^_q1.#8?LB%f1mi4IoKeJt[C@4GPpeCH%gkt]nk5':WJ`=qU/]kI18Je_mk?7a5J&Knja9L5?qqEDO,j4?ga>"LoM<!Na&\sSMiFu3!R\(aXa^$[_81KX`/aq89GcRk$+G^i-%L"e>G;mj_Y?%mJ8a_LA^h]b>BPA&!%jiWNCAK>^?6X.Ve>Wb;+<J+L58/)-;U3HdH\!,NfFKEI$W#%$H`n-#+8&t2*_T+hQqkG0C%SQDFNA:8/b-=0h+S2XI/@"2C'\#-3MeTVI)`Hn]uEY,$7HA]*e`-MY6Gjh9o,$?QJnU4ZV$4@_78@!@4@.TWAp1\LgEb5^eL*JK!%8]k6nZk_&QlQn4CRClkC3@-\Ys)[KPT;>4p&qQ2'DX/U=3mj7gaO(Y[YM9I_`2ctTXTsInErIDV4DGg9)i(nV7]#j]?3kUYBQU,"%**=J1GAkdCNRZne9SrSTm[mZ75*1IY.Ne[e(I.(C'KB0sf434RAWXLID-bTOf0U$D,4AGHSThkOOmC.jS_rU,0i;L*iKmsC\LG3$%Cr'/MXC#+DQ^V=Qj:b0cX"'a>.-4f$(`p30/Gq'VZa'U'DM\V'YC;@=6Do)5ef?2e8f2sm/241Ys6@8bZ<DCehQ-!fB@qNGK"Vl+%NjQ+e*SgH(js0L82c,F!4-_%<!1H'a$h(l7q\p33gu_g`rZIH&nZbEd!5uTESiYpI#u]dYk8Hbri0!-o$bTME:3d.C\9Y$U/`I1o%j>&$YbeDo-p$c%C\u=!oL-+;P'H?h8V[n9d(jp^jKHcshpB'frYLV9e]6l^;s4KK_XYuJV5sGD=!&e4sC*!?W&jf9$`l<Os-Y"s#%@GQ;0oWra26tTFeQ37hVF3a(-l`NFbrD=7T<E<.4AAji5jZi0o4+*'jhH,[hVCNZM0MPJeR?aUooo0,dnG^Ckf6>WO0h^oh]3`/O%iQZ9\?rhUjL@sksda:]8O2CS!GK@YShY$LoR#)''[sG]a4h`^p.P?m=QD$dfWtGP)0/,S,p3N$KbIUdJ-4:8q&MTa-S/iZ^kYq)h%E/n#Nld6\A4^VCZE/qAFL0J#ui&g'X1Nu+_Dk4GVb<nL[4nu1j6f"0Je9GouQQE`TNZQAMp*$IQ*Bj5p`Q,)ei2FsqD*De/!nP:S%a9gpKHZl.gZjI>ofiqMp`2RA!Z_&NZ@ecjd[C^!0`>Un[o3;0&5(EOlc(9o35*e)k5FPGVoXT.R!u(T)[;01:_!q[+qI'`8J/sJm%M!('Ime'iaj*g<pFq&:fiAU(lM:AM'g:E2d1%uK"^[d%;XBAKJ$e'N%Ln`B&5.d:^i;?n<PrZ%mM!/0IcBNN\8FrsnQ=N5*+0]\b%Ze)X?WTu0AFS&[:gM#Q?qOWBKW.&K0+PuD#Kke^O3tO?GnO<WN2D/7MGjOh6l"1_aW4/k?R+931M[iq%G^\Q1Ie7CC?kHkUY's\R%`E;E]<o<H$-e0El*Tt;q.+`6m*BgODmoLj6e]?r_IpF.TkO(E9I/331Vt-,MHX4>:,Q2<DBm+0>A[FRi:3>G2SRk:ZC%ib<lf$A0%.A&h/f')=c4`j2;9Ad>,Nn$(n[?Jc<h`5%I+7NkiG1XD*a'1K0ZP`PuQY%U[g*lsXZY#>,mB9C;2J-?&@BuM4/$:E#*iD02pU8T0%ot%3_P!^`-%XFjo[sWTf4"t`adX.AU@r.f%%Z1Lkab4+!b37C:[mbL)Wf?7OqKHT*'H<O.OoOK\2`qhbe6YA-HeI-aK%iq(:9(14%HlB;qUjd/A>,#`Pd`c]"rQkF?2@Z))1CMX4Xfb[-jsI:GNN/mspG<gkd#6bfF0iUj$o#fF$Sd1rqa^B+X'G$LYooDYNk9]n:<onG%Z`(cV/R$bgJ`/c]V"\2`WqGDcnt4(;m`2udIi^-3ICGh[37,B@@csprAdiTbFi[SsfXeup($FfXN_dbaa%,$uVoS7DIPa2C'>Lu.%0ilL@!\*.;"079H?W$4'g%_`GNR]$hMOE<6`0$E^#76r"Wb]1q1^Qq#qc_oNcV)!nKY$-#5>^pT4aM6k^B1[<Red0Y\%"Q$Mj'+!%2#G;2$O%:aAmbgd4$E"Zn"p-_g;Lni>j5WgocYPC8(#Ssh=eb(jO]U<eDTIiAZG38fDBqSiVG^rdha_r!L"SS=i5ClVs:uZ::PH3%W3,Fl<F>>L==H6Dc]8NJ2fsk%>l1lM#,aoN:riu#.%+fB?tko5#]ZSYIM\Li-OB!5SVBZ5@k3o+=6a@e>i`!r#G%m("?g7t4\4uV%BD;"I;G_djlgk.)eMC#q1SfIRog@QHR2];gQ06l&Mhlhm97:<JK;VMI0+\gn`bKWs-ubDFCE\J/V5u.o)nqR4<%m\H9h0'FI*+qQ%Cl)9HJ_lgjZu3"L@#uF"-?WhYi!XMt.F^EWD>L8YPj\#'2-.6T='7$!Nm+(Whs\Hq=]]6X53"00Sif@[+(e)_Lu^o.hB7-3`=<t]%(<K&+1nRn(5$`U465pjohDuQn.P1R+1`B_:C,Bg?2cFp4D+@BQ=E*`J0=mni:heh@:;(oCmqrCIr\Rt9':&=XGPohF;cFX(\\[Kj%,X,4<iq9_D'rl!J4*1"I,sl2/$4qh1q0eoK#C8+4"_qL)f[@]:X\-<7GOSBjY/\+]#?uLfn@mO^d3lWQiKkcO'$`Z&Q[<q?LA1H(%]*g-Gkg[n4qd0'\%SL8R/D$lfRrsFIn$o/b4]S&KVhQWrmq^%?.mlV^pE&_*W6T^=5^eoM+j?IjW1dgK.=Vu\>HILcYu(R0RtglF%JlYAL=8R(skZ,p&7I+\;i'e7A\W]NS^)^ZIW!tg'kUfC#rlqJW<*sO)$?In:*j/G>3oJj(2b5^X?<.`/+&t0:miEF9F;@ZdVI';B%n024i($c>_X?$d6YGlRjOZVaO9R?[-5feO3YNIA!9?Aesg,n)</7fVQiQ_3Lc--u30)"uV6aQB<giN.S)8gqR:[)E-R2oZ+XSDq)%Z+&$rR[l*^(%CTHL1]TVjFaQnA(ZJQ__OC-A#k%@\C>>hm0hZo/l@6hTTe8ZDZ_j`n*!?\T=`^?\Yl!)FeS4G<JQ(7s45p^o]u6P%=*GtTlKTC[$*[ZoD.0*f+oBGt3*:O-*Y*T?/':/"=<b(aX3O/AoVK-;jD6kuKSMf-rO*4$oPAAQ:6O:G5`bnY%Zr%^l'Y!=3J#Im%g8gRZ7&.sJa7nIIX2JW3r("MorUU9sl"5-U:dMmanZ7+$Z8&;4d/3dYSCOP=_':i3kM(CuUL+qU^9B0(<<7$@Pj%>1];eoBp8VSU%m.5;+&p/&YIp[[CJ8BkgC>Zni^=b6<lP&s^.uUkufPT)Sb,.rT4VK3T6bc=n&&c:C:;&]8+&(rpKD3j&Hns&:B%PZBk+(\7+=:4)%n2Q3b5C^_b)arZ95?04d>K7ReN?><(Ia<JR*FI1",\W_>mp".g.=)LgV*&>qWMZl<$u$WgR>h^ViWOjFGE"5=$m>duAm;S9oANjN%fYtIXhp%*3RiHmlONq8\<iNW3qbjI5[YTsPXQ\RTlLC_HHF(EFn%Z3^Sge7Z03oAkg)?348Rp<SK!-Nn:2]"ZRP+[1jbRd(,%/-G%<<XM*S8jkkHA::G"Z)CFD0V;HUX!*K5QB^&kr\<O1IVrAff*ITgY#1Ya?iZ5ZS96N2MPbCB48Yf5!a)-]4X]ace1QXNP)/%GAa99%Au80>-$MPE86_]9M&Io0]t\s+eIB.@5Y/e."]O_Y0]=RcI3"DN90#Sr\\M`ai'#1SR&Q5p^q^/_bp4fBJc2jeZJU#:^QAcp9itc;%N7?[%4Ded2A1o;\NPfK4?NjSdjdJg?<KO[;/)b79oWJd#<m#X0C6Yf1maZZIQ*?EEgNf8_<Z7O$?6*i2=c$Ul/J^CSS?)kbQaRVi%1b<]ED6//>%LpT$<6sI96AL;,%P6N.rIk^jb8_op\P7bf%Efa^C6&.Qr:cI[Ro@^>XA+BYotp3#k0VN$6AL;,%aq)^IC9'G6AL;,%%T(>IDdDI!KanR8*8n01XjEbMR6r#oC9#XS@:cLMbkbl\mhq,"&.JRl*K@O)kg6QX!WPdh$cB(^!P*/d.s,H,k)f%DdY:)DL1LkJ%]WrQ3%LpT$oNjHC.<I6ORF;CAR6q`iBLea`_pX*rSi.?F1b<^@/EldA3^faXm_5]Hj%SfBAI^].e:eB=q8\=ZK1V7hFiZJ%bm^[)%#q(WeWE6t00m<"B(P.gK]K-u*X_prW?()e:HMo&j9=.Z;;Hk`"Q+]"49*J,OIW+?C8A'n9k3AKE`r&Q'CngC+V2)H#A\[m'IKHON%97An3W2WkO*0'gGB@S:*7dn$7^9t@R\JuMg?fag3b;TtGXg+_86d8,cj6'dD[F3K`pIT0XH1h6E,[8<Yk9L5SWeWU[Qa5%UB(8fB%7t'(QU?/Q2e%sp&*Mq&pJspn4\(7%n;_k,4'o+[h5HA%m)Af\N0$3Hb*BiY0Fa[c^kg(!@(D"aWn+;'aFStg7hSJc6M;K7(C@`[V%Z&S\5eCZPJWP1L!JrH;%()Amn2h%64.-`B3s5&hLX)%`."XYt]bR-^irSl(j'C?U>Au?;Xl@I\mX-]mjEQ\Q5*4IY*M=&LXJ]UN1%SG^4F8hfPJ*;L+><pIaIWfKhSC:8TkIE>+HrULPh-Ek)B0'(,HBUit<VQ"I=P4$@S3*GK/U[dK1Q$<bA8QNFZBQpa[>AACi9idu0%k$;;_-<<b^lfQ`>Q?TNuFS%C-[scm+N:-\;%o-/WW&;g0nmnRZ\,Bj>6*ep.$22>\Rses2RL*i?2$3eta\$D`aaAYp-S)GWO15#,%>"Mb0b!*kLG&G"FX%`J`[]YoD/$467FY40$"(?%uFJTLB<nc8Z$LXTk"nqX^@&k(9T\QWPqV>ZL3"49:Idb1nHBWZOXbNaJ0g@af%C*NP%l<QGt8O7aYq=Lo!5^VY01dm>rr/1@6p:-]KgjP`7:SSe`jDr9R]ISo+V04qd+EP&+=aI\iakWpuns&E5--B^JDWM52Y9qrj%5:0M1_mlB&LXeA)K4Y6G[aZ6L":KiY_qVU+7&0"a7Rp5n-P-`b&%'4.V?oZ.l%?SED6A&\2gsoRC#]>jiUd.p@Vong6bV^dht-AT%'8R*ug7dBq!U>i:RQt[G0nF"]>te!9:Ak+BWu^J"+&kJuSdE@7e(A+CQIh.g[nRu'l:iB>:*6]HXKC"_o`g<pD6J*odtbP0]M.Nt%g0<t6hUm&\daX>\7^"nh/6&CR45FZ@*VD)1/F]n."5;nl>4#.)qU!X=`X,&Nl%9n8[;Q,oE;BQWHnS5;N^#\O2*6A&6VD<+!qGtF%nWp3rl<UHN_\=I0]D^%'b[mVZ\[3fO5(BkM&bY8t:qto3/E41nln!`!r!.tSS0doYWM;u>hiel]rX3%^pXr)9FUp6Yl28k0XF@ao%C=[OrB:[!`-f=Og#PD%SOL3/gEi,D(b.rn'ZgL6@P+!kd`nBZJ(-g`o7)p7)+0$kLjn3(sMC5l)dQ2]cpY5Ri;_*#*s)"XabdZ(C%gQK/F:$ree*nujLM`%bD`-Z;ni#c`P[tse2Q9'>\h(:rOT[mpPjr8)TZJ"s(QIPeCIVWW'Tl6nn[O$`k]]<9@gX;=u2#JEL;RVn@%^pd9fSDRj];DX6_2i;kSp_NTnIr1s:f540g=!NU+D\V_ZgCdM`[$D6PH8\SicW`3D>-TYfm%VHZ:[9U,UU:_u2qjRj;Y\e%,2R0@%lKENH\'uJRdX,h7c.SE(eN'U=/k+YqHYc>t>-dWL[E#_O50JkuV7,$Bd*t+#0^I$?O1AAm@L?*d;eo1'mcC)(2_(/%5JDFg;^#F]%i(4iYET^pdIICi\AHD(^(EpnXbc'rDoN3`KM)V#cKO\@4=Y%LC^Ge6Y[>CkQE\>d6"U)H97JHqNlX&(&&ssg-VEkPf)\\T")Q,8d%!n2/`QhbhQ0Yo@t%8rQ3,quHDp"[P^f;G%b-QIb7O$.shol:O%k$#sfB(h/.&It/OmP0]QZ`e7)=/`J#JBd5J:LRN[H(Ol1!ogu0%!^\`:pJjJG;mj:?_@Fijk:.UG^O9o%K`*n1^L%!B&tI3r.Nn_iJG?ne#du/.Vuf;FFJi`qZMFAI+S+LUq+qa"kRXYCQoY('=$TU8%GXi9<dm@(9_2%+O4V\NROh7f'NdLA4MPl1_Z@H+AqcO4_/3\=DLAhM6<!HdNV<%&hELXInX[QmmUc&B*6a=5BKo4c7[&tnqY/9J"%4&Go^IG*9\/QpChb3n'$g$$VcOk6q,pa+1q)fmDA"&"/e;=E</Tj@aWq30RDha>'Yl>1C!'7[_Zq`WFZTZ0.*)XR2P4)lt4mVb3V%KC<rk_?dTTK?4VK^=CmDQ@N!V9S4o9QnSU!U4]Ff"-`!F>B)@)DIA(lI]EsUedY=2+)BEC1t]Hl8N38X25(0Y;piB+g0u');[`T0%QUC?t)OPJt[m^O#P6RoSI'79Bj84A_WpQbuer.5'a4-\3VT'M0m4<n*0hf8CVZ$Hp!l(ig6?Kk_)5<rN3NV\!e8EeGp>]r[DUi[^%d@dV5X7km\SM*<OI*AGu/K7"5[-<3cGNlHHIFEu6(*W<6<pec9_-2MBr36dbo\ht1M=Y;7()A&'s)p6UCq>n&+'r*'J2fdNY$hA*%F),5&imh4g"nh]f=(r75h3YT&6c_oHAJ"ua8D79<?#L<!2mp)pNk4'k"OC"]:E=Sk7>QtqC`-]\V.GIK(*OU9/RM_:BPA%[qm!U]%6aX3+Ofqip\.$d5+p<l#hm<g>dNSh\S+*:dLmAf"0X'psb7H6W6F=BeK/d#?M\%)9YE`[TQ51Wc9W@\r#eAjb_93nO-GHaO4g&s!%TWZ<mIpVE0>he:YQ)!l9LZECJ\3^]^[s@io4$UAcS,\RR#b='R+ZhpL6ZO%:IFQOQD4FZc<=8hC(*BsU6XC/JdISO#eCGF(cJc2J%;d6X@B$B.#1%dVC+l:Y1>H`b-.omato0[u/*BgSA;t!*.=Bb@2I,,ZT:^cgR-e:Vo6dG(<]ik]S0.g1'[o*TBZB$-Rs$H]^;md/a%QY0637MJWYk>/>0p<(d?<=>L9'4.t!=Xd3s8UZ/fhi!in67mlI+8LOJK##_'Y-$`QWJ/E:QYYbR&6K=F0p(!RJCD6C]r0ad$NYOW%c0[[mSluDUN]+B@oQt<re7WK9n*0Sr6?M_k_2$Q-^fjWWHV_DS(.*FZ:$t1CSluCWJo,D=i*E`%*A9(T[Aaoccg5spmqKK,o\B2Q%el/!T2qBCFl.r=40RJ4*RH`O)nchi(REX/Y.[+rQpo!#<lsS/cVE5m+)[)+.5'/Th@Lr'=]0WCAP3$&!>kV/Jo?+Q2#1:9\KD;t4%+D:mNqa#VbD@kkQBM1h@$bJ^?;jffBAiGMfmG8<3Q'U4&h&u!d=LEK7#Z:2BiRXl7m]c24P%j?qbIOPT:.neX@#YoY'S:6Z?ufeH%fb3;`JNqp+.YE2pkt4N<(O`^6.sY!7[\*!OBm`boIFTd]S:4ct<b?D!;\MJECO`Uu.%-M81=9%RUlrhnp6s9919YUuiI.&UC&Xg,%DkfD^)BS9OC1q0n->qLiQYGbs.hfL3g>HOgfuf!:Qb(`iH$SkAL2L,uWYV^$0>u50V?ZkPIuj9#=m$;aY&*EbF7J@1qOXEeX(8\9%opg;!hc7%!Q0^gXha_S#]@tc5Y>N^8X?6<#EquR%oZ`tK0t&g>qS49D>5+QD%"E4=p:kOqp\(,(YVa,.cM1mN'3`Ykn*%m"mT[iE%LQ/:Qh"g41247:)%o]sf>C'f,=aYT8I"+UE4>6,U?V^%'dV*LCXj-^U?%.l"6g?8s?M2Xf_/AU4n@eicohQ77Kc\'j/oUa^h:%tS%2>?mpk(lTt)=;K@pJu%9O4?<iAoJQ:2HK6@oVd+#4mSFEItR^*]AcgKL/ea/n!:A*foUNpr-Ij*b6MP6Q`ka3D:unpBkjp3O;2"b%<>lkfNEqiXd.pCYL&HRH\BmD%%_64eputRR6,Z^pqM0^ZI)$*?=[$A%FO'of:;DtAFbfC'Wda3t@T*/UBPI*Rm9:G8$W;2IFtfU2%Q&0(c9h'-DC0_I2@*M->dD'$ef2I]f(Y.N,eJbYYXR?7GXO_n:f3TC+=YJsq3+TE$XK#'6eKR$_%ai$s_oY`W=ck,#.,$jq[0E_b%_mFp7C(49Rs2kihZ<@?22&cLN+fdJ.V>J^7+fdJ.L&>I$ZFZ[Jg,NWN#-@+Cs+hia7sbs9>%S*_`Pt8G\N*NX+mZ:4RD58B+`")a%-e!MD(69XYYeiS\+'L"[AZ(#kR4&PI1"6+Hb=$?cWo!Up>:,eOFLQb@qF[9m9g_rs^l!W<rBjV$^o@iCm2iQ:"'2M/C&a:F)R-rb%-/1f<i<?u?ANmC(XLqT`Cq&.T#.:1t]^h,ik;NlRXT>JZ?.9n#G"$"jpoCIVpMM(P`q\RCoLh\QAZp+i/Xi8N@ELZ0hcmul%ERs^%bK9&1Ha>mr;$[-"WaY7I)Idka/VCOqF*/BZ+cG0M^L,.Ogop,lYIp>W[]sQ]a-Q,MGh8r6V7<@M\(Y+F$D-*U2r5S4XY'F8WPS,Y%bl6Vbq8"o#?`WNo^Mcl.5'<,?;gj;"0!nqF.6K8e(6lO4:AXdfM6ZEjJ#-F\=oH"S!U/fqS;Gfn$qGV[7tW]L:KEDL0JD!.[\mRh%GB`PF7ISE1hg?+"ok#]i[3):)BDqiS#5d]2Y;^grd'l1)4C'i,ccdd:`*iV%_7"DM]Cr?.rRf0/@)'sr-^U1F^G,q^ouS:e:X%Q_%8"jA(gB1V,_\f+em20cB:A-A=K<BG'jtEL_NSbV\p3W@J,?;M-pZrpns%$R,4GC%V(M)*Cl3BIJhQ1o]!Fs!F,p>mh?<O@mUJ#kU%,jXC+0^N$a%]f?AhXI'#62s?uigQ@HV]3oDFHiBnb[]+:AmlT`h%=Nt-d,7rO)Nu_aZA\ce>j#XXu_J:#HltM_]QB*RIU,LIuM!,%mR#nR%8>#T.:>g/gQ%k;]dV-dD]t`ENc-X>[4*bdaW^KUf=['4mS`>!h2A^sHBq7T=hTe;-=AbG1R7OsQVd-eO1M7,pQbK+Hbg9A%EeZp\eb)n.)V3HML.B#FF:D"E=bQgCL&[Qmr7o8oiKCt+27VL#J\ba8)ulRZV-n)DR3blkYl2D;d(!!q(W2_AkkgrtM71^K\$='+%SUh@:XV\I;qt9lmoV88!Gt1ZJ$Z0Ad6Tu0%C?m),@V0/FonY<gaOXTi\F<)iJ&o&u?g@,2;7K&-C&CU=<o6khrj4BQ:U]Y?s-Wi$%.bg8MT&u>YN"%R_=gOI6!oKQlR1IrVZ/s:)OC''b?iCW8\;hpQbTFDlB)]U?fE9)FB!9N$=N^$s&b3\L.T5#gE_E%d';&FPXfK;1%h!1CJ\U=(U"bN:2U&TX/oa)mCNILF.YA4H'2rh`rB<TAE?+q;2h*gM"0]Z:+(Nie0Xu^sCf/jm8")ZQ/>oTNZlGhuZI]=^K'n79h%3t6:kW"JCER[Pe;-*KNOMqk#?RFiOK3M(d0*HROdp.FV"0&7>`fNf/+36#!on_p(<$@*$NC3mPT6VV1Zc<]9X^t7Q@4_NRs^Xr@+%0Nbg@YONo=eQ?)t#h+l'I:N2LRbI^RYiU0q=Q=1>pS6=*r?r=WIF[@N[<Kg;)d5TiH5alJT0@B,H.<61GW.pKGLSMBlY<V=B_f\2%N.c!"%h;uh>_@Z1iLf_Z=(hEfSUo+PT9J1+IiNk.3-jo+At1DE"t/TBqb0t_q>FCdh,e%!s&&Zs2V;0<c24^,]<B*8ihQ3Sc2ZJE%o="U!=T`DJ.A3&NA!IH4h9Sd.HRV53N4aD/YNQ@`=:2iLB&978Cj$Im>RFlNQo1ot/:>mtQNCQmM,preg:h(BHhL:)"WPB@::O76%du";,NRNK>T%:5P>+ZQa'1LC'/ZgZ05YM+'D4bch"?RF/RbcEg;?6&jfkP\'lUq8eiNSa:QI_B(3o5tSdeZkWX#mRaTD[!2J<m9e%/70[J4Qq3&>#9^?%X5Zf'7/uR$0K<genctY%Uek81#pRY>TDhh3(uVYFuVJ3mrbD*:V@32QHT8+?\3%r\6=EsEEYOC@g@GXH9RY>%BdV=31B#fbs*['<feP#%I\;A*Y1]VBf7`!6NQ`_r5F^K)$**pch"dOZ+0qn^UK9ODbMI(8nV#NOI5$EIQ`84VrJ2EX:=j*jb3jkM%[9P<.pq9b\hr*6,a(^TA:4#VC<tcKZeB7!Y]=r:Ra?(6ZMdi%&asKi/ch]Ts&Y$0Qk.<E+k=8J^ks=Xg1,S-3`j4GT>:)Me)Gb#>%(Y?+=7nX(7V4mdO`QIAMkLoFRb3'L=SojU,)o/mZH'6dfl&:FAM\?>l2R0$TTfB<kQ>^[(T$&UP;gW;T:/UHXq6Z.#MB+i5>j-[a%WaQZ!50Bm&pnW&gI.b^2lL).7bu\iQQG(8kk2sQ7eI'u,5!KG/_2@O[/a4mI4jL]%2&QX;YO7DL2I1Ka0'LmBI.]s)YSUr!h0b3W%U[<0peMHfZYHOL74umMU`G*PJDQl7Zjt,`8IS>9(.0=G5L8r!]&3V[hp'DYLCSP(._qpXT6^Fk,IXLT+%Q>@96cRqV=2e<)fdO*E%Dn@i$HU"PC?MC66_2_7K^_i@`_e'Qn?nJA.]n9_BnDf3jRCjbdJ!V:eV$n)+5Fu?!k?7J:pjmN`4^*(^;5STDL8SK`2t^(bImSP^%.i]V0_=I,t)@k(%X$8;Q!Y2soBCY_uO/oZA-d!:(au_KmC*HMEYOU.9Q"`*QB'6m:U.e)+IF3BSAS`li>o?d9Pel%;%Z+H:S=e^<%Wf2m)]6Fi)$m6^k=1Ga6%k1WNm@\bF:#>?@YT7P1-!NUWgZ:Z5acd#3GCQSmIU=,]bo2Oh/mlV@LFt5-ER^?KW@m@K!q+t_4b)/A%hh,-2;n(h"#X6r\/`Gp,Cogoq)D'*CnH3`Pcg74cZQFLQFN<VL-G*Y]N,tr]a78&hHqMA%T.k(taW2C%*Vbb4-;lON;"%_(@mg-%%ol.3Y>e/MENjI;mF1!V_ce-cAj]>c$4#(qB\MJSQ2a:PNgV$fl+(HqR0=BcQ)j:R-S5LDoRkF_p\(KpN%VhTbR!A2!*/(g"\:g"/%^`c+Y4#4;FZYs[BHun[ZG+M!@F4aTCZi$`pqgk19gV%]Fq07;pRg?XTf`569W;F<mE;oe0/p0OZrc322pSHSfqK'UQ^&=(.ASlXU%0-3)7Ij&uTo+b2FG1;Fo58E&GEA^cV0>#[lX7tp@KBQc)c(p"U&<$"R0EU-+WV/]%HHmU7?]!abY<kEHGaHXGSpl\bg9%5ih]IWN%+0JB9c/k33.LXe_:Ze8_,>bLj_*?<2h]=X,3Z-Ea?X+k0luX/Qm3gH%Vk8MXS!a/`WkJAsB'l`/hX$LtoaVi6>Rn3U8bLEO^U&Op%gOH8P$U6PTS$T14W.q2dYeu#h?a](lCZ"X.OW$8sSRc*JnFXZgQWeZ_YNmm7D8<)o<W(e@4Gb!Tn]fq]jmN!>nVcQfGT`=g/#,>[%@pFN!Vt*/3Wf<LmlFoK09q/HP7s!um^T>X.@'Sj-DW8D!\G/Q!rlbjYm63t2B3#Pf#M3ThccaYulq+U_WG_BN0AOD\#XA@"s)ig*%Fqi/h-S54\h>pF4-.RcUrYSunT5I`.*p;*J3/I]cjjN:1p[ZQ!f@q/OIc,[Y[E%k7qWbQ\l0\'C55WIhj\LC"AGlb/&2&r1;pgZ:%RG!SXM61U-YcmTbE+SZdU).C6Vuh\>oP>]?9q.)YlUA6"2&0fs8(Ct/J+gR*[-l4OH=gUQD>(u?bp_O]@W$)o]Dm8f1X$eVC;7+L%luiRhMep-a4VJ?<X*s/0qk^o3Wrq%P6KSMc^\@A2I_iXk06MR>qk*,.\XVp-@fO9U?:e'[eaHgM>HKs%1%/ZFC3k9tA19%/W`]_R%ao.=qW*W>.IdrX)*38i,?`@h.fe18@45#'.]4rHE4MS)V*to/9Vg#eZE;K7>4>N9F>PXJI2M_9RB57qaW_81$U/*keo'GdIcR#G[%WI&c7XJQW0$aIFAH??[n2d;K5LRd3sCVADJqN(nLl5*qincf_77aRZ?eq^^VF&n1rT3%lYbe$h=\5pM-oq.k?oPX:&VQfQi??ao#%jP_!9r)]5WBfrgCrB=,-kb%kFc!]uMSSW$*IT%892[1.-o3Q!QDpWJ79#Kc@k:]oeRBt)Uftk_^hO._8rLoB1q&Eo9dXUQH*Z%/9%.S\`]4.,J$;ob^qT6U(*GMkfI+$TX$YG4_akgb`l&P<GA)B'QJiU0ucCV+q$p*dL:Sc3tUH!=peZ]P^ps2&CdLjm7NpV97qg$j+]%r*\_R]`[uRAl!`u:9"Ep6R/7B^;]UCCf+E)*oB1Yc)\%_O,on3%*a4V^6k=C5i%.j/,]^nQg3D7of0R1rmY`?6l/#8'B/C1k]$:&%HW;P&-XH/ab4b0R0'sl^ms*0N*]pO\Q@Bo,s"%NBINGIPE$p!*QQbC,WI3c.[uVlFb1E8'X6Fd"oOf)eoq+tf3nXE2W8J3GM='MG%mcj6?$MpjsfqGO+;0H7%oCO]Wc[DSuOD'*/QB%gik%E3@"\ptY+5!,G>f@X\9m?GWk3?^I$/aQ"hFQnRO8iju,EC6W1C;L>F*-I<%qYXdpiTg"![WABW]OS=Ui4@f`cgIeDkN?(4s8,d+4+4h'^O>AelPqKnc7CLlWbXW.4$2mN_O'"rp[htqO&)%;`R>4.(g]DibB#qg%cc:?LX^GPm!+ERbO59#3=+*JUU$0:>2#[a_Q+k]6ae`8Dq=$(`HolQNrV&nZBR.9j)S1(ca/@_]#mRO_1\3hj#>h47)o:CsQdWa)%I&2r#oMYNFRESHCO&YRkKC>i)4oF)XE*Jjtf@&:"HIjD-6`JYCV/HrPeG5q7`F$W2n%<%O]DVF#o]XahAM=Qg7a&-pr3TqVMpiL"%[T6#ldF$*E)Le6WVVN2(=<]j&\,3&R0J<@N[-!upbs0[GJ#5+'9PaWqf).>+Bf)rcQ/`@fSG%&SYWm4)C[4f>>c"WHZ3\Lh#b^+?%G^1-&B+4D&0H^cNe:11D:6.Tq:Z5EKnpJ*YqXQ<_$T$\,7c^<NY<%j.@(^^dk?<0!Q$U(=5),h0:dN!Qn^ASteo<[ulKF)=r]XK#%Nf@dM0'5[58up891,LgsdIW?IU>O%r!eg%.]Xm3P/a1@o_9>aAmLL@o'-&EZ:fEn4dVaPD9m]JO[srkD"Qp>>?/LCKiKmUFp7K47%W=QSEq9$[mVa!#[dS"aFWcqeIh5@uQ4%Gq.H/6LRT?lf%FbW@kFj$I7:Hb5V5o786mdK%>og7?r.rAPK&*R)?2FW8MWHo85G1AZl%q@g4K.$7Wd:bTc8Gs5Yg5'cAhK1T+#-a:^hCV:AtC2e65REs@I/=ZXib=1\X`p\qG%<K/?od2#5<JH"?hu3r\l;okB4[.<SQ)Da=%8N\l:KVulq)qSi5]@J!>s&hA$]U.'4qsD$9loNJX:>QGIGNtMYoiuoo;PTN#HTgMh4Q^T>4fOtO?MpSd`\D&hW+f6%CSk,oqcdBr%EHc'.mVdI;P1HoNcAsS@D>SLh?<Nf.EuZh_I4G8#ffUin/M8]oi^Xlpk_(%g1Hg5-UkJ2*eUu/eil^tAVmf.F=$>=rHu*OSL[NZa%\pUZHT(d]$'^Pa*e1.)VT"\59Y=G1(FMuUnfD-Q(n*EsF!g,9%nRqN-FeEr$[()[cDCo5#TJcW0oo1''/2:3&q.4jJiV>;gRfd1c%;S>KeNOf?6rVB+A5JL$9f,mY1PA1#jG@e-39$aHaj/dH<7D3:k5#qK(etBHlGVU?gf/@`9P\Nhc\%hWBO'e0\Q7okIs->iEkBj"7%-ILc'c.OnEnnh,+cZ'87q,ng0CDRZ\/N*O.)o[R_(kkOa`\LR>j*n-.\hD[;^ZWjXSHPgeq8.]9pL+EcYVOMQEsK.)SXA,qA)0TN%n+@/rc"7n\mF;#.oZ%4Ak!jsudZ*ok;6n/)lSn.92ZBLX?[$Boq4rH'NfTfs`aaumlf4mX[HFqn)W"J$rhON-l!li*L'e\DhttIj%HOgWoYPQ2<Ch[E\NNTm);V"bFK01MToe:YlQl8#]Z\,;c4>j#SlSWb.X[BjII*WhJm-=C0Hb+:ZQ*1uoJ*0`[#X;&CmnRf)pO%Rb%hNVqZ-c=?4a`"N\"#Yff5H=I9Y3M%.(KAF;Z4#Lg.cd:AW4kDXLFD/-ouJY;=YA4Ppr1Ut;73doG#`2#b6QSNA7IHcM%?.aQ_Wg4%^\BdhajB<oV-9mh:4L%R[Z9OeYCCN.]3JEUOL7/-^-DTo4h)>W*d=J6]'/hcI.YsA21%j,S#S\'MZ]l<q+k!`IQe[$]s7I,eRr$t%KP1<`C$fO(Z9!'<0r#Y"rsiggr0#QKYjj#>*]N[`;GUl_U8ImD(SuTGNjO7,T^pf#>%r4Y::2(D2Z0.G425mima%rk03>1Z5O[*k%A7t+LCrNqKN1N!+D%IjY$`^PF=:<ZS'RfCMS`NJNF2)pl->`:cKg3.*Z'INl/(<PULS(Kb*f'3WSj\Q><pmCG(O%A3o(*lDoY=Db%c!5ZK&)s2rIl.'\cnj'lB6l$cfpgArlJq8DK<LfZe0"HUeMeiSm*>l[)Ige4h<Eo@*HQ@+^\tQ8oi3((YI2[=4)4Pe%Shu?kY%@k%MU,^5!LoS?59E*q?.Kh"Qlajr??IpC?$pI98UD!I#o)/R]I<P%j@/T3])K.dlm6fHn;A2hH[>L^hKVWW^9hoXr/$g<Ib/C[<:ALi%TgO-9GD+<Ar_Z=jhg4AAJX_;to!H4T9g/19_ZOW(')7IMn!i%CY4FnR^%e,tXS7rHZmWK#e(XuFGk^P&dCth4NLt=ef*B<Fen]=!%\fU$DXD\A&T5!&tfC71?EH9NflK%Jph$h$:gAaKj-?Yn=WJ5>r`f4`J_.erK\((>^1d5cOIer9<f`qN2=S#U@g@2K7Xa)hYn607j%*:3#L3pjmJ*nUAgEQ*Xhq@@DcO6a/;[Ipn)mr>2MEq@^p3Vj0?n_ZC*/\rue[QuRN_g2?NM\T"q2%rKE6KWa_\LVObG!2,(UZLD.%DU+Ta`<,h,@gH$%f.4#d"Y6mkH=D20raNW_rpVV+9u?o3;fd_7f;IljT1dcM;0*e>H7LADLF\T9Cs%u,AW,1K>-I/"#G6@m&:-R?%cBOo]`ELIL&4FeKi+gk_<s/jr5X+Q,_rn@]no/W_dVuYtS2ii&&`sQn_j=0PErKd]<.5?V+:i(\?X\D`Qe[Rfi/$blDV33%s)`+a%I!tm'=RVl.r=ku\I&s6Y?L!Qn_:.>6=JRqa@"%bUcEkuEF_5pGhnuFM<iIV[032_P^F/hf!7XF2#A`UB9asC>E??b!SeP7.#!Q+S%QKD]MgRh!SH-DEQS,8`emoc\NpoaOgL9\W(B=O+ehe=<L\oI?*kh&N'Gu)]7VL-u'b,)T=V`b"Hp9.V4hAK?9o'@#sjaiYJ4e7<f%g3op^C4E,UDRP%ENkmLK+Ii)q&%U]!5?bci'h<_,jZgp-UJTbA!-+ADS@u*&Q&G3V@Z!p(C67+4^fOW%+9%]%bG2gp"TC0j;cc'P%R=1a)h7:/qT@V:,->=JVW;Wkp#o"4XFDT>=(\)pHB><lhZT%Vrk?>QNJ#GrD41o8Sk4e1`GMs*8'eQ&J_jbRK06-@&3TfW]9-umd%CZh+jl?hIpQd-d=gL_2`gN<,H]R-Q^E':^_)B'9A/M>KLe;rb=11f!HVl5j[GU%k6Q<C4Pcak4AX(u@SAq<I#E&b1M?JsVX9Ue72%ELCBI^2Ib0Y-bsY4l_%JRUj^509>9$Yfq-<e[Sl+6>#61:Sk]#YFE&WU:9ACb;DN!6^I1RGj_HPQ`&G^jjUj@2922dY!I?T]sW77%Gb]!AHF%7-..'5aB*>ZJJ^:?GSfAum*<d:\cdriN(Dl7685DBPTak\PPWJ&ON.ufre!Bg%D9!ac"j]Y^GMP+Uqs\=%qg<:22n>_8%p"cr3B2J%^]s0^`G(7kWb_*9IZ@NB>lrf"\)Ctp7ZB118GP'BhB$ks3hiF>Xg"lK<[(tDfps%lY=YcuE5iKb8q<-"".32b6eo-@X%ZkjsE$TjX$:]7PF;HrA:;N%Bl`U`SC\0`$)oabfT]=VU0J.OYgWQq]n:KNhQJW3H:cb!MYD`0D,6i%F[@Os'(I>;t+0/FE:epaW=%oXA26K>.oIUaNcT#].tuju:?2ddYI`Bs%8SR?eN2$?#V)l1+FboiZM\RF>FK%X)XIaNNc2^XLLB:ds1lo?H:Ch;</LL(/X3>a2t(%6-/l6Pq%>gZFbNeJZ.f,FT;:[e</%E,PV4MM[Nn9&fb+pq"(nCHgjXg)4i2T_W&E8>K?6a2kg.YqI&b8>O32.YHmQSl,WdmiOPP[%It]8NFq'Ds3r\i?YO;DS3A$c`.k"dP.::u&I8U0&WU=5YgQ-4h_2ahb9:J:+2'@55qLorVj%o:NV=8<h>F%''m<>IX7rU&sSN@\A%`BL(Y>Nq3fRY<<*6Xdj_<?J*Z3PX2J864)QWd<"'B_]-PErNZb>X"e&Q*"uimj30m6F,4f1)+^"FB\)SdNt]'E4EA30sk0\=fi*$%KBu;h[5"plmH`TCRQ]>/H8bMtXAd&:s*KT\>/4Cn;TGD%>Ka'QQn^LJriQ4#I/<Td"9)0]@CeZd<r:LO`WdgNn+/>*J'%kYo:tL)%lJ^3qCL$haIdfol_YZeQ&mbK9j-h8P.Y-<Z\6?EaR`s#+\9ak:ro*N`fC[_^p_l?#B%\Y<p:(tZJp6r=XbY:"7-X_FG)WJW@)6sr%B5c+@p/jg\O!:(V:XAcS5^6Bp^V%.[*WPI'Tu68ns)Z]i_>hMhVs>Y"?5T\lKKs<#*IS`*Qd63*DLZ<d[\N#)[.Nie\N5/M]":+S%pfHVqTHD@bD[ViUZ-N:"n]j=@29qmV>5bBA;Uu?6cI)4=h)5+@Zb"sQqnMlL%o8a@.@j[eSMQb)Y93N;lLF0#qHP#D55AWBdofTK%n&PI,s4QUT7cH[U]Ud>='ISJ#idWprP,SD2>b-[7ZT9.V$3&o"5Q93lFY9]opoVpCF9\;ZSU:6/k8Be6UVl\UOg*;oSWP2jUWsef%K"rC`>X.JSFbEUQih^?eQY!p6Zd2V:GZ8m]U+SJu4?rJg29&K+H*P(Q\3P2-Icp`QGYpStcK,5O8.m3i>XXg8phl0C(97rd\o<,;%U*'n]Q6q1%;Y@Z$Y?3UoVGXEt'`*[2dNjrK?+o_&Z-B">?'Z:[,D#$TR\d!%0j"<kin>r@]Z=]!)?U@:'V`A$NVL4(g+8+jM>Rt+%nSI:`;/3EcG2ZZqi$8*>!qiUVD_jUs$S71Q7'^dMELk`oILlR%7q+-/1lE!Z5/nf>]:j!r5BI5`8qKU>GQb%m'QZ_Fh`&aiK*$so%<2*pAnb`I[_r>Z5lDq,2:IeY[FV2Deot0Kf>0N'*!fKri(lTcdLuYO*DD=A5$S6Io@JJ2g")PK(X+!!ND<AlFJ]2Re3:]P/^^Y/C%a&.E,0!l$oh1>X!AbAXFmtRgdr5:%gfS,X-R;,`qj4hdR_?,WYBGm>><YYi.3<I`Z"hnStP"%?f]te*W<J@Df1EX15M./-'8@>G<%%rLI0DF?3d4f)Jb=mZ#$;iN8a;k!q#]NukArRbSZ;8o,FZTpgG`Tk2A93%aETe#V<e[`\nAqB8;2N*4/@]E9OY%tAZr`.LG6L-&M%VNNX;=l;:D(5MU'W_FedVu+i7L7W".lJl^sL\>_f9r3DRZU"I4S&LM<S8(u:'%m\cG)O2k8?tcLS\C)VZ$N"QToSSV'P!Wl/69M'%#;ut>a0f%ia1c*+M!MX/c%7&fYW-W4a]*cL7\7lSHa(<F7#_[=:GmUoG#6D,S.X@o,+AaE=C?.6KT`n2G7,gTC_EZ8$KoW3^Bi/a%A3gnD=Id5YS25Z5p$lW"VS8r09,r21H_D@Q"=^WAr@[`lOp/,Zg+74VMhNBn!'R`#5obY<9B]Sg9Jrdl[S`-rWQc&7ZC#B*+nX9I%"UViZ,tgAP@]E.Vcr5;j8Eb::WNfrLTu7<b;@P+-DH`\UKq:T'`-2?)<GR1fN?CNUg*lInM,[-*YX*6(hC,@W&jMLL[A;GN//1/7%g(m3gPQ@b'=:g/,<',uB/I85FRFl+C&6hi9UBK>'@%dsHD97sfZ^>Jt8SfVo<+rT`Muq+#1J6I)$U&`M99qt@,+319Binc:n+\e6%U<ra?OqA5FS!&IhZtVIqi;g,.K"!XNC51XL"W$t(es7k<Y*1$T;88RR-k,%9/Qi]6euuZ"&F:4#)J5d';q$mt1/Ijd>[UtGDe$nP%,ds()id(6;W_nIIA@!P(/Z&a?Spd,D<7#'S];!;\WCAj&i^c6'^2'JtJsW`QWT.)3;SQrgVj^Qf04W,R.*5r'qV=!:=W#'"=L-FJ%/Z+sNN(#<6`^s^IeFbDjRT,B%2@JK3QRI"<'rtEIHD@Ar$`W4oQ?o.A<0IZ!he"&1%5m29,)oJRP"7I/#[Z0cWG/2AU""94;QVCb%gWraX_!>0se.4ot<)\Yp)aspnqIqF@C.N>PUWA"X=eISWI">6QMGkI&PX(s"8E:S\g/-e`-up!I6>>Z,01%Oh,dC5-q%cQ>=FP"@%=El`UG_@>V">=E<q;Wkq0f<*5K>%DFI(]K2V%LA13E*7Ca"=O:a!Mp2MGlR]eF^ul$S2Xh'aU,bd%)sMI<1q\Mr<\I;$s.hJcu^2%.56Xl8<tU:osLaOS!tZ]UWA@((e,&fK#ij_1Q&h9QDU8H[A`nj(IpBYaGXSC)I$QA!g+9<@Glha21'E"ct9:h#<&?u$Ogi\N5kXd%R_:`NVNsn5R)ESNH/Zu$aGXsmoaQ4*UW<gUCB!AT)d"e:N<Me6(X@Da]\&$H(]n.$KqeY-/qM:F0I\]5]5SP&+?m&uH<:M*9'tX_%Lq@mio:rh2@L#A7S>jV_+%8*ZA%06_#=c7o,nP=+OWR(OMI":!VG[]3"?,ibVngf\5W40a25q]mD!!*2J]07UW>Tb#m,H\lNNX(L%3J"aHR`-=q1sT'a$K4]2R1B=*Mo?aMWB'Q?0`EJ_)FpS]Mg`o\!Q87FRg"i8gFW&.MlB/\6WYk-l:#3P`IVg0#i[J.blZL>D&*A=%`DiU)SB,;n)hp8/6cWXB6sa[D\7o]a3".@(lG/<gJJ\)>Mo/N"=LG0Y:M^ek8Sk^mnh'"h^l)`<o&\RVNY77q'R5`gnDhl-EU6iP%f9$lke-Ik<=WBpI$ZtGuZ66ATWFBl,=tJ0c(Wh9UM/="UU%Pf]3qB#BrTYsTC)2Kl&sj$!%7Xfa]1<WhBn=5P6rZ-=FQ>kGoiY4_%`@8I:3D4MU7C"%f=1Ddt"7K.-&k>Gu,R\(+KhI^kZ2@K4=%?RB;j27RAr1=%$',-@&d=+2fIV"eMtoF',+4mE,W8:Xa'sT0]L[dX%Fr!^n`$e`d@kX"EEE?\W`(M\ZRT*f>(I8&@7Yu&31=`2i*A1LY'TYob`*s%k@!nHCB-=H^&pP0jD(:QUS#Kh\B<rk>,tf87_RMK3%h'fR3'"SiWD(:B/Rt^S#g_"jK),a0YF]+]_?5V<GM&_HL&;9RjVP^/Gc'$._\#F+@Bj+o<+*]\:U=B#V+Tu3\9T@(;RjBeB<u`4-%&Q;UiH4(#piep3t,fY:j0f?L_]`OrWN+<WViCqMbgo/"fk?)+`K(!Zue/ZeU$]Lf6OsR(P=Pu/"$6r]0P@r"eIp'u9nU13n<sN1[%UHf6#T).99^r"aoD2-56K)#t6.52+I8<u;n`<%'9OXuHT!_ZhV@c7SFj@FrD(l;/B3[u&ADGQoZOmN3PlF@[/D(:JWRtZP\U#pT+%BX'r1@O+n@blUOda'u&C7:B^_$H>V+d29l.eY](J^`o\$>jC(a\Iao1Cdp,sajRu6R&?]7P!uN\?tj#V$T4@F'#2411*[ZjAiN_+%.Z"NAK/4.nhn0>T(S6U?3[7K?3O2r#OUf].(AYr0d`?/>Y+"E3:4YjJI<De)cZ#anGtq1D'V:F<N<>*<BqCM((l$ZpVWPFPH&dp2%8/;A#@'_\pg4e]VI&=]RctXAS;1+*S29ka*!i,OLA81=3b_PtPCU5G[$7nmrMZjfeOXRM]C+k88N/`3L9PkQa<l=DN*M/D;pX@&m%'V=8W:%B;$37Xr/X'mCl`Mpfh*M/CP_D@@SJ[WPI/C2:Z\3j,+@Xa.%E5A7oOj&#kKLR`IjpR+l1n;+`b\Al)SoDN?e3;1,&K8b>%66fY"\/+[YArL7-'j0fj((2NW,8!X&"el83B<"f46%Q"\:4^A:^(2*>FG*+=MU4m0A&sn@==;*ZVT.!e(43c3"b'o)1kM](Bn>LS%%:cD<7:(Q@WVp,!&>G:=,B->47PGjW&M3W#Mn(l+7^BfY*Z#&^b6U3DU(L)4;@?0RBGc@I'rSi$O%LV^$O?eST+OW7B*=,[hdW:9%cNpDZ^&j3[X'GjjM9cI)HC*8r3^1HKC/_*[>WeaP[`E'#'O+8Uo,Of:-l1I]OCDs>DR%[oBEV9.ZG>HZOt:\t5i^TmI5_>,"#Pt9%H(Gt$2@DjL^sj=S@Z[Eq[0srqJ4?b&8M0)j&</rB?71jRT34k4o=Um7K#fGr*MHmm*-$D1^k*se0T8=)(9-2N$VX'("A>7U[Yumu%&K8K;\9M9<=tLsuXX],69ZLfLdkMc\<3$@s!Xg\f9sV]YABTcKLsZp(NmS,uG_*h=';H-j8?E\e@Yna*N6$Vg9n<IKVkHpr]lbQL%KP&.(;3HlKM'#qq26,:Z0HHl"/.#R>KdK24=Qm="Q3<>h<23(@aC[J$,FAtg0W#ag&r&<>9Gtt%@2;KY8/'WL#AF<6_UN%o$.9(p%H>.pV;'9$.5`j!lR1@XNVLp^aWL9@<(Dp`+8=!@fWn88a&>VRbI;p<]BI*.CKLW1"L^G\)XEG0\-:/rENmJ'/,;b@YH(O15R#]N!%VB[pVWL9=o(7:-/#aV9;`F9LS&M/lua!I_80&jf;BES\fX'I-N,;b@Ul?AEndh*M7FG(uRM)4,pIY$_hNF8aO=j5D.)M(6P0;s/f%oe7bbNmJ'-7[0msFG,B'eY^3f^iY6!0HHiq9XUk@RUI^ILsRQ9HIbJ6$&]B6`POG`0K#K-=B(7+-l+g/JJB@cM/#to28`Ir&>;t&%&>;ZpRu4<c[UOprNFISI9p-8:1l=_>>[V8Zc*1-E(njeXnqtK@?[\rC<9i2Y%ac\(#goHJ9r29L'gaa7'gaaV?OY=1(AU7I'ga`k%:^k`"(AV"K:ok5&8_#rL8IDO1U/A!'U.HN4mMAtK7&*j-7$GX0&<1-rBSBd@\/:r3P@B>;YpcstL15iJ9rd?$?;t<d&<1.BLaH*I%Z1#:.B#SFMa0fD6JF"*^YUE*qjqV>^_!DmI0Js0EQsYZs!5g9#MqKg'28gJS>ee'Rj,7_ca(Rde1bfobFGr\n.#BMkR2Cok3^t>r%P^4+'9oMOq5B7-*a(Q;_7asu)_#-a3$t)+c_cR7K1p5)FN(1&(#pjY`&SmdA&Buj3MQMM9';6#^O-9Xo&K8Z^A1B#^osQJ,*MHn8%[AhN6D5JO7K#O<oZ+rb@"Odr$_:01Cq?B8"Tb0t@BEb7X1lSCl'h&9A3,X<3#Rt8u,gd<nNmJ%I#BC8XN=&C57PGjV&I^0L"\VRC%7PK_H#\8?\Sn_)B[2P-qiM8B\&K8Z^@*1[Y2%^bCi\7g.B-K0akm38V0tfTRZk1d(Rg>!]3^P'YNmKJWVKn2+@!2kd0HHiq9MP,K%.'T,"cj1E-TuA2hTb0sgBEX5,a'u<1cj6Kn1kOrt%:`3kQ+Am&&K8K-KSD3=c1:uU;1qE3=JeTB^1.4$K'<8p@'Q!I(Ab0?cj3)A%RQM/m(^4S4o@34u"\&M2aXBElR6T[8DLkZ87^BsT6HK9LTTMpm2[V*UAKmmqa6<S`A/(]!Muki+WCDS?=NMsV,8gYu3.n61[(n(T%,?]W+g3N+(kU/DV,8oTG$C(>"6n&:Q,Z5(3[2B-](^j<<MVS?/!0(M'T]$;C:K1^9TTLc36Ap+M5U2\CF7:(M5Y:01jQl;o5cQ?B%&HueaK&WcZ7MM:'La"V`WQ(0[\cY23QP#%j1(6T4.O.b\q;,73#;Gc[#Sua!N+D5A(K_l>6c&i'VICKAM\ZSN1*!9MSa3.2US(:e%*!D4P15ppI%a%>>ra14&8Jk+_lCa)HlLkr0"_I7FYV9$t4"S[CN.NgJ;,E!'.%3a9N.NgJ;,ASiljL]ra(,;[UVoV9O^TZf!?$I*%f_6pbiL%9V1(9oi%h#]iUMu0&'TV-G[AG&^"h;?%*[;9:@lR(/*[=OLKVAMc(r]uE96E?dZ7pDh]eqL$a"S8p_,OTG'T^B%]R`pB%L,7AM0GuUK?jB0k(s+0I_jRF_0mRn*YfOY<rQH8^N8cR^q)TQA=bHlCaXA4J)&,ib^<J&I,?Yr;a/Ss+Gb3/.*[;QA@lTBg4@V(`%lRjmfl5>I.*[;8_]^RR-f'sU&&o*dLUNh`.BnQZe);FLs_!0:8R:cGpril`<)-\)%o6,+I5s]Qb-5fe@,WJB2cm[,^iBJKjf`fn8%]Jm5&ViCg+o?9HeJPdTbbeQhE5W4GB1F!c_AiMT<)/.gp5]Y20AE9/pC(/G`A&pGN).h8f7\1K&aU1j:OEkF`UM;0ua>:`%n]X7R%!UJ:[1W,@KbXb-n)<dmEUm#S+(c%BpJOhNuAMt.GIr`X>B1=X$)+eEcUJ`IA\25NJ,FO[Q,VtT\W=ro611M(s\R\18#Y+h6)9IhJ%,aj5V>Y#(ZOr;Q(A4A>;bXb3d)-g<>a:Vl,1Qml27P^.NE+U@O:`]gh$CAt-L@J6'N+>C5P0?HdOr:3)dtSUtQk>,g1BN\IL*7e/%&W$??!E<joqEaP9iQV(.,U:'_AE9*9bkP`p6beT-<&),r8&d2,)>Rhh,JOY"`\55G<gd;a1@iV-B)FEIO^CR5o#i_Qq.5rd.eChS%7Xc6#N*f&[_#@@$Qf6$\AL&M8%.e%AIMpFi?UcgAb=G*O):"1J7PaPX84J%GB%G-&16Rc,7PaPXE2NRh&n)V\,4`orB)FF.^QnV+%,U:&4B>uSL)>Rhh,JOY"`\/PSq.1fr^J+(`b5F)YO^CR5o#l!LrA"uhO\NnM_jU&<84J%GaiH-!S%s'ZN+D"9Oc92nS/K)#AE9)>%N;PH$)8D,@jHl!fr%bfO/G%%U7"-#qa=kH!n]OHmIMp8K0>j4Jb=G*S)9KrR_jOBGjArSA0d@Q-Af*=i)2Um?,8kc=3&@9HaXE!8%1/cA9Am@-TO_dKBZH_Gto%Z,J);/UI,MNW>`\o%Zfk)L&XGKAXRurMIBI"hW$tmR<,8o0H,U;%PB>uin:Dn3-N+?IgiQTqd,U;'&%A7V1gbh-MQUDt2od.tM>Z->g-[Md3.2T(rfbt(<H:ALtL\'8l(Cbq6:D+6:dc#@921QkTNNFZRhiQTqd,X^=F6qM,6V/8"$;3@&Q%<91ucZ-D?<K%r7/);/U]1U\1C."t,GZH[?#Cbq6:D+6:dc#@921Ql13P=1er_GFj6Oc4*4P*'U91Llo:N07lF?qd_miQV(/,U;9,%A7V4hbU@*LUG=4=W6C)SA"A`5.O+H/E+[$EP#2^KA>GgUbd_:2,Pd:/A=qi)k[u09.OW?:asiCFjTZXFYQdE<EmSc;,W(\C;P6FR%Tj]M$cq$VE)TbN;_jSp!84FL9aXE"#1S^Y+N9ZoY,7P)p7RJC<`HMJ0%1Qr>6R*HPAshs=e'N&G1c1@m?q)ooU#@QN)B-^A.o`!R%BK.dd)TaB],8k3/37AcaM(gR"OjVNH7N*2e-o/\BVP0-21c1@mCkaa@Tok9j1m1^PL,5TuOc8RqR'\Qrcu>j>1_Sc:6m@T6E+Cd^%P*(Jg15a:pAi)?-ObQ=\da2rF1c1@mOcs=OU#F4/BI"f3NF\iYiCn$#,XMs"6r`6cRF0AP7N*2e8419sVP0-2MOYq:%1Qr>6R*I_%BQA`8At`YS88&,M#E:uJi5C^8cj2r>)M,so_iW9l#XkL`!g.kb+lf.+Lt"3^Oa2[),G#L']JBUd9bTn63[52-B*9FA$q"2Y,7%:+%#t2WJL5^%?+O\L?7(/L'A[32)a>G1RPqk()9JZa4BLX-8bV5hM1JDDKBkAV8bm\5S1F!cOAgAVG$ti$c,8k3-,blh9cAZ@)1=FB;%7[b4?N+PO7b)qf;[]W_JAgASFN+A`PiQPtI,U:QmA5pLcRF05L7[b4:82J.cVO<R*Eb$F?bm\5S1F!cOAgBag$qFJW,8$1p8Ob""%S/KS1A>GWUN&3>\)9n+NPT_7hBkB=\RMf]Vbqq5>O_0>(UR@5Q9:-ts/-fsfR?<Fb1Qml4L,5TmO\D[o#Y(7#cAZ@)1=FB;7[b47%1<kbg<5Tt!eM(uT1c(;Kp?AqrL*NI]O\D[p#Y(7#cAZ@)1=FB;7[b4?N+PO7WaM!K.[W1ORMj4<1F!cOAiMT8)9F:47Ng.'E+Up_%OqhNBR:_2[Ul[6nCM"ie+stToAk'(Xlo3D;j=Jp,84ND1OsR&piQPtI,h'J7_6iZt0r(/YF,P(`N+A/._jSor87qaJF3P,+6,E;b%CM"h:bm\5g1F&$YqoprR*,3ZV7&665N07d41R]3'_SVp!RMjD0Ak"OJRZWOc1Ro?-N+CZ</!uY%jt,!*84K$caXCkX1S^A#9WNXH%USJdQN+PO78t(m$MO6@ZRMj5S!*Cpl!+sGgAgAT+YX%n@D_s6_OT\c/b*h54BP&NbS/KGIL5@^]R?<Fb1QlG[0OmR.,FPt?$V!!I%S/KS1A5pGl):^DqQ>'qVUDbK$W.p-bUR@7'1c(;/%5;9]1F&==!"27R9Um!FN+>o*,T5,dEMbTL&n)([7p7\n&X>%A7[b4?N+PO7%.UeK6>C[SIRMj4<1F!d&0QC\]1QlG[Y[CGI`0o#s84Fn!=\`gORE8;QR1Y8?QNY_Li#EWPN'P,LHfohqL5]G.+RT3jL^KIc12[t\%W,,$J1<VAI`A3&?EG,q9rlpS1ap:C5)1e_qM'8XY&P,!53MLO?L5\nt+=^D)LhngT)4?FK<2h,S79UN`-5hA*,U3k#.HMu,a9Y2-%(4iDPM':o@&VpdY"<rI,6Ui1C&61(a7%kBNN'0WQb`<B)IV,@8&VT-p!`<)56cL&i&/?Jt7+N30N&4!HW^mbYi[bKU@uNZPN[,09%,;E_N0`hO0PEEsr(c&62JZ',O+>Ups-kjQ*6rcbZ;1O?D@u1eR8rs1M$7(@b,"<]4XU%>V7gs)rN$+K*-OAC6(c$+KJZ/33+H!0Q%ABZ_/l+/+"FP0NON#"l*?$+#IXuXXeEP`!W.ulS5,7Hq/#U9la;Zrgs$:Df;,ET&ci^fCSALLKn#c%if37;q=3AMWmJTR.h7q@0Z%a@K\A$KU5c'JPJZ",n@e]-<=h0?TF)^BgV[-QMC)U)Y'FMa4kZLa+[i0P&*T!pQ'Y7lk1DUY%1Lb,$`m=_1%4njO\%X=+n!0P#Pa%!a0)'\a:\5RI!?b*@]r<#>0#I9J6J3/Wi"bjOhIc?3CQ:qj9e.YfuV]OKKqi8/Ds$a9Z)Td\.85FCZXe`pP%4Nf.kP_]h)rC);Ff%\T(=rG%&I:>m-l/,(Z\CL`n!c&Vur0!pOAhNf;@S+<:jK8;BMePj)EUdX_siW-X7Cm;`daZqdbu/rXJ+M]h)#&P,DWEb$^R!a3,U%jUN)]N5C9C(,CT%A5k>&=]gW3A-s-pW+:^jW#5KS'J>O`U*#f?7C#8P,?)*kAeZk\'que<_M,>')#_Mi/s9)R&7_-F75@cN87mAE%7c>PR*WF+o/t<f5Me%P28#C7abV+]8151WsL%%U0E06(n/s6sd+.9u7Z9n=2;n-dY'J>O`_B52_KsS9+rl>d+OqkhURDMBJ;Rf7u%#_-@l(Wd$CO%eMqZWuH5R2,bC'J:$OnW-r6_O4J]J)gqQa[kC-R9tc"j9c^Fm.a)RE06(n/s=oXO'LWfR>udXKs@&_KeoKCO\CNq%"=&U.B1Ci()(Af9dpWg-N5A"=;Rf8p,9`!`Ko9J&(*XSE>So7((Q!P*>L<co:5m%Y1/bVQV?8$$)23uZUi;Gia$^b#$5^g+<(&E<%\8Z$o/s>J7Lg[#tiQN]T,U8#$A3)]eQr1@a7LBsRFF8`rUMsXqeZMcZ84Eq&cA]V/1('187LBsWN5A#h5]1p`'J>=]Ko8?pE06)g%-(Gj,Me!MROc0u,S/I$=A/$_[N"dn7)23uZ'Jkl1JgR!*Ko9JbH:k>ZiQN]T,brFP?IbVb>So3t(P*uT+qX!C(c(e#JLGO_&4K>2%1?oX+FB/`='KKSmHWpWhaGD%E82JDb/HSf-7%dZEJ`XleJLGKS.f2#1$YMr],+21q&WD;hS/GanA/%4iN.`dQ).AG6,]&U%KIr]3%@>eY17$3G&.%D/`Me"jh,o7A._A:FUYXL;SV+=(m(=%lC75E"V'F9CE*,/i>6mQT2N$9a1A\o5).&OjT$^n5Q1F$^uN5@'-Og'Nq%,A`L$KIr@LZ%Y!/Cls[H/^3^G8R"/1eeZ@U^*4Eu=?&+r(<IuC+rS@%3&Bt<a[k:*C_N5LKejrlOc8?QOsREb,*TK,KWSH&%(7j2%74)r8N5@00;7qUf9\ps2a]g#8GmffmAF^MX8DYO.79ql/neT=qm_ZULRCn50,B&^'68+L!lm4<LbO$mEOhO7>$GUOl">4so@;^%H%N$9sG)23uZ'SFM#/TZURB1Ci()9-+Ub0iuB_N@m/843fO]SJII\8Z$o/pT0jY&KM^_D.!\$CAE$3EN^]7e)kY$p.P#j@/(=_F65;%a5f\U\\^cj;RkfLoXVgbX6e.A/cq0N73DrW0P'f-r;9%A+rTWL3&CCHaX@oL)9$&E1\qm/8DbU/II.GWI>^K)9=#2K@Q61?(<Is?%,8o`ME`QQ)no%F8FFq]SF$l2#kY%kLC$FE23qo2j1S\`:e_UFpnX6N`Qj;.I9\0?ha^I`/';K>o[:t#ORB@j/qQ6][kuqKb3st#X%PNc7ifc2)rbgliRlN(PI0j>$geAo9`%W*f50\r#I=s+O[,N6kt!a,]H/n&QJR!\nqXj#@JBaYIoc##%_e2n[8RC9L+==9IQKXMZ?%Vbm!N:8VfXZjV#1FI`'45Rn%5^6u2/(d:qnfE,b2Z0.9C7LNFNWA.Z5ab27-M@uehhoUO'R)T1[%jl+DF;J3&@_rmOT1RQq[$(f#%0[1s;l'f#a"VPp?aA4jbYQaWC4T4Z0YQ`I'E%\t[/\o#$qe<FA"]C6;bi+/!.=fp[Pr(5Lf7KDa#rO0lCB<S_gT>TMQn0!#l&;bK%QlD,^a66\T+cB*.F=k:-o>*Y,F=imP'iNL:\e\[k'V",*G"R$k.G7+rXp#YQWA@`dVQN4E2m]mlF32Ilkuo2E0(uY37/L.AM9_r%%AqVatCDR3cr=*U[_)/jH1CTO#ONsc$!/@2Q"dff\hb;]9?n$NjFY[M90T;/KAIG=\dR.c6/\hFDal^_]5`SA2+K]I2A4SR9&]tks%=M;M7/XV2/;Bn!?(/3;4qJ2sEJY^R.?3O$U!mD/fTkqQ`;29HMUMKrHK_g.5AIC0sjqLMB!XYn>2$%3'$.&YaFY[A5,fH^LB\LR]%/\la96=dqK8@__@Lte=*>6(?$,o<ui1*)/_[QpRjRR!dA9\9Ej9hAi)KIr9Z*:"AJKIstn[`=%QR'>r+SMe8"9Pb1_qR]q`!mK3@%PS(>hU3%AEL7tgT(rf^HYQ^2pdnkNm>1eEugCQS[_A6O^qEpgaYQ]'_0oVG,>6+KK$Q<@[A=6r).eC&U2S-*,G3s&Gk!o3b`oLod%lur#`0OG2Allhb""VU%J<.>2@CB53]e@c`,$RXs#a3jZc0QB>,?bH*?!"7eJHlLek!mH3hl!!LjJV&G4_M9H/[/ff.FAs,b$e-Gt%k&fg&!MUoaL7k^RQks0)T(uQ_&-<7>CUpVP=9*9X>4-1B\r)TTl]&(OlRuL=,Lj+$$6jl=10k9RF1;h\=flIjZB$EaIobl=J72/g%/_@BqBaKeIC:UJN(^Al5\ZQ)Q/r%kr>mln(UbV97X`Z3Z/hohaTWJBZkNfHg>Dl9-Q?5$%CB52?;4nf\>-KP*ac8_m$^U6,qU91`%$S_5X8Mrk>$^LmkEM=?)>-MfK_VhiWejAIeWA1oUXTcn0P"6g^[:$D*DA6:*!_@OBRB2+"T<p=@b?D,@b'3A/(g.6NO?13Oeq,b\%o`!*G/QeGVig4+Z/V$162[itD=Qr7m^!,#Y'k(ijMbL`dJDp'=/U+T&6U=$jGI9[^R[SD^=@Bc)J>lscW#<0MJDp:.QFg=n!\TIB%3Zkn9!3+g1cj3QWJGG=L[/e*Zlrrgl_.(&BrsA(-!JYOK>4-.Ag-1kY#-N-W?j0q/U(18:>-LmYVYfaq<sp^HXOM8l$WJ/o^AdE*%X2W,L&,jn_Ws+k394k=BW-CuVI64g:"dka(`L;?4!t^KECRM4,&<9P$\Z5mL0>go%>-LIPMM8)7CH5ni6B%rKC-Ij"1WNq/&25qa%e8eUu0JB7SZ]2$)a+6;^"u96f0K$M;ldN!P?oX1GjfTB#APGL4*4f=Xj>EXCCKrGn)6<WGm:l[_7V%8%XqmtA9g`Zig=66qotQVY%==FBspJQ&L<XJkK?$bRkWs,MO'8JV8j(cE)i5F.OHYbr^VFF7[>+iYjeOC[VC&o*<5G;(/=I\Y:o_Gnp"\Y4mI4qt-`Q*?\HKL3e%"W4XW,AI7R?E&Kf:aZCReS4(_"A(.HD@MM6[9V2_bf:#`k%OjLI8DNi[.kJ%E/84($a>`*LRG%DQlcKdTr/']ldNm0SeeCb:ZtMd%4>"?&Am!5>/Qen<Or6Z'>+iMk%7A%;9F+;J?2_mPV?L'5;k#J0(1<__B!nK>b3X-1>0AcT^eAr_1bD\#O!Cl&dfR_sP=R:WZp;T[%P,(Fn!\C(.<MjIr><kgL$_qD:k5)((["*Q)T<)5!B`Y(X?bU,3p-NgdSBs-/9a`Z,o-2GPOoRlUfVR,=9ae2HTf9%"[%Kc0cl\6(%/SJ<Y6;>hT!^_X[UK_Lb/\ojt='/XVH)We4,q\>.n>HFCOqr.,K_3\KOqqGfrX7H-Jm&KGgl8$3m1Y=,'J2MGp<kA3-sD.0*5.Xg%>0q4SrOk+r!--i5*/0+_n7<ko9%TpL/\o5b3]:J]!N)`*JS&S/!J\d,[G9+1l43cI14g8`K?2R/N1^=k.KsRtTEU]sG"0g[%M:j@%bQKN5@YZ![,A7+T-?4cK/-_K>a1+Uc!^;f)9":Mt'dmbaW=aem!1BO8&[_<MQD\r'&[\3"-)PRr#[5$PK%#KY/nfh9#\%fi(dSQ/%LDu`C0G];Ui6iu/Jeg=c''eMaTZ+r_Lf=X`n=o.G(dAC7],nL"57;j,eU8<J$\i,@`RI1f4U[>oUpl<6ZN*mEW^%eb_r/#(7m'8e%!Y!,\[9V#Z9T:\MbqK]]GL!)uRF/>@F7l(XH5=$VR#tXsodn`V&q+n+c[r9TI"]Mb!m$=pNL^4i`f"TBSHTt4*^go.MiWd"fl:\<%_)AG\"j'nt:dEF<=l@t(K%(cnPsY6S`ROi(2[_;sJk\'h2[_=+CmIQ8JraV<K0Z2D!LD*V5?"o8'5e:I1CG<_V8O<ibUgP7cQEq.%?l'HoL7t"==<,e_aJ`6h/>7nW68],n1W(qb(1;B7/X*M+s-?K/+LAC^2ji%?_<>%+]C`)72LZEL\.Drh"YJBW`i_#&!/hNUS;j6H%HYIf6)at.-^t"dG*A,p[qt-s/8IN0:'(``hdXnY1rEL:9$a:c$VAno:TiXs%(lDLE>b0:b/LFC(^8CN=8hV;/bH>L]?rS_n9ZM$U%/\oSXf#V$FWJP;e)0W.Y*?&XH\e\]K+19nU!_gW\11:PE2l:Sb0t-$;4Jo*m;76I_A"#n,B+$EdrY<is?u!\hF=c(L6'=N-;fuSe%_;U.E'AD1"@lW<WeeVZUQ"$gH^s'a>=Bg/HJtR:!X=ZCO$ME<'eeVX1<ib?5(;[Ac"^'udL7u!YR'3Eu`nCL<N)5J@"\3NL`\9Ws%a!*q:nB'Ac"Oeo:RC*3RLbT>\N3rhV'1lsIN%U<UL1A6W!\DcP$=doRAtB'6D8?gc6fW/rD6Xp]>B'5(:qp\F/\pA%g9%Wgi5dpO%[tV)q!:qX=S69'Hl%uU+[_Uf`8a,+hdM@a,E!T8SdYgCa>C9Z[TaNd,(7YsrOc[$0`.90W>1isF[Fd`#<4:_D6b`\]Z:-ILCr+ds%8rnL"[K+2FF=gS&^cX!<-eT>@E&s63`6B-'/;D.[@(m]<)Ij./f@O@9)-^JaL9(0Ybh+,$2RWV'o]'+mC]S/%KJBn8e%7,A`YP'i%lHcYf/J=b\"]2"):r_)g/C<u-j(lK!WCsp`n[3=JHn@=YNMN`]=A0+_RBHd]3X:*hj(ko%W))T%e1k]F$d?+\a$WDp=tGF(0u,Jg%[$LSmJ=4fUn[7:Chi3;m`FA%HJKOtg3GQ+."W18ef5b5V`NTaW=:ihuhY:9)R5'cm[9*ic/J-RM*._;]CB53u,*h]+=9s=,^]I%&%>(F/0G[PnN(8DEL`+!EF@WX2PE7S18FY+BHYU;,0`2r(3(1<L2>K_.@(;gOu$m.L^c"+C$Md_>KL7Z%[kZTZ,'k7'cF=e9'+H1:m%e8eh&0\sET\e^3tXp%qcq7^I.+X<B*[/b7spn$_R-m7\"RULr0?s;06_7UUTAsog@@]4(Y5[^TV)sLN+l'3coCU"Gj82-l(V%6&,%((6h="^'^Cdurs!"Ojpt$t`Da+Od`+d$&)1RBAt4X_Yb'BrF82f!STgFY1DA&DpBRY/OiaLN,Zg.F`BD$YMr\!_as^A@`OaIY_LK%9\1JUf!PL!.&rm'=tGCg1-R>7il<a](5X_6"qW*hf5b#P?s;-5;/Y+N,a5W<N5@9YbY-ibOgS:"__;X,GAqe@A1[kFX9HN4WP7;P%JhRgGL($QD.J/hG=tGCG1:S5f>KLE](;[AZ"dheG_+`Eh0oElY=F*KPX(<juUHf5=@&3FJ)Hhu+>1Nc!Mf9f,a]^6M*J]^#"2=ot%C68d;Q$dCM3:tHp/V7\:$S[W2k*`6g@MF[X9WM?ECuhrdZr+55$j5QS4s2iCb#Br._ce?.+"hqVAuZW_8C[e-<N1bWI\UWiLf>sV%_DmE1_UUZ)TrLO8X_Ilk4a8P[[9/@h0sKr/:t%>&(5nld"W4DFe8eQI?s;)i0oEob$=Fi"RUJHK0Wf*+eO,eoB;u`*TrWl',AY-G%a9]hoRB=G;'TIZd9F'U:RBOS=-uAE.'*5$/RB]17X_b6ZKju68+kGi*dMB[+[0;rXkj-^O(5q-B82([c_"'+$$+8"4@Nc*"E2MGC%^b@LLQHNJ`L;ccpqFo:q9]';6MTA>C`CdqMR2LD\#?[jV9AhE4bqj^)?s;Gs0e?8?-$A%(NPIt:D/c`s.U7N"!OZe)E8f#3>V&A7%(`;YeI\W=N754+K!N+?-16IL6d,ZC<<k2U%6C<"d@@<:t-m6Eq[^fdp"%D+,cG`,T77cY%A'PD+iA.0d`NW$-0]R8+g_>XGj\co:%aQgX1dCR+af#O_(mWFYN`%IPtZO>iPGeQXHV'HTe.5>AW/s(J?KW\odUEg`--uik[/hiMc6;KD;;3Hn1/rX@j(RQ(.3*OW309VIV%KeoKKJHQt8gWgfmP#81kB?'M*`gC1;A!Rp^W)e`uD0^\h&I"a]c&5!NH/Zu'?6l:t,tLS$D;90^$YRKP+rSo^6(1W%OcA/i_O8fb%84GI0PYU:R7Q!i/)<6Wc<3mhf3F<n+Mlt>R?T94h$R[3IJQd"bY/uYVP#8WMA5o\L==/HI=Z)2Q1[0f_<3*s!OhRX@0@ZB]73Ic-%0P$t4!ho5i18Y,A[M\<<7p>d6&U@_+nLg[^AgVucba;`_UG=.;W([M\qrfqLmMCGQ84aqE^G'3R0,Q_>6Hr(#+rT'@3&CCIaiOJ`%.>pC0lZ3(8B>sor)3lU9"Gh*rEX*"c7KOePPpf3n,ta8E)<,slmX^LZ6njdd$&172Jk=DWrKXp$,f:6@NjK6b+tQTCN7-(628TtP%Nf4N=1+H.aN(T<WBG]TY7IGhkN2/.jOVNU,UP29]D0h1e@3hT\--hGe7PZGjP)N"t+@bV\cXGlgP#7(!A5o;ARIS0[&ft'5jFS5j%W'lIuUPP%k*&/"QV2csF`8i=f`!Ad(8HMb7&jt@b"+h5JVLV,K,7t\=EMPHH&s4OG1TrT(`CZR;;iG7_MNNjTP;kA((l3D5eBqp7%(s/^9M)-B7Oc50]i5BrkONCrk1U7k>8/<Ef'dn!5A202=:5)r`/4MCp:ZBU>@O.]M--8[n")A>Xc&4A\N+>n\,T.=F0p]pj,U6G#%gut!"J4:<lOd<sWKI-(";1T?m7MZ(@#l8hhA2070/;>r*Miis/0p7YM"r;V81nDg!,U6HNA0d)lbfF6=,?YGV5P[.-b%*5s)-Mo/%,`@eDA20Sl=U[Lj1^D060p7YML,1'4Oc3g*P*%:"MGko*-^VeC7^<lQ8/@Dq>S\P%b$m?YZ5B[5_%:<5Miis/0q9+aN+=2lOc3g*%YZaUu'tGkb16TUI7^<lVN%@FRP/Ts]Z5?\<NN#r7PJp'^Z5C\S(;lQ&`CNJ((g,Fe*6qe)_jQY+84Km%a[d2bR?>HZ7^<kUc/SS=%mYYGoW+#lR;iEseMTM"N`!Cr.89k)315sW!E+1XYP*%(\1=F*[Ai)6*OX:8JlRAAPf>MW?1bk/U-:Tc=`,K<F0p7YG"pRkf1mVod%3&@!?a[d'i)/3P>1R]0&8/!3cBjtJc(Z;e[f>L3LRMa.;'>p6c`(3@d(s,;^!sokX\MZ-:N+AlDOXQO6BOW529oNVYM2ALM":JBh%9oNTsJ!#[H0q9+UN+<WPOc2+OS/G$0jL^)E@2+6SN$9sG),6'#'S;I+684oI9oNTsJr0.&<b%^<cAX/@1((ig7]I<NN%7@Q$Gf8&%+W.;i`V=Y[Miis-0To9EL,3\*OU.^9&tq+9ThH@,1I910c`JpbOZ%qMj,K1[JhW?b&;DtcNff9P0JIjMeD"4J_jM+W84Gl^a[dDh%R1[J17cG9,80#O8&]\9cR\p`d@K`Dj$q&#Q,7qh&"JRja6Uhq<&B/(PR$PU(bS\6c0ucb=`YaQZ(rMIo`^iM;(s+0?_cUN0JQR^M%Ga_JX7PY=iE+Y%`P#3o&1,?jgArJI-OYK<\1<*^bUM!7S'TS<7N%pJm3/05!N00(90p5BnL,3=uOc7.3:k%A=!K/\PE+Y%`P*%Ig%1,?jgArJI-OYK<\%**=_NA2'"qVka0c-2,$*#W7FA/(&dN5@<.A]>S/a;?->).PW^`Yd'>,T.h:N+<W_iQN-K,bo=;A/('_bSXh8%UMu0&'TV.r(h4\-)JE'/0ucaRi>Bk!0h*oR`^iSh(s\'p7P]kB84Fa?cAXI^bUL+^2oZ\k0IXi$2TA9U`YcfG.)VH-`^iS=(s+0S%_cUN0_5qTO)Ik%fTF>JQ(aBn%AL+%D$tmQs,8hA/,bq"@B1<a`R<HTGo^\r#BaeLk)C$+'AL&L9$tmQu,8gYr,bq"@B>ti7)-LJ-%VRgKA)1M5uBkrYqBT8.1Jhii6CQ)d<P`^p+0fc:QNTo4C9?Ti:@n'*!Y.JiU^JCD1l;*F@+3r3Ih4EGF%ai%ODpB/:cd)PlrEINA%7lR(.*r]`dGR%Q[RpWGss3<["cG';'+5:>%;6LfRDEp?Z!f:se*tGBZ3`)1N@1T9=V+*T]Sc<27gp9dqPEX@@VG4r0;t?4p`BNKt%.j*8hjb(/0dQZU,RMl;-EHB,aYbCt>BC(U"gA-eWkUa2qI;$XQLX%=FcoHI-LJIjoT/hh9Z-UW2qofphT/gP&qohXtT=Oc]a7W4,%`cJ]X4B^1RF+pfhWst&A]'=*kn"p2GH443QJCc=Dq<Y?P4Woc$rkem]ff]1^h`$>EShs'FD_;.ORq%68DcM6so,mD.fAjKW\[nu?%%r-.s(5MYgHufl)oZb@dIH?7GD2o^;cXnH*g"CDH.mI6e=FN/WUct8&4D&6LQ&kiZq-j*PplYDhQpd17q:Q1<B?Lh/cc2$qB/:3b%ltlJkKqBq]/3b(<;P22:bHeJ9d5-6[r36*8r((le^&!h_/R+5HB?LcpB4FH#?:cemAnT<=55En&_cX+\Nhj!m,rat&X9OHNN?+=U%9cU.YAr:rAZfT`Or+u1;q:YP*qJ=/pOI[uT+7QVuLZN1/8*[DunORi3gdK$*Q62EbN?>.G#1>RE>%D8%5b9Pl/3b(<d[X$)Pk).l%<[DaolnET@G,.;@k*C_fHS[pY/O(dN)aDdCjkud%o,]=_ib[s8esE]fS*t7P0Gr(\S8[eI]hB*^a+\Z5FnMV]Kpc4TmaoltTYW$A%-r&Uu/pi!`d)*n2+-![IZIakgchN!>3sM;LPT@-3F8"A<_q->n&0p[$6G7a*iR7cqT-5'IJAH9U2)11d6E2/=FV++R&64IPM=)79%MFS)/d;OVg6VYc:JVND-rKo#Jh-r-Q)JTt\V\11^:g^=Bg,:)r</n9l@738oONRT?mqR4([Xmp$n:/e$"3l?=IZrl$T3NYZN4I,4%XB>?k:_P-0+Nf8:G0>>_q&H@MMPj,K7YfahTh'<hFn\!2WT0+bX@65BJea!(Ln<i4S?gUtN+Ri$#3pARTI-?>7)BqFNEiG8!EmMX%%,4Sn#`pg)c-DX`ZA3J/eQkNlh[$iV.\/<gbN,`&h1t9H9OEXk+8r@#![!'m+/QE<nGn"YNT7?f;-rUlbM>?XMFZ@V`j'WD2gH:R%5pHfhH+@-l]B$3>n(so&rVkqI[^'oN^&7V80POXA$W2sCU5(L\k4C7#@R>_V$UE&nL:"l?O/];0"5+ZJ3b_1".b$pCWWS3JM^9[k%cA2hW(o98PW_Olf!3gbfC\$XeqJ\a/5aE,+,$!qA16hB^CfOh3Z[slK3LMKM)(L,fG-YAp_ARniM%jfI#A`/RnD[=\Ah6sn.;")L%:b=3/>35LR[eH#D#%Nre6dbK[AG0J45rNYj[G0I9S+fs1F3jfiR[`-a-@ae$XM-+C]A:cEOnHE3m^8u`kFB\mBJch2rh6WdP7>'2%dA[a382SR*K>6eS&&b/Z'BrV](M&thMSWV]eTGrCgLN?Gj9M*-Tn<*-p%X_<E#W?!<TF1K>s*`/!dI5*K?Z@jbu_rj+qMc]iXq.H%e3AWNib#j.MG32j]HG\A,Ab-$GN`\5B"ZcN9=K6FTX#"s0^a8UOL^;'pAJ2`3n3-mN@#R[$uu.($shB,LoFh2Yp)ER2"6=[!?,_^%RB^8H(7U=AGsS?BW#-B+@`E@,mP^Pp'mW(,OH;i\'DAcMH!JRenVURenpo"<TP$Yd]2>,X%K83QVIN%9OP-m;%$*5Li@kIZ_kh-3%*`1Ot;_SZZVkFR:h/;AX2'%7n&-'kuB0A2Ge2o5TTB-M$a&;F09L3*C!*,0bNg:'$Zu(gO't1j)4OR<n4AI=T'(oUg2->>WpVHaf%:o;5"YOht(S:q*Jcq636p7KfY]fD.W4s/54CO-ZoPWm+PU4XZOXK/%94:TTmme9lRjrl/dEG3X8nm/e!19"@(HRdpIi9Yl\aGXt[%ip-72OHuO23Gd^(4nhgERoC;`oK(5CP`s8hO>g%q$K`/@jm?o2>rK3n?e!^eq4ULQlSQ=Has>hK`:&kE':YT:5L\pO:gs?rp"E+$%jnV(N_F\:a(X)"@eGN=&&fW7dJU/Y?32^m2.'\=c'ZcU''K79TD9`rkQnf+;+JX<3PZaaJHF++BmNA!PZg,-d9$8Vq0VbKAF6!X)%]d-RI=#)6G7l&VGP&,kI5ERLK)MK'*$q//sTlMR?/?ED]i':?<CgR&U=^Y2R"mc"@#&cAUKel\bQ)_\D'4*(;Z'Ks`ZRk7(j\'-5%_'7Tu;;W,!s&<5Q>ZEQNIeKl5/,S_5XCF?nO/@pd)[;.m-t,MjAI=\36ZG1uG,VON8/B>1JMKgEWm6![Te\h0Kul*OZY$FJ$X^SD%9fCC;6h2a.FU89eD+!t)]F^=aUGLS"g^LLa9OG8,S*WG<p[`oo[Y_m(e>9fLL+V^6UGu%l57FkCSZB21nCC<PWJcchBX\,P$40b]%<kN[%MtpU^:>6i<6XJ$'eQl&9"\e,#61"L%'?IBD)boc,:V`<2AG4,L*E0t%`7>ljotK%udIcG9"P_:9I)E&*`;so+kus8mF;fmk%iLbV#?fHSTF?8"6!M*L``Gj/FlI%]N%@uoEq*CoeW*m>[4\k/_i!,a420hH"(Q`#EKH>W6p$6IMUXe!;CO17e/O4pXXnmf6(3%8p%drZWsP6Z2Q!=?atm2I?,^_o)?U=6e&5Njp($-&b/)dkJ;R1VcD:</g9T[O#hR))U+Ck;]5%'CL0?#0"`:'6Rp*nIU9Ri+:?D:.TM%P8A>0L5LNo0lEB!!B9mN\!gWpc9^uWN"6^[@6cG/d5Xb$28),C(8,;.>-/?4`eK@SNfmmH?I3C).Y\2-XlpW-]M5;>9eT;?AZ0"*%;,;6P"Pa:03S*g`nLX]nC'#:M.+$I"Q']t?gZB>M&p::RT0(*dp&E/`kiK0q$<jmss2#KBF*!u,_Ec*[U^n\u\:$FWY;]m;RGVhE%a0[fh*KA+S,^8Kk7C(+b@WZfb^8=2ZkPI"`dg(.F\1?![<0@H@qu%UuaIcFuO2mSg5E*;WlbD'@~>%AI9_PrivateDataEnd
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: incfish.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Lisa Tauxe
%%CreationDate: 1/8/09
%%BoundingBox: 0 0 200 200
%%HiResBoundingBox: 0 0 199.7198 199.7247
%%CropBox: 0 0 199.7198 199.7247
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 128 8%%BeginData: 8980 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD35FFA87D7D7DFD065227FD08527D7DA8A8FD64FF7D7D52522752%7D7D7DFFA8FD04FF7D7DFFFFFFA8FFA8A87D7D2727527D7DA8A8FD5CFF7D%7D52527DA8FFA87DFD09FFA8FD0AFF7D7DFFA87D525252A8A8FD55FFA87D%52277D7DFD05FFA8A8FD08FFA8FD0BFFA8FD05FFA8A85252527DA8FD50FF%A87D2727A8FD28FFA8275252A8FD4CFF7D27527DFF52FD29FFA852FFA852%527DFD48FF7D5252A8FD32FFA87D277DFD44FF7D2752A8FD37FF52527DFD%40FF7D5252FD3BFFA87D27A8FD3DFF525227FD3DFFA8272752A8FD39FF7D%27A8FFA87DFD3CFFA8A8FF7D527DFD36FFA85252FD45FFA85252FD34FF7D%527DFD48FFA827A8FD31FF5252A8FD4AFFA8277DFD2FFF527DFD4EFF5252%FD2DFF2727A8FD4FFFF827A8FD2AFF27A87DA8FD4EFF7DA8A852A8FD27FF%A827A8FD54FFA827A8FD25FFA827FD57FFA827A8FD23FFA827A8FD1CFF7D%FD3BFFA8277DFD22FF27FD1DFF525227FD3BFFA852A8FD20FF27A8FD1CFF%527DFF7D52FD3BFF7D27A8FD1EFF27A8FD1DFFA852FF527DFD3CFF7D52FD%1DFF52277DFD1EFF7D277DFD3DFF7DF852FD1BFF7D7DFFA8FD5EFF7DFF52%7DFD19FF7D52FD64FF27A8FD18FF52A8FD65FF27FD17FF527DFD39FF7D52%52A8FD29FF7D52FD15FFA852FD39FFA852A8A852FD2AFF527DFD14FF27FD%3AFFA827FFA852FD2AFFA827A8FD12FF527DFD3BFF7D27527DFD2BFF7D52%FD11FF7D52FD3DFFA8A8FD2DFF27A8FD10FF5227A8FD6AFFA82727FD0FFF%7D52FF7DFD2FFFA87DA8FD38FFA8A8527DFD0EFF27FD31FFA8525252A8FD%39FFA852FD0DFF527DFD31FF7D7DFF7D7DFD3AFF527DFD0CFF52A8FD2DFF%527DFFFF7D52FF527DFD05FF7D52277DFF7D527DFD2EFF27FD0BFF7D52FD%2DFF527D527DFFFF7D27F82752FFFFA852527DFF525252FF277DFD2DFF52%7DFD0AFF52A8FD25FFA8527DFD04FF5252FFFF52FFFFFF277DFF527DFF7D%52277DFF7D277DFF7D52FD2DFFA852FD09FF7D52FD25FFA827FF5252FFA8%277D277D52527DFFFF277DFF527DFF7D527D275252FF275227A8FD2EFF52%A8FD08FF7DA8FD25FF7D7DFFFFF8FF7D7DFFA8277D277D52A852275252FF%FF52FFFF7DA8FFFFFFA8FD30FFA852FD08FF27FD27FF275252277DA827A8%275227A8FF522752F8A8FFFFA827277DF8A8FD35FF52A8FD06FF7D2752FD%27FFF85252FFFFA82752FF7D52A852FFFF277DFFFF2752527D7DF8FFFFFF%52527DFD2EFF7D277DFD06FF52A8A8A8FD27FF7DFD04FFA852FFA8F8F827%A8A8F8A8FF52525227FFFF27A8FF527DA852A8FD2DFFA8A852FD06FF52FD%30FF52527D5227F852277DFFFF52FFFF27525252FFFF52A8FF527DFD2FFF%52A8FD04FF7D7DFD30FF7DF87D52A8A82727527D5227A87D27A87DFFFFFF%A852272727A8FD2EFF527DFD04FF7DA8FD30FF527D5227FFFF5252527D27%27522752FD06FF527D7D2752FD2EFFA852FD04FF27FD31FF27FFFF27F827%F8272752F8F8F8277DFF7DA8FFFFA852FFFFF87DFD2EFFA852A8FFFFA87D%FD31FFA85252F87D7D7D27FFFF527C5252FFFFA8A8FFA8FFF87D527DFD30%FF52A8FFFF7D7DFD32FF7D52527DFF27F87DFF5227277DFFFF5252527DF8%7D52F8A8FD30FF7D7DFFFF52A8FD31FFA8F8A8FF272727522E282E27282F%7E2852A827522727FF27FD31FFA87DFFFF52A8FD2BFF7DFD04FFA8277D27%7D272728AFA94C206968207DFF532F537DF852F852FD32FF52FFFF27A8FD%2AFF527D27A8FFA82752FF7DF8595A777DA844938D9344A8FF6FF859287D%FFA820FD31FF7D52FFA85252A8FD28FF7D52FFA852FF52FF5227272FA8CA%6976F8F820454444F84B4B4C27A92FFF7CF87DFD07FF7D7D7DFD25FFA87D%27A87D7DFD2AFFAF52FF597D6F9ACAFF7D5AA9FFA1527D27F82705270527%F852594BA1520659A8527DFD05FF7DF82752A8FD26FF7D7D527DFD1EFFCA%FFCAFFA8FFA8CAA8FFA8CAA27627769B8D68696994769ACA7DF87DFF5252%FF2E7DA852527DF8454B277EA8277DA8FFA8A87D527D7DF87DFD26FF7D7D%7DA8FD1BFFA89B9AA19A9B9AA19AA19AC39BC3A1C3C376454B698D68709B%9AA1FF52527DFF52277D7D52FF7DF8277D27FF7D522ECAFFFFA8527D277D%FFA827A8FD26FFA85252FD1DFFCAFFA8FFCAFD07FF7DA8FFAF2EAF526F9A%CA84842E527D7DF8275252FF52F87D5252F8FFFF7D7DCAA17EA8FF7D277D%FF7D2752527DFD27FFA85252A8FD27FF277D27A87D7DFFA852FF84536FFF%FF52FF527D5252FF527DFFA8275252A827A876442E535252F852A8527D7D%A8FD29FF5252FD18FFCB9BA19BCAFD0AFF7D7DFFA852FF275227A87D5376%4B84A827FFA85252522752277DF87D52277D527D274BFF5A27A82727527D%FD2BFFA85252FD19FFCA93CAFD0CFF27A8527DFFA852FFFF597EFF522752%FD04FFA8FD04527D52F87D527D52FFF852FF8452FF5227FD2EFF5252FD19%FFA89AFD0DFFA852A8FFFF7D7DFFFF7D537D52A8FFFFFFA827F852FF5252%FF7D52FFFF27FFFF52764B052E272752FD2EFF5252FD1AFF94FD0DFF527D%A8FFFF7D7DFFFFAF536FA8FD04FF52F8527DFF7D277D5227FF527DA8FF7D%52457D7E7D27A8FD06FF7DFD06FFA8A8FD05FFA8A8FD06FFA8FD05FF7DFD%05FFA8FD05FF5227A8A8FD17FFCB9AFFFFA8CAA8FD07FF27A8A852A8FF7D%A8FFFF84A9A1FD05FF5227FF525227F8F87DA8277DA87D7DFFA8AEA984CA%7D7DFD05FF7D7DA8FFFFFFA8A852A8A8FFFFFFA87D7DA8A8FFFFA87D7DA8%FFFFFFA87D7DFFFFFFA87D7DA8FFFF7D27527DFD18FFC36FC4CA9BA1FD08%FF52FFFF27FFFF7D7DFFFFA9A9FD07FF527D5252277D7D52FFFFFFA8527D%A8FFCAFF7EA852A8A8FFFFFFA87D52A8FD04FFA87D7DFD04FFA87D7DA8FF%FFFFA87D7DA8FFFFA8A852A8A8FFFFA87D7DA8FFA87D2752FD19FFA8FFA8%CA94CACAFD07FF7D52277DFFA827527DFFA8524B7DFD06FF7DA87DF82752%52FD04FF52275276C3AF85FF7DA8FD05FFA8A8FD06FF7DFD07FFA8FD05FF%A8A8FD05FFA8A8FD04FFA8A8FD04FF5252FD1CFFA8A1FD0AFFA8A8FFFF27%A8A852FF7D59C327A8FD06FFA8F87DFF527DFFFFFFA852FF844BCAAF84FF%7DA8FD2EFF5252FD1DFFA2FD0EFFFD0452FF5259CA4B7DFD06FFA8F87DFF%7DF8527DFFA852FFA852FF7EA9FD31FF5252FD2CFF277D277DFFFF535252%FD08FF7DF85227FFFF52A8FF7D5227CAFF85FFFF7DFD2FFF5252FD2BFF7D%7DFFA852FFFFAF7ECA9BFD09FFA852A8FF27FFA8A8A89ACAA984FF7D7DFD%08FFA8FD25FFA85252A8FD2AFFA852FF5252FFFFFF85A9C3CAFD09FF7DF8%27A87D52527DFFFF5AFFFF52A8FD07FF27527DFD25FF5252A8FD2BFFA827%7D52A8FFFFA884FFFFA8FD07FF7D527D52FF52A8CA27FF7EA9FFA852FD07%FF27A8FF52A8FD23FFA8527D7DFD2FFF52FFFFFFA985FFC3A1FD06FF52A8%FF52AF59706F5284A9FFFF52FD08FF52A8FF52A8FD23FFA87D7D7DFD2FFF%7D52FFFFFF8484A8C3FFFFA8FFFFFF7D527D279BFF525259A9FFFF7D7DFD%08FFA827277DFD24FF7D7DA8277DA8FD2EFF527DFFFFFFA985A9FFCA9AA2%FFA8C3767D9ACAFFFF84A9FD33FFA87D52A8A8277DFD2FFFA87DA8FFFFAF%A8847EAFA8FFFFCAA1FFFFFFA9847EAFFFFF7DFD31FFA87D27FFFF52FD32%FFA87DAF5AFFFFFF848584A9A9AF84A984A9A9FD04FF7DFD33FF7DFFFF52%7DFD31FFA8530785FD06FFA8A9A8A9A8FD04FFA852FD34FFA852FFFF7D7D%FD32FF843084A7A8FD0BFFA87D52A8FD34FF7D7DFFFFA852FD31FFA984A8%FF7D52527D7DA8FFFFA8FFFFA852527DFD36FF527DFFFFFF52FD31FF85A9%FD05FF7D7D52FFA87DFFFFA8FD39FF52FD04FF52A8FD2FFF8484FD47FF7D%52FD04FFA87DFD2EFF8584FD07FFA8A8FD3FFF7D7DFD04FFA852FD1EFFA8%FFA9AFA8FD09FFA87E84FD08FF7D52FD3FFF27A8FD05FF52A8A8FD1DFF84%5A7EFD09FF8485AFFD09FF5227FD3EFFA852FD06FF7DF852A8FD1DFF5AFD%07FFA9855AA9FD0AFFA827F8A8FD3CFF52277DFD06FFA852FD1FFF7EFD05%FFAF7E85A8FD0CFF7DF8F852FD3DFF27FD08FF52A8FD1EFF5AFD05FF84FD%0FFFA85227A8FD3CFF7D52FD08FFA852FD1DFFA95AA9FFA9FFA9FF84AFFD%0EFFA87DFD3DFF52A8FD09FF52A8FD1CFF857E85FF845A7E7E847EA9FD0E%FF27FD3CFFA852FD0AFF7D7DFD20FF7E5A5AA95A84AFFD0EFF7D7DFD3BFF%52A8FD0BFF27FD1FFFA8855A845A847EA9FD0EFFA827A8FD05FFA8FFA8FD%31FFA852A8FD0BFF7D52FD35FF7D52A8FD04FF7D277DA8FD30FF7D7DFD0D%FF52A8FD35FF7D7DFFFFA8FFFF52A8FF7DFD2FFF27FD0EFF7D7DFFA8FD36%FFA852FFFF27FFFFFF7DFD2BFFA8FF52A8FD0FFF27277DFD35FFA8277DFF%FF52A8FFA8F87DFD2AFFA82727FD10FFA852FD37FFA852FFFF27A8FF527D%FD2CFF527DFD11FF527DFD39FF7D7D52A8FD2DFF7D52FD12FFA852FD6AFF%27FD14FF7D52FD68FF527DFD15FF52A8FD66FF7D52FD17FF27FD65FFA852%A8FD17FFA827FD64FF527DFD19FF7D52FF7DFD5EFF7DA85252FD1BFF5227%A8FD5EFF7D2752FD1DFF277DFD5EFFA827FD1FFF27A8FD5CFFA827FD20FF%A827A8FD5AFFA827A8FD21FFA852A8FD59FF27A8FD23FF7D27A8FD56FFA8%27A8FD25FFA852A8FD54FFA827A8FD27FFA8277D7D7DFD4EFF7D7DA827A8%FD2AFF5227FD50FF2727FD2DFF5252FD4EFF5252FD2FFF7D27FD4BFFA852%7DFD31FFA8277DFD48FF7D277DFD34FF5252FD46FF5252A8FD36FF7D527D%FF7DA8FD3CFF7DA8FF7D277DFD39FFA8522727FD3EFF275252FD3DFFA827%52A8FD3BFF52277DFD40FF7D5252FD37FFA87D277DFD44FF7D277DA8FFFF%FFA8FD29FFA8FD04FFA852527DFD48FF7D5252A8FF7DA8FD29FF52FFA852%52A8FD4CFFA85252F8A8FD28FFA82727527DFD50FFA8A852527DA8FD06FF%A8FD1BFFA87D52527DFD56FFA87D5252527D7DFF7D7DFD09FFA8A8FD09FF%52A8FFA87D7D52527DFD5DFFA87D7D5252277D7DA8A8FD05FF7DA8FD06FF%A8A87D52277D527DA8FD64FFA8A87D7DFD0752272752525227FD04527D7D%FFA8FD32FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2009-01-08T14:25:54-08:00</xap:CreateDate>
         <xap:ModifyDate>2009-01-08T14:25:54-08:00</xap:ModifyDate>
         <xap:MetadataDate>2009-01-08T14:25:54-08:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>256</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FUq8wea/LPl23Fxruq2umQkEo11MkRalAeCsQWO42UYqxr/AJWfc6mo/wAJeV9V1xW3jvpo&#xA;hpdiR4ia+9KRh7xxNirYtvzm1P8Avr3RfLcLb8LaGfVbgAj7PqzNZQg+P7psVSrQPI3nHVLnWE82&#xA;+a9df6pftDpxs5YNNhnszBE6Sj6nFG9ecjof3nVfpKqcf8qb8hyb3kF9qLn7b32p6jdFt6/EJbhl&#xA;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</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:8904A19622DFDD118E69EF17EF75D454</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:8A04A19622DFDD118E69EF17EF75D454</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource"/>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1190.551147</stDim:w>
            <stDim:h>841.889832</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ComicSansMS</stFnt:fontName>
                  <stFnt:fontFamily>Comic Sans MS</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.00x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Comic Sans MS.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -199.725 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 199.725 li
199.72 199.725 li
199.72 0 li
cp
clp
[1 0 0 1 0 0 ]ct
86.0532 94.3496 mo
86.8076 94.1172 li
87.4536 93.6631 li
87.9272 93.0317 li
88.1826 92.2847 li
88.1948 91.4956 li
87.9629 90.7412 li
87.5088 90.0952 li
86.8774 89.6216 li
86.1304 89.3657 li
85.3408 89.3535 li
84.5864 89.5859 li
83.9409 90.04 li
83.4668 90.6714 li
83.2114 91.4185 li
83.1992 92.2075 li
83.4316 92.9619 li
83.8857 93.6079 li
84.5171 94.0815 li
85.2637 94.3374 li
86.0532 94.3496 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
1 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
86.0532 94.3496 mo
86.8076 94.1172 li
87.4536 93.6631 li
87.9272 93.0317 li
88.1826 92.2847 li
88.1948 91.4956 li
87.9629 90.7412 li
87.5088 90.0952 li
86.8774 89.6216 li
86.1304 89.3657 li
85.3408 89.3535 li
84.5864 89.5859 li
83.9409 90.04 li
83.4668 90.6714 li
83.2114 91.4185 li
83.1992 92.2075 li
83.4316 92.9619 li
83.8857 93.6079 li
84.5171 94.0815 li
85.2637 94.3374 li
86.0532 94.3496 li
0 0 0 rgb
@
105.872 62.6191 mo
106.627 62.3867 li
107.272 61.9326 li
107.746 61.3013 li
108.002 60.5542 li
108.014 59.7651 li
107.781 59.0107 li
107.328 58.3647 li
106.696 57.8911 li
105.949 57.6353 li
105.16 57.623 li
104.406 57.8555 li
103.76 58.3096 li
103.286 58.9409 li
103.03 59.688 li
103.018 60.4771 li
103.25 61.2314 li
103.705 61.8774 li
104.336 62.3511 li
105.083 62.6069 li
105.872 62.6191 li
1 1 1 rgb
f
105.872 62.6191 mo
106.627 62.3867 li
107.272 61.9326 li
107.746 61.3013 li
108.002 60.5542 li
108.014 59.7651 li
107.781 59.0107 li
107.328 58.3647 li
106.696 57.8911 li
105.949 57.6353 li
105.16 57.623 li
104.406 57.8555 li
103.76 58.3096 li
103.286 58.9409 li
103.03 59.688 li
103.018 60.4771 li
103.25 61.2314 li
103.705 61.8774 li
104.336 62.3511 li
105.083 62.6069 li
105.872 62.6191 li
0 0 0 rgb
@
92.3145 76.9932 mo
93.0688 76.7612 li
93.7148 76.3071 li
94.1885 75.6758 li
94.4438 74.9287 li
94.4561 74.1392 li
94.2241 73.3848 li
93.77 72.7393 li
93.1387 72.2651 li
92.3916 72.0098 li
91.6021 71.9976 li
90.8477 72.23 li
90.2021 72.6841 li
89.728 73.3154 li
89.4727 74.062 li
89.4604 74.8516 li
89.6929 75.606 li
90.147 76.252 li
90.7783 76.7256 li
91.5249 76.981 li
92.3145 76.9932 li
1 1 1 rgb
f
92.3145 76.9932 mo
93.0688 76.7612 li
93.7148 76.3071 li
94.1885 75.6758 li
94.4438 74.9287 li
94.4561 74.1392 li
94.2241 73.3848 li
93.77 72.7393 li
93.1387 72.2651 li
92.3916 72.0098 li
91.6021 71.9976 li
90.8477 72.23 li
90.2021 72.6841 li
89.728 73.3154 li
89.4727 74.062 li
89.4604 74.8516 li
89.6929 75.606 li
90.147 76.252 li
90.7783 76.7256 li
91.5249 76.981 li
92.3145 76.9932 li
0 0 0 rgb
@
84.7192 76.0542 mo
85.4736 75.8218 li
86.1196 75.3677 li
86.5933 74.7363 li
86.8486 73.9897 li
86.8608 73.2002 li
86.6289 72.4458 li
86.1748 71.8003 li
85.5435 71.3262 li
84.7964 71.0708 li
84.0068 71.0586 li
83.2524 71.2905 li
82.6069 71.7446 li
82.1328 72.376 li
81.8774 73.123 li
81.8652 73.9126 li
82.0977 74.667 li
82.5518 75.3125 li
83.1831 75.7866 li
83.9297 76.042 li
84.7192 76.0542 li
1 1 1 rgb
f
84.7192 76.0542 mo
85.4736 75.8218 li
86.1196 75.3677 li
86.5933 74.7363 li
86.8486 73.9897 li
86.8608 73.2002 li
86.6289 72.4458 li
86.1748 71.8003 li
85.5435 71.3262 li
84.7964 71.0708 li
84.0068 71.0586 li
83.2524 71.2905 li
82.6069 71.7446 li
82.1328 72.376 li
81.8774 73.123 li
81.8652 73.9126 li
82.0977 74.667 li
82.5518 75.3125 li
83.1831 75.7866 li
83.9297 76.042 li
84.7192 76.0542 li
0 0 0 rgb
@
105.021 110.053 mo
105.775 109.82 li
106.422 109.365 li
106.895 108.734 li
107.15 107.988 li
107.163 107.198 li
106.931 106.443 li
106.477 105.799 li
105.846 105.324 li
105.098 105.068 li
104.309 105.057 li
103.555 105.289 li
102.908 105.742 li
102.436 106.375 li
102.18 107.121 li
102.167 107.91 li
102.399 108.665 li
102.854 109.311 li
103.484 109.785 li
104.232 110.04 li
105.021 110.053 li
1 1 1 rgb
f
105.021 110.053 mo
105.775 109.82 li
106.422 109.365 li
106.895 108.734 li
107.15 107.988 li
107.163 107.198 li
106.931 106.443 li
106.477 105.799 li
105.846 105.324 li
105.098 105.068 li
104.309 105.057 li
103.555 105.289 li
102.908 105.742 li
102.436 106.375 li
102.18 107.121 li
102.167 107.91 li
102.399 108.665 li
102.854 109.311 li
103.484 109.785 li
104.232 110.04 li
105.021 110.053 li
0 0 0 rgb
@
92.4209 75.7046 mo
93.1753 75.4722 li
93.8208 75.0181 li
94.2949 74.3872 li
94.5503 73.6401 li
94.5625 72.8506 li
94.3301 72.0962 li
93.876 71.4507 li
93.2446 70.9766 li
92.498 70.7212 li
91.7085 70.709 li
90.9541 70.9409 li
90.3081 71.395 li
89.8345 72.0269 li
89.5791 72.7734 li
89.5669 73.563 li
89.7988 74.3174 li
90.2529 74.9629 li
90.8843 75.437 li
91.6313 75.6924 li
92.4209 75.7046 li
1 1 1 rgb
f
92.4209 75.7046 mo
93.1753 75.4722 li
93.8208 75.0181 li
94.2949 74.3872 li
94.5503 73.6401 li
94.5625 72.8506 li
94.3301 72.0962 li
93.876 71.4507 li
93.2446 70.9766 li
92.498 70.7212 li
91.7085 70.709 li
90.9541 70.9409 li
90.3081 71.395 li
89.8345 72.0269 li
89.5791 72.7734 li
89.5669 73.563 li
89.7988 74.3174 li
90.2529 74.9629 li
90.8843 75.437 li
91.6313 75.6924 li
92.4209 75.7046 li
0 0 0 rgb
@
109.514 94.9668 mo
110.268 94.7344 li
110.914 94.2803 li
111.388 93.6489 li
111.643 92.9019 li
111.655 92.1128 li
111.423 91.3584 li
110.969 90.7124 li
110.338 90.2388 li
109.591 89.9829 li
108.801 89.9712 li
108.047 90.2031 li
107.401 90.6572 li
106.928 91.2886 li
106.672 92.0356 li
106.66 92.8247 li
106.893 93.5796 li
107.346 94.2251 li
107.978 94.6987 li
108.725 94.9546 li
109.514 94.9668 li
1 1 1 rgb
f
109.514 94.9668 mo
110.268 94.7344 li
110.914 94.2803 li
111.388 93.6489 li
111.643 92.9019 li
111.655 92.1128 li
111.423 91.3584 li
110.969 90.7124 li
110.338 90.2388 li
109.591 89.9829 li
108.801 89.9712 li
108.047 90.2031 li
107.401 90.6572 li
106.928 91.2886 li
106.672 92.0356 li
106.66 92.8247 li
106.893 93.5796 li
107.346 94.2251 li
107.978 94.6987 li
108.725 94.9546 li
109.514 94.9668 li
0 0 0 rgb
@
100.727 75.7964 mo
101.48 75.564 li
102.126 75.1099 li
102.6 74.4785 li
102.855 73.7314 li
102.867 72.9424 li
102.636 72.188 li
102.182 71.542 li
101.551 71.0684 li
100.803 70.8125 li
100.014 70.8003 li
99.2598 71.0327 li
98.6133 71.4868 li
98.1396 72.1182 li
97.8848 72.8652 li
97.8721 73.6543 li
98.1045 74.4087 li
98.5586 75.0547 li
99.1895 75.5283 li
99.9365 75.7842 li
100.727 75.7964 li
1 1 1 rgb
f
100.727 75.7964 mo
101.48 75.564 li
102.126 75.1099 li
102.6 74.4785 li
102.855 73.7314 li
102.867 72.9424 li
102.636 72.188 li
102.182 71.542 li
101.551 71.0684 li
100.803 70.8125 li
100.014 70.8003 li
99.2598 71.0327 li
98.6133 71.4868 li
98.1396 72.1182 li
97.8848 72.8652 li
97.8721 73.6543 li
98.1045 74.4087 li
98.5586 75.0547 li
99.1895 75.5283 li
99.9365 75.7842 li
100.727 75.7964 li
0 0 0 rgb
@
133.63 88.9302 mo
134.385 88.6978 li
135.03 88.2437 li
135.504 87.6123 li
135.76 86.8652 li
135.771 86.0762 li
135.539 85.3218 li
135.086 84.6758 li
134.454 84.2021 li
133.707 83.9463 li
132.918 83.9341 li
132.163 84.1665 li
131.518 84.6206 li
131.044 85.252 li
130.788 85.999 li
130.775 86.7881 li
131.008 87.5425 li
131.463 88.1885 li
132.094 88.6621 li
132.841 88.918 li
133.63 88.9302 li
1 1 1 rgb
f
133.63 88.9302 mo
134.385 88.6978 li
135.03 88.2437 li
135.504 87.6123 li
135.76 86.8652 li
135.771 86.0762 li
135.539 85.3218 li
135.086 84.6758 li
134.454 84.2021 li
133.707 83.9463 li
132.918 83.9341 li
132.163 84.1665 li
131.518 84.6206 li
131.044 85.252 li
130.788 85.999 li
130.775 86.7881 li
131.008 87.5425 li
131.463 88.1885 li
132.094 88.6621 li
132.841 88.918 li
133.63 88.9302 li
0 0 0 rgb
@
76.1074 36.4829 mo
76.8618 36.251 li
77.5078 35.7969 li
77.9814 35.1655 li
78.2373 34.4185 li
78.2495 33.6294 li
78.0171 32.8745 li
77.563 32.229 li
76.9316 31.7554 li
76.1846 31.4995 li
75.3955 31.4873 li
74.6411 31.7197 li
73.9951 32.1738 li
73.5215 32.8052 li
73.2656 33.5522 li
73.2534 34.3413 li
73.4858 35.0957 li
73.9399 35.7417 li
74.5713 36.2153 li
75.3184 36.4707 li
76.1074 36.4829 li
1 1 1 rgb
f
76.1074 36.4829 mo
76.8618 36.251 li
77.5078 35.7969 li
77.9814 35.1655 li
78.2373 34.4185 li
78.2495 33.6294 li
78.0171 32.8745 li
77.563 32.229 li
76.9316 31.7554 li
76.1846 31.4995 li
75.3955 31.4873 li
74.6411 31.7197 li
73.9951 32.1738 li
73.5215 32.8052 li
73.2656 33.5522 li
73.2534 34.3413 li
73.4858 35.0957 li
73.9399 35.7417 li
74.5713 36.2153 li
75.3184 36.4707 li
76.1074 36.4829 li
0 0 0 rgb
@
108.723 82.2246 mo
109.477 81.9927 li
110.123 81.5386 li
110.596 80.9072 li
110.852 80.1602 li
110.864 79.3706 li
110.632 78.6162 li
110.178 77.9707 li
109.547 77.4966 li
108.799 77.2412 li
108.01 77.229 li
107.256 77.4614 li
106.609 77.9155 li
106.137 78.5469 li
105.881 79.2935 li
105.868 80.083 li
106.101 80.8374 li
106.555 81.4834 li
107.186 81.957 li
107.934 82.2124 li
108.723 82.2246 li
1 1 1 rgb
f
108.723 82.2246 mo
109.477 81.9927 li
110.123 81.5386 li
110.596 80.9072 li
110.852 80.1602 li
110.864 79.3706 li
110.632 78.6162 li
110.178 77.9707 li
109.547 77.4966 li
108.799 77.2412 li
108.01 77.229 li
107.256 77.4614 li
106.609 77.9155 li
106.137 78.5469 li
105.881 79.2935 li
105.868 80.083 li
106.101 80.8374 li
106.555 81.4834 li
107.186 81.957 li
107.934 82.2124 li
108.723 82.2246 li
0 0 0 rgb
@
115.363 82.6211 mo
116.118 82.3887 li
116.764 81.9346 li
117.238 81.3032 li
117.494 80.5566 li
117.506 79.7671 li
117.273 79.0127 li
116.819 78.3667 li
116.188 77.8931 li
115.441 77.6377 li
114.652 77.6255 li
113.897 77.8574 li
113.252 78.3115 li
112.777 78.9429 li
112.521 79.6899 li
112.51 80.4795 li
112.742 81.2339 li
113.196 81.8794 li
113.828 82.3535 li
114.574 82.6089 li
115.363 82.6211 li
1 1 1 rgb
f
115.363 82.6211 mo
116.118 82.3887 li
116.764 81.9346 li
117.238 81.3032 li
117.494 80.5566 li
117.506 79.7671 li
117.273 79.0127 li
116.819 78.3667 li
116.188 77.8931 li
115.441 77.6377 li
114.652 77.6255 li
113.897 77.8574 li
113.252 78.3115 li
112.777 78.9429 li
112.521 79.6899 li
112.51 80.4795 li
112.742 81.2339 li
113.196 81.8794 li
113.828 82.3535 li
114.574 82.6089 li
115.363 82.6211 li
0 0 0 rgb
@
82.1143 107.078 mo
82.8687 106.846 li
83.5146 106.391 li
83.9883 105.76 li
84.2437 105.013 li
84.2559 104.224 li
84.0239 103.469 li
83.5698 102.823 li
82.9385 102.35 li
82.1914 102.094 li
81.4019 102.082 li
80.6475 102.314 li
80.002 102.768 li
79.5278 103.399 li
79.2725 104.146 li
79.2603 104.936 li
79.4927 105.689 li
79.9468 106.336 li
80.5781 106.81 li
81.3247 107.065 li
82.1143 107.078 li
1 1 1 rgb
f
82.1143 107.078 mo
82.8687 106.846 li
83.5146 106.391 li
83.9883 105.76 li
84.2437 105.013 li
84.2559 104.224 li
84.0239 103.469 li
83.5698 102.823 li
82.9385 102.35 li
82.1914 102.094 li
81.4019 102.082 li
80.6475 102.314 li
80.002 102.768 li
79.5278 103.399 li
79.2725 104.146 li
79.2603 104.936 li
79.4927 105.689 li
79.9468 106.336 li
80.5781 106.81 li
81.3247 107.065 li
82.1143 107.078 li
0 0 0 rgb
@
101.572 103.945 mo
102.327 103.713 li
102.973 103.259 li
103.446 102.627 li
103.702 101.881 li
103.715 101.092 li
103.482 100.336 li
103.027 99.6909 li
102.396 99.2173 li
101.649 98.9614 li
100.86 98.9492 li
100.105 99.1816 li
99.46 99.6357 li
98.9863 100.268 li
98.7305 101.014 li
98.7188 101.803 li
98.9512 102.558 li
99.4043 103.203 li
100.036 103.678 li
100.783 103.933 li
101.572 103.945 li
1 1 1 rgb
f
101.572 103.945 mo
102.327 103.713 li
102.973 103.259 li
103.446 102.627 li
103.702 101.881 li
103.715 101.092 li
103.482 100.336 li
103.027 99.6909 li
102.396 99.2173 li
101.649 98.9614 li
100.86 98.9492 li
100.105 99.1816 li
99.46 99.6357 li
98.9863 100.268 li
98.7305 101.014 li
98.7188 101.803 li
98.9512 102.558 li
99.4043 103.203 li
100.036 103.678 li
100.783 103.933 li
101.572 103.945 li
0 0 0 rgb
@
95.4922 63.3267 mo
96.2461 63.0942 li
96.8926 62.6401 li
97.3662 62.0088 li
97.6211 61.2622 li
97.6338 60.4727 li
97.4014 59.7183 li
96.9473 59.0723 li
96.3164 58.5986 li
95.5693 58.3433 li
94.7798 58.3311 li
94.0254 58.563 li
93.3799 59.0171 li
92.9058 59.6484 li
92.6504 60.3955 li
92.6382 61.1851 li
92.8706 61.9395 li
93.3242 62.585 li
93.9561 63.0591 li
94.7026 63.3145 li
95.4922 63.3267 li
1 1 1 rgb
f
95.4922 63.3267 mo
96.2461 63.0942 li
96.8926 62.6401 li
97.3662 62.0088 li
97.6211 61.2622 li
97.6338 60.4727 li
97.4014 59.7183 li
96.9473 59.0723 li
96.3164 58.5986 li
95.5693 58.3433 li
94.7798 58.3311 li
94.0254 58.563 li
93.3799 59.0171 li
92.9058 59.6484 li
92.6504 60.3955 li
92.6382 61.1851 li
92.8706 61.9395 li
93.3242 62.585 li
93.9561 63.0591 li
94.7026 63.3145 li
95.4922 63.3267 li
0 0 0 rgb
@
101.287 74.4888 mo
102.041 74.2563 li
102.688 73.8022 li
103.16 73.1709 li
103.416 72.4238 li
103.429 71.6348 li
103.196 70.8804 li
102.742 70.2344 li
102.111 69.7607 li
101.363 69.5049 li
100.574 69.4927 li
99.8203 69.7251 li
99.1738 70.1792 li
98.7012 70.8105 li
98.4453 71.5576 li
98.4326 72.3467 li
98.665 73.1011 li
99.1191 73.7471 li
99.75 74.2207 li
100.498 74.4766 li
101.287 74.4888 li
1 1 1 rgb
f
101.287 74.4888 mo
102.041 74.2563 li
102.688 73.8022 li
103.16 73.1709 li
103.416 72.4238 li
103.429 71.6348 li
103.196 70.8804 li
102.742 70.2344 li
102.111 69.7607 li
101.363 69.5049 li
100.574 69.4927 li
99.8203 69.7251 li
99.1738 70.1792 li
98.7012 70.8105 li
98.4453 71.5576 li
98.4326 72.3467 li
98.665 73.1011 li
99.1191 73.7471 li
99.75 74.2207 li
100.498 74.4766 li
101.287 74.4888 li
0 0 0 rgb
@
127.479 92.5474 mo
128.232 92.3149 li
128.878 91.8608 li
129.352 91.2295 li
129.607 90.4829 li
129.619 89.6934 li
129.388 88.939 li
128.934 88.2935 li
128.303 87.8193 li
127.555 87.564 li
126.766 87.5518 li
126.012 87.7837 li
125.365 88.2378 li
124.892 88.8691 li
124.637 89.6162 li
124.624 90.4058 li
124.856 91.1602 li
125.311 91.8057 li
125.941 92.2798 li
126.688 92.5352 li
127.479 92.5474 li
1 1 1 rgb
f
127.479 92.5474 mo
128.232 92.3149 li
128.878 91.8608 li
129.352 91.2295 li
129.607 90.4829 li
129.619 89.6934 li
129.388 88.939 li
128.934 88.2935 li
128.303 87.8193 li
127.555 87.564 li
126.766 87.5518 li
126.012 87.7837 li
125.365 88.2378 li
124.892 88.8691 li
124.637 89.6162 li
124.624 90.4058 li
124.856 91.1602 li
125.311 91.8057 li
125.941 92.2798 li
126.688 92.5352 li
127.479 92.5474 li
0 0 0 rgb
@
92.7217 90.7339 mo
93.4766 90.5015 li
94.1221 90.0474 li
94.5962 89.416 li
94.8516 88.6694 li
94.8638 87.8799 li
94.6313 87.1255 li
94.1772 86.48 li
93.5459 86.0059 li
92.7993 85.7505 li
92.0098 85.7383 li
91.2554 85.9702 li
90.6094 86.4243 li
90.1357 87.0557 li
89.8804 87.8027 li
89.8682 88.5923 li
90.1001 89.3467 li
90.5542 89.9922 li
91.1855 90.4663 li
91.9326 90.7217 li
92.7217 90.7339 li
1 1 1 rgb
f
92.7217 90.7339 mo
93.4766 90.5015 li
94.1221 90.0474 li
94.5962 89.416 li
94.8516 88.6694 li
94.8638 87.8799 li
94.6313 87.1255 li
94.1772 86.48 li
93.5459 86.0059 li
92.7993 85.7505 li
92.0098 85.7383 li
91.2554 85.9702 li
90.6094 86.4243 li
90.1357 87.0557 li
89.8804 87.8027 li
89.8682 88.5923 li
90.1001 89.3467 li
90.5542 89.9922 li
91.1855 90.4663 li
91.9326 90.7217 li
92.7217 90.7339 li
0 0 0 rgb
@
102.559 93.856 mo
103.313 93.6235 li
103.959 93.1694 li
104.434 92.5386 li
104.688 91.7915 li
104.701 91.002 li
104.469 90.2476 li
104.015 89.6021 li
103.383 89.1279 li
102.637 88.8726 li
101.847 88.8604 li
101.092 89.0923 li
100.447 89.5464 li
99.9727 90.1782 li
99.7168 90.9248 li
99.7051 91.7144 li
99.9375 92.4688 li
100.391 93.1143 li
101.023 93.5884 li
101.77 93.8438 li
102.559 93.856 li
1 1 1 rgb
f
102.559 93.856 mo
103.313 93.6235 li
103.959 93.1694 li
104.434 92.5386 li
104.688 91.7915 li
104.701 91.002 li
104.469 90.2476 li
104.015 89.6021 li
103.383 89.1279 li
102.637 88.8726 li
101.847 88.8604 li
101.092 89.0923 li
100.447 89.5464 li
99.9727 90.1782 li
99.7168 90.9248 li
99.7051 91.7144 li
99.9375 92.4688 li
100.391 93.1143 li
101.023 93.5884 li
101.77 93.8438 li
102.559 93.856 li
0 0 0 rgb
@
93.9419 78.7822 mo
94.6963 78.5503 li
95.3418 78.0962 li
95.8164 77.4648 li
96.0713 76.7178 li
96.084 75.9282 li
95.8516 75.1738 li
95.3975 74.5283 li
94.7656 74.0542 li
94.019 73.7988 li
93.2295 73.7866 li
92.4751 74.019 li
91.8296 74.4731 li
91.3555 75.1045 li
91.1001 75.8511 li
91.0879 76.6406 li
91.3203 77.395 li
91.7739 78.0405 li
92.4058 78.5146 li
93.1523 78.77 li
93.9419 78.7822 li
1 1 1 rgb
f
93.9419 78.7822 mo
94.6963 78.5503 li
95.3418 78.0962 li
95.8164 77.4648 li
96.0713 76.7178 li
96.084 75.9282 li
95.8516 75.1738 li
95.3975 74.5283 li
94.7656 74.0542 li
94.019 73.7988 li
93.2295 73.7866 li
92.4751 74.019 li
91.8296 74.4731 li
91.3555 75.1045 li
91.1001 75.8511 li
91.0879 76.6406 li
91.3203 77.395 li
91.7739 78.0405 li
92.4058 78.5146 li
93.1523 78.77 li
93.9419 78.7822 li
0 0 0 rgb
@
115.98 80.8232 mo
116.734 80.5913 li
117.381 80.1372 li
117.854 79.5059 li
118.109 78.7588 li
118.122 77.9692 li
117.89 77.2148 li
117.436 76.5693 li
116.805 76.0952 li
116.057 75.8398 li
115.268 75.8276 li
114.514 76.0601 li
113.867 76.5142 li
113.394 77.1455 li
113.139 77.8921 li
113.126 78.6816 li
113.358 79.436 li
113.813 80.082 li
114.443 80.5557 li
115.19 80.811 li
115.98 80.8232 li
1 1 1 rgb
f
115.98 80.8232 mo
116.734 80.5913 li
117.381 80.1372 li
117.854 79.5059 li
118.109 78.7588 li
118.122 77.9692 li
117.89 77.2148 li
117.436 76.5693 li
116.805 76.0952 li
116.057 75.8398 li
115.268 75.8276 li
114.514 76.0601 li
113.867 76.5142 li
113.394 77.1455 li
113.139 77.8921 li
113.126 78.6816 li
113.358 79.436 li
113.813 80.082 li
114.443 80.5557 li
115.19 80.811 li
115.98 80.8232 li
0 0 0 rgb
@
72.8789 66.9927 mo
73.6333 66.7603 li
74.2793 66.3062 li
74.7529 65.6748 li
75.0088 64.9277 li
75.021 64.1387 li
74.7886 63.3843 li
74.3345 62.7383 li
73.7031 62.2646 li
72.9561 62.0088 li
72.167 61.9966 li
71.4126 62.229 li
70.7666 62.6831 li
70.293 63.3145 li
70.0371 64.0615 li
70.0249 64.8506 li
70.2573 65.605 li
70.7114 66.251 li
71.3428 66.7246 li
72.0898 66.9805 li
72.8789 66.9927 li
1 1 1 rgb
f
72.8789 66.9927 mo
73.6333 66.7603 li
74.2793 66.3062 li
74.7529 65.6748 li
75.0088 64.9277 li
75.021 64.1387 li
74.7886 63.3843 li
74.3345 62.7383 li
73.7031 62.2646 li
72.9561 62.0088 li
72.167 61.9966 li
71.4126 62.229 li
70.7666 62.6831 li
70.293 63.3145 li
70.0371 64.0615 li
70.0249 64.8506 li
70.2573 65.605 li
70.7114 66.251 li
71.3428 66.7246 li
72.0898 66.9805 li
72.8789 66.9927 li
0 0 0 rgb
@
103.784 69.5142 mo
104.539 69.2822 li
105.185 68.8281 li
105.658 68.1968 li
105.914 67.4497 li
105.926 66.6602 li
105.693 65.9058 li
105.24 65.2603 li
104.608 64.7861 li
103.861 64.5308 li
103.072 64.5186 li
102.318 64.751 li
101.672 65.2051 li
101.198 65.8364 li
100.942 66.583 li
100.93 67.3726 li
101.162 68.127 li
101.617 68.7729 li
102.248 69.2466 li
102.995 69.502 li
103.784 69.5142 li
1 1 1 rgb
f
103.784 69.5142 mo
104.539 69.2822 li
105.185 68.8281 li
105.658 68.1968 li
105.914 67.4497 li
105.926 66.6602 li
105.693 65.9058 li
105.24 65.2603 li
104.608 64.7861 li
103.861 64.5308 li
103.072 64.5186 li
102.318 64.751 li
101.672 65.2051 li
101.198 65.8364 li
100.942 66.583 li
100.93 67.3726 li
101.162 68.127 li
101.617 68.7729 li
102.248 69.2466 li
102.995 69.502 li
103.784 69.5142 li
0 0 0 rgb
@
96.3418 76.4404 mo
97.0957 76.2085 li
97.7422 75.7544 li
98.2158 75.123 li
98.4717 74.376 li
98.4844 73.5864 li
98.252 72.832 li
97.7969 72.1865 li
97.166 71.7124 li
96.4189 71.457 li
95.6299 71.4448 li
94.8755 71.6772 li
94.2295 72.1313 li
93.7559 72.7627 li
93.5 73.5093 li
93.4878 74.2988 li
93.7202 75.0532 li
94.1743 75.6987 li
94.8057 76.1729 li
95.5527 76.4282 li
96.3418 76.4404 li
1 1 1 rgb
f
96.3418 76.4404 mo
97.0957 76.2085 li
97.7422 75.7544 li
98.2158 75.123 li
98.4717 74.376 li
98.4844 73.5864 li
98.252 72.832 li
97.7969 72.1865 li
97.166 71.7124 li
96.4189 71.457 li
95.6299 71.4448 li
94.8755 71.6772 li
94.2295 72.1313 li
93.7559 72.7627 li
93.5 73.5093 li
93.4878 74.2988 li
93.7202 75.0532 li
94.1743 75.6987 li
94.8057 76.1729 li
95.5527 76.4282 li
96.3418 76.4404 li
0 0 0 rgb
@
82.0571 96.9487 mo
82.8115 96.7168 li
83.457 96.2627 li
83.9312 95.6313 li
84.1865 94.8843 li
84.1987 94.0952 li
83.9663 93.3403 li
83.5122 92.6948 li
82.8809 92.2212 li
82.1343 91.9653 li
81.3447 91.9531 li
80.5903 92.1855 li
79.9443 92.6396 li
79.4707 93.271 li
79.2153 94.0181 li
79.2031 94.8071 li
79.4351 95.5615 li
79.8892 96.2075 li
80.5205 96.6812 li
81.2676 96.9365 li
82.0571 96.9487 li
1 1 1 rgb
f
82.0571 96.9487 mo
82.8115 96.7168 li
83.457 96.2627 li
83.9312 95.6313 li
84.1865 94.8843 li
84.1987 94.0952 li
83.9663 93.3403 li
83.5122 92.6948 li
82.8809 92.2212 li
82.1343 91.9653 li
81.3447 91.9531 li
80.5903 92.1855 li
79.9443 92.6396 li
79.4707 93.271 li
79.2153 94.0181 li
79.2031 94.8071 li
79.4351 95.5615 li
79.8892 96.2075 li
80.5205 96.6812 li
81.2676 96.9365 li
82.0571 96.9487 li
0 0 0 rgb
@
73.8198 107.064 mo
74.5742 106.832 li
75.2197 106.378 li
75.6938 105.746 li
75.9492 105 li
75.9614 104.211 li
75.729 103.455 li
75.2749 102.811 li
74.6436 102.336 li
73.897 102.08 li
73.1074 102.068 li
72.353 102.301 li
71.707 102.755 li
71.2334 103.387 li
70.978 104.133 li
70.9658 104.922 li
71.1978 105.677 li
71.6519 106.322 li
72.2832 106.797 li
73.0303 107.053 li
73.8198 107.064 li
1 1 1 rgb
f
73.8198 107.064 mo
74.5742 106.832 li
75.2197 106.378 li
75.6938 105.746 li
75.9492 105 li
75.9614 104.211 li
75.729 103.455 li
75.2749 102.811 li
74.6436 102.336 li
73.897 102.08 li
73.1074 102.068 li
72.353 102.301 li
71.707 102.755 li
71.2334 103.387 li
70.978 104.133 li
70.9658 104.922 li
71.1978 105.677 li
71.6519 106.322 li
72.2832 106.797 li
73.0303 107.053 li
73.8198 107.064 li
0 0 0 rgb
@
88.2822 67.5068 mo
89.0366 67.2744 li
89.6826 66.8203 li
90.1563 66.189 li
90.4116 65.4419 li
90.4238 64.6528 li
90.1919 63.8984 li
89.7378 63.2524 li
89.1064 62.7788 li
88.3594 62.5234 li
87.5703 62.5112 li
86.8154 62.7432 li
86.1699 63.1973 li
85.6958 63.8286 li
85.4404 64.5757 li
85.4282 65.3647 li
85.6606 66.1196 li
86.1147 66.7651 li
86.7461 67.2388 li
87.4927 67.4946 li
88.2822 67.5068 li
1 1 1 rgb
f
88.2822 67.5068 mo
89.0366 67.2744 li
89.6826 66.8203 li
90.1563 66.189 li
90.4116 65.4419 li
90.4238 64.6528 li
90.1919 63.8984 li
89.7378 63.2524 li
89.1064 62.7788 li
88.3594 62.5234 li
87.5703 62.5112 li
86.8154 62.7432 li
86.1699 63.1973 li
85.6958 63.8286 li
85.4404 64.5757 li
85.4282 65.3647 li
85.6606 66.1196 li
86.1147 66.7651 li
86.7461 67.2388 li
87.4927 67.4946 li
88.2822 67.5068 li
0 0 0 rgb
@
106.623 69.7051 mo
107.377 69.4731 li
108.023 69.019 li
108.497 68.3877 li
108.752 67.6406 li
108.765 66.8511 li
108.533 66.0967 li
108.078 65.4512 li
107.447 64.9771 li
106.7 64.7217 li
105.91 64.7095 li
105.156 64.9419 li
104.511 65.396 li
104.037 66.0273 li
103.781 66.7739 li
103.77 67.5635 li
104.002 68.3179 li
104.455 68.9639 li
105.087 69.4375 li
105.834 69.6929 li
106.623 69.7051 li
1 1 1 rgb
f
106.623 69.7051 mo
107.377 69.4731 li
108.023 69.019 li
108.497 68.3877 li
108.752 67.6406 li
108.765 66.8511 li
108.533 66.0967 li
108.078 65.4512 li
107.447 64.9771 li
106.7 64.7217 li
105.91 64.7095 li
105.156 64.9419 li
104.511 65.396 li
104.037 66.0273 li
103.781 66.7739 li
103.77 67.5635 li
104.002 68.3179 li
104.455 68.9639 li
105.087 69.4375 li
105.834 69.6929 li
106.623 69.7051 li
0 0 0 rgb
@
84.3662 84.1294 mo
85.1206 83.897 li
85.7666 83.4429 li
86.2402 82.8115 li
86.4961 82.0649 li
86.5083 81.2754 li
86.2759 80.521 li
85.8218 79.8755 li
85.1904 79.4014 li
84.4434 79.146 li
83.6543 79.1338 li
82.8999 79.3657 li
82.2539 79.8198 li
81.7803 80.4512 li
81.5244 81.1982 li
81.5122 81.9878 li
81.7446 82.7422 li
82.1987 83.3877 li
82.8301 83.8618 li
83.5771 84.1172 li
84.3662 84.1294 li
1 1 1 rgb
f
84.3662 84.1294 mo
85.1206 83.897 li
85.7666 83.4429 li
86.2402 82.8115 li
86.4961 82.0649 li
86.5083 81.2754 li
86.2759 80.521 li
85.8218 79.8755 li
85.1904 79.4014 li
84.4434 79.146 li
83.6543 79.1338 li
82.8999 79.3657 li
82.2539 79.8198 li
81.7803 80.4512 li
81.5244 81.1982 li
81.5122 81.9878 li
81.7446 82.7422 li
82.1987 83.3877 li
82.8301 83.8618 li
83.5771 84.1172 li
84.3662 84.1294 li
0 0 0 rgb
@
102.715 98.2856 mo
103.469 98.0532 li
104.114 97.5991 li
104.588 96.9678 li
104.844 96.2207 li
104.855 95.4316 li
104.623 94.6772 li
104.17 94.0313 li
103.538 93.5576 li
102.791 93.3022 li
102.002 93.2896 li
101.248 93.522 li
100.602 93.9761 li
100.128 94.6074 li
99.873 95.3545 li
99.8604 96.1436 li
100.093 96.8979 li
100.547 97.5439 li
101.178 98.0176 li
101.925 98.2734 li
102.715 98.2856 li
1 1 1 rgb
f
102.715 98.2856 mo
103.469 98.0532 li
104.114 97.5991 li
104.588 96.9678 li
104.844 96.2207 li
104.855 95.4316 li
104.623 94.6772 li
104.17 94.0313 li
103.538 93.5576 li
102.791 93.3022 li
102.002 93.2896 li
101.248 93.522 li
100.602 93.9761 li
100.128 94.6074 li
99.873 95.3545 li
99.8604 96.1436 li
100.093 96.8979 li
100.547 97.5439 li
101.178 98.0176 li
101.925 98.2734 li
102.715 98.2856 li
0 0 0 rgb
@
106.307 70.1299 mo
107.061 69.8975 li
107.707 69.4434 li
108.18 68.812 li
108.436 68.0649 li
108.448 67.2759 li
108.216 66.5215 li
107.762 65.8755 li
107.131 65.4019 li
106.383 65.1465 li
105.594 65.1343 li
104.84 65.3662 li
104.193 65.8203 li
103.721 66.4517 li
103.465 67.1987 li
103.452 67.9878 li
103.685 68.7427 li
104.139 69.3882 li
104.77 69.8618 li
105.518 70.1177 li
106.307 70.1299 li
1 1 1 rgb
f
106.307 70.1299 mo
107.061 69.8975 li
107.707 69.4434 li
108.18 68.812 li
108.436 68.0649 li
108.448 67.2759 li
108.216 66.5215 li
107.762 65.8755 li
107.131 65.4019 li
106.383 65.1465 li
105.594 65.1343 li
104.84 65.3662 li
104.193 65.8203 li
103.721 66.4517 li
103.465 67.1987 li
103.452 67.9878 li
103.685 68.7427 li
104.139 69.3882 li
104.77 69.8618 li
105.518 70.1177 li
106.307 70.1299 li
0 0 0 rgb
@
85.5747 72.3438 mo
86.3291 72.1113 li
86.9751 71.6572 li
87.4487 71.0259 li
87.7046 70.2793 li
87.7168 69.4897 li
87.4844 68.7354 li
87.0303 68.0894 li
86.3989 67.6157 li
85.6519 67.3604 li
84.8628 67.3481 li
84.1084 67.5801 li
83.4624 68.0342 li
82.9888 68.6655 li
82.7334 69.4126 li
82.7207 70.2021 li
82.9531 70.9565 li
83.4072 71.6021 li
84.0386 72.0762 li
84.7856 72.3315 li
85.5747 72.3438 li
1 1 1 rgb
f
85.5747 72.3438 mo
86.3291 72.1113 li
86.9751 71.6572 li
87.4487 71.0259 li
87.7046 70.2793 li
87.7168 69.4897 li
87.4844 68.7354 li
87.0303 68.0894 li
86.3989 67.6157 li
85.6519 67.3604 li
84.8628 67.3481 li
84.1084 67.5801 li
83.4624 68.0342 li
82.9888 68.6655 li
82.7334 69.4126 li
82.7207 70.2021 li
82.9531 70.9565 li
83.4072 71.6021 li
84.0386 72.0762 li
84.7856 72.3315 li
85.5747 72.3438 li
0 0 0 rgb
@
66.916 95.5269 mo
67.6709 95.2944 li
68.3164 94.8403 li
68.7905 94.2095 li
69.0459 93.4624 li
69.0581 92.6729 li
68.8257 91.9185 li
68.3716 91.2729 li
67.7402 90.7988 li
66.9937 90.5435 li
66.2041 90.5313 li
65.4497 90.7632 li
64.8037 91.2173 li
64.3301 91.8491 li
64.0747 92.5957 li
64.0625 93.3853 li
64.2944 94.1396 li
64.7485 94.7852 li
65.3799 95.2593 li
66.127 95.5146 li
66.916 95.5269 li
1 1 1 rgb
f
66.916 95.5269 mo
67.6709 95.2944 li
68.3164 94.8403 li
68.7905 94.2095 li
69.0459 93.4624 li
69.0581 92.6729 li
68.8257 91.9185 li
68.3716 91.2729 li
67.7402 90.7988 li
66.9937 90.5435 li
66.2041 90.5313 li
65.4497 90.7632 li
64.8037 91.2173 li
64.3301 91.8491 li
64.0747 92.5957 li
64.0625 93.3853 li
64.2944 94.1396 li
64.7485 94.7852 li
65.3799 95.2593 li
66.127 95.5146 li
66.916 95.5269 li
0 0 0 rgb
@
118.35 75.1709 mo
119.104 74.939 li
119.75 74.4849 li
120.225 73.8535 li
120.48 73.1064 li
120.492 72.3169 li
120.26 71.5625 li
119.806 70.917 li
119.174 70.4429 li
118.428 70.1875 li
117.639 70.1753 li
116.884 70.4077 li
116.238 70.8618 li
115.764 71.4932 li
115.508 72.2397 li
115.496 73.0293 li
115.729 73.7837 li
116.183 74.4292 li
116.814 74.9033 li
117.561 75.1587 li
118.35 75.1709 li
1 1 1 rgb
f
118.35 75.1709 mo
119.104 74.939 li
119.75 74.4849 li
120.225 73.8535 li
120.48 73.1064 li
120.492 72.3169 li
120.26 71.5625 li
119.806 70.917 li
119.174 70.4429 li
118.428 70.1875 li
117.639 70.1753 li
116.884 70.4077 li
116.238 70.8618 li
115.764 71.4932 li
115.508 72.2397 li
115.496 73.0293 li
115.729 73.7837 li
116.183 74.4292 li
116.814 74.9033 li
117.561 75.1587 li
118.35 75.1709 li
0 0 0 rgb
@
84.4341 83.7529 mo
85.1885 83.5205 li
85.834 83.0664 li
86.3081 82.4351 li
86.5635 81.6885 li
86.5757 80.8989 li
86.3438 80.1445 li
85.8896 79.4985 li
85.2583 79.0249 li
84.5112 78.7695 li
83.7217 78.7573 li
82.9673 78.9893 li
82.3218 79.4434 li
81.8477 80.0747 li
81.5923 80.8218 li
81.5801 81.6113 li
81.8125 82.3657 li
82.2666 83.0112 li
82.8979 83.4854 li
83.6445 83.7407 li
84.4341 83.7529 li
1 1 1 rgb
f
84.4341 83.7529 mo
85.1885 83.5205 li
85.834 83.0664 li
86.3081 82.4351 li
86.5635 81.6885 li
86.5757 80.8989 li
86.3438 80.1445 li
85.8896 79.4985 li
85.2583 79.0249 li
84.5112 78.7695 li
83.7217 78.7573 li
82.9673 78.9893 li
82.3218 79.4434 li
81.8477 80.0747 li
81.5923 80.8218 li
81.5801 81.6113 li
81.8125 82.3657 li
82.2666 83.0112 li
82.8979 83.4854 li
83.6445 83.7407 li
84.4341 83.7529 li
0 0 0 rgb
@
94.4937 100.536 mo
95.248 100.304 li
95.8936 99.8496 li
96.3672 99.2183 li
96.623 98.4712 li
96.6348 97.6821 li
96.4023 96.9277 li
95.9492 96.2817 li
95.3174 95.8081 li
94.5708 95.5527 li
93.7813 95.5405 li
93.0269 95.7725 li
92.3813 96.2266 li
91.9072 96.8579 li
91.6519 97.605 li
91.6396 98.394 li
91.8721 99.1489 li
92.3257 99.7944 li
92.9575 100.268 li
93.7041 100.523 li
94.4937 100.536 li
1 1 1 rgb
f
94.4937 100.536 mo
95.248 100.304 li
95.8936 99.8496 li
96.3672 99.2183 li
96.623 98.4712 li
96.6348 97.6821 li
96.4023 96.9277 li
95.9492 96.2817 li
95.3174 95.8081 li
94.5708 95.5527 li
93.7813 95.5405 li
93.0269 95.7725 li
92.3813 96.2266 li
91.9072 96.8579 li
91.6519 97.605 li
91.6396 98.394 li
91.8721 99.1489 li
92.3257 99.7944 li
92.9575 100.268 li
93.7041 100.523 li
94.4937 100.536 li
0 0 0 rgb
@
132.454 90.501 mo
133.209 90.269 li
133.854 89.8149 li
134.328 89.1831 li
134.584 88.4365 li
134.596 87.647 li
134.363 86.8926 li
133.909 86.2471 li
133.277 85.7729 li
132.531 85.5176 li
131.742 85.5054 li
130.987 85.7378 li
130.342 86.1919 li
129.867 86.8228 li
129.612 87.5698 li
129.6 88.3594 li
129.832 89.1138 li
130.286 89.7593 li
130.918 90.2334 li
131.664 90.4888 li
132.454 90.501 li
1 1 1 rgb
f
132.454 90.501 mo
133.209 90.269 li
133.854 89.8149 li
134.328 89.1831 li
134.584 88.4365 li
134.596 87.647 li
134.363 86.8926 li
133.909 86.2471 li
133.277 85.7729 li
132.531 85.5176 li
131.742 85.5054 li
130.987 85.7378 li
130.342 86.1919 li
129.867 86.8228 li
129.612 87.5698 li
129.6 88.3594 li
129.832 89.1138 li
130.286 89.7593 li
130.918 90.2334 li
131.664 90.4888 li
132.454 90.501 li
0 0 0 rgb
@
116.135 71.3872 mo
116.889 71.1553 li
117.535 70.7012 li
118.009 70.0698 li
118.265 69.3228 li
118.277 68.5332 li
118.045 67.7788 li
117.59 67.1333 li
116.959 66.6592 li
116.212 66.4038 li
115.423 66.3916 li
114.668 66.624 li
114.022 67.0781 li
113.549 67.7095 li
113.293 68.4561 li
113.281 69.2456 li
113.514 70 li
113.967 70.646 li
114.599 71.1196 li
115.346 71.375 li
116.135 71.3872 li
1 1 1 rgb
f
116.135 71.3872 mo
116.889 71.1553 li
117.535 70.7012 li
118.009 70.0698 li
118.265 69.3228 li
118.277 68.5332 li
118.045 67.7788 li
117.59 67.1333 li
116.959 66.6592 li
116.212 66.4038 li
115.423 66.3916 li
114.668 66.624 li
114.022 67.0781 li
113.549 67.7095 li
113.293 68.4561 li
113.281 69.2456 li
113.514 70 li
113.967 70.646 li
114.599 71.1196 li
115.346 71.375 li
116.135 71.3872 li
0 0 0 rgb
@
95.4189 101.343 mo
96.1738 101.11 li
96.8193 100.656 li
97.293 100.025 li
97.5488 99.2778 li
97.5605 98.4888 li
97.3281 97.7344 li
96.875 97.0884 li
96.2432 96.6147 li
95.4961 96.3594 li
94.707 96.3472 li
93.9526 96.5791 li
93.3066 97.0332 li
92.833 97.6646 li
92.5771 98.4116 li
92.5649 99.2007 li
92.7974 99.9556 li
93.2515 100.602 li
93.8828 101.074 li
94.6299 101.33 li
95.4189 101.343 li
1 1 1 rgb
f
95.4189 101.343 mo
96.1738 101.11 li
96.8193 100.656 li
97.293 100.025 li
97.5488 99.2778 li
97.5605 98.4888 li
97.3281 97.7344 li
96.875 97.0884 li
96.2432 96.6147 li
95.4961 96.3594 li
94.707 96.3472 li
93.9526 96.5791 li
93.3066 97.0332 li
92.833 97.6646 li
92.5771 98.4116 li
92.5649 99.2007 li
92.7974 99.9556 li
93.2515 100.602 li
93.8828 101.074 li
94.6299 101.33 li
95.4189 101.343 li
0 0 0 rgb
@
96.2891 81.9673 mo
97.043 81.7354 li
97.6885 81.2813 li
98.1621 80.6499 li
98.418 79.9028 li
98.4297 79.1133 li
98.1982 78.3589 li
97.7441 77.7134 li
97.1123 77.2393 li
96.3652 76.9839 li
95.5762 76.9717 li
94.8218 77.2041 li
94.1763 77.6582 li
93.7021 78.2896 li
93.4468 79.0361 li
93.4346 79.8257 li
93.667 80.5801 li
94.1211 81.2261 li
94.7524 81.6997 li
95.499 81.9551 li
96.2891 81.9673 li
1 1 1 rgb
f
96.2891 81.9673 mo
97.043 81.7354 li
97.6885 81.2813 li
98.1621 80.6499 li
98.418 79.9028 li
98.4297 79.1133 li
98.1982 78.3589 li
97.7441 77.7134 li
97.1123 77.2393 li
96.3652 76.9839 li
95.5762 76.9717 li
94.8218 77.2041 li
94.1763 77.6582 li
93.7021 78.2896 li
93.4468 79.0361 li
93.4346 79.8257 li
93.667 80.5801 li
94.1211 81.2261 li
94.7524 81.6997 li
95.499 81.9551 li
96.2891 81.9673 li
0 0 0 rgb
@
108.525 89.6641 mo
109.28 89.4316 li
109.926 88.9775 li
110.399 88.3462 li
110.655 87.5991 li
110.668 86.8101 li
110.436 86.0557 li
109.98 85.4097 li
109.35 84.936 li
108.603 84.6802 li
107.813 84.668 li
107.059 84.9004 li
106.413 85.3545 li
105.939 85.9858 li
105.684 86.7329 li
105.672 87.522 li
105.904 88.2764 li
106.357 88.9224 li
106.989 89.396 li
107.736 89.6519 li
108.525 89.6641 li
1 1 1 rgb
f
108.525 89.6641 mo
109.28 89.4316 li
109.926 88.9775 li
110.399 88.3462 li
110.655 87.5991 li
110.668 86.8101 li
110.436 86.0557 li
109.98 85.4097 li
109.35 84.936 li
108.603 84.6802 li
107.813 84.668 li
107.059 84.9004 li
106.413 85.3545 li
105.939 85.9858 li
105.684 86.7329 li
105.672 87.522 li
105.904 88.2764 li
106.357 88.9224 li
106.989 89.396 li
107.736 89.6519 li
108.525 89.6641 li
0 0 0 rgb
@
113.897 106.993 mo
114.652 106.762 li
115.298 106.307 li
115.771 105.676 li
116.027 104.929 li
116.039 104.139 li
115.807 103.385 li
115.354 102.739 li
114.722 102.266 li
113.975 102.01 li
113.186 101.998 li
112.431 102.23 li
111.785 102.684 li
111.311 103.314 li
111.056 104.063 li
111.043 104.852 li
111.275 105.605 li
111.73 106.252 li
112.361 106.726 li
113.107 106.98 li
113.897 106.993 li
1 1 1 rgb
f
113.897 106.993 mo
114.652 106.762 li
115.298 106.307 li
115.771 105.676 li
116.027 104.929 li
116.039 104.139 li
115.807 103.385 li
115.354 102.739 li
114.722 102.266 li
113.975 102.01 li
113.186 101.998 li
112.431 102.23 li
111.785 102.684 li
111.311 103.314 li
111.056 104.063 li
111.043 104.852 li
111.275 105.605 li
111.73 106.252 li
112.361 106.726 li
113.107 106.98 li
113.897 106.993 li
0 0 0 rgb
@
115.078 62.1846 mo
115.832 61.9526 li
116.479 61.4985 li
116.952 60.8667 li
117.207 60.1201 li
117.22 59.3306 li
116.988 58.5762 li
116.533 57.9307 li
115.902 57.4565 li
115.155 57.2012 li
114.365 57.189 li
113.611 57.4214 li
112.966 57.8755 li
112.492 58.5063 li
112.236 59.2534 li
112.225 60.043 li
112.457 60.7974 li
112.91 61.4429 li
113.542 61.917 li
114.289 62.1724 li
115.078 62.1846 li
1 1 1 rgb
f
115.078 62.1846 mo
115.832 61.9526 li
116.479 61.4985 li
116.952 60.8667 li
117.207 60.1201 li
117.22 59.3306 li
116.988 58.5762 li
116.533 57.9307 li
115.902 57.4565 li
115.155 57.2012 li
114.365 57.189 li
113.611 57.4214 li
112.966 57.8755 li
112.492 58.5063 li
112.236 59.2534 li
112.225 60.043 li
112.457 60.7974 li
112.91 61.4429 li
113.542 61.917 li
114.289 62.1724 li
115.078 62.1846 li
0 0 0 rgb
@
103.727 115.744 mo
104.48 115.512 li
105.127 115.057 li
105.601 114.426 li
105.855 113.679 li
105.868 112.89 li
105.636 112.135 li
105.182 111.489 li
104.551 111.016 li
103.804 110.76 li
103.014 110.748 li
102.26 110.98 li
101.614 111.434 li
101.141 112.065 li
100.885 112.813 li
100.873 113.602 li
101.104 114.355 li
101.559 115.002 li
102.19 115.476 li
102.938 115.731 li
103.727 115.744 li
1 1 1 rgb
f
103.727 115.744 mo
104.48 115.512 li
105.127 115.057 li
105.601 114.426 li
105.855 113.679 li
105.868 112.89 li
105.636 112.135 li
105.182 111.489 li
104.551 111.016 li
103.804 110.76 li
103.014 110.748 li
102.26 110.98 li
101.614 111.434 li
101.141 112.065 li
100.885 112.813 li
100.873 113.602 li
101.104 114.355 li
101.559 115.002 li
102.19 115.476 li
102.938 115.731 li
103.727 115.744 li
0 0 0 rgb
@
74.668 93.4658 mo
75.4229 93.2334 li
76.0684 92.7793 li
76.5425 92.1479 li
76.7979 91.4009 li
76.8101 90.6118 li
76.5776 89.8574 li
76.1235 89.2114 li
75.4922 88.7378 li
74.7456 88.4819 li
73.9561 88.4697 li
73.2017 88.7021 li
72.5557 89.1563 li
72.082 89.7876 li
71.8267 90.5347 li
71.8145 91.3237 li
72.0464 92.0781 li
72.5005 92.7241 li
73.1318 93.1978 li
73.8789 93.4536 li
74.668 93.4658 li
1 1 1 rgb
f
74.668 93.4658 mo
75.4229 93.2334 li
76.0684 92.7793 li
76.5425 92.1479 li
76.7979 91.4009 li
76.8101 90.6118 li
76.5776 89.8574 li
76.1235 89.2114 li
75.4922 88.7378 li
74.7456 88.4819 li
73.9561 88.4697 li
73.2017 88.7021 li
72.5557 89.1563 li
72.082 89.7876 li
71.8267 90.5347 li
71.8145 91.3237 li
72.0464 92.0781 li
72.5005 92.7241 li
73.1318 93.1978 li
73.8789 93.4536 li
74.668 93.4658 li
0 0 0 rgb
@
111.576 84.1118 mo
112.33 83.8799 li
112.977 83.4258 li
113.449 82.7944 li
113.705 82.0474 li
113.718 81.2583 li
113.485 80.5034 li
113.031 79.8579 li
112.4 79.3843 li
111.652 79.1284 li
110.863 79.1162 li
110.109 79.3486 li
109.463 79.8027 li
108.99 80.4341 li
108.734 81.1812 li
108.722 81.9702 li
108.954 82.7246 li
109.408 83.3706 li
110.039 83.8442 li
110.787 84.0996 li
111.576 84.1118 li
1 1 1 rgb
f
111.576 84.1118 mo
112.33 83.8799 li
112.977 83.4258 li
113.449 82.7944 li
113.705 82.0474 li
113.718 81.2583 li
113.485 80.5034 li
113.031 79.8579 li
112.4 79.3843 li
111.652 79.1284 li
110.863 79.1162 li
110.109 79.3486 li
109.463 79.8027 li
108.99 80.4341 li
108.734 81.1812 li
108.722 81.9702 li
108.954 82.7246 li
109.408 83.3706 li
110.039 83.8442 li
110.787 84.0996 li
111.576 84.1118 li
0 0 0 rgb
@
108.818 92 mo
109.573 91.7681 li
110.219 91.314 li
110.693 90.6826 li
110.948 89.9355 li
110.961 89.146 li
110.729 88.3916 li
110.274 87.7461 li
109.643 87.272 li
108.896 87.0166 li
108.106 87.0044 li
107.352 87.2368 li
106.707 87.6909 li
106.232 88.3223 li
105.977 89.0688 li
105.965 89.8584 li
106.197 90.6128 li
106.651 91.2583 li
107.283 91.7324 li
108.029 91.9878 li
108.818 92 li
1 1 1 rgb
f
108.818 92 mo
109.573 91.7681 li
110.219 91.314 li
110.693 90.6826 li
110.948 89.9355 li
110.961 89.146 li
110.729 88.3916 li
110.274 87.7461 li
109.643 87.272 li
108.896 87.0166 li
108.106 87.0044 li
107.352 87.2368 li
106.707 87.6909 li
106.232 88.3223 li
105.977 89.0688 li
105.965 89.8584 li
106.197 90.6128 li
106.651 91.2583 li
107.283 91.7324 li
108.029 91.9878 li
108.818 92 li
0 0 0 rgb
@
112.46 48.0317 mo
113.215 47.7993 li
113.859 47.3452 li
114.334 46.7139 li
114.59 45.9673 li
114.602 45.1777 li
114.369 44.4233 li
113.916 43.7773 li
113.283 43.3037 li
112.537 43.0483 li
111.748 43.0361 li
110.993 43.2681 li
110.348 43.7222 li
109.873 44.3535 li
109.618 45.1006 li
109.605 45.8901 li
109.838 46.6445 li
110.292 47.29 li
110.924 47.7642 li
111.67 48.0195 li
112.46 48.0317 li
1 1 1 rgb
f
112.46 48.0317 mo
113.215 47.7993 li
113.859 47.3452 li
114.334 46.7139 li
114.59 45.9673 li
114.602 45.1777 li
114.369 44.4233 li
113.916 43.7773 li
113.283 43.3037 li
112.537 43.0483 li
111.748 43.0361 li
110.993 43.2681 li
110.348 43.7222 li
109.873 44.3535 li
109.618 45.1006 li
109.605 45.8901 li
109.838 46.6445 li
110.292 47.29 li
110.924 47.7642 li
111.67 48.0195 li
112.46 48.0317 li
0 0 0 rgb
@
87.7632 82.5112 mo
88.5176 82.2788 li
89.1636 81.8247 li
89.6372 81.1934 li
89.8931 80.4463 li
89.9053 79.6572 li
89.6729 78.9028 li
89.2188 78.2568 li
88.5874 77.7832 li
87.8403 77.5278 li
87.0513 77.5151 li
86.2969 77.7476 li
85.6509 78.2017 li
85.1772 78.833 li
84.9214 79.5801 li
84.9092 80.3691 li
85.1416 81.1235 li
85.5957 81.7695 li
86.2271 82.2432 li
86.9741 82.499 li
87.7632 82.5112 li
1 1 1 rgb
f
87.7632 82.5112 mo
88.5176 82.2788 li
89.1636 81.8247 li
89.6372 81.1934 li
89.8931 80.4463 li
89.9053 79.6572 li
89.6729 78.9028 li
89.2188 78.2568 li
88.5874 77.7832 li
87.8403 77.5278 li
87.0513 77.5151 li
86.2969 77.7476 li
85.6509 78.2017 li
85.1772 78.833 li
84.9214 79.5801 li
84.9092 80.3691 li
85.1416 81.1235 li
85.5957 81.7695 li
86.2271 82.2432 li
86.9741 82.499 li
87.7632 82.5112 li
0 0 0 rgb
@
99.8477 107.252 mo
100.603 107.02 li
101.248 106.566 li
101.723 105.935 li
101.979 105.188 li
101.99 104.398 li
101.758 103.645 li
101.304 102.998 li
100.672 102.524 li
99.9258 102.27 li
99.1367 102.257 li
98.3818 102.488 li
97.7363 102.943 li
97.2617 103.574 li
97.0059 104.321 li
96.9941 105.111 li
97.2266 105.865 li
97.6807 106.511 li
98.3125 106.984 li
99.0586 107.24 li
99.8477 107.252 li
1 1 1 rgb
f
99.8477 107.252 mo
100.603 107.02 li
101.248 106.566 li
101.723 105.935 li
101.979 105.188 li
101.99 104.398 li
101.758 103.645 li
101.304 102.998 li
100.672 102.524 li
99.9258 102.27 li
99.1367 102.257 li
98.3818 102.488 li
97.7363 102.943 li
97.2617 103.574 li
97.0059 104.321 li
96.9941 105.111 li
97.2266 105.865 li
97.6807 106.511 li
98.3125 106.984 li
99.0586 107.24 li
99.8477 107.252 li
0 0 0 rgb
@
101.532 72.2173 mo
102.287 71.9849 li
102.932 71.5308 li
103.406 70.8994 li
103.662 70.1528 li
103.674 69.3633 li
103.441 68.6089 li
102.988 67.9629 li
102.355 67.4893 li
101.609 67.2339 li
100.82 67.2217 li
100.065 67.4536 li
99.4199 67.9077 li
98.9453 68.5391 li
98.6904 69.2861 li
98.6777 70.0757 li
98.9102 70.8301 li
99.3643 71.4756 li
99.9961 71.9497 li
100.742 72.2051 li
101.532 72.2173 li
1 1 1 rgb
f
101.532 72.2173 mo
102.287 71.9849 li
102.932 71.5308 li
103.406 70.8994 li
103.662 70.1528 li
103.674 69.3633 li
103.441 68.6089 li
102.988 67.9629 li
102.355 67.4893 li
101.609 67.2339 li
100.82 67.2217 li
100.065 67.4536 li
99.4199 67.9077 li
98.9453 68.5391 li
98.6904 69.2861 li
98.6777 70.0757 li
98.9102 70.8301 li
99.3643 71.4756 li
99.9961 71.9497 li
100.742 72.2051 li
101.532 72.2173 li
0 0 0 rgb
@
96.2109 63.6016 mo
96.9648 63.3691 li
97.6104 62.915 li
98.084 62.2837 li
98.3398 61.5366 li
98.3516 60.7476 li
98.1201 59.9932 li
97.666 59.3472 li
97.0352 58.8735 li
96.2871 58.6182 li
95.498 58.606 li
94.7437 58.8379 li
94.0981 59.292 li
93.624 59.9233 li
93.3687 60.6704 li
93.3564 61.4595 li
93.5889 62.2144 li
94.043 62.8599 li
94.6743 63.3335 li
95.4209 63.5894 li
96.2109 63.6016 li
1 1 1 rgb
f
96.2109 63.6016 mo
96.9648 63.3691 li
97.6104 62.915 li
98.084 62.2837 li
98.3398 61.5366 li
98.3516 60.7476 li
98.1201 59.9932 li
97.666 59.3472 li
97.0352 58.8735 li
96.2871 58.6182 li
95.498 58.606 li
94.7437 58.8379 li
94.0981 59.292 li
93.624 59.9233 li
93.3687 60.6704 li
93.3564 61.4595 li
93.5889 62.2144 li
94.043 62.8599 li
94.6743 63.3335 li
95.4209 63.5894 li
96.2109 63.6016 li
0 0 0 rgb
@
100.881 107.098 mo
101.636 106.865 li
102.281 106.41 li
102.756 105.779 li
103.011 105.033 li
103.023 104.243 li
102.791 103.488 li
102.337 102.844 li
101.705 102.369 li
100.959 102.113 li
100.169 102.102 li
99.4141 102.334 li
98.7695 102.787 li
98.2949 103.419 li
98.0391 104.166 li
98.0273 104.955 li
98.2598 105.71 li
98.7139 106.355 li
99.3457 106.83 li
100.092 107.085 li
100.881 107.098 li
1 1 1 rgb
f
100.881 107.098 mo
101.636 106.865 li
102.281 106.41 li
102.756 105.779 li
103.011 105.033 li
103.023 104.243 li
102.791 103.488 li
102.337 102.844 li
101.705 102.369 li
100.959 102.113 li
100.169 102.102 li
99.4141 102.334 li
98.7695 102.787 li
98.2949 103.419 li
98.0391 104.166 li
98.0273 104.955 li
98.2598 105.71 li
98.7139 106.355 li
99.3457 106.83 li
100.092 107.085 li
100.881 107.098 li
0 0 0 rgb
@
93.5439 87.9224 mo
94.2983 87.6899 li
94.9438 87.2358 li
95.418 86.605 li
95.6738 85.8579 li
95.6855 85.0684 li
95.4531 84.314 li
94.999 83.6685 li
94.3677 83.1943 li
93.6211 82.939 li
92.8315 82.9268 li
92.0771 83.1587 li
91.4316 83.6128 li
90.9575 84.2446 li
90.7021 84.9912 li
90.6899 85.7808 li
90.9219 86.5352 li
91.376 87.1807 li
92.0073 87.6548 li
92.7544 87.9102 li
93.5439 87.9224 li
1 1 1 rgb
f
93.5439 87.9224 mo
94.2983 87.6899 li
94.9438 87.2358 li
95.418 86.605 li
95.6738 85.8579 li
95.6855 85.0684 li
95.4531 84.314 li
94.999 83.6685 li
94.3677 83.1943 li
93.6211 82.939 li
92.8315 82.9268 li
92.0771 83.1587 li
91.4316 83.6128 li
90.9575 84.2446 li
90.7021 84.9912 li
90.6899 85.7808 li
90.9219 86.5352 li
91.376 87.1807 li
92.0073 87.6548 li
92.7544 87.9102 li
93.5439 87.9224 li
0 0 0 rgb
@
94.6006 93.0171 mo
95.355 92.7847 li
96.001 92.3306 li
96.4746 91.6992 li
96.7305 90.9526 li
96.7422 90.1631 li
96.5098 89.4087 li
96.0566 88.7627 li
95.4248 88.2891 li
94.6777 88.0337 li
93.8887 88.0215 li
93.1343 88.2534 li
92.4883 88.7075 li
92.0146 89.3389 li
91.7588 90.0859 li
91.7466 90.8755 li
91.979 91.6299 li
92.4331 92.2754 li
93.0645 92.7495 li
93.8115 93.0049 li
94.6006 93.0171 li
1 1 1 rgb
f
94.6006 93.0171 mo
95.355 92.7847 li
96.001 92.3306 li
96.4746 91.6992 li
96.7305 90.9526 li
96.7422 90.1631 li
96.5098 89.4087 li
96.0566 88.7627 li
95.4248 88.2891 li
94.6777 88.0337 li
93.8887 88.0215 li
93.1343 88.2534 li
92.4883 88.7075 li
92.0146 89.3389 li
91.7588 90.0859 li
91.7466 90.8755 li
91.979 91.6299 li
92.4331 92.2754 li
93.0645 92.7495 li
93.8115 93.0049 li
94.6006 93.0171 li
0 0 0 rgb
@
96.3965 84.5474 mo
97.1514 84.3154 li
97.7969 83.8613 li
98.2715 83.23 li
98.5264 82.4829 li
98.5391 81.6938 li
98.3066 80.939 li
97.8516 80.2935 li
97.2207 79.8198 li
96.4746 79.564 li
95.6846 79.5518 li
94.9302 79.7842 li
94.2842 80.2383 li
93.8105 80.8696 li
93.5552 81.6167 li
93.543 82.4058 li
93.7749 83.1602 li
94.229 83.8062 li
94.8604 84.2798 li
95.6074 84.5356 li
96.3965 84.5474 li
1 1 1 rgb
f
96.3965 84.5474 mo
97.1514 84.3154 li
97.7969 83.8613 li
98.2715 83.23 li
98.5264 82.4829 li
98.5391 81.6938 li
98.3066 80.939 li
97.8516 80.2935 li
97.2207 79.8198 li
96.4746 79.564 li
95.6846 79.5518 li
94.9302 79.7842 li
94.2842 80.2383 li
93.8105 80.8696 li
93.5552 81.6167 li
93.543 82.4058 li
93.7749 83.1602 li
94.229 83.8062 li
94.8604 84.2798 li
95.6074 84.5356 li
96.3965 84.5474 li
0 0 0 rgb
@
86.8379 80.9531 mo
87.5923 80.7207 li
88.2383 80.2666 li
88.7119 79.6353 li
88.9678 78.8887 li
88.98 78.0991 li
88.7476 77.3447 li
88.2935 76.6987 li
87.6621 76.2251 li
86.915 75.9697 li
86.126 75.9575 li
85.3716 76.1895 li
84.7256 76.6436 li
84.252 77.2749 li
83.9961 78.022 li
83.9839 78.8115 li
84.2163 79.5659 li
84.6704 80.2114 li
85.3018 80.6855 li
86.0488 80.9409 li
86.8379 80.9531 li
1 1 1 rgb
f
86.8379 80.9531 mo
87.5923 80.7207 li
88.2383 80.2666 li
88.7119 79.6353 li
88.9678 78.8887 li
88.98 78.0991 li
88.7476 77.3447 li
88.2935 76.6987 li
87.6621 76.2251 li
86.915 75.9697 li
86.126 75.9575 li
85.3716 76.1895 li
84.7256 76.6436 li
84.252 77.2749 li
83.9961 78.022 li
83.9839 78.8115 li
84.2163 79.5659 li
84.6704 80.2114 li
85.3018 80.6855 li
86.0488 80.9409 li
86.8379 80.9531 li
0 0 0 rgb
@
103.902 85.0166 mo
104.657 84.7847 li
105.303 84.3306 li
105.777 83.6992 li
106.032 82.9521 li
106.045 82.1626 li
105.813 81.4082 li
105.358 80.7627 li
104.727 80.2886 li
103.98 80.0332 li
103.19 80.021 li
102.436 80.2534 li
101.791 80.7075 li
101.316 81.3389 li
101.061 82.0854 li
101.049 82.875 li
101.281 83.6294 li
101.735 84.2754 li
102.367 84.749 li
103.113 85.0044 li
103.902 85.0166 li
1 1 1 rgb
f
103.902 85.0166 mo
104.657 84.7847 li
105.303 84.3306 li
105.777 83.6992 li
106.032 82.9521 li
106.045 82.1626 li
105.813 81.4082 li
105.358 80.7627 li
104.727 80.2886 li
103.98 80.0332 li
103.19 80.021 li
102.436 80.2534 li
101.791 80.7075 li
101.316 81.3389 li
101.061 82.0854 li
101.049 82.875 li
101.281 83.6294 li
101.735 84.2754 li
102.367 84.749 li
103.113 85.0044 li
103.902 85.0166 li
0 0 0 rgb
@
71.6675 65.2915 mo
72.4219 65.0591 li
73.0674 64.605 li
73.5415 63.9736 li
73.7969 63.2266 li
73.8091 62.4375 li
73.5771 61.6831 li
73.123 61.0371 li
72.4917 60.5635 li
71.7446 60.3076 li
70.9551 60.2954 li
70.2007 60.5278 li
69.5552 60.9819 li
69.0811 61.6133 li
68.8257 62.3604 li
68.8135 63.1494 li
69.0459 63.9038 li
69.5 64.5498 li
70.1313 65.0234 li
70.8779 65.2793 li
71.6675 65.2915 li
1 1 1 rgb
f
71.6675 65.2915 mo
72.4219 65.0591 li
73.0674 64.605 li
73.5415 63.9736 li
73.7969 63.2266 li
73.8091 62.4375 li
73.5771 61.6831 li
73.123 61.0371 li
72.4917 60.5635 li
71.7446 60.3076 li
70.9551 60.2954 li
70.2007 60.5278 li
69.5552 60.9819 li
69.0811 61.6133 li
68.8257 62.3604 li
68.8135 63.1494 li
69.0459 63.9038 li
69.5 64.5498 li
70.1313 65.0234 li
70.8779 65.2793 li
71.6675 65.2915 li
0 0 0 rgb
@
93.2227 58.21 mo
93.9775 57.9775 li
94.623 57.5234 li
95.0967 56.8921 li
95.3525 56.1455 li
95.3647 55.356 li
95.1323 54.6016 li
94.6782 53.9556 li
94.0469 53.4819 li
93.2998 53.2266 li
92.5107 53.2144 li
91.7563 53.4463 li
91.1104 53.9004 li
90.6367 54.5317 li
90.3813 55.2788 li
90.3691 56.0684 li
90.6011 56.8228 li
91.0552 57.4683 li
91.6865 57.9424 li
92.4336 58.1978 li
93.2227 58.21 li
1 1 1 rgb
f
93.2227 58.21 mo
93.9775 57.9775 li
94.623 57.5234 li
95.0967 56.8921 li
95.3525 56.1455 li
95.3647 55.356 li
95.1323 54.6016 li
94.6782 53.9556 li
94.0469 53.4819 li
93.2998 53.2266 li
92.5107 53.2144 li
91.7563 53.4463 li
91.1104 53.9004 li
90.6367 54.5317 li
90.3813 55.2788 li
90.3691 56.0684 li
90.6011 56.8228 li
91.0552 57.4683 li
91.6865 57.9424 li
92.4336 58.1978 li
93.2227 58.21 li
0 0 0 rgb
@
97.8223 99.5693 mo
98.5762 99.3374 li
99.2227 98.8833 li
99.6963 98.252 li
99.9512 97.5049 li
99.9639 96.7153 li
99.7324 95.9609 li
99.2773 95.3154 li
98.6465 94.8413 li
97.8994 94.5859 li
97.1094 94.5737 li
96.3555 94.8062 li
95.71 95.2603 li
95.2358 95.8916 li
94.9805 96.6382 li
94.9683 97.4277 li
95.2007 98.1821 li
95.6543 98.8281 li
96.2861 99.3018 li
97.0332 99.5571 li
97.8223 99.5693 li
1 1 1 rgb
f
97.8223 99.5693 mo
98.5762 99.3374 li
99.2227 98.8833 li
99.6963 98.252 li
99.9512 97.5049 li
99.9639 96.7153 li
99.7324 95.9609 li
99.2773 95.3154 li
98.6465 94.8413 li
97.8994 94.5859 li
97.1094 94.5737 li
96.3555 94.8062 li
95.71 95.2603 li
95.2358 95.8916 li
94.9805 96.6382 li
94.9683 97.4277 li
95.2007 98.1821 li
95.6543 98.8281 li
96.2861 99.3018 li
97.0332 99.5571 li
97.8223 99.5693 li
0 0 0 rgb
@
123.43 97.1309 mo
124.185 96.8984 li
124.83 96.4443 li
125.305 95.813 li
125.56 95.0659 li
125.572 94.2769 li
125.34 93.5225 li
124.886 92.8765 li
124.254 92.4028 li
123.508 92.1475 li
122.718 92.1353 li
121.963 92.3672 li
121.318 92.8213 li
120.844 93.4526 li
120.588 94.1997 li
120.576 94.9888 li
120.809 95.7437 li
121.263 96.3892 li
121.895 96.8628 li
122.641 97.1187 li
123.43 97.1309 li
1 1 1 rgb
f
123.43 97.1309 mo
124.185 96.8984 li
124.83 96.4443 li
125.305 95.813 li
125.56 95.0659 li
125.572 94.2769 li
125.34 93.5225 li
124.886 92.8765 li
124.254 92.4028 li
123.508 92.1475 li
122.718 92.1353 li
121.963 92.3672 li
121.318 92.8213 li
120.844 93.4526 li
120.588 94.1997 li
120.576 94.9888 li
120.809 95.7437 li
121.263 96.3892 li
121.895 96.8628 li
122.641 97.1187 li
123.43 97.1309 li
0 0 0 rgb
@
91.9346 71.2388 mo
92.689 71.0063 li
93.335 70.5522 li
93.8086 69.9214 li
94.064 69.1743 li
94.0762 68.3848 li
93.8442 67.6304 li
93.3901 66.9849 li
92.7588 66.5107 li
92.0117 66.2554 li
91.2227 66.2432 li
90.4678 66.4751 li
89.8223 66.9292 li
89.3486 67.561 li
89.0928 68.3076 li
89.0806 69.0972 li
89.313 69.8516 li
89.7671 70.4971 li
90.3984 70.9712 li
91.1455 71.2266 li
91.9346 71.2388 li
1 1 1 rgb
f
91.9346 71.2388 mo
92.689 71.0063 li
93.335 70.5522 li
93.8086 69.9214 li
94.064 69.1743 li
94.0762 68.3848 li
93.8442 67.6304 li
93.3901 66.9849 li
92.7588 66.5107 li
92.0117 66.2554 li
91.2227 66.2432 li
90.4678 66.4751 li
89.8223 66.9292 li
89.3486 67.561 li
89.0928 68.3076 li
89.0806 69.0972 li
89.313 69.8516 li
89.7671 70.4971 li
90.3984 70.9712 li
91.1455 71.2266 li
91.9346 71.2388 li
0 0 0 rgb
@
107.619 95.2134 mo
108.373 94.981 li
109.02 94.5269 li
109.492 93.896 li
109.748 93.1489 li
109.761 92.3594 li
109.528 91.605 li
109.074 90.9595 li
108.443 90.4854 li
107.695 90.23 li
106.906 90.2178 li
106.152 90.4497 li
105.506 90.9038 li
105.033 91.5356 li
104.777 92.2822 li
104.765 93.0718 li
104.997 93.8262 li
105.451 94.4717 li
106.082 94.9458 li
106.83 95.2012 li
107.619 95.2134 li
1 1 1 rgb
f
107.619 95.2134 mo
108.373 94.981 li
109.02 94.5269 li
109.492 93.896 li
109.748 93.1489 li
109.761 92.3594 li
109.528 91.605 li
109.074 90.9595 li
108.443 90.4854 li
107.695 90.23 li
106.906 90.2178 li
106.152 90.4497 li
105.506 90.9038 li
105.033 91.5356 li
104.777 92.2822 li
104.765 93.0718 li
104.997 93.8262 li
105.451 94.4717 li
106.082 94.9458 li
106.83 95.2012 li
107.619 95.2134 li
0 0 0 rgb
@
100.188 86.3335 mo
100.942 86.1016 li
101.588 85.6475 li
102.063 85.0161 li
102.317 84.269 li
102.33 83.4795 li
102.098 82.7251 li
101.644 82.0796 li
101.012 81.6055 li
100.266 81.3501 li
99.4756 81.3379 li
98.7207 81.5703 li
98.0762 82.0244 li
97.6016 82.6558 li
97.3457 83.4023 li
97.334 84.1919 li
97.5664 84.9463 li
98.0205 85.5923 li
98.6523 86.0659 li
99.3984 86.3213 li
100.188 86.3335 li
1 1 1 rgb
f
100.188 86.3335 mo
100.942 86.1016 li
101.588 85.6475 li
102.063 85.0161 li
102.317 84.269 li
102.33 83.4795 li
102.098 82.7251 li
101.644 82.0796 li
101.012 81.6055 li
100.266 81.3501 li
99.4756 81.3379 li
98.7207 81.5703 li
98.0762 82.0244 li
97.6016 82.6558 li
97.3457 83.4023 li
97.334 84.1919 li
97.5664 84.9463 li
98.0205 85.5923 li
98.6523 86.0659 li
99.3984 86.3213 li
100.188 86.3335 li
0 0 0 rgb
@
116.415 85.9351 mo
117.17 85.7031 li
117.815 85.249 li
118.289 84.6177 li
118.545 83.8706 li
118.557 83.0815 li
118.324 82.3267 li
117.871 81.6812 li
117.239 81.2075 li
116.492 80.9517 li
115.703 80.9395 li
114.949 81.1719 li
114.303 81.626 li
113.829 82.2573 li
113.573 83.0044 li
113.561 83.7935 li
113.793 84.5479 li
114.248 85.1938 li
114.879 85.6675 li
115.626 85.9229 li
116.415 85.9351 li
1 1 1 rgb
f
116.415 85.9351 mo
117.17 85.7031 li
117.815 85.249 li
118.289 84.6177 li
118.545 83.8706 li
118.557 83.0815 li
118.324 82.3267 li
117.871 81.6812 li
117.239 81.2075 li
116.492 80.9517 li
115.703 80.9395 li
114.949 81.1719 li
114.303 81.626 li
113.829 82.2573 li
113.573 83.0044 li
113.561 83.7935 li
113.793 84.5479 li
114.248 85.1938 li
114.879 85.6675 li
115.626 85.9229 li
116.415 85.9351 li
0 0 0 rgb
@
99.2764 90.1519 mo
100.031 89.9194 li
100.677 89.4653 li
101.15 88.834 li
101.406 88.0869 li
101.418 87.2979 li
101.186 86.5435 li
100.732 85.8975 li
100.101 85.4238 li
99.3535 85.168 li
98.5645 85.1558 li
97.8096 85.3882 li
97.1641 85.8423 li
96.6895 86.4736 li
96.4346 87.2207 li
96.4219 88.0098 li
96.6543 88.7642 li
97.1094 89.4102 li
97.7402 89.8838 li
98.4863 90.1392 li
99.2764 90.1519 li
1 1 1 rgb
f
99.2764 90.1519 mo
100.031 89.9194 li
100.677 89.4653 li
101.15 88.834 li
101.406 88.0869 li
101.418 87.2979 li
101.186 86.5435 li
100.732 85.8975 li
100.101 85.4238 li
99.3535 85.168 li
98.5645 85.1558 li
97.8096 85.3882 li
97.1641 85.8423 li
96.6895 86.4736 li
96.4346 87.2207 li
96.4219 88.0098 li
96.6543 88.7642 li
97.1094 89.4102 li
97.7402 89.8838 li
98.4863 90.1392 li
99.2764 90.1519 li
0 0 0 rgb
@
103.835 85.6245 mo
104.59 85.3921 li
105.234 84.938 li
105.709 84.3066 li
105.965 83.5601 li
105.977 82.7705 li
105.744 82.0161 li
105.29 81.3701 li
104.658 80.8965 li
103.912 80.6411 li
103.123 80.6289 li
102.368 80.8608 li
101.723 81.3149 li
101.248 81.9463 li
100.993 82.6934 li
100.98 83.4829 li
101.213 84.2373 li
101.667 84.8828 li
102.299 85.3569 li
103.045 85.6123 li
103.835 85.6245 li
1 1 1 rgb
f
103.835 85.6245 mo
104.59 85.3921 li
105.234 84.938 li
105.709 84.3066 li
105.965 83.5601 li
105.977 82.7705 li
105.744 82.0161 li
105.29 81.3701 li
104.658 80.8965 li
103.912 80.6411 li
103.123 80.6289 li
102.368 80.8608 li
101.723 81.3149 li
101.248 81.9463 li
100.993 82.6934 li
100.98 83.4829 li
101.213 84.2373 li
101.667 84.8828 li
102.299 85.3569 li
103.045 85.6123 li
103.835 85.6245 li
0 0 0 rgb
@
117.152 88.3506 mo
117.907 88.1187 li
118.553 87.6646 li
119.027 87.0332 li
119.283 86.2861 li
119.295 85.4966 li
119.063 84.7422 li
118.608 84.0967 li
117.977 83.6226 li
117.23 83.3672 li
116.441 83.355 li
115.687 83.5874 li
115.041 84.0415 li
114.566 84.6729 li
114.312 85.4194 li
114.299 86.209 li
114.531 86.9634 li
114.985 87.6089 li
115.617 88.083 li
116.363 88.3384 li
117.152 88.3506 li
1 1 1 rgb
f
117.152 88.3506 mo
117.907 88.1187 li
118.553 87.6646 li
119.027 87.0332 li
119.283 86.2861 li
119.295 85.4966 li
119.063 84.7422 li
118.608 84.0967 li
117.977 83.6226 li
117.23 83.3672 li
116.441 83.355 li
115.687 83.5874 li
115.041 84.0415 li
114.566 84.6729 li
114.312 85.4194 li
114.299 86.209 li
114.531 86.9634 li
114.985 87.6089 li
115.617 88.083 li
116.363 88.3384 li
117.152 88.3506 li
0 0 0 rgb
@
89.3374 74.6035 mo
90.0918 74.3711 li
90.7373 73.917 li
91.2114 73.2856 li
91.4668 72.5386 li
91.479 71.7495 li
91.2471 70.9951 li
90.793 70.3491 li
90.1616 69.8755 li
89.4146 69.6201 li
88.625 69.6079 li
87.8706 69.8398 li
87.2251 70.2939 li
86.751 70.9253 li
86.4956 71.6724 li
86.4834 72.4614 li
86.7158 73.2163 li
87.1699 73.8618 li
87.8013 74.3354 li
88.5479 74.5913 li
89.3374 74.6035 li
1 1 1 rgb
f
89.3374 74.6035 mo
90.0918 74.3711 li
90.7373 73.917 li
91.2114 73.2856 li
91.4668 72.5386 li
91.479 71.7495 li
91.2471 70.9951 li
90.793 70.3491 li
90.1616 69.8755 li
89.4146 69.6201 li
88.625 69.6079 li
87.8706 69.8398 li
87.2251 70.2939 li
86.751 70.9253 li
86.4956 71.6724 li
86.4834 72.4614 li
86.7158 73.2163 li
87.1699 73.8618 li
87.8013 74.3354 li
88.5479 74.5913 li
89.3374 74.6035 li
0 0 0 rgb
@
99.6611 79.6611 mo
100.416 79.4287 li
101.062 78.9746 li
101.535 78.3433 li
101.791 77.5967 li
101.803 76.8071 li
101.57 76.0527 li
101.117 75.4067 li
100.485 74.9331 li
99.7383 74.6777 li
98.9492 74.6655 li
98.1943 74.8975 li
97.5488 75.3516 li
97.0742 75.9829 li
96.8193 76.73 li
96.8066 77.5195 li
97.0391 78.2739 li
97.4941 78.9194 li
98.125 79.3936 li
98.8711 79.6489 li
99.6611 79.6611 li
1 1 1 rgb
f
99.6611 79.6611 mo
100.416 79.4287 li
101.062 78.9746 li
101.535 78.3433 li
101.791 77.5967 li
101.803 76.8071 li
101.57 76.0527 li
101.117 75.4067 li
100.485 74.9331 li
99.7383 74.6777 li
98.9492 74.6655 li
98.1943 74.8975 li
97.5488 75.3516 li
97.0742 75.9829 li
96.8193 76.73 li
96.8066 77.5195 li
97.0391 78.2739 li
97.4941 78.9194 li
98.125 79.3936 li
98.8711 79.6489 li
99.6611 79.6611 li
0 0 0 rgb
@
115.807 81.2935 mo
116.561 81.061 li
117.206 80.6069 li
117.68 79.9761 li
117.936 79.229 li
117.947 78.4395 li
117.715 77.6851 li
117.262 77.0396 li
116.63 76.5654 li
115.883 76.3101 li
115.094 76.2979 li
114.34 76.5298 li
113.693 76.9839 li
113.22 77.6157 li
112.965 78.3623 li
112.952 79.1519 li
113.185 79.9063 li
113.639 80.5518 li
114.27 81.0259 li
115.017 81.2813 li
115.807 81.2935 li
1 1 1 rgb
f
115.807 81.2935 mo
116.561 81.061 li
117.206 80.6069 li
117.68 79.9761 li
117.936 79.229 li
117.947 78.4395 li
117.715 77.6851 li
117.262 77.0396 li
116.63 76.5654 li
115.883 76.3101 li
115.094 76.2979 li
114.34 76.5298 li
113.693 76.9839 li
113.22 77.6157 li
112.965 78.3623 li
112.952 79.1519 li
113.185 79.9063 li
113.639 80.5518 li
114.27 81.0259 li
115.017 81.2813 li
115.807 81.2935 li
0 0 0 rgb
@
84.0981 69.8931 mo
84.8525 69.6606 li
85.498 69.2065 li
85.9722 68.5752 li
86.2275 67.8281 li
86.2397 67.0391 li
86.0073 66.2847 li
85.5532 65.6387 li
84.9219 65.165 li
84.1753 64.9097 li
83.3857 64.897 li
82.6313 65.1294 li
81.9854 65.5835 li
81.5117 66.2148 li
81.2563 66.9619 li
81.2441 67.751 li
81.4761 68.5054 li
81.9302 69.1514 li
82.5615 69.625 li
83.3086 69.8809 li
84.0981 69.8931 li
1 1 1 rgb
f
84.0981 69.8931 mo
84.8525 69.6606 li
85.498 69.2065 li
85.9722 68.5752 li
86.2275 67.8281 li
86.2397 67.0391 li
86.0073 66.2847 li
85.5532 65.6387 li
84.9219 65.165 li
84.1753 64.9097 li
83.3857 64.897 li
82.6313 65.1294 li
81.9854 65.5835 li
81.5117 66.2148 li
81.2563 66.9619 li
81.2441 67.751 li
81.4761 68.5054 li
81.9302 69.1514 li
82.5615 69.625 li
83.3086 69.8809 li
84.0981 69.8931 li
0 0 0 rgb
@
95.8164 78.853 mo
96.5703 78.6211 li
97.2168 78.167 li
97.6904 77.5356 li
97.9453 76.7886 li
97.958 75.9995 li
97.7256 75.2446 li
97.2715 74.5991 li
96.6406 74.1255 li
95.8936 73.8696 li
95.104 73.8574 li
94.3496 74.0898 li
93.7041 74.5439 li
93.23 75.1753 li
92.9746 75.9224 li
92.9624 76.7114 li
93.1948 77.4658 li
93.6484 78.1118 li
94.2803 78.5854 li
95.0269 78.8413 li
95.8164 78.853 li
1 1 1 rgb
f
95.8164 78.853 mo
96.5703 78.6211 li
97.2168 78.167 li
97.6904 77.5356 li
97.9453 76.7886 li
97.958 75.9995 li
97.7256 75.2446 li
97.2715 74.5991 li
96.6406 74.1255 li
95.8936 73.8696 li
95.104 73.8574 li
94.3496 74.0898 li
93.7041 74.5439 li
93.23 75.1753 li
92.9746 75.9224 li
92.9624 76.7114 li
93.1948 77.4658 li
93.6484 78.1118 li
94.2803 78.5854 li
95.0269 78.8413 li
95.8164 78.853 li
0 0 0 rgb
@
73.1777 111.357 mo
73.9321 111.125 li
74.5781 110.67 li
75.0518 110.039 li
75.3076 109.292 li
75.3198 108.503 li
75.0874 107.748 li
74.6333 107.103 li
74.002 106.629 li
73.2549 106.373 li
72.4658 106.361 li
71.7109 106.594 li
71.0654 107.047 li
70.5918 107.679 li
70.3359 108.426 li
70.3237 109.215 li
70.5562 109.969 li
71.0103 110.615 li
71.6416 111.089 li
72.3887 111.344 li
73.1777 111.357 li
1 1 1 rgb
f
73.1777 111.357 mo
73.9321 111.125 li
74.5781 110.67 li
75.0518 110.039 li
75.3076 109.292 li
75.3198 108.503 li
75.0874 107.748 li
74.6333 107.103 li
74.002 106.629 li
73.2549 106.373 li
72.4658 106.361 li
71.7109 106.594 li
71.0654 107.047 li
70.5918 107.679 li
70.3359 108.426 li
70.3237 109.215 li
70.5562 109.969 li
71.0103 110.615 li
71.6416 111.089 li
72.3887 111.344 li
73.1777 111.357 li
0 0 0 rgb
@
80.6914 65.9492 mo
81.4458 65.7168 li
82.0918 65.2627 li
82.5654 64.6313 li
82.8208 63.8843 li
82.833 63.0952 li
82.6011 62.3408 li
82.147 61.6948 li
81.5156 61.2212 li
80.7686 60.9653 li
79.979 60.9536 li
79.2246 61.1855 li
78.5791 61.6396 li
78.105 62.271 li
77.8496 63.0181 li
77.8374 63.8071 li
78.0698 64.562 li
78.5239 65.2075 li
79.1553 65.6812 li
79.9019 65.937 li
80.6914 65.9492 li
1 1 1 rgb
f
80.6914 65.9492 mo
81.4458 65.7168 li
82.0918 65.2627 li
82.5654 64.6313 li
82.8208 63.8843 li
82.833 63.0952 li
82.6011 62.3408 li
82.147 61.6948 li
81.5156 61.2212 li
80.7686 60.9653 li
79.979 60.9536 li
79.2246 61.1855 li
78.5791 61.6396 li
78.105 62.271 li
77.8496 63.0181 li
77.8374 63.8071 li
78.0698 64.562 li
78.5239 65.2075 li
79.1553 65.6812 li
79.9019 65.937 li
80.6914 65.9492 li
0 0 0 rgb
@
92.9487 69.0322 mo
93.7031 68.8003 li
94.3491 68.3462 li
94.8228 67.7148 li
95.0786 66.9678 li
95.0908 66.1782 li
94.8584 65.4238 li
94.4043 64.7783 li
93.7729 64.3042 li
93.0259 64.0488 li
92.2368 64.0366 li
91.4824 64.269 li
90.8364 64.7231 li
90.3628 65.3545 li
90.1069 66.1011 li
90.0947 66.8906 li
90.3271 67.645 li
90.7813 68.291 li
91.4126 68.7646 li
92.1597 69.02 li
92.9487 69.0322 li
1 1 1 rgb
f
92.9487 69.0322 mo
93.7031 68.8003 li
94.3491 68.3462 li
94.8228 67.7148 li
95.0786 66.9678 li
95.0908 66.1782 li
94.8584 65.4238 li
94.4043 64.7783 li
93.7729 64.3042 li
93.0259 64.0488 li
92.2368 64.0366 li
91.4824 64.269 li
90.8364 64.7231 li
90.3628 65.3545 li
90.1069 66.1011 li
90.0947 66.8906 li
90.3271 67.645 li
90.7813 68.291 li
91.4126 68.7646 li
92.1597 69.02 li
92.9487 69.0322 li
0 0 0 rgb
@
92.1943 69.2061 mo
92.9492 68.9736 li
93.5947 68.5195 li
94.0684 67.8882 li
94.3242 67.1411 li
94.3364 66.3521 li
94.104 65.5977 li
93.6499 64.9517 li
93.0186 64.478 li
92.2715 64.2222 li
91.4824 64.21 li
90.728 64.4424 li
90.082 64.8965 li
89.6084 65.5278 li
89.3525 66.2749 li
89.3403 67.064 li
89.5728 67.8184 li
90.0269 68.4644 li
90.6582 68.938 li
91.4053 69.1938 li
92.1943 69.2061 li
1 1 1 rgb
f
92.1943 69.2061 mo
92.9492 68.9736 li
93.5947 68.5195 li
94.0684 67.8882 li
94.3242 67.1411 li
94.3364 66.3521 li
94.104 65.5977 li
93.6499 64.9517 li
93.0186 64.478 li
92.2715 64.2222 li
91.4824 64.21 li
90.728 64.4424 li
90.082 64.8965 li
89.6084 65.5278 li
89.3525 66.2749 li
89.3403 67.064 li
89.5728 67.8184 li
90.0269 68.4644 li
90.6582 68.938 li
91.4053 69.1938 li
92.1943 69.2061 li
0 0 0 rgb
@
117.225 95.833 mo
117.979 95.6011 li
118.625 95.147 li
119.1 94.5151 li
119.355 93.7686 li
119.367 92.979 li
119.135 92.2246 li
118.681 91.5791 li
118.049 91.105 li
117.303 90.8496 li
116.514 90.8374 li
115.759 91.0698 li
115.113 91.5239 li
114.639 92.1548 li
114.384 92.9019 li
114.371 93.6914 li
114.604 94.4458 li
115.058 95.0913 li
115.689 95.5654 li
116.436 95.8208 li
117.225 95.833 li
1 1 1 rgb
f
117.225 95.833 mo
117.979 95.6011 li
118.625 95.147 li
119.1 94.5151 li
119.355 93.7686 li
119.367 92.979 li
119.135 92.2246 li
118.681 91.5791 li
118.049 91.105 li
117.303 90.8496 li
116.514 90.8374 li
115.759 91.0698 li
115.113 91.5239 li
114.639 92.1548 li
114.384 92.9019 li
114.371 93.6914 li
114.604 94.4458 li
115.058 95.0913 li
115.689 95.5654 li
116.436 95.8208 li
117.225 95.833 li
0 0 0 rgb
@
73.2144 86.3936 mo
73.9688 86.1611 li
74.6143 85.707 li
75.0884 85.0757 li
75.3438 84.3291 li
75.356 83.5396 li
75.1235 82.7852 li
74.6699 82.1392 li
74.0381 81.6655 li
73.2915 81.4102 li
72.502 81.3979 li
71.7476 81.6299 li
71.1021 82.084 li
70.6279 82.7153 li
70.3726 83.4624 li
70.3604 84.252 li
70.5928 85.0063 li
71.0464 85.6519 li
71.6782 86.126 li
72.4248 86.3813 li
73.2144 86.3936 li
1 1 1 rgb
f
73.2144 86.3936 mo
73.9688 86.1611 li
74.6143 85.707 li
75.0884 85.0757 li
75.3438 84.3291 li
75.356 83.5396 li
75.1235 82.7852 li
74.6699 82.1392 li
74.0381 81.6655 li
73.2915 81.4102 li
72.502 81.3979 li
71.7476 81.6299 li
71.1021 82.084 li
70.6279 82.7153 li
70.3726 83.4624 li
70.3604 84.252 li
70.5928 85.0063 li
71.0464 85.6519 li
71.6782 86.126 li
72.4248 86.3813 li
73.2144 86.3936 li
0 0 0 rgb
@
110.158 95.0049 mo
110.913 94.7729 li
111.559 94.3188 li
112.033 93.6875 li
112.289 92.9404 li
112.301 92.1509 li
112.068 91.3965 li
111.614 90.751 li
110.982 90.2769 li
110.236 90.0215 li
109.447 90.0093 li
108.692 90.2417 li
108.047 90.6958 li
107.572 91.3271 li
107.316 92.0737 li
107.305 92.8633 li
107.537 93.6177 li
107.991 94.2632 li
108.623 94.7373 li
109.369 94.9927 li
110.158 95.0049 li
1 1 1 rgb
f
110.158 95.0049 mo
110.913 94.7729 li
111.559 94.3188 li
112.033 93.6875 li
112.289 92.9404 li
112.301 92.1509 li
112.068 91.3965 li
111.614 90.751 li
110.982 90.2769 li
110.236 90.0215 li
109.447 90.0093 li
108.692 90.2417 li
108.047 90.6958 li
107.572 91.3271 li
107.316 92.0737 li
107.305 92.8633 li
107.537 93.6177 li
107.991 94.2632 li
108.623 94.7373 li
109.369 94.9927 li
110.158 95.0049 li
0 0 0 rgb
@
137.973 114.922 mo
138.728 114.689 li
139.373 114.236 li
139.847 113.604 li
140.103 112.857 li
140.115 112.068 li
139.883 111.314 li
139.428 110.668 li
138.797 110.194 li
138.05 109.939 li
137.261 109.927 li
136.506 110.158 li
135.86 110.613 li
135.387 111.244 li
135.131 111.991 li
135.119 112.781 li
135.352 113.535 li
135.805 114.181 li
136.437 114.654 li
137.184 114.91 li
137.973 114.922 li
1 1 1 rgb
f
137.973 114.922 mo
138.728 114.689 li
139.373 114.236 li
139.847 113.604 li
140.103 112.857 li
140.115 112.068 li
139.883 111.314 li
139.428 110.668 li
138.797 110.194 li
138.05 109.939 li
137.261 109.927 li
136.506 110.158 li
135.86 110.613 li
135.387 111.244 li
135.131 111.991 li
135.119 112.781 li
135.352 113.535 li
135.805 114.181 li
136.437 114.654 li
137.184 114.91 li
137.973 114.922 li
0 0 0 rgb
@
111.334 114.41 mo
112.088 114.178 li
112.734 113.725 li
113.208 113.093 li
113.463 112.346 li
113.476 111.557 li
113.243 110.803 li
112.789 110.156 li
112.158 109.683 li
111.411 109.428 li
110.621 109.415 li
109.867 109.646 li
109.221 110.102 li
108.748 110.732 li
108.492 111.479 li
108.48 112.27 li
108.712 113.023 li
109.166 113.669 li
109.797 114.143 li
110.545 114.398 li
111.334 114.41 li
1 1 1 rgb
f
111.334 114.41 mo
112.088 114.178 li
112.734 113.725 li
113.208 113.093 li
113.463 112.346 li
113.476 111.557 li
113.243 110.803 li
112.789 110.156 li
112.158 109.683 li
111.411 109.428 li
110.621 109.415 li
109.867 109.646 li
109.221 110.102 li
108.748 110.732 li
108.492 111.479 li
108.48 112.27 li
108.712 113.023 li
109.166 113.669 li
109.797 114.143 li
110.545 114.398 li
111.334 114.41 li
0 0 0 rgb
@
117.377 76.5322 mo
118.132 76.2998 li
118.777 75.8457 li
119.252 75.2144 li
119.507 74.4673 li
119.52 73.6782 li
119.287 72.9238 li
118.833 72.2778 li
118.201 71.8042 li
117.455 71.5483 li
116.666 71.5366 li
115.91 71.7686 li
115.266 72.2227 li
114.791 72.854 li
114.535 73.6011 li
114.523 74.3901 li
114.756 75.145 li
115.21 75.7905 li
115.842 76.2642 li
116.588 76.52 li
117.377 76.5322 li
1 1 1 rgb
f
117.377 76.5322 mo
118.132 76.2998 li
118.777 75.8457 li
119.252 75.2144 li
119.507 74.4673 li
119.52 73.6782 li
119.287 72.9238 li
118.833 72.2778 li
118.201 71.8042 li
117.455 71.5483 li
116.666 71.5366 li
115.91 71.7686 li
115.266 72.2227 li
114.791 72.854 li
114.535 73.6011 li
114.523 74.3901 li
114.756 75.145 li
115.21 75.7905 li
115.842 76.2642 li
116.588 76.52 li
117.377 76.5322 li
0 0 0 rgb
@
65.9854 102.661 mo
66.7397 102.429 li
67.3857 101.975 li
67.8594 101.344 li
68.1147 100.596 li
68.127 99.8071 li
67.895 99.0527 li
67.4409 98.4067 li
66.8096 97.9331 li
66.0625 97.6777 li
65.2734 97.6655 li
64.5186 97.8975 li
63.873 98.3516 li
63.3989 98.9829 li
63.1436 99.73 li
63.1313 100.52 li
63.3638 101.273 li
63.8179 101.92 li
64.4492 102.393 li
65.1958 102.648 li
65.9854 102.661 li
1 1 1 rgb
f
65.9854 102.661 mo
66.7397 102.429 li
67.3857 101.975 li
67.8594 101.344 li
68.1147 100.596 li
68.127 99.8071 li
67.895 99.0527 li
67.4409 98.4067 li
66.8096 97.9331 li
66.0625 97.6777 li
65.2734 97.6655 li
64.5186 97.8975 li
63.873 98.3516 li
63.3989 98.9829 li
63.1436 99.73 li
63.1313 100.52 li
63.3638 101.273 li
63.8179 101.92 li
64.4492 102.393 li
65.1958 102.648 li
65.9854 102.661 li
0 0 0 rgb
@
122.903 96.4951 mo
123.658 96.2627 li
124.303 95.8086 li
124.777 95.1772 li
125.033 94.4302 li
125.045 93.6411 li
124.813 92.8867 li
124.359 92.2407 li
123.728 91.7671 li
122.98 91.5112 li
122.191 91.4995 li
121.437 91.7314 li
120.791 92.1855 li
120.316 92.8169 li
120.062 93.564 li
120.049 94.353 li
120.281 95.1079 li
120.735 95.7534 li
121.367 96.2271 li
122.113 96.4829 li
122.903 96.4951 li
1 1 1 rgb
f
122.903 96.4951 mo
123.658 96.2627 li
124.303 95.8086 li
124.777 95.1772 li
125.033 94.4302 li
125.045 93.6411 li
124.813 92.8867 li
124.359 92.2407 li
123.728 91.7671 li
122.98 91.5112 li
122.191 91.4995 li
121.437 91.7314 li
120.791 92.1855 li
120.316 92.8169 li
120.062 93.564 li
120.049 94.353 li
120.281 95.1079 li
120.735 95.7534 li
121.367 96.2271 li
122.113 96.4829 li
122.903 96.4951 li
0 0 0 rgb
@
112.574 86.4302 mo
113.328 86.1982 li
113.975 85.7441 li
114.448 85.1128 li
114.703 84.3657 li
114.716 83.5767 li
114.483 82.8218 li
114.029 82.1763 li
113.398 81.7026 li
112.651 81.4468 li
111.861 81.4346 li
111.107 81.667 li
110.461 82.1211 li
109.988 82.7524 li
109.732 83.4995 li
109.721 84.2886 li
109.952 85.043 li
110.406 85.689 li
111.037 86.1626 li
111.785 86.418 li
112.574 86.4302 li
1 1 1 rgb
f
112.574 86.4302 mo
113.328 86.1982 li
113.975 85.7441 li
114.448 85.1128 li
114.703 84.3657 li
114.716 83.5767 li
114.483 82.8218 li
114.029 82.1763 li
113.398 81.7026 li
112.651 81.4468 li
111.861 81.4346 li
111.107 81.667 li
110.461 82.1211 li
109.988 82.7524 li
109.732 83.4995 li
109.721 84.2886 li
109.952 85.043 li
110.406 85.689 li
111.037 86.1626 li
111.785 86.418 li
112.574 86.4302 li
0 0 0 rgb
@
117.414 98.0425 mo
118.169 97.8101 li
118.814 97.356 li
119.289 96.7246 li
119.545 95.9775 li
119.557 95.1885 li
119.324 94.4341 li
118.87 93.7881 li
118.238 93.3145 li
117.492 93.0586 li
116.703 93.0464 li
115.948 93.2788 li
115.303 93.7329 li
114.828 94.3643 li
114.572 95.1113 li
114.561 95.9004 li
114.793 96.6548 li
115.247 97.3008 li
115.879 97.7744 li
116.625 98.0303 li
117.414 98.0425 li
1 1 1 rgb
f
117.414 98.0425 mo
118.169 97.8101 li
118.814 97.356 li
119.289 96.7246 li
119.545 95.9775 li
119.557 95.1885 li
119.324 94.4341 li
118.87 93.7881 li
118.238 93.3145 li
117.492 93.0586 li
116.703 93.0464 li
115.948 93.2788 li
115.303 93.7329 li
114.828 94.3643 li
114.572 95.1113 li
114.561 95.9004 li
114.793 96.6548 li
115.247 97.3008 li
115.879 97.7744 li
116.625 98.0303 li
117.414 98.0425 li
0 0 0 rgb
@
107.615 98.8013 mo
108.369 98.5693 li
109.016 98.1152 li
109.488 97.4839 li
109.744 96.7368 li
109.756 95.9478 li
109.524 95.1929 li
109.07 94.5474 li
108.439 94.0737 li
107.691 93.8179 li
106.902 93.8057 li
106.148 94.0381 li
105.502 94.4922 li
105.028 95.1235 li
104.773 95.8706 li
104.761 96.6597 li
104.993 97.4141 li
105.447 98.0601 li
106.078 98.5337 li
106.825 98.7896 li
107.615 98.8013 li
1 1 1 rgb
f
107.615 98.8013 mo
108.369 98.5693 li
109.016 98.1152 li
109.488 97.4839 li
109.744 96.7368 li
109.756 95.9478 li
109.524 95.1929 li
109.07 94.5474 li
108.439 94.0737 li
107.691 93.8179 li
106.902 93.8057 li
106.148 94.0381 li
105.502 94.4922 li
105.028 95.1235 li
104.773 95.8706 li
104.761 96.6597 li
104.993 97.4141 li
105.447 98.0601 li
106.078 98.5337 li
106.825 98.7896 li
107.615 98.8013 li
0 0 0 rgb
@
97.793 92.9912 mo
98.5469 92.7588 li
99.1924 92.3047 li
99.666 91.6733 li
99.9219 90.9263 li
99.9336 90.1372 li
99.7012 89.3828 li
99.248 88.7368 li
98.6162 88.2632 li
97.8691 88.0073 li
97.0801 87.9951 li
96.3262 88.2275 li
95.6797 88.6816 li
95.2061 89.313 li
94.9507 90.0601 li
94.9385 90.8491 li
95.1709 91.6035 li
95.625 92.2495 li
96.2559 92.7231 li
97.0029 92.979 li
97.793 92.9912 li
1 1 1 rgb
f
97.793 92.9912 mo
98.5469 92.7588 li
99.1924 92.3047 li
99.666 91.6733 li
99.9219 90.9263 li
99.9336 90.1372 li
99.7012 89.3828 li
99.248 88.7368 li
98.6162 88.2632 li
97.8691 88.0073 li
97.0801 87.9951 li
96.3262 88.2275 li
95.6797 88.6816 li
95.2061 89.313 li
94.9507 90.0601 li
94.9385 90.8491 li
95.1709 91.6035 li
95.625 92.2495 li
96.2559 92.7231 li
97.0029 92.979 li
97.793 92.9912 li
0 0 0 rgb
@
105.199 65.501 mo
105.954 65.2686 li
106.6 64.8145 li
107.074 64.1831 li
107.329 63.4365 li
107.342 62.647 li
107.109 61.8926 li
106.655 61.2466 li
106.023 60.7729 li
105.277 60.5176 li
104.488 60.5054 li
103.733 60.7373 li
103.088 61.1914 li
102.613 61.8228 li
102.357 62.5698 li
102.346 63.3594 li
102.578 64.1138 li
103.032 64.7593 li
103.664 65.2334 li
104.41 65.4888 li
105.199 65.501 li
1 1 1 rgb
f
105.199 65.501 mo
105.954 65.2686 li
106.6 64.8145 li
107.074 64.1831 li
107.329 63.4365 li
107.342 62.647 li
107.109 61.8926 li
106.655 61.2466 li
106.023 60.7729 li
105.277 60.5176 li
104.488 60.5054 li
103.733 60.7373 li
103.088 61.1914 li
102.613 61.8228 li
102.357 62.5698 li
102.346 63.3594 li
102.578 64.1138 li
103.032 64.7593 li
103.664 65.2334 li
104.41 65.4888 li
105.199 65.501 li
0 0 0 rgb
@
108.618 61.7886 mo
109.373 61.5562 li
110.019 61.1021 li
110.492 60.4707 li
110.748 59.7241 li
110.76 58.9346 li
110.527 58.1802 li
110.074 57.5347 li
109.442 57.0605 li
108.695 56.8052 li
107.906 56.793 li
107.152 57.0249 li
106.506 57.479 li
106.032 58.1104 li
105.776 58.8574 li
105.764 59.647 li
105.996 60.4014 li
106.451 61.0469 li
107.082 61.521 li
107.829 61.7764 li
108.618 61.7886 li
1 1 1 rgb
f
108.618 61.7886 mo
109.373 61.5562 li
110.019 61.1021 li
110.492 60.4707 li
110.748 59.7241 li
110.76 58.9346 li
110.527 58.1802 li
110.074 57.5347 li
109.442 57.0605 li
108.695 56.8052 li
107.906 56.793 li
107.152 57.0249 li
106.506 57.479 li
106.032 58.1104 li
105.776 58.8574 li
105.764 59.647 li
105.996 60.4014 li
106.451 61.0469 li
107.082 61.521 li
107.829 61.7764 li
108.618 61.7886 li
0 0 0 rgb
@
115.291 84.8979 mo
116.045 84.6655 li
116.691 84.2114 li
117.165 83.5801 li
117.42 82.833 li
117.433 82.0439 li
117.201 81.2896 li
116.746 80.6436 li
116.115 80.1699 li
115.368 79.9141 li
114.578 79.9019 li
113.824 80.1343 li
113.179 80.5884 li
112.705 81.2197 li
112.449 81.9668 li
112.438 82.7559 li
112.67 83.5103 li
113.123 84.1563 li
113.755 84.6299 li
114.502 84.8857 li
115.291 84.8979 li
1 1 1 rgb
f
115.291 84.8979 mo
116.045 84.6655 li
116.691 84.2114 li
117.165 83.5801 li
117.42 82.833 li
117.433 82.0439 li
117.201 81.2896 li
116.746 80.6436 li
116.115 80.1699 li
115.368 79.9141 li
114.578 79.9019 li
113.824 80.1343 li
113.179 80.5884 li
112.705 81.2197 li
112.449 81.9668 li
112.438 82.7559 li
112.67 83.5103 li
113.123 84.1563 li
113.755 84.6299 li
114.502 84.8857 li
115.291 84.8979 li
0 0 0 rgb
@
110.031 92.2695 mo
110.785 92.0376 li
111.431 91.5835 li
111.904 90.9517 li
112.16 90.2051 li
112.172 89.4155 li
111.939 88.6611 li
111.486 88.0156 li
110.854 87.5415 li
110.107 87.2861 li
109.318 87.2739 li
108.564 87.5063 li
107.918 87.9604 li
107.444 88.5913 li
107.189 89.3384 li
107.177 90.1279 li
107.409 90.8823 li
107.863 91.5278 li
108.494 92.002 li
109.241 92.2573 li
110.031 92.2695 li
1 1 1 rgb
f
110.031 92.2695 mo
110.785 92.0376 li
111.431 91.5835 li
111.904 90.9517 li
112.16 90.2051 li
112.172 89.4155 li
111.939 88.6611 li
111.486 88.0156 li
110.854 87.5415 li
110.107 87.2861 li
109.318 87.2739 li
108.564 87.5063 li
107.918 87.9604 li
107.444 88.5913 li
107.189 89.3384 li
107.177 90.1279 li
107.409 90.8823 li
107.863 91.5278 li
108.494 92.002 li
109.241 92.2573 li
110.031 92.2695 li
0 0 0 rgb
@
94.5669 90.1362 mo
95.3213 89.9043 li
95.9668 89.4502 li
96.4414 88.8188 li
96.6963 88.0718 li
96.709 87.2827 li
96.4766 86.5278 li
96.0225 85.8823 li
95.3906 85.4087 li
94.644 85.1528 li
93.8545 85.1406 li
93.1001 85.373 li
92.4546 85.8271 li
91.9805 86.4585 li
91.7251 87.2056 li
91.7129 87.9946 li
91.9453 88.749 li
92.3989 89.395 li
93.0308 89.8687 li
93.7773 90.1245 li
94.5669 90.1362 li
1 1 1 rgb
f
94.5669 90.1362 mo
95.3213 89.9043 li
95.9668 89.4502 li
96.4414 88.8188 li
96.6963 88.0718 li
96.709 87.2827 li
96.4766 86.5278 li
96.0225 85.8823 li
95.3906 85.4087 li
94.644 85.1528 li
93.8545 85.1406 li
93.1001 85.373 li
92.4546 85.8271 li
91.9805 86.4585 li
91.7251 87.2056 li
91.7129 87.9946 li
91.9453 88.749 li
92.3989 89.395 li
93.0308 89.8687 li
93.7773 90.1245 li
94.5669 90.1362 li
0 0 0 rgb
@
93.8423 82.9775 mo
94.5972 82.7451 li
95.2427 82.291 li
95.7168 81.6597 li
95.9727 80.9126 li
95.9844 80.1235 li
95.752 79.3691 li
95.2979 78.7231 li
94.6665 78.2495 li
93.9199 77.9941 li
93.1304 77.9819 li
92.376 78.2139 li
91.73 78.668 li
91.2563 79.2993 li
91.001 80.0464 li
90.9883 80.8354 li
91.2207 81.5903 li
91.6748 82.2358 li
92.3062 82.7095 li
93.0532 82.9653 li
93.8423 82.9775 li
1 1 1 rgb
f
93.8423 82.9775 mo
94.5972 82.7451 li
95.2427 82.291 li
95.7168 81.6597 li
95.9727 80.9126 li
95.9844 80.1235 li
95.752 79.3691 li
95.2979 78.7231 li
94.6665 78.2495 li
93.9199 77.9941 li
93.1304 77.9819 li
92.376 78.2139 li
91.73 78.668 li
91.2563 79.2993 li
91.001 80.0464 li
90.9883 80.8354 li
91.2207 81.5903 li
91.6748 82.2358 li
92.3062 82.7095 li
93.0532 82.9653 li
93.8423 82.9775 li
0 0 0 rgb
@
105.248 83.8418 mo
106.002 83.6099 li
106.648 83.1558 li
107.122 82.5244 li
107.377 81.7773 li
107.39 80.9878 li
107.157 80.2334 li
106.703 79.5879 li
106.072 79.1138 li
105.325 78.8584 li
104.535 78.8462 li
103.781 79.0786 li
103.135 79.5327 li
102.662 80.1641 li
102.406 80.9106 li
102.395 81.7002 li
102.626 82.4546 li
103.08 83.1006 li
103.711 83.5742 li
104.459 83.8296 li
105.248 83.8418 li
1 1 1 rgb
f
105.248 83.8418 mo
106.002 83.6099 li
106.648 83.1558 li
107.122 82.5244 li
107.377 81.7773 li
107.39 80.9878 li
107.157 80.2334 li
106.703 79.5879 li
106.072 79.1138 li
105.325 78.8584 li
104.535 78.8462 li
103.781 79.0786 li
103.135 79.5327 li
102.662 80.1641 li
102.406 80.9106 li
102.395 81.7002 li
102.626 82.4546 li
103.08 83.1006 li
103.711 83.5742 li
104.459 83.8296 li
105.248 83.8418 li
0 0 0 rgb
@
84.4463 62.5322 mo
85.2007 62.2998 li
85.8462 61.8457 li
86.3203 61.2144 li
86.5757 60.4673 li
86.5879 59.6782 li
86.3555 58.9238 li
85.9014 58.2778 li
85.27 57.8042 li
84.5234 57.5488 li
83.7339 57.5366 li
82.9795 57.7686 li
82.3335 58.2227 li
81.8599 58.854 li
81.6045 59.6011 li
81.5923 60.3901 li
81.8242 61.145 li
82.2783 61.7905 li
82.9097 62.2642 li
83.6567 62.52 li
84.4463 62.5322 li
1 1 1 rgb
f
84.4463 62.5322 mo
85.2007 62.2998 li
85.8462 61.8457 li
86.3203 61.2144 li
86.5757 60.4673 li
86.5879 59.6782 li
86.3555 58.9238 li
85.9014 58.2778 li
85.27 57.8042 li
84.5234 57.5488 li
83.7339 57.5366 li
82.9795 57.7686 li
82.3335 58.2227 li
81.8599 58.854 li
81.6045 59.6011 li
81.5923 60.3901 li
81.8242 61.145 li
82.2783 61.7905 li
82.9097 62.2642 li
83.6567 62.52 li
84.4463 62.5322 li
0 0 0 rgb
@
118.695 95.9634 mo
119.449 95.731 li
120.096 95.2769 li
120.569 94.6455 li
120.825 93.8984 li
120.838 93.1094 li
120.605 92.355 li
120.15 91.709 li
119.52 91.2354 li
118.772 90.9795 li
117.983 90.9673 li
117.229 91.1997 li
116.583 91.6538 li
116.109 92.2852 li
115.854 93.0322 li
115.842 93.8213 li
116.074 94.5757 li
116.527 95.2217 li
117.159 95.6953 li
117.906 95.9512 li
118.695 95.9634 li
1 1 1 rgb
f
118.695 95.9634 mo
119.449 95.731 li
120.096 95.2769 li
120.569 94.6455 li
120.825 93.8984 li
120.838 93.1094 li
120.605 92.355 li
120.15 91.709 li
119.52 91.2354 li
118.772 90.9795 li
117.983 90.9673 li
117.229 91.1997 li
116.583 91.6538 li
116.109 92.2852 li
115.854 93.0322 li
115.842 93.8213 li
116.074 94.5757 li
116.527 95.2217 li
117.159 95.6953 li
117.906 95.9512 li
118.695 95.9634 li
0 0 0 rgb
@
89.6694 78.8955 mo
90.4238 78.6636 li
91.0698 78.2095 li
91.5435 77.5781 li
91.7993 76.8311 li
91.8115 76.0415 li
91.5791 75.2871 li
91.125 74.6416 li
90.4937 74.1675 li
89.7466 73.9121 li
88.9575 73.8999 li
88.2031 74.1323 li
87.5571 74.5864 li
87.0835 75.2178 li
86.8276 75.9644 li
86.8154 76.7539 li
87.0479 77.5083 li
87.502 78.1538 li
88.1333 78.6279 li
88.8804 78.8833 li
89.6694 78.8955 li
1 1 1 rgb
f
89.6694 78.8955 mo
90.4238 78.6636 li
91.0698 78.2095 li
91.5435 77.5781 li
91.7993 76.8311 li
91.8115 76.0415 li
91.5791 75.2871 li
91.125 74.6416 li
90.4937 74.1675 li
89.7466 73.9121 li
88.9575 73.8999 li
88.2031 74.1323 li
87.5571 74.5864 li
87.0835 75.2178 li
86.8276 75.9644 li
86.8154 76.7539 li
87.0479 77.5083 li
87.502 78.1538 li
88.1333 78.6279 li
88.8804 78.8833 li
89.6694 78.8955 li
0 0 0 rgb
@
99.7402 76.6323 mo
95.3701 84.2017 li
104.11 84.2017 li
99.7402 76.6323 li
0.74902 0.12549 0.14902 rgb
f
99.7402 76.6323 mo
95.3701 84.2017 li
104.11 84.2017 li
99.7402 76.6323 li
0 0 0 rgb
@
2 lc
99.8594 0.504395 mo
101.594 0.519531 li
103.328 0.564941 li
105.061 0.640625 li
106.791 0.746582 li
108.52 0.882324 li
110.246 1.04883 li
111.969 1.24512 li
113.688 1.47119 li
115.403 1.72754 li
117.113 2.01416 li
118.818 2.33008 li
120.518 2.67578 li
122.211 3.05127 li
123.897 3.45605 li
125.576 3.89014 li
127.247 4.35352 li
128.91 4.84619 li
130.564 5.36768 li
132.209 5.91748 li
133.843 6.49658 li
135.467 7.104 li
137.08 7.73926 li
138.683 8.40283 li
140.273 9.09473 li
141.852 9.81396 li
143.416 10.5601 li
144.969 11.334 li
146.506 12.1348 li
148.03 12.9624 li
149.54 13.8159 li
151.034 14.6963 li
152.513 15.6025 li
153.975 16.5342 li
155.422 17.4912 li
156.851 18.4736 li
158.262 19.4805 li
159.656 20.5122 li
161.032 21.5679 li
162.389 22.647 li
163.727 23.7505 li
165.046 24.8765 li
166.345 26.0254 li
167.623 27.1973 li
168.881 28.3911 li
170.118 29.6064 li
171.334 30.8433 li
172.527 32.1011 li
173.699 33.3794 li
174.848 34.6782 li
175.975 35.9971 li
177.077 37.3354 li
178.156 38.6924 li
179.213 40.0679 li
180.244 41.4619 li
181.251 42.874 li
182.232 44.3032 li
183.19 45.749 li
184.122 47.2114 li
185.027 48.6904 li
185.908 50.1846 li
186.762 51.6938 li
187.59 53.2178 li
188.391 54.7559 li
189.164 56.3081 li
189.91 57.873 li
190.63 59.4512 li
191.321 61.0415 li
191.984 62.6436 li
192.62 64.2568 li
193.228 65.8813 li
193.807 67.5161 li
194.357 69.1606 li
194.879 70.8145 li
195.371 72.4771 li
195.834 74.1479 li
196.269 75.8271 li
196.674 77.5132 li
197.049 79.2065 li
197.395 80.9058 li
197.711 82.6108 li
197.996 84.3213 li
198.253 86.0361 li
198.479 87.7554 li
198.676 89.4785 li
198.842 91.2046 li
198.978 92.9336 li
199.084 94.6646 li
199.159 96.397 li
199.205 98.1304 li
199.22 99.8643 li
199.205 101.599 li
199.159 103.332 li
199.084 105.064 li
198.978 106.795 li
198.842 108.524 li
198.676 110.25 li
198.479 111.973 li
198.253 113.693 li
197.996 115.408 li
197.711 117.118 li
197.395 118.823 li
197.049 120.522 li
196.674 122.215 li
196.269 123.902 li
195.834 125.58 li
195.371 127.252 li
194.879 128.914 li
194.357 130.568 li
193.807 132.213 li
193.228 133.848 li
192.62 135.473 li
191.984 137.086 li
191.321 138.688 li
190.63 140.277 li
189.91 141.855 li
189.164 143.421 li
188.391 144.973 li
187.59 146.512 li
186.762 148.035 li
185.908 149.545 li
185.027 151.039 li
184.122 152.518 li
183.19 153.98 li
182.232 155.426 li
181.251 156.855 li
180.244 158.267 li
179.213 159.66 li
178.156 161.037 li
177.077 162.394 li
175.975 163.732 li
174.848 165.051 li
173.699 166.35 li
172.527 167.628 li
171.334 168.886 li
170.118 170.123 li
168.881 171.338 li
167.623 172.531 li
166.345 173.703 li
165.046 174.853 li
163.727 175.979 li
162.389 177.082 li
161.032 178.161 li
159.656 179.217 li
158.262 180.248 li
156.851 181.256 li
155.422 182.238 li
153.975 183.195 li
152.513 184.127 li
151.034 185.033 li
149.54 185.912 li
148.03 186.767 li
146.506 187.594 li
144.969 188.395 li
143.416 189.168 li
141.852 189.915 li
140.273 190.635 li
138.683 191.326 li
137.08 191.989 li
135.467 192.625 li
133.843 193.232 li
132.209 193.811 li
130.564 194.361 li
128.91 194.883 li
127.247 195.375 li
125.576 195.839 li
123.897 196.273 li
122.211 196.678 li
120.518 197.053 li
118.818 197.398 li
117.113 197.715 li
115.403 198.001 li
113.688 198.258 li
111.969 198.484 li
110.246 198.68 li
108.52 198.846 li
106.791 198.982 li
105.061 199.088 li
103.328 199.164 li
101.594 199.209 li
99.8594 199.225 li
98.126 199.209 li
96.3926 199.164 li
94.6597 199.088 li
92.9287 198.982 li
91.2002 198.846 li
89.4736 198.68 li
87.751 198.484 li
86.0317 198.258 li
84.3164 198.001 li
82.606 197.715 li
80.9009 197.398 li
79.2017 197.053 li
77.5088 196.678 li
75.8223 196.273 li
74.1436 195.839 li
72.4727 195.375 li
70.8096 194.883 li
69.1558 194.361 li
67.5112 193.811 li
65.877 193.232 li
64.2524 192.625 li
62.6387 191.989 li
61.0366 191.326 li
59.4463 190.635 li
57.8687 189.915 li
56.3032 189.168 li
54.7515 188.395 li
53.2129 187.594 li
51.689 186.767 li
50.1797 185.912 li
48.6855 185.033 li
47.207 184.127 li
45.7446 183.195 li
44.2983 182.238 li
42.8691 181.256 li
41.4575 180.248 li
40.0635 179.217 li
38.6875 178.161 li
37.3306 177.082 li
35.9927 175.979 li
34.6738 174.853 li
33.375 173.703 li
32.0967 172.531 li
30.8384 171.338 li
29.6016 170.123 li
28.3862 168.886 li
27.1924 167.628 li
26.021 166.35 li
24.8721 165.051 li
23.7456 163.732 li
22.6426 162.394 li
21.563 161.037 li
20.5073 159.66 li
19.4761 158.267 li
18.4688 156.855 li
17.4868 155.426 li
16.5293 153.98 li
15.5977 152.518 li
14.6919 151.039 li
13.8115 149.545 li
12.9575 148.035 li
12.1304 146.512 li
11.3296 144.973 li
10.5557 143.421 li
9.80908 141.855 li
9.08984 140.277 li
8.39844 138.688 li
7.73486 137.086 li
7.09912 135.473 li
6.49219 133.848 li
5.91309 132.213 li
5.36279 130.568 li
4.84131 128.914 li
4.34863 127.252 li
3.88525 125.58 li
3.45117 123.902 li
3.04639 122.215 li
2.6709 120.522 li
2.3252 118.823 li
2.00928 117.118 li
1.72314 115.408 li
1.4668 113.693 li
1.24023 111.973 li
1.04395 110.25 li
0.87793 108.524 li
0.741699 106.795 li
0.63623 105.064 li
0.560547 103.332 li
0.515137 101.599 li
0.5 99.8643 li
0.515137 98.1304 li
0.560547 96.397 li
0.63623 94.6646 li
0.741699 92.9336 li
0.87793 91.2046 li
1.04395 89.4785 li
1.24023 87.7554 li
1.4668 86.0361 li
1.72314 84.3213 li
2.00928 82.6108 li
2.3252 80.9058 li
2.6709 79.2065 li
3.04639 77.5132 li
3.45117 75.8271 li
3.88525 74.1479 li
4.34863 72.4771 li
4.84131 70.8145 li
5.36279 69.1606 li
5.91309 67.5161 li
6.49219 65.8813 li
7.09912 64.2568 li
7.73486 62.6436 li
8.39844 61.0415 li
9.08984 59.4512 li
9.80908 57.873 li
10.5557 56.3081 li
11.3296 54.7559 li
12.1304 53.2178 li
12.9575 51.6938 li
13.8115 50.1846 li
14.6919 48.6904 li
15.5977 47.2114 li
16.5293 45.749 li
17.4868 44.3032 li
18.4688 42.874 li
19.4761 41.4619 li
20.5073 40.0679 li
21.563 38.6924 li
22.6426 37.3354 li
23.7456 35.9971 li
24.8721 34.6782 li
26.021 33.3794 li
27.1924 32.1011 li
28.3862 30.8433 li
29.6016 29.6064 li
30.8384 28.3911 li
32.0967 27.1973 li
33.375 26.0254 li
34.6738 24.8765 li
35.9927 23.7505 li
37.3306 22.647 li
38.6875 21.5679 li
40.0635 20.5122 li
41.4575 19.4805 li
42.8691 18.4736 li
44.2983 17.4912 li
45.7446 16.5342 li
47.207 15.6025 li
48.6855 14.6963 li
50.1797 13.8159 li
51.689 12.9624 li
53.2129 12.1348 li
54.7515 11.334 li
56.3032 10.5601 li
57.8687 9.81396 li
59.4463 9.09473 li
61.0366 8.40283 li
62.6387 7.73926 li
64.2524 7.104 li
65.877 6.49658 li
67.5112 5.91748 li
69.1558 5.36768 li
70.8096 4.84619 li
72.4727 4.35352 li
74.1436 3.89014 li
75.8223 3.45605 li
77.5088 3.05127 li
79.2017 2.67578 li
80.9009 2.33008 li
82.606 2.01416 li
84.3164 1.72754 li
86.0317 1.47119 li
87.751 1.24512 li
89.4736 1.04883 li
91.2002 0.882324 li
92.9287 0.746582 li
94.6597 0.640625 li
96.3926 0.564941 li
98.126 0.519531 li
99.8594 0.504395 li
@
0 lc
[3 3 ] 0 dsh
99.543 81.2017 mo
99.8555 81.2046 li
100.167 81.2129 li
100.479 81.2261 li
100.791 81.2451 li
101.102 81.27 li
101.412 81.2998 li
101.723 81.335 li
102.032 81.376 li
102.341 81.4219 li
102.648 81.4731 li
102.956 81.5298 li
103.262 81.5923 li
103.566 81.6602 li
103.87 81.7329 li
104.172 81.811 li
104.473 81.8945 li
104.772 81.9829 li
105.07 82.0771 li
105.365 82.1758 li
105.66 82.2803 li
105.952 82.3896 li
106.243 82.5039 li
106.531 82.6235 li
106.818 82.7476 li
107.102 82.8774 li
107.383 83.0117 li
107.662 83.1509 li
107.939 83.2949 li
108.213 83.4443 li
108.484 83.5977 li
108.754 83.7563 li
109.021 83.9194 li
109.284 84.0869 li
109.544 84.2588 li
109.802 84.436 li
110.056 84.6172 li
110.307 84.8032 li
110.555 84.9927 li
110.799 85.187 li
111.039 85.3857 li
111.276 85.5889 li
111.51 85.7954 li
111.74 86.0063 li
111.967 86.2212 li
112.189 86.4399 li
112.408 86.6626 li
112.623 86.8892 li
112.834 87.1191 li
113.041 87.3525 li
113.244 87.5898 li
113.441 87.8315 li
113.637 88.0752 li
113.827 88.3232 li
114.013 88.5742 li
114.193 88.8281 li
114.37 89.0854 li
114.543 89.3457 li
114.711 89.6089 li
114.873 89.875 li
115.032 90.144 li
115.186 90.4155 li
115.334 90.6899 li
115.479 90.9668 li
115.618 91.2461 li
115.752 91.5278 li
115.882 91.812 li
116.006 92.0986 li
116.125 92.3867 li
116.24 92.6772 li
116.35 92.9692 li
116.453 93.2637 li
116.553 93.5596 li
116.646 93.8574 li
116.735 94.1567 li
116.818 94.4575 li
116.896 94.7598 li
116.971 95.0635 li
117.037 95.3682 li
117.1 95.6738 li
117.156 95.981 li
117.207 96.2886 li
117.254 96.5972 li
117.295 96.9067 li
117.33 97.2168 li
117.36 97.5278 li
117.384 97.8389 li
117.403 98.1504 li
117.416 98.4619 li
117.426 98.7739 li
117.428 99.0859 li
117.426 99.3984 li
117.416 99.7104 li
117.403 100.022 li
117.384 100.334 li
117.36 100.646 li
117.33 100.955 li
117.295 101.266 li
117.254 101.575 li
117.207 101.885 li
117.156 102.192 li
117.1 102.499 li
117.037 102.805 li
116.971 103.109 li
116.896 103.413 li
116.818 103.715 li
116.735 104.016 li
116.646 104.315 li
116.553 104.613 li
116.453 104.908 li
116.35 105.203 li
116.24 105.496 li
116.125 105.786 li
116.006 106.074 li
115.882 106.361 li
115.752 106.645 li
115.618 106.927 li
115.479 107.205 li
115.334 107.483 li
115.186 107.758 li
115.032 108.029 li
114.873 108.298 li
114.711 108.564 li
114.543 108.827 li
114.37 109.088 li
114.193 109.345 li
114.013 109.599 li
113.827 109.85 li
113.637 110.098 li
113.441 110.342 li
113.244 110.582 li
113.041 110.819 li
112.834 111.053 li
112.623 111.283 li
112.408 111.51 li
112.189 111.732 li
111.967 111.951 li
111.74 112.166 li
111.51 112.377 li
111.276 112.584 li
111.039 112.787 li
110.799 112.985 li
110.555 113.18 li
110.307 113.37 li
110.056 113.556 li
109.802 113.736 li
109.544 113.913 li
109.284 114.086 li
109.021 114.254 li
108.754 114.417 li
108.484 114.575 li
108.213 114.729 li
107.939 114.877 li
107.662 115.021 li
107.383 115.161 li
107.102 115.296 li
106.818 115.425 li
106.531 115.55 li
106.243 115.668 li
105.952 115.783 li
105.66 115.893 li
105.365 115.996 li
105.07 116.096 li
104.772 116.189 li
104.473 116.278 li
104.172 116.361 li
103.87 116.439 li
103.566 116.514 li
103.262 116.58 li
102.956 116.643 li
102.648 116.699 li
102.341 116.752 li
102.032 116.797 li
101.723 116.838 li
101.412 116.873 li
101.102 116.903 li
100.791 116.928 li
100.479 116.946 li
100.167 116.961 li
99.8555 116.969 li
99.2305 116.969 li
98.9189 116.961 li
98.6074 116.946 li
98.2949 116.928 li
97.9844 116.903 li
97.6738 116.873 li
97.3633 116.838 li
97.0547 116.797 li
96.7461 116.752 li
96.4375 116.699 li
96.1309 116.643 li
95.8242 116.58 li
95.5195 116.514 li
95.2168 116.439 li
94.9141 116.361 li
94.6133 116.278 li
94.314 116.189 li
94.0166 116.096 li
93.7202 115.996 li
93.4258 115.893 li
93.1338 115.783 li
92.8433 115.668 li
92.5547 115.55 li
92.2686 115.425 li
91.9844 115.296 li
91.7026 115.161 li
91.4238 115.021 li
91.1465 114.877 li
90.8721 114.729 li
90.6006 114.575 li
90.3315 114.417 li
90.0654 114.254 li
89.8022 114.086 li
89.542 113.913 li
89.2847 113.736 li
89.0303 113.556 li
88.7798 113.37 li
88.5322 113.18 li
88.2876 112.985 li
88.0469 112.787 li
87.8096 112.584 li
87.5757 112.377 li
87.3457 112.166 li
87.1191 111.951 li
86.8965 111.732 li
86.6777 111.51 li
86.4629 111.283 li
86.2524 111.053 li
86.0454 110.819 li
85.8428 110.582 li
85.644 110.342 li
85.4497 110.098 li
85.2598 109.85 li
85.0742 109.599 li
84.8926 109.345 li
84.7158 109.088 li
84.5435 108.827 li
84.376 108.564 li
84.2129 108.298 li
84.0542 108.029 li
83.9009 107.758 li
83.752 107.483 li
83.6074 107.205 li
83.4683 106.927 li
83.334 106.645 li
83.2041 106.361 li
83.0801 106.074 li
82.9609 105.786 li
82.8462 105.496 li
82.7368 105.203 li
82.6323 104.908 li
82.5337 104.613 li
82.4395 104.315 li
82.3506 104.016 li
82.2676 103.715 li
82.1895 103.413 li
82.1167 103.109 li
82.0488 102.805 li
81.9868 102.499 li
81.9297 102.192 li
81.8784 101.885 li
81.832 101.575 li
81.7915 101.266 li
81.7563 100.955 li
81.7266 100.646 li
81.7017 100.334 li
81.6826 100.022 li
81.6694 99.7104 li
81.6606 99.3984 li
81.6582 99.0859 li
81.6606 98.7739 li
81.6694 98.4619 li
81.6826 98.1504 li
81.7017 97.8389 li
81.7266 97.5278 li
81.7563 97.2168 li
81.7915 96.9067 li
81.832 96.5972 li
81.8784 96.2886 li
81.9297 95.981 li
81.9868 95.6738 li
82.0488 95.3682 li
82.1167 95.0635 li
82.1895 94.7598 li
82.2676 94.4575 li
82.3506 94.1567 li
82.4395 93.8574 li
82.5337 93.5596 li
82.6323 93.2637 li
82.7368 92.9692 li
82.8462 92.6772 li
82.9609 92.3867 li
83.0801 92.0986 li
83.2041 91.812 li
83.334 91.5278 li
83.4683 91.2461 li
83.6074 90.9668 li
83.752 90.6899 li
83.9009 90.4155 li
84.0542 90.144 li
84.2129 89.875 li
84.376 89.6089 li
84.5435 89.3457 li
84.7158 89.0854 li
84.8926 88.8281 li
85.0742 88.5742 li
85.2598 88.3232 li
85.4497 88.0752 li
85.644 87.8315 li
85.8428 87.5898 li
86.0454 87.3525 li
86.2524 87.1191 li
86.4629 86.8892 li
86.6777 86.6626 li
86.8965 86.4399 li
87.1191 86.2212 li
87.3457 86.0063 li
87.5757 85.7954 li
87.8096 85.5889 li
88.0469 85.3857 li
88.2876 85.187 li
88.5322 84.9927 li
88.7798 84.8032 li
89.0303 84.6172 li
89.2847 84.436 li
89.542 84.2588 li
89.8022 84.0869 li
90.0654 83.9194 li
90.3315 83.7563 li
90.6006 83.5977 li
90.8721 83.4443 li
91.1465 83.2949 li
91.4238 83.1509 li
91.7026 83.0117 li
91.9844 82.8774 li
92.2686 82.7476 li
92.5547 82.6235 li
92.8433 82.5039 li
93.1338 82.3896 li
93.4258 82.2803 li
93.7202 82.1758 li
94.0166 82.0771 li
94.314 81.9829 li
94.6133 81.8945 li
94.9141 81.811 li
95.2168 81.7329 li
95.5195 81.6602 li
95.8242 81.5923 li
96.1309 81.5298 li
96.4375 81.4731 li
96.7461 81.4219 li
97.0547 81.376 li
97.3633 81.335 li
97.6738 81.2998 li
97.9844 81.27 li
98.2949 81.2451 li
98.6074 81.2261 li
98.9189 81.2129 li
99.2305 81.2046 li
99.543 81.2017 li
0.74902 0.12549 0.14902 rgb
@
0.75 lw
[] 0 dsh
100.049 78.7021 mo
100.411 78.7051 li
100.771 78.7139 li
101.132 78.7295 li
101.493 78.752 li
101.854 78.7813 li
102.212 78.8154 li
102.571 78.8555 li
102.93 78.9033 li
103.287 78.957 li
103.644 79.0156 li
104 79.0811 li
104.354 79.1543 li
104.706 79.2324 li
105.057 79.3164 li
105.407 79.4072 li
105.755 79.5039 li
106.103 79.6064 li
106.447 79.7148 li
106.789 79.8291 li
107.13 79.9512 li
107.468 80.0771 li
107.805 80.209 li
108.139 80.3477 li
108.471 80.4912 li
108.799 80.6416 li
109.123 80.7969 li
109.447 80.959 li
109.769 81.125 li
110.085 81.2969 li
110.4 81.4756 li
110.711 81.6592 li
111.02 81.8477 li
111.326 82.042 li
111.626 82.2402 li
111.924 82.4463 li
112.218 82.6543 li
112.509 82.8701 li
112.796 83.0908 li
113.078 83.3154 li
113.356 83.5459 li
113.632 83.7803 li
113.901 84.0195 li
114.168 84.2637 li
114.431 84.5127 li
114.688 84.7646 li
114.942 85.0234 li
115.19 85.2861 li
115.434 85.5527 li
115.675 85.8213 li
115.908 86.0967 li
116.137 86.376 li
116.363 86.6582 li
116.584 86.9463 li
116.8 87.2363 li
117.008 87.5303 li
117.213 87.8291 li
117.413 88.1299 li
117.606 88.4336 li
117.795 88.7422 li
117.979 89.0547 li
118.157 89.3682 li
118.328 89.6855 li
118.496 90.0068 li
118.657 90.3301 li
118.813 90.6563 li
118.962 90.9844 li
119.106 91.3164 li
119.244 91.6494 li
119.378 91.9873 li
119.504 92.3242 li
119.624 92.665 li
119.739 93.0068 li
119.848 93.3525 li
119.95 93.6982 li
120.047 94.0469 li
120.137 94.3975 li
120.224 94.748 li
120.3 95.1006 li
120.373 95.4561 li
120.438 95.8105 li
120.496 96.166 li
120.552 96.5234 li
120.599 96.8818 li
120.64 97.2422 li
120.675 97.6006 li
120.701 97.9609 li
120.724 98.3213 li
120.739 98.6826 li
120.749 99.0439 li
120.752 99.4043 li
120.749 99.7666 li
120.739 100.128 li
120.724 100.487 li
120.701 100.85 li
120.675 101.21 li
120.64 101.569 li
120.599 101.928 li
120.552 102.287 li
120.496 102.645 li
120.438 103.001 li
120.373 103.356 li
120.3 103.71 li
120.224 104.062 li
120.137 104.414 li
120.047 104.763 li
119.95 105.111 li
119.848 105.458 li
119.739 105.803 li
119.624 106.145 li
119.504 106.485 li
119.378 106.825 li
119.244 107.16 li
119.106 107.495 li
118.962 107.827 li
118.813 108.155 li
118.657 108.482 li
118.496 108.805 li
118.328 109.126 li
118.157 109.443 li
117.979 109.758 li
117.795 110.068 li
117.606 110.377 li
117.413 110.682 li
117.213 110.983 li
117.008 111.28 li
116.8 111.574 li
116.584 111.865 li
116.363 112.152 li
116.137 112.435 li
115.908 112.713 li
115.675 112.988 li
115.434 113.259 li
115.19 113.525 li
114.942 113.786 li
114.688 114.045 li
114.431 114.298 li
114.168 114.547 li
113.901 114.791 li
113.632 115.03 li
113.356 115.267 li
113.078 115.495 li
112.796 115.721 li
112.509 115.941 li
112.218 116.155 li
111.924 116.364 li
111.626 116.568 li
111.326 116.77 li
111.02 116.964 li
110.711 117.152 li
110.4 117.336 li
110.085 117.513 li
109.769 117.686 li
109.447 117.853 li
109.123 118.014 li
108.799 118.17 li
108.471 118.32 li
108.139 118.464 li
107.805 118.601 li
107.468 118.734 li
107.13 118.861 li
106.789 118.98 li
106.447 119.096 li
106.103 119.205 li
105.755 119.307 li
105.407 119.403 li
105.057 119.494 li
104.706 119.579 li
104.354 119.657 li
104 119.729 li
103.644 119.794 li
103.287 119.855 li
102.93 119.907 li
102.571 119.955 li
102.212 119.995 li
101.854 120.03 li
101.493 120.059 li
101.132 120.08 li
100.771 120.097 li
100.411 120.107 li
99.6865 120.107 li
99.3262 120.097 li
98.9658 120.08 li
98.6035 120.059 li
98.2441 120.03 li
97.8838 119.995 li
97.5254 119.955 li
97.167 119.907 li
96.8115 119.855 li
96.4541 119.794 li
96.0977 119.729 li
95.7432 119.657 li
95.3916 119.579 li
95.04 119.494 li
94.6904 119.403 li
94.3428 119.307 li
93.9961 119.205 li
93.6514 119.096 li
93.3076 118.98 li
92.9678 118.861 li
92.6289 118.734 li
92.293 118.601 li
91.958 118.464 li
91.627 118.32 li
91.2988 118.17 li
90.9717 118.014 li
90.6494 117.853 li
90.3291 117.686 li
90.0107 117.513 li
89.6963 117.336 li
89.3857 117.152 li
89.0771 116.964 li
88.7725 116.77 li
88.4707 116.568 li
88.1729 116.364 li
87.8799 116.155 li
87.5879 115.941 li
87.3018 115.721 li
87.0195 115.495 li
86.7402 115.267 li
86.4658 115.03 li
86.1953 114.791 li
85.9277 114.547 li
85.667 114.298 li
85.4082 114.045 li
85.1553 113.786 li
84.9072 113.525 li
84.6631 113.259 li
84.4229 112.988 li
84.1885 112.713 li
83.959 112.435 li
83.7334 112.152 li
83.5146 111.865 li
83.2988 111.574 li
83.0889 111.28 li
82.8848 110.983 li
82.6846 110.682 li
82.4912 110.377 li
82.3027 110.068 li
82.1182 109.758 li
81.9414 109.443 li
81.7686 109.126 li
81.6006 108.805 li
81.4404 108.482 li
81.2852 108.155 li
81.1348 107.827 li
80.9912 107.495 li
80.8525 107.16 li
80.7197 106.825 li
80.5928 106.485 li
80.4727 106.145 li
80.3594 105.803 li
80.248 105.458 li
80.1465 105.111 li
80.0498 104.763 li
79.959 104.414 li
79.875 104.062 li
79.7959 103.71 li
79.7256 103.356 li
79.6592 103.001 li
79.5996 102.645 li
79.5459 102.287 li
79.5 101.928 li
79.459 101.569 li
79.4238 101.21 li
79.3955 100.85 li
79.373 100.487 li
79.3574 100.128 li
79.3486 99.7666 li
79.3438 99.4043 li
79.3486 99.0439 li
79.3574 98.6826 li
79.373 98.3213 li
79.3955 97.9609 li
79.4238 97.6006 li
79.459 97.2422 li
79.5 96.8818 li
79.5459 96.5234 li
79.5996 96.166 li
79.6592 95.8105 li
79.7256 95.4561 li
79.7959 95.1006 li
79.875 94.748 li
79.959 94.3975 li
80.0498 94.0469 li
80.1465 93.6982 li
80.248 93.3525 li
80.3594 93.0068 li
80.4727 92.665 li
80.5928 92.3242 li
80.7197 91.9873 li
80.8525 91.6494 li
80.9912 91.3164 li
81.1348 90.9844 li
81.2852 90.6563 li
81.4404 90.3301 li
81.6006 90.0068 li
81.7686 89.6855 li
81.9414 89.3682 li
82.1182 89.0547 li
82.3027 88.7422 li
82.4912 88.4336 li
82.6846 88.1299 li
82.8848 87.8291 li
83.0889 87.5303 li
83.2988 87.2363 li
83.5146 86.9463 li
83.7334 86.6582 li
83.959 86.376 li
84.1885 86.0967 li
84.4229 85.8213 li
84.6631 85.5527 li
84.9072 85.2861 li
85.1553 85.0234 li
85.4082 84.7646 li
85.667 84.5127 li
85.9277 84.2637 li
86.1953 84.0195 li
86.4658 83.7803 li
86.7402 83.5459 li
87.0195 83.3154 li
87.3018 83.0908 li
87.5879 82.8701 li
87.8799 82.6543 li
88.1729 82.4463 li
88.4707 82.2402 li
88.7725 82.042 li
89.0771 81.8477 li
89.3857 81.6592 li
89.6963 81.4756 li
90.0107 81.2969 li
90.3291 81.125 li
90.6494 80.959 li
90.9717 80.7969 li
91.2988 80.6416 li
91.627 80.4912 li
91.958 80.3477 li
92.293 80.209 li
92.6289 80.0771 li
92.9678 79.9512 li
93.3076 79.8291 li
93.6514 79.7148 li
93.9961 79.6064 li
94.3428 79.5039 li
94.6904 79.4072 li
95.04 79.3164 li
95.3916 79.2324 li
95.7432 79.1543 li
96.0977 79.0811 li
96.4541 79.0156 li
96.8115 78.957 li
97.167 78.9033 li
97.5254 78.8555 li
97.8838 78.8154 li
98.2441 78.7813 li
98.6035 78.752 li
98.9658 78.7295 li
99.3262 78.7139 li
99.6865 78.7051 li
100.049 78.7021 li
0.278431 0.545098 0.792157 rgb
@
1 lw
2 lc
[3 5 1 3 5 1 ] 0 dsh
99.0771 73.6323 mo
99.5313 73.6353 li
99.9844 73.6475 li
100.435 73.667 li
100.888 73.6948 li
101.338 73.731 li
101.788 73.7734 li
102.239 73.8247 li
102.688 73.8843 li
103.135 73.9512 li
103.58 74.0249 li
104.025 74.1069 li
104.468 74.1978 li
104.91 74.2964 li
105.351 74.4009 li
105.787 74.5146 li
106.224 74.6348 li
106.658 74.7642 li
107.09 74.9004 li
107.518 75.0435 li
107.944 75.1953 li
108.369 75.354 li
108.791 75.5195 li
109.208 75.6924 li
109.624 75.8721 li
110.035 76.0596 li
110.441 76.2549 li
110.847 76.457 li
111.249 76.665 li
111.646 76.8833 li
112.039 77.104 li
112.431 77.334 li
112.816 77.5698 li
113.198 77.8135 li
113.575 78.062 li
113.949 78.3193 li
114.316 78.583 li
114.682 78.8521 li
115.04 79.1265 li
115.394 79.4077 li
115.742 79.6958 li
116.086 79.9897 li
116.424 80.2896 li
116.758 80.5962 li
117.088 80.9072 li
117.408 81.2246 li
117.728 81.5464 li
118.038 81.875 li
118.342 82.2095 li
118.645 82.5469 li
118.938 82.8911 li
119.225 83.2422 li
119.508 83.5942 li
119.781 83.9536 li
120.052 84.3174 li
120.314 84.6865 li
120.57 85.0586 li
120.82 85.436 li
121.064 85.8179 li
121.299 86.2026 li
121.529 86.5933 li
121.752 86.9863 li
121.967 87.3838 li
122.176 87.7861 li
122.378 88.1904 li
122.573 88.5981 li
122.761 89.0103 li
122.94 89.4258 li
123.113 89.8423 li
123.279 90.2661 li
123.438 90.6895 li
123.59 91.1147 li
123.733 91.5439 li
123.871 91.9761 li
123.999 92.4092 li
124.118 92.8452 li
124.232 93.2822 li
124.34 93.7231 li
124.436 94.166 li
124.525 94.6089 li
124.608 95.0537 li
124.682 95.499 li
124.75 95.9458 li
124.809 96.3965 li
124.86 96.8447 li
124.904 97.2944 li
124.938 97.7471 li
124.966 98.1982 li
124.986 98.6499 li
125 99.1016 li
125.002 99.5518 li
125 100.006 li
124.986 100.459 li
124.966 100.911 li
124.938 101.363 li
124.904 101.814 li
124.86 102.263 li
124.809 102.715 li
124.75 103.162 li
124.682 103.611 li
124.608 104.059 li
124.525 104.502 li
124.436 104.943 li
124.34 105.387 li
124.232 105.828 li
124.118 106.265 li
123.999 106.699 li
123.871 107.136 li
123.733 107.566 li
123.59 107.993 li
123.438 108.422 li
123.279 108.846 li
123.113 109.267 li
122.94 109.684 li
122.761 110.1 li
122.573 110.511 li
122.378 110.918 li
122.176 111.322 li
121.967 111.725 li
121.752 112.124 li
121.529 112.518 li
121.299 112.906 li
121.064 113.293 li
120.82 113.674 li
120.57 114.053 li
120.314 114.424 li
120.052 114.793 li
119.781 115.156 li
119.508 115.516 li
119.225 115.869 li
118.938 116.219 li
118.645 116.561 li
118.342 116.9 li
118.038 117.234 li
117.728 117.563 li
117.408 117.885 li
117.088 118.203 li
116.758 118.513 li
116.424 118.82 li
116.086 119.119 li
115.742 119.414 li
115.394 119.701 li
115.04 119.983 li
114.682 120.26 li
114.316 120.527 li
113.949 120.791 li
113.575 121.047 li
113.198 121.297 li
112.816 121.54 li
112.431 121.775 li
112.039 122.006 li
111.646 122.229 li
111.249 122.443 li
110.847 122.652 li
110.441 122.854 li
110.035 123.049 li
109.624 123.238 li
109.208 123.418 li
108.791 123.59 li
108.369 123.755 li
107.944 123.916 li
107.518 124.064 li
107.09 124.209 li
106.658 124.346 li
106.224 124.475 li
105.787 124.595 li
105.351 124.708 li
104.91 124.815 li
104.468 124.911 li
104.025 125.002 li
103.58 125.084 li
103.135 125.162 li
102.688 125.227 li
102.239 125.284 li
101.788 125.336 li
101.338 125.38 li
100.888 125.414 li
100.435 125.441 li
99.9844 125.463 li
99.5313 125.475 li
98.625 125.475 li
98.1729 125.463 li
97.7236 125.441 li
97.2695 125.414 li
96.8193 125.38 li
96.3701 125.336 li
95.918 125.284 li
95.4717 125.227 li
95.0244 125.162 li
94.5776 125.084 li
94.1328 125.002 li
93.686 124.911 li
93.2461 124.815 li
92.8071 124.708 li
92.3687 124.595 li
91.9316 124.475 li
91.4985 124.346 li
91.0679 124.209 li
90.6387 124.064 li
90.2114 123.916 li
89.7881 123.755 li
89.3677 123.59 li
88.9487 123.418 li
88.5342 123.238 li
88.1221 123.049 li
87.7144 122.854 li
87.3101 122.652 li
86.9067 122.443 li
86.5107 122.229 li
86.1172 122.006 li
85.7275 121.775 li
85.3418 121.54 li
84.959 121.297 li
84.582 121.047 li
84.2085 120.791 li
83.8413 120.527 li
83.4775 120.26 li
83.1191 119.983 li
82.7632 119.701 li
82.4141 119.414 li
82.0723 119.119 li
81.731 118.82 li
81.3979 118.513 li
81.0703 118.203 li
80.7476 117.885 li
80.4302 117.563 li
80.1201 117.234 li
79.8145 116.9 li
79.5146 116.561 li
79.2202 116.219 li
78.9326 115.869 li
78.6514 115.516 li
78.376 115.156 li
78.1074 114.793 li
77.8433 114.424 li
77.5859 114.053 li
77.3374 113.674 li
77.0938 113.293 li
76.8569 112.906 li
76.6279 112.518 li
76.4048 112.124 li
76.1899 111.725 li
75.9795 111.322 li
75.7803 110.918 li
75.583 110.511 li
75.3955 110.1 li
75.2144 109.684 li
75.0425 109.267 li
74.8779 108.846 li
74.7188 108.422 li
74.5659 107.993 li
74.4238 107.566 li
74.2876 107.136 li
74.1587 106.699 li
74.0381 106.265 li
73.9248 105.828 li
73.8184 105.387 li
73.7217 104.943 li
73.6318 104.502 li
73.5488 104.059 li
73.4751 103.611 li
73.4067 103.162 li
73.3486 102.715 li
73.2964 102.263 li
73.2539 101.814 li
73.2192 101.363 li
73.189 100.911 li
73.1719 100.459 li
73.1592 100.006 li
73.1553 99.5518 li
73.1592 99.1016 li
73.1719 98.6499 li
73.189 98.1982 li
73.2192 97.7471 li
73.2539 97.2944 li
73.2964 96.8447 li
73.3486 96.3965 li
73.4067 95.9458 li
73.4751 95.499 li
73.5488 95.0537 li
73.6318 94.6089 li
73.7217 94.166 li
73.8184 93.7231 li
73.9248 93.2822 li
74.0381 92.8452 li
74.1587 92.4092 li
74.2876 91.9761 li
74.4238 91.5439 li
74.5659 91.1147 li
74.7188 90.6895 li
74.8779 90.2661 li
75.0425 89.8423 li
75.2144 89.4258 li
75.3955 89.0103 li
75.583 88.5981 li
75.7803 88.1904 li
75.9795 87.7861 li
76.1899 87.3838 li
76.4048 86.9863 li
76.6279 86.5933 li
76.8569 86.2026 li
77.0938 85.8179 li
77.3374 85.436 li
77.5859 85.0586 li
77.8433 84.6865 li
78.1074 84.3174 li
78.376 83.9536 li
78.6514 83.5942 li
78.9326 83.2422 li
79.2202 82.8911 li
79.5146 82.5469 li
79.8145 82.2095 li
80.1201 81.875 li
80.4302 81.5464 li
80.7476 81.2246 li
81.0703 80.9072 li
81.3979 80.5962 li
81.731 80.2896 li
82.0723 79.9897 li
82.4141 79.6958 li
82.7632 79.4077 li
83.1191 79.1265 li
83.4775 78.8521 li
83.8413 78.583 li
84.2085 78.3193 li
84.582 78.062 li
84.959 77.8135 li
85.3418 77.5698 li
85.7275 77.334 li
86.1172 77.104 li
86.5107 76.8833 li
86.9067 76.665 li
87.3101 76.457 li
87.7144 76.2549 li
88.1221 76.0596 li
88.5342 75.8721 li
88.9487 75.6924 li
89.3677 75.5195 li
89.7881 75.354 li
90.2114 75.1953 li
90.6387 75.0435 li
91.0679 74.9004 li
91.4985 74.7642 li
91.9316 74.6348 li
92.3687 74.5146 li
92.8071 74.4009 li
93.2461 74.2964 li
93.686 74.1978 li
94.1328 74.1069 li
94.5776 74.0249 li
95.0244 73.9512 li
95.4717 73.8843 li
95.918 73.8247 li
96.3701 73.7734 li
96.8193 73.731 li
97.2695 73.6948 li
97.7236 73.667 li
98.1729 73.6475 li
98.625 73.6353 li
99.0771 73.6323 li
0.137255 0.121569 0.12549 rgb
@
0.5 lw
0 lc
[] 0 dsh
190.182 102.864 mo
190.182 96.8643 li
187.182 99.8643 mo
193.182 99.8643 li
0 0 0 rgb
@
180.457 102.864 mo
180.457 96.8643 li
177.457 99.8643 mo
183.457 99.8643 li
@
170.118 102.864 mo
170.118 96.8643 li
167.118 99.8643 mo
173.118 99.8643 li
@
159.244 102.864 mo
159.244 96.8643 li
156.244 99.8643 mo
162.244 99.8643 li
@
147.92 102.864 mo
147.92 96.8643 li
144.92 99.8643 mo
150.92 99.8643 li
@
136.229 102.864 mo
136.229 96.8643 li
133.229 99.8643 mo
139.229 99.8643 li
@
124.26 102.864 mo
124.26 96.8643 li
121.26 99.8643 mo
127.26 99.8643 li
@
112.106 102.864 mo
112.106 96.8643 li
109.106 99.8643 mo
115.106 99.8643 li
@
99.8594 102.864 mo
99.8594 96.8643 li
96.8594 99.8643 mo
102.859 99.8643 li
@
1 lw
2 lc
99.8594 0.504395 mo
99.8594 1.37549 li
99.8594 2.25342 li
99.8594 3.13965 li
@
117.113 2.01416 mo
116.963 2.87158 li
116.81 3.73682 li
116.656 4.60889 li
@
133.843 6.49658 mo
133.545 7.31494 li
133.244 8.14014 li
132.941 8.97266 li
@
149.54 13.8159 mo
149.104 14.5703 li
148.665 15.3311 li
148.223 16.0981 li
@
163.727 23.7505 mo
163.168 24.4175 li
162.604 25.0903 li
162.033 25.769 li
@
175.975 35.9971 mo
175.307 36.5566 li
174.634 37.1216 li
173.955 37.6909 li
@
185.908 50.1846 mo
185.154 50.6196 li
184.394 51.0591 li
183.626 51.502 li
@
193.228 65.8813 mo
192.409 66.1792 li
191.584 66.4795 li
190.752 66.7827 li
@
197.711 82.6108 mo
196.853 82.7622 li
195.988 82.9146 li
195.115 83.0684 li
@
199.22 99.8643 mo
198.35 99.8643 li
197.471 99.8643 li
196.585 99.8643 li
@
197.711 117.118 mo
196.853 116.967 li
195.988 116.814 li
195.115 116.66 li
@
193.228 133.848 mo
192.409 133.55 li
191.584 133.25 li
190.752 132.946 li
@
185.908 149.545 mo
185.154 149.109 li
184.394 148.67 li
183.626 148.227 li
@
175.975 163.732 mo
175.307 163.172 li
174.634 162.607 li
173.955 162.038 li
@
163.727 175.979 mo
163.168 175.312 li
162.604 174.639 li
162.033 173.96 li
@
149.54 185.912 mo
149.104 185.158 li
148.665 184.398 li
148.223 183.631 li
@
133.843 193.232 mo
133.545 192.414 li
133.244 191.588 li
132.941 190.756 li
@
117.113 197.715 mo
116.963 196.857 li
116.81 195.992 li
116.656 195.12 li
@
99.8594 199.225 mo
99.8594 198.354 li
99.8594 197.475 li
99.8594 196.59 li
@
82.606 197.715 mo
82.7573 196.857 li
82.9102 195.992 li
83.0635 195.12 li
@
65.877 193.232 mo
66.1748 192.414 li
66.4751 191.588 li
66.7778 190.756 li
@
50.1797 185.912 mo
50.6152 185.158 li
51.0547 184.398 li
51.4976 183.631 li
@
35.9927 175.979 mo
36.5522 175.312 li
37.1167 174.639 li
37.686 173.96 li
@
23.7456 163.732 mo
24.4126 163.172 li
25.0854 162.607 li
25.7642 162.038 li
@
13.8115 149.545 mo
14.5659 149.109 li
15.3262 148.67 li
16.0938 148.227 li
@
6.49219 133.848 mo
7.31055 133.55 li
8.13574 133.25 li
8.96826 132.946 li
@
2.00928 117.118 mo
2.86719 116.967 li
3.73193 116.814 li
4.60449 116.66 li
@
0.5 99.8643 mo
1.37061 99.8643 li
2.24902 99.8643 li
3.13477 99.8643 li
@
2.00928 82.6108 mo
2.86719 82.7622 li
3.73193 82.9146 li
4.60449 83.0684 li
@
6.49219 65.8813 mo
7.31055 66.1792 li
8.13574 66.4795 li
8.96826 66.7827 li
@
13.8115 50.1846 mo
14.5659 50.6196 li
15.3262 51.0591 li
16.0938 51.502 li
@
23.7456 35.9971 mo
24.4126 36.5566 li
25.0854 37.1216 li
25.7642 37.6909 li
@
35.9927 23.7505 mo
36.5522 24.4175 li
37.1167 25.0903 li
37.686 25.769 li
@
50.1797 13.8159 mo
50.6152 14.5703 li
51.0547 15.3311 li
51.4976 16.0981 li
@
65.877 6.49658 mo
66.1748 7.31494 li
66.4751 8.14014 li
66.7778 8.97266 li
@
82.606 2.01416 mo
82.7573 2.87158 li
82.9102 3.73682 li
83.0635 4.60889 li
@
0.74902 0.12549 0.14902 rgb
%ADOBeginSubsetFont: ComicSansMS Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /ComicSansMS def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 70 /F putdup 73 /I putdef/FontBBox {-93 -312 1187 1102} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/.notdef <1C60D8A8C9B7A73DB6F0B6FAFA7BF3C28FD0A21D0FB70854A4518CFB8D731A1977C1C08A> |-/F <1C60D8A8C9B7DCE04D2071478B6F115AF694A8E536C9750EE96F1EB1769FB684668369EFA5B1D09D4F570FBFD701825A7B75DC8C63B3680F3ECFB1E5294A1A3E4B7B1E2FC676A9CB63D58515EDA8E5E6471BA237CAD509174D630C1402138B7971F7128AF2BA5F2742CB0339EF6366A73B719EBCD52DFDCA2D07E9D2E8A33236081B68EFAE70F9C4B9AE440645D2887AEE759F9333ADFB00EC22058C0D4FFF4FF26E4A22FF8A10E428C0F3FA8056990D492079D50B3F840690D8B536D32669887490817E061AC91C56218343D74C4C38DD13A74091CF8B9DC2A5FE1CDBAAFF91ED9D3DAC> |-/I <1C60D8A8C9B799EBD279262C5ABE91CEC2BBD701A188D7C6823FD27FCD2F51B76B7224F8CBE317C7C332084E1F3DBC4A711D1ADF20C7FDE6114505B093E3B642EAF66C4AABFA3FF012FCA9496C1C38B03AB52B6EEAC8C4D7EE94EB8D3602AD9E60C7F45913845D3C417960F3D5F510E09B3EA2AEABD28CA67AB6BD2F1CDF5E0496BB9BA4DD0C764C5D3DB39A134A5E9A4D5617BDB2986358995EDD5131440B1C73BBE9358581D5818F1E654C5952952C32B7FE0AF4922D718878A2ADF4D4FBE7021C0EC3E51586D7490EFA85F2B392FD53DB76FAA8C37544BB395B47769E5D2CC634C1995EC7676339E442D8C17EDB> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/JXUUAC+ComicSansMS /ComicSansMS findfont ct_VMDictPut/JXUUAC+ComicSansMS*1 [70{/.notdef}rp /F 2{/.notdef}rp /I 182{/.notdef}rp]JXUUAC+ComicSansMS nfJXUUAC+ComicSansMS*1 [12 0 0 -12 0 0 ]msf39.7363 101.397 mo(I)shJXUUAC+ComicSansMS*1 [6.996 0 0 -6.996 0 0 ]msf46.293 105.394 mo(F)sh0 0 0 rgb
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginJXUUAC+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/less <1C60D8A8C9B73E8B29993709BABBB346FC27B04EF0FA9A5C71EA0DE4E8CAFFC97CB02615716FDAF8E3D36B2E670064B7141E12355C8F88EE8446872C9BB0DB354682CC8F3B98D3B3E42F5F920DA45E291A211746BDF0D88FC083D722469C70F499E59CB087A7A85A3DEFB067DD462044BDC77A32229FB5B56D2B43AE3C7D3A6C59D7A7F61DEF> |-/greater <1C60D8A8C9B73E8B29F001C8D769BA1415961F5ECB4CA85CABF6A6FFF99BE7570D2961D0EF2782DB2BF9D1177C40160306F9EE455908C90D44BA43B6532C89535E5BDAB4BE4064D195FC639A1514A1F70BA47016F9735F28D4F64F80C26F2E59204BB149DEA5DDC037D7BF37E8DBAD> |-systemdict /gcheck known {setglobal} if end {end} ifendJXUUAC+ComicSansMS /Encoding getdup 60 /less putdup 62 /greater putpop%ADOEndSubsetFont
/JXUUAC+ComicSansMS*1 [60{/.notdef}rp /less /.notdef /greater 7{/.notdef}rp /F 2{/.notdef}rp /I 182{/.notdef}rp]JXUUAC+ComicSansMS nfJXUUAC+ComicSansMS*1 [12 0 0 -12 0 0 ]msf101.068 152.396 mo(<I>)[4.57617 6.55664 0 ]xsh0.278431 0.545098 0.792157 rgb
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginJXUUAC+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/M <1C60D8A8C9B59575D87BE2168EEA28120D9030AFF41D7AF515ACBF3649BD2F40DE0809DEF2C3B0D88F5433D0339D1594A8BB5B7D6E9E407C9B2CF774E827F6D240DA9788FD58FD6A6693D238D2DD35EBAD61FA6DA2B1B88D98FCBA1CE329DEEDC1A2CF7DB3CFF85E91DB1E05982789211A03C97DDC1A73F165FD37FA7D660E3EF66841B5442F7DA5B28127C6557F4AF9EAE68C31E263F78BC4FE967BBD3724E8E4E7783BD6F3F0D1F9D36FC073BBDC3BB91498E2940FACB05B3E1AAE653273D1E1C1DE5C399F68768F7EC53985E7DF8ED50093CF6E6C7AD007BBE64BE70B06C3BE97174E50F93FE7A1F609DE48AB13B0AFA023A5454E929FDB> |-/R <1C60D8A8C9B6699559421F03C3156FD8EA055B7CF36CC63867CEA507552DF000ADFFCCCA7355E525CDBEFF5F068702678190F4222B5C045B197B40B8D83593DA62427C27612B6B2AB09C4F9431042321EE893508AAAEAC5AA0233062887B12C86642E439498A4427C8B6E96402244A9DEB714EA21F1D08D940B3335D0A7759335582DCC87570AC1D46EBC5230DCC3C83F1FA484A290F72531475555A949024CA26AA01460EEFCA5617972EA8FA135B14B899313477DAE4FE3AF85806B96CC76A4776DE79BD94945AE8CF2CB5E13E2BA79EE4EBEA7CB5E9E682BB5F0B24F34F6DF78858E108A53FBD8DAA29F6E723A59B2D2DB122E030DE6B7B25643C43E78E254E3DD4> |-systemdict /gcheck known {setglobal} if end {end} ifendJXUUAC+ComicSansMS /Encoding getdup 77 /M putdup 82 /R putpop%ADOEndSubsetFont
/JXUUAC+ComicSansMS*1 [60{/.notdef}rp /less /.notdef /greater 7{/.notdef}rp /F 2{/.notdef}rp /I 3{/.notdef}rp /M 4{/.notdef}rp /R 173{/.notdef}rp]JXUUAC+ComicSansMS nfJXUUAC+ComicSansMS*1 [12 0 0 -12 0 0 ]msf54.0693 139.731 mo(I)shJXUUAC+ComicSansMS*1 [6.996 0 0 -6.996 0 0 ]msf60.626 143.728 mo(MR)[6.17627 0 ]xsh0 lc
99.4023 145.731 mo
99.4023 145.731 93.7363 144.063 93.7363 134.397 cv
0 0 0 rgb
@
92.7119 132.036 mo
92.2129 133.688 91.7529 134.764 91.2197 136.09 cv
96.2646 136.09 li
96.0391 135.615 95.2725 133.688 94.7734 132.036 cv
94.2383 130.267 93.873 128.661 93.7422 127.621 cv
93.6113 128.661 93.2461 130.267 92.7119 132.036 cv
cp
f
0.75 lw
65.7358 136.065 mo
65.7358 136.065 79.0693 132.731 85.0693 121.731 cv
0.278431 0.545098 0.792157 rgb
@
85.2432 119.809 mo
84.3208 120.718 83.6318 121.261 82.8047 121.942 cv
86.126 123.754 li
86.1479 123.36 86.335 121.816 86.6006 120.549 cv
86.8838 119.191 87.2192 118.004 87.5068 117.271 cv
87.0469 117.91 86.2305 118.835 85.2432 119.809 cv
cp
f
46.0693 88.3984 mo
78.7358 87.3984 li
0.74902 0.12549 0.14902 rgb
f
1 lw
46.0693 88.3984 mo
78.7358 87.3984 li
@
81.0654 86.3022 mo
79.3975 85.854 78.3091 85.4272 76.9673 84.9346 cv
77.1216 89.9775 li
77.5889 89.7373 79.4912 88.9121 81.1284 88.3623 cv
82.8809 87.7734 84.4731 87.3594 85.5093 87.1968 cv
84.4653 87.0981 82.8501 86.7822 81.0654 86.3022 cv
cp
f
81.0654 86.3022 mo
79.3975 85.854 78.3091 85.4272 76.9673 84.9346 cv
77.1216 89.9775 li
77.5889 89.7373 79.4912 88.9121 81.1284 88.3623 cv
82.8809 87.7734 84.4731 87.3594 85.5093 87.1968 cv
84.4653 87.0981 82.8501 86.7822 81.0654 86.3022 cv
cp
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/JXUUAC+ComicSansMS*1 uf/JXUUAC+ComicSansMS uf/ComicSansMS ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.2%%For: (Lisa Tauxe) ()%%Title: (incfish.eps)%%CreationDate: 1/8/09 2:25 PM%AI9_DataStream%Gb"-6G?Z7adl@8S!PSZ7.#Pn&?m_=`em2Pa<)s-fE:1(,+2?/$<cseJbV4_Im/9&uZfa@T4WUQ'X"/>CF>B8&%pHA1lTO/)HTeM=%6<oh0\1WSW<>&c_jF6-phXf=?W2?_-`Jc(1.b#4hZD]9n<AZM/Wef$)fWG^ulE1&2[p?-1HA-OKh<h>b$bn3opdsQfSlF\[ok(Q/%YB[caWI?msPhW<(<c*=DW`PHdn)VX]n7p>71`Q+V?_uP/qGM2flfE<aX4!&u)$.oKkp8Q-1i'"AYLe)E4g)j5(<\?6VOJV,KDiT0%>("\s2@$Yd3C$TJ*IP]`*^7qXaS2`]^CQ]^TlHBbH[4cWfAcr.0D0EiIrFuUh+GH0DLGlh*FIF53mC:3:9eK4))\Ps$>%-)4?lts%QjTfC$[P:j<@+ds),jDn\7*Ic5W9-'0k^Y.kOlS.oma(GU8s8S^YSd[F$4G@.?\`-r`/"90PsZD@51bZN#RYA0auO('eTa9HM=;e%5SQjnAC;Mog9l6j9V$<)DH7;bFP<Jf8Ln%I]'o;U&5]u!5YS9"%=pZoeMs`0Y'55o2tQ.4;f>sND[G?bY%9Fa#IKj(Pn]SFU+*p6%#_eF2`mFclCd=*kb+QV#YSZ00%dS3H.sKQ]]Jj$[$on2sYM6#/X/Sa3K74C,1PXq>PQ+DZKfSo)obIWLaK'8hpB+WNP+qqrr;dVa%W\b8qP!T'PoHs/p)QdJF?NFu1L(N7GruKGcmN[u'n5#A?;q(6b2"@nKi2*`<Iq9Liatc/GAbrc=`n%M^VI;&N_dAje[58>.Bj/'k%q_V$KA"$N?KR_Y.1pN?\@P.M4T3/-j^flEn[O`-^8YLZWb%5s(/o)B6/sl*R\P1aSLaftN*]bKnMCnXF=cOfu'5QQsn.TTrSG5eB%1Ro&+@NCsNIcA"#->6VR'7SpoS.U3Z:D?U3B:KQ_ik4e7QK"ER9SuP*51[Sri@!2*Qa)LQ%mj$29X.-nKV,UtSN2Cq_G4O7UEeiI%NHbp/%r:/%n.U/C.nF;IT@"Ck^K:m,a&eX;Ksntri@"WAg!TK5:C9+Ji$[*mq;E],77nj?YB5.3Oja:scKU+f)24,\*G\NbEP0Yd%;s4g6$5X_Lp<;-Hf&6S4%aL)5-I***dok.t3'[>Z>*Qa@IM=0:/Uh.LS6[\f.@]cHME*^!V/B&GS5qVW+lnkc-nXq:_:Oq2SO,iO%:<02U6cf(\n@;EKYneFPp.jAkkO]jMSF0'Cc#h2ZDJ0PlnrM5&^"[7j=H`,RHY7=\fsFPSS(#&FJ(WJP+hlFm<T[Dlf)[&SR)IQ6%2E7cX?9U"/QaRSsJc*F#PUhXXT-Vf3p0[Yl;<Vrq0Du\[W[]U*s3cD.:4M#Jks*(Y^C>gVD6SN#*.;;rV>p+3qV2!Bs2C/?+t^)"%dXS)+rGDS2rrhX0jla-spds)&roUuZ?^RI]'GRr[Pgse7BBVe^Y?Vbu<K_J!CT%l3jG]U+/o""hN5&<uT;j$e=oC*>("cI=1R+-/%'p_BOf!bHQ$Wn'H@o$3!a+ccOelRn+L#lE0Puq5p-UKHM$sJpVL%)DAH1mRfTfnL"MCQFPp470kM*tMjN&XG?W"A_PbiQ,[5n*l3%Hm>7C2NFgT=HBqS,mkMV"j[n>#C31V5I=EAW<g-W4N[1qUgB276eojR$C0.s8[1a"1471I2KR:g.FBQ&fXIU/hdqMM[NW]*8\ZGi%PKZ-ZbHVONVp&nBBFWUN71#XHGZ/RT=YEY_b7Q5pUkGL?b`eqc`At'$.e`(h9#!`mmO4@fminMBN[k=)K]BmI-cY_!^8)!b_F*(a%GnVaVH5tsSaf8G'CWnJ8i:USO3XQm1/CE%E%dC<YXbpTEVHK8qWJ.I9cJbbEHc'.-7PsTpfi]eoNGaa$l6GA#5$!#mXX^G?k=^<b%)UR'06Mgl`KWQY@,NTo4[HF!&:jc-_o<G!LBOS$aG8[4XdXsgT6KXBioEtJUn.sHTb\;p_L2??B8bR%Y6Aea`pF4YpaSDDX$:P=t%OlMhsI+asn:uJiOkkKH[fQeL&r[)Dnm21[G+QVq_QIq":02R:?#g1oS?7o0$Ys%?nZ/.gmJqpHE.91&N1>,lr;c79gI<*&6d27L-%.U(K/.)FV!XO!Dfgjuoo&:45o^Qd4+'>AWfM*fL5-s\8nF`;H?VJ^_hKS]AWEgk:1Ec`W3MR$VUDGX"O`3^9Q6E(P?B@)lWT4NZK%6>6dN)<jlWGSN&1ZXh$sKTY:Qa4?-cB]FZ)9]fg:;UD9E^:1@s]!jX(j"&1s!ORW%&8V'36I'gQRI-(kPr^g7o"@YB-Zgt[fg&^Z%I/Q&`.D20_Gb9(REUI5V?@m$a)4`dS+1,r=B=NmiaKaN`K-b<2.%CJiF:>T5T-<pG=3R6FQ1]ec9@fO^pAX3!Ti`g$fZFV`PWno3%Ze]'Z<FIj<F6W/S(hKSRE!Z,g9a=Wud[h9d&LaL(hAFfh/s5fNKhuD%hd-]ae6m[Ki7R!MKLom?;F\s)Eg#@Z,T6*d%\LfWi>:(A%fV<eE[r_72\M0p@]'"$Kd]8K\k=h]p$(@h2P!G[o8Z4D.7T;QB2@WNTas@2B+o![@qPK_1a_k&l;`9N1X=.1@_d-hG'^++8i*;Xb%6O[/9=[pGCZiqb0**A/sY*"tb'GYcVZD$@<^B22[,*7,%Y-t!%S<B/HZoq$jU^Z>nmGHEO>1q+7Lpj8EE[WY13^9Dg6)FT+XT=rh%P/jJngR8mB<pAt]N[8CE_r[%&+idB]d2$cR?V/jW<AZLM'K$!D_))o%"jkWpBB`*$WC2"3V&u(Q*nlnCRbE'Ck=K3E$k?N\,%laE%A*2$@:,I%i0E,=?c$Vh&M$:F4lPfK!R0\j+Qs`3f*D>uTF,cTk3Me/O'2(;T/ue=H>Ap(mKkljM$ZUR0?aa9O*\^Mt)-diZ2h@2%%74RhQEB->Z/)@[^#6HeP`!GP?3&[+%"<Y45eo]'Z/Xg'(#H1)af9/OdDcuYgU#V?&RY&o.'G;lC.*fB;`TE*MbaUjZJE`TY2K;>d%(^j@E[/7M0fGYR8Q)FiGg'>U%!ir?`YV#%d7)R;3E/jR/cBQG\"hKcj>aRo5ob*UYfU?ggr(C\Kq&ZN[Z,H>_kP0-E]&%%Zl<?0]%jnt+^YK0A)k/$aPV/nOeg#Bo<P)'!;@XR#m)W8tACsA!ugbBR@&Zd7ECik)ASVYE4DE1Uc8Pu0uM/2c`2kYYgASBhSRVa!AH]1.`%-$1`\T$tfmZX#lj4e[#pSDqA>*7inu]k6qG=X?PjTK3R3Ek9AXEi,NQDm:lrC*.NPEkS(E[]F,^0>tF"gKg"YXc/Ge%0K'-0IB[Q%l=.397b>i#4YR^6;nd`tY$lAW3cDl\9>e!f=paBGp33T.+a:fgT!A6Il7@<9ck>Ck+T-7<pYe.Hh;Na2.!\Pi'_dgs+gl:#,.0;d%T0Qdhj)J!)QUq#\e+T<>'^%DEhpa7p.C\6Aijp>_9[/0*;es\:1;dEi\m#p-3WPd=/Ljt#j1I?!;(IOlH1Jm)jQsGKSr$b4iZ8Mk%'!=1f!^Q2Xc<Zhr,'2M2=p@qn[C&khIA@"aTl'8'hX]IRA+QcAN/;YtrB7M0at`ENPbGTO\98'<PkfGIbG2n%%QTFL;61XM%e*(=%_kbY"h8-OUe=<XP$-X1Dg4n-:o/0?]O&MmKd(_KpEVgA/"HfOWS8Gb#7/A]$_"MOtM9)p><ng%/Td7*!&#Q6KO,"oZ668K;Vea,N%!P;u;D^sN82s!d_P6s't^<H@4O[<ZOBt#GVh2QKQ!>d&9F"!onf[bWXIu[,Od#=nS6&e8c;Z2Pp8>%cljq(9`'Cu\FlG-\7."Fkn%COp.RC_Tdml&9E&S/tPjV.2l2Cn8]7<PkBQ*.`]jk>i(HM/1ttH=s[?/Ej;f>`+p@ItnJ(]P<t:WU<$ZDF9Ni(kqDG]TX_c%PK9s%6_s=Jlcn\Dk)6mLmGG7TcJ'T3aUV=]rb>XN3T`E1\K4m:7MY$ZU2q2eF(r4sLc*KV81ta$fGG/mPTpjP6$EO,J%\8(EiX_tA_^&B%FuAAg#("sDTZ*"Y\5p-qrQ`'%[OnIurkmJW<MWTbdN>^o(ro(e940C)Si]6ETZ3DXLamrq^;HlReZjp;^u-7el36?Q_qF%:3!Yrq%N6PCYq,/f:+l,9sO#EDK_YuL@d>G&!*8f9;bONVB/)V<gCd`%@*$J?3^D9G+[r<EC)3\j5`;?O#e/XJU'-j7Y--P#e4$3ank'<d#%9uYi]59IkQ!LT0PB&5PqinP$iRB1G$$f>6[>?I1Hk^8]pc0AMTlB!HZ64*?Ggm!sZ]"af)$`d'OrZ$i-C4DHCWn`3g[K2kQ@G-jg%D^el(.TptU_S%Qi5;-,F<mg<:jYN5SYFWb2/Fe`50,=$%1/G.9b7Q>0QDRf%R:ecp16:-8,4gsr5;I$!4b<eI.eC>0%3\O3T=.cn%[a.VuEkeGSidH^8/l`:l9G1UEH\_W'EmT>Ons5GTHe28WEX/MGT@J.W!U+oZ."s&q>LjAB_E?T6PX(o-b.Xq<SAWd1L`ZZp.k5h)%24L5EP8VQdUth@1U"Q_Yf!ogt*803%3G2Q[msNEWR"]=Hh!dHRkA;:$3r@=8o[4a-7\''K3p1-O2UD%VHfG$.b2phEN%2lnZFH6[%qe9knPN%duO>6]8U[-1<%[Q7q<g0/r3W8H3kB$(1`b,('e[jrqTrW%rddFA]/k_W!$`7LAnX/dho!^B$Q[:<_'ZRkMV,e&#Aa$Ti%q[4X=H9@5M]\@>4hrur_4*bjHmghIaVjM:4Igt-1HEY_BDq<sGQ@84&ri0Hf:,Z0he@Y4GQd'[3EOJ]Gf,DnG-!RBK#Q8uB[,5QJ%lIdt"/XF)T>#]1#$L'-HWA_?<_:Mntrcbe[f:hR^V"6))]M;YMZ?=m.mV#e5RPnjR%9f[gW7/!9Zq0qrCn'!me%0Bdh6p=m9gKZD%WWQFI?rr>!#?KYajo)mLc.2m1H9GI9HtRg)HFJa;kgc^Nad%8p1n4/e[SuE7#!*i/B^o):eR"_qV(RURKAL@rC:j)LgN`b^BD^LW%Xo;>bIV(#;eo7$X]3hVRATO^7=g(umIDi4]:34eZC:"1g-3!X_]p8O7G`-'!p%[Ef\+WjXXr=E'IfHG?We2Yti"[_<c:7gkW:t7o%[J%@=g%sUVB'"qu"mTi%.ns\b[<cVs@<%(=GTX_!f>$&<B)SiMs.YmZ2k,d:cFhc.<9r3W?&TaJ2YO&5D'P%IC&h/?r^Het63\-f%:AGFS-i%>?e&#;KY6GVqKes2#&(\5!DM>6,C!^]18BFW3i$Q30GHpL="")75"%LRZ@%;BL$&#Cf^!C"8]t+@iq#OLm+72?)80jMG%3CpO<pn"7F;6k^&;:HT4ncL8M*a"[;BVdLgl-.NsTD'5*EC4Ns34l_pO(u1&]j;rLBMB<&X&A=/]m&eL>,=hL"PqLJ8&qnWK@YCG%48<Pk#(>-Zm8j0A>HL0&fQE$=-)u_Rf=f"%I6E#d%r&O#@8j"'[>glflgYc]/?:;(odT3SP]^$%EL5:<ZpWc&]Y!r]G>Q'Rh5SGd%6qq2r3A0T;(/Rp/25i@jLR)eahI'"KIlfP,U4H8D5$>)I_W$WDBSa1U@))FTQ"I/gp6LF.I$"E\Co?$j%B@2Q)UMt9q&4?nR+\gL%qKjM0'2:=lRihB">Vu+iV#q2+Al+ja[TIJA.re-[(r='YqffaH?B7a:J<cTh_Co!*^L#[>QRr+$R^l$fq#[KXLNUF(bh-V7T,96E%blKr\la@%hK@X6gQHIb3YP%[9V>h.R2dq(+QK,'*rf#;A:jUplX%phnPt#CH[(koZL>'A^cX))&K7q7G_#AL7B_:Vc41_G$E+q8&%mgaXcn`tA1Bu/t]A:_j[8L`6jmhk)T1h`Gf.&Mbi@MQO#jgtEj\l#,Dn-JOQ^Ua)*"b[>Id#G'_!'\`2Om',+"tMV_h7DF6r8`>P%O<rT5NS^!rNK00Cj?1t)rTZ=T(13h`/(WV3h(K#e885'r=2!;T3.SA.5Vg=I.c!j%f=4Mi0l+!\aF:SFf`(/DP!o65UXH+TE;L_g%;Y)@>))j(J8iKMfXY,b7!;us`F0d,qAp(*tgNTs;[C'tFB[S8q"47&Wgch#eC4UOqI`0h=UfJFhb+;YJlL@l=eU8:!5L&bUQ5`QZ%'2ZI5!V"$A"^8K2G]T0N=nQQP"`j6VgdVlFb#`nKWcOPFqm.?t6mCNXB3eOS3[ltC7TAXONirO/gAT3@'m.HA%3O#5$m/NuK+Pft%*>@FfnDu#3r@>%h:Z>1-Km4&!mk81H#&$1cQ19iY/=pm(ZOGZ-`6"tJNEA<$PjU=D,)X6M*ssuAmtP$b$+CAJh)k\o&C:fX9>boZ%!8H1G(5n3r3B<\(@NLnB4E],RQi="oc>#5,0HlUY=5E0&J)?^pZa1L.qls`FbEi.1=%SDbGsL*[0ug^Ul42s$ebB45Ph-K+B/(P3%HF9K*QnDoaJkkll$q1pHp`epZMGJ?5'OVq:U809+=<s'epQ\j&_@d/`;=Q=I@cRL@H";)I3RnK!7]`7&\(=IS5EYGb,2rPi_Z'h&%@#bd)3p.`NBaD#$i7^jo&lm3'i/=<;We%P\6^)Wb5:-md@0F*?.[^W<KB4'a_5"6PCp425T`j:Gb'smrE>2R_%KR,D6]=kJ16R[A%)SW/-.[Z#fh#n_`rrG*OTX6Ifp:l@bC8FG\Ifp+C10fKG*+"W.^F=u9AcXqbVDolZ5LdX8""VbWq*s(tkETYmhld^GcX3G7lcjf)%e%Yj+Ca^P-]G`lX>B')j`\C_ZTf_EM$r)pbR)D<,"o=%d+0_77Ntk#PT#-$')6>qFT,qCRAGL/:%/f5FE'D$J/Y9YW=$Z1q.TGCQ%?S#(H<U"q[,*<]73pjYZ<i+L5d39SFUB;>m<U2IsZq+UOeTS8l9/be/gd+%]kdTT='g09Gr4>^rUjstXIrYGk80/H\oQd=:DYIHk%j$)B"qu4D6!MCXnWH<ZepDRCk-<Yd*DDF?*!2fYIY&nIL._]JE%Jb*DY;HMkEVo\8\Bf%rNG?(+k@;E8LiEg)jNoR*'(fVVo5;6C%n&KEddS@.C-c`.3g_\p'rP-+9/U4o4*HW7(K79Ab0:V9N.r:XQ_d1KZIn-X+8#'5Qeeuan&b)^ndJr%]MnI^-^&1mpp,3nKl`Bqa%V)dIVZ+LlLY@Z[^6.0iQqB(S8&5)U$LhX;uTClA%bj_&W,0WXAp"CNAG7c(D%>Y+p(u7r^kNAp0UZJ*\'4N@:,0dl"H#;--&H9aN%rL^IEfDg`@eZnB]VJ)K+FjTH`^]#c3qp3[KHEVp8-L)>M`M/OUIsbT'/H8/3r,:5a]siLi(JEdQ]FB237eM6l0,@8<UJ$K@lNb]-%UQ.&g;3mU$r3K(abY'ec;=jWcUXoI$1+cPscd'[Zq;$j0r>fT*ror*<Dt"]#S)7(ToD;>0`\N4"VX`C.K1^)fJ*YR-_*sdBE1?k/%nPAr:<I<)pf#as1s1%t3.J9T)po='=2,K(*Ku9DnNqjT77RWq&7qEJ?UU)EKB"9WWkf2ic<KFWhWcpPgB^-&;=^2EiK0BLK`d?c;%.:VCfrGN1$+BZo,=4Jqn$Ea8,YP-`,phQ^/BiVjYcdS]DCin[e2JT:Ba"]9Xh=?+eN,q\2)ne/D,r>OX5'di.8%Mb*cDAlrFAhRU%=?\4o<-#L*6G*86J^k3.Nka%V)o;g`=6F4KIKq?UG:tu3=8d$5ea$1bL8r"^haT3SZTMlhWlf(LX",g>49n`a@Lsn+?Bl5H#d,[<%\fFprS8Pso@5/BsX/>)aLiZ>7f0F6D;Q\?M]Jc4<rblT&38k>Boo:Q)pHdoS*^=RepsQ!L?1R_\(:rm.^A[f?6Q6qHq9IPG;Mnjo%kW@haR\5f;Z7:TY1PaSG!0>+0DS8@IgP=iVMOt.[EKRk5I7K4]L.Ft(Ber=]L&bY``#9;Ei=%(!3&C.sA+,PKGJfZjYAb]tc>[WA%#3YQ=.NXW2>\kj\40\RkEjDFeOH<>F[W'LjCqjS4[#d.i=g>G>#A=6`jEo\lZaX-,ZdF%%%edFQ3[b2]GC+IccKQZ'Ul=IfL[A0%%jbr/`L,k;&#JPGY222u1Gn*5C]Ij\fer7)l[P3Lr>(jf%HOZ"*!9^o1CJKTnnWXP9A-!QnJMH^g-R75CcYP#mbhc5PO`uWg-Qf7o%pFnKFG<&-#;TA.`[4_GP)]^.e0fg'h&Q[n.1`?O^Jg99*<XqU9E*ZhnGN+K\Mi92jI9^U9<hn&"H:u[=S_KpnX_$5BpWU\KkW42R%<"&_0]kXBHkC&>kpK-jeV3O*dlL/*b5jMBR]mb2jrC58a62^"ihS2614W[0+;?t^>H>Q'@.e)q8OPa7?9We*o3b31g=Jn*&jg1-K%7d=QR^s\YpYk0]S%4$VR.]rPo`>3@mQ)a4PT,a>Re7jf]]INk'lLiZmI8jsKnmc+L[h`_MXa8=*h41nPmUWu1X'Zms>_<'4$LLTr%4eb7rAEosWD%Ojl4K"aAk-cl#f719\"`t/V<Am0gGGKDYe`(5_ro03mU9=0N^%IYqWAJa]\]VkZlE@u]6$Cl>hbmO"BBS0<j*sYZ%&4&7GDYpQP\!H)>'P8=B=s;Y1e*2kq)=,dc,QUh^6-T*9(t<UdU3&2qQI?5..b<L-!S?>7^Z39cm$Vbdbd"isD1*7p#En";:-a3;%**+7!9I)YbPpi0jWm.\frLH50@B0jK*R-0YakrfKHi59u.AH`ZV/-:efSn@iTo[X!;o?.&>EOL%e09*3WR>N))F;<k^oJh<R$/Di%AtR6YePsD$G&?6ceNdT@Ff@$1,Z2#-hKnko8@%keo@:Nioj6[l<H/oL^(nc<^+s'JaGLJ)&mDKeHYrDi.Nq[iX3s&b@J>ECc2`\,%qnJ3.3[(/*9hW6N`=#S\eWb4nFi"`H_MW7Se3;UBIl$X$W'sAdB3t[c*C/8YF@PSGXBp_.7eE=!$W$2bm2r>^OUYj)As>3XAGo!T%>5sPWqGKIWKe89&]UR1BK8qj&"3eOme[gbh\5CBkqGCQLh-LA-D9W]:PCl(fW,/_p#^*a3#r8NhP>,_AeaZ?64ZCk&.U,_>W9\sp%6>[6S$dcULh7**>OZoT4IN^Z6KeG1EZh;%:=d=[@26lIY0#TI9X8*fj%A@Z4\PRds+lQdhqN4:HR]bK4X.E7LPhFg)?LZ$(oqQuQ%lIYJYhIfo+pHSQr1c\muiM,!B[W(Un=a/@Bp-bZ9d;J*m@Tb7+QCucu].+d?(i$=9*!gmcDlZ+poZli><lh.6<mj&OI2Tdkb3$[S%Cd#;4^6&X>o$2AB?[O[(5544n[jo?UiF1Je.]'U,[?!^jXg4I!]mW)$,noO$\[=hOqm2ep1Y23:o&o.jOPP4b-KD(^_X`E/PBnSV%:%;083W$'5k7-+k*jr2lc*\YT[XKS32>aAWs&(Ll]A&V%?M!mRC];Ar71Km6g+K9rGD3U)m!eBm.(?DI'[##hb5H4d^Y+7jLL7pt%O7Rr\kS])?9MJVq0Eb6tkSE%K^*Rf4cdt,;c'%X]:].`Sm7P&!cK-d'Qq6]Eg.nGY67/s\[<%84&e_5e5Hb`9q$.)$Q?#_p=hVal%H#Y/)/Ou\CD=0(ToLu3MpqB^lQF>t6A6k^j1>/8(-gf.H5Jtg\VGLKE-orO+khUEs22rh(X'F&7*ShW\aa8=-,*dal@`t?&N.MGf%rE`UZc,drF+MGIT=L8lr%'$ZfY?F5E5'OcVHs?g`](JGh[F2lQ9&.>46(bR*o:SDDkF8[.8,kk6'2Q=;gP9jrTJ-]np0qfOHbJoj%kVm1$UT/,7%'%Ruh`dX3rdu[2O$Yk1S\Z_'F.Fi]1_s9c`jt!"6M[ap+#rJYUcal(KAn:qfUB%Rf7!-YE;A+F<4IBGoI=]2HG;+]%Xg:=>Q^0aL.X,g;+,%Z-RR!%>-24E'Fh\`2$%eM!=&o(!oJ8FAre#Cf%m>P#8g_GjVo$H$d%JqWZQ\3&%shD_RK')m:Ab=`c$/a?%=>FQmq`@\KI.SL[=ain[1iH-;#G!AH<6q5BUiTOs0(K$qC@b$I:j2sFI<Z@HmH\Qf62)/'@`cULqT"TQ>_Tj!j#1kRMee0n#9C2D%mBc051ipjRV;9ZC%SD"/bf)='rlZ,2X"^L/nIBkmE;H+7qQQ:VbZ%Y"R7I9CQ,c!`o't=cD@c%QoO)QE*'[C3ha,SWp&2ZlO#"I2%X7i2OA'SMTd_aQ)YCZ_H8+Q7k\\+-q*VB3$E=b*C/9uB4?2k1tlVgZj'qS/"6''X[YA5dA)nps]5&^,\6"+'S_qq9U0:eb%:P??f%SUA5GV=`THd4P,&$L@8mHMngCf:R-9a8(6O^M1RZb)`q0TVj`.ch6A`.N((/oZm.*q>M[Zcusgboc>sRM=@9^>kAslQ@uqt,L5->%0+RpBg?kK7c*K]Cj^lc88Xh4VR1<DglgMA1c$FRV(Bb]l2'q]rcaH`dSkJgi0^)Qh.r!Sh&$'Nn:NOK2B_(P)mYqW)jWDDCHdGk-%)8r@J3do`"@Fp6:iTV8I1kiX[]qs0'$lsF;<EaMSWdZMLdYoQmP4HJ9iQ07Nlfg"]oEbcI%M,QckI)H*pL2FdKP/YbPX#%QK<AQl%lp61Mj'7)B[n<9'=F')lpt1R6R-r:]2A'k$1NOsKrNCm]hKfWU3`o(s[BC((a@":=A_8ioC-Ccp(Pq%G&b$LAMpg`jM*=A5m,9XZ%>Jfp5/<T,5%/t6:3540FJtD+Xj4]XXpQVcY@mN(Gg_iD[9>Xj)i%jN\Mf;\klj#Y$=r"2Xk7\8650l%%p$PC$kc$&e,^s>&T5H!/%mNA40Vg^aR?b!d@CshG&NM_67G5K"^'D1p!\6CY.ISU9iSkau$X],R@I4dY-led>drY3*(5HY,OrMBt[J%i%*N"&!1L$+p73U#_1%n=mU`!Dd(6@V4^m[@_b!<_8/1&*Y@4p$98X?[OI24hVJh0'3WG0ii.LVk6j3TQP*SI/%uokl4V1DI%0sp)j7*9"ji7ddl?G_\h#]%WI=O4>U$Mh]1np/GouJLAn"\!r9=5\=oO`DPhn([V]LdKInt!#HsJd:(Y2V>Q(GX-5rdSA-WRcRkM*[Kb.Y6m3_>*@<r,kCqjD'?%ZKQIU`$?1_95%5g&&lT[_fbLS[$cJ#Tj5ZOWeEc'H^'8><uo:CIjCKhND.B6N'&aH&Ta0T4#`_mP>gm^:Q3j;fT>h0@dX5;IG;-q%n+gd0lZF(gi*6SISb7%?ZgQ+193^Rpgt4VKEA2/JP\B)f=S6/M\X@..&#qbI#7ijsY%7\?(!>/($^]Xmc4q&RZc5Q_B[@hEKC5k0%N^7H=MkH-a_fgCml(0c2lp7jrs)G]f#Mj1,co[S7%]WbcfRn>P5K&LRmc1M]"=(;X$jtQ2fFHg:#?;h:4G1Y:/d-YqJV+Ti+`L8b%*,7cleqo[Q5?Es:(\bauU-93G?IVJOlp5&4Y$iu<<crk>PmpO'0fi[&=DriAZhJoF:$(,LU`Pf_F'=WF$gCd"I9kXfF)9\'!%df>%VZNXmb%71.J!@K_bh>.-='WEN=07N2VlA#?6QNXRq'4_4/hS0Y\*`e+2M-^qr7.t!CP9SIWlZO^^u`4M.aTe,(Q8Fb'[^qPP=g58%_]?bjp2817k@0U&<:1e'[`:lCQ(NqCl$I?p0jVtHJKSltP3c]OUeS*]FahVrm25m-(0h-Pr.k>l55S21-Lh0DE^r)3+>JiN!G,8O%!9F>t[BrOj(d=q6k(:G27/6gP)3&b/_<+7(Eo6\`-N`HI93O+s+.%O/8CnBZm#t<4pG,k0TMp4$!p.VP%,9>W#9YPfqJE%MGf82M%&Qp9JXbPk!(5:N]Z0sht`hG#RY+-,m:mUStc97,IGsAsr7*7O6jHp`-&8<[,=WJ=Eag?h*cbjM<21RR]@Fi=ZM?0bT_J/?s]!+GC%Z(C&G6C%P[HW]Z^G3'8tKX[-UL-+C:otaqugMJ-jD$TH#CA@QtD+?]L*e.o7.>F$jRu`)7TmiS9h!Q_3G5Q?mGQ-]lPs^G^1quRo%jj-Dg91$>dGrO<-HoMP]Na"uorcGku[-5of?-?3kg1XnO2A'D)Ju,hNn)%XnjZ"ZVg,Ha:^%S1Dk0m>Nm=Y?\G)#_HX7Rq-^'ib>%BSgYWRKk!Oq(c%R?12=Si_$0MZDa"amt:P#hf?`"c3;/t#!@$;&+=%rT3G:,BO`ol@N[\i8dEN;8m-BhA=`iLH$8/EL&!<WAb#^q%ILRmNVpPt:[8C';bj$6#nK>X^6"dRVGL+H4h-u4CY>No\[O5)kQM/ANSp^82VjSBUXKC)R"H]GWUNm\%.kQ"?W-"ZoHltuRd`%Bs%<q(/R<3_f$?U"ckhA`<>NNmq!^%-2RG=<p*MU$\%D^3&OQ?\).g]D&'\?%K+m-JTRfDUX^k18gp`7Wgjl>^DQo5M),i)3T/h0taj%p+MKc.cp,kHP:/7:-UtYo=j[+%/MK]rW7Bf:M9Agq3Y*sp=0mc6D&<Tg6MP[L2o,2U$N`B6?"/&C`FJM\8c;4&[=-Hflq/pQ<rpj%A0SVtK')'$$9n>5atgXuZ!(s/-m]CT14fm%!^uVCQ4r4f`3skmL;ZPfs5bo.qV+/;hF4^YacWIfi[3_rq-hh[:pr_1i;%Wu>bFuP%5!XWs6i,YT-%^7V5P>\r6%0l.Wu\HbJEkHVa8fK#&um%tMuii=YSf\oHTuIurU`tjPWRr!0Mifr@AH+t8<`5N^7A6.0<XAcQ=iK_%+-MC8=B8=]i=fU_K>k1km8m9`UaK1da;S]L#F[fsP6"frDK-Juln+5L1;b(/lOZ(8F,L9*h'9U+o"t7Y>SI]?W%[,q0Z;6Ul&p22%arQU*$:];37_<2>C8,2_dFFS3W+3cqjIP&kPGmmYb=_>U@f@";p%o`G.(=:Y/W<C\+g4QKo)$@g_-X\nnSmFKkS*`>&2!/q?_<Z"%"ScaB6iAl;9"'FRg*_?9`s])CpH>O`]Q98FFs`C?@o8J)^iJUO)P7mM(BTYb%#&>I->Z[Gnqo_gVDPFull<PniQ:f:cHXp\33#Ks%H0<6aIU'UGmu7O:4Q2TQ_%WQ-lqck243Fo=i.sq9=SS=T6B"F]q4K%r(3KYh/7QXOkXN]<QS+2;EJh=R(jg_RE>/f<$;d&Z]"?!<%@;SWN^RE"7`8:<VT<r[3MFR8?@:qn*<^1M<//dGcL!I]lI"%<;Rmr@TP='%!=)Br4hFfD75:b2J6dN\B5O"T[C=TL(`fnI-B5N%,%kO=IX3m12?7,@$YbKK6_`2.J1?dJ(l!P1U;j#Z;lhhD`]%Dij#kS&'X(SF/=!i>7Nl6gO-V\J`A1b`4bAIh:`ZM!qd*6lesEdokQ%NcmL+>!8G]n*OpJ7uKBP=r9cAD,8'spo^^m538d<4s%Z>EhY;_rc%Ks,\Xj)$dqfb*\nWP#P4>Tm$74,opGE4UR.$bHAg8!8NW71%dfu=/W:u\iZ(RXXLKRt)L$P%PX.[_DiXP1)Z7$(m-0D3-Nt-cp:c-G`r\fk[&eFnbD"cFUWt/jKJS21=fgO3uY0Hmk+h"bq&t_QX%_,YO]2$J#fOo7[Jm/q]d\WD9;%=t1c"<#_WPP:4<N/EZ(:s"Jf'52#7nPrLj=IIo:e,A9jL6]=0?dn65(6RJ,Z>aiB%rJDHhCMl,%%[;^pff8hVQk'roRpNjZ'BdkJ8?p=ma\8KIoFjZ=*=^7%,)AcSOWAS1p$1Fq(f_K/b<k8DinW8;da0ENf2J^k=briSVoH(f!lC',%!6A*rDb&9img>Yl__?[a!J!fOKZf'AVOWC4^4EOCNN_'\PHhH.GIJ$Jhqej&[1:$?2V(L?P(=A\XQ=;@9/V5Sh\/^JfQ.cNSB_47%0L_YR2fa7j"I#(bIou;uV4ktedJi2l_=S:NUkM4>q:kcHfgh\[HJHbFaN1]F[`-O>71894j.+t6BB'SD.)m=j(<99,dNL-OGQ&>r%#>7,df^,fTYi&_T&[3eU:Ge`Y"fbBD2A_Y"*Tsm+_"Ya2?[Tt`XT<i/bLspBo="3fS?EAoATM;S\U;)=?Ll:4M^<#"6Pl=[kKXp5%4GPO0RR)]kGnrD^!J@Zd\tElUEHC?\1[+1A_<H"(!XC"hF:PEkWZ8V>$p&%0i&!H9i>H_\fn*_qd"Q,ZYmAmZF6LL,O\F^OjNn?Q%>ZV+M[k+E$Tl[cDLGJ(TP"4Z]\HA!^db]RB>lnNoK/8(-N=V2EV\ak%'tA\?Ng)39>tfEZ_M#b0:IVbdlg#OHkik6;)Cq+9pl+[@%kRQ74*)E.W)gAGuT#l54aVBsI(+C<NFiG6Gfr-m3B_*JBbD=BQaR]cb9kR^<1o.m>Vht8%jIc6-b&\:!P&JL5-^/=FdTeV8o3Ck]%%YGs\7jLp%q&8%>Tcf$.I"O^Wj1C9QVhT,`RF5FG;u8HpY&24R-+g]4+iea7+sga)gU&#39Qgg;Zad*4;9<^l3rb!<#Fep!@R>Z4%S>POA1Bb=1AMZ;%Kd1a&%`-kJQ.d94Q(P+%17nCn%E:/L$+C=619Jd6"G]g6P@@^-5,Hrbp?7-nr$KPX0gF8m\Dn,Xh,UqRA.R'c%E[$Sq'B>]eeb2<T><iskV($]]^l89:o(\d],@]T+`nBa)O8&SCpf<n[X'hUcJOqO?<,&N@IP35Vrp8&\75K2e7`W;7cf5u7@YV/Y%pcKVA0o<^aSW98#8?`taZ>R?g(/o?6,2ZupN!5h[9Rnj9]`/\0Pc)Edg[RpD0^/pdHJeJ\l9>&H,[GRX4DEEXeH$q&^ZC9!3DUIj%*OlrHDrr:th;ZN3rOsAif]*b)#\1'Q1NI\\h)VEd`DLPk);2uP:DiV:'G@B#<iXq#.l;?'&n:G8VRVW@Y(-qH0bfG(aSplYA=tF:%5'm`,8!rFj'2l[p'_@\n@A3Uu@b7(aqn;a\O+?e`PRO:-/@U>:WC/S>;$h8LXqR<;'qf#pYE/WELq;V`/-Y6IJ>^AcnO1jm4:suF%j([/ZiunH_:UWuS5S=p))&EL?_gXT_f-:q5P+.n09!Jpi7JFlV7AiXIM@0I,qsKKH^;p7H;NbYNOnh$`*gu8eeDu>Ve3X;!$pEVY%2]E7)p;kn[rn$,Y*Z:?6Op[6;Ln9>ZR7G8\/U07Bg*;5aB\r5ds,>Hiq0?IrAGlB'R%H;m4XX-J%cE(X\C$N\.7tdGX=SRUCh5U\%DENf^Hk\Gq4Z"O+rF/6Y%'cV@F/(D5`2Rel(ccA'j@Euub7b*%3TSAGhj_O'%8t3Y]&D!>^ML`KH$*U%bmm1@@U<>ZaN59EF\Wej%S1-Q]5Qm;:JmVF;gqC.6)&B4W4EAO_[LQjnLqsjKF=r,q8MeMEF1dE=WgLBeI(6H=5;lA&gi*raB#MqT+)^'DeZn](66]BAQk)-N%Cr$]\L;Rp4%8>cM+s5)J%E/dTjlKpm2dJV;kImWA,An90DU*X>&T7uC;*J7/2^<4[q/BYE/Eg2Kn$YB3b^'tB,A%rV-5*o\162Fk%1."Y[FQRqE1N%=29("1GM,ef'dS8dnaO0tANlZs6E5G9EE?!6a6::B"da,i:X"J)`m:Mt-plQOJr#NS%n]iOi6FUCfg\-MK)j\2Q%_@bup>7EWAK8#[a7[.;-'rDF7?MZNgkP4PO^sM/=+a\21D7gE'Zlr>ii%3^h9_oX7%3nuYUn?n[+n(,%_J.kL6i%,2%ekC@<a_<f%mEd@q7_K8Ul]lY.XV#1/ojNug&MJ;GBi+D[eB6QXDurBp"Q%BY,P>r?)6%hda@Q:'CF0puinW6]1/ag<R:N+&5L]42lt$qMWL1@7%m5<8IlntEF5278(023HKa9^E#?%)H*I-FD>%6^\0^3jbZWGjR6>C6(CE.7+.qc((^rK_>[NQ<<$DHBSs$KlX=d=%shSLP@laK+eP%8VQd/O$sGg"8NhOQs=Q_O!9].]E&Z*^(K4uNt&d+GiBO>@9:2ZU3I@s30:DOI[#MlBGg?RA9dIY"ZmYDPLq'!iInn8(Kl%7:ZPZR%N)"86PF)"JQd?";\h8Hk_,f7\jNS`0j14SD^Kf.UDX]0h!<!b<$@bXK*,ULge`,[r/;[H(?R8`[C=e<-l^W^ecEUt)Z$,c6$JG;P%SVa,Dp88R7mW!7p];>E<^g]m$UNE(BS60srSb89ag<Rl?h8sQ6f7hDoJ?6*=DdaN,F62Sm^d6)Mg&Zh@o<,I!i=*?]Y[k4r)E]ES%Wbi41c,Cl0B=8W%PO+V1*g-SJZ$Y^Pe<B6R=&"#GFkt*IHahE08ca8E96PXu!XBI_htP#Dm#n!ogXi)a.j9Q5$1"0Kh=pHQ+3k*$%ReSeEh#sEq2/K,pMk59?]5tJjf*DB;)pcJBe0<F)S$2_>,@1OTc+10_7"cVnK9so[6Zh=XLD3V"EQKW0.??_'o,Wl%\b0X?kDN^.%D8<;>H*9_\imaQ[8%Y/Nd]_Kr=#G>7Y(D3CGt6'!3"KK3cL`GD5ELWWWA<2>'Rl8$3*s,dV7G8i6P;+<:0c\t9B8G!qSo2+;4#?-%cHk\1[o&KO7%KtE?##QJIH3O9/+.V\9n%Rso_fuH*@p"kiQ:?WN-kY3W2Fj6Cq<490]Qfpq:Peu$TH7F\qog1R518WcR7r00/L\H%o?3u"0_7"ES'K=rmi,t*<ApBM/_6NdHiM`?flV[KKt\^@U27E_,kAIuFFNC09NKFmS'K@Sn$)P!PYL>-9,B%cB<5o15@6LaJN\O6%-HW.V>?u9Yi(UKAJkngJR8)k29BZ>`q.[/!]H@Zsfm"jsFFMB3T;QnECc]?()no`qg2&fo<uI(ST2de?^MZ'tCq@\)RjsoQh3Bfi%N60OWD#A*1^LNMdRu8Z=VXs,(7RYHUS'E[RNlENm17QSX[)B'qbp&WpPk@),CqB,"O]c8ENKPs$aenYsL8BmU/=Xoq)30pT).h:m%jjF=ga#C[4\DFP$5j/)TZUk`"];3kr2b1g)Vl8C&HZK7qM^e(po7@[V>tfWQ?(c?Q%8S3e[e8W/+A_o^mph"NO%KJF"9m\ak?st<%+H9'#G=UABh(IkSR$nF/O=pU`=PGhEUjt^f+:]':-Z+6sC#,,oJW^hnc`GkF3qQTD_dV+@4ELG/XO)mnU?8N\`_4tQ\Vd8I:Njug%d-YkVMs_p^Rf1gETM2LZM0(OuHhLl]JAc]agdS_a-8\FGg,4)L4Gr3o]*U8+]H5$((YqN96?HVikF+Jqq_mH.]1@]I+;a/Bk8a:\%=%>'jZfiCR-q"B=2M58+UI_X,S3DQ\ldmd&&Rl8@cmPp)4N[aJ/WhY`lu+F8,/Z)[La.4piTRAMBL-0b*Bb#]8%`7\2/F[N-=3(4%o6E8o^j-I%jsNmiE^iCsTZRQ/E7APLU@Z\\)N*VT:JG>Lmr:6m5e%Eg^WbUa"SrFO*B7@'M#B`SgXWJD40f7kR<Ah`?A:8hI56LH%kH`R^U*\CEHn7+Zp1HNGPZ[gh52n-8islHB.j0!N8J`9c&V)_3Zb@'/R5neZ+=aQuI]+6+heQm6p$M72/sc<$:kr355r$kVOX$'$%VVKD`#/cp5hI(RAT#_Icn)(Ro\u7YLo.`D93^J&uNTqL]TBY5G5l6uC[VC+;S`cT_0e_PVClm&$%-*lIK'kM/%A@T[,"!%Tr:Dr'%dJV/F47:,FL;#V%9mCULQoEfSA3Nbp%B]QF<Ar"LrC"^SMKVqT[/!,fVS&n;@H\/Em_#>$q&pF-E#3]T/)G:/9rs<kB]1\ErNi,.%P1UM81GWQOXZ.+C(H*$\Yu[BalBZNRo<BA9nuZSnNr^oW)='FeUn:5k=l+?jgs%+Lp<F?8'Pr\emO.eCE8Die7Us:1m6e]I@pYL7%7<VgJ9Z+\(Qn3@n0#44V[FdRPUS]c*:<C'@94G3'=JRc#f-F]n3:H4:fX_3`0eI6j6jOSK@CELJ$(ZK6fTd%$iO\cih']Q[?b0_n%1&61Sak_dsP'/t,OCY/IPK#FW0mr?t.u(5jOu4qO*7t+:D%O(Y]4em<Gp?VU3'/(EJbn#7De?2M6B'/?a7ZhVphHh6FdPKBfKC,9%S.*&7n0RqCP61I@K.ZX`B0D=$E<VFn:kThs(RF)r.n&.W8]u<?[KadcDHH*VYS=c<o)Wq0Xtc"+j6(;(?-O?u@UF[spLWDqF2;%m%71XY0Rk$@ugCocVkPfS"V?)I?PLe!/Msf^C"7tK_K--N>,eWcHoR>cYae!k3JoB7>*Zi5%\bdf[%LRQtr-!B$0NW+?;*96*"q=`D%]8%tfjml]e1ZE`P+*F%RH?9+pIk?%N1\KhH/I*Z^`KGc0/ao6Oc87X^nE0`'1L7NgP+I;hn/U\I<$-0o`:]AQ62+E0g]e8"<);a#%IY6XnDjuSW=;p&d;W+5(hT^3fE6uPkpU+dLA/>YY2`Um!)dA-[_IMuV[JBpsSd/W)^j:0QV)JA>\TE<ZZ:FS?d2`maQm2,Rk>=:N%7jdmt7&N-+XutnP1F,W?71>Z-S-Cul0oHT&)<jJio;/b5`AGG!&ooLo:M<`N8?l\2:h,2["Xc3nHS`7$V&4@^MUMeL_3=Lj$kKHI%>WV>u/B'>2X$RH7<]p*T'WHWA&Xj\4Ypf8*4nKY>IQV6GAiMOm4_iR(E0QZ8^I1Tg=OCq8JT!S9TS!-\j+/J1gmZ(;)30]!ZR_Z7%@6U#?L;]m3VNf)H*Gpn`s012ff3k@7[fFY,7$KVM7Q@k0c/b,P@4aI7-F/-&1lKsN@h)n^OnBR[[3f%,P;tIjZ(mZi39#X_USCm_%j5c,XZ<Bko;-K+[A+$!%EVOA5<VeS1cD,BH8pOGqnuFkhm;9WNo&)$>-c%IJ_W[$-f@RQqjnA:9ES7lWk4,I!)BJ:S10t2q1k!<o%'&W<0gaiu_G_otfq^eVSQHeoIcbY8p<j1PrkJ.Ce>J>KR_='C?TT-QKEk4?sC%^PdJ8TfXPfi6H;@?&"*-J+JW:dJlhER"fa@)T?%`6aK_='G7A7c'jqP[,6ZfdL'9*/om$jbZ/mccP9j(`Ramc8ZXK8Osdm(\ZAh.E3^Z!fWQM)"Ba7JI,f59[DY\oI*jm;0)`NroEUT%!1fCmEW@+u31M*!0PV(?Y05m/J.>H`[4pEVYiB<r7a1seFdXE]0PV)*/.suf^'5qRN.BU&'4q:AK/B)#kW#cYnXn>_0'/";,MR=,%o%A*[:L;3,od]lP0'*JUO_n-cnmThb#R+cDQh&+Y_cl$c0BMeOiVkX"ncdm24OZt!,2?NceYRXgY6"c*&)=q3'LecpK0sPLS,1r;%ls@G@1V'79lPJ[=:t+=fB2<@KmtM1^f5I`MV2=[6o;q`rh@8RjY@"e@aO_&si*JX_'afFLe0OebNMbc>h!5at)8\O<e)'C,R`Ug7%j\q%Oi.p4T(JBeKcjd_@077O&q^X&/f?]<6=kj#:J$35SKSC^N-bIuKGaY)2qG!Pg)=d9YTQ`[tFK]'HS%k?A2tak5@=mqH$:gN'%]mepXiGm^>'m?cf\>ed1"[0u@IRDd.Y$:k%\rSKZFUO8?O"^(;Ic7d4c0.@*eaQmS;>Z3!AV/6ZMC0Wkid:WY<DDYYIZE/#VRkA4%r)Q&F41iL-:UuM,b`X]Ym$cp?^[PJ+/5#%*f+[$,(ERO4B;A:HYFh)pjZ@,LH`e^1f.S+p87T!9f.[&&^Y.D_2sPKEl@"'/]u@n'%O)Om-LYuD8`lmKM^=P%9LtFrGG5Q^c_CogN0ip0@f.TCDZWmC*cUo.=(ekR_:(g'n+-!qb0DrK9FVj3Tp\MG)4nOWn$1Hmn1Irb[%5/+"'VW5>>DsI5p,2(BhhVKr6YMWG`nI9'*:3j%81Fur/<^5SBR_c[d4B9Q(<kkoGdO%k5HtdDKHi8QT6E>FT[l.C`qG!IR)XUkG%B_V$kH`pfOXaXd:a#@EBY+&W*h<R!g1;*3Z5AQK4n+@XFH#hd,(\F$"EUWQ.&+=O3Z,uJ-$P.?"HUfHuf?Z)dbr4<Dh[:5HkDA$\%2mM8gNNj)iqF.kDVn(F*@U-XVqFqkkke5S$N$96#J4t6l?asQ9XOe?FlPDu6:OfR?CQ_&oqK_b=8al<[NsFg]nS.IbMh\KNn+F"g%ddI/`34j@HHi:g86V&!U$km*,goh6Z1m5.P*KA0pTnj6*H_oS:f!E<"l^!eplQP"C4Rh3k[cjH_%\kcUoEH)o]O5Z)Qcgo8E_8lc%-=EZ8<T[HgL/6Y@C\CXZ@(t:eARd[Rh`T,>`ncoeZoqJ9Pq\hF5CIrdkpDSNdYeER"=9A*pHK:YXe3/r`qD&A]t&.YOM5U[[Y7WD%B3$GZ>[&#e7i+Ufghn)>HPbh5E-uX$!Z^@tlg7t;CXt_'WtX/#Xq)G[_G0LZ9t1r7:#YekCEVE7h55kGeXL./qs3%*nGI\6-G3U+%IGos/^Ei_:8R6GMh,:]9qpsWf%`Hq8GOT(;H;")Y.Kl)dS;Ym(>&2X]ch:/Z\)#g-O7.pj`T7!nK!E_I-dT!i%Mq>nPB1eWp,"Ya%X<nGlF7JVikC%>kKkFR9#-/d+oESM3ReE$t?XG17KmF3NcJ+"V%eC7?/gS3=f>D^Yj2>.#6#g-1amKaGcNbS.>leIEIL/4sT9jOM%VebP4\RJ%gI<ngug(hd+UV'EPWu_UpB;]+Mq.K(01KP6+]^9(&oTjLn,\5(O$-YuR&5'G.$b>=/mJXBfWb4Q,\'Le,cr+5Z^XY%r%>P^>LcsKHtDk8G`A7@.&FGi/g`Pb*ja<jrSGB^=Y0Tj):42nS];gbg5=Nego`9PJCIU_Ej4Nt2'b@!/4*['p;d`=?``0Gqa;.rq7%,0oIbGN1[1-2Zf:>qS\r#(4&JLo^"5g[OV((GY60m,qW.[$DNPYJ)-T10O/]R:;&%qcR9W(Al;I]$@d]?YTG+Aj=mGCLi\.2-+[t%YV(G6oLm`\?`&ob%tr_>qm_tS]"@hL>bH!j5e$DtqgiemgKSC4K??Mh/!f7W$>]>[.K=Y!_]Kk/m0B;2^$#0C1XUO<$k&A;$JE+p%'t_[2)-;<kYj-IdA$^XX%PiS'eJ/X,hpTltr3Gt.pN$<F/k,>0hRQ4ncgtGSmh_]B6<SRKX/pi3?-i+I;.,(^E78;!(t'9QmJ0m#%4j0lonA<Kjdd7BISF$'8S3=FZPbIJ%TRVE3*hT<<JBX@AI5n[_o"uO1#;!O]\5pgS2Ab!&>>$p:c'%YH_(mH,h7LF@)QqkAjjNnU%j=GAN^K>Nn*][:J4Y@fp(T+H=hHd-g(Ct9IC.alD]h#)gbiN##(KZfQEbbX45[&'>bVSg9W$p6H.o,Y]4^18fXTDDn(Athe19uDC%(W=qcK4XiO,Z:0lqt_k;G&\Y@C;!YYo$&c^$I1G$TH`R-[ru?H[O7Ocp-.C-S+u@^5Bc8I?iAM8oAB8u>B@-/340GV-%I_VBq3^T%aSmF3K3'R6re+;0HctqS:K8NCa?+UB9)3&okm04p#.JQ/>d'"`GmnKF?XZ$"SBFOD[APkJj/l>,95qWZD&c.U),s8sW=9:Yb=juu%b?9=]#k.pk+R%M:mL@gJ8d\RBfOh,43o@X:.jSJ<4scMdCJP(DEV2:#!2rDPl\MUfHC]";/Bap"p"TG^O3_&?hm)%^2s4@UEGa[m%K3('=-At66J\C*S%%/3jqn$QIh\03GTo898Ftd4cGgi?G%=?S7Kt!765rdX52h4&mYK)gcr`WrickB3o55Z>U0*F#1/(qr!9j(ZV%g"!Bfeb(NQYk$agPr[h1(0>ZSLe"_RMUfbF9l[T11WL'>oq3F<$;nq$)E`#5i>o-u46#,gQ]sY(c`G$nkA>^ff+lj3od'Lg1r4Rp%gB'5t>#hAbr>KYYgb>774^9]CEVj"LkOSaMEY$7aE)#+$08i_BZasYYS>i+H\>+B6pjftO]Z5'R[d&RpZc_nBWH[<I[fb/SetC5(%^g'G'`N!q=cs]IJU7^^R?(;FJTrdTlPl9C(:eS6Sh<n<j`JGth.(e<[[1h]i+Y':P1*:%RnYf3JbV'ZU(Y-Ku0(N0!"mJ9'hsZE1%6H`oTejG>!!qaBHhirrd8$^ep_Om1Nro.K"h/),QQ'N4E2h-p;-1BW\*n^tI;QIMl[&;0.Y=kTLTfrZ!(I";^\Ib2[-o`C@/d^.K%ckR*hkqY@41B^DB?obXde?mUiQBSM1XIjpHG=Y7,&I4k:K3$;nOR::%^!VG0mh1T8-ed5d<G9#?LF97JdX/dE_60l`.=2c#ThIk3%KP)YFV"Y8"4YAr[;#ns&;*a^7-jk-/fBq54c,:-Q"=7h._/h7iF_-6$?t]GE`DNk&"<)>)@Eh+?)jG(0A4`:^#XACs;^Je88D#<j%.Ala/(+gebciJR`4sB:jnr\WXrU6/bT/R_nR5I2iE(:I:4G%S;:J1UlYR\_nO97Nd-]+V1k^>'Z!s<s!jN9;@!ekVT*!YurQEY(R%b.]nO.c1RNEhE+`dl:A`&R]#?MglP]oe6tTYn!@L"k!GBZ&-%'=-l*Kp?iFJgQ_;VGIP(3[$IJ1iST4>?^ZqlJ:<SRqn`n4&[CC.%-B?QUdnPI"4muQL-7bXf;;"(>]9&YRU>bIu=cYmKT&k&`FG"kOQ(;N*Lo[(ui.m(i1:#7/79(U=o]Gl@o4dN55:]N8q3Rl5?N/P3%X+tViZ7r0#-^E0?%qj/I\J:-/,5E(H;iqo*<dW/\eL>3Kmp0'8$a[`-[b"ZS@!s%9ln@^;4c@4$A`RRlYEah3\W2Tfp9eCMWibjg%S6QAnZ,g3m`(@EgPK73U5p(#2]rP"9gWBYndZV\F42.^0-JGW@Tr3bsb^=dL%m8F6;sE/Qq5GHQ2YW'^Cti&5]>JO6971(rJgGL6%bB=17`kY,6,AmSk^^e$FkLKS-6@J>"j6P$=e!N)@^n4-gU68W,WEmD3oeE`Ho1MY+2Re_f-7)ZlQ_"Q&Q'#pRh])oWpTI6^c'&=p%qc?h"5&"Sp/,`XFQYu9dF%>uA]ZZBL>JgqT4r!:&oS%btrqo-p`:Yi=a-QeBAXMVt=bb.-c5X'_h/'20E]8mqXkaHFG(J9dA6%1B%CMg?O=FRbTS'(H;nDeub]?>k;Y9"oX+ZU:N(?F8J/<SsWZstCYI_JG8R)S#Pb!3!jUZq>_gS]59"goM_ebpe0C+Fs0\515eUpTB:%*^3C^4^T_nP?b:SmQ=U0Hq4&LQ59rq4BU<&?$4,X)S_CDX`?XqS.#q!h=nRQ8O(pU;Z9PM[n#;r?f%@c09,-\/8=N:$nu!7[k&N!%i[0nu[tr'oH9#*['+Q,,Wslh_oUaqC)c>ECagmb1$<mEX,UMc9:q+2!*f,12_'E=>YmQmWL"d&jrc;e'gH*ZM'C)dD]"#MeJ"GNb%2[!jjC$.IhrGW#6\^i2BbXtMi.so>E0ZE`iO*D:F=1WbcZ;b*+=V_MEcQZaOIgC5aELDK`J_KY$+oPNrfjc0HWj8-X\Uk(:jOuV>%3B7Z8@@C1>B;QZ^YV+qsg86Cgir)n]^,/WYk1(qTBX#A\Lc@4_TMThYqsgO"E"S(G@p[If7g0oiFDFragj",g'T[1#\[1o%ft?B7%H)2o@f<d^#+b=3&G,/"[YN)]ZZ]0aH?.A"U<pr*MZHQW@-_rMYcskZ>e">`loMSnUTI[@)GUQ/&lC!Kp`N??l'mE^hY]!Nh4ao#H%2('cSc:M2'XP2\!1/1eSrlXQV3C&CkqP*FC;rXDDF@\D;58+:9A*lO%lcU)gnW1UNAOjsSd2>"9it$lS7pXE/Di%FFH^0sKjQ==L%Xs#?TgLBg=d(o_G+Ye3)WgP02%q+^s8S2_B*nA<s\&`08?7uG<T"G_cJ#6N$(Ub1qmS.b+g"Bj&Q8$@QjYeAZ8(6T%CfadKim^:"%)>SlG,l1ComKY.]pX="\+JX31=KEW>,n54QNH9LYQN?/`b.7=1goE.Pl22kA>9mH@3aR$J:j-b0RV0IIfA$.5?9$Y@3qm2(T[dXo%Vi!V6LMa@Ok"u3BEIImc9W[ZSXaA_+he5'^K/\J$c^FnS9fmm=E<a&9in+t%?Ih`sZM"rm[eD%D`F."qE-_/0#@eG9LsZ+ILa<_X%o%rQZ4+`tKO`R;)k=d4H;#m1m4??#<JXkHJ#H_\*[CDF7\h<EHC6-g'q6_^%kELPBArsR!/0FJr\G@?g6f/hu@T?3[YQhKu)?FL<%5ABr`.M5<7pDDFcXS<M(1n=!c@KY:`g8Uj0h5'=\Juu2$AedtmoD6eXML)Dh]_lA1KC/GW<ZOqO+I,rf[cWU93TX+fM++d&Lc11Z%FiWW+T6me^iY(A$.cG5(QR+!eo9-e4jG^LdcIR_3]/=u$(11ojjX>m8A_F$tW;EX[SQ&gJNV'Sn7<`]_i*Z`0JNt42'ZAVtG6'_j%K:A!.ZHb!YNuuQUe2%[29T%472s:2<QF2F]PHEYjh?*FdOncsE?cKbT>fhWb:$gP2)KZfCV`.7$`<sr=4UcQ!=2q8GcE/%;??OLE%')!o>Y@JTUSJ1lq@1Yqpg4d^POG^Ho3hgpfHMQ!>eXp3E!1NjrVqQ95@p&IFnYt>dJCRqC*l*C57GKDX[pUgVF+_T&YQfdj3M.>Y%im\GLmToH,iRD31,Lr:sW&_'-Hb_r!2341n:(f.HlZjj43BUJ.Q,mk'HIdA2lu"pO8eQ!cGuV9I>dCa:'\c?+GNe3sa^pfD.PbrL%Mm=OG@W.d"o,s+a#SM3$Q_F_lerd@BH=#K>LRMlK()%CdYK0iadcq`2\KqKgfJ^VWC2`5i`8KWFKC_aSE$H2uQFSTUgP2?d,VEM^%)(4_;)ZBKF=!ur39D23nqENl>1K,ZgX$Z--o`3mEk]g&t^06RuSI]VVRe7f`I.4lCAj$\F&)??QbXP'q?Em,ONp:u;RB#pfc2"$=%/mqhJT7igD6o@:q$bE32l%qEH9e*Cnn)>Nc/%p*oA8;us(?\e]QF9_*mpBU=Q)[m#IP(co)BVouaA:A=fE!0(.X3A>8UL`%<ENg%%^UA#'juVP`LWul1C"6I;k(^0Y$Bp*$AdWkee"N*ZcPE%V+2Q&:Zh(lToZ]j,gV-N[F8GW7MMNq@qcnZf%%ee,`l'2MBmEPPjHI5t%OG-Zhha1-%*Mm;GpimoZ&dK2LZ>[u,M<;RgpVG<7j\M`7b)=6nFGGHB'ET3;Yk:7KP^rIKA?W+S'"I52.^5btGg$IEUnhtEoMZXE%WN7e.-%'jc0@\e*N&tMTKHnY(Tq,UrC,b[Rm@6LTQ!CjEI30RB]^KLs!IA6u4jDuMjb8]BTjLD-3F\g!@snoH!CkJK6Qo;PE+OAH%blL#&F@C,jbP:G4D"2JN/O5e85u:pL:o?8cSbj`59*9b9IYN2Z`L>[>ARTam62U\!a)ok]ieAe;)8guCful[fhEC0_hA`TlC2>,\%boMW"9rlhtGO+qfqVV6\]/o_e\,,XfGW'bG3&iVA@_LKue`3\e)G)$6cqM0q53A)?Hcq:bk2,;#r8gtUpa/+>Hh:IfJG6N,JEE$7%enc\!:ERj"l:1ptrHQL2dY%3C%&PI#eq=]n*g?m5;,BL.U\=Aj\b;fRf'd.Ck4/#)#god+ghQ$EE;.H?D&`AAGF<LK;7S9$^HDqB%cW/iED,n[Z%`cnIq%af'670)1]f_rHE82gADkBZ&r7ucF[8r^%,)/!07-GV&^%e+"DD\g9CTWM5(cQ-&HCsitR<jA7+MKKj[Z+*P%/4o*#ZLIOHmcL@J#IZS_pFepNX>(Il-5QTf==rq^p+8]RPP*c[M&*I.LI`i@.c^!-F\&H.`bLmKKemP):7auS-n.[-TK=.7Ys03P%FaFooEC:!`m2U'98*,]i_=te;/q7j,#Y]=M^UHu!lEYKl]j2P?#c!L&5f_N(ANT\TRCj@Qb)Wfe$gjJkW2ZRq*8fV47(AL<;XM,Y%-BWdo_k/$P=hZeQ4JuEFr&@']"0$`tIOTeTIhgq;L-P-@\$04C1oO>V?H=[=iH2:r/NcObjhk6@jZBD*0>A5c[.5++8-ep[LU\65%e:AYoZ[VklP*>Wb,PZMMIhY*=UJC5<f=J<E^d-"@)HH5FQH5=Co(q<Mhq-mg8&ug4SpA#nctL8D\)K1A<ggRr&VP<Y*M+-2b59*[%+oL6pL9IgXZ1SCWSnr`.qpr1\AsQo"_1VE%h#$u*e`E?;T5F&1RjVH?`e&p+$q2J!7._:]1DH*BZhG9%1DH*2&ogHENfFY[%pZG'%$`Ep@BUmGW#m8dMr)WI:[0Zre89@;md'X/^f>p#kUPH!H(q;KD.6`SVS1JW=^'>p(kh:]@CG^>jEp-\QluQnS\2H*gcQ0ST@Gk<s%oU^Qrg4Y#mNjsl.;+>%#Xpr?5KSQ^)(q@TG*[8XP9bb,"N-g?l\i+!TRV,]^$=0,TE/gK;7grZ2JKZR`/QsEo'tQ;3i#5d[@t_!Z%(q<$Z&Yk,a9`d[*RC4=P,DE9p(qA^e7#V\g2IYM^_:W:<B4D(IZ+V5:FD\n12<R\V&OP(r$sX_dmHP!`Rt/L4E6Y8bM&%IJi*&[Y%X'b)EKRmp&8%Xcp\/#YC)AKb@@Goj-ObdKPXpmlFL5)j*(q:>Y,4j/=*k6CgjnADF`:TsfpKg$GEuXnMAS34h`[lHRm'gS]jbH_-%%^GuZ>JP)?Af9TR+o<U`LonO1/QH/O`t+HGK+82",!X2/!`**b)TE_^Z^)d!49bdGoO=@%/3=r@IHr0:aE\Bu*4oru[iRQU!^(1)%NX),,IFd@3n^(VHet&T&-=n3<S?BHK5CaVRhYbh2YnM(l$IlS?4bbeA.T3<gJ*.Go?9%h2I8;)"0:6/T[(("m#d0cGTIM3?Ukt!\%4+PsD5dXh$DQ=R4Ug)N7!fEnPbiQ1.+OOGt3E%5Li#u8qfDWm?1\8>D40Q@=PN2,)"7Dj!"?R+ZpWK'"dAs00@O$rij2LQ>E,_WC%T">ml1eNh:F$/NgU)8H-a_`5f,OaSok2^Ze3"I-TFR.TCDN12R>SN8_ggrM!ha-/'hpLAn'=hK@NZ>R;$'!c_j?)s(Q!`%G&htW,%@5?0Z1l7S3dP-+;oc,n&1I<"WIE"0b,3Eh_B(,b:a+/L+\Da:6W]?+Y@`]m[>h/_(%TZD5o(D`HlaZMthMmA3qO[cfiMUS57EL?Y%WX:si/3SHAV0[X)Mp(YN<\4'0c#rp&7^_,e[jp4knT?Co5<6G<.)sm!XPu]3"`O`#:_h->nRUY`@!d_:nJqIVs0(&TrY+<\pi.&_%iW:&?s1>I"_.?<]k_^f[E?V+AL*DQ:MkCsmHnbfPe3qmQ*db8Cr.Z;KnDu#3r@>%h:Z>1-Km4%3]o8qFQI/[JN%:'[d0)mtImKKo%;$9lGAVR:SnREt'14gubR?it/OVOjY@Zhp6Oq^ro)Zj'h1R_oZAYu7iR?:?G6fi/B!R&]G,YEFi;:$"TAuGnc"&O)>N%;2qO_'BX%eM91e#8TTE3eWqVA`t#T1dTJj)+[QS<&5dtVIWZZd)ZcqW/.M`7V/50P"s0\N$5tf&S+mB2--TDRRsBR/"4K48g_N7#rl=(MBOLG%9NF!,_]gQk`MbD/p^Blm=Ool7B2`lT`c3Qu:LJK2HdM&u;cgGT0396\:At$5VbY@V6$q.*ZRNNm0/XK[<,8L2'6Nch'Il_OC5V/S%Ut+d2=d28:o-S(h;p4_.48;;/W><rb!E/8XW)XM<N1u_j+'")-7O$=b4TdO;OWmfSELF)UcimMe'rXtB<DmE/Q=Y]5Be%I5/Q5@W%gR9#51eh#JM26%D!4q)WZ4:6HaAc\6"OJW?VhmZE-81!?`d/8ZMG/o7N2gQu8/;XqWg_=8h4S>b.'bToi(Zp5,@sJ:<ae<SKVg/>%(-lhn9SX?N=^ks2Uf6b.9bVf?W(LT4MQZP+"25EWkRo%H156q!1-sN:R46;nUX4gJV\oQR]:qr7C9Fu>LIgo'I/1ZZW1">Q"UW7C%JM.pX6f<YF+C*BG4",,=1b#1T!P+pmb;;Y#769dI-rMg`DTJU^em8rn)LRZHKpSdE:<EuBiS>B7#]$UD;/)oOLX:!7'qd]e0h<09%+;r62b;@?_&RrYR74*Q&b!a^S9heV4/CP:h0I!Ws99en5J/crokR]d*!>_^L5W%0PAV,pN*<A&Eh@`X5Oton-9Gttu',`hR5ZS;/%"9l7gi(4_e>7pQK/WqA/$P6];dO<gl=l^6;/]BqCL!h'@6BDS\Lo^bVA0CL?,'!_BPmMVb431Y8ME3>A*sr[JU5AFC<^m^EK8WPp%UFU!Z^Yr`PM/fA7<T^"k<^@u&TF-E2L/'-;A2?bO<X+^c,\;Wn;->4JYJ_Vm@kn^M7"UOV;cUA1<<^rQPIXe\"@=@<Hnf=u#q2>U%'7cfU@Y-A8#lr$NjfYCQP>"kD[MgaH9U/@S13AY<!IINaW6uC-''G!W:m>_+b1-TNTN%fLGO2XUrtHd%J!q",F:_:W&km\O&?uX9%%:Vj2.4WLF'9CL<-"YGeaiY=ILO`3O&5A^\l+kEFaOF2G<7atGLp5m=b+!u"a!'N&.LNhfTI\Y8/=*;V&ZhYP`\JY<PKPbfpeYQ>%W[7@8C6LDO='6D3;-Ki2>QUr-5_):d.%752!3MH:U75-9!i.lnJ<Zb':5UkR@42a&fjn[0KLLau_rQDQ;+6<a8lK9'$j[%h&iGD*%J5[4#g8U5r]G1A['e4^%$;p-r,3nMC=qstI;Ao7m8]j<NE&"AK#*hG#jXhl`9d3_>OK?rn!=91'39;$`aG$o*$V&d..**lRC._/"%"!LelkV?^LWZWfc-lWLk&sSeFAKqJc8`V:%'XGY'[4Gu(/H[J1Z;=PXi&A3pLGBO]W'SI#9eJpNR0Z/Z:3Bl=e28_h776"==sS3G%;_pl!<]2h8KE0'SomdKMN1.QF\;#Ni,go*1\Ib&DOsNiPq:&Z-nP@Q+qPWRS_];>X#RR_I!!i9CAVPs)\>3;E%Q:sLMU^5+FNPei%jV]PS#mHUXft]-a"fW!u8LUme</K=r@(XR_9TTBl5-(PqNM/(*):UZM"u+4M[:=?AnjnGe0PD>C,HBXr9k;VZVBK*^OhtpB>nsmn%A=@TC;mSJ?R0AId<TUZOL<L_^2FYM5,DHboJSi_M."Z2c!F=[WLtRKLdOd^`SKh*6'b7Gn0uTQ7k(X]4T;"^?O40d&)RP1'&/>ur%=O\.L2M,gCo0\6J>Ui<#h5U\Cd7aTBPu?]LZmj7_8hsDJ,]5e4RANgK,)@ErP@RoMZluq>MSd`9geXUN':+3c_NdD6K7UW?JjMGf%8/3gQ&=>bDAPBQidIX-^[U<o"X@s7`:((QF3jitCdNrW6EbAN4=d`_i'L'>eX>48.inVo5@;Q1)=tcnMnhEO4UUi91H+Zg@rK5/<%M<QO`iQ*#5)Ug^Zlg[c5UAi2);$J0dl0*:(JOdgqWaM5dQ3#,RQ$Q)6Q$G-X9G[l<X(<t0"J>mZCg\rS"tQI?&R"6h8BNd=I%\^1%F^?Dh/-G#86;=c*0Tb)K$a[XR9HXC;7b8(%!AZ]*ck?Y4#_Gg,77C/*BGmou0te8?)S3r27,iND17:0m1g-XJ"9QFk>V))$lk*X0%H`StJ=""\=NOKU`>=5lm,OuELiY4g<Bdtcgfe[`=&d)4/c;)0d9K1tX9)MUUB`)Qg<->EB"Z-Y(U/On.JUXPmI>^u0XZV0G'QeFM%,K:1u:F0%2oQi(;%H<ts112P-Ufsp./4/fm!k'cKFe+e3`2.7BD.<'^TL`gn%*W<E/.,*^Om(X[WD`sd2UFK?cm,^?[U>Yq1+Ug1%K9]"`bSnYMR@<P)k[u6R^Ms[7\FHds,h<"MrsE=c3c#TT'`t]cLfTq$VRqEAKOh<q!hHNH??^/nih\BV(8@CK?)7`46)e[>pe7K4%`4SD/iM"fsV[1]JdtC9b'QfV^\GF-?5s9o?Y##>1'rJV,&n*C@1oVAs$Ctk)E0\6R:oLrOU=7DP8==A<<gcG,FL8GehH%MP'Eu"*%9K=AYTqeWbT]R]pECHV_.DTt'AdFm]491Bhg<-'RKWrCoR!@IfRC+muDNp?!5`m0Ff/B]odO>[,#dus#-[$@M:D7t9"^M*f23>'e%/(71E:0/,e4p8:B&QQF($NTnG:hha%3$-P)%/!:9*a4SRb`OLTEDdKNl8?PkK<-8]M!dT]E]d-kR^EDsaUo5[Qah!J):>CeN1<=F%)*BfG\m."3Tnio\Q#Tqq6g%0diYf]+'TioWl[]24)Y=^K+YcfT,2lAg"\"#Z;Ko;qC:"m_!45.ge0T\jAu`5(?r@=DdJh.\*X,!;%Up2[XVu$LZ=,@Yh%]SAhMIMh_3g]@f7Br<(kS0BR/4JLiaS$i\dM8=*+u*o>"%NJ2$tk<:Kc,0-L%r]%nB[`(TG&.?BZ*aP_W6XM%>X>_of:FCpUK`sg&p*e]ZK6j!QnM2k(%+jE(,;+0iZ_re.fl)q_jL7j,nrs:;i78PA"\_r-kR.`J\%pk3)lKRN#f;=OO7-bAVMPY%[N[Ri8X[kO_BS[3OL?p0rJ&,5*,uC>*kO\*Lg^Ak$Q-3Lp7(CW'4<^$?/oM[A&:"\?D23>;kW`I1rUA#61uef0d&R+#0EP`,pH)!%2@koka:m&B<9Na'a$3%MJ,D]g=JTW3iA([H="oQcP__8%6OsO5N`C,N-#1qhbl"g2d`#d_,pmICC.p+u(Njn'bKg<bbg7W9X[/9,%jNBt&FjXKHI#'XK="sn/5aa6?"tKd=PEqVAhMQPk"%C#V"N=pF-rFnS;dE:(R@p;F#%b)RE*F)X3s#\_9bYJj\dSRH;\=73_L8[_%<%[]G<DWoh"IPW8"T!/#P;E.;n;kTj"J%Sbi+NrH!^f%6XnOHe5=UBWr&@,&@EJe;NN/[4X:Rn1#$am"A\di7dt53Sn,T%3!c!ce%Kds[X<:0jN0_0_s5+!PgG=^A>KEi?;>E_JfaK!(6J</&4_[pOM7LpFl!^TlOGo`-C,";VKJ7$?rY?]Y(n:JU)Wpq$BaM#kSFbZ+$%$CQ7$M9d0"J5u1rZ3LD6<MaLBM\&JnbeQ@7-oLKZ#\+`?Ki^&VOWoIg#:LQA3Eo!YdXsr@<ko`8-teKbBGpe(')^d&.C^Z5KD>+=%<5<(b$-?U?3?^)U7g+6g<(58t&b*[l)W$'Y`eMJ*"Au%o,cWCt>YieH%o3s8RC=Il'V9F11A<.o<D,W-2*2ub+b^n''rX,\\Hp`Y%TT#7*[#Aa'=N7Eli'?Kp_BOgW\NmnjM8-hZ$87T:_dJKqG"RE7(\M2l#"OP]JV@85]&e^s,jJ#ZfG6lr22W$'=XO7TdSOcFZ8Df/%*e[j$ApAT&iZFr45C\h?OdID?nt?=-nR+uo47nbn8k#%K19$HUcPm"NT!dRO"Ykl\<7%Vm0#NhcT*&dmAN?'=V84f'>oRhBTi,6d%+B$#ZA^#0//aF+^2Mnm]?%+O8^;2R:M+X(h>sdBmdkX@b11(*[,+,I6:0jD')?CIpIo;U]PURku#@X=H-@"T;N+Wdh8F:XQPK7/F%&]7XJ<M@6cgb41FOE4rc;_\sjMFrgW7&d?1$tP45.3[tZ(u3JYr*uPt`t)*FNY!7#Nk*Nnq]^'6qJ;7`</I4m'-9RPbli3KWZmX9%JZ(=3GuD3!#*8]t?B6ch,RMmR/L*cd:h3+O2$@qKF:s3db!d6-;T+p':k]uW2Q?.L&f:k;R)]ES6mgq__PKdrK1>W$&bS6-k`VaL%"NmPH+=:#&"a&Bn$KasR_#6,7H45$s+tdQQ/`Vs;'c.!IR`J!qrYe2&6"?&X?m73/g1?,5Uq;uQ+!\ZfIuo9FEod-)p8hX'.=I=6%d&'3W@O_aJ>!u@F7S?&c9O/5I@S/Tsg!]4d<or'U4jqh1Jn7@B+a[-6.m0)h,O9s$@q.?)O<Y_(ooOt4)II>P)Rj5o]0[!>WV6aS%+d+UEKa3GOXiT3og*%)k.%jD6#We<BeG;L6FHtT>T[(u,BbG+(b"-3HKZ^H3[?Xb3_@2\[">F,=;aWGp=<ro*:$"EkXQf@f>%ECe%6gO9'dGgc_:I-l7s)7>mH>H09j1o$Ks5C[+^_NMNHq23AB`q$.M7]h-8co>1(580J-?fLIiF5?8ikJQ`RCbtZ;tVj#=/_Pm#sHQp%pZ0GTN,Wts2lkM,A!Zd^gQh=goQ@39!d@1P[U@18HO2TQk]j`h2@(:Qnl\K$Xt4BMPocRZf%F4,)u'ncr46CBbisE<P**>GR6q=p%nl8?.lFg/pE,?utJ\K"S!H92tGEtl(WJ9;M3AG.Q&o[%f.]2SC0X"b&<d#8ipjN=9C!099I05)8F"abcF[K65?G@ad6b&h4q8HLg%P&h"<hg#nX[L>AB9gQs]PQno(Q"4_)X/ce`3^iYU6]:.0OG#a/>qMXR6cl"89*X[b5'46a%RN;,M351?kXAq].&b>h:+SXmk,\=0%1?0T0<3n'aimF6XFL1Ni2#0ZR6EFjQ7A!]##;Ad#lYb"W!4FCa6*;DEiDQh#H$e6ni+SZOG?QhaqfK:_&3eg']%oMVftS`/@ZZMV%oh:+O[Il3A]$JQ<H`Q"oIs_qP7`PFL,R'9DRlGD7&V0V8n7]Z+d&RdE+f6&G0K9XeYk?kNaKk+K$.*!<1"M!K[W`J.('B)=fR8^)%XBnH>4%BAM.i)9<I7BAY_.E\(\PF6O!dUmWZ?o$h)6/K!qElfFp-oOr)X1O+9[1l[8A5lhJ&ZB"9Q^0a\EP2>>)Y$3hLe4QcXMCj%QjHmb%@jNb#;Vq%JOHT(j]=AnCknQK!Q0B>j0SNbFnk37$N&#5of'BJHt2js)GJ1!ZSS7C/a+&kc5-M^"l*jGAtLfm7$?PX.sl$U%A#7mhYduT(g(-t5=o"I>'F:r&NXa>)med&]*Zr+=YT"u-N3lKr$T-N67BC[Y(eGn7p_TqDa@%Ji^L/t_=O#ChSbH]B41slgX!>^=%kkk-PSrr"kZeLh3%bMTYVV&RDH5$9m?2*nR."W(,WWhh$B>W!@iPX7)VrK1A&M)lD@B*(7L(fK<0fGNb1@+MV?IL<c@TT^ABD_H.%\nkk*POgL>`%Eng3<3V4'uUJ@WJqL`=4b$G&VZr2r$RtrQ]kkj96l?!h3QHWLN0.]j'J<j[TPJU;S;JR4Fs$sIu#\/\Ld7n0PP%9%nbm@,WT<[MH2`#EXX5l)4Wsts1rZA!.J\23WV"!iY.TuuPoe^>`Ui3HPO<JKq=<Rppop%Yq+qEQHog-BJipV'#F?)cK;^T'K>sm3%m^A!BBAdf=*SeF\^+=GWWG'>oc<J6<&3DnlOmgU+dCAWjbPs,k--Gr[AG!:[-ncDP[K-BR1hHXA?'ji_3;A@:eL<Mc9Mbtd*7mZ.%<SOer2K3nGFs33CU.Bel:2Jr$LbLn=S9aT7<Yj"($5`a:gGO(/A$GdCN-s='SG!>rPMIqrTQfhKKD;Z>puu/nP-95!l%ZJs1*!04%5_-l/?8[ksc"9mB)@2rt=1ch-+`#OsMEu4F.KC(H94WV,WdhAkSGF?f/5J,`<DMt5Tc2i!2@^\Ni!SD"<u].jBU2SRYD84lg;ps.%k>^%2d9\tg'Q4aoYu\-BNE\F-%E&1Y$j-GC]qK-66>RK5j'I05g&"1hoN%C/^On<gUc27q)(4ihZ5`)19co>.DnHNH]mU_>[LbYD%:P!K%247O>rPlsDHbVn)Y$>Yaj`<Y?iX@5?C5iF:-aI!n3VN/:_RYJ=l`R"25):%>'"+1p<(`h,W&.&Y`scs!?3VUP%cIf?`MUf>%IR`$8d=bJ]d]1<R5`d"dAa]CQj<&F8R`C4G6RP(4Tb!be]ee6b(`>8i-$86o`RDmt6gZ6"Z>4`eoLjDiW\#JC^jG16$7-&.)(7[T%6W"84FE$:;Eb10LL[ed\n^Gl"Bf74_d81%0N5M*c4Hjp>a=h*<[O6"1JZP7T[[1lq9h+&OhUd[pf,,ac!"[*=Ant$.q/m@.\A*Wk%-p6Z,ZrZjin(;[F"=Q?*<@!;dYRJBV!+W-Vn(cb4&@=9pL$B$c2L\02]K3:6)#T%8KVUB>[?Q7p`1D#tRM`_dM,n.\lM5Y"??AQd%8fkU*IbiChdfeUXeuVsk<ma#mN"9-JT+7bA-PKd_iXfiU<3H*1B"[7Co&qtJ5-3R;=Ul7+WP#>m9.`N"68K1b&!pb1N4'"*ZL`,0%Q>9Oo,$V2K'eOM!*),kFQ!`$N6[Pu*if(;)ma.4O(T&We?-K@F81YS='+XE!!`HdB\JeT`/SG'=jm+!CAgF1\C=\h.-Ej5CO8(7R%>3kfHBI9q,KlNlBBan&6c#&VU(!j?FB>!Q(*;'._5&;Bk3gN*m$X&#am".mI2U*tclt%;K,%m54Wu;OUB(N)hj(!?"V1JKc9\mf:%h8]0rlC&@T+('HC#NgiGi3A.8TG3ICqs"k8[UK`\JhkKs_Poc=[O/qID2Hpa-=pjOfm#MmWJkjE&V_=;^:(K/BH>4m]]?JJ)GoM7%HP=`I=b^E4rS#ak0RkpX>1Cj+((Y$uE'rs\[M!K_Du>lPE:iWR5&;Bk5+6L6&5+:HKpT$rd6'I)]FMr[*@-uJq)hpK^0RU\J9G'G%EF':ll.L8K`mjQHb%Ys!Du4VV)^W4n0--Rk-$#pdE\KOJM[tgRFM;8)PX^UK(WQ%:k$oXnT1RjteS]fYOJuof_r=S^-e9i78B:,I%T86UUNhPisAGgaTp"gA\mtA[<<fQP'=$,#tmtn\fc4/dafASa0j5]ng;3B0p<1k<hD,,9TDjS0Idj;HV>&iAe0!+d;$$7NLD>8L_%&`Bp)Msg&$C;1o]h>dk6c"6+k=l^g?r$t`;@MPAq'/!i6aDe>Q-kTRKU9SNjcNR>[5mrcm>RbSN$]a9!Rn[TnYmf:RMTLL/+:pM!%Q`JM115q.5Q#*HP=R[,RnW3C>Ha;32%6DkPa^=DR;[91]]Us7\oN]p+NPuO"k@a<nlgW@8Ps2)!VDs9#!4^Y>\<kpB52^hk];k!T%-=SgCB\)ep$\tMf\u?SK0oER35[:=:&aN`i]OJS04%;Jg9g9RN`HM`#2%CcBLlhiHmYc-)E6Tnk,L`r!h70f:"@N;GUV76%+\hKQ%-jYMDqT;sc7N4/I_c9G=LLVnm\0TF=[!>KdL5@kEfB"*N*Z3Y,es7:]MMJiE-;c\4;8I6FQX7um`80LV2tk.Ya73S2n^E&S_%@*>%nfh-F>_f^u$A,@*OGhjIOt<U81(c3:DZnYXEY(UdJ/5ajmVUGkT67\u\ho(HP/@eii`.>gK1XmIU2EQPNk<b:p5gp^I)NP/Jgl7B%"FdcgT)dB"+hkjSaZOATOYRHh)&4(C#0N.!Io`sZ)k,]ic^&!]FX,^_b0Yh-H80T`PY),JBht($F(Q2@HbXALo(dQYfNS2/J6#2g%<*<:c`p$X1iaAh.orB/TC,t(Sl^Dg:-D*$;hDWP%X6M72HT@WEH.*.L6SH&3eOOpX>4E=Oj.JBqTpj\8m&mW\>W#g1R8\P_MG-XV%O#74u@+[:t]nRg?J=ir+[sXOBEYM.l;eC<;SZfG[!`Qa.c?!`\]6_n'S7OJu$?Y_l/8o@!O>k:<AihL-rJ!]EG<T(E[XENA+1;eH%+('S"-4d`$38,MsU5D\SZ?7*ij)J9_n!7gP'A+`/<#hlqTdM@J+a$e4e;A*-P`m`$-+)%P3Qk8;+Gd?`6;-[BJ=ShSP/jCq9*#F$%mt]PmrJf7lUK;X02Hu9Al-"0;bg)F_(UA]2/I+em,&"eD,gqOAe40j,,:.94\P$[p?_N_E^."@=?lf^EhSW#0kX7rfE6#(2s83Qp%C]SuGXob:3aiA?3TTYQL'q-tT+FQIo(LId3YbD6/>\?Me_A/9&qQm>;%WZ[;-7[JMpAt'CoRG.u`[g33]>]*U3(s48ko`e5Vj$`@%,SnJE'J)7LO`a"[%r7oQJIJN=@Mll7\:@0C,\%MG$V'Y()R0qFn(-iT`u\[j("+>TPet2H`(@us$\oGa7G*e'SKs6k!?Kt.'4#g'%g&tD-;Oc]Pf4<Cc-h1WGnFJp\,Vn/M5Z`MmiAXE0L6ACDY"3)<d:aIfj:i9b&:Fb0?9Y#UesJU#`7RAd\&K&L&(FNC0l*F&^VWQf%=%T"@BdA82Z0$<NcZ$<rHLgu/13SJ5i_3J:"=/!;j?1sS#?;@Qb"J0"XM36t)<a8?Q?ZcBqEP;mBE<f[1KF4KMi8OPN``4;q]2a%%E[L.$gN>jm"Jg2CjltJ6lCVu9`eQ.acUUth3(kl(2CWdn0<6kD$>S*%>"X8)-#cR%4fpg.C"p5cW>9mGn<ml7j#EfhdAC02*G9J#%:?uYY1`#.QL-26^8STF#]);2$Yu%Ih9puB3:/D:t(Y:*#)l!ILd@pSH;G8:dUouB%nfqG%#L;7.r3Mp)@J\A=.$XTZm_HF3c`X^P%%o@WC,Ik#CR12[cC;XLZYu0M94ZnW5>DJg\Wpi;]<.>"6C0XM$C^.q*G7VU\W`fDM'd&MR*>Fb4A@$MW?aZ>S*Z#SB<dJ^bfk3lC%KpL!K^5+4E#=<lRaVX-i#g@DPp0e&r<&d[m@X2"&P(It*cit8[*Gru.cDj[+eU=\pIKGZkV@3O?+dG>igZ5"Meft%]c3cZ]V3VC:%rq+P_j,AjS0k!G;DVWImp7(,%I5q>unMu!L)Z2D,;slEfB&nho%SMd^%YGZ.#<cl9Wf^O\CQTmkKr+k.FAX]j^=GRL&E:f6WTmq9%5qY_+Hs.cjA4Db<N*mJ[0.OqO*3L_im%?=IFZr4RHssEk_64%L%JstFTtR"\##59&_eAS).,u54iuDlT,$%<Z#Y.j39Lq69#_%IS%AB-MVpQ/:I'FhBuD81h]clUDnCA3oDs0'`Zikna#5935H@TYY7.U4_Ze#L:*GppC&8mO77/m$QHiDm_IV.'kHd_13$_.YV"El8k,%`>hnn9U!%"%F(mS0stB(+M8m5la&!O?54GdibWS*RTNH=8cO3RZKWksOR#ml6;qLe=%";%3<iCn,@Q_dC^j+WGVnK#X$DW'V+e4Q%p^69EKNSIfh!fBP<Ubm0htC1pFij1ZRoQgk7oAcONG/R5ZABV4X8Y.obq:LoOb%t,09;r^OB.JBVsD<-!hb+17YpuqJJ"[Bs-se?%+?F#4YV,?4YFSR>_0-%:RP*#H\^uk9s3UAdnVihpOFt2NKmG='2('=.."PT4Z*LDo+P%s`"-!>'\ML4^7>O\7^,4>V+78bpn+7j=%6JSn_2qe:@Z^A=I6b_7$Mn=G+rqH#Jpomcnq#Cc+I;1G<W6[@@,mXWp8?FjO7^,fPS01'F^b1e]CaTo1V$=ulm#K^k!<L7"B`;-`%@RD0bQ#=/^@cM]5PF5Ak.Uq9ig6@FW+>aQ5QmD*1mXu7<a)reH$_kIMD85'-'%fO4]dtVpS18\V>`0lb-l>E&B#nYsl?5)R%?*Dq%M9cfL_EDk%WaZY2Yg;O,ln.'4/q.+],K7cOh"ej8l?F3h[LPMD4IP'Q!!Wl%JT'W8RstD,*Z&:<9uO$jnLJa6F#*ie/(p-e,hKV!%s7be5.OLf'7\63"G'7F_-B(M>hI94$fo!hW>="fJNB`Gl[]9&W>uUWjJ4<'A]35UM//,*6h0Jd`V_,X".fF('F*@@iXb,4(#!-M$%arE-&EBq0PneekT]E?V14t463r4Ml;;!bWPrU'0rRL99]SHNH;GnM4-$9oOj_.f[m&r]I7O`*j'Juq%#!4>IiGf8I*S+MJ-J*kFu%:8PIO68+=SASNY[I89)&R8VJ-^\6^ng0dF^,tB_8.4ehicSiu@_O.LbE'Y2*Ys[$.1]0hukmC!;*CXkl?3$)l7e1=s?EeI]A/f#%%AuI7eX2j;A!p48)UPVBC+P\1X>Y^S&;o='0%7b78hXbUo`96=Q@;GB(Z'0iB>rs&'Y0t24<-JGtjRR'\U>R;?JS#ALXH@#6!6slp%H7-$1qjW'l9/DY@K6M=AnGn(iN$uOlGCU=U>Lpod=!4Yq"ei1uK_(5+3o*t;F"<'S0X6f?(b>`o%9$'s'I[28F-rO:b1pa32oFN3%5U#)q`@KKih7Xf"X"E)cZ[[bC<qkq"PMY^T7DcdmCrOn@GOFJ>PPD@Nph'St<0KY>-A_On-imJd',aR:NJj_j%\Ro49gF$BXBI.Z%&eP&0eJhfr%^7!$3d&?j4;JY/ms5p.=8ir/2pEN+-3Ggo!9\;XS"eE&+IU6GYgQM&2lsR1e\@:HCrEqR\Hdd[c+[[;gS=7+o"UrI%"Kn-WaVLY3m%bN%J!>+CpQ)Fj`TtZt0ANMRr13-n%%B_KYjHi5IBN\(4?eZ6>DJi3S:HV\Oq&7f[V8"QlpRMlBCfZ,;IpkJAt6f5%^"T8G5"?H<h-W?_]OUd\+"'4ME,Kc#I!-i86FY86[;=$''K#A_^._Y">P)!'F0kT4SO;Yfct'o@N,I1$nZHGp![S9tSh'3V\)&F>%o2m8U#<ko)m]>'cb.u]9h,3V5.lW@Rdc&$g^M4,,W^-/k'7P[j9;qRQPCd0RgNhZ:`:EV!I+U4PFPqg.(>L(k[[=-kcINk&<`Yh^%4.q=Xbtpt^-:dK)!>r+M:FEWE!$ZTSP^2_%@BH"-\o/mVF_1N@7s+`L/]4C8fg,DVCK:t:S]'ZBX`BgpCkX+`?%LX@7sDbGg.,'O%D!'aD!A7r<hXX2qSig`oKk0InU!qF67]npn_)@Zi$Pg.N2+.4*)"q/p%'X!f=N@Pie]$ns+30-g`BOJ&"N+p2dt-1TLJ+qB,jl?c%g=cqR%E;XBVO=>?fV?-*bFs"k'>@A)TabJ[i7+sk6Qe.QkW(aDn/[k[j-Ui2ASKcu_A'2_EJig50e6.2oLP^o7C3%XeN<<DVQ:Gp%9GC/c/@Da*eMU<9I")D1Zb6EL`c+/L16#gkc)p*Q*[)efMhdU'@BSFR8K(So/@iVnG%$[Sau[iZikl0F593'6J-fXA9T?@p-6QIe%30^l\VS?4mTWcMGUQG*UTt<0\]_372\g0^P0ie[1`UO3N3DXe2%5$L>:q?i_DW`9=m7+I9^QNB!lP2_?]7pfSe>3am+[aGi!O8/S%5hK$rn2j*ZJO.Bc&*STj[i&iC^h^YN]UcG4J(k=OR6DGR2qR.Lke^MBYL]#NSWY`I-%:SR6otWmK>-mF0Ks:rIQiS)VX.mR'bHb[%DQ)]<hHkHZ+j"[ikJiL9X!n\Ck.O/@Ou\tk9#UL01nMc8-'BLM=jK5.d,`JR9d:qE:l@2]"M<;e,2*j[R?h=5F*Od)2[TnOiN+ZR%24cWNLT_PgnO09]!&c^E'`gS*mqf8'+6tJ2b8TG,Cg)`MaB>I>270na2S5T,Dq.ga`GH^?F-+F4nR9W1dnpgY9q*FR@<dW;Zf5J1%,@5&DW2Tr@eTdjKY7U']@HVQGS&Gf!!*aGOd*9mWW!sN&/boV%QaPJgeU>><UPhW<&s$m;@]rItOs*K!/6,^rnU)VbH>#!\pll"m%e.bBrg+9O?2Nu0qDY0%8?H/Wa:1uBSW6)cE2*RLh6>P<?P_5fD2"&nqrk3>t"JobA<\6i9Giu39HLisWCaFNoN^@IQ9*8hMK]YNU%.#+.KT_J!LVS[a9!F>cN7H8Ne2a9ogm6a?(AcFjR6D,CSJt6cbQF8TNMn7KP"lFjo'U`eV`5+gdX9J#4f9oV_kos/dZN[0,"tP4g%_Gcs"-]f(lhng:O?H^F+iih1V]!$*BXI3,&b=aCPAK'j7V7C8%cZaX8>lMF\!sl'*37LYjD('K$qY"?FfK/qP,_a0"FbRFh<KQ(h%,\KF#'Iu#n"d'LR(S@%ACH:bFk7UdKd!M/5abOJ>M\Ij6/PDC(?$fM^[Mbn:<3RLqJFHV=Luj]#b"AoN?cE4*T*fJ?AI=,G-Y)T;%QeD:2[h6E-0NZ7UV/T>l]d-#aXID\H7DPF2<1sVc12PF!?0s,%SX<;-BTM!Cs4R<4Oei;#I(j'gkM]isfL#LX3/'\$m)E)o?u-rl%HR,`Cl8.j?hRFi'X6(Im/mJuPpqGeiai<6mPIrt8VhCkL*Zo7]e4<XSqhdh+`u:,+YbtLo?%4_!\Z9ASje,]3I#QpXWiKaue_ej:%1Ht(^GB`^X>];c[Xe1H#&n!=-ZP#2i)VJS$2ApY(mt"Mm?5$(NlRU+38S^i:Y:f9^hGDg1]XNBReG1Rp=8mJi(*Bsn59E^Q7[<Ne%<4\gWn;tUNBr<^qAtRP)Y6DAVe-9WB1AtO;Bb.'$TUBCed)95C5A:drQU!h5#3q[f)KTKi<fp.e6$=X/KQ-`a#DKthWn$JgOpfGp%AIC@+CEop82POnW.0+nT\U+]T.Orf")F;$@<C:\<0.^)7eaS[_GLU@HhrQ"U/qT@X\mHL/2Vr]!+Wm;oLFp?ga&4#m$'$(gV_M`P%9f.uKMU>W3I12;iFQr=mkrcm4/>JS-DMSVQoHi]HaiJTOYf>"pIcsi=UK=dAmcaC?$`.X\Ia;Q\.%JtLqSu%p<J$U$F[KBc4Mek-%\b((U\BJIg/\]*33KTJmQbKo^A3rgZi/1T,</BB?2n[X,Ne.lY'PpJB*E"PF.!KDI__t8d4<"Bnft=h6gRYYBr$XaF)1FW4,'T0F%%bkeF3,j`\67n!2hd<]O==)mumZH3(b$Q+<>T?`!@$_h_boR_>\5+&'kG#3dhD0aBHshbqa'pS(MpR3rWZEBE?+AfM'oP(^Zf,K>%>Bm)%'FJLc[E?IM%0a!8,m4<MO]!0uj<-5n7(On%$44c!no>h+'Gg1oWDYdVE1u;E?/7Z<$8n5;\'6p*V.tEQB7IU?&g+Oh5934%%<KJXnSO>^=VM]u,,L"\`HYqG!U,#8]lf@;/EY.(.)URgcnnN'N#auOLh4^ltq.Hb`qN/g!Y@K9;H1AIZW?iqVS>_>o`(iTXY@=Dc%>mO^jeLpnlg=>'EY%a=ccO(J_X&aXc)Y$G`fZ,gUmTsC"U^Or=qeUbk/JiV=7XqFRr\0\pEqe>AM\fNK9QT"_d'nLP&g+Lga/@rG%"1Ol>EgXitP-6=ZHmgE"-QEuCKi/ikc!AOX)Af\b_fhAWDMFsY&\F:31IghhJm?FYCUtZA`O&2&435,h8A2t;a$8%4!nB_l5YTT]%U>+u%Wc8pb$Ys$TJ[0n,Nq5eK.AaB;T?G*0&MdoeCn&RPZ%f(4Lm\>gE/<c?Zt?1`2@\Jo@NG3+AO+OF23]fTSQpV:Qi.?,PBQ8m%W9S:Ba+l7c:Ie;n/BCl4-'dV24<VdX*Y>Bs!4gI>",PZ/p==ng6T:-T4%Y26lcpA2kJ:e%XlAHENr/WFqs^ao"#RWecsahue`\"d%+Ul)8("Y8Q>*g=og9>o53m4g4SY)HJnBnDf0f5_=k67Mg<7;U@(#!4sRQX.RH7c*Qihp(1`+Q&a$No6r]4hmIa'09&heN\3AZRCC%i`)l>SNh3i*hLB,Xi+!?;o$>9!A/I]9EouVCq9'"Ram7m,>W$NRI1qaa5lL&IaD[KF#"@NljT`V_AI^WYrS6E#$A<&T".nsn1/0E%!9_C6*1nOj@>\mRTamV^o3YJ7P!bV4=s-k$1KLCn)%YaM3^0eTD/p.`WNJ]c[0@[Fo\$>O*Hjm"o>[uFMLUjTL5(XuHF"_C1$P-@%Z#0S4%:InP/uQhF&^t4%lckXgYZ:J_5RJZ;)L9paoNd\7+r,6Q[)Ge?$Dr:a\YT&A*^`31`:J:GhkXb`TZn7E>eN1XhEiumW&1)b%"PK<.Y8G,MYR%@?qi0YZD43rN+&6BLVMp@m?IeX>mE-RDQUo7ecGc'M/*%t3","tXZST3]p''_?9#sp>lS^+DKJ$DAn34Almc*F3%m\]XmJM_Fl`'(U-i6??<YVl4?+::V'fa=mX%[qj+`2K@pA-80b=Zt93$!YAB@Gouh9KG*colZ,!pco$1-r"-07O\-".Tu/X;5W[U%EO-nB@Y5f].b%o)>3ke=MD%nb81#'FmUEJ(DE^`DEA2e6.R("Lh9S`eULK5R[^_V\S.Mi;#cbb\TT/#.!03Ea3<j=KSKcS$LNGr2%`4[)2a07E(Kj/lVmsrke<@k]1cdUA<Y_DlJ+:9Vu_bVEtn4aT..:sadCYlb<f8F%pG$Su*/G]A3_W4pnBS[D6qK1Gad3+>AT(^RT%F;mo[<CFKq`?*I^O?9qrL$%$rPt5&Z8V,8#6c-9fq5/=D.*t.>\qAk'3a.de8>1TYR;PBu(+9_]->B,$(lh#=ZmCC[B(buQY1X`R%q+'79]Y$9G8#iu,Teh-$]1fa'fb!tW8+C#gnBV/'Tb9BsOg9^'3P(S^&*jb.)Q7lh=3fag/>>h^0AHC9,lGQq6t8]1I<nm0m#XsO%:<2j?Ui%Q2Q-1lr3CQi5F+u8<ElFR8F3<cq,?/t#B&sR78QR/%3bKF&\*;lU\%H$rX>1r%`lTkYKtF+QS)II05F[iLOQeZe`>*5D%n=BN)Y;PZaY3@3=K9hto`7K4)`.tJ3:PVel!ZQaqWV\UqNY7o$IV,\b*iqs(KI1qtQkirj@NhO5-=f&Y]IbB#;&jTP0l8@NG@qN+%j;c=QaZ-/-0"'9WO1:(L#OfQ@,NLVg6D.%Y@siHY:e%CMdYMJ3W0l?1oZi]3F`]:oJX[b'[[-,q).ISH1bd%?r&\R9<D2i(E@KQN%NQWkF1$p*#`s`)jg<V`#`J6%^cNd=oDQ%19:9W_sln+$XflTa7>%!8t%2ZffItT_sD7Go;q0^(B6!Nah,8U\6!mYf&(=X%>8Zcf#%(-D__[ln>1edZY3<Kd4m@a;JcP!*3O%<j(2j3gHB#TTW@HAM,27WK[R$Qfj6PcuFkp;m]VbWcR$BU06E>K()0gJ+)YqIc'n\&4=5%e0N=URE`+A3Oc.qCd.-&+2s!e_bWd"LkO^dUsZ_f20.]d-AL#E&;`sX&rhdT7TMNBF;++anfp`MJHdN>3eP!i1N:S>rj+*U1/,ji%%?ug(mW`[!@iVM(A9i\^<U/gjpY""@_d_aW6+sj=@ctWrdTjH"@!I1I\hUi/B;M#L,<.m4?(32>`8SJn">hj?)dRX"DGH^l!k"sb%YJV_p&rul;T6='`#$-cWZ^r8W8$0W'q%u^PCEZatC=IbTYAt2E/%#baO&R_*C=Y#MA>)RebB,Jk:.@lLDXPePZPh!T($oM'8<'M$%rXI[O#abSEFN\3a(sl,,V92hg24CS*d:JZ<*jr"5RT?6dU)6Du[iD-^ZDYFeCf_ml<4WAgAtPKWAe^6QMLTe1^G3.\o@pPpJ/C^)%;)WL`TS@e%00/oXpQiVdZhUbIq"Xp4j\nK*p-pt5s$glm:NG,&02=l)^dZt!XrR*s3*S>FQk*fZ#Sl=fS@Lm',qP5X?Q1=$4@Zi$%hO19$-oL`9%sFDfrU2i*Di1UDV1AB,iqeQM+C]6]=4rKW6`;inq3UOtBWB2AN3bl+*'6UuF@a%!V;<=]55/]mp%W3h<=Y=lZd!D2%agQ8q::lV3;ZmCo=ak?@OJc6Ph"^@]5&:[W3cm\WJ(!]!iCl6NlWU2t-=uVGZ(IMFR:"EGdMegt+dHPbO1diL]V@t&Qo'l:hSQX+%Uslb"5GiG1R1sp;J89e,iT1aS3=m>%EfP7.rN1+FiF&D5MKCjF-mm&a=M!Q-<1UlgY.9N!jncs^DE\NH(sSmr9H/g'!sZq,FOND4%OA$V)T;FtC*]E[`EC7b]]VK"\2!>k(cf2jniMV;UAGC/C"$13jm!hQ9'l7o0[^4SPVVfmX>:MfO)f81(c$$W(WWVFtpAcOLZE;FC%&?q4%-7<L_E0R]/fr!3';\EZaLai;)a@/dXK5Xh7Smml[2MU1J1\WAS/b.MVgppXAbB2:+ma@YS6I(hb5Rq&gJ8&!^\=>7_$E*\u%m$mcdYIZ7MlL>l+]kp_Z\m-tk<)_#9^V"%J]L9tkakf4@%pOm_%\_gr.@9iJdd6@j%\-RB)U\dW#EF[S0J[KK#mZIpd_V"tDM?!q%O[N#[E%sh%EtCh<jYf!Ul=%su=8rb6SrjB7='4El&l@O=AeP0s=A87+>uoc.)bkqDV^o/,f>`KZM0@CZ,a(NXX-nl?W%f$V\\<1L%c:]55\E7A:pWtMVik;A?6>2<lADh#P*_(.TpoF\s+=:r%gej\RJCKJ4d<e+(p<+ML`eU\756D=jb/K:!e:hS-cEO+_O0?3gF[In4%\`TDX1!@LE]*-ELBl"Nj\Rk-=PRl%Wr4PSBIm;;BcG9ND<pm_GS5']!\Gs-T5K=>VqbGu16##r+=:Vc3\rpA6_me#1\r0k5MUib-%XiYt*fCHr.9MItl=&<8E1(/Bq^\6('PW.1#r#<j$h"G*eP+9a9eHkOMHF6[3ii:6N>ot0.LFpG?LJ`:\/<-5jI'(s%_;0'LX%<Yf%=a>uEa'f1EBnW:r^g`[kA5A;QSihbl6S:Yr*D2&M6;kQmXZ44U\`32,b.Ramr_/SMp9#"SV\M.=Fr_KE?$uS<[-(sn(DSd@jO?0X%D$r0PA!,f?I7S)bnDQ%lH,(\l4;MKc-sb!oE20QN,k#Wf.#(%XOsr2@qsO'5O,r;<(?(khMP@EbFOH>Yj!\ukOLps"N]2e&SW)B'%OkN671f_R_N:T0Ma0D#%bjH-^p98&.B$iVEVfJ1:&U7Xe[p1hF<%e!*W0&<J!fTEDF(du`3JceUboN92^:&$C#tL**<C7BpD&-C!%>1)m!]H&E1IBt-Mm43,Y-k;ZldLLJo)h/7_(jMVB:8p*&8B5YI2kQsAC_[jN41!o9@=6]or-Tc$;UpjW'cX5TWR,9!aOP=5?O95(%DH^@Ld.%m'%&P_3U-r=HrDuIf8#TM\.l>_efj/$2L>+4iGGce_*:'46#Va?OHdfL]C\^r%Vumb2?1Mt!I<Zp.$.QP!fhk/=22t;,%/a\Q5g<A156OGA:AeGgAL:i>qW3OT0YYH?#QIBtC;XbF')'?$VQ"\GI9J>p^Gf@YS?erq)StErV/],iS;,I2\]I6M6!T,.5R;KCM%D<eEBMhB4A>@_`f-oQn?Q40L;@3`lOPk:;>?E[?,hijKef$3iJC8F9d2UtX(jCo"f^)9UK9a`M=BH[,ZRJQ2`-E%"s/$WJf46Eg\%.ssWAo',6l$;t=28j98C7oQLsGt]Fn_"s48D^G9`7PNXpk?aL74KRTV`F`T47;>gr6WT^+aKFCqpaA=@).&pGV-s0#o*BC1A2_94%d?lD>'oeUlU*Z&@mo&5X@o,\rhhgq!9n\9k+,;')Il/8ab?,AkiU%["+Hil],QT)TQXmOZ7,u+kE98u/f<N.LPL5!eMR*\q]oh-1%Qum-U'@e"n'mMmG]ik*O#!u`Kae=&d8siCL=IA#u9uLX'NJ@E41La65j4s;B?bch<Es!:q@'[=$]:mDs"O/@]``l40k$`Yi6MtpV%Kaou9'nanoq]R!R6)lg2j`$`J\IAB]4IsA,BU;H221hDDX`M!/V9>]i`K#[1P$(uHZS]OO[=i7g;oo\W.G)gdQ!Whi;#b[7D5?pI%e*('pgiuF098M-[dg35``<\f!5#NL`')[M@bEkpTE8r^5l=K<c=CfW=NZbroOSRsM.9ln#W1*XjP<sP:S(^dPHCnSE'T1jY$)]@B%qW;dFfM_Wh8;2=RDRE;C,@OqkV*MDrH)2^h[V7MLQs<PGBKd\(ghN7UKdgFT`^,nKPUSUIbTo>M:&Ymm1W"rs%Q>0"N@@s_\Lf`_%9cT=OW22"Q:X_mOTs7.H+6d3?]5$Uh7mL(tm,57u19cP2?uh+<0qq_7.NZYq)Y$Bkm'S1kOaTSPN$aVNFR*!+L:S)m[*]69ptDGJ%H[$AL[LbYF;].rq/"S#c2LS8U#Z4i'<#`c/i:9pJ!B)Qe[-%l)N(`u6$oG/DdGtPud:<b?dA@I1WXWF:;E??jeHXn\(3M(G[DCs^%Z:KUeFaQXpSPLl2Wb4efc6bbjA=Lt?I(eS`gC.#piM@CEAq4#t#3O4>)%tA[&\#n7Huop0JbZ1."Rm/:b8HPbYqAHT*k7iJO%*rg%.Wsg@eF@g1&g+Od593H9*'`#!3!<eLXfP864CLr\VYD8=-^1sA'VAd.f`/7='eW>4WY+:UK5BBKFUd2=dQ_>k6W\OhF7kXc<-i(g%YH:"5I^roJ7Y+-]?q^PY@`lc*#GL^`AD?_F($60[Q00I8>uVPsM;![l<gSn&[?'5dO?IctVu7pM,JU#-oWi2o?pImi.sfo^^LVJJ%C(RtK*lNgc_,#h`B_+L;*SLY8;T%dcnPtF6niO\eeZ?,sn0E:Qi"9KaZYVN+SCoD&/J:H;KV$Y&,*Gu%Y'X20bhHdUko;2m?j"94%4fL!p6?&R*?F&l`0%"^(@`]XQXe+cgGEPf2-EX:ZCf9%X[jG[Y>IBT\&PG/4TC_BBl%IA@=6"BQ^$MLR9o:cbNG@VKXsFf@P.9g8%lm<gH`.tJ3:WH;!@SrY^M?\?N<iBn.$0U"'?<tO(BU%0ZBfUFc_@r9j?4FYR`(7YZQ8uNP&.!.3QKd9\VV3,;3&=E0G3,t&]_5Se%D,$9hC$hZ]Su-_8jVNTrcH,<f4!.m,MjZS.MrVKR@HaF4:+6,u-<p$V[^^Rs8/]GW=CHn5ApGir+gn+bqYcr-]@VcB5V9?(A+T4n%I+ULXHl.PNg-nmr'YL_SH$-O#$`[l@^.PWkWg?rF83I^Y(euDP2XQ01@jXp?Q$8o=T;0?+I*&fVZ[7DjCI;Wq`G%3ORV:\d`W<l4%XZ!IBIjHf^\ikMmW'#o<:b'RNLnuFWrr!Ern8aG*DK2CJq5c+<.9FGEm>i"6Ht#aD;g:1u40<q!@Ei7)3J0Y4UdPm%'u/k]&:=!c%5&:OS5(Gs+f;+Xjr@q5K;NLQ9/m%dM7du`e@F1;NW2h76hK=O\P*i8'54T;d#.%T\\-5E3h2;T^):nC;+d[WIEl^AtXJrUZ3V1@X%ar/I_o:>O'Ah<9L\A_9a\-s`9)IXV\Xs'6E`,ape3E3NCAXC&71PmKW!5tNk&jcZlfL+WTG.8u5KOU;)^_pC7.9ieSh0f)F5&:s_%5(\B`i#6&Id=V(]`]<9U#Yp`Z2pecTGRWkq*KJ8)3'\gX0&NonG7HEe4T3SARhQkJBDgRB-,VRFItKlJ_9,A)CFT\m3#3I!K:X$]%<@Ch%mo.r&&SkHM_H-PIi"jjHTd5()?@iVJl"b@"EDF'^j,+;(7Z8f,pgp=MP,cn`4-&86QF[bJ`Jn'Ga$.[#(5Ed5nsX.&gu*hs%<k](Tj.dCLqKr\Tm95ssiAi%Pr[+/WQUtIka_=EbfJ&Q2`\4[kDXQJSXUdPBYH705)NLQ*aY"YpMuk<?=lTn"WhBhLmoU`TN*NE0%X-h<mO;)MtX1h-9#-j;#STfO%Q/tNEn.bfl7^!)+g&\d,FmI'4(MaQn6A&HpBtm3V'T)^M_Pb+7dP]rKVWhH'KH<r=9F0i;OU0b5%3BctYHjh+*"TJnWP:e(q:3M7"+D5thif5`P-I^2W!,&\P,IOOdLO%&l^G]\UYsTA/a\6*Kjc7end2`.BnY\u84O1_iD`\=-KP'`(%]UmI]49q"]EgRp$>aQjL&gRP%95^Iir.`VT44e:m0DV.f(A>E,ZHO)YR-#YbTmeND`PWP>)2mt1fRD]p:m6th'ims)$KGRMs"U7;%nG"\$Ca&cq?mi)h;@K$-X[/K\\>n['fNALf<cT5_$$kVDOs,t:N$hdOEAYBs)Ha3<,`</nBZh>IeBsq]`8s'mF5r@JK>:khR,ZTi%*'u>^Ot1gK@ko6iqOGhtk`RTM'3]NKg!h;E@C*i+7\q;l@Yc$ZMP_Lr/639IiaM&;VO@B5jQg&'V_,3gilEN"C;Z+!'cq;)9BJ?$%L_!^CT9#JCXti`%_d%)9P$P_t/YCYZ*.l4/9%@KV9ID!9mhojmbLLC2O>SnD&SUOo:kFfF6OfLK)R=CXHHj[:_n*!DNQU`cktq>A%!f`W=;(/]=HHh_Ub7G3.Xn&eV[0!2^?DPQ%M^oI1,fkB_X1QsiB,W1)dm=;48g]3[:acpEMi4R7,:"ZAGH*=repE*BqBst?$7Y)m%(A;c[k/W8I@12VS_%T#J\kKR?N@c_M-J.PG3a\L>3$kbueikq7_="NG(gO9*LK"Tn]$X#,b7V42>t2ln"Sic9lfsp>o5_.[Ul$CJ%gX1bP%o"7bK?$IT>uVh[JMp6t?qXq1;s].U[?k\F'Fsd+Ni)+U4bu?N;ZDlabB.iHhMRnu=Z:(d>gFUdJ8irRoTe[nQ.Gkj7sD'h%)l7iO*'S0JIQi(0U/NY,JO.9?A[8V-+\O(2@bH7+!DOt1hXuO%O"cuE5TYZsB$Qqu_;_]/>H+BHBU878jllYUkST6j4r3K.@n=:e%+Qd.N%Cug_o\R''6r'V$fk_]4T:K$N=!N*F@TH/QU717;AOf?)6U@"b_lQV1Ah]pKE""R'\>e..X-9IG34^OuY(T/o28!s4-e%c"%GJ5o;pE-$ILTSKj7o1n&:8StV'?7)HA[S$JVXnOVcH\8:Kq*rVLb\5SbhR5=(V7_fF<7UM+pJ?GB:FXe>TFjXW(fY</$*JC=q)Kh%`g$:Ld:s4+^BG@U9g`2\3_Ls.br2NS(rIasX211\W`]N27]Sh6qG+C9's.\F!WiNuiuSkcF=T[h4Q;PC]"+>3K,AIu=RU!t%i:D+%h+eWT]7AKXgVds<@Al,Gikq)@k6!-cqB(s^Qe$+I<[e*:fD.s.T>p+,d!$)p9Fjm5mjDTNAB+noeo&fGH3EH6233l(/c"Ae?U:AR%1rE$?.u7U;FIgV:_<O]<0WZ-q,g?6)1K#*'3ei(61t5*r9'1&YP+uifg*#.[6H+T2M<H1N*&0?9M;#mmM5_^%F1L9\MX`gQf9n*o%`j2I4NErgMOdi5B^:o"0+1;OV$nrA<+]DPFK`&S>mC@EBbL0F36VYhc1>?Q8aA`)1qCaXFq^%AZ>Was.4!A\bgn1:mW%]KVL8S3%%2q4[AUDPl[&Y%DA&NZ=-6DL7M[%.%Y&aIX&]IocEOF0m8"7rqW/sFYN^3L6LIZPs<>k[Ji=&PYm=)@G*\qOrf$7W2&8M4!&h7l=*%(s"V2jDnS5l42E$r0#ek]qoEYcHd$\_\V3T6R[2HQqX6k4?E&#j_Qnl+H:snAM;/!.l!+qn@sIhMT'%#?OHeQ^RD=VPRpm7F1)^N%`!#_V\rD.qg#8HpkE#Tq\Dd7tiUce,s7dfU=l]7k?bcQo^[:jkj\?RHHucD4o:LE:j%'.8o:8Zarp'CK>P[hK]E(P(4,=jf1R<SL%^"N8E0I"ae`<ieq/Otn9TZ1*:N]rT7egV+iSP%1;">T?l@=/;o<JT:LMFf#;]cf:4Ld?SCN_m>Sj9aKH6D]A%1F['%'-m,9*%&=h%p=3U1Onk&4NEgoY\W*ad*Vtf</3t2c'Uc4<Ag]t6*sa04M_Q$$j0W=e0r\kXC&N<3k%+Qs2e^fc0Z#Gj[ME#4+I9$V"6;@E_QU/:%]30oB&NeN1`9s[\'R*;E#oJ<Dh0&0B*KsC`PJSdpj*Qu#_%8DD+N1PoRg3J<0V[+HEZJ<rW::ua%qD?Uc1%$Z\XBP-B&g8JIG;U0%f::]JEam#L_-<S4Vi:`QH9_.!R9F_aH^.0J8$O7HPgPIHG9>(Ma$=GHAEj`cZgejmM%'h'T&5tQ+,$m7rk3YE:Ou0[]2:UH8CfXE%&kK<b&HT#J<:p\:/Qj#q*R.gqBkV8]?8iZYkSKUTc%$'Z.Qj)Q'Odm!Z<8i@r[T'/bO!?u@Sfo/ZSl8\4O/U!9cnM.e>(+ucDmB=%8sFX#-=kbj,$n4WegEQ)TDM,`4]qW'(^Ud8<D!MZPRC`KieS1H+je(&"FZ6&k6Q&<p>RFp@_>K<1A._oaj:5H5]*GWkL<$b@aJdR%Nee:tXuH/spI8E"WPh.*N"u:B!<?Do>]#i9*GT-F7j].N/Toe[]:TeFmRF_T%f33:;4;c:>aKRl7h:F;>,JJdTRY"[\<;gq^p6Xn%b^gp`9'6Z]+1:[t$I6XCXTR+]7u*7F/2JEG7J;lED9e"hAqFd]]kXI=ED;XOL1*5A0+_`e`;E*K(#msTdK%V&9*6*W=9Hb%PaLp\%T+8,a@P5p[Ylc"Wg:MDfd,P/!6i)rh$\t+W+OHG$IYkN\)(2f"l7l_F1fh%lL=\0%<o*rZ+XYLGZkdB)-rsq;`V(aD+^S3GqU"oe%j+^/Q%Ji?,0$.Vtl4Y>a-&t:^;6F7\;49(+#rhFTjRC&(715"k[[_gPBuSs+_nUt1UQk]G]hg$1hlH(d-5(P%%R<2.YDV4qEN%CX%_gPtR8j/oYI@-<U@I:SLWJ-sZ4H<B/\i_'=!bh)uGUkEsO)l1<Lqua6-!!Zm;gPq9Auhr;TAIl4=0]T0\>_.0MM/[69=_p!fL@H@%`E,Ue2DJ),c)?^6[+!R_TR+G4h/8*V[#46>rc@Tn<pj3R8H$68dlR,"Y4MV+bJZJ"=0_,H5fG?Y23@1Z`VhmY=noF'-_-fn9)/*Y%Vd7*C:#4p9MOhGMeT%"C=R:;J1FpJWn\)3E$.@*Oha8nV,UM"VHYnK8V#LeVP:I,$)+Va(?&(ED*d`8De'g8`.a1C?nK'&Im3BXM%r+)dG'i"A["KE/=;*31NWCeNim65uh<="^(,43EWD*SE7fD=`6>Bn-*.9`2q*fndY@T6'WL`adI+m7;%p;=L?)->RM+7ch5;l)A;%aZr9XX#Ih8L5Lsei`qUM<4WKrII9*d"l$g&(=,u1;#q-?Gtq;cagUVik<9X/kr*,33Dp#BhUL4AQU4AWDPUP1hH.$HDGSM,,g=M\%a&BKOOV-;<ZXnHj-MO<lN3L`"6_,@G*,@iHYM8%SAhA0,?[!i#Jc6/&6nMn;bX=32Zb7.YF=4Sq49M`3h.k&YVHcFP?C$LR7ZEeI%"F0'W5N;RsY&GFMJrWqkK4iNj.qXDd)fW'0+#+]BMn5RI&q\D04WkG;W)dFOAg1>`Mc<NfHZdLKQ7RjJHfmb-K@la6pt,^"+N3JI%no\#+M"qa_=&`1PB+@/1nj;\`ke\f+`27l?Z&W>4>'a6;0iXHSC=:o9pbQqd;,bJ!7YD7$<l\9>\#G=0?5d$-TVrhpJa2QGG/mCT%]K,_lI7pLc>?3h(*?)p;H9,pu-"0^mkECG'>D%e#n\cg`#D3!G?m-u>1Zhd>I1DM]a$P@N$.#MZ5uBLMng0*G7sj@97huIHDU%o^%gWkM3Z,QT`XE25P@FeZ'Mh/]0<dMdoKE4DSoc,Vg+.SL>GTlN=>`JC9`U04,j*JGt*L_<].sZ%9h<hY3%AQ9(NT\C>=?7/Sd"OP>%TMCD6XGtl1HGb2/bIO2:2W\S"CjR2_]BsTbm#B:"k:YICD[T%YZ.nu,JPEdjHWTWcG<m*/G43_Y$\&t^I&GF1hOf33FBVQ"iU/Ls%K<3',BqHst$10;83.a1n(U/TW:9&Z;r^s*:2F"hB2GMGVK<MUkc=8jEaA,1$o,-k^L-_qbS@4tu#Y667WSB4]Lnsr.]fXe*JFVZa%n!Id>4SDMS3a^KoPbFEh@H8Z@?jh`OfhOgoLO68gmo6-i%mSC!#-APZnW1m!I1iFF4$c2+K\=h:7\M-Fk3e@LU&BNllH%,prE(a_%4L-oa1'W&b/.^PI:5BnC+M&ZTHH[;TrnoclO^0/Ss""&l6I?Dhe*0D(&S#6h,dh<B:f?IIIaJe%.,g:6,KA?f1MQJPkR;dugPE*Z%[aT8M86A$\pR\2NIO+^p(!ur@@\D0[OKp931a$rpP'%NV?-Y\G70mA.n(>Sd3\qTLWk52qCc'9o7.J/)%c-AnOjrX#L"^tl;i$]r%(<%o;&CYUM0$Y;d!:j"*+dU]LB<erGDAS$(hqQ-1rn^pkmd&WHkl)U7B\gFI(Us:Ullp]3^SmFlD;HT3IN5ulhN)N?kj`nY;VkKk%;=V\9fo:Pb;Fga0QJU#%nF_(6,@VN4D2VNa]=SYn`R+gF\*%Fj`*7CA<T7jXH8"g>*^,s:]8p8nliOf\':Ztg)=frPBHY:FF#9=p%M`MbSZ'-2fX4Zs&rg%J]7iO#Qc_Fb]qs;^2MuEEa^\P<dFQm7U5Iu,[#TR-b3%T5o0[>oXLDX[Md;-*&C,[Eu(d$H;ESMT%9g9A:%'/\"[UK8@(m*SakU\O&d`fY]AB]EbjHF].=*'N3#'TV$hA/%NE3AQYjfB`gdd?9MPk%J$j^2pZk,;2)]iK6;E/b;N>Nn/NP@n-nj%d^GoN+6hVLkXQD52#\_(490uS.M!XFZHiVlLb/3!-6epB!0#!F&"k/Qir]jL/G]?A,259]QH73-%MQt]7Va3g5<td<"V1#LC5.][%7;6`a8Pt'ZLf9Nf#;?l=c,Qr]ni:*\W/qKK/1RV$2N*IYJCgMJ4(,Rsh]C^e-WKR#&-)H<URD<1s7s9W>l]n7oB!a;0E4iEnp=]n%^%fOs,67VcY-^fG^q7;Lg`=E"o-PUjnN"OCZgN*ZNJnd#@A:W7Gn+1nKahUpATK"XVU2cf@:&qW6ADFdG'T%"IE!Oa7M];dObICs%L-q^#9&(mD<HI1DD)?VJc+ED$`Z,Io!S(81[f`S[=92BdCs&^BFeJc/F`]TZS0SKIB$BoWF0*'PG7-Bj.A[:p;\!Y/AGOLfPqmoF%.4Vo<OsC.kYbr>OP)C@aJ<CEj.b+Q\GW6C"gr#O\DI8BmRA=])=pQl%+**#g,j#t$6SYBTU6q?>%N/KN@?SiXf4:F$51[%P*R.Q?%j6-,[@2=b71FpFb(Kg*cAg]`BO7DhL,\:u1`\*uTPlS-Lp3F+nn"D?9S?EihlQuZG!fq<%1QT^>6>8f1>]^Rkr9n=+9#p3<nsda1%GGaZ2RV(;X>m+0p-;,a]e=VpSDBO;p]KU+qOt!/l[H0_3CBX<ORrYK_.od>d(,BMlA>SS&;SFcAdU,K]7bInHCkQWK"h"Y1j"T)t%*9_=[//Lecn=P#(S7"&iCPHu7%7J.LAjd.dVCn3[Y`0uH_7f9X<SBp'h1VB`GoQTfg'0M\&8G]q!_,9"a*bHA[EoL+c&EsU8MM<U%hBLGp+=`$)`&2PoO&6gq9c3/<5Fu[G)G<t\e.=(uja98(RiG9H<`EHjgXM4%o[.%I,eC%1m:J;rNNl@mk.7O-:lJ2Td[DEoHtX.V%FB-JepZ^c]D2,g5'h""hRWK56C9I!K2,0?hQ2L*HnUaNiec"c,=1bH`CctiDdhF,hN7=:!9L;rqb$>1UHQreXZt5sYWPp1,ocBhs%f%iit98F`4`cNBj'&@)/l/Y!>NS@Zn?A%HM)BOo@+]B$a!,9KbcpgO.p>;_&@?,gjh%*nC#JN)pk;GP0*=Z:Q5(<_+Je[71qQ7h%%f&J?U'%ur&lVK>5gZZ*`h`fWOUW@%CI6KDKpYPMZUW(A2V1i"QH#lelWDN14T*l"09T<uPZK'\_4g%P(LHS]nhK"fXNRdI69BTN1%IAHa5VO%Nl;"s]_mhfls7rV1dH1>.R(\oSnrH\+;bo+mil@R^jYhtc!'spnI?adGm2j@RS/"IUi[XJGpI"Pl3gK`o2)];D6*e.g'%6-,7UDd(j33O%m7\_9:>`Y*Zc`As9Nl]l3@VAtN-FhVSQZo.)rF/P>f#d%#H!^)6rcbA\K^j0d9>T>6/6#-#E=.MK&s&3U*lAS'W%j%M0lb:ojHR_pa=o?n@]At4jNEK%6/HF&Jom!7/K)eR)EI9EMooQYC$.2o?iWWO<=gG$@H-NXjF0sE#<#39'VLQkkJ7"%Ktq$0eU%'0D4:Kpj_NG0+h16QNVU7+q`/KG;n18rk)[;l>+'fq8'M&BP^QeC%W67S+IrdHS"+9&@oB1*,dRnrUjDT>+5UG__)[IGH>^U+r#7%R52rr1kDi#"q($Y/,[n^W?S&0eDE&c1q$Ws__YYMA)5DYR3".I&+amSd?rL)730^_3FC5uHWO7>pA5oaH`CN!)-K.L!A4,oO/dd.%5E%uB70>lRIN,ZuLP2,6GcF%@F!k+o<?Rj[V]31IVErE[oVd0l@V!-KW0%YWl*6I>bg_9?io52\8E$L&j*4IEmoNM.M#$8r1=P^4%=GK;snQF#pE8l.m#O5G4;YsY]qfb2.1*$JM&DB>X1TrRuhRA#-21"rT<cMH36Tt=4C=]h[o@B\l2XTmV7.f$in4Pl8KJY']+#o#q%3AS,]"snMm'XeehX8He#4LQ%=KuAuT8adVPSaM3T!S9H[jc,AMMZ"<0C_Gk+n[9R[7e#qK+_I3C]R;QM)<H6=]+a&p]1g4o9(dGj%kr6NUJ\<kDotdDMmiXH%@aB&_1l/C_HgF;/?s;[I\EJ?.LU=b2EAh4peVK3H^,^>,q^'>XS=VpQ<Q#0>*nr>W'Ofe/1gRWao#54d%;$6GWO%g]N3=Wp[5_F%`ea=Z8'+#X!gF!H-$D`ik:F)B^9CtAB/l!ZGM:s<s@`@a.lm/A=q/D%7>6;$MV24:u=kVA@24l8#-K%c`%:MRg)+MLWn3m4u-E:S(1NES%u6U4=T4$/Y!;_:%"8&g+IF>.oJ_AP<CRmd7mmbFlSBb"T5]llG)>LoAfdO)ob!'J[[NmoM1M_pAk%CWVMUQ)u2t&#pkRUDp9i\4HT1]4_k(QoJD9Zal8k%a.^c1NH7eqJhjZbS6aCpTqqJfs.VkP"Y7.lBUaI(bmJumA-.;JW9G-,hF$r%)nhb%3.1ms7Ra3"&2Y_pKUrs6Ulb#_?V\;:T*9glldiD(i'\aT[Z5r,;hf(ZKaD4)HQE>!A%`mo%O:%PmqRZBNTgB`72'/Z1lpXR%0i$Zn)N6C#0(2t<0rc$Z9m?M@e:,HQ(H(4OhH`eBle<`KrZ/U-NF0:*fR6\ATt>7"/r96rhM(QM(q[T?%rE-Bqr-spI4p1Xf^H5R%)ZY4Zm7+ouHb5oSfB@*6m'XL\'>EIM'4\cm]@jIHT%t+60A167m$D]N=nYM#Rkag%hG'KQ#t/]ED\]kf['u:U.b\+QDCOs)C:Bf.%<jl43Hct0GXM$FXQIjtZGAD$`[*_1o)tNF'm>ZJej7W\lqf_iZf_rL3@-g)85$3!CE$%?m<nulfmQU(1Cj.?&\[T2=qg@1)c[CiA%mcZiQG8GCobIcN?O71nhh8fG2hX5Jn2gKVuYa`Hj]@]j<SV?FmnkN5/'7)#`]32h2TAA#R8^_L*mpp/la`l1@Hg*UPgHG;%`9lFZ%cLl>k5>oASlJJ#iL'2[S\WMN8M/IuTB<3&/fU;+r/9V*-Oc>n[#6;($km`jC]R.OF4$VW,bKf-,4L=YX%HHf\@)G.>I+Y[M/i*Pl%g==7KR<I,d_5LYqCsZou5o\U:@VK=[];DSIRe5#Y!4?++D;8u0Ef^"N,E<"RnMe2k@!n>\r,9L[TB7,#?Jbhp'n(fH'n$8s&Uaa'%.ej,h.ejDq,5N'C<:h%t<:h&!<:h&#7.^qUW8KJ%W9?%1M!/&6;:0#Q;:0#Y&^e)'U8#u\U8!_,U12I<,,/uV7R`pm7R`q87RZ.N%N/Be"N=%j:NJ]oPNJP<&)\mc**#3mV*"dT$3\'n54"C(84=^194l4S1^dghciC?>/!D#YO+\5#YJrkjR_iTa>"-JI)6'2Ge"X=b1%L*IF]"saq3L*R@Z$VDoF$qi)H"AC<?$r&5J$r/#C(7nLt)5't$)5:+&)5L7(&Z/Oo)5osq/QA_51K^X?1L-pC1LR3G1M!KK1MDX/%>M)j$-f@n=BBW7@BCJgHBD>BPB)klXB*_G`B+Pa([kO\RcTnA%cVUL5:LL&O:N307T)_SST-6otT0Z205/E\F4p.:35!teTI0)>Z%q?1^dq@%=HoF^)ii"O1gkSoo<JknY07A$5JO$8/d%t>NEoY\E_`V+9X].-%KG1Z3'&)2g;Gn6VoE8IbR3B1sEmP15m@<WsA8%/:1%kMtA=NcQZ9?HBZnG1Ye[@aSLB(?9;M*6WO"CX*[/4$2W[Y^8XuS$T^qk?A]rV=TD"k0s.o7[*+bc$),4g_+efleF[IL[<f1Ft`7<%Q(mMdDIC(<GA_T9O*>K#]An*QU:W@/DRd<:G](gSDER[`h3U6Ir8#.N%u9!+4:dV2'Kltth**t4W82,M&$t)T4V,9_]KOT^h<$lH%e(kR!cedJ=50rKLA3S?3h2X\Fs4t1KF+rH0515>E$U6G/BUYR8b3lF)M9YJ+T1Mj9m*C&nGP9A<C1@6V*Yr/"RBg[/iCr\urc"`d%)lYg&`XQXP$0DFVc=D%7,\Q,J!L5I_%HQX4of]hXjn0Y0p#Yj0aS"Zf4j`l`of^t#jn1dpp#Yiekk4'1*Ura`of`*Cjn1b:p>ts1%#kmBQ4V7>KofX/cjn0W:p>ts1./)cq4YZTkofY;.jn1c%p>ts18G;0<4](k6ofZFNjn1cEp>ts1B_LQ\4`L,Vof[Qnjn1ce<mbQ9%<mbQA(=BTFXeJTVXb+kq/Y[1">",(B>",%a>=G/->=@A#[Yd8b[L,2#[tqbPDA@R(D\[\TD\7C*i%"R3i@=[,i[X^3j!+=8aAqjM%b#S'ObXM.US?(ieTW?uaUoWE0W/KkD=BEm_?rt`gBG](*i3&g#n?/M3!3`+m&FUWe#NSnW)<Ork$0YCY)<sZ_/_I,f'ATYH1Z5=t%1ZXJX>L6I!B@p;5BAck=BBWFEBCH_b\+$SqcN(2DcOd=TcQKHdcS.&IDh2:bT:oX]T>=o(TAa0HT)`:&ha52;5(g_05/Y6p4p/][%5"!5F5(UTY5/Y9o^'0<-I>3OmI0PNCI=d:jHif0?I"I4jHj#?BH\RFnI0PWBI1$oCq@"8mq?.aAn-M'ToGK\joGKd"kS&?FkVIa*%d3f3&d:X$DU(8r``L_Tj7A$8aM`u^6(4Cdu/c#SuHh7nJIe_Zmb'jk%5-NqHhVWsOcein("l=fscPq&9)W$+6cNeHu0]%GMcNej+%7c&cdc\6GK>i(+&ch2OkEo)G=cZO[pLu*cTpY0btS_f!jcStE2B>"O7T.g&o-@68T4u\S0rUp^0I;V\j;sujtqV:MaB&S)UoXTsQ%:!!&Ol#V&4S"&l_dc[c_oM".pVU*0@m)6UC:S3Elg#7>iU-9+&ZZH$S9RWM3B0Z5UW;8WWcT_)ME:oV$SGi'R+R:hm3;`:8_:E8A%Ejkl&K<ENok_'Q)K<NT0l\$YBK<W\?m=[XZK<`aUn:X`sK<ifko0d<LK<rl,p-aDeK="ulhZ:,l?JgCC?XDUl[U3@uK=5,nhZL>p%?JgCE?XDUl\6iS"J[f&nhZLDr?JgCG?XDUl\mJe$K=YDrhZLJt?JgCI?XDUl]O,"&J\5>rhZLQ!?JgCK?XDUl^0b4(K>(]!hZ:K!%?Jg=K?XDUj^gCF*K>:i#hZL]%hEdtMrBGf,75/ucne](?_a"(XbKQ<0qbl(5UUOUg:N=2cNBfMDQR27X)j`W#(CJrfScsQV9_87;%GeJqqAp?[`lk[UqQc,dpo@_fSX@&]B;n&!J@]UE[rI0Ia>`77sUJ%m5IMfCNDuE;*Jt6aR#=\U$ge6[JBjp*-e@[\'qL/3G:#6k*%fr.3S:0nX@=Wis6PkLb^=gcWAp1O,ViM?KGMc@X;TqR1,#YG*I-=n@`eR[Xdg[M`T)6L`l_^AiIl;:`?QuX_5!q!<X]gV7jU$n8:%3Lr^>.LKNCRm02M2nD-4HtF1AH]bp8BQm`[V*JjmR!,<B&7R8QbHZO`]?=4(&Mjg*'a"P[@l.ur[CT/BemU[tbOjOcL0aNHN;_F@%F9i6Jg"_K>9:?"Z!:94"_keApG$eH5YSEe=$"oHiX&%i!D:MQ'E/Ir3CR6S&*;K;)F.^0o5cCh80`E!@#EIlAN:Xj*`mAb21SU_h%B:ijqcBH9qUJY+G_6n*r5+=(6Nk"QeP`K('@Uf$JRkd*"06><i40K.MHH^Y?1=mF!EL)uD69`^#T8))1[F5;Q4'p46a9L9"@+Q6,%#Kif9'Y-eo>\6Treii!nOD/-S_O)iDm!`:UCMnJ_4V'*X[L)+CR2B<!8U)nCe-(JL;f5#]VX53ia_($]R;3+l_IYN9Qb2se4XGDG%jpj,gg`Qe?\gk<Q,$Bf.-&@rQIoFhB4T1/l-n_Ki0hZ\$5*I?\b]efS$uqt`7J#/pk0K:Pq,^^2UoYCP_MYTe_d_O2[gaZ]/0!r=%n!FfZ;./$M2%%8[olhqs'iThlF)pjuKh`_^3$d\`nBYDe$g'&g>DX2h0$5TK$_hqh4ZHX/S\q"Q<EooW7`9D8CJ;jD->cE$k0;I4%@VD16>+D&TKCE6=.RBsqnR<9bLfM3SCpr%Da*\J8jRk<La9s5igR"0.=KDs_amKJX(a!Z/FRf!I/tj0_?J[#bn\&$`rcnD<nqr:E%p`3J>XlY>qMktm1lf#Ph$fBBr]RP1D`dG;@GS+eE1`f..TedQ^%3*+2.ZL?aNP[?f<rngV<uDOL76Ao-V>tnEg`G#f1q-ZYorU*o%/TEnUAb;dEHrb#(h(/L?rb__!*+:4iG6kg*\br#J]7u'/WFWq/M:Pm\I!*i3/,i$'%F80`YieIUKe_'&N"%#p4eq?_$i5e#p.X@o%Efu[;\P]&akp*aQTb/W1@;]q0C$bq!h]Q><4A3n*BC!hq+8ba0Q6"`V\1^2gCTb_V)]?R/mPtKP9Q^olo)S`$[qtbZK3i?HoaA-k%g">_Rk7G;R>SG#9X+W5N1`*a7k<:Zg-Qf!HdmK-/P1eH+M$TZJO;5+hbR[tRXGs?_b&\F,?3t+HS_l[blrB'e*l(;?fjLWY80MdA%'L>k(&/JV:Sm;?)n`Ae6#gu[N$BK!,=HYmdcYAR$?Bug\p-UgaZiKZjfU]kfK?7(BJs4NN$^nE#&tYShZB%2qi?7i/B1Cs.GP8au%rmZ!UAFsJ[*4[;ea(cMHSmt+Tat>\p;,dg=1$9u9"S-T#nL:lBi*JCg.K`EpUobk?:2/&4H:FHgcbi94c130>m$44k1eptCoJ2O6%dM]>M9_[N61;-L\<KNAsX1o^p"(FISlpV,9]9-@f8&`OiHW.9sF6i\6M]:k0Rc&eL5R_cGYuG2Rf!1Q@Ls[.4lRojfRm)tX$B:`#%0c"eg2,i2=Ih/.@&aTF5a(JQANd?/.MIO1Y]+S/jPSi:ZN#7g4pCBUs+OL,\W7qcCNgk]h[.F"9A:pQ<lb)JhWhjmqIQ6m2:"T1P%ARE(7nZ3=3g(k'J>nHC)Z#&&G&Z-;dMjC-$f_8C%:jH<HB])_1lWDUMnFH;sq.O]3>hJS,Y^Nn,38Z%UR/d:.mi2d+9,m'+8L)Z]%GF4,]A(C0V8$'(ccTOSmZuMX`#<Qk2V;?P-%B/JC]_<WBpsrI"\Ri#b8/m])[Ae(X6k7rQ&[OVI[Rs_3c1J6:ZBmRa5IXsB4mATK%[qPD(02Zn%/#NQ;[TVMX&Mb8&*"6T8eqX>1^"p6aH-RP^a^<iD&Y$jFaF2Bu%d-I'nO<W&?Ij*',1O#1`DMI/F]+8FPpV;54WM.K%W_]1YEC;%kr;J[ublokp7m:ChoK6"R@L?:(f,jR9jRmag22GRDV4B%AZ&agG&s9a:41WEQ>'k9-;VMBj?WYHDb33H89Z2C[&`tXP%,0n+/DPpmLT4H,hVeV$aHK?rZK9kC`?h^,f+XZs6a:JsK]]@-YW<,VkpRQ1G<p:.#do+-T9'o;Z&JIfOVn)auPg_b#iD,R@McnVi%R/58n]1.``d?0,-V?cP"3[0RSQoh'59I\94r#%#mS.u*7`=5O.:*!-L&Cn@A"REd-QlmXlh-IcLVMg?nLG<C7],lS#,0RNlDIQ9C%9[m.&dJ[\/@>n'7G1UMej`]3t%tA6bhu<@nS[cFYf9?+.G29]Ya0&54n(i-Q^+[+Th7%=S`VVR^qKY;c?"`WH(?P=?]";_7X'f$'%H`cWe^g9sO>Hl`9mOIQ\]"8KXP]r=#YP?qtfPecIHL*S(2b3S2[[S]BL"sq=rSHt>b^R<No4IFndGrp7`GPkHD.U28p@bgs97*/^%/Z?@Rm8hcop3')EDi_O'[C=QIOR:kI2q%E&]Gka8pYLn?^!#jKhEDBlUMlbC]-4[[QeaXVVpK<8maEZ^OS_`+mE0kNmAB#0,Bra#%T;B.k)Fs5`V='Om[p8Y6^0@r@T\h?VSIk-gmnOjs,J<W+h)O8:aDN^#Ht>72G@%TpeiWobNU<8am0<@2Vfnh_k?Y]l^@S\eGMd]$%ma(?LDtidG?F]n24+H%q^s4_pI^&FkNAKq62;j:]hJUhPVniCO7'aHKOI]9fW+;g_)cG?<qM&=",/5:iSaUJFB@d;+o%E\'+@Ecb%fDs>P7lJ`$bE`T.H#[o`<`&o=pf<VO#7_LqeUa&Uj`TKr;5$/2DcXuN0\mD0pPYkr@4?W@";uZ^P49Q8Q$_]7l&bMTJ)kq=HC`3m%)&s`bq#.D2L4/9Pr8h9.n([=2i92eBK\d(B@`sXo3%6<=Lma5Z$8H"LG:9FrNQMPm0Oj.4Y#X")XudV&#-,L<MN5:nr38Pp7^@kQ%2QIq2((>V.0$?,]U]_0oi3=8;e7jQ&,B=pZ:)OY-LS3;X'"G9N2I1*">nD5o><<3$<a#efe-]E2Qdd841A0oL@_L!AQp,MIWE2am%j1l5F$>Wp:m#"C.rf3g]*AJhM$[Verq@ea'9d08&6:sJtF]km9C^uS<I`Fc@)K'e*1&$@FhUI7CeF$8o4Fr"Mjmo+uAle=:.IE"T%OG[.E>>C6=Gh=Ga/qVYX6h8^+Rj')SOc["W:e@]U,I*N9JI1R`A2S>#^7(gGF7JZ5JbA:Ro%g*)o.&U&jK=-fE9T[;rMF6!P^"+8%RQS=RJfFKUO)=/31Xoj"U!WNum&40k9D]5KI>X#bC9LnfCsn<<Ekb;F7u,U,GMD0To^;1X/ET)DcHc)oUkTV'>B0X2RbjULpE)+T%6M^>,jLNQ'F8';@]G8h"U,`UE=>s^5E4##XIRKh8HjB'<hMnTM:`+JF,l=CunC)&/iQUJd(f+>Rb*WZjLbI;Q7gANo<lh,*OjoGT%/^k"O`t$/t.]bh6Oq=<J[*Fcr'.g^.0husBAs:F4InY^I,57F<Aas(c%&O;?h!*]QgX81.-V9rc20B_WPiTrY5kDQ<esXH#'/cOL%<!Zt#h"NL8s1=1h"tVDABb&QCV-]&$"8,E[0=17%SiD<YkeL;!%EnBkqENT`Yef+l_ko7`M9D-F^LD5-7A2EAa&\a?6/%V55HJ%J%DWu+Kf-smL82,D`K$oCA[`/$)i@7Q&Q62Lr.9!P,KFWtbNH\hf4Os[6As4i90pG(J*F5d^KXc]o+I44i,PbXtdui5,;#l9L)=Z&%%bKOM"/dR4e6Q+Q+5Q<@>d,jtN%L)<YT;?H0,h;1t[/juFkrO=2*HD6as.LDtc0aJ=?maAO-un-p!Nkp3HT@'gY(t'5SjMo/e&'%6%096VY5`PkSna*N9RNcmU&aZo:4=hcY1e*.S-'u*rAZSS"1"YFm`d"13A7DA;Go=^gCH-#<\UK$Ho![&+f8D&8+i+'qifKYO@sVE@%b0W8J[lV?/6!.$trBO>^JYKkMTW_Dfj(?0%NTL&!2BDGXC@]\kDbAb.1q#)i-dr*<D09M:NpPMm#"(moB`#Nc5%UCng0QdWPFR&o%D4&#`*6@QTiP9/dM:gD,D08E^hu;$&NDTB&XBE.K0Q`[-"6@`pLD+1jnSh)hAuXr:L/`)&s/`V9b:-Al6P3&`:o)[qM/:VF1d>L7%G?#[Je6.`:Is$iP7lKp<kO[nF7r$mT5M-SK66BFBR4fFe_j/U)b7L7$AU'BS_um7Hl=>KeIrc/`4HVo\86D2I+NFF@&gP?c%$(B0%X=sZb*dT)81^5c*b7cYL!q*M8XjU"cn4H@C&5-e!&BR<OhIG\i')<_\mYC(Q-">]e(!f)VF5m8H;\@2'*$BP`F5hL+-ViNh+Kq6T%[:dO9"aA7tBZ/[<^pEE#lf-"$R?]!tqf7*mhDN52&GgN^q1o3bdAd5c>eF/r6_tN<E>g&p$cFYrOnKCj1#&M;;IQL@LhRS5@UfPX%aNB8m"-:,^6EJMq0ih22"`fD^OqC'sXXli<Xm@>^X#J%q=bbcd13<L;@b+765)WOn*KI<gF\VFN>R5-74O:()cctD8NF.ClS\'mQ%f-A9Os0t_g)Scf"hb8^om.J$SBL9pXf5&]erJM&DL[bMpjcE4&IaI.u-X.k)+OEY^o\&"-LCKTU*YoS!k\HE(+ejP*;41q1ZM@Gd%hfH]IPlNT#o*$89rj):?h@hfA#(Q'n!dmX`aRS,Lr_Ll!rI2%$7Xs_%*n/aiQh,@_S3i\9g_LIeah.f[d[<.=O)9Ul^s(OLgC[oM%hN)L]SOX_1a7dLWAZ*`Hm[[e/AFbneh;N6lYWK9n::\ksm_53]RD#-&2#=HsbW'ce:AG;gSpQ;PYQf]C"#E@REuuNnZF\&$cCgH9%<ZgLMKU=+HF6L2IjiGL$`o_W9f6IY-Q_,jALF'2+SaUQs&q7n[=D`h3VbstK*nqit(fQ$7Q6RX`4AL9+Ch_a=B*O/dc&"ppJX?lo%8#AS!/tK=sg[`4!X629Y6&_6!Ol%;4H5gK<KGYR.8%sXY8u8(m'qE//Pr6kZX4-OmZn3h'6gR"]f9so-`kKl`p@[)J1tq1;@TP0p%(5^CO.A,9?@UXWJ0$+bi+#&k$nqu)5HH2H7,%gUR,fB+?ds026Rd$*g7m3&O`0=El,TO'q8j@?=KVUdF)*L=Q80+*_@\RE#$3@E5%;9gR8&>Rq=;/e4TC_5*>kueJ2gZ8fPQh)F2&4OYtHea&_YtPL6e4b\CMqFhl<X_hh@TQrr#n`.`9sM"LJo:VE0)YFX[gU.Q[C_IS%QP\cGrY<$pN?>cJf6pG<M7[]^/qs$OhBhcB'YCa/O)10@qpFh(4]Xhto6ZnlZ@=O*h&b4lDRU5Onr.J(?H'N*Yugg??L5.12`^Td%'>9M+P3n9$]SjD,Z<u;@JD%,LoP+"/YhM0bVhhM%hGAB:BQ$#FM6o4?h/(dag$VH!%<)!Dp;XUh>^HS/Xg#LdmZ,uWOEY>SDqqr,%(]4)IeEp1B2tZfX&UhEBW9j695(%MmE?A)jh7+!%h3QiOhJQ]?dC?fYqZPa2d!a@1Y3A-3GB\0OgUdj*O8%J4NATSWl:/@(FFQHS%31@dJHlUDl85bJFF!NP3F#oJUUPU#5dF%<@,jK'#8$[7ocQal#Rd?0L*R/iTnW'2hUk2*T5>oK1!CUOF+9dmY*f*-nWX&)+)=;uO%7-8gr)3H'aJ4F.u#;?c.pAppTAps_3Ohi,i9P!u)E"`Dk!UrM9Du`1$?lXDge0,("'_TV"5=Jk!i)ESR*-dd98I+Ss[F>5<7Eotj%BMk6>E*Lh2#:fH`^&&;sd!u&RhnVA(SO&#A/WT]p/t.Tn$n@Kus2lh`If4dFat=AAdV8lRDtg^_#)6b4@^s:[P""utJ*A]7Er7Tj%c-KH?rlb?<Ish4>?iSZCs8C,JI(OhG^KnVOEF+(ch_/f<^\_=:h>4,MmI*ODEOGi6bJ3rF(Vft8S6kZf\3G)jOPfu?9[B(bB#&`,%\,#ORYe<0;puASS14&l.Lje3BHd/`Yj7ePtaMIk(8<"["r-^AH@sJ$fLje@Q.mN4kp#-!]qtH*@']\ZJ1![(S?c5/!pXPo-qlhf,%!c\.QStBKiII4?(nbXO(Oh\*uSDOQl<2&IArdAoP`VB<q/7S8HI1c@thq*A'mfQr_NJuol;./IDnb8/E38;@>MqCQ!^@?8n?]$#O%rVJ:7oFU'O"0GY"A,H!hlm%#;r#*81VgX%W*`@Cpn^j2Xp\Ei3oT?oUqU9oJD]\TNo9XrP<r4i7K:e8`*.eFWbMW6e`r#\g&Yc:Y%5QVHj$m*ZKd#\aW02?ueQbO`]7$'-njM1X9!T56@q)`rsq*.nTSLV-X8R!;pgiHHZ^Qdf59*)jBI(Pu\Ji\*01^=@misTR.ptBJg%Z5l2lE&-oT!VLQYW%%F'2l2^8G2Hd<8CWPq'Ff!OSL8W?D-_bQ)N+KF^Cu.gPt/t#/^7&``:9D-A2I6"\hiaN?QD8CWsp7>*i4aY%2QDo6J/eu'gaH&@67cL1[=$:`@:K<q1rPqGf.5Phe?DAM\ci#fYsR+\W*<9(*V<l'Ed5`XeaHckQ]Hf[V7m^#:""M/U<_:jVQ#/4%#@pgsUl!/SA=^MCGTk/t0,D1U>$B)F;aN(mOoC7dE0k^9ID'--MZ'i.gq*Zbs.7b%:e"%$JjM>[QXMX5LufrF$`^\:>>rJ=)1Z^I%;+&<7@".WWYikS%N!&4(.Xi??Ll&Tg`\8E<T$k%8]GlMHqg,akP`XG8'mBa)@*a$!OJ_/U^3=GDH_lmJIB3mrgb[O5#%H$iEd_e(%Yg(/\rhYt?mn''Am,@o7+QO$argqW-`Ss$e'Z:Ear*Q^Qe34#C+.ELEo+DAL2il[j`".mQ"#44U^\!!MApV3>,/P=hBgoM/Q&!Vk%Z9'9Fg,DsKenX*IF/8DX\bE+2TcnoU0*k8k_Y*Ms6FP+nfDU6!BS2W>fhCGAX_!<aIN5k_IIZp=XVcgJkA<G%CKVQdq;iFO#tP6`%!''(25Upfl2-asJ#mb!aC?<rC-6SRAY4(%6/ZGb3S1$Er,*^I[4L6bIC+qA)<#rmUNYdE@3B6/^S&)7GJ%-:oBI']ih[@`r!.Fe5%H[u@Sa3\OC/.KNE7Ohn^oJ(L^*D6L>3dJEr]/4h(Df""b/a4;I:#I#Y[feFcYoRc)]johV$QIoG^Ejn@I1%^`hDT\V!:2bUNQtB@%n-\ltd4o)tVT*gu)]e!+*:Uuig'^3lLHQ?VES\UTZ%mMDK0oP)]D#,S;G;l*3'#8!;ujkTNe7Kic1:=U"k<^[U[LEL\4i*OPK-7Q%fL!pa3,(JI,4:fW3,(IOJK[P[r?lI&'RC\`bWCpd\)F+F2VO@6!j-J)*@N9pDY*gP8*<_KI&P$s>N:%N_Jm&P9++24a%O-.$f`.^%40nJ+I7JHe]'m_c9D9J&m_&1#N?"@4XH=`+O#:rglENgm5?!WPk,;JCXZ=OiG\_KU&hhN(QS#J#lmaVGOe[el:#r84@MAS:.PA0Z%UTBG,odFTc90LGOfM]K!XGui5..cJL3Qh7Z@!7q[kKA(9q/Oh(?&psZO02!C[Cb`:8+$%p4X0DUg-D6S**o4.4H;$j,Tbk#"o?DL%s)lWejer.K:\S4o07Wd>s7k&=^\Pe9s5EqZrib4.qrt<anGAjWL]7$trhk8@j1kHjrc^Rpn*X!O8+PDajItt-^AQ5sg[@r<a3/i0%pqsl>cTf$uGUK!T_:\sIIZprd%Q,q20HD)58*p9Qr?TgXs7A+]jL58Z.Be8CEH*guj0oU"Wgo[Kpa1e+Uqs7o:d)jGd/p6`'LsMJ%,Os`N`+"f+]d@(-o&cV?Fh_X`Ne6YEr9IW6"i#^4q-/-M<fAkfT%6Ku:#Jr:mB50H7l#UQX49C6:g:l13)+Sr.o3qR`uk:=g:u=m%_>DRG(TQ>h#M!%klhAAAh'::i^QHAgG`/Gj2$M!TW1sb@&,'XB`GaGSVDbu#']moVl_"i/n#0c]P1i0@p0uP&Z0mlGZ%,flgF#5I%7r^ZD/DtDp0=/DpXEDKA=H*Tg=@euoEtpg!ANEZt*8VdZq9ZK(?%Rt58u+:S12,`fDE`&(V+?#.T/0Q4!Z'VOpR-/#r`+[ko@r1#%V`a9p[en;'N'"W%^^c/@\"Qk(H$PAqq`C\&@seO\pO1)i?@M^bn?d4^)dEgdG3Ia`$s+$$?ASRY&-(KG8Q?Z:eB%Z%)C!2Nb2Baj%CR*[L[G850Cp#sj=BZ$r4[5+g2=iTFMKs+mIr>b!+c6*u((sV:>]^#n)auO)0O[t.Qa)A/AX]]nNDTCY-J>!I0C@i\b=Wo#rLut;%N_VnW(%/>$d(Wm[Rm)Jjp\"jlpquQlE1JB*k't,F+.i!#s*rWV`kV(oJ*4T;lhg;B4PW$ncJs=urV-*%]^psPpV5c4j-+C'1SVYJ%6(>d106kue:\a_rqrRKpp](,Ml]guYJ%b="YQ)2KreE`9rp+M&oqt%RgOK+<bKKqYgV<XM^\mW2s52`6oZ&'QmN6rUhgbLngHYVp%+9(N6s7Fe?J,`lir7rHEqT&L*roqTjrkJL&08SC*nNVMKq%*Mi5Q:.:!=k4b+o~>%AI9_PrivateDataEnd
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: pullaiah.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Lisa Tauxe
%%CreationDate: 9/4/09
%%BoundingBox: 0 0 778 274
%%HiResBoundingBox: 0 0 777.4854 273.2676
%%CropBox: 0 0 777.4854 273.2676
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 48 8%%BeginData: 10534 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD05FF52F8A8FD0BFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD0FFFAFFD07FF%AFFFFFFFA8FFFFFFAFFFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FD0AFFA827277D52A87DFF7DA8A8A884A1A1A8A8A87DA8%A8A87DA2A8A87DA8A8A87DA87DA87DA8A1A87DA8A8A87DA8A8A87DA8A8A8%A1A87DA87DA8A8A87DA87DA8FFA87DA8A1A8A8A87DA8A8A17DA8A8A87DA8%A8A17DA8A8A87DA8A1A184A8A8A87DA8A8A884A8A1A87DA8A1A87DA8A8A8%7DA8A8A87DA8A8A87DFD0AFF527DFFFFFFA8A852A8FFFFFFCAFD05FFCAFF%FFFFCAFD07FFCAFD0FFFCAFFFFFFCAFD09FFA8FFA8FF7DA1FD06FFCAFD08%FFCAFD06FFCAFD15FFCAFD06FFA8A8FD0EFFA8A827A8FD04FFCAFD04FFCA%CAFFFFFFCAFD06FFCACAFFFFFFCACAFD09FFCACAFFFFCAFD08FFA8A8FFA8%A82727A8FD06FFCAFD07FFCACAFD06FFC4FD09FFCAFFFFFFCAFD05FFCAFF%CAFD05FFA8FD0CFFFD04A8FFFFA8FFA8FFAFCAA8FFA8FFA8CAAFFFA8CAA8%FFA8FFA8FFA8CAAFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFAFFFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA87DA8FFA8FFA8FFAFCAA1FFA8FFA8FFA8FFA1FFAF%FFA8FFAFCAA1FFA8FFA8FFA8FFA8CAA8FFA8CAA8FFA8FFAFCAA8CAAFFFA8%FFFFA8FFA87D7D52A8A8FFFFA8525227F8A87DFFFFCAA8FFA8FFA8CAA8FF%A8FFA1FFA8FFA1CAA8FFA8FFA8FFA1FFA8FFA8CAA8FFA8FFA8FFA8FFA8CA%A1FFA8CAA8FFA8FFA8FFA8FFA8A8FFA8A8FFFFCAA1FFA8FFA8FFA8CAA8FF%A8FFA8FFA8CAA1FFA8FFA8FFA8CAA8FFA8FFA8FFA8FFA8CAA8FFA8CAA8FF%A8FFA8CAA8FFA8FFA8FF7DFFA87D522727A8FFFFFF27527DA8A8A8FFFFCA%FD05FFCAFD05FFCAFFFFFFCAFD07FFCAFD11FFCAFD09FF7DFFA8FD04FFCA%FD07FFCAFD08FFCAFD06FFCAFD08FFCAFFFFFFCAFD0CFFA8FD04FFA8FFFF%7D7DA8FFA8FFFFFF7DFFFFFFA8FD05FFCAFFFFFFCACAFFFFFFCACAFD06FF%CAFD04FFA8FD09FFCAFFFFCACAFD07FFA8A8FFA8A8FFFFFFCACAFD06FFCA%CAFD07FFCAA8FD05FFCACAFD07FFCACAFFFFCACAFFFFFFA8FFCAFD05FF7D%FD07FFA827A8FD04FFA8A8FD04FFCAFD09FFCAFFFFFFCAFD07FFCAFD11FF%CAFD09FFA8FFA8FD05FFCAFD07FFCAFD08FFCAFD06FFCAFD07FFCAFFFFFF%CAFD05FFCAFD06FFA8FD07FF7D52A87D5252F87DA8FFFFFFCACAFD04FFCA%CAFD04FFCAFFFFFFCAFD07FFCAFFFFFFCACAFD08FFCAFFFFFFCAFD07FFA8%A8FFA8A8FD04FFCACAFD07FFC3FD07FFCACAFD06FFC4FD07FFCAFFFFCACA%FFFFFFCACACAFD05FFA8FD07FF7D27A827527D7DA8A8FD04FFCAFD05FFCA%FD04FFCAFD04FFCAFD06FFCAFD04FFCAFD09FFCAFD0BFF7DFF7DFD06FFCA%FD08FFCAFD07FFCACAFD05FFCACAFD0FFFCAFD06FFA8FFFFA8A852FFA87D%F8A8FFA8FFFFFF7DFD05A8A1AFFD04A8A1A8A8AFFD0BA8AFA1FD05A8A1AF%FD0AA8A1AFFD06A87DA8FFA87DFFA8A8A8AFA8A1FD07A8A1A1AFFD05A8AF%A1FD04A8AFA8A1FD05A8AFA2A8A8A8A1A8A8AEA8A8A1FD04A8FF7DFF7D52%52F8F852FF27FD05FFA8A8FD05FFCAFD05FFCAFD04FFCAFFFFFFCAFD07FF%CAFFFFFFCACAFD08FFCAFFFFFFCAFD07FFA8FFA1FD07FFCAFD08FFCACAFD%07FFCAFD05FFCACBFD06FFCAFFFFCACAFFFFFFCAFFCAFD04FFA8FFFFA8FF%A8A8FFA87DA8FFA852F8A8A1FD05FFCAFD05FFCAFD05FFCAFFFFFFCAFD06%FFCBCAFFFFFFCAFD09FFCAFFCAFD07FFA8A8FFA8A1FD07FFC3FD07FFCACA%FD08FFC4FD05FFCAFD06FFCACAFFCAFD05FFCAFD05FFA8FD07FFA8F8A827%525252A8A1CAFD05FFCAFD05FFCAFD04FFCAFFFFFFCACAFD0BFFCAFD07FF%CAFFFFFFCAFD07FF7DFFA8CAFD08FFCAFD07FFCACAFD08FFCAFD05FFCAFD%05FFCAFFFFFFCBFFFFFFCACAFD05FFA8FD07FFA852A85252FFFFFF7DCAFD%05FFCAA8FD04FFCACAFFFFFFCACAFFFFCACAFD06FFCAFD04FFCAFD08FFA8%FFCACAFD06FFA8A8FFA8A8CAFD07FFCAA8FD07FFA8CAFD08FFCAFD04FFCA%CAFD05FFCAFFCACAFD04FFCAFD05FF7DFD07FFA827A8FD05FFAFFD0DFFCA%FD04FFCAFFFFFFCAFD07FFCAFFFFFFCAFD0BFFCAFD07FFA8FFA8FFCAFD08%FFCAFD08FFCAFD08FFCACAFD0DFFCAFFFFFFCBFD06FFA8FD07FF7D527DFF%FFA87DA87DFFA1FFA8FFA8FFA1CAA8FFA8FFA1CAA8FFA8CAA1FFA8CAA1FF%A8FFA8FFA8CAA8FFA8CAA1FFA8FFA8FFA8FFA1FFA8CAA8FFA8FFA8FFA8A8%FFA8A8CAA1FFA8FFA8FFA8FFA8CAA8FFA8FFA8FFA8FFA1CAA8FFA8FFA8FF%A8C3A8FFA8FFA1CAA8FFA8FFA8CAA8CAA8FFA8CAA1CAA8FFA8FF7DFFA87D%52A87DA8FF7DFF527D2727A8A8A8CAA8FFA8FFA8FFA1FFA8FFA8FFA8FFA8%FFAFCAA8FFAFCAA8FFA8FFA8FFA8CAA8FFAECAA8FFA8FFA8FFAFCAA8FFA8%FFA8FFA8FFA8A87DFF7DA8FFCAA8FFA8FFA8FFA8FFA1CAAFFFA8FFA8FFA8%FFA8CAA8FFA8FFA8FFA8CAA8FFA8FFA1FFA8FFA8FFA8FFA8FFA8FFA8CAA8%FFA8FFFF7DFFA87D52277DA8A827A827277D7DFF7DFFCACAFD05FFCACAFD%04FFCACAFFFFFFCACAFFFFCACAFD06FFCAFFFFFFCAFD08FFCAFFCACAFD05%FFA8A8FFA8A8FFFFCACAFD07FFC3FD09FFCACAFD06FFCACAFFFFFFCACAFF%FFFFCACAFFFFCAFFFFFFC3FD05FF7DFFA8FFFFA8FFFFA852FD06FFA8FFFF%CAFD06FFCAFD05FFCAFD04FFCAFFFFFFCAFD07FFCAFFFFFFCAFD07FFCAFF%CAFD07FFA8FFA8FFFFFFCACAFD08FFCAFD09FFCAFD07FFCAFD04FFCAFD04%FFCAFD06FFCBCAFD04FFA8A8FD06FF7DF8A8FFFFFFA8FFA8FFFFFFCAFD05%FFCACAFD04FFCACAFD04FFCAFFFFFFCAFD05FFCACAFFFFFFCACAFD06FFCA%CAFFCAFD05FFA8A8FFA8A8FFFFFFCACBFD08FFC3FD09FFC3FD07FFC3FFFF%FFCAFD04FFCACAFFCAFFFFFFCAFD05FFA8FD07FF7D27FFA87D5227A8A8FD%04FFCAFD05FFCAFD05FFCAFD04FFCACAFFFFCACAFD05FFCAFFFFFFCAFD07%FFCAFD09FF7DFFA8FD05FFCAFD09FFCAFD09FFCAFD07FFCAFFFFFFCAFFFF%FFCAFD06FFCACAFD04FFA8FD07FFA8A8FF7DF8527DFF7DFD04FFCAFD06FF%CAFD05FFCAFD04FFCAFFFFFFCAFD06FFCAFFFFFFCAFD07FFCAFFCAFD05FF%A8A8FFA1A8FD05FFC3FD09FFC4FD09FFC3FD06FFCACAFFFFCACAFFFFFFCA%FFCAFFFFFFCAFD05FF7DFFFD05A8FFFF7DFFFFA8FFFFFFA1A8FFA8FFA8CA%A8FFA8FFA8CAA8FFA8FFA8CAA8FFA8FFA1CAA8FFA1CAA8FFA8FFA8CAA8FF%A8CAA8FFA8FFA8FFA8CAA8CAA8FFA8FFA8A8A8FFA1A1A8FFA8FFA8CAA1FF%A8FFA8FFA8FFA8CAA1FFA8FFA8FFA8FFA8FFA1CAA8FFA8FFA8CAA8FFA8CA%A8FFA8CAA8CAA8FFA8CAA8FFA8FFA8A8FFFF527DF8A8FF7DF8A8FD05FF7D%CAA8FFA8FFA1FFA8FFA8FFA8CAA8FFA8FFA8CAA8FFA8FFA1FFAEFFA1FFA8%FFA8FFA8CAA8FFA8CAA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FFA8A1CAA8%FFA8FFAFCAA8FFA8FFA8FFA8FFAFFFA1FFAFFFA8FFA8FFA8FFA1CAA8FFA8%FFA8CAAFFFA1FFA8FFA8CAA8CAA8FFA8CAA8FFA8FF7DFFFFA87DA8FFFFFF%52FFFFFFA852A8AFCAFD05FFCAFD05FFCACAFD04FFCAFD05FFCAFFFFFFCA%FD05FFCAFFFFFFCAFD0FFFA8FFA8FFCAFD06FFCACAFD09FFCAFD09FFCAFD%05FFCAFFFFFFCAFFFFFFCAFFCAFFFFCACAFD04FFA8A8FD06FF5252FF7D27%5252FF7DFFA1FD04FFCACAFD05FFA2FD05FFCAFD04FFCAA8FFFFCACAFD05%FFCAFFFFFFCAFD05FFA8FFCACBFD04FFA8A8FFA8A8FFC3FD06FFCACAFD09%FFA1CAFD08FFC3FD05FFA1FFFFCACAFFFFCAFFCACAFFA8CAFD04FF7DFD07%FF7D27FF7D277DFFFFA8FFFFCAFD04FFCAFD06FFCAFD05FFCAFD04FFCAFD%09FFCAFFFFFFCAFD06FFCAFFCAFD05FFA8FFA8FFFFFFCAFD06FFCAFD0AFF%CACBFD08FFCAFD05FFCAFFCAFFFFFFCAFFCAFFFFFFCAFD04FFA8A8FFA8A8%A8FFFFA827A8FD05FF7DFFA8CAA8FFA8FFA8CAA8FFA8FFA8CAA1FFA8FFA8%CAA1FFA8FFA1CAA8FFA1CAA8FFA8FFA8CAA8FFA1CAA8FFA8FFA8CAA8CAA8%FFA8FFA8A8FFA8A8FFA8CAA1FFA8FFA8FFA8A1A8FFA8FFA8FFA8FFA8FFA1%C4A8FFA8FFA8FFA8CAA1FFA8FFA8CAA8CAA1FFA8CAA8FFA8FFA2CAA8FFA8%FF7DFFA85227277DFFFF27FD05FFA8A8FFFFA8CAA8FFA8FFA8CAA8FFA8FF%A8CAA8FFA8FFAFCAA8FFA8FFA1FFAFFFA1FFA8FFA8FFA2FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8A8A8FFA8A8A8FFAFCAA1FFA8FFA8FFA8CAA8FFA8FF%A8FFA8FFA8FFA8CAA8FFA8FFA8FFAFCAA1FFA8FFA8CAAFCAA8FFA8CAA8CA%AFCAA1FFA8FFA8A8FFFF7DA87DFFFF7D27A87D525227FF7DFFFFFFCACAFD%04FFCAFD06FFCACAFD04FFCAFD04FFC4FFFFCACAFD05FFCAFFFFCACBFD04%FFCACAFD05FFA8A8FFA8A8FD04FFCACAFD06FFCACAFD0AFFCACAFD06FFCA%CAFFFFFFC4FFCACAFFFFCAFFCAFFFFCAFD04FF7DFD07FFA852FF52277DA8%A8A8FD04FFCAFD05FFC4FD06FFCAFD04FFCACAFD04FFCAFFFFCAFD05FFCA%FD0AFFCAFD05FF7DFFA8FD06FFCACAFD06FFCACAFD0AFFCBCAFD06FFCACA%FFFFFFCAFFCAFD07FFC3FD04FFA8FD07FF7D27A8FFA8FFFFFFA8FD05FFC4%FD05FFC3FD05FFCACAFD04FFCACAFFFFFFCACAFFCACAFD04FFCACAFFFFCA%FD05FFCAFFCAFFFFFFA8A8FFA8A8FD06FFCACAFD07FFC4FD0BFFC3FD06FF%CACAFFFFCAFFCACAFFCACACAFFFFCACAFFFFFFA8FD07FFA827FD06FFA8FD%06FFCAFD05FFCAFD05FFCACAFD04FFCAFD04FFCAFFFFCAFD05FFCAFD09FF%CAFD05FFA8FFA1CAFD07FFCACAFD07FFCAFD0BFFCAFD05FFCACAFFFFCAFF%FFCAFFFFCAFFCAFFCAFD04FFA8A8FD06FF2727A8A8527D27FF7DCAA8FFA8%FFA8CAA1FFA8FFAFCAA2FFA8FFA8FFA1CAA8FFA8FFA1FFA8FFA8CAAFFFA1%FFA8FFA8CAA8FFA8CAA8FFA8FFA8CAA8FFA8FFA8A8FFA8A1FD08FFCACAFD%07FFCACACAFD09FFC3CBFD04FFCACAFFFFCAFFCAFFFFFFCACAFFCAFD04FF%A8FFA87D527DA8FFFFA8FF52F852A8FF84A8CAA8FFA8FFA8CAA1FFA8FFA8%CAA8FFA8FFA8FFA1CAA8FFA8FFA1FFA8FFA1CAA8CAA1FFA8FFA8CAA8FFA8%CAA8FFA8CAA8CAA8FFA8A87DFF7DA8A1CAA8FFA8FFA8FFA8CAA1FFA8FFA8%FFA8FFA8CAA8FFA8FFA8FFA8FFA8FFA1CAA8FFA8FFA1CAA8CAA8CAA8FFA8%CAA8FFA1CAA8FFA87DFFA8272752527DFD04FFA8FFFFFFA8FFCAFD06FFCA%CAFD04FFCACAFD05FFC3FD05FFCAFFFFFFCAFFFFCBCAFFFFFFCACAFFFFCA%FD04FFCACAFFFFFFA8A8FFA8A8FFA1CAA8FFA8FFA8FFAFFFA1CAA8FFA8FF%A8FFA8CAA1CAA8FFA8FFA8FFA8FFA1CAA8FFA8FFA1FFA8CAA8CAA8FFA8CA%A8CAA8FFA8FF7DFFA8A8A8FFA8FD08FFA8A8FFFFCAFD06FFCAFD05FFCAFD%06FFCAFD09FFCAFD07FFCAFD0DFFA8FFA8FFFFFFCAFD09FFCAFD09FFCAFD%09FFCAFD05FFCAFFCAFD07FFCAFD04FFA8FD0AFFA87D5252FFA8FD35FFA8%A8FFA8A8FD35FF7DFD0AFF5227277DFFA8A8FFA8FFA8A8A8FFA8FFA8FFA8%FFA8A8A8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8%FFA8A8A8FFA8FFA8FFA8A8A8FFA8A8A8FFA8FFA8FFA8A8A8FFA8FFA8FFA8%A8A8FFA8FFA8A8A8AFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%A8A8FFA8FFFD04A8FD0AFFA87DFFFFFFFD05A8FF27272752A8A8A8FFA87D%F827277DA8FFA8A8A852F82727FD04A8FFA827F82752FFA8FFA8FF27F827%277DFFFD04A82752277DFD04A87D7D52FD04A8FF7D7D527DA8A8A8FFFD04%7DA8A8A8FFA87D7D7DA8A8A8FF7D52527DA8A8A8FFA8FD047DA8A8FFA87D%52A8A8FD13FF7D27527DFD05FFA8525252A8FD05FF7D52277DFD06FF5252%52A8FD05FF7D277D52FD06FF5252277DFD04FF52F827A8FD04FF5227F852%FD04FF52F85227FD04FFA8F85227FD04FFA8F827F8FD04FFA8F827277DFD%04FF5227277DFD13FFA8FD1FFFA8FD07FFA8FD09FFA8FD05FF7D7D7DFD05%FF7DA87DA8FD04FF7DA87DA8FD04FFA8A87DA8FD04FFA87D7D7DA8FFFFFF%A87D7DA8A8FFFFFFA8A87D7DA8FD1CFF7DA8FD0DFF7D7DA8A8FD26FFA87D%FD0DFF7DA87DFD35FF7D52FD0527525227275252277D5252527DFD26FF7D%5227275252277D2727275252277D7D277D52FD34FFA8A8527D277D52A8FD%047DA87D7DA8A87D7DFD27FFA87D527D527D7DA87D7D7DA87DA87DFF7D7D%FD43FFA8FD58FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2008-11-18T21:56:49-08:00</xmp:MetadataDate>
         <xmp:CreatorTool>Adobe Illustrator CS3</xmp:CreatorTool>
         <xmp:ModifyDate>2008-11-18T21:56:49-08:00</xmp:ModifyDate>
         <xmp:CreateDate>2007-01-03T04:26:58Z</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>92</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAXAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9Fee7fzhP5Yuo/J08Nt5&#xA;h5wtZy3RHoDjMjSCSqS1VowwNBXwIxVhOgfkxcXHmXSPO3mzVJ7nzVpxc+lCYPq/HlIsQdlgiZ3E&#xA;DIrsONSDtQ4qu1Hz7rtnrHlTTG+vudfis5rm/WGAWnK7b0zbwOYX/ex7zlWJ/dKep3CrPJ9G1ZkP&#xA;o67do5IoWjs2UCort9XHbpvikLbTTtSnto5W1q9RyKSJxsjxcbOtfq2/FgRgBsMskOGRC2HTtUa6&#xA;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&#xA;un2/j+3T9vFWY4q7FXYq7FXYq7FXYq//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1190.550781</stDim:w>
            <stDim:h>841.889648</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ComicSansMS</stFnt:fontName>
                  <stFnt:fontFamily>Comic Sans MS</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.00x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Comic Sans MS.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>uuid:762777174EB7DD11BDEBDDF27A4FF9B9</xmpMM:InstanceID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -273.268 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 273.268 li
777.485 273.268 li
777.485 0 li
cp
clp
[1 0 0 1 0 0 ]ct
false sop
/0 
[/DeviceCMYK] /CSA add_res
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: ComicSansMS Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /ComicSansMS def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 48 /zero putdup 49 /one putdup 115 /s putdef/FontBBox {-93 -312 1187 1102} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings5 dict dup begin/.notdef <1C60D8A8C9B7A73DB6F0B6FAFA7BF3C28FD0A21D0FB70854A4518CFB8D731A1977C1C08A> |-/space <1C60D8A8C9B84186EC> |-/zero <1C60D8A8C9B7D98F6DA0BC0D56993DFD731859E73082C2D7636333544D763DC27197575AA0521EF215B0E83E609598D159BBB4BC56CDE2CDE3149C3DB2DB921DD2B021218A530AC8F4FD6B7D0FBB9FC522AE09EAE356903AFB4F0709B48EB18E9FA0317579E49D7B062061DF3902491F8FAAFB0B6154A16F4A168AFC4E808A4715BB30BACE27> |-/one <1C60D8A8C9B77914873F98803C60EEF5E4A6DBE96AE9B81EFF493D2F1AA3FEEAA37FD443D04034D23BA9D609D2C8CD762F92B8820610EEE88821C53021C3E08017ADDCC0C56E5E2D7504080ABC696FC4B2BC78B7B384642545B6D2D0F5C638D5E5DAF1603C704B0CBDC68673A92C16CF8AB7E549BF3031EC2B504C05A0AE024AB48F99F68753D2CFADD79C925954659602A92A0F92089F7F8763F72499600C23C55121FDAC89B86D3B6C51F53AFAF0B4EDB2432FF0B89CC30A4C8DD2B8E7547AC479FCA4589851D61C952B27> |-/s <1C60D8A8C9B7544E0B2F4A61F93D1126BE4C1AB23A9BC15E8D4F67C7217D859EAD9231FE71D3434A8F690FE356BFC6DC5BE77A03DE604D8B1C950D5ABF263BD11471F4641C413AA949D9FA9D14073F73C97069B262302E724A697D3CA7C59E77556DAF46750C504A58130B4D898FE3BF71EC7F017C1E1F27AB7041A63DDE724A2C84E3A413C54A5DDF57F8C9D27A1E3CFE7B403B1328B029B85307F57108ADCCE743F949020583B39DD4E46122F513D45ADF2471EB3FC18875B6CA7F87645D6D9F43435BEAAB1F189966F0EC695829B6348DF5F29560E30CB97F829CCD3E61BBBAB11852283FEDA3181F7D> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/COSIAA+ComicSansMS /ComicSansMS findfont ct_VMDictPut/COSIAA+ComicSansMS*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one 65{/.notdef}rp /s 140{/.notdef}rp]COSIAA+ComicSansMS nfCOSIAA+ComicSansMS*1 [12 0 0 -12 0 0 ]msf743.892 216.587 mo(100 s)sh%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginCOSIAA+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/r <1C60D8A8C9B75BE51651FFE67439D51A25F90110BB907676984B99DD0B35C7709F13E9D884F7A5E4D5DC6EAC702AA1CA7DD0308EC3E47EA3A772341F5B614E58D6E83BA0E5BB48DBDD3ED30A643443B6748E7F94653D8C84439C4E79874BBAE5D54AF00F5DBBDC68AB601F5B54A0C720942814BB32E87436> |-/y <1C60D8A8C9B7B202A5830BCB89572D4CAA1828530B4C7A43C892E79126B4E916330B53C34B415984C412BF2B91501F199A00E0EEB36801E5C6C4B96A328630D8109B95A2744C5BE5BF5BFE00A713EDACDB62A7B27EF5D0BAA40EA7DBB9CA276B4EBCB844D20A4804349C4F910157B64CA0E9CA2D8701B2B253A960994A4F888E6CC95DBACCD8EA343526343BDED882> |-systemdict /gcheck known {setglobal} if end {end} ifendCOSIAA+ComicSansMS /Encoding getdup 114 /r putdup 121 /y putpop%ADOEndSubsetFont
/COSIAA+ComicSansMS*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one 64{/.notdef}rp /r /s 5{/.notdef}rp /y 134{/.notdef}rp]COSIAA+ComicSansMS nfCOSIAA+ComicSansMS*1 [12 0 0 -12 0 0 ]msf746.892 145.587 mo(1 yr)sh%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginCOSIAA+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/h <1C60D8A8C9B7F942331D263A3CFBA3B9EBF03F980E00D0F1D27326C82FFD201AECBD022977AA1E0D941B50CF40E2252C13449F1B526768F4FF8F3B35D635BA79049C632C8D93F40FA3D65B4919DC249999AF595543B05BB9E3D553D6A4D06BC3071066915C6AADEE1777A88F11E51EFD7CACCB4548865877FDF6CCFA4354CAC26FDBD4DD9BCB32241000DBC1885716260CE6C2F8CA8BFCAD463770D7B8A9C86F4DCBF5E02D8934AC4CA9D3F2ADF013F9C85E9FCF15B65F105FF737947A93A60146633ED9F20D919596A73A57C422CA8CB2588E395D294B3A8FDF5162BB0F2955418BC69D1C2B1DA52DCF8528385D883EFC6D36000E> |-systemdict /gcheck known {setglobal} if end {end} ifendCOSIAA+ComicSansMS /Encoding getdup 104 /h putpop%ADOEndSubsetFont
/COSIAA+ComicSansMS*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one 54{/.notdef}rp /h 9{/.notdef}rp /r /s 5{/.notdef}rp /y 134{/.notdef}rp]COSIAA+ComicSansMS nfCOSIAA+ComicSansMS*1 [12 0 0 -12 0 0 ]msf746.892 175.587 mo(1 hr)sh%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginCOSIAA+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/k <1C60D8A8C9B79FB0CD2D15CCEE966971362480E076054D31ADCAF7E9F9F429FFD0CF01AA7CF905D805D459A957952A6433C717D3DF98496956EEFCBE7CB2071C1548FC4AF7BD4FCC74BB534AEF2490DA91066817385D9BCBBE532A553A0267B13BB5470B056EAC6D26F7C5431C70EF1A001381C519F5B194B713D0ABB930F60C7A1F1DC4E4C4C27F560891CC59E5DE021B95C16C1051516431F1B4BA1506B514B58751DBFE2338BA583FD6260A3D3AE4F4D9DEFF8CD6EDF3556A634AAC67ADBD21C4181A2CF1384C15227940E5484D672B2F939548604FAB3574BBFE207E05B5378DDFC53001398B55> |-systemdict /gcheck known {setglobal} if end {end} ifendCOSIAA+ComicSansMS /Encoding getdup 107 /k putpop%ADOEndSubsetFont
/COSIAA+ComicSansMS*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one 54{/.notdef}rp /h 2{/.notdef}rp /k 6{/.notdef}rp /r /s 5{/.notdef}rp /y 134{/.notdef}rp]COSIAA+ComicSansMS nfCOSIAA+ComicSansMS*1 [12 0 0 -12 0 0 ]msf744.892 108.587 mo(1 kyr)sh%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginCOSIAA+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/M <1C60D8A8C9B59575D87BE2168EEA28120D9030AFF41D7AF515ACBF3649BD2F40DE0809DEF2C3B0D88F5433D0339D1594A8BB5B7D6E9E407C9B2CF774E827F6D240DA9788FD58FD6A6693D238D2DD35EBAD61FA6DA2B1B88D98FCBA1CE329DEEDC1A2CF7DB3CFF85E91DB1E05982789211A03C97DDC1A73F165FD37FA7D660E3EF66841B5442F7DA5B28127C6557F4AF9EAE68C31E263F78BC4FE967BBD3724E8E4E7783BD6F3F0D1F9D36FC073BBDC3BB91498E2940FACB05B3E1AAE653273D1E1C1DE5C399F68768F7EC53985E7DF8ED50093CF6E6C7AD007BBE64BE70B06C3BE97174E50F93FE7A1F609DE48AB13B0AFA023A5454E929FDB> |-systemdict /gcheck known {setglobal} if end {end} ifendCOSIAA+ComicSansMS /Encoding getdup 77 /M putpop%ADOEndSubsetFont
/COSIAA+ComicSansMS*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one 27{/.notdef}rp /M 26{/.notdef}rp /h 2{/.notdef}rp /k 6{/.notdef}rp /r /s 5{/.notdef}rp /y 134{/.notdef}rp]COSIAA+ComicSansMS nfCOSIAA+ComicSansMS*1 [12 0 0 -12 0 0 ]msf745.892 70.5869 mo(1 Myr)sh%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginCOSIAA+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/G <1C60D8A8C9B65DE77AFD4F51F81ED3EBD4A285F80C2B83CE74B44388C826A0F4CB7FC7408B35179849A78CC02526B9D5979B48BCE15D3D20F91BDEB5A83C5165D3585DED34BE4F3DD7F360671E644A7D3B726A44668D72A0DE5FAD07877D976EBC61FA78717E09209379330FABECF1A48284F21529C32DEC3DCF052014289C8DEDFCBB389098F2BAEAEB130101E28A62154C896A369780E7DB77BB705D60BB395C0CD45958B98E7F072EBDFB9AFA88F235BB7769C939DAA7CD343559031E247AB7910389A05A77014AB5031A027F3F729FA83E9DA927C662BBE5F5A3C38A> |-systemdict /gcheck known {setglobal} if end {end} ifendCOSIAA+ComicSansMS /Encoding getdup 71 /G putpop%ADOEndSubsetFont
/COSIAA+ComicSansMS*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one 21{/.notdef}rp /G 5{/.notdef}rp /M 26{/.notdef}rp /h 2{/.notdef}rp /k 6{/.notdef}rp /r /s 5{/.notdef}rp /y 134{/.notdef}rp]COSIAA+ComicSansMS nfCOSIAA+ComicSansMS*1 [12 0 0 -12 0 0 ]msf745.892 32.5869 mo(1 Gyr)sh398.667 237.896 mo
398.667 8.93506 li
733.468 8.93506 li
733.468 237.896 li
398.667 237.896 li
cp
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
1 lw
2 lc
0 lj
4 ml
[] 0 dsh
true sadj
398.667 237.896 mo
398.667 8.93506 li
733.468 8.93506 li
733.468 237.896 li
398.667 237.896 li
cp
.75021 .679683 .670222 .90164 cmyk
@
399.163 199.597 mo
399.659 200.126 li
400.155 200.653 li
400.651 201.179 li
401.147 201.702 li
401.644 202.224 li
402.14 202.743 li
402.636 203.261 li
403.132 203.774 li
403.628 204.288 li
404.124 204.798 li
404.62 205.306 li
405.116 205.813 li
405.611 206.317 li
406.107 206.819 li
406.604 207.319 li
407.1 207.817 li
407.596 208.312 li
408.091 208.806 li
408.587 209.298 li
409.083 209.786 li
409.579 210.272 li
410.075 210.759 li
410.571 211.241 li
411.067 211.722 li
411.563 212.2 li
412.06 212.677 li
412.556 213.151 li
413.052 213.624 li
413.548 214.093 li
414.044 214.562 li
414.54 215.026 li
415.036 215.491 li
415.531 215.952 li
416.027 216.411 li
416.523 216.87 li
417.02 217.325 li
417.516 217.778 li
418.012 218.228 li
418.507 218.677 li
419.003 219.124 li
419.499 219.569 li
419.995 220.011 li
420.491 220.452 li
420.987 220.89 li
421.483 221.325 li
421.979 221.759 li
422.476 222.19 li
422.972 222.622 li
423.468 223.048 li
423.964 223.474 li
424.46 223.897 li
424.956 224.319 li
425.452 224.737 li
425.947 225.155 li
3.0518e-05 .993988 1 3.0518e-05 cmyk
@
399.163 136.366 mo
399.659 137.1 li
400.155 137.83 li
400.651 138.558 li
401.147 139.282 li
401.644 140.005 li
402.14 140.724 li
402.636 141.438 li
403.132 142.151 li
403.628 142.861 li
404.124 143.568 li
404.62 144.272 li
405.116 144.974 li
405.611 145.671 li
406.107 146.366 li
406.604 147.059 li
407.1 147.749 li
407.596 148.435 li
408.091 149.118 li
408.587 149.798 li
409.083 150.476 li
409.579 151.149 li
410.075 151.821 li
410.571 152.489 li
411.067 153.155 li
411.563 153.817 li
412.06 154.478 li
412.556 155.134 li
413.052 155.788 li
413.548 156.438 li
414.044 157.087 li
414.54 157.731 li
415.036 158.374 li
415.531 159.013 li
416.027 159.649 li
416.523 160.282 li
417.02 160.913 li
417.516 161.54 li
418.012 162.165 li
418.507 162.786 li
419.003 163.405 li
419.499 164.021 li
419.995 164.632 li
420.491 165.243 li
420.987 165.849 li
421.483 166.452 li
421.979 167.054 li
422.476 167.651 li
422.972 168.247 li
423.468 168.839 li
423.964 169.429 li
424.46 170.015 li
424.956 170.597 li
425.452 171.177 li
425.947 171.755 li
426.443 172.329 li
426.939 172.901 li
427.436 173.47 li
427.932 174.036 li
428.427 174.599 li
428.923 175.157 li
429.419 175.714 li
429.915 176.269 li
430.411 176.819 li
430.907 177.368 li
431.403 177.913 li
431.899 178.456 li
432.396 178.995 li
432.892 179.532 li
433.388 180.065 li
433.884 180.597 li
434.38 181.124 li
434.876 181.649 li
435.372 182.173 li
435.868 182.692 li
436.363 183.21 li
436.859 183.726 li
437.355 184.237 li
437.852 184.747 li
438.348 185.253 li
438.843 185.757 li
439.339 186.259 li
439.835 186.757 li
440.331 187.253 li
440.827 187.747 li
441.323 188.239 li
441.819 188.728 li
442.315 189.214 li
442.812 189.696 li
443.308 190.179 li
443.804 190.657 li
444.3 191.134 li
444.796 191.608 li
445.292 192.079 li
445.788 192.548 li
446.284 193.015 li
446.779 193.479 li
447.275 193.94 li
447.771 194.401 li
448.268 194.858 li
448.764 195.313 li
449.259 195.765 li
449.755 196.216 li
450.251 196.663 li
450.747 197.11 li
451.243 197.554 li
451.739 197.995 li
452.235 198.435 li
452.731 198.87 li
453.228 199.306 li
453.724 199.737 li
454.22 200.169 li
454.716 200.597 li
455.212 201.022 li
455.708 201.446 li
456.204 201.868 li
456.7 202.288 li
457.195 202.706 li
457.691 203.12 li
458.188 203.534 li
458.684 203.946 li
459.18 204.354 li
459.675 204.763 li
460.171 205.167 li
460.667 205.569 li
461.163 205.972 li
461.659 206.37 li
462.155 206.769 li
462.651 207.163 li
463.147 207.556 li
463.644 207.946 li
464.14 208.337 li
464.636 208.724 li
465.132 209.108 li
465.628 209.493 li
466.124 209.874 li
466.62 210.253 li
467.116 210.632 li
467.611 211.007 li
468.107 211.382 li
468.604 211.753 li
469.1 212.124 li
469.596 212.491 li
470.091 212.858 li
470.587 213.224 li
471.083 213.587 li
471.579 213.948 li
472.075 214.308 li
472.571 214.665 li
473.067 215.021 li
473.563 215.374 li
474.06 215.726 li
474.556 216.077 li
475.052 216.425 li
475.548 216.772 li
476.044 217.118 li
476.54 217.462 li
477.036 217.804 li
477.531 218.144 li
478.027 218.481 li
478.523 218.817 li
479.02 219.153 li
479.516 219.487 li
480.011 219.817 li
480.507 220.147 li
481.003 220.476 li
481.499 220.804 li
481.995 221.128 li
482.491 221.452 li
482.987 221.772 li
483.483 222.093 li
483.979 222.413 li
484.476 222.729 li
484.972 223.044 li
485.468 223.358 li
485.964 223.671 li
486.46 223.981 li
486.956 224.29 li
487.452 224.599 li
487.947 224.905 li
488.443 225.21 li
@
399.163 73.1357 mo
399.659 74.0732 li
400.155 75.0068 li
400.651 75.9365 li
401.147 76.8623 li
401.644 77.7847 li
402.14 78.7031 li
402.636 79.6177 li
403.132 80.5288 li
403.628 81.4355 li
404.124 82.3389 li
404.62 83.2383 li
405.116 84.1343 li
405.611 85.0264 li
406.107 85.9141 li
406.604 86.7988 li
407.1 87.6792 li
407.596 88.5562 li
408.091 89.4292 li
408.587 90.2988 li
409.083 91.1641 li
409.579 92.0259 li
410.075 92.8838 li
410.571 93.7383 li
411.067 94.5889 li
411.563 95.4355 li
412.06 96.2783 li
412.556 97.1177 li
413.052 97.9531 li
413.548 98.7847 li
414.044 99.6123 li
414.54 100.437 li
415.036 101.257 li
415.531 102.074 li
416.027 102.887 li
416.523 103.695 li
417.02 104.501 li
417.516 105.303 li
418.012 106.101 li
418.507 106.895 li
419.003 107.685 li
419.499 108.471 li
419.995 109.254 li
420.491 110.033 li
420.987 110.809 li
421.483 111.58 li
421.979 112.348 li
422.476 113.112 li
422.972 113.872 li
423.468 114.628 li
423.964 115.381 li
424.46 116.13 li
424.956 116.876 li
425.452 117.617 li
425.947 118.354 li
426.443 119.089 li
426.939 119.819 li
427.436 120.546 li
427.932 121.269 li
428.427 121.987 li
428.923 122.703 li
429.419 123.415 li
429.915 124.122 li
430.411 124.826 li
430.907 125.526 li
431.403 126.224 li
431.899 126.916 li
432.396 127.605 li
432.892 128.292 li
433.388 128.974 li
433.884 129.651 li
434.38 130.327 li
434.876 130.999 li
435.372 131.667 li
435.868 132.331 li
436.363 132.992 li
436.859 133.649 li
437.355 134.304 li
437.852 134.954 li
438.348 135.603 li
438.843 136.246 li
439.339 136.887 li
439.835 137.524 li
440.331 138.159 li
440.827 138.79 li
441.323 139.417 li
441.819 140.042 li
442.315 140.663 li
442.812 141.281 li
443.308 141.896 li
443.804 142.508 li
444.3 143.116 li
444.796 143.722 li
445.292 144.324 li
445.788 144.924 li
446.284 145.521 li
446.779 146.113 li
447.275 146.704 li
447.771 147.292 li
448.268 147.876 li
448.764 148.456 li
449.259 149.036 li
449.755 149.61 li
450.251 150.183 li
450.747 150.753 li
451.243 151.319 li
451.739 151.884 li
452.235 152.444 li
452.731 153.003 li
453.228 153.558 li
453.724 154.11 li
454.22 154.661 li
454.716 155.208 li
455.212 155.753 li
455.708 156.294 li
456.204 156.833 li
456.7 157.37 li
457.195 157.903 li
457.691 158.435 li
458.188 158.962 li
458.684 159.487 li
459.18 160.011 li
459.675 160.53 li
460.171 161.048 li
460.667 161.563 li
461.163 162.075 li
461.659 162.587 li
462.155 163.093 li
462.651 163.599 li
463.147 164.101 li
463.644 164.601 li
464.14 165.099 li
464.636 165.593 li
465.132 166.085 li
465.628 166.575 li
466.124 167.063 li
466.62 167.548 li
467.116 168.03 li
467.611 168.511 li
468.107 168.989 li
468.604 169.464 li
469.1 169.937 li
469.596 170.407 li
470.091 170.876 li
470.587 171.343 li
471.083 171.806 li
471.579 172.269 li
472.075 172.728 li
472.571 173.185 li
473.067 173.638 li
473.563 174.091 li
474.06 174.54 li
474.556 174.989 li
475.052 175.435 li
475.548 175.878 li
476.044 176.319 li
476.54 176.757 li
477.036 177.194 li
477.531 177.628 li
478.027 178.062 li
478.523 178.491 li
479.02 178.919 li
479.516 179.345 li
480.011 179.769 li
480.507 180.19 li
481.003 180.61 li
481.499 181.028 li
481.995 181.442 li
482.491 181.856 li
482.987 182.267 li
483.483 182.677 li
483.979 183.083 li
484.476 183.489 li
484.972 183.892 li
485.468 184.292 li
485.964 184.692 li
486.46 185.089 li
486.956 185.483 li
487.452 185.878 li
487.947 186.269 li
488.443 186.657 li
488.939 187.046 li
489.436 187.431 li
489.932 187.815 li
490.427 188.196 li
490.923 188.577 li
491.419 188.956 li
491.915 189.333 li
492.411 189.708 li
492.907 190.081 li
493.403 190.454 li
493.899 190.823 li
494.396 191.192 li
494.892 191.56 li
495.388 191.925 li
495.884 192.288 li
496.38 192.651 li
496.876 193.011 li
497.372 193.37 li
497.868 193.728 li
498.363 194.085 li
498.859 194.438 li
499.355 194.792 li
499.852 195.144 li
500.348 195.495 li
500.843 195.843 li
501.339 196.19 li
501.835 196.536 li
502.331 196.882 li
502.827 197.226 li
503.323 197.567 li
503.819 197.909 li
504.315 198.249 li
504.812 198.587 li
505.308 198.925 li
505.804 199.261 li
506.3 199.595 li
506.796 199.929 li
507.292 200.261 li
507.788 200.591 li
508.284 200.921 li
508.779 201.251 li
509.275 201.579 li
509.771 201.905 li
510.268 202.231 li
510.764 202.556 li
511.259 202.878 li
511.755 203.2 li
512.251 203.522 li
512.747 203.843 li
513.243 204.161 li
513.739 204.479 li
514.235 204.798 li
514.731 205.114 li
515.228 205.429 li
515.724 205.743 li
516.22 206.058 li
516.716 206.37 li
517.212 206.681 li
517.708 206.991 li
518.204 207.302 li
518.7 207.61 li
519.195 207.919 li
519.691 208.226 li
520.188 208.532 li
520.684 208.839 li
521.18 209.144 li
521.675 209.448 li
522.171 209.751 li
522.667 210.054 li
523.163 210.356 li
523.659 210.657 li
524.155 210.958 li
524.651 211.257 li
525.147 211.556 li
525.644 211.854 li
526.14 212.151 li
526.636 212.45 li
527.132 212.745 li
527.628 213.042 li
528.124 213.337 li
528.62 213.63 li
529.116 213.925 li
529.611 214.218 li
530.107 214.511 li
530.604 214.802 li
531.1 215.095 li
531.596 215.386 li
532.091 215.675 li
532.587 215.966 li
533.083 216.255 li
533.579 216.544 li
534.075 216.831 li
534.571 217.12 li
535.067 217.407 li
535.563 217.694 li
536.06 217.979 li
536.556 218.267 li
537.052 218.552 li
537.548 218.837 li
538.044 219.12 li
538.54 219.405 li
539.036 219.688 li
539.531 219.972 li
540.027 220.255 li
540.523 220.538 li
541.02 220.819 li
541.516 221.103 li
542.011 221.384 li
542.507 221.665 li
543.003 221.946 li
543.499 222.226 li
543.995 222.507 li
544.491 222.786 li
544.987 223.065 li
545.483 223.345 li
545.979 223.624 li
546.476 223.903 li
546.972 224.181 li
547.468 224.46 li
547.964 224.737 li
548.46 225.015 li
@
415.036 9.87012 mo
415.531 10.9707 li
416.027 12.0664 li
416.523 13.1567 li
417.02 14.2422 li
417.516 15.3228 li
418.012 16.3979 li
418.507 17.4683 li
419.003 18.5337 li
419.499 19.5938 li
419.995 20.6489 li
420.491 21.6987 li
420.987 22.7437 li
421.483 23.7837 li
421.979 24.8184 li
422.476 25.8481 li
422.972 26.873 li
423.468 27.8926 li
423.964 28.9072 li
424.46 29.917 li
424.956 30.9214 li
425.452 31.9209 li
425.947 32.915 li
426.443 33.9043 li
426.939 34.8887 li
427.436 35.8682 li
427.932 36.8423 li
428.427 37.8115 li
428.923 38.7754 li
429.419 39.7344 li
429.915 40.6885 li
430.411 41.6377 li
430.907 42.5815 li
431.403 43.5205 li
431.899 44.4541 li
432.396 45.3833 li
432.892 46.3076 li
433.388 47.2271 li
433.884 48.1416 li
434.38 49.0513 li
434.876 49.9565 li
435.372 50.8569 li
435.868 51.7524 li
436.363 52.6436 li
436.859 53.5298 li
437.355 54.4116 li
437.852 55.2886 li
438.348 56.1611 li
438.843 57.0293 li
439.339 57.8931 li
439.835 58.7524 li
440.331 59.6069 li
440.827 60.4575 li
441.323 61.3037 li
441.819 62.145 li
442.315 62.9824 li
442.812 63.8154 li
443.308 64.6445 li
443.804 65.4688 li
444.3 66.2891 li
444.796 67.1055 li
445.292 67.9175 li
445.788 68.7251 li
446.284 69.5288 li
446.779 70.3286 li
447.275 71.124 li
447.771 71.916 li
448.268 72.7031 li
448.764 73.4868 li
449.259 74.2666 li
449.755 75.042 li
450.251 75.814 li
450.747 76.5815 li
451.243 77.3457 li
451.739 78.1055 li
452.235 78.8618 li
452.731 79.6143 li
453.228 80.3633 li
453.724 81.1079 li
454.22 81.8491 li
454.716 82.5864 li
455.212 83.3203 li
455.708 84.0503 li
456.204 84.7764 li
456.7 85.4995 li
457.195 86.2188 li
457.691 86.9341 li
458.188 87.646 li
458.684 88.3545 li
459.18 89.0591 li
459.675 89.7603 li
460.171 90.458 li
460.667 91.1523 li
461.163 91.8433 li
461.659 92.5308 li
462.155 93.2144 li
462.651 93.895 li
463.147 94.5723 li
463.644 95.2461 li
464.14 95.9165 li
464.636 96.5835 li
465.132 97.2471 li
465.628 97.9072 li
466.124 98.5645 li
466.62 99.2183 li
467.116 99.8691 li
467.611 100.516 li
468.107 101.16 li
468.604 101.801 li
469.1 102.439 li
469.596 103.073 li
470.091 103.705 li
470.587 104.333 li
471.083 104.958 li
471.579 105.58 li
472.075 106.199 li
472.571 106.814 li
473.067 107.427 li
473.563 108.037 li
474.06 108.644 li
474.556 109.247 li
475.052 109.848 li
475.548 110.445 li
476.044 111.04 li
476.54 111.631 li
477.036 112.22 li
477.531 112.806 li
478.027 113.389 li
478.523 113.968 li
479.02 114.545 li
479.516 115.119 li
480.011 115.69 li
480.507 116.259 li
481.003 116.824 li
481.499 117.387 li
481.995 117.946 li
482.491 118.504 li
482.987 119.058 li
483.483 119.609 li
483.979 120.158 li
484.476 120.704 li
484.972 121.247 li
485.468 121.788 li
485.964 122.325 li
486.46 122.86 li
486.956 123.394 li
487.452 123.923 li
487.947 124.45 li
488.443 124.976 li
488.939 125.497 li
489.436 126.018 li
489.932 126.534 li
490.427 127.05 li
490.923 127.563 li
491.419 128.073 li
491.915 128.581 li
492.411 129.087 li
492.907 129.59 li
493.403 130.091 li
493.899 130.59 li
494.396 131.087 li
494.892 131.581 li
495.388 132.073 li
495.884 132.563 li
496.38 133.052 li
496.876 133.538 li
497.372 134.022 li
497.868 134.505 li
498.363 134.984 li
498.859 135.462 li
499.355 135.938 li
499.852 136.413 li
500.348 136.885 li
500.843 137.355 li
501.339 137.823 li
501.835 138.29 li
502.331 138.755 li
502.827 139.219 li
503.323 139.68 li
503.819 140.14 li
504.315 140.597 li
504.812 141.054 li
505.308 141.508 li
505.804 141.961 li
506.3 142.411 li
506.796 142.861 li
507.292 143.31 li
507.788 143.756 li
508.284 144.2 li
508.779 144.644 li
509.275 145.085 li
509.771 145.526 li
510.268 145.964 li
510.764 146.401 li
511.259 146.838 li
511.755 147.272 li
512.251 147.706 li
512.747 148.138 li
513.243 148.567 li
513.739 148.997 li
514.235 149.425 li
514.731 149.851 li
515.228 150.276 li
515.724 150.7 li
516.22 151.122 li
516.716 151.544 li
517.212 151.964 li
517.708 152.382 li
518.204 152.8 li
518.7 153.216 li
519.195 153.632 li
519.691 154.046 li
520.188 154.46 li
520.684 154.872 li
521.18 155.282 li
521.675 155.692 li
522.171 156.103 li
522.667 156.509 li
523.163 156.917 li
523.659 157.323 li
524.155 157.728 li
524.651 158.132 li
525.147 158.534 li
525.644 158.937 li
526.14 159.337 li
526.636 159.737 li
527.132 160.138 li
527.628 160.536 li
528.124 160.933 li
528.62 161.331 li
529.116 161.726 li
529.611 162.122 li
530.107 162.517 li
530.604 162.909 li
531.1 163.302 li
531.596 163.694 li
532.091 164.087 li
532.587 164.478 li
533.083 164.866 li
533.579 165.257 li
534.075 165.644 li
534.571 166.032 li
535.067 166.419 li
535.563 166.806 li
536.06 167.192 li
536.556 167.577 li
537.052 167.962 li
537.548 168.347 li
538.044 168.729 li
538.54 169.112 li
539.036 169.495 li
539.531 169.878 li
540.027 170.259 li
540.523 170.64 li
541.02 171.021 li
541.516 171.399 li
542.011 171.78 li
542.507 172.159 li
543.003 172.538 li
543.499 172.915 li
543.995 173.294 li
544.491 173.671 li
544.987 174.048 li
545.483 174.423 li
545.979 174.8 li
546.476 175.175 li
546.972 175.552 li
547.468 175.927 li
547.964 176.3 li
548.46 176.675 li
548.956 177.05 li
549.452 177.423 li
549.947 177.796 li
550.443 178.171 li
550.939 178.544 li
551.436 178.917 li
551.932 179.29 li
552.427 179.661 li
552.923 180.034 li
553.419 180.407 li
553.915 180.78 li
554.411 181.153 li
554.907 181.524 li
555.403 181.897 li
555.899 182.271 li
556.396 182.642 li
556.892 183.015 li
557.388 183.388 li
557.884 183.761 li
558.38 184.134 li
558.876 184.507 li
559.372 184.88 li
559.868 185.253 li
560.363 185.626 li
560.859 186.001 li
561.355 186.374 li
561.852 186.749 li
562.348 187.122 li
562.843 187.497 li
563.339 187.872 li
563.835 188.247 li
564.331 188.624 li
564.827 188.999 li
565.323 189.376 li
565.819 189.753 li
566.315 190.13 li
566.812 190.507 li
567.308 190.886 li
567.804 191.263 li
568.3 191.642 li
568.796 192.022 li
569.292 192.401 li
569.788 192.782 li
570.284 193.163 li
570.779 193.544 li
571.275 193.927 li
571.771 194.308 li
572.268 194.692 li
572.764 195.075 li
573.259 195.46 li
573.755 195.845 li
574.251 196.229 li
574.747 196.616 li
575.243 197.003 li
575.739 197.39 li
576.235 197.778 li
576.731 198.167 li
577.228 198.556 li
577.724 198.946 li
578.22 199.337 li
578.716 199.729 li
579.212 200.122 li
579.708 200.515 li
580.204 200.909 li
580.7 201.304 li
581.195 201.698 li
581.691 202.095 li
582.188 202.493 li
582.684 202.89 li
583.18 203.29 li
583.675 203.688 li
584.171 204.089 li
584.667 204.491 li
585.163 204.894 li
585.659 205.296 li
586.155 205.7 li
586.651 206.106 li
587.147 206.511 li
587.644 206.919 li
588.14 207.327 li
588.636 207.735 li
589.132 208.146 li
589.628 208.556 li
590.124 208.966 li
590.62 209.38 li
591.116 209.792 li
591.611 210.208 li
592.107 210.622 li
592.604 211.04 li
593.1 211.456 li
593.595 211.876 li
594.091 212.296 li
594.587 212.716 li
595.083 213.138 li
595.579 213.56 li
596.075 213.983 li
596.571 214.409 li
597.067 214.835 li
597.563 215.261 li
598.06 215.688 li
598.556 216.118 li
599.052 216.548 li
599.548 216.979 li
600.044 217.411 li
600.54 217.845 li
601.036 218.278 li
601.532 218.714 li
602.027 219.151 li
602.523 219.589 li
603.02 220.028 li
603.516 220.468 li
604.011 220.909 li
604.507 221.351 li
605.003 221.796 li
605.499 222.239 li
605.995 222.687 li
606.491 223.134 li
606.987 223.583 li
607.483 224.034 li
607.979 224.485 li
608.476 224.94 li
@
459.18 9.23926 mo
459.675 10.144 li
460.171 11.0444 li
460.667 11.9404 li
461.163 12.8315 li
461.659 13.7188 li
462.155 14.6011 li
462.651 15.479 li
463.147 16.353 li
463.644 17.2222 li
464.14 18.0874 li
464.636 18.9478 li
465.132 19.8042 li
465.628 20.6563 li
466.124 21.5044 li
466.62 22.3481 li
467.116 23.1875 li
467.611 24.0225 li
468.107 24.8535 li
468.604 25.6807 li
469.1 26.5034 li
469.596 27.3223 li
470.091 28.1367 li
470.587 28.9473 li
471.083 29.7539 li
471.579 30.5566 li
472.075 31.355 li
472.571 32.1494 li
473.067 32.9399 li
473.563 33.7266 li
474.06 34.5093 li
474.556 35.2881 li
475.052 36.063 li
475.548 36.834 li
476.044 37.6016 li
476.54 38.3647 li
477.036 39.124 li
477.531 39.8799 li
478.027 40.6318 li
478.523 41.3799 li
479.02 42.1245 li
479.516 42.8652 li
480.011 43.6025 li
480.507 44.3354 li
481.003 45.0654 li
481.499 45.791 li
481.995 46.5137 li
482.491 47.2324 li
482.987 47.9473 li
483.483 48.6587 li
483.979 49.3667 li
484.476 50.0713 li
484.972 50.772 li
485.468 51.4692 li
485.964 52.1631 li
486.46 52.8535 li
486.956 53.541 li
487.452 54.2246 li
487.947 54.9053 li
488.443 55.5825 li
488.939 56.2563 li
489.436 56.9272 li
489.932 57.5947 li
490.427 58.2598 li
490.923 58.9209 li
491.419 59.5796 li
491.915 60.2349 li
492.411 60.8877 li
492.907 61.5371 li
493.403 62.1836 li
493.899 62.8276 li
494.396 63.4683 li
494.892 64.1064 li
495.388 64.7422 li
495.884 65.3745 li
496.38 66.0044 li
496.876 66.6318 li
497.372 67.2563 li
497.868 67.8784 li
498.363 68.4976 li
498.859 69.1147 li
499.355 69.729 li
499.852 70.3408 li
500.348 70.9502 li
500.843 71.5571 li
501.339 72.1616 li
501.835 72.7637 li
502.331 73.3638 li
502.827 73.9609 li
503.323 74.5562 li
503.819 75.1494 li
504.315 75.7402 li
504.812 76.3286 li
505.308 76.915 li
505.804 77.499 li
506.3 78.0815 li
506.796 78.6616 li
507.292 79.2393 li
507.788 79.8154 li
508.284 80.3892 li
508.779 80.9614 li
509.275 81.5313 li
509.771 82.0991 li
510.268 82.6655 li
510.764 83.2295 li
511.259 83.792 li
511.755 84.3525 li
512.251 84.9116 li
512.747 85.4688 li
513.243 86.0239 li
513.739 86.5771 li
514.235 87.1294 li
514.731 87.6792 li
515.228 88.228 li
515.724 88.7744 li
516.22 89.3198 li
516.716 89.8638 li
517.212 90.4058 li
517.708 90.9463 li
518.204 91.4854 li
518.7 92.0229 li
519.195 92.5586 li
519.691 93.0933 li
520.188 93.6265 li
520.684 94.1582 li
521.18 94.6885 li
521.675 95.2178 li
522.171 95.7451 li
522.667 96.2715 li
523.163 96.7969 li
523.659 97.3203 li
524.155 97.8428 li
524.651 98.3643 li
525.147 98.8843 li
525.644 99.4033 li
526.14 99.9209 li
526.636 100.438 li
527.132 100.953 li
527.628 101.467 li
528.124 101.98 li
528.62 102.492 li
529.116 103.003 li
529.611 103.513 li
530.107 104.022 li
530.604 104.53 li
531.1 105.037 li
531.596 105.543 li
532.091 106.048 li
532.587 106.552 li
533.083 107.055 li
533.579 107.557 li
534.075 108.059 li
534.571 108.559 li
535.067 109.059 li
535.563 109.558 li
536.06 110.056 li
536.556 110.553 li
537.052 111.049 li
537.548 111.545 li
538.044 112.04 li
538.54 112.534 li
539.036 113.028 li
539.531 113.521 li
540.027 114.013 li
540.523 114.504 li
541.02 114.996 li
541.516 115.486 li
542.011 115.975 li
542.507 116.464 li
543.003 116.952 li
543.499 117.44 li
543.995 117.928 li
544.491 118.415 li
544.987 118.901 li
545.483 119.387 li
545.979 119.872 li
546.476 120.356 li
546.972 120.841 li
547.468 121.325 li
547.964 121.809 li
548.46 122.292 li
548.956 122.774 li
549.452 123.257 li
549.947 123.739 li
550.443 124.221 li
550.939 124.702 li
551.436 125.184 li
551.932 125.665 li
552.427 126.146 li
552.923 126.627 li
553.419 127.107 li
553.915 127.589 li
554.411 128.069 li
554.907 128.55 li
555.403 129.03 li
555.899 129.511 li
556.396 129.991 li
556.892 130.472 li
557.388 130.953 li
557.884 131.435 li
558.38 131.915 li
558.876 132.396 li
559.372 132.878 li
559.868 133.36 li
560.363 133.842 li
560.859 134.324 li
561.355 134.807 li
561.852 135.29 li
562.348 135.772 li
562.843 136.256 li
563.339 136.74 li
563.835 137.224 li
564.331 137.709 li
564.827 138.194 li
565.323 138.68 li
565.819 139.166 li
566.315 139.652 li
566.812 140.14 li
567.308 140.628 li
567.804 141.116 li
568.3 141.604 li
568.796 142.094 li
569.292 142.584 li
569.788 143.075 li
570.284 143.566 li
570.779 144.058 li
571.275 144.551 li
571.771 145.044 li
572.268 145.538 li
572.764 146.034 li
573.259 146.529 li
573.755 147.026 li
574.251 147.524 li
574.747 148.022 li
575.243 148.521 li
575.739 149.021 li
576.235 149.522 li
576.731 150.022 li
577.228 150.526 li
577.724 151.03 li
578.22 151.534 li
578.716 152.04 li
579.212 152.546 li
579.708 153.054 li
580.204 153.562 li
580.7 154.071 li
581.195 154.581 li
581.691 155.093 li
582.188 155.604 li
582.684 156.118 li
583.18 156.634 li
583.675 157.149 li
584.171 157.665 li
584.667 158.185 li
585.163 158.702 li
585.659 159.224 li
586.155 159.745 li
586.651 160.267 li
587.147 160.79 li
587.644 161.315 li
588.14 161.843 li
588.636 162.37 li
589.132 162.897 li
589.628 163.427 li
590.124 163.958 li
590.62 164.491 li
591.116 165.024 li
591.611 165.56 li
592.107 166.095 li
592.604 166.634 li
593.1 167.171 li
593.595 167.712 li
594.091 168.253 li
594.587 168.796 li
595.083 169.341 li
595.579 169.886 li
596.075 170.433 li
596.571 170.979 li
597.067 171.53 li
597.563 172.081 li
598.06 172.632 li
598.556 173.187 li
599.052 173.741 li
599.548 174.298 li
600.044 174.854 li
600.54 175.413 li
601.036 175.974 li
601.532 176.536 li
602.027 177.101 li
602.523 177.665 li
603.02 178.231 li
603.516 178.798 li
604.011 179.368 li
604.507 179.938 li
605.003 180.511 li
605.499 181.085 li
605.995 181.661 li
606.491 182.239 li
606.987 182.819 li
607.483 183.401 li
607.979 183.983 li
608.476 184.569 li
608.972 185.157 li
609.468 185.745 li
609.964 186.337 li
610.46 186.931 li
610.956 187.526 li
611.452 188.124 li
611.947 188.724 li
612.443 189.325 li
612.939 189.931 li
613.436 190.536 li
613.932 191.146 li
614.427 191.757 li
614.923 192.37 li
615.419 192.987 li
615.915 193.606 li
616.411 194.228 li
616.907 194.851 li
617.403 195.476 li
617.899 196.104 li
618.396 196.735 li
618.892 197.37 li
619.388 198.007 li
619.884 198.646 li
620.38 199.286 li
620.876 199.931 li
621.372 200.577 li
621.868 201.228 li
622.363 201.88 li
622.859 202.536 li
623.355 203.192 li
623.852 203.854 li
624.348 204.517 li
624.843 205.183 li
625.339 205.853 li
625.835 206.524 li
626.331 207.198 li
626.827 207.876 li
627.323 208.558 li
627.819 209.239 li
628.315 209.927 li
628.812 210.614 li
629.308 211.308 li
629.804 212.001 li
630.3 212.698 li
630.796 213.399 li
631.292 214.103 li
631.788 214.81 li
632.284 215.519 li
632.779 216.229 li
633.275 216.944 li
633.771 217.663 li
634.268 218.384 li
634.764 219.106 li
635.259 219.833 li
635.755 220.562 li
636.251 221.294 li
636.747 222.028 li
637.243 222.767 li
637.739 223.507 li
638.235 224.249 li
638.731 224.995 li
@
508.284 9.48828 mo
508.779 10.2031 li
509.275 10.9155 li
509.771 11.6255 li
510.268 12.3335 li
510.764 13.0386 li
511.259 13.7417 li
511.755 14.4424 li
512.251 15.1411 li
512.747 15.8369 li
513.243 16.5313 li
513.739 17.2231 li
514.235 17.9131 li
514.731 18.6006 li
515.228 19.2861 li
515.724 19.9697 li
516.22 20.6514 li
516.716 21.3311 li
517.212 22.0083 li
517.708 22.6841 li
518.204 23.3579 li
518.7 24.0298 li
519.195 24.7002 li
519.691 25.3682 li
520.188 26.0347 li
520.684 26.6992 li
521.18 27.3623 li
521.675 28.0234 li
522.171 28.6831 li
522.667 29.3408 li
523.163 29.9976 li
523.659 30.6519 li
524.155 31.3052 li
524.651 31.9565 li
525.147 32.6069 li
525.644 33.2554 li
526.14 33.9023 li
526.636 34.5479 li
527.132 35.1924 li
527.628 35.835 li
528.124 36.4766 li
528.62 37.1167 li
529.116 37.7554 li
529.611 38.3926 li
530.107 39.0288 li
530.604 39.6636 li
531.1 40.2974 li
531.596 40.9297 li
532.091 41.561 li
532.587 42.1914 li
533.083 42.8203 li
533.579 43.4482 li
534.075 44.0747 li
534.571 44.7002 li
535.067 45.3252 li
535.563 45.9487 li
536.06 46.5713 li
536.556 47.1929 li
537.052 47.8135 li
537.548 48.4331 li
538.044 49.0518 li
538.54 49.6694 li
539.036 50.2866 li
539.531 50.9023 li
540.027 51.5176 li
540.523 52.1318 li
541.02 52.7456 li
541.516 53.3584 li
542.011 53.9707 li
542.507 54.582 li
543.003 55.1924 li
543.499 55.8022 li
543.995 56.4111 li
544.491 57.02 li
544.987 57.6279 li
545.483 58.2349 li
545.979 58.8413 li
546.476 59.4473 li
546.972 60.0527 li
547.468 60.6577 li
547.964 61.2617 li
548.46 61.8657 li
548.956 62.4692 li
549.452 63.0723 li
549.947 63.6748 li
550.443 64.2773 li
550.939 64.8789 li
551.436 65.481 li
551.932 66.0825 li
552.427 66.6836 li
552.923 67.2847 li
553.419 67.8857 li
553.915 68.4868 li
554.411 69.0874 li
554.907 69.6885 li
555.403 70.2891 li
555.899 70.8896 li
556.396 71.4907 li
556.892 72.0918 li
557.388 72.6929 li
557.884 73.2939 li
558.38 73.8955 li
558.876 74.4971 li
559.372 75.0991 li
559.868 75.7012 li
560.363 76.3037 li
560.859 76.9063 li
561.355 77.5098 li
561.852 78.1133 li
562.348 78.7173 li
562.843 79.3213 li
563.339 79.9263 li
563.835 80.5317 li
564.331 81.1377 li
564.827 81.7441 li
565.323 82.3511 li
565.819 82.959 li
566.315 83.5674 li
566.812 84.1758 li
567.308 84.7856 li
567.804 85.396 li
568.3 86.0068 li
568.796 86.6191 li
569.292 87.2314 li
569.788 87.8447 li
570.284 88.459 li
570.779 89.0742 li
571.275 89.6904 li
571.771 90.3071 li
572.268 90.9248 li
572.764 91.5435 li
573.259 92.1631 li
573.755 92.7842 li
574.251 93.4058 li
574.747 94.0283 li
575.243 94.6523 li
575.739 95.2773 li
576.235 95.9033 li
576.731 96.5303 li
577.228 97.1582 li
577.724 97.7876 li
578.22 98.4185 li
578.716 99.0498 li
579.212 99.6831 li
579.708 100.317 li
580.204 100.953 li
580.7 101.589 li
581.195 102.228 li
581.691 102.867 li
582.188 103.507 li
582.684 104.149 li
583.18 104.792 li
583.675 105.437 li
584.171 106.083 li
584.667 106.73 li
585.163 107.379 li
585.659 108.03 li
586.155 108.682 li
586.651 109.335 li
587.147 109.989 li
587.644 110.646 li
588.14 111.303 li
588.636 111.962 li
589.132 112.623 li
589.628 113.286 li
590.124 113.949 li
590.62 114.615 li
591.116 115.282 li
591.611 115.95 li
592.107 116.62 li
592.604 117.292 li
593.1 117.966 li
593.595 118.641 li
594.091 119.317 li
594.587 119.996 li
595.083 120.676 li
595.579 121.357 li
596.075 122.041 li
596.571 122.726 li
597.067 123.413 li
597.563 124.102 li
598.06 124.792 li
598.556 125.483 li
599.052 126.177 li
599.548 126.872 li
600.044 127.569 li
600.54 128.269 li
601.036 128.97 li
601.532 129.671 li
602.027 130.376 li
602.523 131.081 li
603.02 131.79 li
603.516 132.499 li
604.011 133.211 li
604.507 133.925 li
605.003 134.64 li
605.499 135.358 li
605.995 136.078 li
606.491 136.8 li
606.987 137.524 li
607.483 138.251 li
607.979 138.981 li
608.476 139.712 li
608.972 140.446 li
609.468 141.183 li
609.964 141.923 li
610.46 142.664 li
610.956 143.409 li
611.452 144.155 li
611.947 144.905 li
612.443 145.658 li
612.939 146.414 li
613.436 147.173 li
613.932 147.935 li
614.427 148.698 li
614.923 149.466 li
615.419 150.235 li
615.915 151.009 li
616.411 151.784 li
616.907 152.563 li
617.403 153.347 li
617.899 154.132 li
618.396 154.921 li
618.892 155.714 li
619.388 156.509 li
619.884 157.308 li
620.38 158.11 li
620.876 158.915 li
621.372 159.724 li
621.868 160.536 li
622.363 161.351 li
622.859 162.171 li
623.355 162.993 li
623.852 163.819 li
624.348 164.647 li
624.843 165.481 li
625.339 166.317 li
625.835 167.157 li
626.331 168.001 li
626.827 168.847 li
627.323 169.698 li
627.819 170.552 li
628.315 171.409 li
628.812 172.271 li
629.308 173.136 li
629.804 174.003 li
630.3 174.876 li
630.796 175.751 li
631.292 176.63 li
631.788 177.513 li
632.284 178.399 li
632.779 179.288 li
633.275 180.183 li
633.771 181.079 li
634.268 181.979 li
634.764 182.884 li
635.259 183.792 li
635.755 184.704 li
636.251 185.618 li
636.747 186.536 li
637.243 187.458 li
637.739 188.384 li
638.235 189.313 li
638.731 190.245 li
639.228 191.181 li
639.724 192.12 li
640.22 193.063 li
640.716 194.009 li
641.212 194.958 li
641.708 195.911 li
642.204 196.866 li
642.7 197.825 li
643.195 198.788 li
643.691 199.755 li
644.188 200.724 li
644.684 201.694 li
645.18 202.671 li
645.675 203.649 li
646.171 204.63 li
646.667 205.614 li
647.163 206.601 li
647.659 207.591 li
648.155 208.583 li
648.651 209.579 li
649.147 210.577 li
649.644 211.577 li
650.14 212.581 li
650.636 213.587 li
651.132 214.595 li
651.628 215.606 li
652.124 216.618 li
652.62 217.634 li
653.116 218.651 li
653.611 219.671 li
654.107 220.692 li
654.604 221.716 li
655.1 222.743 li
655.596 223.771 li
656.091 224.8 li
@
553.915 9.38525 mo
554.411 10.106 li
554.907 10.8271 li
555.403 11.5479 li
555.899 12.269 li
556.396 12.9902 li
556.892 13.7114 li
557.388 14.4326 li
557.884 15.1543 li
558.38 15.876 li
558.876 16.5977 li
559.372 17.3198 li
559.868 18.0425 li
560.363 18.7656 li
560.859 19.4888 li
561.355 20.2129 li
561.852 20.937 li
562.348 21.6616 li
562.843 22.3867 li
563.339 23.1128 li
563.835 23.8394 li
564.331 24.5664 li
564.827 25.2939 li
565.323 26.0225 li
565.819 26.752 li
566.315 27.4814 li
566.812 28.2124 li
567.308 28.9438 li
567.804 29.6763 li
568.3 30.4097 li
568.796 31.1436 li
569.292 31.8789 li
569.788 32.6152 li
570.284 33.3521 li
570.779 34.0903 li
571.275 34.8291 li
571.771 35.5698 li
572.268 36.311 li
572.764 37.0537 li
573.259 37.7969 li
573.755 38.542 li
574.251 39.2881 li
574.747 40.0352 li
575.243 40.7837 li
575.739 41.5337 li
576.235 42.2847 li
576.731 43.0371 li
577.228 43.791 li
577.724 44.5464 li
578.22 45.3032 li
578.716 46.061 li
579.212 46.8208 li
579.708 47.582 li
580.204 48.3442 li
580.7 49.1084 li
581.195 49.874 li
581.691 50.6411 li
582.188 51.4097 li
582.684 52.1802 li
583.18 52.9521 li
583.675 53.7256 li
584.171 54.501 li
584.667 55.2778 li
585.163 56.0566 li
585.659 56.8369 li
586.155 57.6191 li
586.651 58.4028 li
587.147 59.1885 li
587.644 59.9761 li
588.14 60.7651 li
588.636 61.5562 li
589.132 62.3491 li
589.628 63.144 li
590.124 63.9404 li
590.62 64.7388 li
591.116 65.5391 li
591.611 66.3418 li
592.107 67.146 li
592.604 67.9521 li
593.1 68.7603 li
593.595 69.5703 li
594.091 70.3823 li
594.587 71.1963 li
595.083 72.0122 li
595.579 72.8301 li
596.075 73.6504 li
596.571 74.4727 li
597.067 75.2964 li
597.563 76.1226 li
598.06 76.9512 li
598.556 77.7813 li
599.052 78.6138 li
599.548 79.4482 li
600.044 80.2847 li
600.54 81.1235 li
601.036 81.9644 li
601.532 82.8071 li
602.027 83.6523 li
602.523 84.499 li
603.02 85.3486 li
603.516 86.2002 li
604.011 87.0542 li
604.507 87.9106 li
605.003 88.7695 li
605.499 89.6309 li
605.995 90.4951 li
606.491 91.3613 li
606.987 92.231 li
607.483 93.103 li
607.979 93.978 li
608.476 94.856 li
608.972 95.7373 li
609.468 96.6211 li
609.964 97.5078 li
610.46 98.3979 li
610.956 99.2915 li
611.452 100.188 li
611.947 101.088 li
612.443 101.991 li
612.939 102.897 li
613.436 103.808 li
613.932 104.721 li
614.427 105.638 li
614.923 106.559 li
615.419 107.483 li
615.915 108.411 li
616.411 109.343 li
616.907 110.278 li
617.403 111.217 li
617.899 112.16 li
618.396 113.106 li
618.892 114.057 li
619.388 115.012 li
619.884 115.97 li
620.38 116.933 li
620.876 117.899 li
621.372 118.87 li
621.868 119.844 li
622.363 120.823 li
622.859 121.806 li
623.355 122.792 li
623.852 123.783 li
624.348 124.778 li
624.843 125.778 li
625.339 126.781 li
625.835 127.789 li
626.331 128.802 li
626.827 129.817 li
627.323 130.838 li
627.819 131.862 li
628.315 132.892 li
628.812 133.925 li
629.308 134.963 li
629.804 136.005 li
630.3 137.052 li
630.796 138.103 li
631.292 139.157 li
631.788 140.216 li
632.284 141.28 li
632.779 142.348 li
633.275 143.42 li
633.771 144.496 li
634.268 145.577 li
634.764 146.662 li
635.259 147.751 li
635.755 148.845 li
636.251 149.942 li
636.747 151.046 li
637.243 152.151 li
637.739 153.261 li
638.235 154.376 li
638.731 155.495 li
639.228 156.618 li
639.724 157.745 li
640.22 158.876 li
640.716 160.011 li
641.212 161.151 li
641.708 162.294 li
642.204 163.44 li
642.7 164.593 li
643.195 165.747 li
643.691 166.905 li
644.188 168.069 li
644.684 169.235 li
645.18 170.405 li
645.675 171.579 li
646.171 172.757 li
646.667 173.938 li
647.163 175.122 li
647.659 176.31 li
648.155 177.501 li
648.651 178.696 li
649.147 179.894 li
649.644 181.095 li
650.14 182.298 li
650.636 183.505 li
651.132 184.716 li
651.628 185.927 li
652.124 187.144 li
652.62 188.362 li
653.116 189.583 li
653.611 190.806 li
654.107 192.032 li
654.604 193.261 li
655.1 194.491 li
655.596 195.726 li
656.091 196.96 li
656.587 198.198 li
657.083 199.438 li
657.579 200.679 li
658.075 201.923 li
658.571 203.169 li
659.067 204.415 li
659.563 205.663 li
660.06 206.913 li
660.556 208.165 li
661.052 209.419 li
661.548 210.673 li
662.044 211.929 li
662.54 213.185 li
663.036 214.442 li
663.532 215.7 li
664.027 216.96 li
664.523 218.22 li
665.02 219.479 li
665.516 220.741 li
666.011 222.003 li
666.507 223.265 li
667.003 224.526 li
@
618.892 9.9165 mo
619.388 11.269 li
619.884 12.627 li
620.38 13.9902 li
620.876 15.3594 li
621.372 16.7344 li
621.868 18.1147 li
622.363 19.501 li
622.859 20.8931 li
623.355 22.2915 li
623.852 23.6953 li
624.348 25.105 li
624.843 26.521 li
625.339 27.9424 li
625.835 29.3701 li
626.331 30.8037 li
626.827 32.2437 li
627.323 33.6895 li
627.819 35.1411 li
628.315 36.5991 li
628.812 38.063 li
629.308 39.5332 li
629.804 41.0093 li
630.3 42.4917 li
630.796 43.98 li
631.292 45.4746 li
631.788 46.9751 li
632.284 48.4819 li
632.779 49.9946 li
633.275 51.5137 li
633.771 53.0386 li
634.268 54.5698 li
634.764 56.1069 li
635.259 57.6499 li
635.755 59.1992 li
636.251 60.7544 li
636.747 62.3154 li
637.243 63.8828 li
637.739 65.4561 li
638.235 67.0352 li
638.731 68.6201 li
639.228 70.2109 li
639.724 71.8076 li
640.22 73.4102 li
640.716 75.0181 li
641.212 76.6318 li
641.708 78.2515 li
642.204 79.877 li
642.7 81.5078 li
643.195 83.144 li
643.691 84.7856 li
644.188 86.4331 li
644.684 88.0854 li
645.18 89.7432 li
645.675 91.4063 li
646.171 93.0742 li
646.667 94.7471 li
647.163 96.4248 li
647.659 98.1079 li
648.155 99.7954 li
648.651 101.487 li
649.147 103.184 li
649.644 104.885 li
650.14 106.591 li
650.636 108.301 li
651.132 110.015 li
651.628 111.733 li
652.124 113.455 li
652.62 115.181 li
653.116 116.911 li
653.611 118.644 li
654.107 120.382 li
654.604 122.122 li
655.1 123.865 li
655.596 125.612 li
656.091 127.362 li
656.587 129.116 li
657.083 130.872 li
657.579 132.631 li
658.075 134.393 li
658.571 136.157 li
659.067 137.923 li
659.563 139.692 li
660.06 141.463 li
660.556 143.236 li
661.052 145.011 li
661.548 146.788 li
662.044 148.567 li
662.54 150.347 li
663.036 152.128 li
663.532 153.911 li
664.027 155.694 li
664.523 157.479 li
665.02 159.265 li
665.516 161.052 li
666.011 162.839 li
666.507 164.626 li
667.003 166.413 li
667.499 168.202 li
667.995 169.989 li
668.491 171.778 li
668.987 173.565 li
669.483 175.353 li
669.979 177.14 li
670.476 178.925 li
670.972 180.71 li
671.468 182.493 li
671.964 184.276 li
672.46 186.058 li
672.956 187.839 li
673.452 189.616 li
673.946 191.394 li
674.442 193.169 li
674.938 194.94 li
675.435 196.712 li
675.931 198.479 li
676.427 200.245 li
676.923 202.009 li
677.419 203.769 li
677.915 205.524 li
678.411 207.28 li
678.907 209.034 li
679.403 210.792 li
679.899 212.552 li
680.396 214.317 li
680.892 216.091 li
681.388 217.872 li
681.884 219.665 li
682.38 221.468 li
682.876 223.284 li
683.372 225.114 li
@
645.18 9.08105 mo
645.675 11.2329 li
646.171 13.3916 li
646.667 15.5566 li
647.163 17.728 li
647.659 19.9058 li
648.155 22.0898 li
648.651 24.2793 li
649.147 26.4751 li
649.644 28.6768 li
650.14 30.8838 li
650.636 33.0967 li
651.132 35.3149 li
651.628 37.5381 li
652.124 39.7671 li
652.62 42.0005 li
653.116 44.2393 li
653.611 46.4824 li
654.107 48.7305 li
654.604 50.9824 li
655.1 53.2393 li
655.596 55.5 li
656.091 57.7651 li
656.587 60.0342 li
657.083 62.3066 li
657.579 64.583 li
658.075 66.8628 li
658.571 69.1455 li
659.067 71.4316 li
659.563 73.7207 li
660.06 76.0127 li
660.556 78.3071 li
661.052 80.6045 li
661.548 82.9038 li
662.044 85.2051 li
662.54 87.5088 li
663.036 89.814 li
663.532 92.1211 li
664.027 94.4297 li
664.523 96.7393 li
665.02 99.0503 li
665.516 101.362 li
666.011 103.675 li
666.507 105.988 li
667.003 108.302 li
667.499 110.615 li
667.995 112.929 li
668.491 115.243 li
668.987 117.556 li
669.483 119.869 li
669.979 122.181 li
670.476 124.492 li
670.972 126.803 li
671.468 129.111 li
671.964 131.419 li
672.46 133.724 li
672.956 136.028 li
673.452 138.329 li
673.946 140.628 li
674.442 142.925 li
674.938 145.22 li
675.435 147.511 li
675.931 149.8 li
676.427 152.083 li
676.923 154.366 li
677.419 156.644 li
677.915 158.917 li
678.411 161.188 li
678.907 163.458 li
679.403 165.731 li
679.899 168.011 li
680.396 170.296 li
680.892 172.591 li
681.388 174.896 li
681.884 177.214 li
682.38 179.548 li
682.876 181.897 li
683.372 184.267 li
683.868 186.655 li
684.362 189.067 li
684.858 191.499 li
685.354 193.956 li
685.851 196.437 li
686.347 198.944 li
686.843 201.479 li
687.339 204.04 li
687.835 206.628 li
688.331 209.245 li
688.827 211.892 li
689.323 214.565 li
689.819 217.269 li
690.315 220.001 li
690.812 222.761 li
@
682.38 11.8687 mo
682.876 16.3564 li
683.372 20.8789 li
683.868 25.4395 li
684.362 30.0405 li
684.858 34.6851 li
685.354 39.375 li
685.851 44.1123 li
686.347 48.8989 li
686.843 53.7363 li
687.339 58.626 li
687.835 63.5684 li
688.331 68.5649 li
688.827 73.6162 li
689.323 78.7217 li
689.819 83.8818 li
690.315 89.0972 li
690.812 94.3657 li
691.308 99.688 li
691.804 105.062 li
692.3 110.487 li
692.796 115.96 li
693.292 121.481 li
693.788 127.047 li
694.284 132.655 li
694.778 138.304 li
695.274 143.987 li
695.771 149.706 li
696.267 155.452 li
696.763 161.226 li
697.259 167.019 li
697.755 172.831 li
698.251 178.653 li
698.747 184.485 li
699.243 190.319 li
699.739 196.149 li
700.235 201.97 li
700.731 207.776 li
701.228 213.563 li
701.724 219.325 li
702.22 225.058 li
@
691.804 12.5859 mo
692.3 19.9482 li
692.796 27.377 li
693.292 34.8696 li
693.788 42.4233 li
694.284 50.0342 li
694.778 57.6992 li
695.274 65.4136 li
695.771 73.1729 li
696.267 80.9727 li
696.763 88.8066 li
697.259 96.6704 li
697.755 104.557 li
698.251 112.461 li
698.747 120.374 li
699.243 128.291 li
699.739 136.203 li
700.235 144.104 li
700.731 151.985 li
701.228 159.839 li
701.724 167.657 li
702.22 175.438 li
702.716 183.173 li
703.212 190.856 li
703.708 198.479 li
704.204 206.034 li
704.7 213.515 li
705.194 220.909 li
@
398.667 212.675 mo
733.468 212.675 li
.75021 .679683 .670222 .90164 cmyk
@
398.667 175.646 mo
733.468 175.646 li
@
398.667 143.331 mo
733.468 143.331 li
@
398.667 105.502 mo
733.468 105.502 li
@
398.667 67.6719 mo
733.468 67.6719 li
@
398.667 29.8423 mo
733.468 29.8423 li
@
.5 lw
0 lc
435.868 237.896 mo
435.868 233.896 li
@
435.868 12.9351 mo
435.868 8.93506 li
@
COSIAA+ComicSansMS*1 [12 0 0 -12 0 0 ]msf424.868 250.899 mo(100)sh485.468 237.896 mo
485.468 233.896 li
@
485.468 12.9351 mo
485.468 8.93506 li
@
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginCOSIAA+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/two <1C60D8A8C9B7D98F6D8F3D7AA695A6A6775D351A3C5B32DF9BF22260E9F8506C6C0AFACE341E1E92FBC3EF784C227B64F08462D61DD043B72D0EF946A3AE72A4250C97F9534EA1ECB8D1F844DABC2780EA5497B3400E0115082BCD52CA33A42EB31BAFC00E89283E1398238FF501EF46348166C5D0796F4F302EEFDEF2C569616B35F3A295FC3051C30E10E4927C117B901A9DA57C3B1677644528E481FA057A75ABBC2AFB35C7AE1B05FE0BDF0A1E3241A7236A535A6C63ACD853B32B2C1D37907B8E7DB8A4A38921C6A2C9DE2A43FF89B38C12B866B35B39B6383EDE8BC72433248A45DEF8A4F70A87D3942EB09EC1FED7DD26A9A13A5550450B987E697E0B> |-systemdict /gcheck known {setglobal} if end {end} ifendCOSIAA+ComicSansMS /Encoding getdup 50 /two putpop%ADOEndSubsetFont
/COSIAA+ComicSansMS*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two 20{/.notdef}rp /G 5{/.notdef}rp /M 26{/.notdef}rp /h 2{/.notdef}rp /k 6{/.notdef}rp /r /s 5{/.notdef}rp /y 134{/.notdef}rp]COSIAA+ComicSansMS nfCOSIAA+ComicSansMS*1 [12 0 0 -12 0 0 ]msf474.467 250.899 mo(200)sh535.067 237.896 mo
535.067 233.896 li
@
535.067 12.9351 mo
535.067 8.93506 li
@
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginCOSIAA+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B7D98F6D4FB14BAE603D1D6590C382ECB216DBFEA05FD170C2FA627835C2BD2D966C4BBBC5D1C9DAB8F42A10D785196B325C66F5EDB7577122F6BE5734AA8078E8259D258866B0D1CC3F87D26DC47B5B233B398C78E29EC5A0D7BC5E21D44AFEF53F0B98F674195B01538429C08074D29DB84F0A6429366C6CB02FEB0C0C8EA9E32C08F04DD1409416FDB44D15BFEDE0E92C7DC71904655EAD8ABAF0C9913206CC1F0EC0B3F568F925BFB8C8C9726A4D41418DE9C62DE485AD8C3563A32C246DC49BA157820C0926A16B416822B6A5A4973C7FC590D71365A1C2D32D080303BF33A9ECFF4425A3324A940804108D640AA1B151> |-systemdict /gcheck known {setglobal} if end {end} ifendCOSIAA+ComicSansMS /Encoding getdup 51 /three putpop%ADOEndSubsetFont
/COSIAA+ComicSansMS*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three 19{/.notdef}rp /G 5{/.notdef}rp /M 26{/.notdef}rp /h 2{/.notdef}rp /k 6{/.notdef}rp /r /s 5{/.notdef}rp /y 134{/.notdef}rp]COSIAA+ComicSansMS nfCOSIAA+ComicSansMS*1 [12 0 0 -12 0 0 ]msf524.067 250.899 mo(300)sh584.667 237.896 mo
584.667 233.896 li
@
584.667 12.9351 mo
584.667 8.93506 li
@
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginCOSIAA+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/four <1C60D8A8C9B7D98F6D9D19B2E0513FC5E4D92EB9CF4009902AEA1143FA8048680F0116C2DDAB1D204D80A50B6C47E295405ECF6B9D8E67656139D8AB0B99F70F10190AB1B69AE519C94E071FC1BE80E3AF65DBEE53E56F3CA5CE81F21E9C93C6700EB048CAFE7BA1F01073473AC3EB439C41FF3AB8A358FF25E1E33F82DECC7B8D6F2A15E44E1041> |-systemdict /gcheck known {setglobal} if end {end} ifendCOSIAA+ComicSansMS /Encoding getdup 52 /four putpop%ADOEndSubsetFont
/COSIAA+ComicSansMS*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four 18{/.notdef}rp /G 5{/.notdef}rp /M 26{/.notdef}rp /h 2{/.notdef}rp /k 6{/.notdef}rp /r /s 5{/.notdef}rp /y 134{/.notdef}rp]COSIAA+ComicSansMS nfCOSIAA+ComicSansMS*1 [12 0 0 -12 0 0 ]msf573.667 250.899 mo(400)sh634.268 237.896 mo
634.268 233.896 li
@
634.268 12.9351 mo
634.268 8.93506 li
@
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginCOSIAA+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/five <1C60D8A8C9B7D98F6D54D48ED68EA6CF969F0E5B50A1A83CDD96ED54CE7E034617721CFF9E66FC1EED4AF925D2EABE5F3887295B9694FAE87E5068EF00B2E19BB68346DFF7F2616719067C9E31024F97634B80D817FACCB1FF4B22DB7BC4AE86BF0B2C1A9A0C794826FE65E1181EB10541F6D1BC25C237A065541FED0BE699DBCA3EC8C9BDA955EC7075994950DCC22C238275A937278BA07424607EEB10C1AE2226536CB6BDB9CC86C61FE2B4A63BB08CE3F5FF5E415AB86FFD87E55E1E4FB7393915DC53D001D3942F0A19EBE33E976F335D27A4E9FA42922038F9E9924E840CA20833DB114F82CEFD215963C9F09A5A31BEE9615AEB04B263C62CEE55CBD81DC2A323B20160F4BB153DCC4119196063B9B3AFABF0E64C37924ADEBA5A73CF27B225CFA4A00591BD57F0> |-systemdict /gcheck known {setglobal} if end {end} ifendCOSIAA+ComicSansMS /Encoding getdup 53 /five putpop%ADOEndSubsetFont
/COSIAA+ComicSansMS*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four /five 17{/.notdef}rp /G 5{/.notdef}rp /M 26{/.notdef}rp /h 2{/.notdef}rp /k 6{/.notdef}rp /r /s 5{/.notdef}rp /y 134{/.notdef}rp]COSIAA+ComicSansMS nfCOSIAA+ComicSansMS*1 [12 0 0 -12 0 0 ]msf623.268 250.899 mo(500)sh683.868 237.896 mo
683.868 233.896 li
@
683.868 12.9351 mo
683.868 8.93506 li
@
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginCOSIAA+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenleft <1C60D8A8C9B72DDD4BDDDEFA1F2E33EFAB2609E3C9DE388E20E9C059C4F1BE51DE95F72A2C12C7492DCC98E0E6966BF3C6ECA33D6154D0170812D5FDFD86FCB61BC83579E6C82B47DC2EF7EFEC0791C5D64493C14198901FA2252477E06D36F6FBD8470D6ECFD0F8931D63CA891EC08EE802E9833B5640A882BF6370D5475D687E5637A4> |-/parenright <1C60D8A8C9B72DDD4BB51EC6C49AB7306C1A14C493E9BA5D78AE2C195B29D94044F912FEED39F75BE34A7150607FEA016A23803EFDD2F9288AF7A180AEFCBFBF998E3FBDAC6F3A4074B0F5D69EFDE59096176B6B29149A14AB78FC2B3577A37D471DCCDE635BBEA2665A37EE893BAA312D5DB22CA01C4916AB9D79F1B336301D84554794> |-/six <1C60D8A8C9B7D98F6D410A565F86C07E28623A8A30C45B3B253252287FF35E356C79AC66AD2FE890317E5BEDE13DA65D4DD9FEFA4A8DFF9CB28F7E30962E9383AE3EAD6DEAE2B16B6F1B34D04F870BFED7898255C19B9AFC0426057874C8B988A599BC31593CCD1C2687B840C41197BFB5E2F0C696FA1CFEBDE6A1FAB216E151994B62236FC38B2E21028335BF2980D1D4BCF4B195CB5D36B5C88F8109053C66029BF6146437EE12EF20EAA8182B691161DB7D213B7CE925835ED4E58E76> |-/seven <1C60D8A8C9B7D98F6DCBFF40BE87AB9FDD0BA36CDDAFA5797A3EC657805A2D2808066DB62FEB96BC15A9B900F30543BEF9B54AC71C24DAE32A797EFEB4788F08642C915FB7B2E813E994E738D4370CB6BC7123E1005E0E850794EF1C4BEB3349DE5E24B3A290EB56162B86E7DD2EFC21A5CA16BA54B1764CDAB4897C84591E5E4E579C2F9B60E8450EBEED5E85F939> |-/C <1C60D8A8C9B7C054165765BAAF0C92CCBE2C6ADFDFC36958D81859F00796D344CC054E333538ED46E12E7F5688AFCF3135F7BCF04A6B81068C72B36BF7E3914834347D57ED2E2D044D0BCFFC5B59F76B5C38341A800AA9211C98073803A5DC16425F7A27A5DB2025E06EF163670F55818C9860E39CE252532EFC51C2C7AAEA1AC0A03F3A9AB8FDAF9C04A014034CBE8449C94C8B8BD9D90AD14C972CEE5EF16F02C7A2122CEBDBE881C9E97730465657789925229B337B911F77129D0B7B7E9920> |-/T <1C60D8A8C9B65DE77A876B2DD8B7FF866491B0F2D61BEA0FBD85AF0D4DE2D949BC150F0F7674372C84451FC040683FB3AA2D326E4537FF474119E83C0987CB5A9ABA0CEE9BCA528F62C1464F5E091F2B82819B07C10C1F1E4E020756FBAC175FEE62F21BE88ABFB0D490716E46C7B7A99793906C4D305D2AF07DDE68078E0E2DC8EB3EE1D506AF796125FCF0E84AE3858A8FA7A22B380BA92E9CC4237A14C737568566385E4CC4D53E33434D25323EAE78F81E4933605E741D0F8ABE8D521FF5FB90669DFD0664D78B93FFDF6561CEE8110A3B3ADAD33CCF470BBB1B9EE08647EF4772037B> |-/a <1C60D8A8C9B7BB5CA503F41BCABD6C718309D7FD3EAFD4723590A6DB54A64A3783FF0E8915C8665146025473AABA73A7307808FC49DF54120176FFCE6E5630D745DEC9D7FE687B22D69E14177C1006B659795051D4F564854E1C732886E0B2617B0D55057161A197AD04FDD89E349DC800C8FAE6C2E2E7218942027A386140843CEC6D038F4E517DF6E091EE1EC97061608AA6DD07992C53BB029F315A3C165875CF85B20BCD136667E2BE57C24163FB07309C0F29C421C91BBF197F69B4468BD92D4E0F963A574D94F4959F6C142EC285F75B0A57DCD73FA9D71DA6249A4005429B> |-/e <1C60D8A8C9B797474FA4303150FF95D22C1576367C7C82BE107A33DB836FE273C47A9F1C294729003E4BC6906C807AE64492E567EB699590C33760698497B7D8BD4606E6533DD313B7408096D0253255EE30E5A5E3E06503BE924638C5951A143C8FB027E022BA2CC9736D9A6F100D38EB1D4C686421142EAA9CB9B186F914996503E87D112FD301022C9ED0ABE9EC3841A2AAB1D0ECFBD04DD27FAC9222691EA422325A2608DE3AA47EDFE24D5B> |-/m <1C60D8A8C9B6FC2D96873601FD7D92169A9B88887C32231D12B856F0FF258B62829FEDF861E7207C12D5C53BCDFD0EA3F0EF441B3104EE7A8DCCC9135A66A3908121FDEF89ECB4290FE2DEBBC0D2CEC922FC3B50F2ED674EACC69E69FA370309E0EBFB994E62CF35AAC76A68A27F1193FA80070D9751608DC309EBC2115575AE6BDEEB113F39584664AF7AAA3C82601F097876EB086034E5AE78A75047B10841E51F7380B84CCDD035E85E1A5870A2BB0942D4819E585F0952EB73250253334BF49322F96375F5B49CB7CFA7A0B232F8AD1DD38A4207A81B8B16535F38363976D31BC82130B6F42B86DA3EA4FFCCC6C8DA3BAD0E6D585D10CCC6A4EFCE59BB479065B92972F3D516BBD63C0E7C814F065EEF1040A3FF51C243D5475EBA7E962CAD4F75D3AC0EDC0C293B5BB6A5776BF4AC8F3BC665CA79374C2D10BBB5A4EE69B305850280C1> |-/o <1C60D8A8C9B78D34A55956A51486C357D04D448C2012FC2F5B0A5FE1B320E5CD61418E269420C85D10935D5D9B29D4FDDFDD85C698EDEF649FCF7B4152030DE7FB7B0AD250869A491A4776C5C05E1436F84934B318F30DD94DF542C1FA3FC71DCD30BC8EC67320F785CD0C113E143028BDC1093B4CB998C3891C7A3F7C> |-/p <1C60D8A8C9B784FA605C1E2DE9CD48D992DC3CC70A48B838E2D397F5893EBF5E6CB31C410B2D579A798B247824C0B1DA0D694D5A554F49A7F104B09B8C8123B1EE0F250469E618A08C9EDDFB5A51FAF77BD9EC9F3207514B493F3B559D151CA44FECA1422F66057BA97C6A129E034A9C3AB70E463FE85C8478F346F06A6148E354DA6D0BE5EFF6256E4BB886B9C73833B34381A812E73BADDAFCE8754E4C232F6A62C54AB66D9B9D76ADD04785EFB7DCFC18E5B399366900582D047B460CC42F08F2E9ED5B222614010BACB1AC2FAD7F735C4AD14F71C1> |-/t <1C60D8A8C9B7445140689D163BE9CD19CB6263AAD663E751BFF4FC3EFD289F54C938D7522CDBDC78B86C3A6B352FEC6C942B3A84D1DF37948F119DD042933AE483D22B2D630A0536911763BEC72090C0E7972085EC665EF1618CB3A1E365C68118F7319C489021F7E5BB1237C8B28D9185CA450113B4347A96F5A190A1E41185CC68C22E0D8B3619F65EBBC7C09A7899C42BB7EC5C668E84BEB96E5966CE04926328B6CA13AB435E16BBB7670DDC776BE2EE98FDA0050964E0FA7809BCE05F1D859FB5837E> |-/u <1C60D8A8C9B7B3D0EB94C27794C8FF7A66F97FA6CF9FABEE835E1A1626320F2E2E58AACC9742E2863A234D717CCEC554B38E6670782546BE1280DB3D026E3D97D899C4DBB14646E84E5FA9BF09835296C032D42FE102EFEF2CF2250B419A68387C6038BB86A74FB974D87A0B2F0A7872D9B0CF5DA9A83619FEC0CA43F47D29F1B253EC46F0FA880E9D913D7D1074998F6C45D6194D53073B871AAF04BD179A8644CD091C1AF599D8C323C678F3C145D207E61A3CA7E44F7257600C6DCC4283614DCCA35CB9A41B86A4FF> |-systemdict /gcheck known {setglobal} if end {end} ifendCOSIAA+ComicSansMS /Encoding getdup 40 /parenleft putdup 41 /parenright putdup 54 /six putdup 55 /seven putdup 67 /C putdup 84 /T putdup 97 /a putdup 101 /e putdup 109 /m putdup 111 /o putdup 112 /p putdup 116 /t putdup 117 /u putpop%ADOEndSubsetFont
/COSIAA+ComicSansMS*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one /two /three /four /five /six /seven 11{/.notdef}rp /C 3{/.notdef}rp /G 5{/.notdef}rp /M 6{/.notdef}rp /T 12{/.notdef}rp /a 3{/.notdef}rp /e 2{/.notdef}rp /h 2{/.notdef}rp /k /.notdef /m /.notdef /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]COSIAA+ComicSansMS nfCOSIAA+ComicSansMS*1 [12 0 0 -12 0 0 ]msf672.868 250.899 mo(600)sh722.467 250.899 mo(700)shCOSIAA+ComicSansMS*1 [14 0 0 -14 0 0 ]msf487.067 268.899 mo(Temperature \()shCOSIAA+ComicSansMS*1 [8.162 0 0 -8.162 0 0 ]msf581.759 264.237 mo(o)shCOSIAA+ComicSansMS*1 [14 0 0 -14 0 0 ]msf586.051 268.899 mo(C\))[8.43555 0 ]xsh398.667 212.675 mo
402.667 212.675 li
@
729.468 212.675 mo
733.468 212.675 li
@
398.667 187.456 mo
402.667 187.456 li
@
729.468 187.456 mo
733.468 187.456 li
@
398.667 162.235 mo
402.667 162.235 li
@
729.468 162.235 mo
733.468 162.235 li
@
398.667 137.016 mo
402.667 137.016 li
@
729.468 137.016 mo
733.468 137.016 li
@
398.667 111.796 mo
402.667 111.796 li
@
729.468 111.796 mo
733.468 111.796 li
@
398.667 86.5757 mo
402.667 86.5757 li
@
729.468 86.5757 mo
733.468 86.5757 li
@
398.667 61.356 mo
402.667 61.356 li
@
729.468 61.356 mo
733.468 61.356 li
@
398.667 36.1362 mo
402.667 36.1362 li
@
729.468 36.1362 mo
733.468 36.1362 li
@
398.667 10.916 mo
402.667 10.916 li
@
729.468 10.916 mo
733.468 10.916 li
@
398.667 212.675 mo
400.667 212.675 li
@
731.468 212.675 mo
733.468 212.675 li
@
398.667 187.456 mo
400.667 187.456 li
@
731.468 187.456 mo
733.468 187.456 li
@
398.667 162.235 mo
400.667 162.235 li
@
731.468 162.235 mo
733.468 162.235 li
@
398.667 137.016 mo
400.667 137.016 li
@
731.468 137.016 mo
733.468 137.016 li
@
398.667 111.796 mo
400.667 111.796 li
@
731.468 111.796 mo
733.468 111.796 li
@
398.667 86.5757 mo
400.667 86.5757 li
@
731.468 86.5757 mo
733.468 86.5757 li
@
398.667 61.356 mo
400.667 61.356 li
@
731.468 61.356 mo
733.468 61.356 li
@
398.667 36.1362 mo
400.667 36.1362 li
@
731.468 36.1362 mo
733.468 36.1362 li
@
398.667 10.916 mo
400.667 10.916 li
@
731.468 10.916 mo
733.468 10.916 li
@
1 lw
2 lc
398.667 237.896 mo
733.468 237.896 li
733.468 8.93506 li
398.667 8.93506 li
398.667 237.896 li
@
50.4302 237.416 mo
50.4302 8.45703 li
385.23 8.45703 li
385.23 237.416 li
50.4302 237.416 li
cp
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
50.4302 237.416 mo
50.4302 8.45703 li
385.23 8.45703 li
385.23 237.416 li
50.4302 237.416 li
cp
.75021 .679683 .670222 .90164 cmyk
@
51.0122 200.357 mo
51.5947 201.125 li
52.1768 201.887 li
52.7593 202.645 li
53.3413 203.396 li
53.9238 204.145 li
54.5059 204.887 li
55.0884 205.623 li
55.6704 206.357 li
56.2529 207.086 li
56.835 207.809 li
57.4175 208.527 li
57.9995 209.242 li
58.582 209.953 li
59.1641 210.658 li
59.7466 211.359 li
60.3286 212.057 li
60.9106 212.75 li
61.4932 213.438 li
62.0752 214.121 li
62.6577 214.803 li
63.2397 215.479 li
63.8223 216.148 li
64.4043 216.816 li
64.9868 217.48 li
65.5688 218.141 li
66.1514 218.795 li
66.7334 219.447 li
67.3159 220.096 li
67.8979 220.738 li
68.4805 221.379 li
69.0625 222.016 li
69.645 222.648 li
70.2271 223.277 li
70.8091 223.902 li
71.3916 224.523 li
3.0518e-05 .993988 1 3.0518e-05 cmyk
@
51.0122 137.605 mo
51.5947 138.668 li
52.1768 139.723 li
52.7593 140.771 li
53.3413 141.813 li
53.9238 142.848 li
54.5059 143.875 li
55.0884 144.896 li
55.6704 145.912 li
56.2529 146.92 li
56.835 147.922 li
57.4175 148.918 li
57.9995 149.908 li
58.582 150.891 li
59.1641 151.867 li
59.7466 152.838 li
60.3286 153.803 li
60.9106 154.764 li
61.4932 155.715 li
62.0752 156.662 li
62.6577 157.604 li
63.2397 158.541 li
63.8223 159.471 li
64.4043 160.395 li
64.9868 161.313 li
65.5688 162.227 li
66.1514 163.135 li
66.7334 164.037 li
67.3159 164.934 li
67.8979 165.824 li
68.4805 166.711 li
69.0625 167.592 li
69.645 168.469 li
70.2271 169.338 li
70.8091 170.205 li
71.3916 171.064 li
71.9736 171.92 li
72.5562 172.771 li
73.1382 173.617 li
73.7207 174.457 li
74.3027 175.293 li
74.8853 176.125 li
75.4673 176.951 li
76.0498 177.771 li
76.6318 178.59 li
77.2144 179.402 li
77.7964 180.209 li
78.3789 181.014 li
78.9609 181.813 li
79.5435 182.605 li
80.1255 183.396 li
80.7075 184.182 li
81.29 184.963 li
81.8721 185.74 li
82.4546 186.512 li
83.0366 187.281 li
83.6191 188.045 li
84.2012 188.805 li
84.7837 189.561 li
85.3657 190.313 li
85.9482 191.061 li
86.5303 191.805 li
87.1128 192.543 li
87.6948 193.279 li
88.2773 194.012 li
88.8594 194.738 li
89.4419 195.463 li
90.0239 196.184 li
90.606 196.9 li
91.1885 197.611 li
91.7705 198.32 li
92.353 199.027 li
92.9351 199.729 li
93.5176 200.426 li
94.0996 201.121 li
94.6821 201.811 li
95.2642 202.498 li
95.8467 203.182 li
96.4287 203.861 li
97.0112 204.539 li
97.5933 205.211 li
98.1758 205.881 li
98.7578 206.549 li
99.3403 207.211 li
99.9224 207.871 li
100.504 208.527 li
101.087 209.18 li
101.669 209.83 li
102.251 210.477 li
102.833 211.121 li
103.416 211.76 li
103.998 212.398 li
104.581 213.031 li
105.163 213.662 li
105.745 214.291 li
106.327 214.914 li
106.91 215.537 li
107.492 216.156 li
108.074 216.771 li
108.656 217.383 li
109.239 217.994 li
109.821 218.6 li
110.403 219.205 li
110.985 219.805 li
111.567 220.404 li
112.15 221 li
112.732 221.592 li
113.314 222.182 li
113.896 222.768 li
114.479 223.354 li
115.061 223.934 li
115.644 224.514 li
@
51.0122 74.8535 mo
51.5947 76.21 li
52.1768 77.5586 li
52.7593 78.8975 li
53.3413 80.2285 li
53.9238 81.5508 li
54.5059 82.8643 li
55.0884 84.1699 li
55.6704 85.4668 li
56.2529 86.7549 li
56.835 88.0352 li
57.4175 89.3076 li
57.9995 90.5723 li
58.582 91.8281 li
59.1641 93.0771 li
59.7466 94.3174 li
60.3286 95.5508 li
60.9106 96.7764 li
61.4932 97.9941 li
62.0752 99.2041 li
62.6577 100.407 li
63.2397 101.604 li
63.8223 102.791 li
64.4043 103.973 li
64.9868 105.146 li
65.5688 106.313 li
66.1514 107.473 li
66.7334 108.626 li
67.3159 109.771 li
67.8979 110.911 li
68.4805 112.043 li
69.0625 113.17 li
69.645 114.288 li
70.2271 115.4 li
70.8091 116.507 li
71.3916 117.606 li
71.9736 118.699 li
72.5562 119.787 li
73.1382 120.867 li
73.7207 121.941 li
74.3027 123.01 li
74.8853 124.071 li
75.4673 125.127 li
76.0498 126.178 li
76.6318 127.221 li
77.2144 128.26 li
77.7964 129.291 li
78.3789 130.318 li
78.9609 131.339 li
79.5435 132.354 li
80.1255 133.363 li
80.7075 134.367 li
81.29 135.365 li
81.8721 136.357 li
82.4546 137.345 li
83.0366 138.326 li
83.6191 139.303 li
84.2012 140.274 li
84.7837 141.24 li
85.3657 142.201 li
85.9482 143.156 li
86.5303 144.106 li
87.1128 145.051 li
87.6948 145.992 li
88.2773 146.926 li
88.8594 147.857 li
89.4419 148.781 li
90.0239 149.701 li
90.606 150.617 li
91.1885 151.527 li
91.7705 152.434 li
92.353 153.336 li
92.9351 154.232 li
93.5176 155.123 li
94.0996 156.01 li
94.6821 156.893 li
95.2642 157.771 li
95.8467 158.645 li
96.4287 159.514 li
97.0112 160.379 li
97.5933 161.238 li
98.1758 162.094 li
98.7578 162.945 li
99.3403 163.793 li
99.9224 164.637 li
100.504 165.475 li
101.087 166.309 li
101.669 167.141 li
102.251 167.967 li
102.833 168.789 li
103.416 169.605 li
103.998 170.42 li
104.581 171.23 li
105.163 172.037 li
105.745 172.838 li
106.327 173.637 li
106.91 174.432 li
107.492 175.223 li
108.074 176.008 li
108.656 176.791 li
109.239 177.57 li
109.821 178.346 li
110.403 179.117 li
110.985 179.887 li
111.567 180.65 li
112.15 181.412 li
112.732 182.168 li
113.314 182.922 li
113.896 183.672 li
114.479 184.418 li
115.061 185.162 li
115.644 185.902 li
116.226 186.637 li
116.808 187.371 li
117.39 188.1 li
117.973 188.826 li
118.555 189.549 li
119.137 190.268 li
119.719 190.984 li
120.301 191.697 li
120.884 192.406 li
121.466 193.113 li
122.048 193.816 li
122.63 194.516 li
123.213 195.213 li
123.795 195.906 li
124.377 196.598 li
124.959 197.285 li
125.542 197.971 li
126.124 198.652 li
126.707 199.33 li
127.289 200.006 li
127.871 200.678 li
128.453 201.348 li
129.036 202.014 li
129.618 202.678 li
130.2 203.34 li
130.782 203.996 li
131.364 204.652 li
131.947 205.305 li
132.529 205.953 li
133.111 206.602 li
133.693 207.244 li
134.276 207.887 li
134.858 208.525 li
135.44 209.16 li
136.022 209.793 li
136.605 210.424 li
137.187 211.053 li
137.77 211.678 li
138.352 212.299 li
138.934 212.92 li
139.516 213.537 li
140.098 214.152 li
140.681 214.764 li
141.263 215.373 li
141.845 215.98 li
142.427 216.586 li
143.01 217.188 li
143.592 217.787 li
144.174 218.385 li
144.756 218.98 li
145.339 219.572 li
145.921 220.162 li
146.503 220.75 li
147.085 221.336 li
147.668 221.918 li
148.25 222.5 li
148.832 223.078 li
149.415 223.654 li
149.997 224.229 li
150.579 224.799 li
@
62.6577 8.89063 mo
63.2397 10.5029 li
63.8223 12.1045 li
64.4043 13.6963 li
64.9868 15.2783 li
65.5688 16.8516 li
66.1514 18.4141 li
66.7334 19.9688 li
67.3159 21.5137 li
67.8979 23.0488 li
68.4805 24.5742 li
69.0625 26.0918 li
69.645 27.6006 li
70.2271 29.0996 li
70.8091 30.5908 li
71.3916 32.0723 li
71.9736 33.5469 li
72.5562 35.0117 li
73.1382 36.4668 li
73.7207 37.916 li
74.3027 39.3555 li
74.8853 40.7871 li
75.4673 42.21 li
76.0498 43.625 li
76.6318 45.0322 li
77.2144 46.4316 li
77.7964 47.8223 li
78.3789 49.2061 li
78.9609 50.582 li
79.5435 51.9492 li
80.1255 53.3105 li
80.7075 54.6631 li
81.29 56.0078 li
81.8721 57.3457 li
82.4546 58.6768 li
83.0366 60 li
83.6191 61.3164 li
84.2012 62.625 li
84.7837 63.9268 li
85.3657 65.2217 li
85.9482 66.5098 li
86.5303 67.79 li
87.1128 69.0645 li
87.6948 70.3311 li
88.2773 71.5918 li
88.8594 72.8447 li
89.4419 74.0918 li
90.0239 75.332 li
90.606 76.5664 li
91.1885 77.793 li
91.7705 79.0146 li
92.353 80.2285 li
92.9351 81.4375 li
93.5176 82.6387 li
94.0996 83.835 li
94.6821 85.0244 li
95.2642 86.208 li
95.8467 87.3848 li
96.4287 88.5566 li
97.0112 89.7227 li
97.5933 90.8809 li
98.1758 92.0352 li
98.7578 93.1826 li
99.3403 94.3242 li
99.9224 95.4609 li
100.504 96.5918 li
101.087 97.7168 li
101.669 98.8359 li
102.251 99.9492 li
102.833 101.057 li
103.416 102.16 li
103.998 103.258 li
104.581 104.35 li
105.163 105.436 li
105.745 106.517 li
106.327 107.593 li
106.91 108.663 li
107.492 109.729 li
108.074 110.789 li
108.656 111.845 li
109.239 112.895 li
109.821 113.939 li
110.403 114.98 li
110.985 116.016 li
111.567 117.045 li
112.15 118.07 li
112.732 119.092 li
113.314 120.107 li
113.896 121.118 li
114.479 122.125 li
115.061 123.126 li
115.644 124.123 li
116.226 125.115 li
116.808 126.104 li
117.39 127.086 li
117.973 128.064 li
118.555 129.039 li
119.137 130.008 li
119.719 130.974 li
120.301 131.935 li
120.884 132.891 li
121.466 133.843 li
122.048 134.791 li
122.63 135.734 li
123.213 136.674 li
123.795 137.609 li
124.377 138.539 li
124.959 139.467 li
125.542 140.389 li
126.124 141.308 li
126.707 142.223 li
127.289 143.133 li
127.871 144.039 li
128.453 144.941 li
129.036 145.84 li
129.618 146.734 li
130.2 147.625 li
130.782 148.512 li
131.364 149.395 li
131.947 150.275 li
132.529 151.15 li
133.111 152.021 li
133.693 152.891 li
134.276 153.754 li
134.858 154.615 li
135.44 155.471 li
136.022 156.324 li
136.605 157.174 li
137.187 158.021 li
137.77 158.863 li
138.352 159.703 li
138.934 160.539 li
139.516 161.371 li
140.098 162.199 li
140.681 163.023 li
141.263 163.846 li
141.845 164.664 li
142.427 165.48 li
143.01 166.291 li
143.592 167.1 li
144.174 167.904 li
144.756 168.707 li
145.339 169.506 li
145.921 170.301 li
146.503 171.094 li
147.085 171.881 li
147.668 172.668 li
148.25 173.451 li
148.832 174.23 li
149.415 175.006 li
149.997 175.779 li
150.579 176.551 li
151.161 177.316 li
151.744 178.082 li
152.326 178.844 li
152.908 179.602 li
153.49 180.357 li
154.073 181.109 li
154.655 181.857 li
155.237 182.605 li
155.819 183.348 li
156.402 184.09 li
156.984 184.828 li
157.566 185.563 li
158.148 186.295 li
158.73 187.023 li
159.313 187.752 li
159.895 188.475 li
160.478 189.197 li
161.06 189.914 li
161.642 190.631 li
162.224 191.344 li
162.807 192.055 li
163.389 192.762 li
163.971 193.467 li
164.553 194.17 li
165.136 194.871 li
165.718 195.568 li
166.3 196.262 li
166.882 196.955 li
167.465 197.645 li
168.047 198.332 li
168.629 199.018 li
169.211 199.699 li
169.793 200.379 li
170.376 201.057 li
170.958 201.73 li
171.541 202.404 li
172.123 203.074 li
172.705 203.74 li
173.287 204.406 li
173.87 205.07 li
174.452 205.73 li
175.034 206.389 li
175.616 207.045 li
176.199 207.697 li
176.781 208.35 li
177.363 208.998 li
177.945 209.645 li
178.527 210.289 li
179.11 210.932 li
179.692 211.572 li
180.274 212.209 li
180.856 212.846 li
181.439 213.479 li
182.021 214.109 li
182.604 214.74 li
183.186 215.367 li
183.768 215.992 li
184.35 216.613 li
184.933 217.234 li
185.515 217.854 li
186.097 218.471 li
186.679 219.084 li
187.261 219.697 li
187.844 220.307 li
188.426 220.916 li
189.008 221.521 li
189.59 222.127 li
190.173 222.729 li
190.755 223.328 li
191.337 223.928 li
191.919 224.523 li
@
96.4287 8.73047 mo
97.0112 10.2334 li
97.5933 11.7295 li
98.1758 13.2188 li
98.7578 14.6992 li
99.3403 16.1719 li
99.9224 17.6387 li
100.504 19.0977 li
101.087 20.5488 li
101.669 21.9922 li
102.251 23.4297 li
102.833 24.8594 li
103.416 26.2822 li
103.998 27.6982 li
104.581 29.1074 li
105.163 30.5088 li
105.745 31.9043 li
106.327 33.293 li
106.91 34.6738 li
107.492 36.0488 li
108.074 37.417 li
108.656 38.7793 li
109.239 40.1338 li
109.821 41.4824 li
110.403 42.8242 li
110.985 44.1602 li
111.567 45.4902 li
112.15 46.8125 li
112.732 48.1289 li
113.314 49.4404 li
113.896 50.7441 li
114.479 52.043 li
115.061 53.3359 li
115.644 54.6221 li
116.226 55.9023 li
116.808 57.1768 li
117.39 58.4453 li
117.973 59.708 li
118.555 60.9648 li
119.137 62.2158 li
119.719 63.4609 li
120.301 64.7012 li
120.884 65.9355 li
121.466 67.1641 li
122.048 68.3867 li
122.63 69.6045 li
123.213 70.8164 li
123.795 72.0234 li
124.377 73.2246 li
124.959 74.4199 li
125.542 75.6104 li
126.124 76.7959 li
126.707 77.9756 li
127.289 79.1504 li
127.871 80.3203 li
128.453 81.4844 li
129.036 82.6445 li
129.618 83.7988 li
130.2 84.9473 li
130.782 86.0918 li
131.364 87.2314 li
131.947 88.3662 li
132.529 89.4961 li
133.111 90.6211 li
133.693 91.7402 li
134.276 92.8555 li
134.858 93.9668 li
135.44 95.0723 li
136.022 96.1738 li
136.605 97.2695 li
137.187 98.3613 li
137.77 99.4492 li
138.352 100.531 li
138.934 101.609 li
139.516 102.684 li
140.098 103.752 li
140.681 104.817 li
141.263 105.878 li
141.845 106.934 li
142.427 107.985 li
143.01 109.033 li
143.592 110.076 li
144.174 111.115 li
144.756 112.149 li
145.339 113.18 li
145.921 114.206 li
146.503 115.229 li
147.085 116.246 li
147.668 117.261 li
148.25 118.271 li
148.832 119.276 li
149.415 120.278 li
149.997 121.276 li
150.579 122.27 li
151.161 123.26 li
151.744 124.246 li
152.326 125.229 li
152.908 126.207 li
153.49 127.182 li
154.073 128.152 li
154.655 129.119 li
155.237 130.083 li
155.819 131.043 li
156.402 131.998 li
156.984 132.95 li
157.566 133.898 li
158.148 134.844 li
158.73 135.785 li
159.313 136.723 li
159.895 137.657 li
160.478 138.588 li
161.06 139.516 li
161.642 140.439 li
162.224 141.359 li
162.807 142.275 li
163.389 143.189 li
163.971 144.1 li
164.553 145.006 li
165.136 145.908 li
165.718 146.809 li
166.3 147.705 li
166.882 148.598 li
167.465 149.488 li
168.047 150.375 li
168.629 151.26 li
169.211 152.139 li
169.793 153.016 li
170.376 153.891 li
170.958 154.762 li
171.541 155.629 li
172.123 156.494 li
172.705 157.355 li
173.287 158.213 li
173.87 159.068 li
174.452 159.922 li
175.034 160.771 li
175.616 161.617 li
176.199 162.461 li
176.781 163.301 li
177.363 164.139 li
177.945 164.973 li
178.527 165.805 li
179.11 166.633 li
179.692 167.459 li
180.274 168.283 li
180.856 169.104 li
181.439 169.92 li
182.021 170.734 li
182.604 171.547 li
183.186 172.355 li
183.768 173.162 li
184.35 173.965 li
184.933 174.766 li
185.515 175.564 li
186.097 176.359 li
186.679 177.152 li
187.261 177.943 li
187.844 178.73 li
188.426 179.516 li
189.008 180.299 li
189.59 181.078 li
190.173 181.855 li
190.755 182.629 li
191.337 183.402 li
191.919 184.172 li
192.502 184.939 li
193.084 185.703 li
193.667 186.465 li
194.249 187.225 li
194.831 187.982 li
195.413 188.736 li
195.996 189.49 li
196.578 190.24 li
197.16 190.986 li
197.742 191.732 li
198.324 192.475 li
198.907 193.217 li
199.489 193.955 li
200.071 194.689 li
200.653 195.424 li
201.236 196.154 li
201.818 196.885 li
202.4 197.611 li
202.982 198.336 li
203.565 199.059 li
204.147 199.777 li
204.729 200.496 li
205.312 201.211 li
205.894 201.926 li
206.476 202.637 li
207.058 203.346 li
207.641 204.053 li
208.223 204.758 li
208.805 205.461 li
209.387 206.16 li
209.97 206.859 li
210.552 207.557 li
211.134 208.25 li
211.716 208.943 li
212.299 209.633 li
212.881 210.322 li
213.463 211.008 li
214.045 211.691 li
214.628 212.375 li
215.21 213.055 li
215.792 213.732 li
216.375 214.41 li
216.957 215.084 li
217.539 215.756 li
218.121 216.428 li
218.704 217.096 li
219.286 217.764 li
219.868 218.428 li
220.45 219.092 li
221.033 219.752 li
221.615 220.412 li
222.197 221.068 li
222.779 221.725 li
223.362 222.379 li
223.944 223.031 li
224.526 223.682 li
225.108 224.33 li
@
127.871 9.52148 mo
128.453 10.9766 li
129.036 12.4258 li
129.618 13.8691 li
130.2 15.3057 li
130.782 16.7363 li
131.364 18.1602 li
131.947 19.5781 li
132.529 20.9902 li
133.111 22.3965 li
133.693 23.7969 li
134.276 25.1914 li
134.858 26.5791 li
135.44 27.9609 li
136.022 29.3379 li
136.605 30.708 li
137.187 32.0723 li
137.77 33.4316 li
138.352 34.7852 li
138.934 36.1328 li
139.516 37.4746 li
140.098 38.8115 li
140.681 40.1426 li
141.263 41.4688 li
141.845 42.7881 li
142.427 44.1035 li
143.01 45.4121 li
143.592 46.7168 li
144.174 48.0146 li
144.756 49.3086 li
145.339 50.5957 li
145.921 51.8789 li
146.503 53.1563 li
147.085 54.4297 li
147.668 55.6973 li
148.25 56.959 li
148.832 58.2168 li
149.415 59.4688 li
149.997 60.7168 li
150.579 61.959 li
151.161 63.1963 li
151.744 64.4287 li
152.326 65.6563 li
152.908 66.8799 li
153.49 68.0977 li
154.073 69.3115 li
154.655 70.5205 li
155.237 71.7246 li
155.819 72.9238 li
156.402 74.1191 li
156.984 75.3086 li
157.566 76.4951 li
158.148 77.6758 li
158.73 78.8525 li
159.313 80.0254 li
159.895 81.1934 li
160.478 82.3555 li
161.06 83.5156 li
161.642 84.6699 li
162.224 85.8203 li
162.807 86.9658 li
163.389 88.1074 li
163.971 89.2451 li
164.553 90.3789 li
165.136 91.5078 li
165.718 92.6328 li
166.3 93.7529 li
166.882 94.8691 li
167.465 95.9824 li
168.047 97.0908 li
168.629 98.1953 li
169.211 99.2949 li
169.793 100.393 li
170.376 101.484 li
170.958 102.573 li
171.541 103.658 li
172.123 104.738 li
172.705 105.815 li
173.287 106.889 li
173.87 107.957 li
174.452 109.023 li
175.034 110.085 li
175.616 111.143 li
176.199 112.197 li
176.781 113.248 li
177.363 114.295 li
177.945 115.338 li
178.527 116.377 li
179.11 117.413 li
179.692 118.445 li
180.274 119.475 li
180.856 120.5 li
181.439 121.521 li
182.021 122.539 li
182.604 123.555 li
183.186 124.566 li
183.768 125.574 li
184.35 126.578 li
184.933 127.579 li
185.515 128.577 li
186.097 129.571 li
186.679 130.563 li
187.261 131.551 li
187.844 132.535 li
188.426 133.516 li
189.008 134.494 li
189.59 135.469 li
190.173 136.44 li
190.755 137.408 li
191.337 138.374 li
191.919 139.336 li
192.502 140.295 li
193.084 141.25 li
193.667 142.203 li
194.249 143.152 li
194.831 144.1 li
195.413 145.043 li
195.996 145.982 li
196.578 146.92 li
197.16 147.855 li
197.742 148.787 li
198.324 149.715 li
198.907 150.641 li
199.489 151.564 li
200.071 152.484 li
200.653 153.4 li
201.236 154.314 li
201.818 155.227 li
202.4 156.135 li
202.982 157.041 li
203.565 157.943 li
204.147 158.844 li
204.729 159.74 li
205.312 160.635 li
205.894 161.527 li
206.476 162.416 li
207.058 163.303 li
207.641 164.188 li
208.223 165.068 li
208.805 165.945 li
209.387 166.822 li
209.97 167.695 li
210.552 168.566 li
211.134 169.434 li
211.716 170.299 li
212.299 171.162 li
212.881 172.023 li
213.463 172.881 li
214.045 173.736 li
214.628 174.59 li
215.21 175.439 li
215.792 176.287 li
216.375 177.133 li
216.957 177.977 li
217.539 178.816 li
218.121 179.656 li
218.704 180.492 li
219.286 181.324 li
219.868 182.156 li
220.45 182.984 li
221.033 183.811 li
221.615 184.635 li
222.197 185.457 li
222.779 186.277 li
223.362 187.094 li
223.944 187.91 li
224.526 188.723 li
225.108 189.533 li
225.691 190.342 li
226.273 191.146 li
226.855 191.951 li
227.438 192.754 li
228.02 193.553 li
228.602 194.35 li
229.184 195.146 li
229.767 195.939 li
230.349 196.73 li
230.931 197.52 li
231.513 198.307 li
232.096 199.09 li
232.678 199.873 li
233.26 200.654 li
233.842 201.434 li
234.425 202.209 li
235.007 202.984 li
235.589 203.756 li
236.171 204.527 li
236.753 205.297 li
237.336 206.063 li
237.918 206.828 li
238.5 207.59 li
239.083 208.352 li
239.665 209.111 li
240.247 209.867 li
240.83 210.623 li
241.412 211.377 li
241.994 212.127 li
242.576 212.877 li
243.159 213.625 li
243.741 214.371 li
244.323 215.115 li
244.905 215.857 li
245.488 216.598 li
246.07 217.336 li
246.652 218.074 li
247.234 218.809 li
247.816 219.543 li
248.399 220.273 li
248.981 221.004 li
249.563 221.732 li
250.146 222.459 li
250.728 223.184 li
251.31 223.906 li
251.893 224.629 li
@
153.49 9.01465 mo
154.073 10.4707 li
154.655 11.9219 li
155.237 13.3662 li
155.819 14.8057 li
156.402 16.2393 li
156.984 17.668 li
157.566 19.0908 li
158.148 20.5078 li
158.73 21.9199 li
159.313 23.3262 li
159.895 24.7285 li
160.478 26.124 li
161.06 27.5146 li
161.642 28.9004 li
162.224 30.2813 li
162.807 31.6563 li
163.389 33.0254 li
163.971 34.3906 li
164.553 35.751 li
165.136 37.1055 li
165.718 38.4551 li
166.3 39.8008 li
166.882 41.1406 li
167.465 42.4756 li
168.047 43.8057 li
168.629 45.1309 li
169.211 46.4512 li
169.793 47.7676 li
170.376 49.0781 li
170.958 50.3848 li
171.541 51.6855 li
172.123 52.9824 li
172.705 54.2754 li
173.287 55.5625 li
173.87 56.8457 li
174.452 58.125 li
175.034 59.3984 li
175.616 60.668 li
176.199 61.9336 li
176.781 63.1934 li
177.363 64.4502 li
177.945 65.7021 li
178.527 66.9492 li
179.11 68.1924 li
179.692 69.4316 li
180.274 70.666 li
180.856 71.8965 li
181.439 73.123 li
182.021 74.3438 li
182.604 75.5625 li
183.186 76.7754 li
183.768 77.9854 li
184.35 79.1914 li
184.933 80.3926 li
185.515 81.5898 li
186.097 82.7832 li
186.679 83.9727 li
187.261 85.1572 li
187.844 86.3389 li
188.426 87.5156 li
189.008 88.6895 li
189.59 89.8594 li
190.173 91.0254 li
190.755 92.1875 li
191.337 93.3457 li
191.919 94.5 li
192.502 95.6504 li
193.084 96.7969 li
193.667 97.9414 li
194.249 99.0801 li
194.831 100.217 li
195.413 101.349 li
195.996 102.477 li
196.578 103.602 li
197.16 104.724 li
197.742 105.842 li
198.324 106.955 li
198.907 108.066 li
199.489 109.174 li
200.071 110.277 li
200.653 111.378 li
201.236 112.475 li
201.818 113.568 li
202.4 114.658 li
202.982 115.746 li
203.565 116.829 li
204.147 117.909 li
204.729 118.986 li
205.312 120.06 li
205.894 121.13 li
206.476 122.197 li
207.058 123.261 li
207.641 124.321 li
208.223 125.379 li
208.805 126.433 li
209.387 127.484 li
209.97 128.531 li
210.552 129.576 li
211.134 130.618 li
211.716 131.656 li
212.299 132.692 li
212.881 133.725 li
213.463 134.754 li
214.045 135.781 li
214.628 136.805 li
215.21 137.825 li
215.792 138.843 li
216.375 139.857 li
216.957 140.869 li
217.539 141.878 li
218.121 142.884 li
218.704 143.887 li
219.286 144.887 li
219.868 145.885 li
220.45 146.879 li
221.033 147.871 li
221.615 148.859 li
222.197 149.846 li
222.779 150.83 li
223.362 151.811 li
223.944 152.789 li
224.526 153.764 li
225.108 154.736 li
225.691 155.707 li
226.273 156.674 li
226.855 157.639 li
227.438 158.602 li
228.02 159.561 li
228.602 160.518 li
229.184 161.471 li
229.767 162.424 li
230.349 163.373 li
230.931 164.32 li
231.513 165.264 li
232.096 166.205 li
232.678 167.145 li
233.26 168.082 li
233.842 169.016 li
234.425 169.949 li
235.007 170.877 li
235.589 171.805 li
236.171 172.73 li
236.753 173.652 li
237.336 174.572 li
237.918 175.49 li
238.5 176.406 li
239.083 177.318 li
239.665 178.229 li
240.247 179.139 li
240.83 180.045 li
241.412 180.947 li
241.994 181.85 li
242.576 182.75 li
243.159 183.646 li
243.741 184.541 li
244.323 185.436 li
244.905 186.326 li
245.488 187.215 li
246.07 188.102 li
246.652 188.984 li
247.234 189.867 li
247.816 190.748 li
248.399 191.625 li
248.981 192.502 li
249.563 193.375 li
250.146 194.248 li
250.728 195.117 li
251.31 195.984 li
251.893 196.852 li
252.475 197.715 li
253.057 198.576 li
253.639 199.438 li
254.222 200.295 li
254.804 201.15 li
255.386 202.004 li
255.968 202.857 li
256.55 203.707 li
257.133 204.557 li
257.715 205.402 li
258.297 206.246 li
258.879 207.09 li
259.462 207.932 li
260.044 208.77 li
260.626 209.607 li
261.208 210.443 li
261.791 211.277 li
262.373 212.109 li
262.956 212.939 li
263.538 213.768 li
264.12 214.594 li
264.702 215.42 li
265.285 216.242 li
265.867 217.064 li
266.449 217.885 li
267.031 218.703 li
267.613 219.52 li
268.196 220.334 li
268.778 221.148 li
269.36 221.961 li
269.942 222.77 li
270.525 223.578 li
271.107 224.387 li
@
201.818 9.42383 mo
202.4 10.9688 li
202.982 12.5078 li
203.565 14.043 li
204.147 15.5732 li
204.729 17.0986 li
205.312 18.6191 li
205.894 20.1357 li
206.476 21.6475 li
207.058 23.1543 li
207.641 24.6563 li
208.223 26.1543 li
208.805 27.6484 li
209.387 29.1367 li
209.97 30.6211 li
210.552 32.1016 li
211.134 33.5781 li
211.716 35.0488 li
212.299 36.5156 li
212.881 37.9785 li
213.463 39.4375 li
214.045 40.8916 li
214.628 42.3418 li
215.21 43.7871 li
215.792 45.2285 li
216.375 46.666 li
216.957 48.0996 li
217.539 49.5293 li
218.121 50.9531 li
218.704 52.375 li
219.286 53.792 li
219.868 55.2051 li
220.45 56.6133 li
221.033 58.0195 li
221.615 59.4199 li
222.197 60.8174 li
222.779 62.2109 li
223.362 63.5996 li
223.944 64.9854 li
224.526 66.3672 li
225.108 67.7461 li
225.691 69.1191 li
226.273 70.4902 li
226.855 71.8574 li
227.438 73.2197 li
228.02 74.5791 li
228.602 75.9355 li
229.184 77.2871 li
229.767 78.6357 li
230.349 79.9805 li
230.931 81.3223 li
231.513 82.6592 li
232.096 83.9941 li
232.678 85.3242 li
233.26 86.6514 li
233.842 87.9746 li
234.425 89.2959 li
235.007 90.6123 li
235.589 91.9258 li
236.171 93.2363 li
236.753 94.543 li
237.336 95.8457 li
237.918 97.1465 li
238.5 98.4434 li
239.083 99.7363 li
239.665 101.027 li
240.247 102.314 li
240.83 103.598 li
241.412 104.879 li
241.994 106.156 li
242.576 107.431 li
243.159 108.701 li
243.741 109.97 li
244.323 111.234 li
244.905 112.497 li
245.488 113.756 li
246.07 115.012 li
246.652 116.265 li
247.234 117.514 li
247.816 118.762 li
248.399 120.006 li
248.981 121.246 li
249.563 122.484 li
250.146 123.719 li
250.728 124.951 li
251.31 126.182 li
251.893 127.408 li
252.475 128.632 li
253.057 129.853 li
253.639 131.07 li
254.222 132.286 li
254.804 133.499 li
255.386 134.709 li
255.968 135.916 li
256.55 137.121 li
257.133 138.322 li
257.715 139.521 li
258.297 140.719 li
258.879 141.912 li
259.462 143.104 li
260.044 144.293 li
260.626 145.479 li
261.208 146.662 li
261.791 147.844 li
262.373 149.023 li
262.956 150.199 li
263.538 151.373 li
264.12 152.545 li
264.702 153.713 li
265.285 154.879 li
265.867 156.043 li
266.449 157.205 li
267.031 158.365 li
267.613 159.521 li
268.196 160.676 li
268.778 161.828 li
269.36 162.979 li
269.942 164.127 li
270.525 165.271 li
271.107 166.416 li
271.689 167.557 li
272.271 168.695 li
272.854 169.832 li
273.436 170.967 li
274.019 172.1 li
274.601 173.23 li
275.183 174.357 li
275.765 175.484 li
276.347 176.609 li
276.93 177.73 li
277.512 178.85 li
278.094 179.969 li
278.676 181.084 li
279.259 182.199 li
279.841 183.311 li
280.423 184.42 li
281.005 185.529 li
281.588 186.635 li
282.17 187.74 li
282.752 188.842 li
283.334 189.943 li
283.917 191.041 li
284.499 192.139 li
285.082 193.234 li
285.664 194.326 li
286.246 195.418 li
286.828 196.508 li
287.41 197.598 li
287.993 198.684 li
288.575 199.768 li
289.157 200.852 li
289.739 201.934 li
290.322 203.014 li
290.904 204.092 li
291.486 205.168 li
292.068 206.242 li
292.651 207.316 li
293.233 208.389 li
293.815 209.459 li
294.397 210.527 li
294.98 211.596 li
295.562 212.662 li
296.144 213.727 li
296.727 214.789 li
297.309 215.852 li
297.891 216.912 li
298.473 217.971 li
299.056 219.029 li
299.638 220.086 li
300.22 221.141 li
300.802 222.195 li
301.385 223.248 li
301.967 224.299 li
@
234.425 8.64258 mo
235.007 10.3467 li
235.589 12.0469 li
236.171 13.7422 li
236.753 15.4336 li
237.336 17.1201 li
237.918 18.8027 li
238.5 20.4805 li
239.083 22.1543 li
239.665 23.8242 li
240.247 25.4902 li
240.83 27.1523 li
241.412 28.8086 li
241.994 30.4629 li
242.576 32.1113 li
243.159 33.7568 li
243.741 35.3975 li
244.323 37.0352 li
244.905 38.668 li
245.488 40.2969 li
246.07 41.9219 li
246.652 43.543 li
247.234 45.1611 li
247.816 46.7744 li
248.399 48.3848 li
248.981 49.9902 li
249.563 51.5928 li
250.146 53.1914 li
250.728 54.7861 li
251.31 56.377 li
251.893 57.9648 li
252.475 59.5479 li
253.057 61.1279 li
253.639 62.7051 li
254.222 64.2773 li
254.804 65.8477 li
255.386 67.4131 li
255.968 68.9746 li
256.55 70.5342 li
257.133 72.0898 li
257.715 73.6416 li
258.297 75.1895 li
258.879 76.7354 li
259.462 78.2773 li
260.044 79.8154 li
260.626 81.3516 li
261.208 82.8828 li
261.791 84.4121 li
262.373 85.9375 li
262.956 87.459 li
263.538 88.9785 li
264.12 90.4941 li
264.702 92.0068 li
265.285 93.5156 li
265.867 95.0225 li
266.449 96.5254 li
267.031 98.0264 li
267.613 99.5234 li
268.196 101.018 li
268.778 102.51 li
269.36 103.998 li
269.942 105.483 li
270.525 106.966 li
271.107 108.445 li
271.689 109.922 li
272.271 111.396 li
272.854 112.867 li
273.436 114.336 li
274.019 115.801 li
274.601 117.264 li
275.183 118.725 li
275.765 120.182 li
276.347 121.637 li
276.93 123.088 li
277.512 124.537 li
278.094 125.984 li
278.676 127.429 li
279.259 128.87 li
279.841 130.309 li
280.423 131.746 li
281.005 133.18 li
281.588 134.611 li
282.17 136.041 li
282.752 137.468 li
283.334 138.893 li
283.917 140.314 li
284.499 141.733 li
285.082 143.15 li
285.664 144.566 li
286.246 145.979 li
286.828 147.389 li
287.41 148.797 li
287.993 150.203 li
288.575 151.607 li
289.157 153.01 li
289.739 154.408 li
290.322 155.807 li
290.904 157.201 li
291.486 158.596 li
292.068 159.986 li
292.651 161.375 li
293.233 162.764 li
293.815 164.148 li
294.397 165.531 li
294.98 166.914 li
295.562 168.293 li
296.144 169.67 li
296.727 171.047 li
297.309 172.422 li
297.891 173.793 li
298.473 175.164 li
299.056 176.533 li
299.638 177.9 li
300.22 179.266 li
300.802 180.631 li
301.385 181.992 li
301.967 183.354 li
302.549 184.713 li
303.131 186.07 li
303.714 187.426 li
304.296 188.781 li
304.878 190.135 li
305.46 191.486 li
306.042 192.836 li
306.625 194.186 li
307.207 195.533 li
307.79 196.881 li
308.372 198.225 li
308.954 199.57 li
309.536 200.912 li
310.119 202.254 li
310.701 203.594 li
311.283 204.934 li
311.865 206.273 li
312.448 207.609 li
313.03 208.947 li
313.612 210.281 li
314.194 211.617 li
314.777 212.949 li
315.359 214.283 li
315.941 215.615 li
316.523 216.945 li
317.105 218.275 li
317.688 219.605 li
318.27 220.936 li
318.853 222.264 li
319.435 223.592 li
@
299.638 9.16016 mo
300.22 11.7666 li
300.802 14.3711 li
301.385 16.9717 li
301.967 19.5693 li
302.549 22.1641 li
303.131 24.7559 li
303.714 27.3457 li
304.296 29.9316 li
304.878 32.5156 li
305.46 35.0957 li
306.042 37.6738 li
306.625 40.25 li
307.207 42.8232 li
307.79 45.3945 li
308.372 47.9619 li
308.954 50.5283 li
309.536 53.0918 li
310.119 55.6533 li
310.701 58.2129 li
311.283 60.7695 li
311.865 63.3242 li
312.448 65.8779 li
313.03 68.4297 li
313.612 70.9785 li
314.194 73.5264 li
314.777 76.0723 li
315.359 78.6172 li
315.941 81.1602 li
316.523 83.7012 li
317.105 86.2412 li
317.688 88.7793 li
318.27 91.3164 li
318.853 93.8535 li
319.435 96.3877 li
320.017 98.9219 li
320.599 101.455 li
321.182 103.987 li
321.764 106.519 li
322.346 109.049 li
322.928 111.579 li
323.511 114.108 li
324.093 116.638 li
324.675 119.166 li
325.257 121.694 li
325.839 124.223 li
326.422 126.751 li
327.004 129.279 li
327.586 131.808 li
328.168 134.336 li
328.751 136.865 li
329.333 139.395 li
329.916 141.924 li
330.498 144.455 li
331.08 146.986 li
331.662 149.52 li
332.245 152.053 li
332.827 154.586 li
333.409 157.123 li
333.991 159.66 li
334.574 162.199 li
335.156 164.74 li
335.738 167.281 li
336.32 169.826 li
336.902 172.373 li
337.485 174.922 li
338.067 177.473 li
338.649 180.027 li
339.231 182.584 li
339.814 185.145 li
340.396 187.707 li
340.979 190.275 li
341.561 192.846 li
342.143 195.42 li
342.725 197.998 li
343.308 200.58 li
343.89 203.168 li
344.472 205.76 li
345.054 208.355 li
345.636 210.959 li
346.219 213.566 li
346.801 216.18 li
347.383 218.799 li
347.965 221.426 li
348.548 224.061 li
@
321.182 11.2988 mo
321.764 14.7334 li
322.346 18.168 li
322.928 21.6016 li
323.511 25.0342 li
324.093 28.4668 li
324.675 31.8984 li
325.257 35.3301 li
325.839 38.7617 li
326.422 42.1924 li
327.004 45.623 li
327.586 49.0547 li
328.168 52.4863 li
328.751 55.918 li
329.333 59.3516 li
329.916 62.7852 li
330.498 66.2188 li
331.08 69.6543 li
331.662 73.0918 li
332.245 76.5293 li
332.827 79.9697 li
333.409 83.4111 li
333.991 86.8545 li
334.574 90.3008 li
335.156 93.748 li
335.738 97.1992 li
336.32 100.652 li
336.902 104.107 li
337.485 107.567 li
338.067 111.03 li
338.649 114.496 li
339.231 117.967 li
339.814 121.441 li
340.396 124.92 li
340.979 128.403 li
341.561 131.892 li
342.143 135.385 li
342.725 138.885 li
343.308 142.389 li
343.89 145.9 li
344.472 149.418 li
345.054 152.941 li
345.636 156.473 li
346.219 160.012 li
346.801 163.561 li
347.383 167.115 li
347.965 170.68 li
348.548 174.254 li
349.13 177.838 li
349.712 181.432 li
350.294 185.037 li
350.877 188.652 li
351.459 192.281 li
352.042 195.924 li
352.624 199.578 li
353.206 203.246 li
353.788 206.93 li
354.371 210.629 li
354.953 214.346 li
355.535 218.078 li
356.117 221.83 li
@
50.4302 212.195 mo
385.23 212.195 li
.75021 .679683 .670222 .90164 cmyk
@
50.4302 175.168 mo
385.23 175.168 li
@
50.4302 142.854 mo
385.23 142.854 li
@
50.4302 105.023 mo
385.23 105.023 li
@
50.4302 67.1934 mo
385.23 67.1934 li
@
50.4302 29.3633 mo
385.23 29.3633 li
@
.5 lw
0 lc
94.0996 237.416 mo
94.0996 233.416 li
@
94.0996 12.457 mo
94.0996 8.45703 li
@
COSIAA+ComicSansMS*1 [12 0 0 -12 0 0 ]msf86.5996 249.419 mo(100)sh152.326 237.416 mo
152.326 233.416 li
@
152.326 12.457 mo
152.326 8.45703 li
@
COSIAA+ComicSansMS*1 [12 0 0 -12 0 0 ]msf143.826 249.419 mo(200)sh210.552 237.416 mo
210.552 233.416 li
@
210.552 12.457 mo
210.552 8.45703 li
@
COSIAA+ComicSansMS*1 [12 0 0 -12 0 0 ]msf202.052 249.419 mo(300)sh268.778 237.416 mo
268.778 233.416 li
@
268.778 12.457 mo
268.778 8.45703 li
@
COSIAA+ComicSansMS*1 [12 0 0 -12 0 0 ]msf260.278 249.419 mo(400)sh327.004 237.416 mo
327.004 233.416 li
@
327.004 12.457 mo
327.004 8.45703 li
@
COSIAA+ComicSansMS*1 [12 0 0 -12 0 0 ]msf318.48 249.513 mo(500)sh376.73 249.419 mo(600)shCOSIAA+ComicSansMS*1 [14 0 0 -14 0 0 ]msf139.83 268.899 mo(Temperature \()shCOSIAA+ComicSansMS*1 [8.162 0 0 -8.162 0 0 ]msf234.521 264.237 mo(o)shCOSIAA+ComicSansMS*1 [14 0 0 -14 0 0 ]msf238.813 268.899 mo(C\))[8.43555 0 ]xshCOSIAA+ComicSansMS*1 [12 0 0 -12 0 0 ]msf20.6333 241.419 mo(10)[5.40234 0 ]xsh34.5332 237.419 mo(0)sh50.4302 212.195 mo
54.4302 212.195 li
@
381.23 212.195 mo
385.23 212.195 li
@
COSIAA+ComicSansMS*1 [12 0 0 -12 0 0 ]msf20.6958 216.198 mo(10)[5.40234 0 ]xsh34.5957 212.198 mo(2)sh50.4302 186.977 mo
54.4302 186.977 li
@
381.23 186.977 mo
385.23 186.977 li
@
COSIAA+ComicSansMS*1 [12 0 0 -12 0 0 ]msf20.5552 190.979 mo(10)[5.40234 0 ]xsh34.4551 186.979 mo(4)sh50.4302 161.756 mo
54.4302 161.756 li
@
381.23 161.756 mo
385.23 161.756 li
@
COSIAA+ComicSansMS*1 [12 0 0 -12 0 0 ]msf20.7896 165.759 mo(10)[5.40234 0 ]xsh34.6895 161.759 mo(6)sh50.4302 136.537 mo
54.4302 136.537 li
@
381.23 136.537 mo
385.23 136.537 li
@
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginCOSIAA+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/eight <1C60D8A8C9B7D98F6D411A3FBF3E1364E3BEC4A5E775ACA412F07D5A94C3BEF77D5E53216BEB0522A622C88CA1692970DDC6947BF81796DD7CCB824FA7EE90A4943F8AE44614C58C7911AB9D28D9C0B88A93C3B727D580C159061F84BE60E69517D9839A4A451A2414216CE43B99EFB70961552191831694714DDE8DDC8255990930E16813418A900FE62548470B5CC1B3B6A98598E41570742E202830AFBD33243EC6ABB72886024764019A44EA984D8DED1FCBB31F0E230348D3C16A805BC89F2756CA3905F9B19C15A371AF432FD6D69D1C4299F3A5FC90ECA58C45C9> |-systemdict /gcheck known {setglobal} if end {end} ifendCOSIAA+ComicSansMS /Encoding getdup 56 /eight putpop%ADOEndSubsetFont
/COSIAA+ComicSansMS*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one /two /three /four /five /six /seven /eight 10{/.notdef}rp /C 3{/.notdef}rp /G 5{/.notdef}rp /M 6{/.notdef}rp /T 12{/.notdef}rp /a 3{/.notdef}rp /e 2{/.notdef}rp /h 2{/.notdef}rp /k /.notdef /m /.notdef /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]COSIAA+ComicSansMS nfCOSIAA+ComicSansMS*1 [12 0 0 -12 0 0 ]msf21.1802 140.54 mo(10)[5.40234 0 ]xsh35.0801 136.54 mo(8)sh50.4302 111.317 mo
54.4302 111.317 li
@
381.23 111.317 mo
385.23 111.317 li
@
COSIAA+ComicSansMS*1 [12 0 0 -12 0 0 ]msf17.2896 115.319 mo(10)[5.40234 0 ]xsh31.1895 111.319 mo(10)[5.40234 0 ]xsh50.4302 86.0977 mo
54.4302 86.0977 li
@
381.23 86.0977 mo
385.23 86.0977 li
@
COSIAA+ComicSansMS*1 [12 0 0 -12 0 0 ]msf17.1802 90.1006 mo(10)[5.40234 0 ]xsh31.0801 86.1006 mo(12)[5.40234 0 ]xsh50.4302 60.877 mo
54.4302 60.877 li
@
381.23 60.877 mo
385.23 60.877 li
@
COSIAA+ComicSansMS*1 [12 0 0 -12 0 0 ]msf17.1958 64.8799 mo(10)[5.40234 0 ]xsh31.0957 60.8799 mo(14)[5.40234 0 ]xsh50.4302 35.6582 mo
54.4302 35.6582 li
@
381.23 35.6582 mo
385.23 35.6582 li
@
COSIAA+ComicSansMS*1 [12 0 0 -12 0 0 ]msf17.2427 39.6592 mo(10)[5.40234 0 ]xsh31.1426 35.6592 mo(16)[5.40234 0 ]xsh50.4302 10.4375 mo
54.4302 10.4375 li
@
381.23 10.4375 mo
385.23 10.4375 li
@
COSIAA+ComicSansMS*1 [12 0 0 -12 0 0 ]msf17.4614 14.4404 mo(10)[5.40234 0 ]xsh31.3613 10.4404 mo(18)[5.40234 0 ]xsh50.4302 212.195 mo
52.4302 212.195 li
@
383.23 212.195 mo
385.23 212.195 li
@
50.4302 186.977 mo
52.4302 186.977 li
@
383.23 186.977 mo
385.23 186.977 li
@
50.4302 161.756 mo
52.4302 161.756 li
@
383.23 161.756 mo
385.23 161.756 li
@
50.4302 136.537 mo
52.4302 136.537 li
@
383.23 136.537 mo
385.23 136.537 li
@
50.4302 111.317 mo
52.4302 111.317 li
@
383.23 111.317 mo
385.23 111.317 li
@
50.4302 86.0977 mo
52.4302 86.0977 li
@
383.23 86.0977 mo
385.23 86.0977 li
@
50.4302 60.877 mo
52.4302 60.877 li
@
383.23 60.877 mo
385.23 60.877 li
@
50.4302 35.6582 mo
52.4302 35.6582 li
@
383.23 35.6582 mo
385.23 35.6582 li
@
50.4302 10.4375 mo
52.4302 10.4375 li
@
383.23 10.4375 mo
385.23 10.4375 li
@
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginCOSIAA+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/R <1C60D8A8C9B6699559421F03C3156FD8EA055B7CF36CC63867CEA507552DF000ADFFCCCA7355E525CDBEFF5F068702678190F4222B5C045B197B40B8D83593DA62427C27612B6B2AB09C4F9431042321EE893508AAAEAC5AA0233062887B12C86642E439498A4427C8B6E96402244A9DEB714EA21F1D08D940B3335D0A7759335582DCC87570AC1D46EBC5230DCC3C83F1FA484A290F72531475555A949024CA26AA01460EEFCA5617972EA8FA135B14B899313477DAE4FE3AF85806B96CC76A4776DE79BD94945AE8CF2CB5E13E2BA79EE4EBEA7CB5E9E682BB5F0B24F34F6DF78858E108A53FBD8DAA29F6E723A59B2D2DB122E030DE6B7B25643C43E78E254E3DD4> |-/c <1C60D8A8C9B7B9B9DE292882013E19E33F82B7ED3A5C89FE0A41E2745CE52BF345EF21317B06CEB633B4C461C86DB59ACA948BD5303B9C1ECB87024259662E6DE6401329C576CA7C717795A8221E64812E10D7279DA0C4ECEFC761695BC43E126B44B9576721BB314891B8E9D440D85A903F31586B4587EAE794E85616ED3F2F41CC7C8432421936554CA0D609EB4EA211DE1B1E7934AF872FDEE11CAF3B598B06E47B41> |-/d <1C60D8A8C9B7F000DE2C8396BDB351B4990D8D398AAE78675B97459FA78429037C4BA1F4D53EE5133D48D0684659BD3916AD44F9EF388C820B65831703EFEBCB54E84A08629938E7E1E9BD71B24EDF23DBE596C10C019E480A33F574EB4B56CE5524F79CCE926D853B8A82B0FC6533439ADAC617F645B18C65D98BB846B0DC1C7B681B7522D351F2F82B4E916C460C2918D70553B74A3820D6E276C27FBDBE6C2473D5769F6125482A622191509AEBF182367421867D352ED6C0E76416F79DC149E960E3968BEA79DBC1A9A96F0CC21F57FD172BDA58BC> |-/i <1C60D8A8C9B8524CA9FFF1D59707FAB92D69C69B7C857EED4D13A4787BF89B18996B1BFB164CA796A0EF07F1407DF3454BCAB96192B46A6EDEDC573AD74AE5EBB6C7E282C40345BC6C9BD822E381040AF84910E37D38B52009BFBA09050BADAEBC8553B469DC8708DC8B7D087E48B2E8AA99CA401E54F66DDB7E9923B974D88CDA4785FD295B41FC4A68D170B03EDBFBD3758274FE3E0C921CDB5782B906DFB9938B6191061DE008B5105239C6B4135C4008792AFAA4EA6826684C0C> |-/l <1C60D8A8C9B8581A5C985F5B74008F0E2CA964639DBBD35F5DD00E39B9E95E3CD2193CB410613D02E647955F9BDFF4F3308822726BABA78ABE406A4F243D0D7526BB93B898D78CB4E4A407748C335667C85BC7C5DB0D0060EEAC> |-/n <1C60D8A8C9B7B07F0BB93457D6C8288A70E0DB940B4E04FCB07C44C762FF75D1D950F6658944215ABDB8E09DA0C33F6809AFCF2421406F8688ABED2DEC4D49A55251B25C4373E5276DE26457B8215FA156A3918E62986142B216E3D126083708C5AB3D018A7C93A0546D1AE450568C33979D5D1886CAEE4F45CEF158C9F75F841729756DC86B9981305315BE025F34658A8B30DA9E4FC92E74778770409CEEBC81A51BD2DBFB108DC9287AA20C6C0FDC2D19D58643D88EB36209DAC3D913F6852F2F8B06C4883A03EE882CC27439C56A729CC60E3CAC44D3416B7B9356E70E374DD5228445902D99BC6E06C8C6558C> |-/x <1C60D8A8C9B7CDD8CD006085F13CE049720F8F64386EA1E5C059609969C3F216E81232ADD92E2C012DC66C436D4C04E098F4B4F6187C07D996CE8E0C94AD868E597CE4620EEB7AD4FAF1851648227A47A6A5573E05FA8304BCD4CEED579D661D39682C168B0520E8E4E29E543071322BB883B9842C5B0BE60328670B15722F9B92D511D00B6447C45920F346B6D588A0067D328636CB713208F653EE452760691DC7BCD37BA51AAE32384B6C6140A55F032C31D8FE27DCA6C3315E6F827507B3638FD4F29D> |-systemdict /gcheck known {setglobal} if end {end} ifendCOSIAA+ComicSansMS /Encoding getdup 82 /R putdup 99 /c putdup 100 /d putdup 105 /i putdup 108 /l putdup 110 /n putdup 120 /x putpop%ADOEndSubsetFont
/COSIAA+ComicSansMS*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one /two /three /four /five /six /seven /eight 10{/.notdef}rp /C 3{/.notdef}rp /G 5{/.notdef}rp /M 4{/.notdef}rp /R /.notdef /T 12{/.notdef}rp /a /.notdef /c /d /e 2{/.notdef}rp /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u 2{/.notdef}rp /x /y 134{/.notdef}rp]COSIAA+ComicSansMS nfCOSIAA+ComicSansMS*1 [0 -14 -14 0 0 0 ]msf12.1797 209.439 mo(Relaxation time \(seconds\))[-8.79785 -7.66992 -3.83496 -7.16406 -8.26465 -7.16406 -6.59668 -3.92383 -7.3623 -7.32813 -4.18359 -6.59668 -3.92383 -10.876 -7.66992 -4.18359 -5.12695 -6.81543 -7.66992 -7.19141 -7.3623 -7.32813 -8.22363 -6.81543 0 ]ysh1 lw
2 lc
50.4302 237.416 mo
385.23 237.416 li
385.23 8.45703 li
50.4302 8.45703 li
50.4302 237.416 li
@
75.0635 28.0928 mo
52.0635 28.0928 li
52.0635 9.09277 li
75.0635 9.09277 li
75.0635 28.0928 li
cp
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
423.2 29.0928 mo
400.2 29.0928 li
400.2 10.0928 li
423.2 10.0928 li
423.2 29.0928 li
cp
f
.75021 .679683 .670222 .90164 cmyk
COSIAA+ComicSansMS*1 [13 0 0 -13 0 0 ]msf57.5186 22.0967 mo(a\))[6.65234 0 ]xsh%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2009 Adobe System Incorporated. All rights reserved.systemdict beginCOSIAA+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/b <1C60D8A8C9B7CA6425CFEA7643A8DEBB5A06DC7605086653C2C486B6F4158198BD8053CFA2CF0B5746D9FD99FA76ED96704A3EE6AD5240E402B445EE535F8D30988D2BF1D277FECDEFAAF08DE0E8B511C56F4A81B9520ADA97B65EF70A3DA2FEDBA1CA8476F2464DBC51D59ED582B47C20AFEA363D12C1DF79765DCD8D8A76043722F8B425E1F7011ADD62634BA97617AA71C6A854B0F0CC686D37B26387C30ABB6C12591354F3ACB70299295B8E1528868221EC40C239E0BBA6645FF00A6753502A06D2C7D368BE1A45974809B92A1817D27F99B4A021556897221B8E32123B695D2F3CCFD1AED08823BA> |-systemdict /gcheck known {setglobal} if end {end} ifendCOSIAA+ComicSansMS /Encoding getdup 98 /b putpop%ADOEndSubsetFont
/COSIAA+ComicSansMS*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one /two /three /four /five /six /seven /eight 10{/.notdef}rp /C 3{/.notdef}rp /G 5{/.notdef}rp /M 4{/.notdef}rp /R /.notdef /T 12{/.notdef}rp /a /b /c /d /e 2{/.notdef}rp /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u 2{/.notdef}rp /x /y 134{/.notdef}rp]COSIAA+ComicSansMS nfCOSIAA+ComicSansMS*1 [13 0 0 -13 0 0 ]msf407.7 24.5967 mo(b\))[7.7124 0 ]xsh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/COSIAA+ComicSansMS*1 uf/COSIAA+ComicSansMS uf/ComicSansMS ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 11.0%%AI8_CreatorVersion: 14.0.0%%For: (Lisa Tauxe) ()%%Title: (pullaiah.eps)%%CreationDate: 9/4/09 1:35 PM%%Canvassize: 16383%AI9_DataStream%Gb",KLO/6s'(1/KhB=-f5c?TSKO?KgKG5%iD_sgPBJHa;?K^RV7WQO-VW@/dmWYtN"k]-;d:d,K)X3SnY/4^(mLI88_W:1X?@WC3%HdQMS0:n!g-"tH[E`E=Qr(N`=$HD(f(o.Qe'9G6j9[QfH]b1fQd7>7ja%e[R&O2l=KLprkc&._D7$shFMLSgi]usFu4_a:Hn\a>H%?[IK8X7NH>Kq"%aOE<5rFR$!um'<d?=C4b"_ZAXP9#R7=5.JFjk9e'E2;_%0_f.:"JIB5^Ti0hQoUFW")g@$p/mguboA-_bH9?fb%M%BNrcHk[Pb,>_V6h0`HWies?0-![(_DHt\j,$_t)8SPS1ej_eWA#'JmWi,Vq>Ob[(L$FHAGkR9V)J+rFP*&RR$UYgZ#VL`M?Uo&%E)Lm/VFMB<Bdl(TU_C#s*_fMJ"<Bi]7)aaW//Ho3,uVR(3)3dV37%U^i;]'3m-Y;%o?$?_0VUJh&6:O&]KZ*LiX&&M_SI'#OGm)R%A24lI$#UPH?FUpbJC-4/8s()G-XD1Wq''Fg%9pWH0`FS!hrl.RctE`6IZD?[10af,dX0*?pulHI\nM'$Kpe<4lJm35NuO:09R%\K%UA%R5(nlrCUEZ\Y?6U<@UZ4=`oS]GB@\FJg=JQ7DJNTaP';u4QW)9aP6%:R`-Rcnp,eBrhC%/D^kUPtjT_FW1"'6e9<;fTars?*3%iq#/p(9+4qO5d"!:H0=>;OR;nHnInUEGGPZUJX)t:*YW'83Fn.CYhC%_m)aSYJU=Q=84QV3=M[t8-D-:EVN5(i3QOMmRADi*JqS\%8-GMR,312n_;"%QGT9W#j)>`o6`PAN;T7Z9-fpag6(1a[d\KdV')72\W>).[?gnB$MFC'9/Admq,!7:i+UuK.;iZdViGFU-k8["K%+VYT9#sG(PneBrFSjst7(OSP!W"XPF.]AP1;t:?3"J:b[C':/*Di#.g?)SEa_A1Q+4s;;j-^$:8#X4s=n-sT8:/E:r-7L$76+u1i%dVp2]PM-6i-Ti_\,[>psng:=rTq9V+BHs>Uj\d$h.EEU,K)3;2j@!15e=&KE/I(*o$L0"H0]<@a([;6tE!<Wom15hBEju4DO:(7X%T;33YPRtQlntAHC#(U_cI\\kHoF\5n.`+-$0;R``HD$eT7EQo:9C5/G8:Q^*C*uS"e.1=^[3e\CIddZCLjVSg#Z&ORn-Ng%Fq0ia%fokb7cB/`qFA"A?abh?\5WOr@+q'Q?88Uuo:8fCB-fkuT!Td4;89H/a6Ro'WOumr]4=>W3Eh\siRRrt^hN/^:r(#gLd<>)@_^0#t%U0/,$'\Ok^/]k[MJ+0lj6^";sXXnHpBa:;%iZu1=E'p@"U/rh2j@e@*W%e4'DdjG1nW0Qh'BP_]7AJpIq'LS$([=KZTCP_U&d`T\%I$;<UP$BAu;V=Y3O($*CjdZ/_$KPCd-@ZLAbE=s02u+thaL1S5rke4JZ00JWn4D?!>YA/Z)qC"0(8EUE%ECF\7WV-JM1-7#%XmA%%X)DYhHRZpP(5cZ_oUUNA),?MbJ%\V1Cm]cl3^G,+ClDth$'sTa/<ba:aXBNMJ+ttX6Y2HgZueh7QMs6domQKlHCIg/<4rSP88kQc%T[`4FfpXuf)kp/-#/6t#BlUYKW?QJGd84>i%42B$+BM!dZnD1j\VBPu`,B[uUeDB'_LGMdL$lmu-V:CrN,j]2.G"ujS.bWd-h(,8%I#bt("]C\>o2+jGAP;bgM.41=i>T'Tc8Vo/K:H.Fb/(%5dM73QC^6\lE(Hu\K2Tk,PNXqQIcG`-5I(!eH*2R"qCbEuWbb:o#-Ku^%D5.e:M..4]\/#^:MO$Ma6nb?>a64@7-TE;9Qs]];J`e3tpfj:UF[)k;0AZd_0mfpJE_H)RPV(]G87BIDl"t90W$g(1lA[(rs.Srp%/a3nA#B<J$**ImcH:(Pe^6!^W3EKor;QDP3[?=`kH'=I&qQ7gCr$bgOVadRIEEUS^@VT$b`"WM@mkssZLi4Y/=V+6TBUYf'-E6J_%_+OB$CVONtU'e*JGU\r\=<F@Cb]oOPE`;U7Yt$'ne/*YBF/%6bl5`mT4).<W3jl]p&s?hSel7)[@VDMLl;f&H8q(Pl'W)m18`Z(+%W/?or=k5E1<lH.4f5[uhqF%0n<ErPf<*GjAn5JaXL_c\nP<(]mn)E1r['!jk#Zh3)`k@4r!gh0QWT3:CPE^^W8E+h+UlWGCiI)3j%(/fmO#2^g,\Qj03r0D.^WI9^0YD5bk\0f8uMEKM3>YN%&9oH(L0ls>P88U5i$bqd1Q;EoF/BBE?dqOL;V4Sr\Mn8p24r`I2Ncr+t%MW=]JT^V:0P18&KU0T(]ZF!$-RRUuAQRp64qSrL7n/VEnh?HsE3%`7Q&^McZ+SOVfJs4p$&^T"?-tl6#cjKDR9-Hp7qJD4@CFl^D%L8sl@merF6MY5M&g;Hm+e<VO1[?;m:R&G(@RiCCDJ'I8[K8EUWE`piQU=S'lWk\'W<l<0.HOF[Xr"e9.X*k/B+$ln&D+aWTp&9\P%J<[+k)j!07_`*O%#G#3(AJZT2:IX/5VFPnYq%b+9P'4]*i!/^07#DC9.-Wsn>k5fm4g!^d8U"N:VtDm3&J2F9P?9JUWU(r1W7sp?%XZDG@[arVG]b]kOi(E?cQ?jIFA#hI[OkHO"+(A,p.t3J\%o-h[dZu):M51d'B+\:a<;'D#\>gTIeBk_"PH0*<j]_2ae30eVMPW/u%W;:kcGc[S1(5t4B6F=pbSi2(TCMJc:89\m,?YWqFAaPhsb(<^tM>n0u4ZL<":!$&)WdQ!YSk.Z_BeepB1pXIK^WU2h4nk>(f34b=%DlY=JX*LSpE)H(f`!TuNXRaPVI]B!oH9"d"HKUZqpSVPj-146&>`S,p+Qb%LY2M,W>@?>[dTf45E%/)I)d-^bI1Ul]=\R5?)H[dJ%4h5I!EqR+s8P`_lY*sC%m8fJ[[DhMZ\":NFYifU6d#8??Tr#,R75cXKkeHmaC#TUlp6u`=i,n]BD/UP#H-KH>R22d`Q15I[OZCPC%JT&6'DgH=i,AYJkVkR.g5ru-sq.j/pR+(>kAF#''#1eBNR\F[u)X@TNL">R^VT4K1BaLIM>I:?/NKQ>N6hFl[;mQ'3q[h]"[YH$@%7?9)Oq/Pm^Z$5]:ej^+HNVaXPRXTW)f@l:^5![7^m"o8BXmnFEgfI*J3'hWpIOflGjIr&XN%C/pa7N4U,Af@2`=s=kJ*Lm(g8_*Z%"dL)c[k;,-H9[TolPQTKM(+QFdu5_9F"Z[X,,_ak)SO+QX.`g;'fj6f9&H.ajNPE:C93>R$_5p_@%4/f60]nEqblL,6s]#0'#W.D%Hhq&Jrf.oihi\2Dr"cEtU"4<3?UfB<23QJa$;)a^N?g(`eqNn)@LoQJH;RErp=&a&8hETX6ehJn8I`(2\dReM8u,#>*CR:6#N<:h%jcV53UU!=K/6d%PIqS7=CX8j,)U9jT-U`t/'^LQlMpD$QnLdRB4sPDO=G+Oh-'B%W`EVbY%(K%.'2@OpZHW[b[H^V.9O2GegJ^\b%EmGtim`7q[6k+6$0W!2I[2)\0"5cH1Z)rEZ]a#e%Cm$7g9?:?RI7't=>F'T3<CdJ=3fqb%AAuUu+dlJbq'es`DWm:_l:IslX1CdC%gM1(a24pe=LX;<'@aPTuO\/_*>>@V/'\XC?RH2\poLic9e8]#%RNe9Y'B1uG'MbE5)L^--B_knRg3Y;&GDSOR/YMb=[69WbJJE<*%A`Jb4&=&"8a/Z4-KDbGK\!PP(Vp.N5DN#j%,lZ#mOVhde`<o&0L_rK12X-:aHDp/*OV[n$]D%9Af(HipDsJi^<g7Or2Flc]162^E%V/[OF!Mif=PJlkqJ!AAH\)EpG)mR8)p-C-ogi9hl:C!eN'_iSRO]b.&%s"M8?,QWME_Xt4f;*iFcf#=QmXnHtCN,o'OT&#)8h:EL%N*5FQA]hq'!dS!r8lc9I:Sh5+4/^;3Oa0iL>Bu+p8^aTMK%0'9OtZ?OA@]YNj*GBb5#.OK'5>B>1N?YDY;-YP'_N3)e6Y^o-)(Cf%,0qFS[REm+;FN<8M"Oc9CSKjp["qN!C4h>`>G-o,7EI_+N_5V#Nft'^p:2H0j@X-?Lfb&5O-4cM_DP4DTo/>,M$]=E;@6t=#H7r)%*YnJj9+k"09&hNTTHq:0P7]?nSOlI)CVjUAl'#cNDu?EVcPKO#M^+Alr@B::IPr&;L\tI.*pO-8^N`kV).L/Z?9h:u+\"_X6cBPm%*=R_*:oVuJbk]W9HnapXTkc*F,BP<Jd3;.c34D_b1CuU*;/aPU*GR$;aSRQZGt6#Ia)="*4F*2n]unO%%S69qP%L@Z1Q^(EEV>F>%KVY0#ZkHHnM4A`U86M%M$^,V*,^"bUEnYE3hrf\i(D4a[Tap(+BK#%-+k0u@G@5u?W4a#Xq0?Z-&qC)5cObD4e/EPc6c:8O08`60%F[M_AoT(]iJ'LE&U"/6p/`AcZBTS,[N[OENh[;08d.M5-RXI6X>LVP?2B%Mj8g<Ns%mLP`(AcdGV0(/[7-O>hPgs0c_s^H<el`F?%6;#TkpVkR1(AnRjfq&%V*9."d$sOtS'1pfKdi+qsjL9HQ$#87,1AVC.eGNu8+7d+UE^_t(%u5cde9j/kFncM8)M8WU:&HJp-6OPn%/g;a_O73r$AAhrIWH:Gs`)k*0EjIk&CB+D[1JR$-PPhI/Zq-+@(;^2QMD[i")dhRj*223h<EKqG<,uZ0b*d?;5]BpXHIcuYGaUgE%JWe;C-]8iT&P%XSM.fKRRj!qlP)1\$esqm"B52ELP7sLL7+W^3[44D?hUa$l*D(7KcK:-Ll9\.gAqQ31D:/uj<_!.8(O2+Ee\MSY%<17L-,P8M`pKPLD1i+c+8.R(Xr]AVDU%]Od&mh^^49'!<(*c#VGD.*$<W(KCQ,]@$i%EH)+"Eq9#5%Bt;EkMfPEA</NG"CtZ@Pns%HOXE"2uZKr`sWW[6ri*=&s3`7$3.>F%FIU,1`5tK9$I=6'Fi]F'-KBY\"I0g_EfIsco7cho0I0E*V=Y$<1acB4bT]LUq>h5CG8"6%cG?ZWm$"Eqon`(Gp)I$](.-.S]!Fo'&u!kj^$rL%74K0aq;Juo7oN8^@$.2^RihD#4ZXL9`'Yfe+8%jnp13q1,2\iX`s=1[&8Q'[%?!qN`j(\osOrq*j!^/"@PK!01gm^8c9R"qIpM-i+k?_SQe8+4&'CV(,4n8fgHSP;R-hi4p_:37g?bHOi!F`/S/7tN$NQG]ZB<-G+%k:YW2G9Qp77N")]_YAFN(pmP2Qp>!k,L$2J8jTH$90a$fPB/Cc:`k6Mej7?T!/'HT8`\PCKlP"r^anm69Bk2c=CQt(bXRIHWp\BP%@!%-Nr=<oS7]UT?q;+LVWRusoQH"FE_oYkHUjNDi.!lIV@CeMcL&`X$rn_ep$TTpi&+PDFX1fFp/Sbd^N@\ZXW>\O4[)Z]6"U*Xf%rNeBCEP:P-*)9YGTb#&l\0^M#qf8!1IZP`rH_rYljIVlU%*ZH>oE><I2KA+#;WJ-lal\(LpYZ<Wa2f:<(OKjqL[bMp(:n7?pcZA:%<$.'\`Km*MpT>O;EHK-f5IMO=[d<Mp\i<2E^<j!3m7$b%pKl^nHX1afnJ8$L7%OP?:WBYp3ftK[2BZjtU([LJjMdknU"$cK]<0%k%rjIDBN;iq\9n/7SR)3))'k1u\Lbbq@(1&9RMWh4-s&od>CXD8R$E^^Q'<;@i@_C^\^E#rId9=Rf/')6lV6-MB(FV@fj"/^n-eLi7%WA&Tclo/JHJ&L(i,Mc(XbXG\]J1;GHItXV5,VsBs^a"l*n-<<I?7q?^]bp,cpe_U5qAam!A.?j5C/<+T&*rsX:aRs82)GNqkBe>D%?6l0lpW(I8X%AX:/1S!hq0Rc!E*YYX1(XY,1`i$@mkKF@,,p#QM]Ll^9%E`*itR%dP;Mo<kR=^fIL71g5?!\)StkiBj0+b&bGZ8Z%:AS%-\<,.UrL$6gZ-7-KP*tIt^Q^h$*:l'*1RrR$q5ta`81Aa.R%)[-4i#^!b!t3KE$,l?lEn-OlI7n1r[g,r=`VA[r<KIuOLHJ0%.pM\]8^Z":fiE5dq@?4U<3NWqbpT99erp!'*2[@#E4)>D74MnN*.M6I&2!oJV#:7cV6f$nre#RXIom.l_a3J#h%nIr8<ASnG!`Zc%CM7&+:EH7sG+)N*q9KsfAXB&)(&QaOf`'@M8L+qbBJL?/<L\II](8]Z2%gT%ZaGrSE*?,<5B\OKkF\mcZ6k:I`1e1;aW.ho(OU-r%[K3[4X6"R)"1itupZdrrd,FN?>lT'KO*[dTRY28;Dfq1(Zn3;t/a57YMSTQ[d\TPEG9Z"MUl*B!C@?I'T.]8Q[k3t!+8d&_M,[mp%nkM:_!um/4L6l)\]KKs8h7X<be?qg6[:S'$FHfOh-`-P?Bf*CV,to/9D5L;==@oPC>?[;00!rX)Ba_=Gk7:0@kjH\"s0eDp>U_/"%iU/!VqcpsAfqRCQ'+Q>qJ+7jprpTYhWB6KVg4S?l/fMI.9Z1s>lCp0(03WdQY;Ve8&78*aAY.VF[\g]fC,K0'>>"^;o,3ZBosE9:%lEY+5#GMMs8A+7`#=6baMg#_2"PnF"f'HTV8EO`L=j/6K?[/\n/i-UW*fhQkEZ1qJ`RagfeuULeZK-+A9P'b:<a'S:m_u!N)FDq]%L7]EQ<B9Fa/1rnleLB%0)__nT;O:LGg.9Z*]`Dm@eso6^b2Z$KA`E1KV"6`8C=t!+0j*\>BJ:D7X#0gF3TCmmTu;e7?C7FDUShQ/%.2#:-pNgkm;S[)Zr5EmB89Wai@;FZGpMRQD&1Oh]AT'IC-Jq]K'OHoHN[37<gWjal74eq#beNm[`Qgji2OM04Q.0=7(GAH*mOO>S%OO/.t6C7-nMnr``C,4C'<m-q,NM`g45;\Iuj\01hLQqcuo_12@@4?&TAi^;0q7i_'_?MGM68pmi9S]0'k%U^kd<Df>9Vu"dd3P+e%_(LSm>N@RJ[KfW!o6^g(SafCt-;MsOOjFoBE]M$,BcsI5cjtS/&iAbJa@-!G>B=IA(ofH-3=QOQmCK5..9!P&iu(;'e>\,(0FO%o%O*QS\odA56`3O8J$:MU>d3:Q:R764We'DF!AZ8JW'fPr*F^^Dq<R&6)m@`Gn(oIBU.;;IjesVK[3.>^IZ0oJ6cqjct$5Sda$BC4#%@pT:UVVYe;1!cURSd2kp9fD-SqNhpu&2dBpdMiT0qe=[i@)0e[Ch?\=:3hfb"tC)u2\!c-g5N>b8Z>9iC6:Ht$.q(=ZtEEnJK1C*%:%E`a1oE2P:W/c(bdQcs_-6+b6U<"0Pd)8@o@4cMP1<^'mOsDpeHE7Q!)/,7Z5cl4JM7_IfmG1c@bbbhJec0G[?tcq?K.d00!J_C%[S=WgZFqA,&Ks0.\\0*#2TA$bX(a6K>jAM%WDkR>Zq`/#&t2@m:/8gV/!Xr!lco5#9(gOW>@K"Jbq;4"oZ&G"g.6'(+`>T630(Gi%&LUPG'[(U#=aMhE[AMMH8K'lRmP**:AAjUK24mSjEskkhV<iiB@;g#KY'M9#?oRKg`M8)LAH"e@_S8M_0hF6nbQaNK9FNnTE7gT`%=#qU9]"_:53]+'1f$70=Lf]>=7qkALUo8k,K=Tdk5rrU+j,ash00%Nd&'L?e.8kr;\7aoZ5VbX511ZZF#m7GU9<d^!PjSP9Nli^$%81^56)efIM^U5Q!g*jm6P63:BVPW!9@[UsMBiS-e8?JcCd'M?REA?M$.&I!2(-5+dSuL)+N3-%u4)uRM(Gfj35i*eOf=Elm&N0.E%"MOWIJJ+`BI63/jr'Y"l1o!a&FCaUH_Jdrf\"PTJge2WL3h)P(N*Se+=RD(H=BS-?iFMp:3<g?]*X(fN(b,9P-I/hr-qHLsVY?H6%M#?4OHJNC6Y=[9+q5fQYP\P>n1mFFgS4#;B=!]!.kanspHCK&"i/b;.Q<"fb8`:sP2!eGV9M.O-EYVqad<u*d6^[C/WF2:em!CET%*U!4P?MUY%";Y?E*Nf70:YN&*=!^"o3\WOb..NP8_&.r<TS$Mk?-;P[!UU>3b[L#tN`@^N2.OgJPlZL<@L@%9fVn3iFjQ#Y6_]7-%HP3J2R"_TJP,ON-j^^dc4;GiNe#b\#A7m22jC#7j:Wk@Ah<T(h^U0G4X,4e5=jX0\2bn.PgGl;q(Gj5QX"8tTY07$/OqjJ%([7>4%"S^Gj^^;dgin7Hi`hIjmYSPmQbJaR=q3gtsT<4]/HCX_aB(A0?G>Il'\sZ2R7)IagT6?4aA`aEoXBb@+iT?ZEQa#nLn+==7$Icn<%N4EeENI6'KQARoI8'_ZH2ULM33&=N?B#`=:G91AOma&gqE^(eGqG93aKNte*5'-Jk6M'cAR!HE%q:JX'a(),P5L-$Jhf:%#7Bkc5%rL?AecD(%[3hp>SkeVnli=^u3m;UJ>:&9l#;8OLBDuJIdkJmfY0,,0JhrVfZ><R&YPIHJ0--+##&"*VX^4S@Zq+Tg\&IconPuP(e%4t/W/ptL10f$B(#b]=NJj`'<KoC,-pV//QBeqB\oA5ZmSG3K6s*NLlZ=PAJ]nbH'r?IAF621Om]Q^rX]2,XB*r$nLs>j!sZ07,dZ%2(g@]s&7i4T8cqL89>aZf)q8i?lGBfBW3;j\9s"Plq2?ffo92s9dQ?3^6@=HB/"@gatiYY;6SJp3:/uj;R-7)oVK8)k=]6N\Fh>^%+;ofUK\+dJ'OIS`\[(ft@b,r?<AI^S(Ji:6](C<dh4l>u'T;*!0*n!!U[[DW0>gcI.uijbjK<H+jO'I2kNG+#5'FHq2uKok.X[56%-&'(h`ECYV@lKNg_5u"\nFeZQdhV.e8];J"n_7)p2Crs9I%\[jX[H)?k1dDmm/GDVI5mWU>XiiN(<td2VgWgeC/h,b94+(:1k'C_%s*PR1'oGU,`C?Jk_d"@6D91X`mONQBNauloKnd-EVd`in&KQ9L@1-RAfB?-l>V6C[`i[D^gsO)1)qm.,?YWO6-nQ3<F1ZFc\.l2J%,Jnlm',O7]1[U@6<F:D<p:^`bAsPk7qA,V,mfLL_:+PK;Q`aGed.gU#F'r$^7sIg-O2cl[Q&ZB(iepI+:kq[mG'5PkE+Xf):?aM+%Cg:Z'qrGp/n#hTV7=oX@Fh!J'&'$8s\q[ap.;)Olr8=f.04[``I<l9BDj=P':fJ7=.*XNMn'HL=YgB\*EFi=PS+#ODN=3ulOX(=@%C$cIhbq:aGL-%RnjIO*EE'Rdo7AB8s(A\a7kR*=$0>?mHTr$@Z%`t*LY0Zq5`ChXl=Qk4qB9r<V\;;.?H?h%M9FF:Ts8/S4.)fp.%IIW'XBmsZ!BJo9_mIL7e@A3@Tdu70QC):`l=0In\Jm"edn@e]RBjBl@_4oe)GEYLM+q&IA5tt&=H<1TALLu6@_tVVNhPALsn,<,N%PJMr6>l)#qS@4JQ$iTj.jprem^.-"Yf+"o\Tao[js6@2qouLa+%2o(%&)NZh3i`"9*mG&R_B1^$=^3ArR'*UDH*?_Sb_h./QG*E?%P<tHJkJL<pJeZqmT9kg0OhMsG3>E;?02X.kA4^L<%l3#9`TRC=)@u'?D'%RUMM6MWN\uO15**RI@Sc$'dI*O&U=Iee0^G>Q5bY+!%4j?FBq0EV8:nalX;P3eH8Wc>84XIj@.'gt1?miit]5b+JgH9ne22-7g9]b=T$>#Mti>iY(>TA0c6;M<DTu,a;M[P5^8`'ZYFfjF6%>Xqq%B]SgRi^-SmK9o`BrITBb_QqQb*UQ):DpG"Obq+,VK#"b6G<T(RX*ZH_/L9.JG8IIGL//U;B/Y/2lC48*Fe_j5euX%&oGk7>%kBFKELFbPF0Pg&q4M`%9n8q68p+)capt-UJi26dB>T!p+laKL1jR)b*8`cNW`_Xp@SGDK+dZ*[ojH&]#bqmnVo7NJ$gXYfJL!LQ>%Qop@X>ig#7\&m*6cf(n#'DDOFkK0c;b3M'9H%W$*AP3b%PZr02i\0:]GHI30%R2i/fL=A4?d(^p:#7KB59(#_K#uK!s.^EL]]u*2%*4oakY7kimC]*nVmH<*fUZ=4VqY2q*bX/\Ye'X5o2$n[%8`Su0D`-3l?@M`or$"f.o$`YlHc[0EEieq)TBuFgSFPA3itXN1^ZLNJ%p;1a?m]WsF'99UEDS#Q`kLHQZgOaD8E>-IOGWbIP^\j<KS6b"d7dtNA#RS_q#k]jr2`Id"cV;++WB?]?+uA8OES`(Z;kAJ4a'=qr%;Yop-mUYT<)YR`jiHU?m3=`aG5"p_l@XD$,`AGm'$iRd(UN_a@4(#5.ld)XTd.9UPZLpY!i&p\noRD<Ii$/O%32`C^/],P\1+77S%P[P`Y+.&SO<]tZCH%cUtJVS-'r=818+7n)4Y!Fsb9KSYGV,8c=As";aZk,ItC7gdFJNO_eS@#tSoIBP=PY4jGq^b\?IigGrLRSP&%I8\6STe8+S6=[otA@@Ogb_1C/o]6Q,DEJPE'$nH$*d8deHWe2jarPhAHOVkG\kJ.?0GY$\ogs6,NPGTfj-c'c`a\n9Q,K@ng"gcF%U5WI'a@"uD;t:X^@&-7p'.8gYdAZH4DM,SHlMRE`MK`_RV]m`UUPBC\@)gAaQM/Sa6As(KkK^]p&C*4?Ak#qJgkd7ul^MF>L-RXP%o49_Q>LTZM?)25haXkY9ZaH'?4m=J2bcri\Bf&k'f!7YEq<$U\291f*Agaq5eOt0Fa0JITXisC]S<5@#IcQm8pRe1HV<?-"QX%\:%+V/a9HkKW_7:?cWL@)_;E2a+[*iGG!bO_PXo+Ee9TUK;8OoHt]7R(iE>X"XHZ=#8"NOTZcm4V)&-iT7`PCdIJp8iUm(sFRdM9O4e%%0EK8r:CbR'u:hRK5T\</"WX(\8c&GF9WN#?h16]MLjes](pE='Z5We_]-+0.qsC^_^+*05r@M[SJ4:%Ppoq>rY0CPb2F._>)VQA%jVKi1FgjtO.M_j'8+Ou)@`LT?hpr'W_rib@$\(FZ5N!?s+ct?_?->*5@H>aKCS8V)B"hNQjMDuKng2hZQ<)Od,erXBTZiFFE0C"O%6]%Q[lEJGEruRG,#^u9F$U,&6pM'C2?9;'eW6,r[X=Mg^FB=^<DHBc9XW/sO\luP-VPXaeRQ=\o?1Gre+cjQ>%*1N,WY[Q36IuXa%_AJBthVY1RFNo>^AA7_VB8\nPjWleXFD'V&(t0f(OQiVrCEjU*Hq)%G;)f#1C>P@;D>>4hg'@"/+J!NM]PrMDNMm&*[;_sfj9esP%(<6n(69Lr6DmT!mE_#C=PP=o`QTQ5*OTkpI*3L<\7CbRf-4[Gt20hY<XRqt)R@(5QP0S`S#7#-,DRj?g8g%eY;^8@Zc#WK5[/R2$%>aA^"k;lAVVP-s`h+Smu2fdS(rNaig9LdRl%Mu8prO++RFk&=K,lS@?"p\THM0mt.&VkI8:EFDNVY;KDBg&cA!q[0dcmrIJqHc!T%]d'V)ieVO+/>-T[2@AT:\)KIg&@Kq=;<B.sgcpjc4gKL165u)`lc"CQ[--+o:]>r9'WRA?OJH=XN(NpBVf^lXFUk/l'?LT0:4+Ee%=!jEsG/UH2<#k14e(]'URCe*83m&b]cd[_FJL`$b6h60N0"+J-p$=$l=P][X35pP"50T1-KE_Zq5Q240JEONQg8_R\U"9_uc&h<0%dL@>F?qOWKDk.)29Yn8!s'hL.1&/%_NnV$TD#((@Qft#i-`:SEBc/m2>1I=k3BV?K!fOj<Eb=Q7jM;H&b9&CIp>RXaP1_H<ApYp)%fQYc05B^G,]Hu1dJ@NdZdQuin<7Xs2g&1Kt,.#gp"EdF;#Kt\=Rt`Wg4NVF4g's1M-Ea"W#-@]f%8j9f<d@Ik]4J5]Pe:31o3_Fo%2JSqN4+TFFHuZ4b0tYF6<T?9U@nF,fIP*G'[,4@^>W.Y41(`.CYn6YCf)E*8!tG+54/G//(.R`>`-.X5XGtmorE6me`s]I"fubU"%c"H]of3p$K?2qK"5=KL\Lh,K7kKqfT`D5mUY=&jVeVc<)0;eQ8hD['(YhZK-T/FZtl8\o7bokH(/(_i-N:RH@:W2W2Es(?>)%!4G%BgO#XhDj*1K1.?V;>X-nZNr;L6VnUFb1Ok1YaHktl=\"P30jc3A7f/>jcS5gC`Ku=bDk+f02**eqeYcqcEGHNON)R8p%;f_9Y\(U%b+o6..Dm'oH:lJjN"GO!br"bPCkH\p5s1%GfU4l5aBgf^C9%"8^fhZ.eOI(8b\jr7Tnu=.%'Jj(\^.s,J4A@l)F+&I_p4)RgpSBE%ArqUKaBEINSrPdGUYp*n9A]N]Xilr#g_.]7d<F7i%bp&EiN3j-1C.ke%TD7R-+F-+*`[H#FD_fLg+9aVDE(8B+NP0U9RHD[\5@2Q%<Y2AADrF<+'AQKh,*9m@oGY5*E!mNeO()]HXkY1bKGr6ME6GMLo;NgXleiP=-mGB:_cuhg+nZL+,0;M?^PYf;@O92R"2HWc0M4u@%I-inW@@2_t7@_=Y:"SN>@?RWVQt/VpPducb8NsiZ*UH%Sdl/m@P&,=V=G8B;C0aD*FEBr1P.pI&.+:67E`ualj%Tpg?OIpCq3G#d%QpC9q2rhPL):;ZPjB,.+dr]A6+=eV+bKepuHrBk"$;&eiXGIGtF=mCJ(;67ULKWko^JBi`dA#Z^>2$QG2=Y*K3nY^WDGWQIBVUt\%P'',)7+nmCZ>j7k\tG/PR1UBU1Xu'8E/r,7orY-S:efPC>f5bR&EV`tRV6NZ@i[YS%bLFJ(X(Hkk)uAT]c1^iC'Ba:XMB!BUn2)`%R8&^0f`M<m).KZg?&u%T'/-)/lGV$XXZtJGeS$AegM/ruFnZ)k*,E;Yg\Roic%6Zi8*`1.jnp)N>HFEEHVKhT+]FJ/@G=i.n#NL/%Dm2-/1J('#EVcB^(*[^Q70)'sq[BnGJbt9:W79?3egK5@F.oIR3tmi:qNq*$DC41*BRJIWZ'\$fUOJUG2G(:pb1_O+)$L`@)K>(k%,qs,R9Z:0kml3P-_Km)(1IiZ)7Qo#$Ksa=?9@9=QBh*lLVMY^2&bq>(hWBt=]2=:&HQ0j:;\_4=Q`$g^'!GNgf7TnJgd[=Ce's*Z%4)??#&f\UAZ&2EWF>Ci?GN+>4lVr-#Yo%)=S]SmJ8?YU4!HZK)Uk.cp!U7R^"tXhr!R'fT=tr<WP[l[[61is8loONm.tP!3%Tn&,%IUkIa^Vt^,e[00@SDmX&9!:H`7iKIm#S;.Chhe?q(bK%LCgA.(fK.DGMj9CNN.IOQ)iB/ngqTYdQ`Gf8q-?OU1#lCtX[HFZj/Mmc%,TA`^WURbsKg,]>b0C(c7FWKpX;He$h\`KU0kCd9nU4iB.dHq.]@b92mG,]Kf>[S-+1LLkQR2Vu^n&(h&(ZJGTk]P2#JrG%^WuI.%,1"!,/kqfS7n@#bOS*A<olLK:A+rW"\SdE33qVD'=fo7a[qE>&Tu(;`@3)s^=,.-DT8!un\Q0Ie^K6Ho,TVJ[=lghlD661:;,VaQ%f1!-C6\VH:,Fa.f*?@K;@];`K3/ki9PG7$I)Oh@XU6R,sl^9oj3i(@*0R`P=^a.e-4F8tII=sbs1<[P-hsj=HO]J4NdS&MhZgsf8%iM%U1T7!.cfPdcl#b<3tP!.aLlg1UShFIj@7gnsi>XKsr7IK]2l__Can.jD[#73.gY1^Q>MONrU_)4GlLYOVTUIh"$cM]"-]\tJ9%rjSq)+mu9&,oJLmc6f_iD\_kPMX-fRgcm7W:-EP3eO>35kL.>9Vj5V3n"U=sYHV];<Oc@jbETXn(I#Pi,u;AM*[Yd<Dq;kC%O'5t%=*q13BuC5E_W?F53ur;NQP"N2ZZ`Q+O`rM=MS8WBEe>+lW^::hV&oU6pj&!!qL,]oDXt7e1Q-[u/e:=uXDhHaCRrg&1Q*?jSklO?%kh>4r@9lnDQVh@tkS;iWRFs-+K<CsWrj05"A,GA,g'7F[f7V8t.ZV?Z05__s_'W\7.k>mgUm"6c0d;Uum&<k'E2f/$7FtXtX^A\(%i70>WD83T1IH"MH4?u&ZI(N?nN-"NuU\oPDYorjmjc:M]39t/*f1"'8k@d$ui"!\PLY91\N6sIc>6o4t(jE*N'Y1q8!/VP05^9D7%qiIj!NGr\G[Jo_"!G`2kU'<Y\K8D1TUF%Bij3HNh9WVD&H_:\QRV*u"J0jEb1.Be9fiU@SGA.9$N%DM]X4_)C/?65i(R=:;p=NoF%*?;=6.m.<QJR,[g0G4N5A%h"GO2YF-><i\qdPfL,;N6h32TR,]/I,boou^\VV/$=REGPus<j1\Al'eHrjD&6[AXa<.[D]hIZH^I&%4o*-1;jqr\9,fCiCtU@\oWT,0A-Xg"$$t5*?+WJrYet%*+5Sl$=H?0Y"kDFF,'.J;*QAWY)EkahC0S=6@>@"?[R:XAa86KuGh;.f%Cb<o+VmasiFpnje4%_.l4Z?^baVfe2<;V]Yg\[_6>#2(Fm$7:"=V1ae*:5];;L[&qW55hs\GLQ89cCV)jZo@?L<SV^Sf'j`4^,#+%?gZS4:n0G:9l",heWFo/>a"K^.,D0<%"gq!-!Fhk3FAabd\s$9ee6Nk;a6taIR>O%)+EJmBo&Sk]L&,.JR>/qCgm2tRY*b*$afA+%C11:OEPuK,f\_');:[<YhLQs,5lNe9/@9$IL=fINFba:4me&B]CGTq0DAR#_52sgaJ;)&<Q(T>5hDh+FYb.=4['C^OkaKVd(R'8V%j6!cV*3MG&pd7MlR&T]FJAYL`e^._D!tA`HS=^k)(KE.Xkq9*(Yo6!cR^W49>%9;AQsi@0V2]l(kN_`NQtW>DbfE9'6q!NW`^k5^%\?H;hm'4PGWKBUj<\PJlSf,MuXL*!OdW0&tC*'=;<Y1[3[VRVJVsF@%Up*#mA"Hj"k&MELWE.fFg"b7KduB_=QtN$@`Kb)n<iF0\%+CRVJef:#oC\n)F[cuD'T,Af>[U<<UI1*A.5$/\(8LVm79-ERi)+WjZMt)dNd^*2VF`+mVl+2=!;RrW!G-aVf`58#`..Lmlkbr,1%kbhAEI'F[5h?a(%DR9Ia,O"ap_IsaS%2S?%gK9%\@n'K3ARg#MMUf.=b*Lu`>@Wp<Y/k<ecC+l&VUaM$/(XZ5F[Pe[Q4HtoFkp`W%0%?l2f2C38hF2QGl3cp!GN.EbR+c8SY3TMAWZ.u(1,]/#H?UVCP.GOf9u(H!e`s_T7ia0m)lp#.g_,3"DH"Imb0cu.WsiTLN^^.t%HF%'/C2($6c$""*XQ@$aX@4B<TZ5\',3)rcmEQ;09s*$ffq,N82-op>f/!ETM?naXY2@\HXk!U-5IQPG=H,,F&+"MM<oK"(]]5!Q%-"b^dh5p^uoJ$hsNigro6Tqsf=BMo^)U.FNm9nf<`^BiB>dTK9\$:M?A&EC!"f(u88rfbsm"TpUWMWLWT>P6WlMHDAX(U<JCn'82%*LfEKQSB`"!=doA*1ms&GeG+a2MD>S+h;b,%GlP=Ba5PmGJE\8TY\556g_2&9t;Q`Y[snSB@($$HN=trHM7WE\Hl3QUS>sETPL[t%!"A'\^5gm(44N*SF?L&^F_T]G6aWn^YI!?u,)f7P;,j7!ZUHScc22$=`pBFFXaHZsp/JjnhT^EgF,nq@qloJRa?-a20[mB:#,L?=%.q<['T%BUjFMWc/O39$t[ci;bG.[bk7e:L%lsJV)Up\OPg`"Qe!*AT=[p)'d!4](\r=5<6H+E0:(:mL)(pCTA/f;sXRLY_/N,6lF%6]T>qYV&.c-]5=Ci3^OCg'+7Qmdu,4!sH*h/i`7'%8q8We4V&\G<AECec:"KkI7gM#]d;WTr%/H).&G9[stY=5'o*q58s182R\Q8%He-r7P3gV53nSd9ReO.IMOBIu&S47D.q)p>Vm`Hg*UJ8)VR5%Acl-27Ht#bnm#OrS>gZh6>#;O_L=[7WCm:PTAGnQf?ouI+m8:\<%>:O*6GD<2c;8Kk1euqCDYCWe4!YoMk]@\tj)#r#mJfQI/"eR>MR#OtZ$7>OYde(L5-5`#R@oT[G'MM="h$kjd#SV$&g@$Ae@*@#J%GD6G__??Wr`K!g37`7;l]1)rCAYj8B?(ce/0Yn7NY#3#)=ZKa!7Kp!VfM58Z7[RR^Nbs^^2?MWj*paA6_+(WESAfAC_+'f"A1`"a%$9#a()i_eF6NnE;Jdq[`X\ci'=W)JE>G?^.5br:J$9!gXmhQXSKF-LEcGB]!CfF=P-fhFe$9$%!5$;o=W*giD0Sq:G&f#4NS:2dF%p8D@D^!]ER[RUKOAk'T>YI,"k(+Ru1>&,Xs>sr%:ZYeg*W"lmgrK/KtfC%R5@V]ebSQR#'d9$cmna^Fne[$^j@uJTDH.G-JfX-*P%G\D.Ok`oco>E`TABB*!)'3gZr_=);^2R,-JGhX(:4`%BT(Ye@o@V]fMB)>l8M_/7THDr(!Gl9g2I1!;dFRf4[@cP.pmGtbe[MVM]%ejL=XO"Ei7fG:,\]@^S0"Pt32fW:FJ*UC%c/m]W(CqOtI27e%CVQ6r?WqdIcki*Ul74lm*lU,1(MS&Q.`Tq#lQWDqDd2M_``TjD0%?$,TH,hX4mBME=5%ajJUfO?^=e1S=WI;H/KK%l;eD\lXE:rUNc)Vu$2Cr?5&@>gu<:"MZIYE(9lE)l(ifO?WIed>]q5.9,;=NiTD%3sL5fjRpm=lVg/_7b0pCYE(8A&&E*qk5ZaIfANG2H\W2;@#K0j/Yhk(lCIR+<,Q!#nj]mu[5#fb>a!@Uf#9&tQ,@4%m0oa`p?Ppd%U:t,ro&_q%FYLt=ET4UG-qh1CBMlqG<6dZsg!5%pgLHK8iP`4E-u8O4OAX04@@Io-Z*dr2of183l`;5"=03\!#4&o9;>_01ZXO7M%E-sab3\*ba*CR&(Z-J40g;i]#K>:CPGd)7jZT[[0[TI0h8?Qg7c3dhik5@6Cc3i"QiVG^=Z\!;U*fY&tFl$d:WjT+WMRj_/+PIFY%=[>+;!5iS>?1"^5hA#:g*4PhTXRhb@-/$3t0;$AZ)d$`A?'P];m]k&0XM?eZ[Mu<SJok>TMf"JshJU?U0%S\c.W'O6Z\!:bYbJm`%Fl!hS[3!nEe`k_u_)a);k?Y2d28VDDF)71FkN-!=IKSnPjRqm]l`;4mc1PXpXL#cWi`lBleleCd1d6\=7mJRBl"o&ADi&Tp6eLcA%lb!jo\.bsMJookc.*31h]YV*u"0Aj)HN%2ZSWucq'e4(t@usDp-.j1:-*4En9]GbJkOj![fbEbR0LLWTgaUfW5rrdn'6]=WhW3bW%*CU]dNcj47ai3t$*QMboBD[H")ffb]=D%g%%0"mt@@ag,D1;rZXL,K\-?6LsB2.^l)V/%5;u.N9oBJJ=G(Fd:l3Ag_IgbSD1nlC.%^OgSdQl#W'XL"(^,%J7*3ZI#PIKAc9/D%ZbJG^&2H"k:`=0Ttnqj6]Sc3?H&04:?9IR.9PnI&H3"mKhXhVT7;]G+<@'s+_sgMXPl%`0OM<M7qM"A7aB]@%ES\n2]sPKQYl7U\HoQB3TFK>@X3=M0JkAf%J^AgGRPb=c$WPZIg5a$qTQOObL'U3a:X5X\m=Qf5>QPeu33V%N79G!bs"d"Zbs0i>dH;f)6Y.:!Nt)oeSK3]lUJBrCK.W^6LM:lAntAPd@%k@i0pcFc)]/)[YJY,7Pu]/$?(]8[RN+nEGQ:nZSec9%#01Q=R]TH3g@N6Aa#.(rRaq</CkHN37Q!Q_H5F)'"$]-VfoT5EDi8D>?KnE^PIJ@c>N8E%cP0[rf5-F]?J[tlo?>EUc*l6>YJ<#"%ZOJ.hGCXJ;J`,AcY1X`DCk1[##hNn;2B)p>>I\9\ifnlM[_jsUl'3U^Z5j"`mTIT12=Oi/R]Y8?S)me4CDJpBB-AV]B.di.ZKo32%Z^"hbV&c]).d_Cj(D;9F;m=NhY0q2gG+j))4kR`r/jS%VBOt7ZB.LTEW1AV#906A2Ki,qb6*dLH+A?65L9i1AO)ieMR,f@^4/Vuh%HM_/_nCd6P0%280N@$Vg*3tmBS"PG%]ch`&#]AC:><,4.>Hh8sU1k1oC\Z,)kheu'c"&a%Pfg$H9\D&P4hGmOS*ao\?-;m!3HhZs%.D>+TEIOa,B%Cj)hKZM!o7gB+Z7\(hjo#+%l>UtE"I56$H*c$ACSQtCGN4g0DQs_H[<#10;EWV>KtPoZD$]0fp*-a&]\7"kd2o;l%ToeZ3V5fFEYD.$M/\n^95bhI'@,MAN<j*XTQ:@1AlnUB'o:2@g[VV!!k..>e4uP^&/kq`NSm&l!$thX5`<Jap<oK3^o2?T?`\&mC%@Yd\2!!F?']l.00hbD9ra,gS.[:P_Nld'D76aDjne$69+Fh4,klteeiS;Xh*JUEbq2E.V#cAT,`YI&m<>;')4`)iC$4X!fSoD3UT%g7:_$XO5FaQ,@C0iOgA?@<Hb\)J;$6.\mClD;F[8b\X-?=U/HE3BGl5,]<JfB=mBk2=/s2k\.<q0_We2[b%ikVG-!k2U??NMiNPJ%ju5NBH'rNhk\0pP]CjHg?>E&->PMml*K`%rQ5p$t,NE`o/+[0:a8fUilfF3`_N(WKNHmEbpGP&k$Cu"G#>sP9*ON-i6@Vn)R37O8%GI/"RHoJ"+aC4ASE(Pb4pGk=*#;F$4=sOtUH[r&cS8EsN!i=c\)Emc"Unjmb.%2\Iekrm::09**Ob,Z0NZ!d<*\Gl!I:FM7Ci]he%PhGal?&C"%gH`$t<nGg4K\LAQf#I:!Blur/,Z],aY4tD!QZXk2VJ]).VWtbT\Sj`2FFB=27cK6&S_u#LUpt9caD,i$\uaC]Mb72`%W?j+Bb*XcgXQs,8KAB8R=DE\M$JLn'ENEIW?5ma`Zg.Kt@""^(7IN-hqG>Y)q+bP':ed:sqjX-c#"<gG;-_X#B([236UCdtRb4=%%N7ih?Rk@6<o2JkcgFa\m>^LT5g\k_0Ybo7sE1-04Y\K0E\grOT]3RF%+0XNcfe>qF`P.Go9#&C0SA`sZSpbt1Tp<Yl>-AI+T4*M4%Z44iq\1CK:G?[Eb[BnCSm<8l=6o@tuk0<Gn2Xj1[G!2@\BL./*DnV-`KGQ^^1B*j&WU>_ROk=K!*s7VVE-$goDU'eKBVf!:M1c__%3EiQtg(7;:(\fspB&:i3%ZeuS-Q8N.h"G.k%+`q[dDj2nNDQ:[[/n?Hq)U$L3%V4^H@aac!ii:1DoW>3[IhT[DH=#k;uqorR_Fg$%);Nsd@A%I*R!H1*mAsocq<kUJGAbfLD"[_)`n/$=`RW=-C>W[\"g;8$,9_g.5V&i49jt:&SL>P&dfh8C<SRW0><QY4G6;U;I.4f*%:.Gg6"rRhEaJJS4]@k:4Q80?E"hbeLfu?c^p@a.b!9DBL%@YZp0P`UQYUVm$J1^JGh\=aXE2\J*Pk;K/;f(8;0<,mb_fO_d4N5n0%*/Z>QU@+5R-!&N?HtL)OeDh%ZB=LJ2&F9TDmGJuocAs[N@-o'u56SU>c5$6J(CcFO=<#qm_2=s,[pSa<]]/V%Bt:YWd&oH5V_0-H%=.I%%hBg"Qg,4-'Xa+/k?BVuAGIdu"0lY#2Y0!8s]jbs0*<D,!$bC8cPI4iaMntKP5J&aZWD[a-L03C^X3Ic;F5ENimN8a!UX:\U%W\l'm5!/\t@[EXDkR*D1R8MNR'N0gN_B)gYlfZ,g?$2@mbHl,E?]^3'7$u_#^/Z!sWhZXKbe@l5Cll,U`d+0Z:O2po*HPAd99Gso%As4:f]N?<5S4m4G#HNH4B9]EqP@M(B.Ii7P_Hab3@]P2pKR9K/`a\<sbRpA^4S;TGj*\R;mZMqI8+.G2GeRR<f:Q23TP'llV!.!?%WNH^gbc1k']j\ItAP;p-+Ipf4gtg_Ka6=KiU/#nnbW/qRj%93h8Z1m@^<A9:5W'8H^:W[.4']@c7`&E1PRhhRDj>:p^UO_[,RQ3`%MjNU%q!rYF%+d<'=Le?M=pX#6[CbCEp\6OlImO$dn#,?(iJ5l?)h,Eu#&jEV*deBGS-?pkk4,Q(gs!KZ"lUrh(1tcp>aS6Gc@eW4%r\?R&(4*g<7I#PCn[1DI?9=5FP?KU,G$a#?>]dj3Eq?\kqr^H:E%H[P,<G[@j_iYu8V_)rES_#s)I1OX]?0V`i2r2WK\E>S<c@b.%6@fB_4-@k%]are;Ns?^gh1SGqM%=%G5<gjS)^&W)[C4^,+S1!NO^^@1;r+NuNU<NGh,:.RWW=tQ^2,]h2WQT3&TJ6LkpY?"o\A),%OY>1?U+F0Z\M2W[i54T.8PPQu+1a9&iFEk(&&*Ce_a$@5/=Ok<Ii?"8,3"b!,\-#X08G6Ho"bL^j+(&F]S-@YI%)1iq]D6;s)Gp2%Nn[Qu7&Xh?T?%"+hqs=icc/I`a>52A\4FT.[+ZI#Ws+NtLhl)ZRGK?5aP7a_DjeW$f/o/Gf:Y0s_Rmi2D`uuTNuW?Y([Nru5I(OM%7B-&_^3trI'taA=cocZH&'_['/p6Yh.m;r<n#2Yo\ao7hnWg)lSSaTMrKGR!5"7ismNM$+gC$7-_VHI:$2jWKN374VQl2=TPE:11%[0!W%ihu8@+J62`$IZWQIQg\Ym.jbuCVb9GB4pbP7&lTR\K6[Mo\B5O&q('(PkO_58'_/pgP>4a0UWncI8k7C=#:]9B?n7hjf6ik%*l!CRoTPVOA$L$YGOeleIRZP(r(bhX?lt8mq%ok,-^4#o$27@II_Kn>)87hQ5cdWf?k+tm\?8O2GpGUERHia0#A*R%bAmOVTpoQ,%HHf@NfNC_2OX%;\*j:n3cG5um)7eikeZarpqt_a5pR[M3'\Q9P)(lu<Uh`l@ppiI;FlM7[iNdadGIS!tYrf`:0(/2F&b#LFBs;f:%m+LmuKC_d*'\a#.>b`:.;5AEl3EYH7Am@@qObk_*^+[2'Y'G;Wn<ND`.noWp@8[qc]3_@Ss6+%?c>HKb;RQ,33ENf):NB4Fa'B[l%651QgJ%/tVm=]h9o=h0o;&\U?rE(^qr7M'K47-<F,-^Q.D0k;V@bpkk@X7PVg4e=AGk:1ciYW!Ar<Y9K>g*aVO02CXBS;QPjEoa(%5'Q$cb00Vlb?n?]Ua-J49>uN%LNBe,^",YV)*[tW84>Zh.gJ@$"g*8S*.5^mW59&Q<@-nP4efB)4,3_j/^*.J&80udU0Q6(k6nM2%JWddq3@PC._n!ZbjBp4t9'sWl=!943c+I,Bb@KY@n5/oR7f7:\4PY9ZWUn"UT8bo9BXQ%#n>.oUKn3G:Z[lW?M0El_IYMGsj%;P>%nP&TncLZ:khT+IV`m^ign,(_lqs.dEV'n?-]UU/B4$$1qcLlNHLKbQB8Rsm6.$s_PIAqWV6@L]acq\oo4!L*h;5+#;F,qT@E#4"!%*4M%YS\42.,^p5!0jU.ACqtHr\9Wo=q0K;lb?S!)CTcnrZe0)bGQRkVr9<2nO%O]\&"esI[dLD8K(kBqS\i@(PXXPh8Tp[Ig!JbR%6<@jsWlXo)R9/O@m7i6RY.1!GJns4-SM9)IX,0Hb/;-I0=ndmDQTY0>I?nsIc63e;e/&S,EQi_+@H<t5PNfG[Lb9#n9JW1FEpQ`B%&"<)&VYr`Oh!+1uhNp=F*l&_[_Y9nq0Rc9@*uqH1Ac3SA=?&I&05chX0O*"Jo.7r;2GRn*qu.:aY/UpocVC70(G_N$:_Ko3SRX.e%^O(=++h6jT0R8`_Kq#<[S(S$Kd!LPKEc?Ag!?6?AjO-33c6TZ.qJh+m4V'#mjTgub]7iQk7T8XXKi7@1/pl1GY!E89>_s('=b#`B%&FnWKj@q+,7dZ@_o*oZ$S`2`]VdZh\`%DCJ9IA#4G[IIY!#NV4ao!%_SLV3Qr*8#88tG,Y:,;kEhWTl3'^p@X)OTVg?QQm/;'sE7%?HunN+4KWo><U`%8XYj(O9AH4lH_[:_K<RLB53!+K@j7QH#m!#k?)Zs)YXfBDuL4-E^:khp\V%PmpU!gFCX_F?D]B(OVanBE)fJM%q15j7"r_"@qnU\hUj%$l9[Z.rUoC0]$?HtP+CepcNWgbl\q\Sg5oQ-mk6TV7_=ipu5Fr;WXU?k%V2L8KQhg8R0#@6f%NhN?2Q=+^%l,)'H79rDlqPp/*+L`TgL.s2``>!ANp!^7a2s^H2G!,&!\KgPnU>^BPqLHbR@[!L6'D\7ZY,/EXC86h.BAa2?;$V6VO%`?WKR,A$%,>YLMQ07_eBCuN5%F'uM'G'B5h^J$bd<0-EP=L@1)&^8Hn&@00Ve:4G-/Tj#AEjE+GGt??*aUR\bAO]:&meg`FC2cV9SQ!G>su0t%NE\C@T3mXSs8@;dl+_UjFF(-^4ildsK\U7FYXmARfMHSa]r)=;G;.6$"65kPVlpb-JV+7YpZaB=_\ob0Q(GZkjH(,_gp+m]5Z1a4%5^iFVJK.ZTI2B2JPrGKq=[?rU%"$Pc\Q;Zq\gV=ln"d=iP1X3-I)kcK\>)gNe]/;"lGU]EHtJhA5f&TNF3Td3+%3'2#nDA01t\uP%aj/HB0a6Pp>Lt*A=UsHj;t_JKauq'mGo`R7Sqc'9L:;C]OA&A84XA-li>r%`2du.,/M'`YoFJ/4O$C\"R`oX;gKPNjNh/dRe^GuB%;3NiH9,3m)]_K@n3tj#I0AHZ4f^5;tI'_6unadK<XPqqYJ`Y&5_M'`;q/cXCFJmUu%46o0rWT$onUY`I-'4%)gdAfrrb!C9Ae.7]%a*Ec"jp1mm%n(<P1`d-f9?m7=PQ0n?a1=i8LV-#*IYaraIXoUK^cR+#dZk>^nr^'I^I(fO/[\m?2L"N\#7KF\gG)MAJZT2\Bf+rE%8Et9[L0j6$?Trc!(%Yu2iI,Y;Oh]J7Q(IgIOm&CIH`h`Sp,.C"o1a*Q#2)?k<P3W+NPR"7W:/QMDV4RI,TNZlb<_qhh`lZUkNO;M%=h_F[(N*L,A!Ju/j>sKDGhLh;j8F33FIt,npW$M_q[idX;>u*V/f&>d=4@VWkb8mh:GctgR;pO4H9dE:UN&0?b\&HF+CpceI+,#=%a?<7L=>#a"k/YHWTJ8snRLAH)-+F/=I+I3R/@Cqq"#O>1\KPi3d@;Y<qWleu@=C7!)oHnbP^;FnJ&>!.q<*#&Q0l7b.:dR*2<&ms%@lK4>bFaq^3=@%;I5<Q4$Ac2q;49,MGQcO3;5T98km84km2G;FAkKF#2-_Ai'^h>bps*CP`68XI7ia<jisfS)Le!IHWo_UcWIO#K%dHp?T73=U0c4C#e=IB+`T14io@GN?BH")WuMA"mj#+?P%'?+8d3EDhT[T^q1YXh)rA9%QG?UCDc(o>tn;5Ua"7_/4<)>]jK$FK]k%g_XCP.SI*$i<pk'e\h(a1)V0JfGR@>4t5QTgr*=_p%'-khF0O5@K>6/#B>8NoN`Y*lf8%-C7+)#rU?P?I:C\DTD.hjlL:h4(jTtq%gL.S0[5HEMYT.AR3RaT2,,%="YnSW4,B53kMNe\8L\CpD7!ChhM-4N_".P(:iSGVi6+=sj0#+u&M=i3k%YJ)\G!YQGV`al:<t-Vb%n#Gb-)I-(@_fS#N+>9bE7gX"t_eM]:8hM75o#e,)qOokh=8mNdEoK0WPB#Y\EZDZ,B'<j&E=:8#BXTZZM&ZsOpTP<LdV`N6s"PK&%;2&!pc=ffi\m[Pd-2.a5[87(_M208gSZ,U-%5a)\k92C(UL$0GB3C^t!9O*l3-Da0NpAA;\pQRgKg'i_Np>ET5p5BB/t^p@kA$DS%r\XASf^E8aO;/mB(qulq8rs(!:Pj/d]K&':Ji8_n1e,J^ZWt.pm9GEKTVWd>5*Wr?G=aaWg:8="ZcLuF`\F",84^QDDkmHg`#k.R%=!FM[\WZD*=N6B0"4[.LKf"n^BO%/)(Z(i!\`qsL4J/HU'SPYkh/r6J^nUON^-O!Jdh!5>:utJ3ps\%&g\8BUYY6QeR,`hY@+N]*%5iVcTe3\cup492eg^>r&%9*\>qjTSa(-%dC<)r;ZB23E%;"k`HiR]92EDaupl.s>RanOHj'Qo2ok#hWQR)XQiL,'4(Iq<XLn?%S.%hTMI>!Cq[%3$05^`BrilM@W.g&E?$.p![^;_3Q&/OdLSk#FC[IHHB%`pCXLp4`[$\FW3djq(UQlFW3g+iS*"egINm!;;Bs.>8[$R%1QDm$-O2%ppQ#QIof*bjHJVd[42-_X[pdcp/@MBX[pddK,]@JLD&@EVO)8^a]dQ\AY!P(NShm(@K+eHsJM.HQCJSTm,m;.%B&/2=%2k1agc`Gl_Bo'QCC"@,<F`Di8JQWLOR,c[Rh0`mJJa"PZ9XhiYfVs!dVV>K=7,YOb\darUUSNm;DT6^-j4bq/Luf'kab]3/!\3oH%5l!'\cb"@-0[$^Hs/,[F\HmWFYIZBSjY00\K]sWBO_TQ[Hk4W]_\"(<P2aQG=p',3,^BcUDV(IQF5iZlFM%5dNKU`Sk]Z@(p7+O9%7DI,Hrq'\SF?/=4d%FW+TtM3/D*p==p&)R>>d0_3C\`n.7>d-)JoSVI?DdY>(X2G4ljpEKdqu>EiVI-GZGq-=gJ/GZS/YW'E3D5i%_pQR4(E3(pR)flo1*;N#DuA3L(PUtL0#-PZfGVA?n$shtG8NntM(X'X'\,bXMGtmA>W&qQG3q;u0Y7k.kj1=<ah&(rkj5j5YhN19%"l&Y'4;*4#'-uat;i!@Vh_JFg-@X@P?oc:+bAS:8/@](>J(;&:3HqQAdGnf,c+Cg%,VkbO2HZ"&P((li@$[!9bV'kNF5M#)`^OHI%7#PBJmMO'?#P4WT]>[[5pr1;)EXo/"I`le0=H<(9QTQ)?*d9^:>_6?g:5M,P^UHr^9XB&",;'P8hJLKUaIX@/ppQ-lR)R'h)fma>%k73haMb\b$qPU&Vn)_qf[!'^@m.6VcH`if1qAnUJjW*FXIatqFqNa3%/h6c_833(P/UHl]]GAt5YT-gFh_d$p,?NWDU.E:I'6C.!%Y)<mh<(\:!-dYC@GERq>pKcdP4']P`\L9"9E?a.t3`0ErIa)q2=H7\^)]%9(I<u/0$U7YjEAFoqYZkFLC=KN[R#@(iQhQ.2eYuEM%0Y<=T(tiu[qB)!jW>K^@;(&'R6*V9ph5,>[U#U=l:#gg/(HD,h`WaOGY05Cf9/.s:>^F5<&^+V7fj?Th3]-\O:0cHF/[t"5&][pU%FI"OjheKm\6,=R]F[efpq.T*IB]LW0A3S^n2Hn%VDET(Y/(2'&I'i-SFG+p11!%4rZ;&2XWdSl1\j"S[Yh\3kRcu_4^:#u7d1QGH%Z.b`4Pb5N^;uViq.]g6Ie-*K8<4R8@qqnuC*NcrhBNKd-:mM2'1glGo'M3Lu8r%cXklm;VTM*S2b^YD%.:#q-1QeAYbT`Wh@Rt=F%,i[eq&MtFuF?CnHm)YWK/gm5MeHn^jIC\&cLqLWS"lj+m$c`'<];u.mdPR)r@E@o]^4h0[<4njOV;jl^P7g&t^U*70)cB]G3IYu(%OKrV77r.'a/-],Ce[_`'6c4O5N%7[J%/Um;r1D"\Z=D`gThJ;?^F%Emjo:<_6YkE:X^bHG?HiD9-^-f%8@JTJ57q!+>"!4H<skR,%^Y\p-p?gIDhu$G$5%;Clhq%n@9XhiYL[1;)p+abBMi_a9bXASJgSoU.KGg$"&^)j*$Hlj0gm1Y6hs?gIe#CXW/0@(U)T+V_0Pf:3%_s$d&edX)%S=D>+46qWc`'j?LBAHBdF.NQ?kcks5Eq30U+-,d9\GU:=bsK^:6-_"%7=6QDjo),RIH9lOPFVBYbH\b.?q7o^c#1Pp%CTiHHfeAUX7r=7Q4"o,?`9#%PNp/H(%X@'jNpVg.%VpAbQl\7K4tU8O+At1Fk!4a?oZ-Q)(<LJA7fl/\P@4+LcV3$>#a=gdo[*[<%DH_X/:Vh\^3'4jKgAQKqpLG2:4hHMO=n>DDe(u^02e4RJ$YPsF'^b.G0%O\(5859oU&=mfKESQhS!2K/p/>PfjW(W$^VM6AhM!tP%GKEDko+"da/d&c06fcmXP7[3"4OJ&`fqQ4E)'!V+)4A>"Xj$qjl[MQV(%rj/EZG@&aBn5NCam+;p'-K.X7MO).<M]G'lXWXN>0M\%>'F<8+Jb@!B_JfuJUh&4Am,)D,fK#t-ee68N;EI=E%h0=+u;3aU&?iX0C$O-Q!\++eO"Y'F8Lb`2sH6%pLRZ5FNC$mb(C+p4rWCJ%O^#"K"FB*T9]GHE>5Tj$@Yok2\1@!f3+E,3himI:p8$WXGV_/@R#,)bC@(=OkC'ATRHn<)=)'V=p6eD?ijRot]*dM&,t'TdM.`1n%T[rQno0:Gb*d0=&i_]j8E6WT)06Pf,1b"hI@g4h;]Eq%[H<G6lPPI=/mp=t450.nXW3:j`aiJ'?qaG+(6[/Q"<utX`[%l(=U5&pa%UM58F&Frd@=(+1nYL7KI%gt_t'R&@nJ6cN^'^h+>kK4!BUq@rPTHoHjP;,jP258.Q@'me0/8L.>9'a'g8p6dgNE4QYPBr*'eJ.hF%g:GT'3R4JNe[VK]$"p<9o\ojoI6i:XZH_#7DbgQYc/t;A@&\2Y5?.+18+uZh+/Jeo_G)3Aiq<a]8+et.l#R3_.:'RM][04lEQiC7%O7tVj*+`HT9],+2.Wq>OFCBD8qI4ei%ga4YL-8:Pq!J!sNGBW-NpsK)GeC)*5[FP@;85Z`1Y(&Z4u3L/=&*'HfC[h!IEQo];`nkq%_fJP@M/c;j/LTuYitn.(o0PIJ,%#Rrmn`63LP:!Pi<KnO@K**D]jNjTmH!__G;hK'Z86!VmbaZ<GAY3Bc<?:aHS;bIKMQqioO@&M%=>Wh#:d9CDB'OI*Ps%A"bVW+J!VFmR5]o*U'A_PYC86*I.s>fgGTTMBgo6-V]<i];S^gG+Ek"rNq1ob_<)=`Q%?d/]$;!c=[7#_Z%6N#Q%-m\!SYVJ#/hD"B>5>GR>LEH'*D<.Dc)*^KcY#gN)7>dkO*$Sm<'n;[d]JJ.UQ04u1X4`rC)cujZgW)TD4UXr^epdFrjL^j;%f\Y]S=BiOack<oL3%=WATn%Yi'c[$4G%I3X8UoD2HgWsZ-q#0@U<(j;\@sL!R,s"#Ns:<PC+P=4Xft[M7P0T,9iF*M_B*p:<nMiG%KWV&!9iIqcZC-hG;L+kl$SaPYYBlZ%>[QJ2gOQ6o<6J+NN*?(B3hMh(oHH]W3g*l6^QoPq6k/Uf2BaMTRlakj&[`cRGc+Sh7,d`q%2D[j*p[&oqFj*]]OaW=r25MCq>RhIR@oB8(OOA;PB3i<18e'bPSA#C@'_9aOcX1g@Y&E.o_f8=cIAL'-\Yjk#qat&ljuDsIe@nDL%#EF3'lU4?NQ`ZP!<6fLLRgN/B[^hf'G:+`#]TH%\V?U&b`QX&$c)dOPg9oDV/r!hFQu-V+o8i0G7;^(%>L[G36WPa_H;QF$+%Df<%Di;p+bu@t?>mqHk[CYKFViCM;M7Pm1PY@43Cu>bQ3W:bSQ@X$eaXgY;.tDqVaOV*>@[fj,7@Y5uP1k*n%HHV@p&OecH-`*$Z,<Af%k(dpW[C0K,lhK?N-d"JPFTM-h4FOqK5c8>UMR@pB$Riap1Wg1NC<hb#Gq9]W2(;qG0J&k0i)C*d$R6At3D:6i"pKAm(XR%q%1?kD%I;'^SO>i1,.#;LAkR6Ts9F;UU2DWg>(N\T%IWqq$;h&u9$Zu"2$h"<^,l=BMI<QPp#nKRRU/qCiipCo]/BiYjAD$'^p4?'>jWj("%nC<s`^dK*F)/-p5a<mBO5L!IpI@\._hHV.^`It_oFhW'$3b(s6oGP4k:WSo.]ch)ta;-Ch4>=I8A@\I/1S5[=p8*&c+%eE$\\+!&%:HFb4hP&G4O3pr!j5i2bIqE+:`4/UuVXlMNa$e_LUN?MD+2T-@l;62)Xl8stl2JVkSP&d@d)1,El08FjT4IN4ob44RJC[XU:7oi$%m`OJ(<\N@KrPjoai"a)"k\&1qq!5Te%3s)$*&A<'$@_J/aL`-*DDKEj2oQTSV&mB58Z+k;B?`7N>h9H`;&gX5%GT\`p6g8Bpejt]%&8jZ9hS`7@8M7,OTEVrH[sC3/*$V(`JgDIX,bLNfM]^33qVq"+X?Ps0>i5?NI9nE,P(RIb?9@5kDpQNh,T2i<]="k=g=c6ET:WcD%9:bODPe;G9/WP<0qaeWge^\mp]?7<aV08UJ;mtqT2UkI1Fh8g7L7S2Qn@QbS7_,6MA]m6qLmiEGC,2b^21X_6d#5k17jt"9-T8@#%9jm[qecZg\N$p=ah_V_=I5b0JL:dUDiCNY;Ro>lDL%k=p_tJ[PKhCC(YDJ19+u34Z49ofnbP;iFSQ[8@CtQieh2OKFgtBH^A7@W4%5j3/^Qb)GX9G,bK_+"))B'WSFMs9tTjOiLH[0(&d.7$.=?G;(8hu`@M.YfsSV:4OHnP5Hc9G5Z2DM_H_)=@TqX*lXsP>WGaGUI=i%G"cQ00J-8!g*sF5Z'9WF"4FdYUnOmW+kp)UiXOJVh4l@KU.LFp'u#1GLGGL/8oq>bZ+`].pmF*J,_WuKZBcg23--DO[46,X6C[R'%:2/9R$#X]rked(*@'8<"pK#uN]WmN4eY>""<luNZ*2#"/_g"D-s'U+bI\64*DCDerldH#[aeZQUV[9aV6=#@8"Z4d9b\55M0YNhq%Ygl&h=DBLdDt#Ao(SiA9"1E.`oW;4@R/:m3QrN9rY1IRe'Ji'\ln$W2rtIYWE(g[l_&9&62)[=H9nmA]ae"]mG3E)E8*&Sc40V7'%-dhnV@JdbX^;qZT)fTI2aQctRT6UqiGHgV++a3IW(jZE5SSLubQ55[)YQ]K;m)uQfP$L7.We]h2&)PW:9]L0YLH%L<Cug9Zl!ZHO%E'KW42VB%@lo^\f[CR*=(JZ?6J_:-F!DFWlQAur2q(Ug;_JT5Un[Z/VT5/bApdiY]C0dJ*`-Y0\p:f%5<LfS'E>3$n(U"?O@Z$eo%RlSc@fsH2KJq896`I]).5S+K5643,[l/5:fV-/Z%@kuHB3%s(:nlK?>ePC2GL/S(?IaUT$_;+b\!o"*3]q[KhmDC@Qma1,BblN]c%cL@gY4c[=qW>!M'K:&V9k,1k7dY3Z][;OI?ARdq?mTgmki7!,mfYs9P;AE9o9K^$+1Ie95W5i)@8C--ZlnU=drGW1u[OJTpRobO>%a<`///YDqpo1=:7\&>$XOLh#'?$QLjc^3(Bf[CBJK.K)'.(Kn_H1H-^R<n5c)qec,O5GsZee/KD<U@giQM?+EW=0,8menlGQDl+@%dd8`QDiglF392DT2]mcsj>D$gTtu:5Ja<R+;n$+Di$nK912tZDpXscUFY1rZc4f8Z7oR.WJp'SC5%\J=5o1U*$/[3!=hn1].?ouZ%N49X9E+X.i-d7)1'M@p0pRQWmZcE`,QU:WP)hq?]0'0<];TXh^R$E]J\._s58S^hap.Xh=_2j<\4B4I(Xs61%,E$5_H'V[p\M3);%a2RJsd>)9$Q)/u8'A,MP2CMn%d`p4XPuRWa!le]g`uOL6<lP#*cXtFKVSSja<(9ut)"$VU4uB4/_&gYB'=sU6PUO;ER)'0-:m)Ub%nZT).d/$,<qH!,%^8]/03+lYk<'<'_\n*#=*6k&q(F]<so28h)3P6EL.3r9q]G9ku/?htG,]bEtE2i1I<W/MIVhPWOT5_Hi=LSgR%_&E?Ln^0"o.DBPFZM#Cb"t%$0nc9b62OJITfX@K^.QeH8h^h0YSu*f`lM(W<LIAk:It[aa8rjs5/8]',"@)/Y]3gA(2s&6ap)bQJ%%NdGTlJs8ji-/0Icd\7X1c:-B;_$*$_t_=_XI4H6>SZp?F5jH*b7EfpH7@e@H&t6+.k?tuQ2Qj)0_,&O;fA8f;;s`TfUg!@J%5;.%$:),[7Q%5i.EoPC\?*V:afckJ8^hYig4Qb]I*5#g>p<@Vs2+?'7sEp<&b2&@9Seaa`d-!p1u^Pmkc^k;GbQ"oQN*G<li/(L!G'Xm%#0RNqn;ZS4ZiX5koe+AsE:L/e6p),1WuFcr3H;?h(B)DFn$Pq:dgmL>\Z=9.2D>1_!qXJ.9_eSu[lt_-eZqNEbe0Ph_ES"Epultn%+:,NA2B"O+OWj49T2@C=KCo'%qZn1>B5,U@=a(4NHZhNj_(84sX=TW4B2B?JjR/aD9K9YOkrggPF>1VmI?F^C9#,?jmVcDM"Ci^K%E?Ul#6OkS;o2D%8`TJniW0EoB43OPGTV=J%jJ0V$/#Z69p:+q,nqb=2^iJQ&_MD,55fq,nktS]NnLSA7-_k+t_)nm4#]nXIo]YoZ%2.LX%>r5dtmBj?LUDZE6S>D7L1UeF@X3[oVb&"Zj)8WsY_\@JL\oN2Sn7PU)S/6LW2AM@JX?Rj1#U`$Ikt/>#IcU$t"<Y<WjGu'D%aZ%<3B]+31MK)1lM[8-EPZ*9a8ffn7N6ZU&SDIO&og>a(L5A&i,IoXDA>NY8(^S!6r+X^&:ufR4$L7+";f>HY>lH??JD%E]gRGLU%@2l-!eE+\I"eF*O9=S%_h1HS*!J?nD2niqG9)InkipM;+Z2]g&ra1W'>bOHbGX?N_'*5GEf[E3Dl3+!N%`VuNT*Wte"_su+DXF'C%!U]0GS&_F<ZN&tbX0Ge+>oYbMhE?r+&0/KPWT9h._KRE;+MEhX\f)]*4!1a3C#S*/P7?,H()MjPD$$'s([R#'5,]/mJ=c11gQae`%>%G6S2ZP/mSuiAdI0`)#Q%dbe-SR#3V>MF\F-UPi@jBA)^)t7G;:K:+KKUXSY\E3ll+J@IXV9iWWCamMSF]S9O>q<c_!j)hqcfq)%=@+DWl$3'\,#nq]ds.-(#p?]EST@4neQ2A8.nb$EZN:OLUCgQd^sVMIO9B5m2)H^g0JL`;iZ:,G.D$'6LJ/n74$cp3eR_?P\E?/m%.Z*rN1.f+l8LcYIk6?.(ib.8]__mL\/J'2,YE[7Neg$/?%^P/?=?*305FkYgfpb'dU^1.-LFdImqr3L\Mti9F'ETp5#(&1g:7>kp%?hV3U/X^/&q?j`f(DR&VX9"2MR:fA^EBqJD)+8JakFDM6]Cmm%ZR1PZW1o1;hL.NbS9Jb#2.f=tMA<DU3qlON8EL$7dM:Zo-;Ec7%F*E9'anrnaU#s*P/UPXJ0Wded_D7uo[.?:A7bh:ga@aY^EMCV7o.+e+7j5P+U22Zd3:F!XV.d._odIKDPLq@&;=0N"ep##`$]S."%;Jk1&:WZ\ZWm".)j0DN7KD0aobtU5(8*6M.jBEpjftnRJDb=%/LV*YX`E0$F8t;CP#I[k9N.dSci@ZF;*q%@_1<K:B9DSN)#HX2:%1"@@hEfK>$\&^e5@fQFkfr2;9iX$3h"mX2dnPj*V5)&f7i5*FNpVF"TIR<L"U`N[aP9%&K/[:%gh9Wt-/Dq[i5gg`a^2)3QW7%\Y%pA$$P7H$E?+K'QWGLC4`h&tjITFj#Aq]l^qeLB(Q@!s):,#C]-Dmn9/X>YQJ06''glW%$!kiFetR'9\%plT[5QDP0Y8_OJ]NV5%l%H=.NhS$[qWdY$ub->AOENQ!ugU%el:0cOH-=Wa-5Bs$Z3S+X$l[_-F_4uQT3[5pmt73Zm6.sor]I;J3?S+X(l/S6sP'?Ch@$L[^M%s#!a&]Mg7\_4m8Z%C>0oW%Rnu*8Jp5+]%$ihAS_M]XjGHf#OY18ZR0jApnK^r<[#Oa!SKl<q`hYII'6U)OGkg<6r:&1F:T<d!FA0%&[,>P_U-=mjVBXYG(`o`o3O@S#QOP0c=cU;PMfifF6mD%0>VJjn_bV[A<^k0!^\]oEj^ON+mE;X=#QcrIT!S'mg`f]>7+aDI#f[O%rg_pRinRhi>m!%bRt\0S[CrJH."b[)fW40bO@`\(2eb`S]D`qb#.3%K971P#cU>(GMK<jH%Gj)<?'fXE;#:6:-a%LXeL2fD6k%RN%=4'(N5'UijG+O,3&(QM&+\iTjRh8_51jN(SAY\Yj,ffmXXt_&k-YYJm]n_"hECD\\_2CCn!@+m`7)s6QO:mBVGV;^h$++#T(>f\<%e9^?m',&@K#W6$]9YfAs^LSP6:_ST%"P'r'Lmg"C-DXD<N_gCD`!#@b4%;p]&egXLlPMKf85+i1^7CrE%#G9qqi4MeL;\aG\&T7A%@0g\fBTIeV@es3N6#+8uQuM<`U??P;[VDA%0I.uY4gIH)KHW($EW1*+`sOPPq-tpO'3OG*(b[I<cX$iiEd8Y#-4J^GQ^3n=$YVk$%HcN&k98o/-TZQ:@2.9$L:d$+[W!Ph#67:Z2%A4"`\fIOm$pg)G8T`1Zb^h+_LN/!90Eb+Q'rVEs0KS,DJL8uhO4l]R@7X(JqCp2k%'8FGYdZqoTC;Q("^pp4Ne:\u"iGt*M0I.u9?'8.9KHW')j,_li-4G_;gacrN_AfZK:)DPRrP[;d?o-tM'#b*"B4TSiS(3>A8NTjG%&"r,K\:GY0mZ5"X8aoU";'\A_OqHM38Wi,G4bIJ@!=?Qcm5*N1I$&.'G#0$<*o$n?`>Xa%3f82F\-$sR2Z3/kKs)rdp.eM.U7!DG%n!qQ=N(:**Ces;EV@iGt/A'EFFM$*W<$,G8`q;Qam6R3U<ldAI,iAWZe8rH:1*LC1OCFXPB`fBD%g`r46C_,Y(Rm(O&M[>X\oom%%kXFel$H9.*dtK2<)4\(5;'<W^N_e!Kj_iF!aig=bhK\Rnc9C;90@a!\Y)O%1DIDI:h^n:E4Y_SA'bu94\rBgJ1`U4s4,PT?;d6RY%=4U2[A3k',RQV'O)dV$SOSLaQAtEd9g!"J`5eG,so!o57bg)Nn44'$fnQds-0s$P\Q0A'=_qi3!A#$7&9Fc;q-9QS/`Mg/mde%_b%OBO_)0/WWul?>.XQIRZ?m?>%(089e[bBYh)Uf%%E$'MgejK6'!oAquoI4sB5U:2!(bXMHHY54;to3uCR')ttE=NeXi+;"b<nL>,Z%M,hD"]1h542[8_qEeD\")1RO')&5DG@qkH3O*8".^G0mn%[btn8]XRp`3H/J3qlAu50FWp/0%.Fle<@;c]I6+Z5]>LGni`7];3;t%<1h1&^YIE@/mG%ZPZ=Blo%u?O6i>BOY&e/3R\C^*qs1O<8q_^;ETbM[1gl?`a/$#0?9#c%16j2CoQ#/ZnO"pQ3=)SrYH"\d)P0NA%n4c![M<M<DbOYu+'_+,Y"H^D,G0?'4PJnU9de]:I9'7MK9^T.+E.uM2?Fn?0.NAp3-X!m*$dPlBqA452b=)<PlpXq1C!N@0lWeZ!%gXfc[T\Vd]Mul:@AM`CIKi7/A.E)W(Yr;pLCr?TAq'e>V(7Npo%_"a;3@\.rl[R/0%P"\2Hj#2p5m`l(jOhZcam&J89'1bZNLr@3%[%5moS8\:BE1pQJgJ=/?Pe4L>7Q4^e.N_c2'.crX\)U@uPe!JW<mF)6(M`M+S9%QbP0=RXBMUfu?GtQ%YA[%+S]3nABb@e^)HC$_%/bOcrgGZR1U\$'>ji"[%C"[WSim45--c5N9l9VSi0`dObhl>,[bJ![GL2-O3.<$qu+uJ5k%!IN#ie%(g$A.g'i4co8H7)B@g#Q1-%jjGDp\S*1LGa?kB.ht`tGIIq_H)PZeT\Nu'J,:qB[a3^c`N*FT.!g,C]re)Aa]V%?I*;0g&kI;PB(Nl_?_Z<+"UVuV5Y6Pb$PKrp%gV-]S!hu]7n[W6t!_G]0Zlm1W8U8hV0;3u6-fr1u?_3Qr4"64[H^:Jh8P+3rVsDkWckQ9e5Ou/"k^1?%^H6Z+X``"`CDIuqIqi#b%ZbIBckOf^;nh?7b^-"m?QMC#[K7h@@`-i1HYP!NWQn?"p6u?.SU&#cbCrWYIqI;65p:Nc?`\:Eh')aNsP(]*[gdFijj[ACo;Z;70%>!!5a1t0>'&;qo2@M8'*@'gU[-J%bQMPr1\GJ&9`6qWl%h."8#_[Jd;S7GF=rF`\![qb8QoPPakMVCG15$c4HIX7>#()Cm9>@u4P%ZL7>,,iTs'ma)XY0(SR>h#6BK;FWT=S$"$=*',G_L+V8X1;rlXX:oF(I+$Kf,S)Ou1U5tdNOE:n/BAhN]#pU]ocKE^d_%bJ'?J,a%&\W0?0`m5/`lpiV/*<T-eFG7<#EM4(p:\9;Y>-;4guq9O[(MH`!D,@;Mmg5KUXQhk9SeEqKha^[Z&;_"TVYG+4DKj?^#-F_T4X7o%fV*->eGYeM9f@R9\cKk=VsE!#8\ECQ@$U+1=1Aakq"/k/8/9q?Vu25pn>3r]UjdeW/PlD@Eg=<mU#mFMPB3(t82!6)X,pMW?3'[m%OeOYtdgL,?'ZC'7Oi2N3NCL)F<:\P6M.H%ukFmHM(%prgSWG-V1Ejq3.bck`Qg3S1</_3RKr76db?ZQrJYkj<:js":*I5j&$^6;j%/h[Fs7E13?3g3J-"J3QaMb@rch!K@4^V73l^qDQ#C=u2$F*Vlh]1lncRE_K?q3MgPkm[.HY5F_V/jg0#?7M9gOc+<5G<V9bPK62Q%ac<9>BbIs]*g4[b#!VTlgXLm"0qk?SYrXaN\ED3[6Onh^FbpE.a^p'm..LO3Q]jj"pKYU@`Q(GKFEK7kXH/>U6`YReApnK^/MGk[%O,Yr@X\KM^j'X4gn?U=8fIdP<p.HS1Xu>ZpTGQCqP]QEuRWhBLZ?d)dnZdH6.Z+mVo7fFeePo]%b;SZr_]6#AAXi@t?1oY-#p3Bs%;Hq8d?<XaY'\jWt&r;\\o?m&$jbCq$Y(63Aj:&_<ZTe(fe6:JISujeGW_Cc8:?$Efo2R,05U]H0=j,>*VO,F_=%.ai&nr@\Z,@AP%Jk,`>JrON'E_K@EL;X3=EQ>!a6XkYK8uJTo6Xg,BZ@nZ3lZH;8*gs6=L;\a+!cOQs0I/!\np<TJ@:uMF6Xg,/r]*GB(_RLF8q:td%aa1mYU8-oP2.9$L^tX'8.p7q#+LuHOC*i0X'3+M;8ZcMd@Y1a!LStMH@,pf;850p6':;5H(c>_m9Lr=iC20JikHnQGCU)fN6[Ae&%`13#_2Ui+b?#0\4ACB#j\,PKuroLWgjgY6N^UX8sH*\h9n6>q`>Q=9_XFCQUf"_.6^\lZtr78WEhD43<a,9[t8i@LJoWB^:CF0:8%D>@H.Go&C0\X;@LkKZCQV[>MkOteY88YgY#fAtF63MnCSO>4%@iA+%3KQuNmd[a:W1%<3MVP'?md]O=bN975lZ#(!rl1)oVbk#J0%(c16k4dUFlkTL_SAD=`&e5AVcTbaFm"CLcA^XP,T&Y_J(3\A2iY+2Jd+DV6fDO3k5\lUM)RZp"7,D1;7`Ba0B0,KT9]?-il@#+7K%[;.KNdg<[DDLB$B,6]n/mheR]A=6Ea<=U.HoZc\h.Dsp]8W6[3)I:pP6@$.h-(\))4rEU,[V(jHK#A)J,nl)T4.gOiA&l1._e>*[%nPY%rIApibJ=+U%HR;:C1'`BtV]@sL[_&Md+Dd;1>,<6hN%H"jIca&%Dh^Us2)H=?[.umJ2[G[d]De*BS:`OB/^dL;9dZ%@N)RXH%Ok3Ag9%4h-\3q"[;I<B+Sld5TH]KhCo9Wu[A.AJl".;"O7FpDa)p,0A.'f_JUh@:=M_ZFb7+PtE4hpr&If$nXp4)o*s7/tLs+1R(%$1"")l6j#"2pY62*`:6AQ()D61JdA*@NmbWA7f.FY<j1FZ8sp_4[h'3C;=qChMMTWj`/Y$1isl!mB97I5f(n?oe5VZK#.E)6@tg)%oXpS9(h@n-<Soi9"9T^HP+]:m+rCXTYI=d,[I:<(#R7q]9,M]WoK8I3L<s6=%/S']'(f3UJjK(rKh07H+rL0poX1Zh.tU'V4OZ30%/O_@,a(F%;Y,)CnHt$kDK$fGKXJ#nh;?L6+"S:GiHZsP?;FXji#n4enVHMN37]fHcIqT*Uk&T6tmVJ@U)s"k;bYP[<I?2L\6ofp/%B,#743<.u#-3P5s$d"(o0:k%HKVXK(bTp.n^c^8MaQt?iEV,ZGD.%1)RYaTm9D(WnT$sLL_7bZHDnTdM_@W(IO5*u7$KZ!BRsu('%?-3.bJ"1f?JZ%\>H`I_V6Dc2jYDH0Y1>X%3;f7l`lI40ei&j<B&h]6:QQkU,Q!bt&eD73:9Qs:HK'?&Ii_JNJ[n.@,9X)NA*Wgm@%P`iET#e\T@7:J14[@X/oeMFpepc'WR"<)g>_Vikgdje*JE)/G-d=qplD%&;qF-Ftm/l?q]n^=.::8F]/04uAqOFYMaQ4Hk6N;5)R%U$2U=eGnsp2Y++t)M6R"948]*M8Forc)deeT2HiFFch$BD""$&Bp="q;&B!*2jf?f%8i+_p=9hN4\?8Pg78:@&lX\%r5k_H6!sCZ%rYCjFI&8!Lgigi<m?+'>9Ps^GS8=Wc@XY,\WU6Kh\X(,D4&%NC4lYUs9jXX'k)@_,lGH_65up8o)T:f<M3,`.FEuHhkAsdConl_?%U!ak(Ji;1`F%0l'k$/d>XZ</`-K@]#XYjaUen>Q+Z.>@"8o%=sG9a4IB7_ij>M5reQ.B33<>\'/8o*OFRt)M*'2i1Qbo*?8`5i_:%rDus%ULu=4>'!/Ic*_:PPGN:Hf;]!K]2m(B^q3^NTZNAFg9PCQ1J2GY)l)MHVUS)U'$3Oa's.*!Ytd&'d@U/?5!.G(d2A+(BW4"e%5d5cLJpXcXbJuZcKIi27?9Zq3-?U?$fj6kn8LDY\Z.dCALh(6=P"_`fh\I6V'Zm0=R'WG\Wk#f[LLc"GDcZp*,an4sI7'1>A@:>^%P"E93k=I#nH<F)F_XT+F<CnOi`K4\`4hfBM-id\6A5XoCmAW?%-COifGtJR.9J2A^&C4n#Qq\<O`?Z*ZZ%Z@scB(^FUO,kMH:LLQ%eEF?B!Wha4D2Del;/<P4!jR"H\5nCt==9M;ls6[1o^<X*I+HW[;p=YHiMC>&(RkI;e<Sn44dQTQV4%8BR7t3_hDc'@Z%;\7\&U.u%5>nH57;o[ReUSVIr)1,?p[fM!Z[ob:XN*!1/nQB8jrhEl&Ocei2$`q'QcDp7D2qt<DO4DbQf,OoafIMD04?ur5\A8,I`]t&F-L#E%\KhX%j>=V>nGXEFj>=WI>K-Es1quG'YrRQ\Bmtn<4jPiV:@h,_Ms2oh:@h-:_<N^J:@h+\qmNk"au7"fhShUpA;ag[:(t&2*o&Z"%T:4l.o[\rrhPXu]V%qPD/FlGa?=t+PrXrVJ)Sb?,Q-D)RnW2/`[D=LVY+qr=0?r`0RcrjCSR5:6?qpCdZ-G!Se:ht&?d`U!RHimD%SR8*3fWFi;q'W,3kj_<e^,],C[YS8l5?WbMEgg?eR;BF#O*,mXFfhe>o!-In+VqE<bJuZYKQV[&$0E,r9<dkH-^\Pf02WeD=t^u`%r6fDP\4se%VRYLom)Fb%SVCj1rFNBg-:<&n\J)Z6*28CWP;PmWjH/Sd/Y\#Bq2)PV+rK)c([r)TlhlEE-KH^B0hq*t>m,d^bUPi.%1/5ddKW-?-R%Kb85j!r3!*M;*:KYfPYYt['_(>O0`OV,spJpY+lO?od59s+!HB5\=oE2l$0>I05f'?[:B12Yjl<fYIbQ$/.XBPYP%'YjsU=#dsV@$fEY&9%HC'2s,_N*EI1<,fCKGg2&DW3Lp.d/faTpO2[VX'cu=Ye>+/31o"5<dF.R7GtlImEEdslcKI2%VBr6e0<6\%9Lj5b$Ui*8jR+ZJkBl5g,JtMt4:sL8@1)MM<Xp0cO2nYQT]g%d+3s4N?LkibZg6Q@i]"402m_g/Zg0QVMe%"%,uVLG>u#$U/T:%J%S([J(g%CifopaY-cckb@r+:-NAp4,bG5Z#rrFU6OAp4,bFt&hbI/9pNs39nN34!DqS([J(g%CifopaY-S([J(g%Cifp"u=n2)lnM%?$[c[dO0$gUb:+A'<2.;<N-1L5:p(`R>;+65_dp#P)4K$el8ZOP>#L6>?%T1:,9Xg/?;`S-^g(VZ`6o?R:J@Hl'>mYV:p`93\_nJ%_"(]1WE,3V4l1+/A3s)6W_0\,oK6A`P4I[#_6qfYPNi/]+(gr!RVgF4Ehm:*1=-0\p]A:>@FJ+)<5V2(lc:0;7j)3'SSNpo9aQ3t%<iCaiLp2B*A$&Q:3BUQ3NjV402/7dO:X$@MW".`X'<P(?F"eF)'XlKu21K8k#SldH\Q5YY=!&rt&ZT$<c^EQ\64L4$2P3Dh;P39t%1t)f>o?Ib_1Rs<Q4sh3Fi"PGH(!E_-,2?IHV[d*I.q56X%up0"W_:t<`kCOj=89=t;jWeSq^c[P,JXuIIArRca%Ta9YH"SQ4sh3F%&DtoBCEF4LI:-(/D=&Q*p3A&(2YM,BZsKV5qs5qRm,M9f5FH<SA(]Fhm@I"*?#0KJqocnUfiBHqrd&:0\7og$J(?@8DFdDtdSNo_%@[f$gUAspqP\m&%^Pc12C/Jg(aOT$Qd6>:$opTM']WKkaOo+r%Tg$i5^rTRqjpf_QBloS/PI#+1e&pq<))>buA$0t5YVpm.*8L$2%Y]?Jm@ai\^^kLRH<57$u[["TSEAYU1M*gV,5!de#F#+jamj0aRot?'[;?mcjDEPT/`S=f)]4;O)$J<Lka1cHoRc$T%QoVY@6u%YE%76J)fV<dfr6s+7nq_;INRuG:YSQp]oEpK&Q>#F/?KWn6M^XESG(YW.X/r;D\`<cB3U8QHgFT\1jH7&HV_Nda)#F7E\I937P?ge"(%*!U-8KbO0mE0P+8Yd`SPZFtS702<7lak;\71F[7\<3-LEAe%9#?nY<6O+I7;[P;OQ>&#7o.,jVE<Z%D34Cg<@l\5/;9lm(%X.J#-%Rl0uhI2q0[pQ4*oC,Ofi],8MPYVGOgRdVgHdX+P,E['^;:L9:opR(W:N]DP(?GufE&jMO`En=<^KU4%"*g8N3`dGsIYHiIG=!m>2%NT=D0'3b[t;er.-fPNj7YZ(10I/I7)IS3_\`160u7F-<G:W_jS1#/(,)&oU%5C9dPMk8)JnL).LV"skETLi\Nf9/"gJ0l1iECfZR%&2^p;MRtMG9eMM"m]G&g?C/])lJnn;$"i`ZCg%3[_R7/,>I=U&0WT8/l.Sb&l(G)--B*u1^o"MiVV.AR$["*&9rMbj".RjCRTpp%%Y4A#mHQT#r"g(VmSimgMWX"qYl2J>Z"g`Ztl"$;))0X-7/kAe)OX]\%mm/aud^@ptOq#n_Z9#X[Z:i_e-8058$9)*N+LaECEHI)*%jt@$;P!i?IfS[^TSA2"R)l@=`>Y^:)p0d@#HBeABFn-`J:JN1lQP5adR?)9p7hHi"IX@mtKJ,@-qEuT!!dQOFC=Is'BFcNkXftS3%f=@577C!lbV5*$sgE[(tQu/>))e;b$%iu*9s5b\SDDa`q`!\q7_qELqql>t-nM*?A-t+PL'!WQ`M^hK4lU!%h/Ag/.ZBKBqoi9\Y%9A/iU-HVcXF-FncOVO*+3GjU_[P5]+S-"AsfV$KMeZ$1<8!q70bXT2le3tW&!_r[bL9!V,a1[V]D@g,#PP@=gZK1]'r#'QoKKs3f%JsrZqL[VBAp&eBM)d#X_3[.<1=H<co,(udf^1$>Q^_eYIB/EPH^+][Brln4)`./:q:B1<fi&iHf#p[+rP^8a`ZBMa,S9]<8ru@Go%)%K30_F]^C[a/nOn3s46gHf6^oM#Y\'l,Y/l^0F&!:M4Qf5JPkO&u+N6>l6;<Q>6kG8Z=0bLrgaYU+*]kuL:CKJoig1Ij9n[=4hG%nBrSo'[C5031&;>Zq82*hIHTiIRWP4?o".C.B/,Po(D`k"+?OIM+/]!lLe;4LIh-3`(;hiCH(k_'1#$&Tsthb\tF.D1H9)IUHm!&%N_dt5=YsfFjCQ\lUX[tPguP;XMIX:lS1KRrhAVbQf/F]ZcoI>j]!dtJ57;gg<A&aa2I\si@mRsRG_[9\*'X=%es!=@mrsj`/c]id%gbSefc]>l>9&`O4A?C64W@:%WH*QE?S<UtU"'n*O9Xam@]crl@`/1,.Kr][;%nlZiT5>37PYIhk[,[<)(g7tFTl9LTqCR,6Vm*D_%/+EU'>E$9Lht"C#a50u)/SMKc./;>L3EQ1(k[Ig$a'-aGr^"2Dj=C__%7n?GlZ+DanH;%`Ib4Ylk$R?2W8jP'QUDbXOhW6@CWRKa%Y8OU^fiSJ$/s!=^GQ#*'MYKjQ=0)\&O\8k$ooZ>3LQV4RAOknYZUg'YdrUp)\RuPXA@([Zft+#5L36Zr&eKH8UZP*qEBsTmQ1c?^%9R7LX6S]F@(D9i!lZG;I1OW(i#"-MO5kfLV(Q@gpaeY&=cF"LOklbBoMJdgQHQts8#O`KrlsuM`m8Zok_,Q9CLJil;4-GJp1=t`q%?51Q2h(/#k#1I3*EL;%@W#(5_Bnr=$4CcE<Q7S\DQP.T)+@hUR$Eq"m!kbo=Zt#Y6>1t:O!l#H34oJcF>c%_gd-=dtm=tj&8;7RR%NVFf7a0_WY4L%A1pE!ZeS`,oKQC=+JEgg?UH1Vq#a7uLcU;FUh0hb@69BqJJ-"Tb.pa*.S$H(s'm"K)/,)>q>F^Iutno0Ur_HguL%@<.fD!bA"B0KIB2_%Y:+R%3<*LoSH7_rNYhKYHP1_rNYh";XI^@<.fDK!XY\b\;OJjj@S*SE?0R]?juRA:Ee")1IF^qQpZpe,5BP%ZPLS`j4BscT4aNBn4P\^-MSm47p_FGB:E7k1EkB#;Nq/DFemXR\deo%&I[V]`7"]KQ^P3Cg\_]8M(_THZct/64=8MID"C;%_7_ZW%cSiOk(jV]]Egg?=F&o1U+]t8bknLmc4b`&:-<'gTo+j1+0@;2<Q=4g&?\1;8__=*q0=c0B-E$YcZ'n%t0KIB28Z_,,_rNYhUl$P#%(ac0V--R@#B:,4OQc+-SMIH(*I510*q/+m"q\VA;n"sFVmU.Vq$blmMm[_aPZZ&nQqGV%_9/H,MWX-]bjWVQYW.jdR%CnES/NGt\%a4X(_mZ(VEdp/a=$C+B^b"[)"Fd%^A?&sf5XD>LM&Nru9_NF\l#%aEc:c1Pu%chK,:c6*Nb"QEU$Q$b28_P3NaQ3Q#*HSOthp'F'%g,H'R6`b]?$V.<Qe8R&R8,_@&7kHLG&!7FN)g@O7esi,,3pS=QXiF(u(p'LVZlUk0rg7cN1c)4g&+nj4YkDp'>37_(*R,GFL722'%EEG$ZJ9ZL*I+B4Y+6f>rr%Z\!$*7oYC,PGGd(I@:RqbAgU](DXV6VVp1cAFb]!83=M<rth9aWG*Zs9Xi.BoVQ8LdZi.<@kN=X:1h%PpQZ()OhIlFl3**3M#r<d2mG?A^Cg_q!?B[X3XYP6ZLse9\4ItoG9.S`drLD>GVRi(CN-H[DYmbpEbq+W&32*6CY[b8WNQ5ljJ-?%$);I?G:G9\g-k6H;Aa/&j)^ferqh"_36kB>mle?3^t,%M_,#g[G$SO2lre<$%B<kiSA/'bTf=>+Q>1>j]:7;[h"JQ,!P]tp]Q_#R%L0pPsQne*HoX>p")M&dU*4@7MP?0##oQ3*)qDes?Y^=S6(4sKjo5c>W)D.$i_Pg(TDnMLZo3QpA]:@&F*R+"LQpF+N[P.m[\9kqK%DH;['dG5%4EPGD%Ih!"*D^u4"!\[KB^OK?E<1+?gr`].8-n7$IB%L5_(apjiZ4b-hc3uMark+Kj(YpLF106Jao"*E^E(.KC-Z"CC%4L/BOj5]0;Dd:".ZG"Yg*u@N]/\e(t428(]rEu?5=hL\=5're(@+/oqfZ/qiW3%XHEriaY`eWF*f<6Vm;QI;Mj(&,S8A9^1bk'j%%;gZ'WiGsof#E\iT+n+75$)26AlE\9LIr^<6'"3"3G(7->B8^_EBeFGAq*l_\mf)u2M5P+UNI.j/Ct0-<A@m7R420UM]q=pBR8u;7%@6g#GY4PZT@?0a=XV\M'Zf5jPE6M0VXQ9a2fI^l)$:kgOoi^/FU;;eE7H."Z_U9]*I5bOY_@2KK>/mOVB^!j(JZ58?YGG[JeXPZr%P6HN`m1&UX=l0kb3G!>C0YEN\"(s/4HR[RY1ECO5Zi60;;gh-"A6JYPnbuGADccEd)J!URfc?bW\ha5[\bfhJ(0.B'kL4(#Ph)5f%l^2YsnBh%i[QFm)YRI`#gtfBbjDpTZ8W;NhfZ.Yf:,X!6+&hQ/HCN-QK+6L[')/^G8d,o\%lm`ia&1+(+khQAMbR$IlX/'pa-*0b%W+S$5`3CK5l)nI8*0j%m[s#u`?5b;^klH#X4+4eZF"fN?XJ4BT&a.baS+@T^s-r$GZdN?).V<'s*76KFXCA'IMli^`[TLKW[6!^?%R$HtVn\o?7QT_T"c#U1,ef]o!<^<ai=jC9Cpfa-JO>%`GV=+j5Y-1t<\N$>1^<U=N2PN?8iu*btY+4c7]$Rp.9_JH<s&toRb\O/[%UKJ(PVs'2D[93uB8@TmKBpS@p;9iA62+j/*f@VWeVIRp*RcT?NYcDEK2++[DQXJH]'X5Col7"`j!3NJ@;up1MIjURhL2tJR4J24g%)_3C'.k+8u.Ym]O&s[FBV#YqL"c2UAU8]P+/!iYOb;C_6.sQn=Y1BBKXl(M40NJm\0l>?bLJc9L>F,Dunc@HT>7/`L(FJVa@^1&)%5V%(N;ES':!jpskb-c/':k2U9''`X^VZ:ReQcOJm2"sEL0=a2?kJ$0=,r)%L6/?0:]EI]B@GPQZ]EJ#K@GPQZ]L4afVf\QSB>0$?%?39R^7SN-c963sa[GW@4(NV.t_%88.Ss"boE8.Cr"Y\Q4J1uVBrjl8S`tBI&T=18(^XhPA=IZNeie',$6osGSG;XR]08Y)<R[]58%1PjV;QdAo.LhV9^BjRK]*I,[DosnXYM8ip2h"JRpYWf^1Z=Anh]JS(lB5MnX[ptFu]_#R_1$@s%[q!]J^15G>?6Ue39sk$0?4p7N%f2=,lbYKYl]8f'8Ra*I"lBA"$,o-1>Gb5rZ07aA?Q9I=jgJCea9;n@FcS.A=Qf'F\8/0Z8%]FBVL.$"j?@mOO@@/`IkK#s%Uf@V'%%pgGr_E(-%#[Tj@^P5-rc-n!O7HY?'20]G4R(Yn-1O+cE03X+PBtUf8$ebp",^U?.kD5VC9;jg5cS.A=Q]MriXH.$40@>4*3Agtg%]L:&>AshMG7hMZh'",hbL<4/BjRVLMeN8_Vi%-ntPLFc5B%rcrrO.?FE(;gQqeZQk)+8fk`_1>PRR'F"8pKU^9S8[:T#DRmcJU"k%nec$#3J3Z3KZ#hpcPaBKh!:\n4D403Df,/c?dX#i'ePK`q_$4SN'(bB'&>(i=BMWKLKRD]XZCgU0I%*6\msK>M;#3l(=l*jfQmp@%M3ge5!nLLV9:e'.qs,i8-$W#JOm5JGXYF-KjiKq/H-Y=o/'>l4j!BjMl;UK[+^W#<1Q+$ZSA@klqH00)9-i-C>X=P_]S-3@5t2o"%]IAN)_+W:<)/&"jK9mkUC+)F2#[ThK[O<BH)8$+'dW2IkFh@kC`H&)^FhAu#Eu8+78+=rcfB58&H>4,+jRS\?@'YEOYiDXl$77iZ%$1Nkp$77iZ8^&84;8HcJ0=a2W/"#\]-1kWi<A<+B9:0L3Y(Fb*??1>8<\W4C9?;sZX'i5cQY9@79EgV#]S+EZ">P<M%b?E%:_2,^%"d9t>AA4PG*P=4q4_TY<\F"o\@n"%@VpDu#]ECd\A-J/;]]?ApaC5o<;?"P.!Ye"G=/Fa3TFd5$0?KVf9.QCri2)\rLb.M]2/*V9%n<2;=DKuDL*PA2>am6i;0$ak+&=2i!U84V#9JFeV]H+WfDr5(/P9%;hb_We:-9HI/i"o<,9Qon<7c7A"(,Cf7>dh"nbi0q8a(tpC%*P>p[YGcl^jRN:[)Osu/I'AWt>TW3g&(^7`77l&E+0=KK1$?]Bie)BdjRQDSI'AWtAhrc*L6n^m***aqXQ(T]WaJEg_)bn#HJ+Ze%I'AWt>TW3g&(^96W'm=gQmu=.Pgam!jftu`?l^nWX4!0s?l^n/SDU@+")RFsVBrm.>&%(Q+0=KKnG+Xd5$7Q\>ol.`a_AD@H$r^.%+0<)dF'UQQJsT^`l\Z5(nWM_.1imo`j]S8fP%D9Oo)"^e+0=KK=>*GD/(VO0o6m^kJX9U_98X7!Tc@\c01e#G<YQXWj!C[OW>3AW%lZe9=A;c<Uf'sCHY]E-hFYR3CkqYq-j!C[n_i!H+FhFMJRpSH)cR`BH?'l@]WHYW`]L;_'<>G)Ki[$UoB-i6oZZq=+Uope\B,3.O%T56k<cR`CSHa09+B,3.7qH9m+09M(MapNE+nIfHgY-*k!(,(L[AjqD9ZZld4<K&^(.`#$:)8&A<3*0,$1Q.Uh?<27jbi0qS^T=Mu%a*#.D/JE@8nc%e\H"QT0b@=$cD`',SFl=Y9PAM`/R<<^Z[M8;Vi[*qr]XgG$=hLQQ\QV9BcR`CCg$9Sm&hdZVo'-R-B(;$hA$q&E%:'E:Zgi@Ok4L7LQ<!8b'R"BZ\_bbrs5Pg0Tj/'o3T/DOn0^iInKtKj!Bd^sNVN!^QQ!gjIP7<4.e0X#8r*/'6Mt)tO,;6R*f(T1b%qtO9X4'r:IWG=rSLR1QoYbSl^o^J$BVmN0bSlr_eni3Bm^)/M3'M^S3&+NQ'amG7GGRsO]>FFRLl_WhmC,:>DSs$+%4I>nlKh#+t%r-!:n$ecACguceakeDN_A_ZD8n)Dm%>/]9==1F@G9%QPCS%RP#h655<Qq[8G:I9J;ee=AK@Th/NM;L8H2KJO<\o#,HUs!8N7HEkQ%F+5(G7KGT?q=-a#6/0<^mn<,fft]42"6t?4b(j<ZIK+sYd=X<2?uTmSVsEqEAD5fWPe1#%&aaObeSd4T@dCdm$eWsHrM77[g#rcq%nbYn,2#;BZ:4OTWo`DV@G.6feh`SgA/k4o=X"(Omr(-I%=pT$(_QIO7Y:4:h5ro493k,c$V-dTu!>-:UV4:jef^lt"Wh%#`L-J;A%G)DK;hP:QO3^KB)iP`Y._6+)d6S8=#^6q!KdNieN(4iLP_:B#;]8@>XB*%[?@_QX,go/Z$BD2.5%DHj)#L(mbUg69deT?F'%MW0V%b/o(B%rY+@Y'ik_E['@1s'CCZ*j]1',^pM5>i$s-:i:;Z=7t*KrkoGijB^bWS\i)u?Hr>;?+ghh-50Sf/oka&<7l%P&.9ET)BT%o%05eNNX.npEIB0G<O9"Uc1_)\:+NkaN9&Q74/VbrBiA-0qn-DeHPj[s3Dg1i<V!d[9hVj_1fS@N9kM16LWW!'$2BkacafU_R'M&[B%7r>gtrakb39:Tb%?;*[Wl$(71'VUc>/6qXh.o0C(4EVF,C/m--V`nu1Va[0mYJcPhIk5p0(E9.T4s.,9^rO(Jdd18ZU6"6n\!i^p%D0J8A(]&!U:^AV%^clX)K-]4pFYZiPdct*(Z&c_^JqN;n,hociLK1_E'AKC:ca5_g^@LG27m+6<NGt<H#J5P;;Ui-,.WH+.-"S?4%nT8q?gB@ZJ3D*=-iEYe^0D.]mG#Gg(YL:_iiuL$>n!EU_g&l=s@r5"aT:Am7pMESH'@R33,#4fVq9fR+T$j:%9WU:UE&a4sdVRje%>uSuW9c(-8oDFRchIaX)&*cHX:qAm[A<D0;3TEM8)im*oph]C<DrX@q^jWNJ7MiShLMOCO8rrA%.IFA.6$#ZVLPb<u^!M&#UMNsg%F^HuEWhuE_fgk!_LOGH)]Vci&EJ<"L%!s]LmZ#E_/9cU&-?U)^)uaQeQOePF7"s[s9@@`d7[c#>AVs5%-B,ALL.is`iZaeODmh%6%_7e8J_De#rI@:%UfL&jk.rgqG?"f'a+c'FJB(4<fFmc)&Oj(l.bBKZ>HeT5RS*02Dfou/_a$S%#Gm_i$N<BdOKcr#-m-2Ie"X&ec%&O`N6=fGkD*Y]E%UJ]!UG?lUcP=<WLbTNX'aVX9T@DRZ;WX5Z5D;V8P.qDXl-DGM5.$l_]k,b#@F:O<H"!jEJEf";70ZM/&b!0/j%2J>>%=a_.8*3Bjt7_:%t;^?/\JI(2[<5./%PHCcF\E?#>&4?I(G5I=p9>4us7.l<ZHUBNK')$6Z*((uN`[:2CU23O'k1L<7+l@Dh%@2^_s<KSXSR@9bYf1%6A-:@(s1lp"n1UW!n'<V1Qp0j,44463TAB1)+_A>-+r\!=0h];%kpT\2>D_BXMX.#@0RLW8c5AOuT:"P<'%.6##,a<*J!P$<VkZkJ8j9Z0'Y\12/nQnAh_ABlqadGiub]N<*0]-?'nS_P$X>nP>MZn%lN\c0><9cRt\?_kL"nD\Gp`48H\r[><N%0`&],_S+B6`4tPb2%fA&H(=,UZT)?nm>\i#$2$W$+SDqFlUNSI#+0*XU4\bgO?6SRb2ZJ?HV0lPE?g[WoSm;U9Q'?6-f\"-0a$:B%i`iaoFDci>=CoOAh62k+l7,W^5#^OKGL']fYeHM:pWC53o5=7Yo)(h+;=Wg&pGI\"l1\0<_JQ&,`33E;dIbih<nS%7&'4O]HgD-W%;_EC8GRj;P(c<d,?6+t>LRl!d*IkgIT<u:VqIjO4HGH@\UK]S@gDb&TM.dD)Cad,-]U.as_[I4)7;i"\-E)Yk"M[&H@k\e'gXop2%)][)N0QnbuE[\8pZA>K)^#nacT(g(M9d0fXc7lYH50/(pMVpb7LU5X<28\OhO&^5NM"pJNp%ntu4IGmL7UA;&\jY-c*\Zb`RjLg<%JBr\P$Cq,WR):1*Yhm'G/6CWC#,qN3MXAr4$W;`>!mb)smhU%l*V@#;r,/KhSTCC3hCEbpSG'Vgr,.I!39tkUq;#N:\CU9Fo9FqC%4`<Ku>OhQ[o"=YnDOGiobk'EW]4[ND-Tl<1^Y@jig@Nne]4$^[m!3CFmdsYq5+eN`fCRR_5'#eiA"L0d53-b>o/<[E0_W/OXF&fI%CD4p;hZ'8&"P]NWT&76$.N=Z1]qEM[7F,2amoHI9SasF1FNh#JH0b:^L?NbkcWe`aLA0]3kH-[kW6aolXeYEu;+o/:cPufHHU#""%Xu$j->Ol0E4E#[!&PcI&]T"e\<q<nK-FYp/?'`!ImP^b]Q=p/6,tDsOKB[X;H@E?H6Tsm*?R*hFVIr?PT!t<KXm1o6OQWb/GG>A)%Z_"Xth_"MKFO'L/o=N7HUKd?&p&&]o`uQRu>W_.plhT?n45EKS>L2b]H(=T@p&&^V*HOo$hKjW0l7"aZH0b:^B_e4i]Mij>S(@$d%hdaa/kH3okC\,R5Hes)GOEK+,AY-B&hi1WMeFOa<46(Tj;4V"KoDVrnB8POE?^2/.,iUE<_`6k*lhTAXME:'Klb-6H:3Y:\2Qj-*%ddu&]].jiI=jL;jqR@O>]_23j'f`oFcau1DZ&^7@edfC\)+M8Y]l\jD#<cug^K]0Hd5XhUKR)1jZB(8?I'Mk:G:<#gbT4p'k:K09%44-$[/KUMs^Dl[#_k+?/hi1a^=jL<un"p\A-TuB2^O&sBAhDV&gLnI=kNrcS1G/>j5.a)fGr(<GZR;J_D*H]Vq*Q^J\L3g6e-f4:%2S[1Se64f7aXujgk3e2P3b:.!]sSM81!nuuD8<S!UtN+I6%J%hZ%ju2.H_b$b"geOE5p\lCuf;6\&P,t:AL-`h`sE:Dho%%4=*A`%GiiDQr:jFI.o`Pc5L_fa/0Lif\64T9Y<ABFbSC#3dr2)Z5hN144'93o!8EgLAb[:<+2,68.4`LcCZQerI=?2igk!)u%\/bk-IZ-)%Rd0mnAD?S#.fs"4J#J5Z=23XJV>L,8p26lhplsBl&$m>5fon?I.7:H':JB!NB2<3,A`)5k/=JifO*nAQI4qY_GNY""[175\_bmc8%./;?)mo=inqU\\1'%=0\8tNhdf&]_#3$tW]XWOd]]?BguCOdC#p>IRE.%e1KkA:$KVJ:?mk=EpF(Ub`G"\oq94g28@QYb$TO^<ek%"gSg`7ag>iNcBOlgY_U8OlU?!S"@ecnL[0_458V_/UgE-ZFn-hEK[To9q@@qcC#Tk19q3Yak=%-Wfo(b's#W59u4H7mMf:o1MOZU%k7UK]+*@*I$0>kUcop5QD`kc&-IYEggt/9er=\u='91Js)p)q<]ORd:-d/<#YB#I=au[1!PVUJ=O]58K\OJO@U/7HL?GWY;Vu;DD%YG@iN;hg]%-L@;H/5q,=pDNHA:BY*,rTTa2P1.Rn_"L\,F.5+6n'NP`jEAFfOgD[%k'$LB$Z`l<:._8tGCM>2_$]U0,JtMt4;#AN%%r&2f[kL/K"J2$j<EH&fIR3>E_$gk9nn8L;#-`H6ctu2%OOcgHpR*4,8<<=dJdD403UWJ'N5JdF(GkjX.KHD.\LDermJ;J%O/]r%%3;K/&'K8jG#HtSPnNWP\'>&'h;6lP6-[b*eU4;CGOh)bTcN?Y.IU'@\JY9CuZ8W82f6R)g4]J>V#OC00o"\r0Wa<h;g\FF$rL$o'%:[`)_qX&)7p)`q@A9h_ZK,8`f#Y%DqmtYQ?94kW<EVA<o\-R<hV92'@aqQloGnZGlj_8TV*43Kjn8q?g_5]`XlDMU/@-@^5.8hL@%H#T5U)lZ0hFEn1\:OEeN6M;BVCf7(uP.A?[s!ggiT6k0MKN,XV([D>I/p'.@#lf^LODA`>Nnsr)rm=`>3H\5RB(fWXWR+1rkhiR1%e,*O:lVsRGRm@"&'q,Jq2:`T2Q*8eUTRN1p>j5$ra<%TM_9RP/#J6.,-`T#,<Ifg?^p&a!=+H%Hcd4.:HNH%I,ofanA$#ehA.=Bc%`L6rl>or>SP$>8#kF+H9CCl:f#Bkk+4'cnZiT<Z<NV6'0S^/A5-K%0s:DIeQfI5R`8j!"h$es*B:*Zi,p3kTOLaNTMi@tcmdDF+o%GZEI]#,0I^fABK/On\8t,oTD$m1$+:-s9q"L"@"nNndo_X/o2[dOh6$F;tCNc5E+ALABZH9*'(lBQ)ZdaY:-BboWL8D]YsSm?>P*%2YMCg9\c/$[i51l_'1=.:]k3_EXhI_o9=_3hn=l@)#+V*7=<39-j-e'7t>'S]$+#hErGbV]&+>1OPOjEZ6gBnh8ka#&6D5D^B[?#%If"gqFF-9q\A?5-Fn58[Ki;)eSW@5&^-fU1@QtG)o22Os-2T/HiC5JdA?,9n8tL>cOj'Bl8EfNh7%dpjQlttj"O8rM7JqQ)*=\g8%oU(2>8)Eh8_PE<PSAW(>80m3h-quoT[8,X?N/;b`j78GH*UigU(\ca+HZsP?c6e^1hCml:g&IV,DooPrD>%e-$XYVQflm'P-4=DG%<(S8)NiuKV"1+Ykbt?C,8\mEq4=`i7BW5;ddP(m:0"kmA]0ZWUj,oh38YJ96GZ!or@!=']Yl/S(FU+M0g[;11oZQV2=2Xg%30aUp%mgdAeRDX+=C$@6hSrdpXS9lGmbEVKId6l`<8lcP;-XT/NNsfrkn[.%=@RasOW;%\SnW^FmLp/6=j<V=fZ]^iQ<6_hB-k/lr\U=03%-iO2dJCDBnda-+OhNPI]BL.<o2TD]l=90!pf`g`hoc#.[bmL#CP`/BflfSf@>T#(s]Qks*C.>9N"^+G(69DUu.;3'X1:EA9Z-U%2%;NQ)#g.B:3R`"HULEO+Ej]O;e84j3"IpA9PjPS_4:97FIi33XenE?5i9[<'rY(`^WMcDQcCug[;f1oGn$R/`E.q]'S7F3YkR6bHV%JhVgjous(34rp<>b=Td6H@rWL+L?>Z'T9)^).YWYaQ8O?K.a6<#+<^D_L0OLL1&6u'6g;h<g<tOP8R?6n=e/-+[ClMBL+5OF'>,'%9g4XfXj5-c?Fn?pd\^(.+pAoY>+JZ;Re(1e\t.[^s$j+cS1">GX\Q<O1)4t^[5rfF3e+OuJ$h>Lh-[9Za0dstYJ483^KR2C>+NE3%Sc?Z4SSTG;g&'=br71*1e`s4?25LtP>X+2>cBh;i!0N'a[4363]0=mY>SV-a+UREB,'=b+-J3kWm.)"iX^Y"Y'3,lAVf2MpN9+%V%>D-UVl.e2KG0T+lO$>@FgHNML_&&LtD?kkmco36jDQM6qXs4&Di""Q8g[NPL'u$Q,gH/!WOY2'K!SP$-XWG<mYW\i[)+"\^]U+4k%8$nqsI\HW-dPSscRI*;0<'\Md%7%b583Ib_-52VO70&!HRGOhNFC[S2k&1B/]ftbt,-d>:o=B+?l*;nW,.:>'$9hbB4I0SudO%Ea%k86d,3BfSrGgW0%S1fLI*2h(Gj<cP1;o9dr6K+:[Jl+9IQLR7aMI8hf3F;oaKbChO?ng:J3%:t-"Ok">>m+[,`0M+RBNOZ.+rKf$%Ymb6h751lU"GiTm(iVBH"r,d%I7L3XmC6A#3"&X808VOSrL08U22\%W+qQWk>@/\8PW?D57WukdY#3bNXFq`m9WWqN?R6-S7h38q%_,@,pl`5]4\8m>,=@4ACg%WHhQj&a/S\U_c8f1Y`E\5N3.Ue8m,+Pcg=[BAE_X>.f1B]roXG#9cdq?:^j9)Asq80MO"\F!1@+d4_%:Vf'4]UM8L1RhC;/5K3P<NS.3"R"\-LUd6[FFA)_C_Sl/eO]hg;VfW=L$N-+:S5+WoSUqR^fLXPoeO2Sp`__J8cOS3?PH?7DleGn%g^jseQk@U(+NYluHff#hDp(G08^^JcTpZlGRG`o>d7b%59Jh)mQY(9"A:f6eLh:[hAAV>\5VlOgR@;mbL*RF55ZfKnRQ6a<P%dDK%8uF]W;..j2aX$:`H8LfhP3K]iQt.uB`"nP1g=<5s1+DO#Nb3<nA?qpj]/n&%FPqLQMqq=d,a43;)[dq?59itG)3W)ZrT%N8'31^R%V3r;KRD?EgU6uuHRHF-LB1``*,+5BU[P#g85Va@%XclEq\MBhG*$gqW/&V^pP>(%oX^$Fsh,RdfD!tl@B8DmF0/ug-7Dgf^jd3+X%MtnYF5C&"-WV$aaCnUch[EUA@9i_d$9abi`*opG]QOX\\.CS5U(Cg0dQcEfg/j4Xi3Bh*K\b,YC<1YqCcW.3e0=a2?lZ;=\9<e+k%eE?CPI510*q/+m"q\VA;n"sFVmU.Vq$blmMm[_aPZZ&nQqGV%_9<cNR.<j2S4(3<D"6E8eXufA-%&F9SG^]:^$.+^WL_G=5f\I]X%7o7T2Pp@6s'>;6;38^GaX1A7q.VE\K>?HW&0>-_c?[R9u%XP@;V0>_iKs\%5`S=gJKXfe2([hdUeP/UAX,k!mpj8WufA`<%+?rIA%FV[0d1Aa;n]<km<6^3^97)'H'p3fj6m^c+cS)gYNaso8d%u[u+@dl[!RL$&9]S@Rd9U!t?!_]=[3Rh:g'[[T8]p?a',o$KdpKFi&%r(?KGV7h/4%m$>P]RC"AKCgJ&`;D,WHPLT:1c'lL7lJdT2>A(mSqRFh+Wb2D1Y[TkW=g1FR"a$bWiP&'lINl.0#phu*p/d#!3A&c%'@*lblDCeHfMYXjOX*;:ofbB'[[u,W?5Mks/?XqRVCkag="9JtcI>9l*+i&ZUbd.U<3+KX1=DT%8FVj;M5>-Nlq#3JKe\VSPQt-"%-u4dX9$3,D;:\NA'9r/6*V^qFp"Z)VkP:;>AXst]=ljJ%+W0cHQW8#dPNP$ZrQ".6bdtFdW:G<PFT6>7ce#Sm&.Al\d%"E`+dhh1%JDZ7!jAj0]ir5[.aWr3[j3D^7K5&i(_Z1UibKTH,Z)8\!l#d)5OY>9+M8Q\Z?k5BRBn93K756I@&($QEEk/5qm4XC8,eeJP[F6_N%Db`)VD")O*SW%PnEW>M>/9Z&(rVfb2P5Q>oWT*a44[7IF]^Bj4#cMf5DKLEjJLUH]h5&?69Kmk\.m'Nb[j<U-b&E\/+/[J<O1XS%%j(>^?B><4,E%dK.F@0Vj)<NSNSA0PU="5YUVM\5&V1jQdLcd.tGo/C^A)1YWYRkVY$j]:gU0-E!(;pJTI;ccdaR`_fUT:*!/Wnh1%]rXJ?>9^U`SeYu-V'Pfs\H;eD<+f4MPO_s9.%\*,)[Gp[GWDIj[WGD[27Yi8.ZRA$\\`!;B`PK/75%_ammdf<'mE^s*AE9EBGbk^%2bQ.h&>'1$`i3^(.m,_-GA":OC@"^`\R`JH='g?/H54JEI!1"O5jn[gklKrdSYWdmj/XGL^OOef)u![>m)):GN]D1XI!0nPYDI1t%/O06ZdGDB\>=;WZ0MM6$$<);^Xe?5>*$<`Tn(l:rU=;QqZGLa6EejMe+>\dnGt]=(U0uI;\)DXISFPG]gm.ms(U[1l/=%CP\pI\U%Q&#*C-T>T3U<0GsId.+rfj2gObf(q+#,0<>X(^cO4&o!g;n!R@V2CI(hUCYKi<3AtfmSZ)JmS75s#".`Gq%IQPKj^:c1akM78cCR%Y;B1$_B#koHG@Ic7puFqk#Ita],$k)`'0A%L<m,cd<L&qP[F3!DU2Q+<H5cZ6#Eq4=b_<I7ju4nqFPc&`SqK`Lch:n9;KdJ13b5&%?ZZfZWF>gBfXC\gYc1WH^^-LCO-oq?6dbJI+hc9?-<-DcBg`u\[4[p&U>kd6:8lm$8!tdqg%.D:e=RN*W;n0t9rKh0:.;i[<C.Fe%NYFM>=]LB$Wq8AF4'&p730btJem#^]:/A6jelfR[U:[Z'f3>g>G@Olnkrsr5OGo!<QL7CG2Q#NH4l1+jFJ$LU,^i=\K@qm5="-n:%XKQ`<3-h<,P)69?X1G-.//ik#lbsWnoO]/;fiBYm)AK:2?:-4Y:$Oj_<,nQ<A[,DUaW"<<l!Sjk&o8UrpIPUB9ual<SLj"ZWYBVW%)VX:m>+JB+>.BM=L4dq$,%mU*6edr^mbL(f1n^2b--^-.3@t^-dY^Dq72d)tKGecC9XMl%/IbG"Z6m2X9HSNV-Alj18jb8WKklDC%bWhH)_U#VtW"0?aqHR.(GG]?=B)3U8(.KC)Ur@q2dPI`S+Gsg?oZi3agCfCAeb/R[OEoI#6lTF]aVM[ij,9dW]e^R^To*LKdlYJ6%5u#.'%=2Z?Y7q_tB\a;u<B@7+L@I"?HEC!3N%0HW`A7V0ZaY"Q\DIgamD>T!$r8s5CV$b6F=,Ka'c[6h)-n$_`QRXRj+e-nZF2Q'%94EenQUb%BrNJ".Rr.D!.;R)f=g=f]eBl06eeII[-M+,$A5-c\H]7Qnlsri,]pR$5ZBI/"OXkKu;`\&[Z[cRP592O;,:@Yt+Vngl%C%-f#IQDF$$TmVjp=#]pa.u85ITND#S`@-Id"Frs`/H\-3F35I\/arW08W)@O-Ii+*6!'^5q#KrW,B244:&o'_m?Ep%mk998Ug6!%nfX02Jc#GXnfX/J#c\3qGU\NI&-_Cof2.@1\22<soZj]8dukE$r1.]<1RD`+V'qes6R%E5Q_J0_Y"QCg01NTjJB_^UJ68Igf)*=1%'[F8cr>o<KTmf5Ch,S[aCuB1]@^CMJ=-q<DdT6=\JD(5Sp+[64OVIRT>eg;8qA7cPZe[Oc=JD;W3dj(s`(qlLQ4Zm#kpH&C///u'%82jtBbu2F#2VmHbQlqo8dnN60FW'.KRr2+`$V-*L%Ho.(cYoM5h^[H81O1G.A=II'41:Am10MPFCe-K6?"Ffcd.Z\#RHc.E_T=^l%jI1]ClOZ3(rE`\m9A>Q^URRJhW@N5dVWfF;`AUrFco"S+Ud\[f(TDPgalRMs03AWV;;]f:02h+X'0NP]KTg8a8OjS7BeRobQ,'No%,.10)i>f2XMf_[@V/<eXQ"gfpF;#eei_:S4[_^7HF;+2aQP!!$kpEp,jb/h7\k,j`0\]uJ7Cien7-jZN<p:sZNR<-+SJCB9li:Lg%_9Rp[PFSI]Y/-,!h=T3'9K-C]D^jXURr6+>Q_fA!D7W<h!Q9GT^*2<#Zd]sEdl4(l862WeAbq.''<5_,<i0e+2o2M9Y"[`7DGmcW%(D'?MkpEDB@?U@iR;Tk^Gq%^Z,2FNf@0:h`e!8E6h'=K6Y1T$30<;9575p@a*^.C)Z/K*Dm6'C7Psf4L2o2M!7uL.Ph*a:?>Ku05%9K0(MPNZ[,Um&r6;AH+O#!4?`9j40=\bj&Ih5&1l1=KWD7Cie8(D[qUX@P:PaB)Q@S$4u,Ka'UhdS2MIB-Q;Vo:[=tCsu+A#J6(:%Z;!9?3kf0YPARl;);_3CPARnQj`.kp<f_,"&(Z=.VIai_pm0)0-eia,\eh98qBi=Lo_laE:naB"^@+=8dpfm[cA&W-hmAbg=qKk(%;:A-uDSeM<-gI0:dnT>M*3!j[9K1@V<;Z>_Ms2Rqr(ba#/Z,"L]/$Kphm=6V\3/'d2_CnrV"J3+^1f=XKTRcW3/q-clC/R<9a'uH%:uAXIDM";CE#jNOh'D7X/['*P[L\gd($R&cQ8OQalprPH\X#+-FHanAqPM5R'<N+WcPJR-$+W+Q,i]]1ohCA/-<U/*e2JtVRqQWn%IXT[S\k20;C:CqAYMguJdnLH^Bt(fj+l*jN]Y7f&_;-2]`!m##o\3M1F;)<8#O7e%E_L?(aR`UBp-=[V>,X`_WGfpdmK84?5."'D%Ol#<m7CBi?i7Q)jU<J:EqPM5RPKVu[IFDZ:alQ?Idpflpo3e,fDd#gn\NJ0e2bC>V["\R`DD$g-S&1JUDqVW8;EC3'bTI'@qc^^-%+7teH?Z`BUj*h-0Ro>PY-`-^P`[BFK;";?a(IV>/$*6!3,bH7aCVPRtWE21WiPAGKrtN0tONh:M-R@TjXbkNiU3eIp[)s>)j9EB=%<8Ffl-\eXZflLR]/2G^QO]W4eIIDkaUN7r?I#*;+;`fWp&A"=^o=_/f0sJdQnk6JHls<(kGH+9qM!af??*I,\h8D9[GZ"SDqrLDL%;s_2!K%Xa#g!<CL[Y$Dcc26BV@?mI%_.5blbJ$1uG3!m'pn#$8jNUJ&/kKA,n6PV("V6ml"QVeg^!r[hB^2?$:10YX56*Iq:Vl?\%D^\+Q?4L\K8M[n1IcAUUYU3+rJ8\Y&IOb.($K;OWVf1"QSj$'`r@n0fQ5HE-%U\BY5JFhkA6(,cY@P[Lc:@I$06c?WR2qe&53Y^%%Rt]SfjsR\U0GXHqlI-DKHi4u1]kj$.&u4LY-oVIe7&haUC\T]BYl`-1K#ci<&3>q9Ib_Bh@#fXA0ZVrfnX"&(*h/c4aDfCp8TkWZ%jJOd;F6)3!I#T6Hd^<E"17*qa,fM?pN"k]2LSZ"D`CVkIWX=e!BQTN4"rafLSFg\TPP>X%iuH3PP4+a@?lk2\GV=*X;_ck]M;sqc%0]mi0[Z6P1\^=FC>^7:o^0ok?[cOj*]#d[qq`=U?;o5=tm$H3`Gs*a%q;R(U6_!nk*No?f[,W0o?JG-XlWX)+SE:>X_!CSnEG9$q%m?Fe@%NunO,!H.UqsZo7V#.(pSEatnHjj7X*sZ\s+WgOG@pIaX#=>r=hoGo\]&12eE:I*?#sTg-JNB)gitOH.K:Cp!5q2[jHH`d#%NFT8._b?@X$HAR,dA=(h1)Jjg]^Y^e!Z7eQjc9o.noXV7h`iVF,FVJWW.i)UX`g"%VLPI!h0%oQRdod':h)FC$&s,6c,X7`7R$1]%[#=a\mk<<H8REgud?E!,S<Hs5HDE@P9E-M]<SHt$.b+CrSX#780)>iJdq/6TZL]Li&ESP5*'\_8*pUXYTmGNAPpt*]7qQK*oB]Q#%2iR]C'Ve'tF7F/?4GH3sr8O"S58q=k`5U4\q"692r`C^LWFl"mcgcS+nculbM;rW(p)8j#:V"Z#PmBN%`YHbK%r.RSAD_\DpXBRJ%!]fZ%c`ZR'p6`3Gf9kEleJ:VcFihfEG+pY#kNV;7pEd;+8,]toWH.9oM_S0'>eb#bBDd]FUKRJ'BeWp5qL4Pf,g2d&@NA4d,O2BC%?pbmCk'BheO(l=2fkY4>naA:cnH(@`F/,AOBBF!%En'`bj(!:Qqp!lI94G(nLS/X2/BR9#qFIt@PIU7Y*\@%*qP8%pIPVO]br'sY%a//^oBgS?G\(RE62Y[<"fZjt_%QoX4eVh+;+-Q^pS&@djPOKTN^[DUD4I4*DLb[Oec4-pT.[+^sqB+[(4ti>b.IUt[]US3!;kFBT%9Sg>GiUYs67WtlU_<j6-Gm\POS;OTuj\D\>I7q30@3uAO=BU.#o,m`\G/rZP&PibA%PPeGC\c=QYn7fIEoRg[.IQU0cNrjOo^JNP%Qg&q_A3PdD2e%)HNKn^b;p87G:tp9n->/?e"M!pU94@]hC)lgJ$`&.AK[B?ajiqU1j2:i_mfA2&T%-fYX*P5fQL=)-4D^r8:V$"(%k*s(8DJS:EjDU%lM<!C;"ed9-Z/&CO]TU$Zan]>&jkt&!l>O52qkKY93.#^Rm'SktV4U1&R-1mfmL,_\n&rrNYl2I-HA?3&)hDh;%kT,R#mrjBif,uS*>F.F>6uh[i0[04<Z>t==HQ'tU>;a.YA_JLd&iOT`4bd?NB(%PQQ$c,E^b5Ra,m=\En*CA=lK*lFm6L\;@g16(%J`jC'/P:[n0q)tB_\Y/(p`U8=r)W.`V-MD]PkbuN`e7/6_SlH?Sbu.c?]D8ZB`.QOi(CTSZ;m2RHgAG5^'95`i.%YYpW&oX_;"TX%im1s)1gdB),)*knH[kO?FqY@'A\S,0)h9"OLF%G.b@WqZ[lu*>.lg.FhD>l:]!CpRkuq0*l]nD-.mcoQq2O*g5.LQRQEp>_8j0hP%-g/ghh#1)#Rgm$8h.2s;NtjSM5K,t'E[+G!dK<?'/kNe%Z:hHA+TS#6+31e5@Ji2%X6a2H9(,hi5l/I'Rk'6_,Gg%Z_5#l[.,f9E%9nfFALj=WqV50m@$1Bql/mdU&cSKpsS\f8,gtU!e\Om(GNbY!@=o10_&ak^(j,nt9.DBrQcZa/oQ.5!JCL(.a7Gs?1Ta*ep-Z9r[%fC!;dnEdUU+J_3(O&[2DE%KSSa^*t6]J8+4g=e.oT#VA[kiRK=A-.Up6`"i_)]4Q4A<+WW`Emo(O'$jX(*D*.;nWC>R8T6WX:fkI%FJG6l_`&^ca^)eR<,u@V,;ArZJJ+KGGop^\#kLAS>(#jRKA0#B6XbG/Z,@ft[o`.6hm64N6`fTD7CYTA;S#M4+(eq-$)P/RE>B\>%X7mjKNH/:ZkCUEL.B2nd0()@%UJIs)HjgU.0eN)4WE1*>pkBVJ<:8W<')B@Xo1V?.lpI_7lV@,7-g^Uu&$7\-?HSb']2?cPb]>_U%d.F5^m+&RNnibi_V"8^rV*acg:[M.;SPR2+Y6Q>jXoj#e2a5.&-+@oY6&s4&2Ek:u&$GDbO5dH&p7Q'ZV+RuWmNhHuYc#\Q/hV__%8u.LS2Q?g["t?N-_"Z`;)-!"%.TB&B)q(qe+cOhZeMm-qM&f!%KAskniGuIXRM&3[`_(I(S$:tV85sQMlYkl/kH-0o362sO^'h@)%S]tF7Jci5'Ucr4&^A'8TWg>+(b;g4,@tU1!@Jd>'U#^K\?s1)h5E;B>oA"Nse"t&toRhcgE@^g+_=5QF00u2OiD1+'jC,0pGM.k:%P[1REAQ1(o8ni"Jn&3uokn*'^hj=(%Hk5frh#W:@Ho704l+(hF=>)U"IgYcr]`kIKqM#OMS3k-]@<&J)$Mo)%Qk4t^dqK'*gnAF;%97UHVQ@$7mV8(2J8J.<oa`H.ai7="l&P8:2r>QpB=mkhIkE`4Jf\>VE#IiV(qZe-rKX>]$c509n;jIBqJ1q6&#P0jh/)EJ-6n6[e%?J`,'@FLeU&UWV\9uE13=_:HFpS>BkK#IL(9>,oc3sEGbY7H0`Y04c]/)>hKG+o*;K,/YA6EDR/%h`%'E3\ICUq6t5;h*/D^(tGD%.ec[[l;?[@-1b,cSJ5i<gK#J>o#T3S\]q_sG['T+U8!CI`q[pd\N.0EmjAQE:HoILfL-ffV-eYMrHn;+)9FW\^E-pH)]=q&-XcM_%hbMF$iNYXmK_B'+J+igt@pHDAXK@BeanoqI(I,5RDuRCU,`]MWnAfiVk>1"PT9]%TZL4Wjc:jV0K_n_'&GlsR>AK5k18,"UePt&b%gY-h(jG@U9:3C>LdAL#F(iWEWgV84XFpIcM_&pQ)M?W`T+h!FreaT1fIT1@n5!Kt\!W8DJqsM8IA];@S\bS+T>I+aqlJP\FKPLhM%_CfF5iS),WJ6Ybl>W_`3jY;[4mGM4I>])]XCBrb.4D#2.*INe>@LhAN_7++Rbop=Rp_L2]bop=$^6OPg&NGLHPM(G"ggENj:JVL(%SXi:rUd(uF9+kN*e8MdV11*8,[,spT!+;2g'qW^-?N`aP_(Zhq?60_/T-?WWmA]SD>Z.YMl@4#^,>k*,%IAEDa07"_Cm=jgjqRO\%?qO$$W1Ob+h.(PY$T-2s^c+iF_'k?!REt537Oc"n\TYRiVo:iV!P1C&3gXlklrt6ah01Bff8'6t#EX>eK"jJZB+i6<E@$s@[N"#C%B/c(@L8uB'2!9M!T5XJ@;HLg\K7VVsY,@sS^ZfaRI!tC[:M3Nm9m]'B?sJphj>tEs6)IP$)r[?.-sXm.WY="Hme"`qS[o=mY:e/\%Hf]YF%WC?%^Geb2O5ZYHWhfA-Gq\F<lhkVtCgnkAUMS:u:\J2_RgB`JU5GD`o4"<]$'m.`P)mZh3[KCQkuGC+gXtWg/LJ+CMJqB\%%hpo^EdOC9O.CVM2lZ1-'<itK%df5XM%odObXK^]JY0]?SRHH,3\/L)n>r9fq9N/.:(L>5DI4RCgcuqEUu\Sq#Cm(0"'k_.2BqlJ%4A64e?h^D`2%.u^OLm(Z@jf]F%La[E+`efEAR))%;^c2bO6CqtaAL$rhqdHb/O5NEG<en6Q_iHqhN,jDAC<h(NKF(n+(-Gc0p=bk%Q>VL]TD:<sHbB@`m\MhY[D.i@^7L?mY<9qEeF[rao1j^*h'5<'L)3kb51NofbXjVgU.\r_as@Y._X'_I*ueN!;p#CU_b5#q@&Au%%-"%L,S<"SbgREEV/inQm`%a'Y'7N^O$NRM50Qk9F";[0)\HU"D=Qk-;hZ=Lp>g8i3E5*j*N+:r),cVPWUoMDij7d_*pjTk3H[iN#%'5DuDOP?<jC#j!KZgW@0<j)j"kK-([`LcP-;hKj#+7#cK8T,"YlJtA%To*W8l'kGP\dp[c.sr3s<-j&gjIr<US:@WPqoMq0U<:sK%+;ZI0cW-Sa*ud`0-.Uuc]$kHgP$h;<MdgJZ`YWdr`V0eu1jokRQS^]a`e^@CM\7Zld@=CO,gjJr]r2Yu.9/Q]?b#gm%FU-raO8f2%hM[/s3qnI@0O8]J>`b!N-P[G.Ec;u-e[u1&07?"2=cd?/PnQ<%]d:.$SS'Qu*m!*f4/oEmF`Kk,IVU<V6f.7TgW0&h(`ubD`\??Z%Qrn`j92Bm2N\!A.;Y@a];egb.40kPnhCa6RL6HAVihXGDG*R[m7;LF;[H_"&A>el<8DMXEX.;E?UZS4amfI[WrnaBeG-6f74'[08%<3L#peN0p>a]VRN2T)HIdpn#I\b!CG\I+g>N^%Zf5aH#s(QAp:cjC&J.%kQ5#+!Osn(H/?pGBqH+$Gh$R:&*ZTf8G>9Q7\YE@+h8%GsD_0CIqn8_!J:0(jp`\@/UbZqD=?$Gr%OEo$]E=(b*(+6Va,SEd*dtJ73@T4lASLA#4SHk@'+aH41oDZ%LZ^,h7][&^epH'3UpO%r`:]hRiEAJ)60pYI;h$.U(c^NGV;ofg\a;:`$$Hj5]lja8UeT\\[DCLWlop"*dul=BBlCpgd\8o[jTeMD@*lCFSC*9rjiVM;UH2>%da@*g:`0J*YG5D&RXc&T,,n=<'Z#;RrO?]RE_?BGr-[Vjh+)CT]>E4L@3l81],=M,Jh^@feu?N8KAcDb6Zrd&'Wh!78#3e38abQ&%<G*]AI]`^NA\;O^p!&Sh)KD=7>ik>>;iIjXFKbjeIq(B\o3*]_gtTCBV"Tt;:[^e_/V.?L?+hL*C<&:nD=3D5ri-=Y?B.eSY]/V1%;u"_uD=N<gmNNu8M=8qKLNQ*-pt`T0amcjSB9Cpc7Gm'-o:,$d<V#XZr3!VUrJK4P3Q&Hf@Mii3L_3=48_or"3b>jHcrEa[aVr,$%WqXdA[bsdY`GG$C!p1RVqL7[1EkMMAHl!uPe1!3%4."$eRnA*Z*(`YU9-PI;Ql9fK/L<#]9"0GT:8'`%4f2qQ@K\tiJ),oR1N;t]%9T"4J6LKO8m1KI.Z[-4Y>Is';IHMNnISh<8i7@""cNaqeD?tg$?h'tNj_VDQTi<L<3dCOKJ3O!IE9ih>g<A_S(,rPf*s\\NPpI#N%2s4<)]1G>*\^BHu3qrF;D_bS/eAQ1=O1@7M9\/0=ER<dr;[gVC[uu]1"5W92qHtm&ePT:J6d%TrA+N-cD8HBGk5Xo"2&0%?&&2nj%UPhZa2O-Q*TH:bWP.Ekc0Ut7+k%Slt/dunu2KBcrC!pXPT>ndjf/=D7]Lgo/FV8a3UG2C$`JKn28K./]lkTB_o1Qcb)!CKhFSo(A%,K%<R`q!'VlXkO4<F974k:QDaR;K'?AO!ID2+8L2^<gh#P"isj>KWT;HtN2@XcrR>!W$j5\Olg6$8.(:WUl:"HCp(;[:2:_b/NQb%b!kH8NLqr?p/0q+#\<`.@sFR?$eR<uRn@ue`lGYYh/<6cc4s%hWfIDJZem$*cWKltn?O?AlW%ZgEha:36KVZDh?GO@2f["G%j7aK%j7$(B`Z%XUS<.enffV8cb-&X_6JTYgqcar]$N/..)sMDg0ga="fplK,=q&'1SaEU&Kgrp2nK,-W(Otjqf@uu(4%t-3./?#'W'5]3%6s`/fVu!/lEVI*/bs1%RJLm#]M%WTM4Os)aLW1nf_2sW5Z!QgQAgi1dNYZuuSK[bu)c%a?^,NcrL+(5$%O?4[89iIh0=H%]pVOtG%bQd19=k6\sk42o9s&5IN.Ip9o5I@YP]%Yd7@aENlBf"aiQQ7Ul\=LhX:LKX@9;$ZO1!F8A-#!Jf##h^iE\[c9/b2$Dc*8e6X"5)#%2k*%G.)(hnDY;Z86`X&<IqKU9Wsfg8)'!(Jo.B)Sh#I"e/^MItMI<'@*cL%)g&D??R,iNt(35Uu[o.>J6F]BaClB<OWu,L\pJfb`%rFDKr;<s_"V6h^.SgD*^,p1!V,t2EPU]_>DU"#YH#>A`u<$^slgOUkF@g2Sc2l/j6]oCT@.L6.6o8nqY+!6q2Q&6dWPPot[<t_sk%.a-Z`htlW.8!h6u,H$1YcNenBEgI`(`c(O*rsZVHllZ'G"97>pdJ+fLMuDTY&bmZ(U\15%2]Rm-^':\=:]8Q"\_G;V9ag"%l1k5E%iTi^X&iauY<'RE!rZqIkhbF+?_::5`n87sAO,90HE.rKgk"ccls71YQQ6ooe*/"'nLUik@ZO,M7^HK4>Wc.jPs2+4Us(CeBqYp.0%BcuY\1#cc^U&G//eDQ*p)#BjhiBKh^Y.MoM5+^lS7D@/n$%I@%5F30%:<MmoFOc"`:*,@:nmIE/#NOf:&'"N]\<mg0rs-$<i!9,9%jTGD]]YmW'_Jo:L&<.&PT)?BC*!\^H)-.#9;^![:$]`L?mS=:p.2lY554U'@j$I!1p?,EnMR%&S@q(QbFdKnME2YIo4!so?IK!o&%=&4<C#_2QJDppqbe+<.dl-mPjT`(LD_9=s-S\R9fokNNeo^;5Y(48DqT^q]7a8's2p1NO807&qHG[1"WiL!Fe/B#ZJN.mXD,YH&n%2CafPa5D;\lq`:oLVhtoOKj%dM1LA;Yd%#0&2,d[MT!AB-lcj:0Z5bdPSh<T=>U_)j)K&i&f!A](1nE[4Z:5H3?H1n:b9W*`3G+`%N[KL)+jQ6*0#S%S#`M2=Yt-,aN^X)*Nq$PfFr]O09LOD8A&FuW+,u1gOU)aL@lta%N.jVmR+qlfMK&\FN^^fI*TO[a*K.`-@"a/N%aWhC(@*'6=rM:'7GRj2$KsOB=E))u5n^<+Z6O_#qiL!G8\mTb!Cck&(pdgW5'R1F1"E&gJLLTc8`A'>OP`5.;0RZde/sn'"+8?CR%%kir3(q^.l$ZdjZ08nQb]SA0_VSC"&`&iLSYTUm&Z$78W!3VghJ7ECD*.qg[A)nQm=?I?/P;*9jp2Q%Dn)8W/7haq$Tm.8Y!t<"G%dkO$#NoFi)k:B$be\YEn+EnA,Z#MgIi%9WdEX-t?$L^8#_taWan4`(;,SZ9#Rt+SX`h]kaKVN$>S:Z\+0IL@T@rUP2+:aN(JOB#,%_kZ/[2;j.PmM-c\+2K\%\Ff1K'ScdP0p\a/'itGQNW'7%3Y8*VJ/,ul0f$a;pp`:QQ9lG>Q#t-Pg;7eg*0T/.%)lAZM_H^2G_@G_%T7\Y*i%AsWmP#iF;$-l0AEi(j7opJ=hiJu-AHu_M\.Bfn>ZdZ>K,G`nn@T?Y@`);!(5n?\0I)\R_nh4eOkYC&J9.FP3n60RdA;T'%n6^&a@k\puYbK[f'#p:mH+Ss=K^427*LSXJ0ed=H86g!_@pfBAQCfmt0q;4Jk_ud*_G$+$W+7HSYu$[AYVX9S)O2,ACb0"RMofJY%=@Q^R8*S`hNFar@fGVe5_AFfK+PBjd_fQ3cNFc(:/;g]c&c1u3>8`--&e@KECh8ibRu#DC8f2$I89i-T7N'1T9=@`KKgs[rCaoTj%K^nQ5WIuucP@PH.W>)(7I)<4e;@oYG9hZl2.N*E_<!j3sUG-1,@>J@OYo-1`^j6T:-eVB)]_o'G9.>Zm?>V.qp^l&jg/JFKN!.NH%8Z!-?=Iq]9fi/<'Sb2>=;]1G8dn;Ta0ZLpjR5'th=@cipaGd*W^f632UbQU7@8,CHA6To`^d*h(9sU$<`eq3116mt-I30q;)2Z./%MCsEi.WLE*LM':l,f7_O<A]t#`5LXkV@mJlgcq@nP,XC.=DIS0V@ppWk0B@:8-Jig<]%LaWPgNA:iWnBN.g6@=]1[18/Rm?3YNf<%M.:pl/n,ZMjU\g4Ne56Jo:H+t,q>!"0YEo8'T:sfKY_E@'.%/Pqqu>,(sC82%q@<p&5=DY:Gbb;'Sl-'%_!$>$S>QL..r^A/.;`A%N58L_nF;4kg7o7"-l0gh&Q\fM%_R]R\I/n52-l(n('B1\`h`FJ_lAC]_AF4)`8eZN3^5S,c]e8UfPNSWhAQ+b/=heT7^a9VK-a)9%/W[U["*_a8&"1It*C'Xc8R!q\=3>Q&B7*CEn1YVf@W5sB:0WJ./K^kY)99VPWJP-S0&SX4R+"/n(*=WL.>PA5@pq8B%RoDsFn!.c%E>O9=\JX0,N:GnlK!AttmfEt<K.iBBGbreI:WE0s&/E7,F,]$gME<q*4;VQRA5)tDQuiAl"l?\04BScg+!kFfH/jFLaBaUC)TL]$%!n`QtYqYij_?dU>l<o=%1B:_hmZTUE%T@uh6W*@*_<I"Rc9..@3=NVcNePFYKp.(C+)su[Gq`qloZeX7NSqWli`MEI_gu<.#Jr2t%e_kVd(iH/!OMb1bA"mL->%]Oe_6JRWj3VqBY85,c>DeV!NhNUP(k9K-_.Vd(JY=JZD?Gn2'/'OG"[d/0JH0ih@18)D:WE1.GhO!W%4M`2;VMU=q3K7Oe?K5-M`5[%QN%mHfnR2if/D^SIY+eKSb7Q&0_9&`#Jj>[XL:lW!+_$-B)3I$b(aA^6#Y]h&@+SM3g]\r"A2#>u%n7A8TN/#I?#+N\'3'&Cg+#KNs!i+]%3P)hTM.OR-7_p[rkp1d6!KKmo3-!&ma_#fA8t_UU[pTXBYS`(44C.Nrg(P;LDV&u(i$`mb%QoH,'f1aO6Hs\od]F:+!6$SMHMXk.2@aRdZ6l-N/'Q-ap0L9VfUVsDsFnBWHo#tO$qIqY'7OdhXD3=[//356PnmG,o[BTGi?,2IM%@TqEB`V1sg,,W=\94%m>cm#@KjL]ps&^u>3A*DJ%k"[W_/%][Q-=U.<Qag57=V*;>b`<%c$t2iJ['6FHSKAj]ihdk='MS[g;)\rT%(iaU#^P0750Ljn?*M[KjKD%b3?Bhs60Z$IQMi)s%EMpa]`^E%NM99cH`i,ZP7-0+,^)2"B&33@,)]'MPo^"t1-d"uQ(?[r9(WSp?%$TfJ,r*pdr5RM8BD%XGm(_]2P7.Mt)*!)%^G80-a9H09+3=Lb+(8%ou*cI:0+>$7m2AQtH6qE4LK!#c/F=F$IAWJYdQ7smA^_er8%d>3Hi_*[bC!l11ZC!#rIIp7T4\A"ql#@dn^ZEg5CNCn.*h+L3U'B(K0=$2M^W:@k^q/9cm7mj?qO&LRaVu_<'Jk;qo!^jmp_]e8J%!H8Sl%EHQETjo::NQJmNi"m!N`oLbH@hgsRK`Y_R#\RSt'0QL9P2U5EV03keP72(A>dSTHKX81pd^^)#.r\Mj*jMpNB3FbM`Zcll%)kl+>N6-$>EgC0d"D;/<&3X)3,<d#s\C<,*^C"rafHA;i;aFXh2HM6Jn:+CK(Q=Yj?t>'Di',IX6YJLaoFPK<#Zh"%!\F1A3"YdG%R+&D#5hM16dR5A192$]a,1nWKo.D1k!So(`od#%q%MMt(n4YZ85aRP*2FdhY3!R)**>8IV^an@n$/c.Q3\YO[cSB_g?mrnO)+9-.%J;Y1tB0aI)KT!#Jp'teq=AFDpBO_8+$Ktkj`tKW!!$5*%.\9YY\2X[o(DXuHjV5L_iZdo\E1d3f;HUM7&`X3<DA`!cJ8o"MQCaQK%E<QJ&;UA+U\2_KaY<g%8!]i5Z&\<f9(RCcm=s]+X?uVMM&ZCM*"`Qmu%pads!dG_?d0Gs[/rhZ<#d$OO$[W]FW$%)YCmFL)?%KKe%quCe3&BBV&'JL4@(2m7O'-%[VB*mMu=GB76Da=N9!o?R<)C!075RdF.@Sfr*\,qD+A(6B-!#N[XFr'!C(qLHU[YSi*I#e=L'CdY6%3rhP0=oWtsn$]MnP$JAX6,#_A#eD[`jDOC/U9?E#JeA)&BJlp(Tn^_@$qs\ZV.(^`rRfh>X_mL*cq'Q:R738%65dE7s82b9G;EHY%I5&E)Coq+Y3Utk4?E%<ET/OH$GTBRp%Hb,O:.Z$lnQWqlo<R^!HY7u@g-YR1IbV**$BIsRgU>\.nXB8*@Y`emn_4faeG\O=fGQ#C%i8h?Y6cDPiDcc/(8S(J3EI);^8:$2XU'u*Gdb>Ku/<H=XY2+Q_4EFZrgU5cpXn:\`o1B.Lr-$%OH1Te$DTX9^C485\r2[a=a`$@1%$<m#TH)+9!r,td5a/90W?*OCpT-!oRXS5Eh3;MrlYY_?/jL6YJh>r(sq<^6)OtVaOid_^O8:nH_kEp1>40T=f2pH9m=ZrX"MYZXs%H$q$S?0BdBnu#sX[mPM^V['sWfKQGs^KiOhQY&!GILCSrGS=<^*E+d,gkCMQ.rU$O@c_t7G/:5eo"&;k[iJ\Y\?Yi]!1]"4jL5[o%:S&TKD`\6kI.Q*H)1<g.[juQ*LL[-hJ>F'#]BS]LYC<1.hQE5IB[YYLop;J`.qZmOkq/R:BrgK8"7%>X8p\*YAd(bE([SV&OS!_8%I-r8nKsnS<NJNGKY0_Icj-&;OP>D\Fr"e'VQ^@VnELaF<P<bSo[[[0`V['tjkc.9NI_5C+\>Nit[ge8]0UF*#D'b$Io%U$#jO8b=%[a!SrD^!#U"XLcu)lP-tD;-I2H<Yr2Y"LLtgD.&QPOs%sO*+:28:"K[2@`YgdbFH89XBo=Y*`(3o%Vk2$Cfr(k(>AP/bIcoc#,%^%cYY"%G.[0XocGm"?*Ro,2%_XVXnj,(4kOUb\GTgXDV&s=5*YCLmtYd[Z<Ot3\tR5`n[eOba_p.8SE@Fo[jsq(]#j>ca(+4\HB?m.%jt]SM]@P1coOUa7+nSC)8TG34Q`DjOmG0A:-+.#/H7%AmZX'9DDAf57HW1WLUpb'NYZ.7M(._\;4Lm%e+24dID6ZYid^u<`&;%<i%PM4ktOA'E$2TL)a<@>1[Yq!>Pr:\/-A'0]g("0=>K;?!/UC/r[Upo"!Vms8$m>=K*0tW,JCcg/52WS=a)lC*#SYu7Xk\UctE&pGr%!iOQ3VR!QO^`A5,b\fd6(5!C77HeE'Fpe?(^67/$@RV(WEXN'(gUbKY@b.JPD@n[t1:`+=g`#o5P?Z!'?qkN+C$*)b[meAAmQq0;%5HN3T/-ZXtphW6ZIMPiC+ab'PKkP*-!Anaq8]V:<&>4U@87_gp$%R2-O6!.]6N@QD9"XRT"OJ8_CKFl9M#_D3N`I,E5[-d]$(f?b%J-JDCGb2'?!&SXBh9^ERTL#F:-8bDP,?1H>/Mp"G<jpkq@`2n0B$;#]')2mP[5K1A%Y;qAIe?jL:akiOW#-U8^hUZkdW1CRTU,'U%@^\Bc81/q#^sRI,jq'Z(m2/0%jlQl*fG$.E9\2bA@YA?T[^gG0$R]Vr@Z;3*0g`2J"qW?G?@\WoXPa7($5&[@SI1/f+gV5cke7c>%A6.X'"baQT/T.TE3i<OPol0aV/9l+!iG^O`@^7&:X/)Ag[N=#/Tll,-U"Q/@q7BAJ%&u:2;oAsd<id"S]!*'^kU]F_@^?^V9j_BA%RmAI#H@uj7=l_RXhW$&$[UR[F&L019NTGc*5nO3gR=[1`C^0R&UA]M3_IglEij6=NL'!iqjUripOJN&KJHXFf6&aH4k=FEekQWqL%Tq_aH7>TT4nR@o[2g"]-B'8Q'/]?^5h!k+!X.@et6]15Sd.!./f>c8HJ$.IO&=?s$hSWO.e8=Z\gNt@*g_#bE:jd_nT=4K5qA"^b%;(/`nD7mda#gki<?c6J<`'#T*?&+%CM(uON#BsOn::h!k*GE@sbLQd`4AG7O('r*DFO1RD/;#iF@Y;37Xop:;;?B-8?l=%e]fP6j%0#R!Fif+e+fo]DZpY%;,bTPP64pS#M!R+S\m2M!A!OJPj9d)u6[[)\bN4X2d%S6W2\mhrc>-;%RIC($GX&uB3Z5os]g(!N?Nl\%E%?)DHD^e9+p[f&k!I:'?U1"d$JKCj5_D$S]VEK21hgHkZ>@`>dn`@&WlC^8@)`%KdSQ^o\GA31L#7-9I\*'cp!rb:6j9SR>#`FM*$%65);<GkqmthZLmZ45eBE4bjJ@hr3?ldHiq7::I_69'A@<PI&h=1&2<7%Bpd03PZO)rOaAr=eIKgn3pT<.F;3W",)>OTWQ)`_=)Ni%3/6AKao)d7pFtsbgsC-,4Uh3uLrk&.?E=Mfb'Uq`k3EPZ8adhO:%!^,jZR_K$QpebTc#rK89TfMbA9V#j?5=u]!VXnHN9GpeoXu?%&*n?Yi;q_XZhKRGE/;V_W:m?C@9u7b[N,PuG5La:DVMG,p$t^Ll;4[2J#"E6(kk=LY&rEY^#M(Z=e+e_>sReZg\-.,op*PMiQ(WV%1o,Bh3m>$B^80Kn_r71^fq`^OOkG,sV-CUT2oVMUDXfp9q8uEH!-r]jW"&,0pe[&:[G-PF-=tV-]7m9;O109oJYh5Om/k!jlnkQn%"e(?kZ'9,r@$t(3kLq8BDmjc"J:=b2C?]n]KQ9r4Z?3_27B&m4P'";GO\?7hFLtSrg:4*N>J"anI[%&fl*`n6CW!E-f+#sj+K;_i%gVE*SmXV+foi<@j[WL7>ENJQ(gb/56S^#%=H6\S'8@WLW9).?jUu2Dn;.Mc7(2b)Dor3$P$+G^2a%NmYT^u*3<<l*"XT)i!QY"q&%f#&ADfsW%[ERI=aCtg(26pR2XCCMc@1F]<2p&?[[Ok+=bDYk.L77t"j>m?"^fckU2,cK:1)jIM*KJ$uIXe#@;UtIY^8lpB$,W07;%_kB%"=rjRj>I&+e-(KAE,hXA`2Z<kO[L6"\ag>U5lIm2e\h)Mm89m@0gc1I$?2(lZeOYiT@YYYD9=Cr(3RSnVAD8RH1ksJDJep6L%7rfKLfsVh,rTuG<i!"os<C3/A6G2Ot=L3^XC>Zms/M,HFNOrX#3FSnIbWZA;&2($6DFq9U=k?krGrB=:Hrd?S/%2ZbfDhaT.E*&W%h\7TLY[5puVs$[jQHh#T""Ug!?Mc^PI2&a_Z$!Q5`I\i?N@jaN.CQHjCZYP6`>7%j-rPDgfS1D.Y?+1+m+;IMpiB>L@E6N'[9sA,%G"UT"@#J,IVN[7[$GrO.rMA0+,gGBp.CP$QK5Zth>M-B"$[jJ4/^t&?d8Feu[[lS3+UPDBgSci!Z%[&L:5P?9Cgl)D_EH;(/Rn%8%4Yr8<amJ7aZA"ib6cPQH@d@m,`[]4KIdY)KNmUo%ams.][Op^UA5R'Ln9A`@0?k7Rmt1J(@eA2:auc5W2-]jilRP%d?QJ=s:ek&)%[YV#-D&&DOqDu=A6D>;Id2"I5,c#)mB(2W9-.*K?Yb`\)[YTciV.^5mfI!\">I_LJ+Mb:"Mn1%f!UI1uM#5kqP(\=VLN8BMgVP^p%M72@Zl],2V7BBT)Q>5/@1`08,l)GhOdlqX!2GE2<=J;Rn%UrQ8_HO?9/-Tgg[W%A@c?dXALn'&qQ>ON@T%lCYgELeT5%i'In<Ip-%[*igGYnLKHgU852ggmM@[a:#f.kM&^BA-LtL"Eu?S<E&LBDo1WOhr[Yk^$+`[W%--WBh)Z_X3lX]qoZU:Ke8WQ!7c_8Jt4`G4mKJ%8`^_VSnc&=\HPWO,pa^4j@,k^$h?U?^4fc&%G_]^[P4k&?(5uk'g%iUOL"8d1A`h<gBkugJ0JQ/R+Xh5?']>/bj-cjgBi/7]OfiC%Aed\U[d/FE28k(ugTHpgN0J2"gcm1>G(oMI/DH2is/^@t1%s^3[iIW&ZIE^rP06U9[.;b:=mspY8'Ch_e85H9(';#\DIJQ,ma!?;%Y/fs85RY%db1:SbgnJs_q/E=iL1*9IeB1m#CLD+PV0Y4\"n&MLNmi8k>J13a(<')B2AXR9Q>a%<g-o#ICh*E'11k$%RD^Q3p6iKn%b-u/Sb=1=Zm>@H%1?uQDFVXLbq0&)PD>A?l69GsjHJ>\iqHLYPSgMQ9e_:h>+.gntY?'@U]'YpZZ)-1b"_mQ!/`!/$l.2\6]'Z.P%P#*ad_PZdbBeA.Mj/711V;%XRdRu1JiXCs0T$f3lH`lcgh=easW[ZbIS/-&)[\;W7h^k&I'tZ%K>IfaBn`4&]Ef3jqg/oi6/*=I,%b3_6TPsi9MgD,X3s&<l5:rQ]9Xk_pk5P;WhDLi=1GDs!,<a\h:>qonOD<Vh;L\4AG^MUH>[&r3edSRYMq0!pRKd,FFD7e#l[sZq,%oR"74gK*CuD"SPd9OH$/D*,H,DY:H/17u%#]9$BWXVPhZ-MhZN(8t(`:PuWS?h/,5]L@8#H19uJhL^q_i_8lc`N6jY]1#bOhMTg#%!JkHO8@i(-Rli.U/oY[d5,I#f[Q\Hj(3p+iIT!bZ/um[KD8i9IA=1O,U'$_%;n5?f_2"q)$Q^J55@rRVmROT+rnM)[ZXql[?"=[f%fbTDMF>C=C$eiLHId=G#*qdVq13M>ZP`gU"gK(-JT5WO$%#icnenpP@+D]'0/TMF+Stt+1)4J!KlaDU(/O!`M,U^M7rQoC+@A-uY%LPKc*lia.pV/D3YV.&\u;6Erqmn1)YP(Jj5;Rf.hRG'+F7PY'%4&WRWi^27CODp,>G7k:m;:R#4hngsSf$H#(7Y1_n;@9mqi8DqF%E/U)(KY+k#04>H%.dS\_nqIPLej4\-a&L^#mZ5-N<+4[PRjjpM$iA6)?Ii%U@Gd2[GWf<aG<"^K7]@R>qiLG.*L!b"Be+BZ2V)M)%h-+Wr%p'G"Gl)3V%k$H^7YD!*cI23ohEkn<$ZRU0!"Dn6+'+*AXt8KtN;*f:<989<\k^cJi=)UpKH5\fIEf`A2l]MRf2pE/W82TE%Q"UB,iOZb)\jK/6II"RSkDC3?+m\tI0,2H/fQXl@jB`e+$MuI--R5M*^+6Z\m+j5Z.gFmeWN`Sel-tRuqm,o00bsDQktBsA@:A'X%1f)%hfI&q>f^6Pi_^TJZ\[([c.u3`d<dKF:*eZj]p(c7oXk@$9hoKl52;@H7caNLPfI'p_QjW_:iZ_n5]!1YO;7p?flt`c"\tOVb%Yg3\e`HG[^eh&S8$N$X?,*[e052#ht_S5;'35i,,cfh&=(\U.EkE>:F(\UR?dgO];@:*U6-XnRl]:?T[#>.s(?Y;k6`)PBU%4CRM%Za*BgC'^fEmn?fl2co^DBp/-9N)hhjkZo#W/-]C#(Igcq(;6HXgiV-k[;\P9S'tZ8H#WLlG<NoK`8n(Ra3t#YWbkV*(ONJ=7XMh\%?L;'p6hYhMT*rSJYIE<G7^:"jd]c,_0Ko-lA>ad:,'iP*a^^.+Z4FZ;6uLWLh;%32;dJ:OTQ`+K(%rg8QL=[L.dXdqR9g"mKmd$7%(LSdC$i>gfZYpCI(A8Ia7>tedhrO/E_f^D)E<hOf(pdLb^5IAjXpo8BpSp6Drc<]U]<4rOYDC;.T5FpTK9"j50VCac8CmG_9DA_%%#9&G@!pqcT!F47>q`-;KljL.aN6,JrM+HgClhZuWKol4T^#Y""?.RX#/tt,EAUW/rU)(9RGGal&n13i$o\Rgc.-tG`?5/a:YYSDt%@5Y[$ce^ds4W<Z5q</g1Yg5B7<$<1HVlO:$]FNR;qSob<3rF2&pDm#IM#X8VYDShE"]tFI2_k0VfO/V\dO(>`&.X%>=N&Wrn%nhh%IF;L>,!g#am*+[QHY/&(\N^@r_61[7$8#trMb#Of#.r4eSgFni/Bq$+P/1I1T`%M>`,-I/&<CW%DVG@L`93Z!&n8=;m$Q6nh7TDB%-a$OFG<Z-BI<`7+E6`A>*HhnMS1eFLWagd)^(-\,@Cl_PSBo(_6#:a!c=`j8DV"ln6Z/&m".8=ge\<lQ@A[D`FB1>+""]nghl[!;%82$ALFq$beUC<Wp!>]gS4dW=fgqm=-#'eO_LJH0'hG,cZScQ4E>:t[o",MotI!Z(M$BO>FDL)L8g6ltFlkr%k<IIqp#2#kEF7M7Q%K)o\)]McFO\[sLhH3UV4%lU)2B7S^+o9JUs6@Mm;[p=W+B521m"s_WOp>P6SKI]8o\__;elT<W9Y'f]U(!AEC`bp6jVSP6N^:.h'%GL<rp"*>gZ:Y@Sg;,$uJknubVlf2!e%.@Nq7;3Y3OChk!hMA^H86Q3<m<89mVe#kp<p1L#AIsTF<\;cU#^iS8BNkZ]23'.$VU,E4%^\?k%1HP"<o^^/tL<I=Qn>h]i0)rLNrgYMA\GU5!@*8O)-!e\J#j_L=0?X@Ps'"oq3bH=E?cUr2l1)C614]&45,!@K=9aQrq,[1t%O:Iotg[ko9%PYoW1I00`-2%`k7=`+=/H]MhbX3;[/-Eft\RAYG/TsV^Xt52r)ka2`_k70%e8Nbh5h:H!Ir#rE-DZu_6"CTV\]BL+%;@2ttm2$meC9+XIJ4p$Zl1PLH8`8?;^EBfi>.'.$KFZYtpFFQ/Tqb0MVd4h#K8&VuH/=[%E6'_q?%CQVGK=q.&e<J>j;;r!6I907%TBu]uY!*k9:'WNgqQr,qS.>00Z>_J/!*KRW@SXN8=U<a2C_n49+&j=m(Eb@s=VGKc6qt1%,hiJn9P>Wd[L49^U"L;k;?u83IkeJ;%86-;S8\4sWjcZEF&.&d<Ib=m\XY5#N`h\XA7Z'"6,H9])s3\$m0k_`jn^bf9L^J4N1E-OS)8k2_BT^F.nd?!Y9^53a+L3!`rCZ`P%CgA;N:4<5l*3</o00j?em;rEn(He_HdkD'OFHTAN0L/;P2q'HGlGG#\-T2AE.scJW(a'in?b@mI$kP5*[:+T-#f4P<%&1&@OD!<%%5`.tkRps.*KrRj9?@Dnf,Sp.8(!A6qL4jC"oF"hN#kaJON=:Y;=?`8)EUQ<[dn(Pr2pG.Q0L5!9Q*Xbde5;aeP(j!HcIo[:J4thq%-u[-+Ti)W:S^ap1WfgD")+8M!WYTCgYc+/QSLjr^c?[&R"/K#"Ps5s-4N":<f.5aj"hd-=`<af8XQ*"#!%A`M7CX(2;F`u1rnM$^%7s,SORKen-EC`)SSCFh#[tB1HVEn2GMp0j25S?Ou:nLMJ^n$aZ?C]MB]Jl^'J/D^Eq?E(P_.921%1r,lh3",!En.N+>#YKtPsB^$%-9h6Gg,<Vqop&?ZS^fHb99HX`@cm$c%?R]#'?RZ`@Z*Ho`K\o(oVV2b%3gQpO+t)/Ma[L-eF(QG3:C`86!541p(FosS^jugOfDMq%FgTH?ZYtA]R^f55&6U#a2X)/'(0g:+m2JGp!W*8VcK\5a]^uYpeY+N+qZb<cgo#pG0R#NHq?G#Y5GZi]S^jDBNpRd9<V'@hD1G"b%mGqt#+=1-:A_I?pV,`eh!@/)E;/$slpUhpK>da[]b\u=M\aqlEgGAod;4;p%#&%3`);UlM#W;/llkr(8\YScM1P"s>jXiWJaSr^,%ScOKi=X<5LJ17%U%0CZF3)W_^Bs9q,p.<kD9HI3+*j3>HDC`"u!t_KM7Y6da7KSB&%0f4753t*8`icX?dpO:_QMY`l#(Y,,\!&WX%7TT8]B`M[mEQ:]#+:-Zn2@[[nr^bd#(]hC`@bE?LE%+M6i"ndqBc;MV>Z;ut1]UgD]pbf!BT809dPLt&knO)4)Ls+g4Y]Z`8*WU5%#/TbQo?oH\nqZ;r1_#P;I8)d+9'X4^^t1;H"(Z4L.K=Q#ctYl;IC]X1S!FR??%_">dO\Z+A9uJjEXb8EAM0co!-qm7B"A2.n[5Ep%CB2MueEH9<^_Tb@8@f!ggKA@E!5BY?,[CM"0]2X^%?T2(ThOckKqCL1A<61Uk&iXn,s?l=F6TN6!4(iBeotGUO-T>GTTU_d,!?$A%.8&qucQKeUnB]CNefin^/HZ8<9rbiXK+N?hQXp.pW])4UK=9mrZj`T\aV.@kTTs%,Bc/$(6i17p#45AirH8V'R@@r;#49KCQC^B(%'(r)6J.B.'l=Cj_kr'jB1-g;BfLB$KZ/OpDgG5]jM^-\+5X'm,fCTKu;ce]UH3QoT<m>#u#5-r9fJ>dQ[,0.$%$2k\<Sj#BRP`+5%O_%A`>u/WDR1XJJdk[j__*:(6K4qSagm46,cCt,^Q3!!rS\AeU+QGcMA9nIDaIjfEoF/N`/`>A>5YA]?5bpgWQ]#e.i9m"RPb(1J%?EcScIL/!,Gq7?!5WZX%A^`D"3IpBJdkX2A!#,7<AT6Ppqm.l,43Ob8AT2"kZ;=?;i6I[83sG[_X=I&d!3s^nIb>/De?:eO"2pF\%R$IcY"EZu.AIo;oR4">e5r@5*-:3"_d9tR->^+3kPmjO&&.&>\YsH0k$0_ShB)l:Gbr`gQ@`sGk@N;5Hm$Ws"/;>(IB>S581ob3A%1BEY>J>sHL^n(kO]4Z63AC#p<PquZ'p.WP.SM?Xc9bS"H_^HSoCgQ$aJVKctdRn+\`CPf8Bi,'g'I$.:'`aq9F<1mY<cV,p3>;MC%crkl^A7Ak6^bjCqMH]7h_Z&[["."+;FO$9h(fN3B1#Z11a!`!A_ZY4Xo2LYX'/'0Mn8Zu4U$QR\m[-i+pCF^:3[UpiVlr/:0EIRn%\g,Z5'-;@8$DX:GTAg%RB4<\s"n6;YrWYbX\NR@^BGM-j%3/A,*Gg&MD,r,fF<_'IFuD#,pc\`+5Y)8Im1MaD_Sk)J&0jM'OZ(#4%]EQY)SX^QB5XT<K>39i%"/)4<V^WNG"@,%i!^Pg/"@,%I]o(YY!,*b_i:`3J+TP\*]R6fCI<!`^<K9IhYm>ja%`qZd`!F_oY'b@j%!"GY>1W'bK5XW^]L@Bp&5(b6+a,bn<J7mepZ,L1_&=ji08:_W*=jXt"Vi_p>$s$&#oo:(<J^1>N,'F9`+cft`qK3+8_.bt']:'@Q%7uPK`:k5khWki4&Cb,V4U&\>>.h[a?cD%V3QKcp*c=0n1?>Hof!BQ-6U<En#*2gfRU$Ck>kN6c5J\RTkC6(!d(&hf[W8V[#\h,d=%`/=D0:dXPHT-?^)&h;\]E?;<4)*JlN</'>jLZ<YN)jQ'`a&C61;F<lhI0:i\BrGu:>utqR'fMuo?>HLH6'%@eMO7T'>=4)Pap('Z%Tu$r_7[Fa&O6ZVc*Af1<7[5]^N0I0%:<ZE=(%:Hg/XK@%%I]m&@k"+W7BY`M8uOF:ccj;(KGp;2o"V<#/taM`O;]Uk7h2C)V1uR#%gO7ssTg9-1@LIVI>U($!nEHX?:6<l`XeF#Ls&)4<1iU3MY$n@`#\mM-&h:Pm99QA&e1jp8RgSHEY#4!^.Qjsjh?katSaZ1#0`uU"%P=AG9?/35`_5X)Zh()8I("@f$_9F\_TOKBEC!OVnJ;Pfd?]#"d=KmsaXe11bZ22uH.4G't4mco!gRMSEosB?(?WL.*Sq<LDFgnT$%C+&`(6TsfrngTKmH4!iT<[ar=Jr.,:L?6muhlr>@qjj0Zr(1_Y8n#/W\u9WaP>(oh->bnPm4o7%`3-57@W'D8\2=K`djW2$-uAj(%Om,<Ch&:qB.>fCNKP0VK:`AsmUj`Y+SWYI/<TFaJ8u-ilb(odUq6X`)l7JX:k,nto4q64n^=m/6\Fgf-ngSl(hHY(MT=18J[H1=d%GF.VIT=/Ra[cLG,A9tO1T;(9@ONK'K'Q.fXl?Q7oE$GbPGbn]`c<]f3Q$+0Ji8]3]>pHd1o9FJ.6W`]#lDKFYrNoTtNuQUP:>(q^%$:f:s/ck47#Sl'qWLlYn\=TH1<5`=5=?qS^HWr"s_[S?-.]lkMBir"lX4C(aiiVUET8(D0%%>[A_rR*[AGn>Y?5B]AIYsN!.&EQQ%j'@/'IocCp@Z/hu7["dFk#st":YR*[hZ>9:WX,q[$B*M=c.5Z&ZgDK*1d'X,3(B,/^+t\tqIu>0=+BM5iUL5:SZJHh+J"7Dp!YU?%$XZ$^V_E2ta#KoEMHDn990[!;E8D>qVbs:n6q-F>E-/9TV9Jcb*8Pb.ek51I"8@fPR</m.f-OYL:Z:0M54WFRVbsp0]+_:1Ehgsu%h6![)jT_<!_RB*cE-,5`S,+T#>;mA)IYsMV's4)0+uWfu[*=#nQhI8CD!o2P]%0ZP#Pgg#bk`btDXq?:1u-i<40nNXfWn9G[XQrc%rSuAX:Z9jX+guiWQlp_?Vr?/uV7(mm(%,8q<`#R.>m@8B<7nKWKrgraK!cV8"Z:+!DN,E._j+d8Q5!.-F(pF6<*6@o2\o4u[q^e2%$E-`.ed<nnf#gC^<)?e@NapA>"OuXXcKl5QW&.`S(G)5r7SR;j!\.ZGqO1PPKoNZo[.CMYd9s(3f/!S0fVn,;3>Ec.6[a=A'jEt`%,'Q=I/#_r2fBVEC90nOuGJPRsW6lAd.,#:`9Mu`4<`%b1Ngj7*("D_Da8&?=L*'TW^4d8#Gb:bFZ`_1VS[[-IU,4,j(+$C^6&!cJ%)Rg8.W8W3*SXLj(31X(:\L=/ge$MJU#rSa7Q0W8n'qXPs_c&8k2:)WB4dJnV><&i:7L9edU8;*e#rV:+Gb1ab$6!nT$akX+dl3"J%<)CCTXBhiI3ZiGNW3bn;F:5$']9$n6'b2L#VQHL\M^'OF>=$4eQF3(e.T4"W><mnK-jl4@.N53`Nnsj&H>KUGZ%@jg.u>Gb<2@!#%[GM>VkY=.l$L5E/0^:$bTT3i0[h[Ci?%BC!e?o\fqmM*6jjNEu5ol:bgpVgGS"ss+(%pB]f-1A5X1h.2[Y!e?a/=NHI>'+/><t\e%V=^lh:sflG'lI5A7Hu4T:2C*A2s9LF"Vo.Q*145Ne=NXq>="8He+us=;-7*L^03f+o&j,2Xe;E?3NkCW<+KW6bXr$R-5r6'<`!#]%*E(.hJdTPW28<?]72%!h;-QA(fgfFcW&Uq_kIF#\=CL7m.A?kT0K!L$W%A8DD%UoW+)_`+V8gsT;FO$C2Hsm4'f@a"kn'YJMMbh6%f;YM4lJO7heuTra'f?1Y(+ZGZU7sFRCO<LI)L1h]Z:Yih\hc4DLmCmE[iM6&>'%FKekoj-8`WYf'a;$H0<M!M>UOH;lDQtr<]$qR%U*Q&k06L6Y^Zqr/NdA=/EQb;PGOq%rOTW^!V_+[\q6?T.)&8^0Zp[h^740G5jD>npO>#MP'N3cIlD^RK3G>h38gX/Q#5tNs!mnCQ%Xe]:@p=NDDYFH!,Q.2@cQqD*MT4[taPZ"9<P/_<1WUV-XUF`6r\MA9KdSf,ZrHG*7L64e<D_2^5Crk(.+]ZPl2e:u.;Q6De?q/s%%X5gd\a%*=O<l_UQhk1"ONltHf;*u9t2r6i@k86c.:3X@cHo!If19>BO6[:n0@ieZp%(XdK'j9?pEGW2u&%Z`8T%E"N\N4W<,!MO4%do4W$q!S#V*CiMQR&]1]^/WJlb]E76#p;I!eT$rJafMt3%_>YiU:EDSbT\.Ar[a*lguC@Ve%mLhHS]'!DF")TAHQ-3s&b"j5at^0%@VN+KD09_VQEV:ShJ$cU_[U:_I.upj#.2AC1h(2bHWj=detMrMN=f")J#i+=.S""4J3&t$Sh5?YX(aI0>9&D[%S7+cLEnc?o[;D6%<6+`oFo_Nce:/th;#f/D%e\^O#@b`MJnkB+W;i4,-*;9Br\&QI8k8+F4k1&_THX?el]in7qYs"HCS`9Js"i-@iW+\`5DN.FUi[aA%!_5m(d/WF6g2on,d/'<kCoINAo,s$ue,][0l6I.23dQbI].JMce,dX:;2@fC!u^uF?n$4$.OJXtW<5Qib&0nP"-n2a@9J4\#O;lB%LSrW&>jp`&9-'sJO8tMC7l6-%MOL@OPY[*g>3]3l?&*\t*>>G`ArfgSLjCMYM+OZK=M;CH`?=OA95/"(3emZ+Pln"6;XdTG!7NIY%<Efq:^X)LO>E7?5WF;^IJXek5>u$XeFLC^;VojS_]W8]N`'V:a6BkI[./:s[:6bpg>:m3\jVW9)Dj;OO(TCHk.S$+K+1kO552<Si%WuSgN(29$9qSXP^`[V5),ZT7%WuR6LQapUj3Vo;r3b8fF,a))f1'bB2ai@&BUR+r^;s&TM5Gs^^.!,##Ek5hBSc_]rc@H<a\TZOa%n<C,X,H&h<R]1JD'#bE'Y&W_HbsS#1bgCGPgm0spF\m4k3Fr]]U5e<20ZkB&(F9#7AI`D=;Wgs?^e2;$B;QNQo'%WJb8_?%e@N!,%W,j)VXH-G&H&J@\rKSf9?+`u3=mI'8\[HVG*&Zn)Dk/,QTC026!Mk2"XsBpjJaN;)m=RG)OS\<E2%D+r^@/%B5W0]V`Nmd?"2/bA%VTsbBY'.O%%ST^^.$<">&3JDra#Z_T0V,4YQd,U\Hi;Bn]KERfT'9`AV!_W<OuD<l7r]h8r?qZRWG6AY*AOS"AQfrL..h[3o-JKD%MRHMsT`_U,f;s[dOJ6#N:,hHq(0durEer!WFkG2(TK5^VQ-KD]3V<dE*$I#^H[^5'*75Xhp0?l&;'%RV.oS";jJuD3TH/_i+D%WG%k(%?^Y`oO;ksgs&:.?[R5U>cm3%9f(</CVnmDD<RLjGXs"m;+164[ta+hCN*f"8\-%VWWBPEdmnF>kdLIjB)#kZ*,DPW;(pAJ=Tu%3EkJp8R@P'!<m\L@cgcak!8:3r&i.B;+/<,9ZnELi%h\rAWCBmi$!/,Y.[JJnegaBJGZ*&.u]54H+?TpFUlKsCK'3R8`tU4.rR+a%%a)!\"U>'1BWg%k;s/\H\o,J;=Y/9_Nm$-H(fE)H;TWV#3M<Ps/@J-@,H=D>o;-M]QJ/P._aEUC\Wc48bV2(U8A>^%[a#K8+A,22%c4Qlp9!h6^A*-%L/Tf2VeWiHk9GgU'R=u-dWg;WLKaqL>2LsFH#HC==N'[al'XruPFJ*lD(>flgU?klhKnYPT_jn3_JSJD4)r*ab%&/#X1;WpB:K<@U'a$[1,Td/\\;IN4lA&*I1N`#!?m]hpaTjnf"L8E1HaoVl/WH4^\>I5l&NijkkVp<\2]]n!-TJ;aj_F2Lnr^Qj5%lQ#jurg>f;Pes&Q.A+AN1m9s*TH3F*X`FUp4ImOZo+0B7E9eJqLTG<_UG_coffB@'Z",'E*%aZ;D4RG=MOQXs/",Fd3X8c<5L)=1%SgLsiN]Qb%;We%j;)V\E*(VY/37p7sB)OGaJ*S*4BP_"_FcLdE\ndk3At@<"3U2aTC[)lo@SaaRS`:bqE3RW='4)!NWH1I?F_3>*%c2hRH*H/C5&ME_SiMgld<A@j4e2_!d[$2Wr*7:_a_c,[43A%'O<=\Xf;oWs[*-ggR5H/Zg9s_99Q/g$<FBdkbRRhuS\r`PE;;esE%e7hh=^^('[@hq%u9@p0#%=nUcK3q=\*8":k/s$,>[No]X(-&&G(&MX_aN$j67jBN5Y'=0fM8El*kCS<_E2'"P2+hgf]fmZ`=!g;"%ef&hFrGIM?ME7f=s(YOA-`)`q=(QVRkfn3\N*[3E/h(3m1/S7232u-e@VPlG`5ToM>0[=;_m@7T,,B#&OgZSNNj/OZ-6#F&$2aa5%LT.4>@K2sJk>8A16D9j%?I)gFg&FR+\Ics`5:Sl']>,)'/4(R3M#DhMi*l-?WZ(q<Vml[m"K@%o0n0DpmD%D;"%&2>V1]gO-E:"'%1us1e,c)q5#LoJ-n/m_oC6>BX,ijac3G#iG8#S[20*F:%o&4Bo6]Mp^UrD$N;MK4JGsVuh3QK*b$q$'=BiBn!;MIf8?\TQI?C\HB%a8t\i]&jB@5ZenF^:]_E6rS6X$Z\L#;.?XN#K2aN^Ut:p,O.X[QiidI3sDL73Edg6b'4`bJ=*SYjEtEs((/(S105Sr1eL4D3Zq>!%1-%W*`.pe'gCn\I=I+<H5R2B.k0mQA;;n(B*f52KQB!XhL]pI0:!<WH?uaTn`#PHP0S_P@7kjos?^Lr^?8Z8M3J,A^j-?M`XF53f%/Q@KZBB)O5&aBpf&:5b@*2).H[uECObce/B>Gr%*.u;[RKfNTP8Wh7BbRlX$jF8(hJ/kb2G!7WNjCpJS!N.;iABXJ\*76s&@Rage%7i%@E#IpgT58/*g],m5]c^5piS>><eEs*qWTPr$d"LP"dU2CKa_k4NP4fAO.@Lb(b%7!M3!>]t:\sDb8R,Oac"s#9f<TX[4ZtO>*%QmC;rXO$mjFLR$JQZ&J`L)lCV_k)nq42C"HP=s?.,?b6ZSX68'@.&-mN'2cUM+&>07,l>sGg,Dai!(5YRn.JUJO'P-pp>SW"J"e*%=Y"XXQ>bgbaf4nko"_3)Y.nE+!LZWe6m@[hQ!:qQ#Pp34[3Y7W8S*FHhY;8P$p:2)%f_?8#J+4^/1XBO!HD/e4Fm`*<*=q^4EfKR%%6U:dbNVd_&LkbJ^CkfW@b66(j:S&94,T+i.o2BqjFLXt7Lqg,*'$asB]O_+UG80n4F$Hh7#X7&\$k33)H0'?9Ee<>(P<D@=YM]H%^9T7OqbWK`[_@)V=17i1]#>`<[sI/o?Ecljj^N@ce06pYa@<pkQ4]j,R*aK-).@\?"nBd`bA*K,R*#\UZmd%rQ4`tro[@B)L\o$p%i<8/#6`hgN[lYMe$LQhaLuu%s.hSHl*tT03b2bie1L(T$K-)=+qoF=K[r:-(EaU"SannQf[)dfLJ>4WWkmpVX4<k8;L_L\A:5Gm1%Irm)=a%'5BOTGWQ9O^TFW=dFZhB)06Uqds-P<IiA6ja?kFD;=RiBj?U*8*(b.ul&4@GVL7!iH&']/:q4>6(Q)$s(phZD<$"6N*`$%r_%gY53_QfOn&/$53W'"Vm_&HFT!>,HQ7,m]P:lB#9D1YIF]4F#.cB[gYE)T[ed#""<V_6R;;Q_TEApD50JR2We9#`?cN.6AW>b:%#=IS'jiq(qZdtNT2&53eGBqgG*T!gQh?R>r=Bp#pd.NhBR!I&pT]::.4R8^ri2PUnZOYR:l(?C,#QH5;9kR`>!D&/QB-"4N>b=.E%_B%()o2um>OA/79XFm"+Z@L4]@)+NGiqTa1rutn$B-$JJ+CC^_iLU`(r51](1r7'aq&lRk_t0s^Q_AR4H.KgB.+`j/Cj6SV;n;J#%"($'JS'SY_YK!hjH.KAorLl.0ZOYWhTA'>*XD:\EXReknS[,[EUD%[.`"tW'@V/^]56'i"TT63RmI47KaJEs`]!'Mg0qDr_MmCFY%kF_ShXUc0[oiVNB>CE4:XCDngrN6Vl3(uYNH.YRS>og16m%?JuLCZZC2*1R44V'VrducDKLL'NnSaXH+_Q^%Po<?,59.t]8G.UDk%546eU;hqW=4*2I-%[+jQb]7-g4RW'.\ZpG8!<_S'cf5KbX4"EH\:^UR3p^#[>hFfPhIr@`qliEq8`bci@99.\OiQNk#M[]DXMYP@%4)2L"LY^c"YifG==.KEiXGaA9/et"$TM.t@ag:CiQ6FScJ1UW!UNdW-g;,N[o8l7Z&"uZ*RY!7"FCNi5"0(G)]K&h]bcO4TXO%c>%G9a6cEg(fY9FQ\fdJQO[!jKqDq<!Df@7.P>hQI5@2cqqe,`IRL9e\jUaRQB"5H"!9O>J:\#jW]t&7k+jJd3lh8<kR3`Aqs[<4'Y>%r)*NGhkOj2h:L-TDSJ]hr0cBfni[>.MV0o`,"6@Q]H4gY;5?iDc0l6$Tt??JH\;L1Eu]#17o:ohRcbIn#ALaA=0!^tU2mK)kDP"`%$<%GL8<?6>0T9A7coSc;DVn_n%F"btZ*'$uTALo-%RgM$Y>Q'-h)t#q.`IOfd`&.D#\g>-3FD\aN+3?3lU3c>0eG5lOLA!*cLSah%URWK9^]GO0&lUs^5b+B)%8AMRZl%AlhpjD!HlXk^PZOA64+F40&$\Za_j9I,,+(P7<nuZ-A2TtL`U*6:>`P1-3%'%h$.R!T6J-"6%R!9+9`]W%`>PWB"d7qM1k,]Gj>fmuAXl;(sSMN.10d8M<;r_mE;r!:Mdm.\N"TkYHgpF<1q50g#I^j)HFs+)AULkk.Zm.ZAZq/PZ%bhWu8qk\*8IPjIo?ge-+"M^DQVLVf"qpiW3-F(k"B$:>F6sP0uU"HOBYrlC<:frEYrG%'6.fIi"B(TAX^6i$)0)k?u)6J1P`02id%Un\2(qooQ=f<pq:C183`mq9A'd7TUNNVBIkneF$lHo4cZ<:sGleV%\U()Qku`6NNj?VE:[o6]mAZQ7U*p5=b3>*P]N`=/#a?5bXY%g:UMDPSeVeFS<h)'sZb?p65goe$,2*E#/sD_rcq"TqVHRj%_l;a,Gj>^BN"81:U0XZadjes09(#_$W2A$6K60WlRtq<$J"8a#.Jq%Q[2G(iB?)-7%muQ*<CLHbNg'&p'\P]dAe&mol5s/qk`-_m-K.Oalbg,m$E#oOOeTFfB]"fp'(3ODq7A,&-):HKuSX&@Ju2"H\U><%i^a!9r$7p_h<>s7pZk=ur*THRYKuh/^A[4ZY+ImAr8h;ciS/;NqsT"2qt1']YMXa%mB;$6gMd+;rO].lqJUl]r?)$XJcG:8h"0"`%`OTkTr9&"5Bcm?'J,\s3s5T"YU$f%<Qosg(%XmTTod;okD8q%MHe\N6pGP)Zm<e^9IGqla:O:gN*W%kcD>f[R>??)4md1L4l+Qa;%4n!7-Ia3:es!dAQ-H5=uqZqW/^!0?!gtNkH3UcA.-b6_;i#_W9LVEE;qNINF2Ieu7]e)JHhYr%$5<no,5PE!TJ+pjpr2G1+N*aR#%^"ABp0Muo_ijE-YlgCgg<;ZI'HH3b:eaJRV=9$5]^TS\a0OU\>YMQOfE:s+gpXOc`a7$(Lq1Ee"kLDZf's<"8r4`"\rqK2"%S\X*%>^aW+r9>@G^DY*/J,I%WR(i7-pDNi8=2-tK?i:djr.D;l&eA,i?bKrViTg0X58`pWIf-p+Pj'7fH<n3o?fC;Ea7$)/ifDuM4.7G0%GKc"oq:.\nI]EQXr:-C@Xid/@n$JNJpM%%=r[XL>oB/<>p=4YHdq\m;Vq&NXYAd[iTDQ"<X8a*9eblsRX*sYJiO#%<pM%%=r[XL>%oB/<>p=4YHdq\m;Vc@(%f/Tnp:O-,PY'^!62]p<mce@a^1CEs@K_3S^jI];t^M"b.h``([J+Go"It.KfDa%29dTjHUcMNn^>\4q;%q-'LKIB0!"jmRZpbiaENk5YAWpLukAYP?`$p"^EifB9m2n)@2o6)):fU^bq>g%E`dFktF!NCVCciJ\0i`1fRYb$*Jqkp'Ap+1Kt7%73X$EV%c\#d9OPL2b#PjQT"L&SI-CF1R+N_IW_E%Kall_naRhn;9b"6Y\Nig=Nj0!/3X3A>M2DWdJQUi0OOo1rK/[lckUW53I<)n%Im,%q&LI',->XZ^7??d`SRi2TO%9C;gPefhPtE6$Y+%.'d.rLW06A`MB"R3U'Kc0-hJaB6qse^g%(\q_e+Y*@m2qUmInFHElme@a%cSYV<M@@hJq(o@KMOelFFqrkWp?V./2;$X%=EI8L>IfBgGS,ju:DE2&2kTedZYNt`mBRTn@KfK=&N_s5ocm'/dBS@Y]_,1h(p)cb%9X=PO0abtCdb^_U`,)VSfm_6(iai(UW,l@al]3H2`:Rf_1o^P\dt;BR#B5(8WAK*:$[;QCHB%[9`CS3Zh[:7n?#2%'(G:kp3Seta%grT@Uh^c0OM#28XG,,[aF7@UH,@%Eu0AVYsP?Mg0\fIQmYP6I6f@ppuENWSX9GW$cX^1S$\E\G.U(^_lbFE>a?.=1IY?_R=?sAc,%G$E.tQ><s0O,Vt32nI[3a+M'K>P?t,CDT^N*9#%Wk`]'(9,BB2\sAtT/pca;o<iTn:-t!c="Xabmntdn.!ull[;[iZO_rP?_Sqmu%o=8\4h$'^iHJ'M&nRf21QYht=E9'><>Ek7`8:)snN]H2!os1\sHopV7fs8gJ.O[JiYR?oEeTh&f7UZ#7&Tdns^7>Fe.k:i?f#$lU%3ibQ/AZfTu=Hj:?F_B3VT8.`$'FUT0Q&[YZ[@,F9,J.<2/8@)#'_VC9.,p'J4-[uXd19^PeN#X6:g4S'``m'\NQIm%+/>M4*Z7lP%=De!K/X[*F[sOC6R$N.Y@N?\FYp_uW"M(%s7h`4$-[X)_'MX-\9H>!l+#0sT]kqZufgRG]*(@\%]+TN[1Ob;I!BVB>h=D6'phqn\%A+DgWjZna*4?V]GUAKbA^#PNS$?05WS[5B+XhIgE5=^_pSu7%=ZE80V"SAVJSDAbUGn!(>Lc/$<V&*h._6PQ/b%OE%pU>*c*)')R%nT,I@@?9r.^+8Eu2VIMAnh6Y->neQeO1h<L)IfdF`.f3',9N\_AL-]8*cM&jD&3^/+J(n8.&W,d8]ZpP7-K[KF;0Aqd#p,(W'<Vg%6._@:<BBd"YN1YN[^[V"6gJ<o#clZbH%^,lC,?LLj%%3C$Q1\_O4S`R"9YhDDEaQFICtY:=bs,U=8"Zgi`FMS[.(3;g26,O4)`)1%Cu$i1:VVdObS,+MR.T#+,uA3.nMj=KKp"nPH/`.O4u;b?/*bi_V\iXl`>#X,gH`c',^lH@'h@9FI:@6^*EXh\OfdX[e"P.h#Lh;m%5S.]=Mqlu(Zf:#IN[BO4QC9aJ,b[`]#td,+2KGp+-B"U\3AY0mnM3T1To>()[D//MUB>eHT/Oj=U4Wu,(\`lr)7.g/j58P0!'.JI%TP>aU7Xcg`FMBg/0C%m8)?C_Nd2hu*M9Pq.2hr3nWL;:e>lBPn)_I"=j(Q5l"a;A*D1eSa[<J75\/!9cp^.1,^,-V00egqr6IUI!%R#6G9Lk3;0j\CdO,P7F3PZ%Kn&&$=1U<G"S6>q[*>qb,iAr<Z,8_f#_$l(]ImR#nl41cj+6FR6FqG,ZXV2">JT<Kj.n9"V/_(Lro%[Ou/<fEFi=*P2u.Td3K01^q!"oILg4,OC"g;)t-r@2Fe8YHtqk':VV,@2Gq7<#M72$S;eYRgF6]UKnTE$+nPt645,K(Fi6.gU8Kr%6>OHZm=,,>(cZS$@2Cs<W_[HJ/egW%h`c#r&j#4B0AM81'Fu`1^alu-qKE+U:b\m6SHN7N:6mj26@FgH)&R\=PS]m@JmRYEi?rF)%eW/oA]*Z/I=jqMP)1"$l]buh6oSW4_X1t;DZKtSkOO+@QqH"EU1A!o]I/b8[RM^)pW+>)qM2:c+2Y<Fu5(,dO<2Hf\d=ts^9r3jd%oU;]q,Zmh*Kkc=8^L?=`%r^VMH4:SDeFJ2t,?A6&5VJ?obpW!INR^"k-h*#a/:DjI09gYQ@?<q927?DF^rlmm:Z)sfV9rdp""t@o%M2W_L67lan=AIe.R3i,^7UDI"a8oikH(e4Cc`%AeU,%^H5XMYCgCC@*KO3lcb\GlA]g1>*AJ0<?[e]e=HD-k[T[M0p79I8fK.lj^%(77&U6>%JcL]h)KP't';(HN*K>\"/S:nE&TJJrkm<1$TU9'k*rHoi!gTk?>2Lr<V:Er]]'<,Bl>oE('eZ;9Zf*bX<Hd&Y/MFZlF"%`C8)BJmK9Z1.QUU0=6!@O\+bj6MQ1[HU=p)/YX<5/)&A%(\0m%5F%k#]MRS1ZQc)EN!$_"cjRl8#tdN;oJ\%29B_),`bZHQcjN!r%e[!rVlV8q$cjS'X?Rhc$?*e;'cjO>%WF@.FMSf>GT?uo<][8,!_C<^+bR(s:MM+>J'7/JJ]+^O"cmu[Qo&^4(7>hm=?T.NXTBfH:%%)$+\4@L)QY8Br"M*oVt$r:U.`a3%oSYCne(FR,l_f'a6]Ieo0RQOLne!1_Q=_SdGKZ*(e*5\-E:V;N"!9infgl>SNkX@Th:cjhj%[1Ph@Yb6/-M(&/!,^XNc7OY.gJ_7(h*2%D"8:#LK.J+<<MPcb[qB>X^\CiB%_Bh5[1q]e6L6YPhg)WQ@DpK4b'=h3e1"@O5IYC)u%.QQYlLa$M>N3p58M6;[icCG:NTL^o:N+q^"9//R5m4r.>4)%<dS</NQaW]BJjJ0?a@iS\"IPR_eiD-R&7\(7EFE4QMGDBqh>e`6X%i\!8$+/(K8!aue/ZQ1S<_%Ad[VZ^<2qi=7j@kr]FI&f"J9cN\AUPi^m8r;FU]UEMd_hjJ"=jB@BV`4U4ZKGH1/p=,XqA#tSqVXiP%1e8&ol)pTB_>m<[^E4T5;='?YfQ&^B;6$Q\4rS(7kVb]qLi1-JO`AG=LSj#.?q:XP'n^neZVo9]8GThgi25qdH99Lr1?<Q"H"c.P%Q+hcA?/rB@<gWsc8X946fr,n[?>2)]o@+U,O$UH!3>]@?)%on8Vm\BN^14il=to$6)'OLB]-\VT0fA)B@?u)D65N54Rm'F8A0dgF%9akYP55[+<$0NHu&k_U^Sc_lgjstYR:lCF4Z=+dg-7)+tGg-^9BH'BPV[4$#I9/E)jo1uXSj-G^B8.!>BI2Ch_gkV=D?4p#%.kZ%%fH)A"7SIi2n(m%A4iT&dR@7WY=$`5a"i\:8(!V\1MSV%5\+O'*N0t\,2oWT(QBGa8J[kbTK!-R,`XI5jh*j1X)jbDr&MjtNrW+e`%cW#-E%*WAr;bVpsR1HC^h[F"*MtCNs0i)&EeI83AQb*//GGF38OAm]a_3#qYk@,8_nQThb$j3%<W^U;M%(&?!+5p`IBS@_uOUNI(%EYn\E(^>l4kG@JX_hcteS/!6&JVKX4_J,$]edi`?@>]VbRqhnk'Vi&=2b>`#>;"]o'E_&Se6+7M7eB^?(6B4T-<//21rV_`-/T>6%N9J*'lLRCu:qo3I80TJeqCcQmEDh`2K9PN9RUX3GBPIIC(bl3jP_(<@JOWB-)GDk>s.YlEM.3-"hJ]MF7a/G'H.u%JU02-\pEde7%i>+c0VAKkTe3u,a`^>hBa+,:B#?MlIHH\E3i]#+:cs>\knCQ_<ctH1_TM(F[,:]j_^^E.l7n9injCVBgb@2@:j\p&g=[pUdQC9=i%!KG+aN`cS+9PC_<ZAd.DA-A<3Zk1S9qN>F.QjMUBA/PqmD@TH5RXmY%(D!L@)%^\m#Y[$`U]eH$Bh$;L-Eo2KJ4;=a/-=9/Zo[D,%[Nj60Nr"`&="FHB%I]'D7Z46ba-1&PoNjE1(<M)56P\JuUI>j3RtTctGH9]3dMsL#@,9lWU_qHs$G4HJ@`3'g+otW$k_hd'CPi/_%7NRL;#.0kP%)rt`d`q;[G9P`]=1k6((_\*>SGGf3d(t_M4t-]]$HcC@0qd3]4X\4)AqM7O,fRRhEIW3EN1"At8MDh9LPnA'#%hMq%TLaZcDEHY=P$ndkR#"Zm)$X9s`64VQK4?#<,/G*uJFT"j?sk/o.:EjJEP'24&r^r7Xk3;90Z%0-b\VkCPHX!"9ear_R0Qe+N--2D%6h3Z"U3dYIJI)NU."7^4(`cE3GS,nkI'\uD^hK_9Q37<G`'bV>0R>YI:4e$W<daU40`#Kj0F7q1K\[gcj;/7de.C^a^HcEidbs1&%39Nn=<YC@WO!b5<9_T,g>S;urh,DT%"!)^/cqH.Ij\7327WcLo'9#u_&kk"+&WLg;&e)/3@r%8R(bn!.mW&pKA3lAC-c)b;NNJCP%5dk)>8eMOPT0/j3?sj`b#7Mur#gJ+"^]XasNBAX'N9IjoZ!\mq'e^qC]*Uq1XPfJZS3OXB8lAY&$oW"`A2=gVE8rg.S-1(LGjUuH%nY"J^Tu7'9H;2lD-kQmO2:?qI0V[U)Y!E18VT7-728b7/YnS<jSo(A30;*nT\g,5DXuesP<RGif:r;`6S<G3ER`VOq4_OUVY)su6%A")Q!5o3eU29*@8CcJ>b!XoP<4Y?K0Bn9^7CJI2-mQ3c'#Ds*1lE)RP"O/G?\&Db._5<VPr#k2\KDAPmJJt$2ks`J9Z[4Gf?df<s%A.6tLCYT=>>$F\:7CRCs]i+1YkS#&A>D&>q`reHL?I@+O>KhTIJB&BcBnXOZfti+t-cL/j2=!0=:DNLPUGK(o%ngkp8"M=I=q\iF%&@D>rq>lT[V1;mI:1fm%GVsZ[)Z"^6[kT^uKC'X.PP(U$:jtjZ[%Z_(_L##$2E^ec/.M5Q;ekE3+=0R8Nmq^r+TAG]Kf$%$Rs)HU%St`D6&1#aD)6Otai+,AAeCPaf7d%oRoIbha*/t7HPc-hiNf\OdcZ6CR*3_s6Q2)6$CSLu0A3KJll09N68WUdnQjI_cbYtURiD;Lr%3<M*'FO[?\6NJtsR/i3j7uY>KF@Y:'E0:H<[h7c(=9!/3Jh5tKBHgXb4a78LIAlHMAn<^aV.2V9McR1e_SPGd*KY&GLPf-mSImHk%&L7!YA/anX%bX`TBf/3C5R!4i?;,8=oRFgS&i?>B/KSuq@@2^K_o!#`($_d\bCS!dL&L!Z>ob]YUM".OJ_e=B$Z?4IR<aQbNf9/)%ZAeY/NlDKrBIZHJMI(FLoO8g<&hAWqY&-X!Y1JJ\QT%hcj#%%r!Q0fu8F@S`]@XsgDk-!p?t4G&^[US[E?fjEXIAT92hES:c\"99%\5A<L!&nI,E[.M<P:>k?NA+]u]hi\nW%sPTI<))(A!tI8b`*aq*7UN$gh9Fjl'iV8%@43dk!mG%@!CMh7MDQs@W<YPR\7s2nras:%ih>k`NM6GkHWi+"C=IJfaUs'10SJ*k?=bnPA4Pj-8V!)m.#*D\\XVh\4RRHnP9-Cu-VsQ67fuOF%\)NL(bia+d`IQsT9^lYq%6e1%P7f3,_X>H!2T_$,FI*JcntWV'*p<L+?s8N']cR*M`Ki`\r$^&5)Y)r[D**d?7kl'=,9P-jT[qb\&O1#];!lC.6\8@fB_.W86)qJp%"IL?@>0>O=dt3-IUH*C-81g;*(>1IZOCIE&SQ8Z7-oWI9O;Uqi2^KA"6\7_$!R,.H1!,YhVAU"7)]LYD827H8)j(t81c@J:_h(1S%N1<3j,fhk9MDNTf$#5GL^<D\3ekh,W6,HkAd1-hcQoS=i$A&tU<bP6r+@3$<?Ns102,q$/O$]aQ`k2$Y;JF(Tc&X!r9_M%96%V_(%hTR<;&8<uBcNG[0Bpd=\Jcq'&B:]DBdV&sk:(sE?%bbdB:tqsM>"+NVUc4_O"[R_u_h#D]7kk%/l%8%f&7ui7)=o'Y1JJa/i^],,%_o(4+W.ffq@C)_ro1?H,Fp+X2"!5^I>,31%9o'fUW[Ua8"\Od.8t$\bWAus>a4pqmc-cC:Hte^"31enR-@)o9WjttPehAQ#g^(cU%P[&:)k[7.=K[^:5begq'&N,.kUQKVp7Z_2KG%"tc=[p:eOr;MY"!F!DS/qQmRF1AIIS#KK%@I!T`!FfsGZ@=oVQW+-&Q3C8&<dqS%Z_hI7P_]q6S86uaM,B5+@=*/2,7I=JDfQL9@$a65(IX5%0]Yo:1m$[8]nfO-Gc=JJKYFK2FWs9WcUafq7#[eg:cV*V1pY#4&u1#b%D0?[R0oB]"Sc(fBN1e]@C*b?=e?dFJM%Q2P;ZTI!"Q7M'@7cEP5AIi58W7t9i$:ch'G1<uM,>7"U.XK8*J_:!ct01GhKJIaNr6Ef%!(i,';MV(d8W:H-psp]H6A'Pm(bm7o!7RJn1W%KZMDrY9E%PO7Ak!5.WJUW!N7Kq)9\`9Q"P\Nt=u%<24J8==bc&?+W%Vc4%]<#H%1TFTfP0Bj7-PId^WnI8-R8If:5a!#(Rs9hrOVt:q<Cqa5NDM)jIm'bCL0mcV957F'm*7\$C:%$ri*]hhUO)p^s!BJ#LTTrS7ea91%-Y<KkKH=;PUU?BNL*e^n_)pMt#TFLu6o#u4KQ\]VQl4j:VF6p/#^[ka5]S+1IWBX'DKH[iL>1K3\m^fERN'4B1qm/U7Z_"gnXCJO%.RSjBgk_s=^SAkIW%rbT9TE4'&_A=L'Qk#km8M]f#YBrpo_*<EhN:dQ=eaGne4B(H9g$S>g*m4^kjBERr,Hln[K;S$fITu>F`O)k%%pg[##bskhj3:a5Aa[BkNAS_tU>[cj8OXC(;qXDDR]@Y]qTP>aE,iN'D&9!i7uCo;1goJ@H<k"N(J5p^7DT7c=rRl?A6&mQ2YY(Y%R5pL*NdRaoYsKrJZ!b2)g5$DVUM#O23YNE%=lIJ-)AWaR1%=5_gsh6NI4'=s2^ZfU+!Cb[)nLqW%G'dT<ntN%)PnIGE?IW:"X[9U%'0'3\7_ua-Z;H^%)PTrI\d;hs#\+K,mA)NXS!0*K`mMjjM9;slg9b@/jEcbo'e.&!+c]h[p?,207d6q+(fRF/(^!eUdo&K5?^5c3%g-a.aBiq(Gct5K%@j[HYRj6:,`lYg@Rklota?hV$(W?s@q@QpsS1uI=-]hE*UGT_o#XOf9Bs/M+GiAormG<^l$UH>Lfc\"6SAK9K%Ri;Yh:gZ9&M1taZ^@dGPb!Zj-;-Si])5cD`W-=()*lr<in)BFDemRQS+h;?nZ+Zgl+rg<L0@`<A0b,$97PnR85gH)AQk3P@0&\Sj%Oq(MU8-_6b`k!-h@T5:<=A5BE'H,Lq`:Qh@SglD[(FQn`F(#>k*(/U0kCW2D`Xue)Kr03sIPU)<m%S2Yk$4#V_qE>t>T>sI]:q;%%oG)#/M/sgRVXhMnc@m/RDS!s#n>'2VQ^eH4mdI[8jBOso>YW>Nk2fIrk$0km\4r?3bq+07c8DK@I$1Y''pGF$3T_#VPB;LK3M**I%Lb7C(P&t-r(QX0D>nC5CB@7a,QDZ#D;@BgcP&s!)@3n4f0":RNda`7hYp<U?@6AdtFS4YkM'QC*;!r=D/u6I*7nCo/jN0iXS?$5L%\k,uHa]D'F@ZFGRr?PZC)*&5YeP;`uAmHu<Dg</;\feBTlV((m)u3X2>nC2:k,4,\6"oL$UFk1'U#kFURs2i)Z:913Qd]F#>(,ro%-nXJ*dOkeWbb6u]K$L)rbcE<m@sF6-F[]o$kaGUT,fXdYO[p:AQC+b8U^K6,=qD4m'h(adBgtC63LL%cc39VIejH.h>``(k9?k#?%Z[@gT6"dai(5[)uB=Xu#QuaE<k3Sm=i`n50QKk>-<tm3*Ulm_SF;DJNi`rVHls4ZbkU\cC9tI"(>VgW+8QQ99/+0?-(NO!g!):$I%^1c/o8QUi?nRRS&?'&6#qN5kgjUrqKLi[QLDEr\mXqh@P\/XR80u/dn.Eo>q[&=>_S-qs4<F21GPSTZZi`r1bn9?YM$E]#NSiKkc%/_/G$_-slQ]8S1?81ea9$<#'7FIkn2U4eAI_3>=*MtU"H/r2*Ja^WBrYskEh9t=_(#h;mQY*^lZ*R^/[5aSHh8\,u"N(Fh+AsiZB%dP\9hie*D9!OjkY/4gXiqU,O@dM4,7R>a]RE[l@%,j>@@@C9@'Y'KMRI?6'l=jf<*dP\<a0M0m3[Ds1VdP]an,$jsH'qh";NS?O(%OtP6<;'\rcKl;.J*%>PORNc7iL&*)NJL"O2h0dXB\r[+`BPc*3[7dB*,[J*OBdW)ub"@gL-n?"&P'$A%R7Xu5[tuA9]pMhIksEc1%'1e=/Tk9-U+-La)$tK*,P--]:SWe/(\T8')l"\HXH:b[d$j!4o-0`9#7b32;kJG=56TiS_$\oal8o2f'P)4,*eM9?58JeI_6dCNZ%=2gLE-<MO!2%-ZIl,#__`7I\o6;U7*7FJRR*bEH3dY2D-K&oS8lKrnq9tKWO*8=3!0MLIIDpfBLcT;)\8JdCqEZ.lZ4%4lu\PSuq%C7:r'gVVU-.ptbj;m&4F[;F%iR)8c^9tB\^-C9t_7V5H.5<L>17QR%:R<"#=i=HmY3f%@XCrUT>"r`tN!U<[50f,tJ3+lt^/g*ac%Xr3RIeXqd.mKd/6'/!rHIT&qM+JOZs,iOX9(6O"Y0#WufP_9E28eL;Ei<gl".=NUK+f/$35>*7pE[]Es8.qV0*)M@4E96ME;gY*p%WPo*O,C[$^!H#O%RM&qgUs9c:lB<E%-F6AX>DG079&uT]S7Wd18:'(4W#:^SF'/ZNPQR2q4lhg(.p;'1mEQ><,WJYC'gpuST'20F%i-@`I$o5\fNJRe2g";oieJflRA02L^G]D-a,<C0_DT7NIR5*:jglEEB<f-[DQGic[dE.T#,d[qIQ]\3`>&Q()'4R(G=2P`KSq+;I%hX&Rb,UgUn`L5Ie.\YirV5j"q^i_fnZ:b:)&Sj,,lo\O#]U6K<QVf[uh'hUu0laF`8=8AS&qRP4rOG\Bejgqg.ah7!`n%-7((j/u%4L#7*MMGG&GF(I]doin`=@+`+DJ,"R[U-G$3@TXW-fifF"[qT"@k(jHdhHF,+kG;^ifkC$hNHfl(RJCk)mod5"[f&+ha34Wg"D;L%]_HO)eirkBTHTB5g*"h5o*/d@g#6@#ddO')%k?A80r(,T6.0(hEPdLa><c+<n6N?/-j3utOm-)o,,K!^rYBRr28*)h%J_=ePn3Jq%82p&aD=Y0'9[;ut'=^RkdBm0k35>mL)\]`L4dD2H7:K-WOA@U@=d=E"":cm:VoAgr^]BdILn4n-4P`"F#oou4a]XhC/PN-b.L@(W%5dJHVE%%lUc"$k\bAW[_JQkqM?ohm435BRr$(AY<dP)]5,]J1CjuE`Q%mBm/K>2ton51H\6XBV(9%S)M3Y)no2it!;bU18u=1K0i%hdFN&8l,G@8_9Y^-@LOF7c^$1%1&)^A(%iPH)+$h:qj)344CZ>SDg+4XW;;CPOo<FQg[rF[lW`j-[UL66%Y`qXb);GTq1NZ]#T4K%7.uA_WD"d4p4akm:Jj!T[t&9i0-kmsp!mOmMnMFO:g5rd2[CKT:,%$Q'GFq]ZF<@Y&TJG1MZa^M:p[W%0W>NcH]&:G8qCSma=nc3%2gL>D/3M*LhOo7$[/*JQTR=gP1jP"qnDfd.#an%3.88T-<;`5u+i?]KNl`6)&(qOADbrX)]M.1V2`gK=aW"b#GpOYQ:cUq+:#;O`%W6X5[/Xj'9n/$@;L5@Al9\s4aI>cRtj:*l"bpnjb(e[(\LbO+,cG:8mk&-8@R*BL5(+KR0[[Xj^b!@:dl3<Nk:7.t!</uTi_:5SU%CFVARU2H&LKNq7->%!4i-DkZ8<OJeJPGfFBNbX:nmKT@P.SXqB-lpq+0CB%Dj5Q$njDN=*1o/XVNC-UU4Z%,e./4\X+]C=)pdp^8%e8;'8Z`./>P*@nJK<nG=J0]9TCg&hF8_lMYp.=*0qunR6]$8]L7%:bRj'^<\VJZr*<2Gi?D4_i<]O<O6$eaTXZugMT]Ko.+_GB`W%,DF1e-?!#EC93]]%HE"!693.,"EkOp-$^G",/,=@fW_:gDYDY:PFXUY6U/gVhgQI>Br]KIZF=.abj5e<,I1mE]g:W('2%uLZTm3A%DeQ'upG1tP3blep:&9TsMuM;)Df$a=1j_SW9f35Kp4h9B=a\?J:tR8KSEp[lr[$-/p=?PGC9tC8RC:5o0HaY._W7i0(#e:m.-I:t%S(%n9#%?5_DLb3SrhcZ!D/KlgWEZK"1#1OnQqcHq\Qcc&]PV^K,[9QS9\jI7Z>Ae1e>b:>,]@hW9I>%sB6'=aDg-A(guL%(!?#R6%2[C8MeM_]*J3e6kPIGo%f:'@g`t9CIH&El;qIX[?WQ_\ChS?_p%$S>t`KpoOPJ"`F@d`>)Db'j?"]+]4ATQs-hU"h_ZolGLm'l#%%jR$uQkiQbBIF\?C\Jp\q./e#N(9LNfElHN;O'#Um;R^F?e`:UmNMqCUGCqN1FApsHdQBK]2?qssPa7dlmKQ6lpliYP&6%2LA8dPT%Ht?o.OjT;bBU0?42>WoC+H$J1cJ5&^RWaM6j`'<;@PQLVnq4=*'.+OXX[iAF>2u9?XV=A?-D\G68*"sfgc]H2+Z;COQ;H,0TQ6iR%4FXZEXjN.!G.%ojrOUY66n+5`J;!>EeKCCFi/34U'YR4s2qLO>_I)L9QbG'bOP$kEWeqSHaK8Ji;HG(b/]q-aWa$"]2^IYOs1l*S%m8Jq[W-*sX+]smJR>FFTdm`VBdJdi#bZ+]^o\F1^L$BIp35g,_j)=WE?]Q9dT8[?<m>YjpC(3?UYQMA[eg/C_>(D3N>R1_VT`mPY%hK&+JTmlTl%c"u#`Y%N8eL^:/:RhrD9XU(s'jBsdodmC9c7jf(5[[WjS,_KDKZ&g?U57:]]8[[QMh6[W@RfEULtj@iKUgsM"_1#4%;TL7CB'bY8_p)8M&`Q).pBrf%Q/Xd[8QHB6K)Ru",8>gT'GG-g#sgi$TFn^Jq/ZUs;6-EMaIk8F<Lh,Vckq1"eG%Ld0et/AG9tHM%D+3.t1I=Z0ECs][BIffueX-q?'IU@.6cS=>U+OZP&^#[M2^:d?#F:p?(dgC;g3tJ%:sh!G^_gc!jL#:2UHh9(\-s4:371JBq$)ch%&CeiO!@.5g9_B$+7.S8rH%$Sa68:/<0joZFTQ7RGN%GC7SP']B0f0""5/rKl%@#22GVKP(PdP/:#iS%.D%eTi3=se;^^-JromI,`%UP"AGEs'GG+JP4RJ2)'iKMi3q6S-U+,/>&W.-2@C`!Eb9G&0K7#R2RqJ:NST#OL.]1*SHIC8i%*7VY><X8Pj#SB#9`(c<^ohnkI0%1]j,O#oOm!fXESIKM$2Zl/KR=dCrUKe<hu=+`7V^_Mh?9EXCb41En!ZH'QC.d2YPNh3]p]!LH.[1I<!6CG9@R&n#??QnaImFD;.=%+p5\m^mG`!^hK9(TFk@Xh,/eoWWCX81-d)V!-967`cbsHjog[:s8=JQOoZJrpP2A;$lYfGS=M<k5pI'DQ'*J/$jkkS(1Pc!$,@=6%;.K7q@!@<XNDW0nq:#fl62/pG.:FIr^2iTS2M1G!RUF$&'TQk?!*mdUT+a+,Miku=)`H!1``U*tBYZ*FACrljqqnmqK$\eWET90G%0XP9KR+\ek@H0U*QLL2K,>o7oY/Z-S-p<f5Q*>8`Y-Hfe&[JW9MhI)RY,\=bY]1XXpt2gUcb(h9)aW,A<1:$'9f_VXB^F9WP)1)#%U:0rQ)LIL#fVfD#>b6>;`h)EQ)`9r3AhE:;NGTps:"Zu$JLW"3YS!ln$S+,OCjVj$CkRnQV4Fh&'"lMJKT5A@VqVY"gV0<"N?I'"%,"p\senlMU\1q0!E:"K#7N$qc3o`[BD#F\!7M'A`+fpljGmQP546eoLV4B@Ad:44KZaeX@!3u45/\&/lT;(,<,5:.>GprEFh/]9p%6<kEE^cC*96@C.TLbd$(`LFF1O?#<hS5hPX(+YU,_48cp;;HO/2m^lgD)e0@IFMZ/7rg@8-_-G2)e7m$?.kP)`;9q3$'^et`Xj%'%o`*&hbS.2ZIBkY_nHQ9gEQ5;N.&d<7c-bb*4)nd_Y=M#HG;s"SA-6uIS^<B]e-@Ns*5o`b@EY]b1EfJ#TT3X2K(h/bil0tl#F"`k%3Vp,;h'."*V$=Cd66;BrF]9mT\:@$SmMfFqq4$TSF)klFR+T2H\nJ1'.&2O!f:aAk7=$!He^`#fh$Zo=\QEaB`:Yk<[Q<P'W"1GD%:OMCT/J*U<!"N/tb`4',/]buHS*C!YG3XUPi2/DN="*@I?pErOSB*a)jJGPX7;V?MRT$6B#WZ\\BW;2kgG[TL.N2nkecSKrBb^P)%n&UG_X\ATc4uqZ>ETVi+Wh(rtWGo_jWV6eF&,OO]IQ**M*o>VgR(.Y0GL7CY$k=f717kM'LuntB5g#d*VF\f.KsmpRgkQD/8&t'V%liWT5%JKo#U-n$YY<7m0:oX3:YRb!E><E>@(K@\FcKL(.UrUt=JnBX!\0Sr.#(:`Vc;ZO^_i&VKN1b)QA4M9dR71a-oZ`pJ@EaKB%#FtOo0crr]1.`,MTf:W^f2'VG7dbK,GY$&6fr9!m'(bM$=r['%L1>R?^7OKe`dGJeoF5:oOMk"&;IQpe@)M_uq0Fr`:!<j2W'U_s%55<7bChLs.RImKi1?O4aHjP0<o77<2B?$;laIp*T)"W:fY$:\<HshSh1B.?&@"YI`:!a.-B;s+J0=he#QVrE!0L$lY-KkR'1WM66%$g)Yp1E#h9q5)pqd+>"mpe*(>b>Zf+@QsS(2okhCjo`lO9,?dpbu6g6;.&sKPc.4$(F(u0^m@;.dbS3.AC(RA=!TaBoS)\5h;+_7%^9>A90H]MKnoti>7B]5,HUu?c3bR]pQk+:VZ1OA^#[:C/SJ1V6m#@2sc'U.F"W4-Eo*'Ci0<$XQ>]p9Fa;9IemeXeJ/K/7m<#+O'%kE[RsM>=s9gbD0`%lDO(9UIJ\>,DTOk)5Oa;AY;f,5YV*=N5_satd`X0jdoRbMFu9CKBMfQk*Jl`L.A1KqBo$C!;>RM_%?TQk)o=%%UG\]hqZY.@Qnb81N=Nl+#7dr\)YDS8AX9)R$_f/Jeh8to8RR9YVG$e9s3kWbSMs,aA&$4j[["u0]+iI5@HoCm#!!>$2HV;d0'mf%q'+/^H:,E<.J=_O79Xn`+hh7q)^XK2'"9dZ7!uhGaPIR$@CMK:T:iCLgldZn:jODPS%&t:8K""SqnSUF,UDenk=/k!I;$_Q"$^cI%RLDg/9AG;^8["_*+-NWMSf7?sJ"Y$Y`-p9Dg%T@D5*V^uX![88L[/k:n3d/<O?iq4'U`a--1\Zh-H/H'fN#Q_Y)sg+N0L`>a:It'%9H-Xc#EglhIj%%<*&Xcij9I>7NKY"NYp#_`lcY=H39%[63&uU1*(N%X!CX'44a([OPa)sZGtJYs9Z`s"Vu6G/p)cS,)BWHl)[H8a%FZ6rba:E-MH&Ol\Thm#d`)JeSP(H$AdU^NUd2]E2";Nu(K2.AgNQgG#,:jCq]l94+5^3=hYE`T$#'1kYPRVi^'p,n(glt$Xn$9FK%5oLOl)Uh7i>HgQHc0Be)7[%Q[QZJ?1AC]HRhkoI!`7f@<6<QGh8i1c!ZI8,R,IUnr9k%Vl<'`-4O"0AJ*C1:,,TJ9M.'NknEXO27%'q?p'S@Uk]jG\r-b_`1%>JbWTS:d]p*O4#B%U\U_s86QKQV[skcL.YAhsJr#^*(,:MmGXRU:iNP%\a('@rXtdDWeXljV_%5SYrhW%@3A-#c/f8aY7.gDSg_%4H^i1ll(f@6U?*7>d&dkG-i>#Ep@[tbjN]T6>b=k+>;Vd:lSD.@fu_jh1[88dfq-A#*_l8pIk4B?1i=>q%jVbJ,o-hrHfleU)>b5B2o_Z0_iMjm5aRpE!Re]C_5,4AZ.qWjN[\*Wn\NBnQ)\HC/:S;2t.d-@2_o'Z"b;0JieY\hZ'/kT`F>(sR%E.2Ird.2!S2MTE:$0XE4rC-#cd'^Me-U;FMm%971S/'?X()2h-JhEXWabU!jk5LWZ@l6+*X`DH3;Q/4h]IME$Qis>S_c#JTg#uX8%;2Km"eMOGD'mC-3;e2jOh>cEpTmc0N1-9F&o0]S_c@DsAZSNJ(PRbqU6T<L"]%e9+""@Oocim-+mO1Ug4:nobQlI`+Vmb$(qZf22%$/mN1Z/4!U9Xd=p(U9poK-[TY)oMSg!3P4;@`7DO'9N$E7LrY#c3k3lacoGt4OK%B0*(9[L4GTdDldFUL!UO.2-0sd&X0$Eja>nd%SZuk>eu`$?MFsl6fmXgD"cG$W<i.QReiCK!3)cu-)Bn.=[NYU9.gc`3OY.C<VX*^1)*i>a=@^&'(tWaqc;fo$.i6oR7*a=kf*\e6%e1m?=CdI&Y<Ke;4Ij$YO_QLVqF=ES'F]'IW8VY%`nBlb8A?lql2=@eBqrFW.T`siEHm;K=`;5I+G%(XZ7i,Ul6.'Wp.?TFga25hD%*iKDY4JVB3kmHhkgHjfgY*/Pm)L(<4H3*\jH\UUc85:>75]#gg6^-WBWhP%3AEJ]q=#;MWN-A#(rm@Y4TA.JW)\c'#:b]Z=)cUo(%-"4q:._9$O)<MD4ZDe?,hOoD`WK6BT$LC)bl>qSE(Jn-9j9>cFbYt^X5t-P83g$s=`HW-[ioUH!ZViY`\NrYM"KSK76+&,&jmM(:%.[k"9l:iceW(92#<iHN8lB7THj9C;X!k!'n%18@(.ZV[].]N\p*.*Hu<X>UH'^\`Uk0jFX*=Bhk^U1UeLVij&LXfmiJi'54A%=t3%W;ma5GGoK(]p!/cJs>7,ADX#!EiIq^mSGXXU2/r>%Y_joo@,Ck*NB:EiUNZ`WZ=+cDspM)M]*q(>84Zp\m_MFW/84LG]-H(Is;Ic%%L"SP@ccI?66XDeGGt32jFd[):s`0Zo`Xpt"aNW,7IEuKRWQNZ6_WV3[clM?^pc2T+Esb4R(?TC'WSU[27u4D#<$L2g7WC?Qs$Om%.;JTe>!*`?'N>\%iJS.H[34&:XWa`DkUF!HX/"*CNuNeqZSDX4#?O`Dp?V:3N$Od6E"&:XT+Gd^@K.ih!>GqJ-o\&L(EpU5V2)(?%A.`07[IooeF4=&cUYg&g?)%><c!hK*gXd6b55Gr\dCnP95ms(5f&Oc"*6=U1i5VmSF8Z&[SCXT-X)ggUO/pLW0DDX)1-(tNj\Fk-%Q[2_0k:p?<KTTX.*C7,7,e?+@11S)S]7L(rfMp2/in,pYY0;Ms\=[uaYqNU;J$Uc%Ie]g(Y:[N;GL'C_fDLb\-pK2E[s>H,Cu;K>%q=/t1=2-rF^\d_ss1!OSq!aW"rJ,=+rU7MumI/X;`4pcmh7(/uh/C(,kOn:t1&pgZrUKW3p_O27b;XFm:VRk3\f(%1^\t$XpeUqc%_r(KT07&Ge]5EK!\@F]nV>&Q5oXM:HqAJbg6FMAq4.A8#O'DL;IHeGiO*]U:*W%kSg[Z`&]34Un\@Xir`HToUot7mSq`4-5q5:a7%.24o4mN_G%G;hbOEHcWnkIeFI&&5aVnP<M>mPCL7@m=dWbn%G$k(iVZpVX`CNVjd$qfql(`I@_(g#r)hi`G6$5N$/QLpQ@OS:pqA%)u2?5(#"8Jrd%HLI>%ok+24ArQ[\]?\<3ChNF2'-rOaWfRK'L6T?kWaYOJ4Ya6tDK`?5*^DJ&i=+4\-@PCCbHKc:;Co(f4(q[/C!%J,Fap?i9FYi+Dro./<s/rNf>cVg;>3UBea.a.pf0QTqLja)BQ-`?5*^DWX`PS:9%!.L([%roEmN*;^(=C4H/1;IB@ls7(I3PFb`<%lTp5(S*6gAHr)]4XF0Pjg)p?VpV-:[s5WjZr1m-RqWos3P<CB(D+@*ukG*(a.m0j1nbZ13n]1Z[h=%7h;El\+LsdMI2`r-\`kM@:%4[+<ffO+RHs7(I3P@D;Q$FW/,n"!gFpS-d/:WIfH9*OM1U4R[X562Ms4?K!=N?.,gs!6spo7UP$28YGVs-""KcXZ27eM+A6rhmTZ%T?!5gX5V46qO[mlINE=MY6MH+l@0GNom-Hi^Dd*mX8bc\a6*upq:,sd?i?Vn;#V'VE>Mu3"ipIRC4+#gs.%^?3=l(0?MfekRm-c#%s8%I=.=_6=;>iHRKE(]?^\R#!B+JB86Bl%$W&*QToE]hB!+3Zqpm$=DGl5_ar8tk,nX)L):OdDQj*S%,44[mO;8i$L58S\Emf31c%n'G]YnfN_K5-$_m&')XR]DhWjJ,A@]rp&,.s7ie4qsC<=r6)R!q"XBK^\E`erAXcGmGIm$2uiXPoBdX6q1jItc2[\.LYr$tGJF1<%DuTP!s'#HGLO]*:\,Wu;aL<8jnc/Ia59[=]`BX><J+6nGp927,rrC+ZE"W~>%AI9_PrivateDataEnd
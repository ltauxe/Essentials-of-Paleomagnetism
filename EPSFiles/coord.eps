%!PS-Adobe-3.1 EPSF-3.0%%Title: coord.eps%%Creator: Adobe Illustrator(R) X%%AI8_CreatorVersion: 10.0%AI9_PrintingDataBegin%%For: Lisa Tauxe%%CreationDate: 8/17/02%%BoundingBox: 0 0 287 252%%HiResBoundingBox: 0 0 287 252%%CropBox: 0 0 287 252%%LanguageLevel: 2%%DocumentData: Clean7Bit%ADOBeginClientInjection: DocumentHeader "AI10"%ADOEndClientInjection: DocumentHeader "AI10"%%Pages: 1%%DocumentNeededResources: font Helvetica-Bold%%+ font Helvetica%%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.13 0)%%+ procset Adobe_CoolType_Core (2.12 0)%%+ procset Adobe_AGM_Core (2.0 0)%%+ procset Adobe_AGM_Utils (1.0 0)%%DocumentFonts: Helvetica-Bold%%+ Helvetica%%DocumentNeededFonts: Helvetica-Bold%%+ Helvetica%%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors:  Cyan Magenta Yellow Black%%DocumentCustomColors: (Dark Blue)%%CMYKCustomColor: 0.956863 0.909804 0.082353 0.0196079 (Dark Blue)%%RGBCustomColor: %AI7_Thumbnail: 128 112 8%%BeginData: 6474 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDD5FFA827FFFFFF52FD05FF52FD07FF52FD6CFF52F852FFFFF8FD%04FF527DFD07FF7D52FD6BFF7D27F8A8FFF8FD04FFF8FF7D27FF277DFFFF%FFF8FD6BFF7D527D52FFF8FFFFFF7D27FFFF275227FD04FF277DFD6AFF7D%27FFF8A8F8FFFFFF5252FFFF7DF87DFD04FF2752FD6AFF7D52FFA8F8F8FF%FFFF7D27FFFF275227FD04FF277DFD6AFF7D27FFFF27F8FD04FFF8FF5227%FF27527DFFFFF8FD75FF27A8FD04FF7DF8FFA827FD75FFA852FD05FF27FF%52FD64FF7D7D522727FD14FF52FD66FF27F8F827FD15FF27FD65FF7D27F8%27FD7AFF7D527DFF52FD79FF7D52A8FD7BFF7D277DFD7BFFA8527DFD7BFF%7D527DFD7BFFA8527DFD7BFF7D527DFD05FFF8272727FD72FFA8277DFD07%FFF8FFFF2752FD6FFFA85252FD09FFF8FFFFFFF8FD6EFF527DA8FD0AFFF8%FFFFFFF8FD6BFFA85252FFFFA8A8A87DFD07FFF8FFFF5227FD6AFF527DFD%08FFA8A8527DFFFFFFF82752F8FD68FFA85227FD0BFFF8F852FD6EFF527D%A8FD0CFFA8F87DFD50FF522752FD18FFA87D52A8FD0FFF7D27FD50FF27FF%527DFD16FF527DA8FD12FFA8FD50FF2727277DFD06FF527DFD0BFFA87652%7DA8FF7DFFFD05A8FF7DFFA8A8FFA8FD55FF27FFA85252FFA8FFFFFF7D7D%FF7DFD04FFC3BCB5B5B4B493FFA8FFA8A8FFA8A8FFA8FFA8A8FFA8A8FFA8%A8F8F827277DFD4FFF272727527D527D7DFD04FFA852FD04FFBCFCB4FCB4%B5FD11FFA8A852F8F8277D7DFFFFFF7DF8272752FD4BFF7DFF52FD06FF7D%FD04FF99B4FCB4B5FD0FFFA87D527DA8FF277D7D7D52FFFFFF7D52FFFFF8%FD56FFCA998CBBB5B4B5FD0DFF7D52527DA8FFFFFFA8527DFFFFA8FFFFFF%7DF87D5227FD55FF93B4B5FFFFFFBBFD09FFA8A852527DA8FD05FFA852FD%05FFA8FFFFFF7D27527DF8FD52FFCABCFCB5CAFD0BFFA87D52527DFD07FF%7DA8A8FD06FF7DFFFFFF7D27FFFF2752FD50FF99B593FD0BFF7D7D52A8FD%09FF7DA8FD09FF52FFFFFF7DF8275227FF27FF7D7DFD49FFCABCFCB5CAFD%07FFA8A8525252A8FD0AFF7DA8A8FD14FF27525252FD19FF2752272752FD%04FF7DA8FD07FF7DFD1CFF9AB492FD07FFA87D52527DFD0BFFA8FF52FD0D%FF7DFD09FF277D277DFD19FFF8527D7D7DFD04FFF8FD08FF27FD19FFCA9A%8CB5C9FD04FFA87D52527DA8FD0DFFA87DA8A8FD0DFF7DFD09FF27FF7D52%FD19FFF8FD07FF5252FFF87DA8F8FFFFFF5252FD17FFBCB492CAFFFFFFA8%527D7DFD10FF7D52FFFFFFA8FD0DFF52FD26FFFD04F852FFFFFF27A8FFA8%2727A8FD04FFF8FD14FFCABCFCB5A1FFA87D52527DFD06FFCFCAFD09FF52%A8FD05FFA8FD34FFF8FD07FFF8FFFFFFF827FD05FFF8FD13FF9AB492C37D%7D527DA8FD09FFBCB5B5C3FD04FFA852FD08FF7DFD0DFF52FD26FFF8FD07%FF27FFFF7D27F87DFD04FFF8FD10FFCABCFC924B7676A1C3CAC9CAC3CAC9%CAC2C3BCC3BCB5FCB4FCB4B4C2FD0BFFA8FD0DFF7DFD1DFF27277DA8FD05%FFFD04F827FFFFFF277DFFF8A8A8F8A852FF5252FD0FFFCAB4FCB4FCB592%B592B592B592B592B592BB939993BBB4B4FCB4B4B5757D527D527D527D52%7D527D527D527D527D527D527D527D527D277D527D527D527D527D527D52%7D527D527D527D527D527D527D527D527DFD04F852FD0DFF27FD05FFF87D%2727A8FD0FFFC368F8F8A8FD11FFC2FCB5C2FD0FFF7DFD2AFF27277DA8FD%0EFF52A8FD04FFA87D2752FD10FFC293A852F852A8FD09FF525227FFFFFF%CAFD12FFA8FD0CFF52FD35FF5252A8FD11FFC393FFFFA8F8F87DFD08FF27%FF5252FD15FF7DFD0CFF7DFD35FFF82752FD11FFC299FD04FF52F827FD07%FF275227A8FD15FFA8FD0CFFA8FD49FFC393FD05FF7D27F87DFD05FF52FF%A8277D52FFA8FFFF527DA87DFD0BFF7DFD0CFFA8FD49FFC299FD06FFA853%F827A8FFFFFFF852277D527DFFA8FFFFFD047DFD0AFFA8FD0DFF52FD49FF%C392FD08FFA8F8F852FD06FF5252FD06FF5252FD0AFFA8FFFFFF7D52FD08%FF7DFD49FFC2BBFD0AFF52F827A8FD18FFA8FFFFFF7D52FD08FFA8FD49FF%C393FD0BFFA827F852FD16FFA8FD04FF7D27FD08FFA8FD49FFC293FD0DFF%7DF8277DFD13FFA8A8FD04FF7D52FD08FF52FD49FFC393FD0FFF27F852FD%12FFA8FD05FF7D27FD08FF7DFD49FFC299FD10FF7D27F8A8FD0FFFA8FD06%FF7D52FD08FFA8FD49FFC393FD11FFA852F828A8FD09FFA827A8A8FD11FF%7DFD49FFC299FD13FFA8F8007DFD08FF7DF827A8FD11FF52FD49FFC392FD%15FF52F827FD07FFF8F87DFD12FF7DFD49FFC2BBFD16FFA827F87DFD04FF%7D7DFD5EFFC393FD18FF7DF827A8FD18FF7DFD49FFC293FD19FFA827F852%FD17FF52FD49FFC393FD1BFF52F8F8A8FD15FF7DFD3EFF52277DFD08FFC2%99FD12FFF8F8F827A8FD05FFA828F852FD14FFA8FD3EFF27FF27FD08FFC3%93FD12FFF8527DF852FD07FF7DF8277DFD12FF7DFD3EFFF82727FD08FFC2%99FD12FFF85227F852FD09FF27F852FD11FF52FD3EFF27FF527DFD07FFC3%92FD12FFF82727F827FD0AFF7DF8F8A8FD0FFFA8FD3EFFF8272752FF7DFD%05FFC2BBFD12FFF8FFFF52F8FD0CFF7DF852A8FD0DFFA8FD42FF527DFD05%FFC393FD12FFFD04F87DFD0DFFA8F8F852FD0CFF7DFD42FF7D7D7DFD04FF%C293FD26FF52F827FD0BFF52FD44FF7DFD04FFC393FD27FFA827F87DFD09%FFA8FD49FFC299FD29FF7DF827A8FFFFA9FD04FFA8FD40FFA8FD08FFC393%FD2BFF27F8527E01A8FFFFFF7DFD40FF7D52FD07FFC299FD2CFF7DF80129%28FFFFFF52FD40FF527DFF7DFD05FFC392FD2DFF2801010128FD46FF7D7D%FD04FFC2BBFD2CFF7E290129012953FF7DFD42FFA87D7DFD04FFC393FD2E%FFA97D5301017D7DFD49FFC293FD30FFA87D52537DFD49FFC393FD2DFFA8%7D52FFA8FD4CFFC299FD2AFFA87DA8A8A8FD4FFFC393FD27FFA8A87D7DA8%FD52FFC299FD24FFA8FF527DA8FD55FFC392FD22FF7D527DFD59FFC2BBFD%1FFF7D52A8FD5CFFC393FD1BFF7D5252FFA8FD5EFFC293FD18FF7D7DA8A8%FD62FFC393FD15FF7DA87D7DFD63FFCAC2B5B5BCFD11FF7DFF52A8FD67FF%FCB4FCB4CAFD0DFFA87D52A8FD6AFFBBFCB4B5FD0BFFA85252FD6EFFC2B4%FCC2FD08FF52527DFD72FFB4B5FD06FF7D52FD76FFB58CFFFFA852A8A8A8%FD77FFC39952FF7DFD7CFF52FD7FFF7DFD7FFF52FD7FFF7DFD7FFF52FD7F%FF7DFD06FF52FFFFFF7DA8FD04FF7DFD07FF7DFD66FF52FD06FFF8A8FFFF%F8A8FFFFFF27FD08FF527DFD65FF7DFD06FF5252FFA827FFFFFFA827FF52%52FFF8FFFFFFA827FD64FFA827A8A8FD04FFA8F8FF2752FFFFFF5252FFFF%F82752FD04FFF8FD64FF52F8F8A8FD05FF27A8F8FD04FF277DFFFF52F8FD%05FFF8FD64FFA8F8F8A8FD05FF5227F8FD04FF5252FFA8F82752FD04FFF8%FD65FF2727FD07FFF87DFD04FF7D52FF2752FFF87D52FFFF27FD65FF277D%FD0EFFF8FD05FF2752275252FD75FF7D7DFD05FF277D52FD7CFF7DFF27FD%7DFF522752FDD8FFFF%%EndData%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%ADOBeginClientInjection: DocumentProlog Start "AI10"%ADOEndClientInjection: DocumentProlog Start "AI10"%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 60 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 		exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/bdict{	mark}bdf/edict{	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end}def	/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup /Cyan eq{						pop (_Cyan_)					}{						dup /Magenta eq{							pop (_Magenta_)						}{							dup /Yellow eq{								pop (_Yellow_)							}{								dup /Black eq{									pop (_Black_)								}{									dup () cvn eq{										pop (Process)									}if								}ifelse							}ifelse						}ifelse					}ifelse				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def		/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust		AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer		AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse		AGMUTIL_GSTATE_flt setflat	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/rdline{	currentfile AGMUTIL_str256 readline pop} bdf/rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def				AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/AGMUTIL_imagefile nd/AGMUTIL_imbuf nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	dup /DataSource {AGMUTIL_imagefile AGMUTIL_imbuf readstring pop} put	exch	load exec}def/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		Adobe_AGM_Utils/AGMUTIL_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf		1 1 Height { 			pop			DataSource dup type /filetype eq{				AGMUTIL_imbuf readstring pop			}{				exec			} ifelse			AGMUTIL_imagefile exch writestring		}for		true	}ifelse	end}def/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}def/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		1 dict begin		/flushbuffer Width cvi string def		1 1 Height cvi			{			pop			0 1 DataSource length 1 sub				{				DataSource exch get				dup type dup 				/filetype eq					{					exch flushbuffer readstring pop pop					}if				/arraytype eq					{					exec pop					}if				}for			}for		end		}		{		/DataSource load type dup 		/filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 div mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		/arraytype eq			{			1 1 Height { pop DataSource pop } for			}if		}ifelse	end}bdf/addprocs{     2{/exec load}repeat     3 1 roll     [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin    currentdict 2 index known{    	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse	    addprocs /TransferFunction xdf 	    currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 205 dict dup begin put/nd{	null def}bind def/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_src256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_will_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSA_cache 0 dict def/AGMCORE_CSD_cache 0 dict def/AGMCORE_pattern_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_ovp nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/knockout_unitsq nd/AGMCORE_CRD_cache where{	pop}{	/AGMCORE_CRD_cache 0 dict def}ifelse/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/stkpath_clp_npth{	strokepath clip newpath} def/stk_n_clp_npth{	gsave stroke grestore clip newpath} def/npth_clp{	newpath clip} def/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont		/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def				clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore			currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto		/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show						0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp exch put				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin		/AGMCORE_will_host_separate xdf	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf		errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if			/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def		AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if		/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	level2 not{		/xput{			dup load dup length exch maxlength eq{				dup dup load dup				length dup 0 eq {pop 1} if 2 mul dict copy def			}if			load begin				def 			end		}def	}{		/xput{			load 3 1 roll put		}def	}ifelse	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 8 def													/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr exch put			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr exch put		}def		/grestoreall {			AGMCORE_&grestoreall			Adobe_AGM_Core			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core begin				/AGMCORE_gstackptr exch def				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def			end			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def		/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def		/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def		/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/LeaveColorUnchanged eq					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor						currentgray 0 eq					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						Adobe_AGM_Core/AGMCORE_name xddf						false						currentpagedevice/OverrideSeparations known							{							currentpagedevice/OverrideSeparations get								{								/HqnSpots /ProcSet resourcestatus									{									pop pop pop true									}if								}if							}if												{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not							}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace							false							currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall							not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				true exch					{					convert_spot_to_process and					}				forall				}{				false exch					{					convert_spot_to_process or					}				forall				}ifelse			}ifelse		}def	}ifelse		AGMCORE_host_sep AGMCORE_will_host_separate not and {		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def		AGMCORE_color_space_onhost_seps	}if	/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	AGMCORE_host_sep{		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/clip AGMCORE_key_known not{			Adobe_AGM_Core/AGMCORE_&clip /clip load put			/clip			{				current_spot_alias{					currentdict/InksUsed known{						[						InksUsed{							dup map_alias{								/Name get exch pop							}if						}forall						]						/InksUsed xdf					}if				}if				AGMCORE_&clip			}def		}if		/eoclip AGMCORE_key_known not{			Adobe_AGM_Core/AGMCORE_&eoclip /eoclip load put			/eoclip			{				current_spot_alias{					currentdict/InksUsed known{						[						InksUsed{							dup map_alias{								/Name get exch pop							}if						}forall						]						/InksUsed xdf					}if				}if				AGMCORE_&eoclip			}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf		/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def		/map_index	{		1 index mul exch getinterval {255 div} forall	}def		level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		/level2ScreenFreq{			begin			60			HalftoneType 1 eq{				pop Frequency			}if			HalftoneType 2 eq{				pop GrayFrequency			}if			HalftoneType 5 eq{				pop Default level2ScreenFreq			}if			 end		}def		/currentScreenFreq{			currenthalftone level2ScreenFreq		}def		level2 /setcolorspace AGMCORE_key_known not and{					/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get dup /Separation eq					{						pop						dup length array copy						dup dup 1 get						current_spot_alias						{							dup map_alias							{								begin								/sep_colorspace_dict currentdict AGMCORE_gput								pop pop	pop																	[ 									/Separation Name 									CSA map_csa									dup /MappedCSA xdf 									/sep_colorspace_proc load								]								dup Name								end							}if						}if						map_reserved_ink_name 1 exch put					}{						/DeviceN eq 						{							dup length array copy							dup dup 1 get [ 								exch {									current_spot_alias{										dup map_alias{											/Name get exch pop										}if									}if									map_reserved_ink_name								} forall 							] 1 exch put						}if					}ifelse				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				AGMCORE_&&&setcolorspace			}def		}if		}{				/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/currentScreenFreq{			currentscreen pop pop		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def				/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def				/n_color_components		{			dup type /arraytype eq{				0 get			}if			dup /DeviceGray eq{				pop 1			}{				/DeviceCMYK eq{					4				}{					3				}ifelse			}ifelse		} def				/setcolor_devicecolor		{			dup type /arraytype eq{				0 get			}if			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def			/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse		/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/spclp /stkpath_clp_npth ldf	/f /fill ldf	/ef /eofill ldf	/s /stroke ldf	/sclp /stk_n_clp_npth ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf		currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/current_ink{	dup length 0 eq{		pop true	}{		Adobe_AGM_Core/ink_result false put		{			dup /ProcessCyan eq{				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf			}{				dup /ProcessMagenta eq{					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf				}{					dup /ProcessYellow eq{						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf					}{						dup /ProcessBlack eq{							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf						}{							dup /sep_colorspace_dict AGMCORE_gget dup null eq{								pop false ink_result or Adobe_AGM_Core/ink_result xddf							}{								/Name get eq{									1 setsepcolor									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf								}{									false ink_result or Adobe_AGM_Core/ink_result xddf								}ifelse							}ifelse						}ifelse					}ifelse				}ifelse			}ifelse			pop 		} forall		ink_result	}ifelse}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA map_csa setcolorspace_opt		set_crd	end}def/setsepcolor{ 		/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/sep_colorspace_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 		current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	/MappedCSA CSA map_csa def	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf		AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx														AGMCORE_host_sep{								AGMCORE_is_cmyk_sep							}{								Name inRip_spot_has_ink not							}ifelse							{		 						/pop cvx 1							}if							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc /setcolor ldf												[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		/MappedCSA CSA map_csa def		AGMCORE_host_sep level2 not and{			0 0 0 0 setcmykcolor		}{			[/Indexed MappedCSA 			level2 not has_color not and{				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{					pop [/DeviceGray]				}if				HiVal GrayLookup			}{				HiVal 				currentdict/RangeArray known{					{ 						/indexed_colorspace_dict AGMCORE_gget begin						Lookup exch 						dup HiVal gt{							pop HiVal						}if						NComponents mul NComponents getinterval {} forall						NComponents 1 sub -1 0{							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range							NComponents 1 roll						}for						end					} bind				}{					Lookup				}ifelse			}ifelse			] setcolorspace_opt						set_crd		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep{		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor	}{		setcolor	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave 		dup begin		1 setgray		0 0 ImageMatrix itransform 		Width Height ImageMatrix idtransform rectfill 		end		grestore		}if	consumeimagedata}def/add_csa{	Adobe_AGM_Core begin			/AGMCORE_CSA_cache xput	end}def/map_csa{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get	}if}def/add_csd{	Adobe_AGM_Core begin		/AGMCORE_CSD_cache xput	end}def/get_csd{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get	}if}def/get_csd_by_name{	dup type dup /nametype eq exch /stringtype eq or{		Adobe_AGM_Core begin		/AGMCORE_CSD_Name xdf		AGMCORE_CSD_cache		{			dup /Name get AGMCORE_CSD_Name eq			{				exch pop exit			}{				pop			}ifelse			pop		}forall		end	}if}def/cachepattern_level2{	4 dict begin	/comparebuffer exch def	/holdbuffer exch def	/readbuffer 1024 string def	/LZWFilter holdbuffer /LZWEncode filter def	{		currentfile readbuffer readline not			{pop exit}		if		dup LZWFilter exch writestring		LZWFilter (\n) writestring		comparebuffer eq			{exit}		if	}loop	LZWFilter closefile	end}def/cachepattern_level3{	3 dict begin	/comparebuffer exch def	/readbuffer 1024 string def	/DoEOL false def	{ 		DoEOL			{			(\n)			/DoEOL false def			}			{			currentfile readbuffer readline not				{pop ()}				{				dup length 0 eq					{ pop(\n)}					{					dup comparebuffer eq						{pop ()}						{/DoEOL true def}					ifelse					}				ifelse				}			ifelse			}		ifelse	} /ReusableStreamDecode filter	end}def/add_pattern{	Adobe_AGM_Core begin		/AGMCORE_pattern_cache xput	end}def/get_pattern{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get	}if}def/make_pattern{	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix	makepattern}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			false sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{		currentcolorrendering/Intent known{		currentcolorrendering/Intent get	}{		null	}ifelse		Intent ne{		false  		Intent		AGMCORE_CRD_cache {			exch pop 			begin				dup Intent eq{					currentdict setcolorrendering_opt					end 					exch pop true exch						exit				}if			end		} forall		pop		not{			systemdict /findcolorrendering known{				Intent findcolorrendering pop				/ColorRendering findresource 				dup length dict copy				setcolorrendering_opt			}if		}if	}if} def/add_crd{	AGMCORE_CRD_cache 3 1 roll put}def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict/CRD known{			AGMCORE_CRD_cache CRD get dup null ne{				setcolorrendering_opt			}{				pop			}ifelse		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/cpaint_gcomp{	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/AGMCORE_ctm_stack bdict	/push_ctm {		stack length size le{			stack dup length 2 mul array 			dup /stack exch def			copy pop		}if		stack size 3 -1 roll put		/size size 1 add def	}	/pop_ctm {		/size size 1 sub def		size 0 lt{ 			/size 0 def		}if		stack size get	}	/stack 1 array	/size 0 edict def/save_ctm{	matrix currentmatrix AGMCORE_ctm_stack begin 		push_ctm 	end}def/restore_ctm{	AGMCORE_ctm_stack begin		pop_ctm 	end	setmatrix}def/path_rez{	dup 0 ne{		AGMCORE_deviceDPI exch div 		dup 1 lt{			pop 1		}if		setflat	}{		pop	}ifelse 	}def/rdcmntline {	currentfile AGMCORE_str256 readline pop	(%) anchorsearch {pop} if} def/set_spot_alias_ary{	/AGMCORE_SpotAliasAry where{		pop pop	}{		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf		true set_spot_alias	}ifelse}def/set_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry{				dup/Name get AGMCORE_name eq{					save exch					/Adobe_AGM_Core currentdict def					/CSD get get_csd					exch restore					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias		/AGMCORE_&setcustomcolor AGMCORE_key_known not {		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput		Adobe_AGM_Core begin	/setcustomcolor	{				dup /customcolor_tint exch AGMCORE_gput				current_spot_alias{			1 index 4 get map_alias{				mark 3 1 roll				setsepcolorspace				counttomark 0 ne{					setsepcolor				}if				pop				pop			}{				AGMCORE_&setcustomcolor			}ifelse		}{			AGMCORE_&setcustomcolor		}ifelse	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		fill grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if		Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put}def/driver_check_media_override{	Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne	{		Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix	}if}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defendendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.12 0%%Copyright: Copyright 1997-2001 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.12 0userdict/Adobe_CoolType_Core 60 dict dup begin put/Level2? systemdict/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def/currentpacking false def/setpacking/pop load def/SharedFontDirectory 0 dictdef}if currentpacking true setpacking/@_SaveStackLevels{Adobe_CoolType_Databegin @opStackCountByLevel @opStackLevel 2 copy known not{2 copy 3 dict dup/args 7 index 5 add array put put get}{get dup/args get dup length 3 index lt{dup length 5 add array exch 1 index exch 0 exch putinterval 1 index exch/argsexch put}{pop}ifelse}ifelse begin count 2 sub 1 index lt{pop count 1 sub}ifdup/argCount exch def dup 0 gt{exch 1 index 2 add 1 roll args exch 0 exchgetinterval astore pop}{pop}ifelse count 1 sub/restCount exch def end/@opStackLevel @opStackLevel 1 add def countdictstack 1 sub@dictStackCountByLevel exch @dictStackLevel exch put/@dictStackLevel@dictStackLevel 1 add def end}bind def/@_RestoreStackLevels{Adobe_CoolType_Data begin/@opStackLevel @opStackLevel 1 sub def@opStackCountByLevel @opStackLevel get begin count restCount sub dup 0 gt{{pop}repeat}{pop}ifelse args 0 argCount getinterval{}forall end/@dictStackLevel@dictStackLevel 1 sub def @dictStackCountByLevel @dictStackLevel get endcountdictstack exch sub dup 0 gt{{end}repeat}{pop}ifelse}bind def/@_PopStackLevels{Adobe_CoolType_Data begin/@opStackLevel @opStackLevel 1 subdef/@dictStackLevel @dictStackLevel 1 sub def end}bind def/@Raise{exch cvxexch errordict exch get exec stop}bind def/@ReRaise{cvx $error/errorname geterrordict exch get exec stop}bind def/@Stopped{0 @#Stopped}bind def/@#Stopped{@_SaveStackLevels stopped{@_RestoreStackLevels true}{@_PopStackLevels false}ifelse}bind def/@Arg{Adobe_CoolType_Data begin @opStackCountByLevel@opStackLevel 1 sub get/args get exch get end}bind def/doc_setup{Adobe_CoolType_Core begin/mov/moveto load def/nfnt/newencodedfont load def/mfnt/makefont load def/sfnt/setfont load def/ufnt/undefinefont load def/chp/charpath load def/awsh/awidthshow load def/wsh/widthshow load def/ash/ashowload def/sh/show load def end userdict/Adobe_CoolType_Data 6 dict dup begin/AddWidths? false def/CC 0 def/charcode 2 string def/@opStackCountByLevel 32dict def/@opStackLevel 0 def/@dictStackCountByLevel 32 dict def/@dictStackLevel 0 def end put}bind def/doc_trailer{currentdictAdobe_CoolType_Core eq{end}if}bind def/page_setup{Adobe_CoolType_Core begin}bind def/page_trailer{end}bind def/unload{systemdict/languagelevel known{systemdict/languagelevel get 2 ge{userdict/Adobe_CoolType_Core 2 copy known{undef}{pop pop}ifelse}if}if}bind def/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}def/findfont dup systemdict begin userdict begin/globaldict where{/globaldict get begin}if dup where pop exch get/globaldictwhere{pop end}if end end def/systemfindfont/findfont load def/undefinefont{pop}ndf/copyfont{currentglobal 3 1 roll 1 index gcheck setglobal dup null eq{0}{dup length}ifelse 2 index length add 1 add dict begin exch{1 index/FID eq{poppop}{def}ifelse}forall dup null eq{pop}{{def}forall}ifelse currentdict endexch setglobal}bind def/copyarray{currentglobal exch dup gcheck setglobal duplength array copy exch setglobal}bind def/newencodedfont{currentglobal{SharedFontDirectory 3 index known{SharedFontDirectory 3 index get/FontReferenced known}{false}ifelse}{FontDirectory 3 index known{FontDirectory3 index get/FontReferenced known}{SharedFontDirectory 3 index known{SharedFontDirectory 3 index get/FontReferenced known}{false}ifelse}ifelse}ifelse dup{3 index findfont/FontReferenced get 2 index findfont ne{pop false}if}if{pop 1 index findfont/Encoding get exch 0 1 255{2 copy get 3 index 3 1roll put}for pop pop pop}{findfont dup dup maxlength 2 add dict begin exch{1index/FID ne{def}{pop pop}ifelse}forall/FontReferenced exch def/Encoding exchdup length array copy def/FontName 1 index dup type/stringtype eq{cvn}if defcurrentdict end definefont pop}ifelse}bind def/SetSubstituteStrategy{$SubstituteFont begin dup type/dicttype ne{0 dict}if currentdict/$Strategiesknown{exch $Strategies exch 2 copy known{get 2 copy maxlength exch maxlengthadd dict begin{def}forall{def}forall currentdict dup/$Init known{dup/$Init getexec}if end/$Strategy exch def}{pop pop pop}ifelse}{pop pop}ifelse end}binddef/scff{$SubstituteFont begin dup type/stringtype eq{dup length exch}{null}ifelse/$sname exch def/$slen exch def end{findfont}@Stopped{dup length dup 21add string dup 4 3 roll 0 exch 128 string cvs putinterval exch 1 index exch(_was-malformed-so-was)putinterval cvn{findfont}@Stopped{pop/Courier findfont}if}if $SubstituteFont begin/$sname null def/$slen 0 def end}bind def/isWidthsOnlyFont{dup/WidthsOnly known{pop pop true}{dup/FDepVector known{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}{dup/FDArray known{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}{pop}ifelse}ifelse}ifelse}bind def/?set{$SubstituteFont begin/$substituteFound false def/$fontname 4index def/$doSmartSub false def end 3 index findfont $SubstituteFont begin$substituteFound{false}{dup/FontName known{dup/FontName get $fontname eq 1index/DistillerFauxFont known not and/currentdistillerparams where{pop false 2index isWidthsOnlyFont not and}if}{false}ifelse}ifelse exch pop/$doSmartSubtrue def end{exch pop exch pop exch 2 dict dup/Found 3 index put exch findfontexch}{exch exec exch findfont 2 dict dup/Downloaded 6 5 roll put}ifelse dup/FontName 4 index put copyfont definefont pop}bind def/?str1 256 string def/?str2 256 string def/?add{1 index type/integertype eq{exch true 4 2}{false 31}ifelse roll 1 index findfont dup/Widths known{Adobe_CoolType_Data/AddWidths?true put gsave dup 1000 scalefont setfont}if/Downloaded known{exec exch{exch?str2 cvs exch findfont/Downloaded get 1 dict begin/Downloaded 1 index def?str1 cvs length ?str1 1 index 1 add 3 index putinterval exch length 1 add 1index add ?str1 2 index(*)putinterval ?str1 0 2 index getinterval cvn findfont?str1 3 index(+)putinterval 2 dict dup/FontName ?str1 0 6 index getintervalcvn put dup/Downloaded Downloaded put end copyfont dup/FontName get exchdefinefont pop pop pop}{pop}ifelse}{pop exch{findfont dup/Found get dup lengthexch ?str1 cvs pop ?str1 1 index(+)putinterval ?str1 1 index 1 add 4 index?str2 cvs putinterval ?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add addgetinterval cvn 1 dict exch 1 index exch/FontName exch put copyfont dup/FontName get exch definefont pop}{pop}ifelse}ifelse Adobe_CoolType_Data/AddWidths? get{grestore Adobe_CoolType_Data/AddWidths? false put}if}bind def/?sh{currentfont/Downloaded known{exch}if pop}bind def/?chp{currentfont/Downloaded known{pop}{false chp}ifelse}bind def/?mv{currentfont/Downloadedknown{moveto pop pop}{pop pop moveto}ifelse}bind def setpacking userdict/$SubstituteFont 25 dict put 1 dict begin/SubstituteFont dup $error exch 2copy known{get}{pop pop{pop/Courier}bind}ifelse def/currentdistillerparamswhere dup{pop pop currentdistillerparams/CannotEmbedFontPolicy 2 copy known{get/Error eq}{pop pop false}ifelse}if not{countdictstack array dictstack 0 getbegin userdict begin $SubstituteFont begin/$str 128 string def/$fontpat 128string def/$slen 0 def/$sname null def/$match false def/$fontname null def/$substituteFound false def/$doSmartSub true def/$depth 0 def/$fontname nulldef/$italicangle 26.5 def/$dstack null def/$Strategies 10 dict dup begin/$Type3Underprint{currentglobal exch false setglobal 11 dict begin/UseFontexch $WMode 0 ne{dup length dict copy dup/WMode $WMode put/UseFont exchdefinefont}if def/FontName $fontname dup type/stringtype eq{cvn}if def/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def/Encoding 256 array dup 0 1255{/.notdef put dup}for pop def/FontBBox[0 0 0 0]def/CCInfo 7 dict dup begin/cc null def/x 0 def/y 0 def end def/BuildChar{exch begin CCInfo begin 1string dup 0 3 index put exch pop/cc exch def UseFont 1000 scalefont setfontcc stringwidth/y exch def/x exch def x y setcharwidth $SubstituteFont/$Strategy get/$Underprint get exec 0 0 moveto cc show x y moveto end end}binddef currentdict end exch setglobal}bind def/$GetaTint 2 dict dup begin/$BuildFont{dup/WMode known{dup/WMode get}{0}ifelse/$WMode exch def $fontnameexch dup/FontName known{dup/FontName get dup type/stringtype eq{cvn}if}{/unnamedfont}ifelse exch $deepcopyfont exch 1 index exch/FontBasedOn exch putdup/FontName $fontname dup type/stringtype eq{cvn}if put definefont}bind def/$Underprint{gsave x abs y abs gt{/y 1000 def}{/x -1000 def 500 120 translate}ifelse Level2?{[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]setcolorspace}{0setgray}ifelse 10 setlinewidth x .8 mul[7 3]{y mul 8 div 120 sub x 10 div exchmoveto 0 y 4 div neg rlineto dup 0 rlineto 0 y 4 div rlineto closepath gsaveLevel2?{.2 setcolor}{.8 setgray}ifelse fill grestore stroke}forall popgrestore}bind def end def/$Oblique 1 dict dup begin/$BuildFont{currentglobalexch dup gcheck setglobal null copyfont begin/FontBasedOn currentdict/FontNameknown{FontName dup type/stringtype eq{cvn}if}{/unnamedfont}ifelse def/FontName$fontname dup type/stringtype eq{cvn}if def/currentdistillerparams where{pop}{/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dupbegin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dupsin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}ifelse FontName currentdict end definefont exch setglobal}bind def end def/$None 1 dict dup begin/$BuildFont{}bind def end def end def/$ObliqueSetSubstituteStrategy/$findfontByEnum{dup type/stringtype eq{cvn}if dup/$fontname exch def $sname null eq{$str cvs dup length $slen sub $slengetinterval}{pop $sname}ifelse $fontpat dup 0(fonts/*)putinterval exch 7 exchputinterval/$match false def $SubstituteFont/$dstack countdictstack arraydictstack put mark{$fontpat 0 $slen 7 add getinterval{/$match exch def exit}$str filenameforall}stopped{cleardictstack currentdict true $SubstituteFont/$dstack get{exch{1 index eq{pop false}{true}ifelse}{begin false}ifelse}forallpop}if cleartomark/$slen 0 def $match false ne{$match(fonts/)anchorsearch poppop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup begin/Adobe 4 dict dup begin/Japan1[/Ryumin-Light/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]def/GB1[/STSong-Light/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]defend def end def/$cmapname null def/$deepcopyfont{dup/FontType get 0 eq{1 dictdup/FontName/copied put copyfont begin/FDepVector FDepVector copyarray 0 1 2index length 1 sub{2 copy get $deepcopyfont dup/FontName/copied put/copiedexch definefont 3 copy put pop pop}for def currentdict end}{$Strategies/$Type3Underprint get exec}ifelse}bind def/$buildfontname{length $str 1 index(-)putinterval 1 add $str 1 index $cmapname $fontpat cvs putinterval $cmapnamelength add $str exch 0 exch getinterval cvn}bind def/$findfontByROS{/$fontnameexch def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}ifelse}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1index/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}ifelse exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall{$str cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo getdup/Registry get Registry eq exch/Ordering get Ordering eq and and{exchrestore exch pop true exit}{pop restore}ifelse}$str/CIDFont resourceforall{$buildfontname}{$fontname $findfontByEnum}ifelse}ifelse}bind def end endcurrentdict/$error known currentdict/languagelevel known and dup{pop $error/SubstituteFont known}if dup{$error}{Adobe_CoolType_Core}ifelse begin{/SubstituteFont/CMap/Category resourcestatus{pop pop{$SubstituteFont begin/$substituteFound true def dup length $slen gt $sname null ne or $slen 0 gtand{$sname null eq{dup $str cvs dup length $slen sub $slen getinterval cvn}{$sname}ifelse dup/CMap resourcestatus{pop pop dup/$cmapname exch def/CMapfindresource/CIDSystemInfo get{def}forall $findfontByROS}{128 string cvs dup(-)search{3 1 roll search{3 1 roll pop{dup cvi}stopped{pop pop pop pop pop$findfontByEnum}{4 2 roll pop pop exch length exch 2 index length 2 index subexch 1 sub -1 0{$str cvs dup length 4 index 0 4 index 4 3 roll add getintervalexch 1 index exch 3 index exch putinterval dup/CMap resourcestatus{pop pop 4 1roll pop pop pop dup/$cmapname exch def/CMap findresource/CIDSystemInfo get{def}forall $findfontByROS true exit}{pop}ifelse}for dup type/booleantype eq{pop}{pop pop $findfontByEnum}ifelse}ifelse}{pop pop pop $findfontByEnum}ifelse}{pop pop $findfontByEnum}ifelse}ifelse}{//SubstituteFont exec}ifelse/$slen 0def end}}{{$SubstituteFont begin/$substituteFound true def dup length $slen gt$sname null ne or $slen 0 gt and{$findfontByEnum}{//SubstituteFont exec}ifelseend}}ifelse bind readonly def Adobe_CoolType_Core/scfindfont/systemfindfontload put}{/scfindfont{$SubstituteFont begin dup systemfindfont dup/FontNameknown{dup/FontName get dup 3 index ne}{/noname true}ifelse dup{/$origfontnamefound 2 index def/$origfontname 4 index def/$substituteFoundtrue def}if exch pop{$slen 0 gt $sname null ne 3 index length $slen gt or and{pop dup $findfontByEnum findfont dup maxlength 1 add dict begin{1 index/FID eq{pop pop}{def}ifelse}forall currentdict end definefont dup/FontName known{dup/FontName get}{null}ifelse $origfontnamefound ne{$origfontname $str cvs print( substitution revised, using )print dup/FontName known{dup/FontName get}{(unspecified font)}ifelse $str cvs print(.)print}if}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end endAdobe_CoolType_Core/findfont{$SubstituteFont begin $depth 0 eq{/$fontname 1index dup type/stringtype ne{$str cvs}if def/$substituteFound false def}if/$depth $depth 1 add def end scfindfont $SubstituteFont begin/$depth $depth 1sub def $substituteFound $depth 0 eq and $doSmartSub and{currentdict/$Strategyknown{$Strategy/$BuildFont get exec}if}if end}bind put}if end end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.13 0%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated.%%Version: 1.13 0systemdict/languagelevel known dup{currentglobal false setglobal}{false}ifelseexch userdict/Adobe_CoolType_Utility 2 copy known{2 copy get dup maxlength 25add dict copy}{25 dict}ifelse put Adobe_CoolType_Utility begin/ct_Level2? exchdef/ct_Clone? 1183615869 internaldict dup/CCRun known not exch/eCCRun knownnot ct_Level2? and or def/ct_UseNativeCapability? systemdict/composefont knowndef/ct_MakeOCF 35 dict def/ct_Vars 25 dict def/ct_GlyphDirProcs 6 dict def/ct_BuildCharDict 15 dict dup begin/charcode 2 string def/dst_string 1500string def/nullstring()def/usewidths? true def end def ct_Level2?{setglobal}{pop}ifelse ct_GlyphDirProcs begin/GetGlyphDirectory{systemdict/languagelevelknown{pop/CIDFont findresource/GlyphDirectory get}{1 index/CIDFontfindresource/GlyphDirectory get dup type/dicttype eq{dup dup maxlength exchlength sub 2 index lt{dup length 2 index add dict copy 2 index/CIDFontfindresource/GlyphDirectory 2 index put}if}if exch pop exch pop}ifelse +}def/+{systemdict/languagelevel known{currentglobal false setglobal 3 dict begin/vmexch def}{1 dict begin}ifelse/$ exch def systemdict/languagelevel known{vmsetglobal/gvm currentglobal def $ gcheck setglobal}if ?{$ begin}if}def/?{$type/dicttype eq}def/|{userdict/Adobe_CoolType_Data known{Adobe_CoolType_Data/AddWidths? known{currentdict Adobe_CoolType_Data begin begin AddWidths?{Adobe_CoolType_Data/CC 3 index put ?{def}{$ 3 1 roll put}ifelse CC charcodeexch 1 index 0 2 index 256 idiv put 1 index exch 1 exch 256 mod putstringwidth 2 array astore currentfont/Widths get exch CC exch put}{?{def}{$ 31 roll put}ifelse}ifelse end end}{?{def}{$ 3 1 roll put}ifelse}ifelse}{?{def}{$ 3 1 roll put}ifelse}ifelse}def/!{?{end}if systemdict/languagelevel known{gvmsetglobal}if end}def/:{string currentfile exch readstring pop}executeonly defend ct_MakeOCF begin/ct_cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_CID_STR_SIZE 8000 def/ct_mkocfStr100 100 string def/ct_defaultFontMtx[.0010 0 .001 0 0]def/ct_1000Mtx[1000 0 0 1000 0 0]def/ct_raise{exch cvx excherrordict exch get exec stop}bind def/ct_reraise{cvx $error/errorname get(Error: )print dup(                    )cvs print errordict exch get exec stop}bind def/ct_cvnsi{1 index add 1 sub 1 exch 0 4 1 roll{2 index exch get exch 8bitshift add}for exch pop}bind def/ct_GetInterval{Adobe_CoolType_Utility/ct_BuildCharDict get begin/dst_index 0 def dup dst_string length gt{dupstring/dst_string exch def}if 1 index ct_CID_STR_SIZE idiv/arrayIndex exch def2 index arrayIndex get 2 index arrayIndex ct_CID_STR_SIZE mul sub{dup 3 indexadd 2 index length le{2 index getinterval dst_string dst_index 2 indexputinterval length dst_index add/dst_index exch def exit}{1 index length 1index sub dup 4 1 roll getinterval dst_string dst_index 2 index putintervalpop dup dst_index add/dst_index exch def sub/arrayIndex arrayIndex 1 add def 2index dup length arrayIndex gt{arrayIndex get}{pop exit}ifelse 0}ifelse}looppop pop pop dst_string 0 dst_index getinterval end}bind def ct_Level2?{/ct_resourcestatus currentglobal mark true setglobal{/unknowninstancename/Category resourcestatus}stopped{cleartomark setglobal true}{cleartomarkcurrentglobal not exch setglobal}ifelse{{mark 3 1 roll/Category findresourcebegin ct_Vars/vm currentglobal put({ResourceStatus} stopped)0()/SubFileDecodefilter cvx exec{cleartomark false}{{3 2 roll pop true}{cleartomark false}ifelse}ifelse ct_Vars/vm get setglobal end}}{{resourcestatus}}ifelse bind def/CIDFont/Category ct_resourcestatus{pop pop}{currentglobal true setglobal/Generic/Category findresource dup length dict copy dup/InstanceType/dicttypeput/CIDFont exch/Category defineresource pop setglobal}ifelsect_UseNativeCapability?{/CIDInit/ProcSet findresource begin 12 dict beginbegincmap/CIDSystemInfo 3 dict dup begin/Registry(Adobe)def/Ordering(Identity)def/Supplement 0 def end def/CMapName/Identity-H def/CMapVersion 1 def/CMapType 1 def 1 begincodespacerange<0000><ffff>endcodespacerange 1begincidrange<0000><ffff>0 endcidrange endcmap CMapName currentdict/CMapdefineresource pop end end}if}{/ct_Category 2 dict begin/CIDFont 10 dict def/ProcSet 2 dict def currentdict end def/defineresource{ct_Category 1 index 2copy known{get dup dup maxlength exch length eq{dup length 10 add dict copyct_Category 2 index 2 index put}if 3 index 3 index put pop exch pop}{pop pop/defineresource/undefined ct_raise}ifelse}bind def/findresource{ct_Category 1index 2 copy known{get 2 index 2 copy known{get 3 1 roll pop pop}{pop pop/findresource/undefinedresource ct_raise}ifelse}{pop pop/findresource/undefined ct_raise}ifelse}bind def/resourcestatus{ct_Category 1 index 2 copyknown{get 2 index known exch pop exch pop{0 -1 true}{false}ifelse}{pop pop/findresource/undefined ct_raise}ifelse}bind def/ct_resourcestatus/resourcestatus load def}ifelse/ct_CIDInit 2 dict begin/ct_cidfont_stream_init{{dup(Binary)eq{pop null currentfile ct_Level2?{{cid_BYTE_COUNT()/SubFileDecode filter}stopped{pop pop pop}if}if/readstring load exit}if dup(Hex)eq{pop currentfile ct_Level2?{{null exch/ASCIIHexDecode filter/readstring}stopped{pop exch pop(>)exch/readhexstring}if}{(>)exch/readhexstring}ifelseload exit}if/StartData/typecheck ct_raise}loop cid_BYTE_COUNT ct_CID_STR_SIZEle{2 copy cid_BYTE_COUNT string exch exec pop 1 array dup 3 -1 roll 0 exch put}{cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi dup array exch 2 sub 0 exch 1exch{2 copy 5 index ct_CID_STR_SIZE string 6 index exec pop put pop}for 2index cid_BYTE_COUNT ct_CID_STR_SIZE mod string 3 index exec pop 1 index exch1 index length 1 sub exch put}ifelse cid_CIDFONT exch/GlyphData exch put 2index null eq{pop pop pop}{pop/readstring load 1 string exch{3 copy exec popdup length 0 eq{pop pop pop pop pop true exit}if 4 index eq{pop pop pop popfalse exit}if}loop pop}ifelse}bind def/StartData{mark{currentdict dup/FDArrayget 0 get/FontMatrix get 0 get .001 eq{dup/CDevProc known not{/CDevProc1183615869 internaldict/stdCDevProc 2 copy known{get}{pop pop{pop pop pop poppop 0 -1000 7 index 2 div 880}}ifelse def}if}{/CDevProc{pop pop pop pop pop 01 cid_temp/cid_CIDFONT get/FDArray get 0 get/FontMatrix get 0 get div 7 index2 div 1 index .88 mul}def}ifelse/cid_temp 15 dict def cid_temp begin/cid_CIDFONT exch def 3 copy pop dup/cid_BYTE_COUNT exch def 0 gt{ct_cidfont_stream_init FDArray{/Private get dup/SubrMapOffset known{begin/Subrs SubrCount array def Subrs SubrMapOffset SubrCount SDBytes ct_Level2?{currentdict dup/SubrMapOffset undef dup/SubrCount undef/SDBytes undef}if end/cid_SD_BYTES exch def/cid_SUBR_COUNT exch def/cid_SUBR_MAP_OFFSET exch def/cid_SUBRS exch def cid_SUBR_COUNT 0 gt{GlyphData cid_SUBR_MAP_OFFSETcid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi 0 1 cid_SUBR_COUNT 1 sub{exch 1 index 1 add cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add GlyphData exchcid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi cid_SUBRS 4 2 rollGlyphData exch 4 index 1 index sub ct_GetInterval dup length string copy put}for pop}if}{pop}ifelse}forall}if cleartomark pop pop end CIDFontNamecurrentdict/CIDFont defineresource pop end end}stopped{cleartomark/StartDatact_reraise}if}bind def currentdict end def/ct_saveCIDInit{/CIDInit/ProcSetct_resourcestatus{true}{/CIDInitC/ProcSet ct_resourcestatus}ifelse{pop pop/CIDInit/ProcSet findresource ct_UseNativeCapability?{pop null}{/CIDInitct_CIDInit/ProcSet defineresource pop}ifelse}{/CIDInit ct_CIDInit/ProcSetdefineresource pop null}ifelse ct_Vars exch/ct_oldCIDInit exch put}bind def/ct_restoreCIDInit{ct_Vars/ct_oldCIDInit get dup null ne{/CIDInit exch/ProcSetdefineresource pop}{pop}ifelse}bind def/ct_BuildCharSetUp{1 index beginCIDFont begin Adobe_CoolType_Utility/ct_BuildCharDict get begin/ct_dfCharCodeexch def/ct_dfDict exch def CIDFirstByte ct_dfCharCode add dup CIDCount ge{pop0}if/cid exch def{GlyphDirectory cid 2 copy known{get}{pop pop nullstring}ifelse dup length FDBytes sub 0 gt{dup FDBytes 0 ne{0 FDBytes ct_cvnsi}{pop 0}ifelse/fdIndex exch def dup length FDBytes sub FDBytes exch getinterval/charstring exch def exit}{pop cid 0 eq{/charstring nullstring def exit}if/cid0 def}ifelse}loop}def/ct_SetCacheDevice{0 0 moveto dup stringwidth 3 -1 rolltrue charpath pathbbox 0 -1000 7 index 2 div 880 setcachedevice2 0 0 moveto}def/ct_CloneSetCacheProc{1 eq{stringwidth pop -2 div -880 0 -1000 setcharwidthmoveto}{usewidths?{currentfont/Widths get cid 2 copy known{get exch pop aloadpop}{pop pop stringwidth}ifelse}{stringwidth}ifelse setcharwidth 0 0 moveto}ifelse}def/ct_Type3ShowCharString{ct_FDDict fdIndex 2 copy known{get}{currentglobal 3 1 roll 1 index gcheck setglobal ct_Type1FontTemplate dupmaxlength dict copy begin FDArray fdIndex get dup/FontMatrix 2 copy known{get}{pop pop ct_defaultFontMtx}ifelse/FontMatrix exch dup length array copy def/Private get/Private exch def/Widths rootfont/Widths get def/CharStrings 1dict dup/.notdef<d841272cf18f54fc13>dup length string copy put def currentdictend/ct_Type1Font exch definefont dup 5 1 roll put setglobal}ifelse dup/CharStrings get 1 index/Encoding get ct_dfCharCode get charstring putrootfont/WMode 2 copy known{get}{pop pop 0}ifelse exch 1000 scalefont setfontct_str1 0 ct_dfCharCode put ct_str1 exch ct_dfSetCacheProc ct_SyntheticBold{currentpoint ct_str1 show newpath moveto ct_str1 true charpath ct_StrokeWidthsetlinewidth stroke}{ct_str1 show}ifelse}def/ct_Type4ShowCharString{ct_dfDictct_dfCharCode charstring FDArray fdIndex get dup/FontMatrix get dupct_defaultFontMtx ct_matrixeq not{ct_1000Mtx matrix concatmatrix concat}{pop}ifelse/Private get Adobe_CoolType_Utility/ct_Level2? get not{ct_dfDict/Private3 -1 roll{put}1183615869 internaldict/superexec get exec}if 1183615869internaldict Adobe_CoolType_Utility/ct_Level2? get{1 index}{3 index/Privateget mark 6 1 roll}ifelse dup/RunInt known{/RunInt get}{pop/CCRun}ifelse getexec Adobe_CoolType_Utility/ct_Level2? get not{cleartomark}if}bind def/ct_BuildCharIncremental{{Adobe_CoolType_Utility/ct_MakeOCF get beginct_BuildCharSetUp ct_ShowCharString}stopped{stop}if end end end end}bind def/BaseFontNameStr(BF00)def/ct_Type1FontTemplate 14 dict begin/FontType 1 def/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def/Encodingct_cHexEncoding def/PaintType 0 def currentdict end def/BaseFontTemplate 11dict begin/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def/Encoding ct_cHexEncoding def/BuildChar/ct_BuildCharIncremental load defct_Clone?{/FontType 3 def/ct_ShowCharString/ct_Type3ShowCharString load def/ct_dfSetCacheProc/ct_CloneSetCacheProc load def/ct_SyntheticBold false def/ct_StrokeWidth 1 def}{/FontType 4 def/Private 1 dict dup/lenIV 4 put def/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def/PaintType 0 def/ct_ShowCharString/ct_Type4ShowCharString load def}ifelse/ct_str1 1 string defcurrentdict end def/BaseFontDictSize BaseFontTemplate length 5 add def/ct_matrixeq{true 0 1 5{dup 4 index exch get exch 3 index exch get eq and dupnot{exit}if}for exch pop exch pop}bind def/ct_makeocf{15 dict begin exch/WModeexch def exch/FontName exch def/FontType 0 def/FMapType 2 def/FontMatrixmatrix def/bfCount 1 index/CIDCount get 256 idiv 1 add dup 256 gt{pop 256}ifdef/Encoding 256 array 0 1 bfCount 1 sub{2 copy dup put pop}for bfCount 1 255{2 copy bfCount put pop}for def/FDepVector bfCount dup 256 lt{1 add}if arraydef BaseFontTemplate BaseFontDictSize dict copy begin/CIDFont exch def CIDFont/FontBBox known{CIDFont/FontBBox get/FontBBox exch def}if CIDFont/CDevProcknown{CIDFont/CDevProc get/CDevProc exch def}if currentdict endBaseFontNameStr 3(0)putinterval 0 1 bfCount dup 256 eq{1 sub}if{FDepVectorexch 2 index BaseFontDictSize dict copy begin dup/CIDFirstByte exch 256 muldef FontType 3 eq{/ct_FDDict 2 dict def}if currentdict end 1 index 16BaseFontNameStr 2 2 getinterval cvrs pop BaseFontNameStr exch definefont put}for ct_Clone?{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}if FontName currentdict end definefont ct_Clone?{gsave dup 1000 scalefontsetfont ct_BuildCharDict begin/usewidths? false def currentfont/Widths getbegin exch/CIDFont get/GlyphDirectory get{pop dup charcode exch 1 index 0 2index 256 idiv put 1 index exch 1 exch 256 mod put stringwidth 2 array astoredef}forall end/usewidths? true def end grestore}{exch pop}ifelse}bind def/ct_ComposeFont{ct_UseNativeCapability?{2 index/CMap ct_resourcestatus{pop popexch pop}{/CIDInit/ProcSet findresource begin 12 dict begin begincmap/CMapName3 index def/CMapVersion 1 def/CMapType 1 def exch/WMode exch def/CIDSystemInfo3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}ifelse composefont}{3 2 roll pop 0 get/CIDFont findresource ct_makeocf}ifelse}bind def/ct_MakeIdentity{ct_UseNativeCapability?{1 index/CMapct_resourcestatus{pop pop}{/CIDInit/ProcSet findresource begin 12 dict beginbegincmap/CMapName 2 index def/CMapVersion 1 def/CMapType 1 def/CIDSystemInfo3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}ifelse composefont}{exch pop 0 get/CIDFont findresource ct_makeocf}ifelse}binddef currentdict readonly pop end end%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 65 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd%%don't initialize AGMIMG_&customcolorimage, it wrecks havoc in a nested environment%%AGMIMG_ccimage_exists not {/AGMIMG_&customcolorimage nd} if /AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/idximg /indexed_imageormask ldf	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				AGMIMG_&image			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		cleartomark restore	end}def/overprint_plate{	currentoverprint{		0 get		dup /DeviceGray eq{			pop AGMCORE_black_plate not		}{			/DeviceCMYK eq{				AGMCORE_is_cmyk_sep not			}if		}ifelse	}{		false	}ifelse}def/imageormask{	begin		SkipImageProc not{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq{					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					image				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					AGMCORE_host_sep{						currentgray 1 ne{							currentdict imageormask_sys						}{  	 						currentoverprint not{  			 					1 AGMCORE_&setgray  	 							knockout_image_samples  			 					currentdict imageormask_sys  			 				}{  			 					currentdict ignoreimagedata  			 				}ifelse				 		}ifelse					}{						imagemask					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								MultipleDataSources{									4 {pop} repeat									/DataSource [										DataSource 0 get /exec cvx										DataSource 1 get /exec cvx										DataSource 2 get /exec cvx										DataSource 3 get /exec cvx										/AGMCORE_get_ink_data cvx									] cvx def								}{									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def								}ifelse									/Decode [ Decode 0 get Decode 1 get ] def								/MultipleDataSources false def								/NComponents 1 def								/Operator /image def								AGMCORE_is_cmyk_sep{									currentoverprint InksUsed current_ink not and{										currentdict consumeimagedata									}{										invert_image_samples						 				1 AGMCORE_&setgray										currentdict imageormask_sys									}ifelse								}{										currentdict ignoreimagedata								}ifelse							}{																	MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								image							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentoverprint InksUsed current_ink not and{								}{									currentcolorspace overprint_plate not{										knockout_unitsq									}if								}ifelse							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}if	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	/MappedCSA CSA map_csa def	begin	SkipImageProc not{		save mark 			AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentoverprint InksUsed current_ink not and{						}{							currentdict/ImageMatrix get concat							knockout_unitsq						}ifelse					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{	 								[ /Separation Name [/DeviceGray]	 								{ 	 									sep_colorspace_proc AGMCORE_get_ink_data										1 exch sub	 								} bind									] AGMCORE_&setcolorspace									/sep_tint AGMCORE_gget AGMCORE_&setcolor 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{							currentdict consumeimagedata  							currentoverprint not Name (All) eq or{								gsave 								knockout_unitsq								grestore		 					}if 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}if	end	end}def/imageormask_l2_overprint{		currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 									currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace								AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 								mark exch						dup	dup dup														AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse													AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse								AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse													AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse						imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark 	 		currentdict 		AGMCORE_host_sep{ 						Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{					knockout_unitsq				}if			}{	 			AGMCORE_is_cmyk_sep{					Operator /imagemask eq{						imageormask_sys					}{						level2{							indexed_image_lev2_sep						}{							indexed_image_lev1_sep						}ifelse					}ifelse				}{					currentoverprint not{						knockout_image_samples		 				imageormask_sys		 			}{		 				currentdict consumeimagedata		 			}ifelse				}ifelse			}ifelse 		}{			level2{				imageormask			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin				currentcolorspace 		dup 1 /DeviceGray put		dup 3 [			currentcolorspace 3 get 			{				exch 4 mul 4 getinterval {} forall				AGMCORE_get_ink_data 255 div 1 exch sub			} /exec cvx		] cvx put		setcolorspace				currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			AGMIMG_&image		}ifelse				end end}def/OPIimage{	dup type /dicttype ne{		10 dict begin			/DataSource xdf			/ImageMatrix xdf			/BitsPerComponent xdf			/Height xdf			/Width xdf			/ImageType 1 def			/Decode [0 1 def]			currentdict		end	}if	dup begin		/NComponents 1 cdndf		/MultipleDataSources false cdndf		/SkipImageProc {false} cdndf		/HostSepColorImage false cdndf		/Decode [				0 				currentcolorspace 0 get /Indexed eq{					2 BitsPerComponent exp 1 sub				}{					1				}ifelse		] cdndf		/Operator /image cdndf	end	/sep_colorspace_dict AGMCORE_gget null eq{		imageormask	}{		gsave		dup begin invert_image_samples end		sep_imageormask		grestore	}ifelse}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/InksUsed [] def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		bdict			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		edict		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		dup 4 get map_alias{			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{								{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse										Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 											AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 												currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{										MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop								Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 									{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse						AGMCORE_get_ink_data currenttransfer addprocs settransfer						currentdict imageormask_sys						end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{								{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{								MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}						AGMCORE_get_ink_data currenttransfer addprocs settransfer						currentdict imageormask_sys						end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResource%ADOBeginClientInjection: DocumentProlog End "AI10"%ADOEndClientInjection: DocumentProlog End "AI10"currentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetup%ADOBeginClientInjection: DocumentSetup Start "AI10"%ADOEndClientInjection: DocumentSetup Start "AI10"Adobe_AGM_Utils begin2 2010 true Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get exec%ADOBeginClientInjection: DocumentSetup End "AI10"%ADOEndClientInjection: DocumentSetup End "AI10"currentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: coord.epsf 1%%EndPageComments%%BeginPageSetup%ADOBeginClientInjection: PageSetup Start "AI10"%ADOEndClientInjection: PageSetup Start "AI10"Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%ADOBeginClientInjection: PageSetup End "AI10"%ADOEndClientInjection: PageSetup End "AI10"%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -252 translate[1 0 0 1 0 0 ]  concatmark/0 [/DeviceGray] add_csa/CSA /0 /1 [/DeviceCMYK] add_csa/CSA /1 /2 [/DeviceRGB] add_csa/CSA /2 cleartomark800 path_rez% page clipgsavenewpathgsave % PSGState0 0 mo0 252 li287 252 li287 0 liclp[1 0 0 1 0 0 ] concat%ADOBeginClientInjection: BeginPageContent "AI10"%ADOEndClientInjection: BeginPageContent "AI10"gsave % PSGState0 0 mo287 0 li287 252 li0 252 li0 0 liclpgsave % PSGState0 252 mo0 0 li287 0 li287 252 li0 252 liclp183.384 22.9268 mo175.929 30.5235 li172.867 24.5396 li183.384 22.9268 lifalse sop0 0 0 1 cmykef0.9978 lw0 lc0 lj10 ml[] 0 dshtrue sadj33.3169 99.9044 mo174.398 27.5303 li0 0 0 1 cmyks228.199 99.9044 mo218.108 103.267 li218.108 96.5425 li228.199 99.9044 li0 0 0 1 cmykef35.4825 99.0372 mo220.262 99.0372 li0 0 0 1 cmyks33.3169 243.137 mo29.9551 233.045 li36.6788 233.045 li33.3169 243.137 li0 0 0 1 cmykef33.3169 100.88 mo33.3169 233.045 li0 0 0 1 cmyks150.247 175.899 mo133.823 171.704 li139.631 162.689 li150.247 175.899 li/0 <</Name (Dark Blue)/CSA /1 /TintMethod /Additive/TintProc null/MappedCSA null/NComponents 4 /ColorLookup [ [ 0 0 0 0 ] [ 0.00392157 0.00392157 0 0 ][ 0.00784314 0.00392157 0.00392157 0 ] [ 0.0117648 0.00784314 0.00392157 0 ][ 0.0156863 0.00784314 0.00784314 0 ] [ 0.0196079 0.0117648 0.00784314 0 ][ 0.0235295 0.0156863 0.0117648 0 ] [ 0.0235295 0.0156863 0.0117648 0 ][ 0.0235295 0.0156863 0.0117648 0 ] [ 0.027451 0.0196079 0.0117648 0 ][ 0.0313726 0.0235295 0.0156863 0 ] [ 0.0352942 0.0235295 0.0156863 0 ][ 0.0392157 0.027451 0.0156863 0 ] [ 0.0431373 0.0313726 0.0196079 0 ][ 0.0470589 0.0313726 0.0196079 0 ] [ 0.0509804 0.0352942 0.0196079 0 ][ 0.054902 0.0392157 0.0235295 0 ] [ 0.0588236 0.0392157 0.0235295 0 ][ 0.0627451 0.0431373 0.0235295 0 ] [ 0.0666667 0.0470589 0.0235295 0 ][ 0.0705883 0.0470589 0.027451 0 ] [ 0.0745098 0.0509804 0.027451 0 ][ 0.0784314 0.054902 0.027451 0 ] [ 0.082353 0.054902 0.027451 0 ][ 0.082353 0.0588236 0.0313726 0 ] [ 0.0862746 0.0588236 0.0313726 0 ][ 0.0901961 0.0627451 0.0313726 0 ] [ 0.0941177 0.0666667 0.0313726 0 ][ 0.0980393 0.0666667 0.0352942 0 ] [ 0.101961 0.0705883 0.0352942 0 ][ 0.105883 0.0745098 0.0352942 0.00392157 ] [ 0.109804 0.0745098 0.0352942 0.00392157 ][ 0.113726 0.0784314 0.0352942 0.00392157 ] [ 0.117648 0.082353 0.0392157 0.00392157 ][ 0.121569 0.082353 0.0392157 0.00392157 ] [ 0.125491 0.0862746 0.0392157 0.00392157 ][ 0.129412 0.0901961 0.0392157 0.00392157 ] [ 0.133334 0.0901961 0.0392157 0.00392157 ][ 0.137255 0.0901961 0.0392157 0.00392157 ] [ 0.141177 0.0941177 0.0431373 0.00392157 ][ 0.141177 0.0980393 0.0392157 0.00392157 ] [ 0.145099 0.0980393 0.0431373 0.00392157 ][ 0.14902 0.101961 0.0431373 0.00392157 ] [ 0.152942 0.105883 0.0431373 0.00392157 ][ 0.156863 0.105883 0.0431373 0.00392157 ] [ 0.160785 0.109804 0.0431373 0.00392157 ][ 0.164706 0.113726 0.0431373 0.00392157 ] [ 0.168628 0.113726 0.0431373 0.00392157 ][ 0.17255 0.117648 0.0431373 0.00392157 ] [ 0.176471 0.121569 0.0431373 0.00392157 ][ 0.180393 0.121569 0.0431373 0.00392157 ] [ 0.184314 0.125491 0.0431373 0.00392157 ][ 0.188236 0.129412 0.0431373 0.00392157 ] [ 0.192157 0.129412 0.0431373 0.00392157 ][ 0.196079 0.129412 0.0431373 0.00392157 ] [ 0.2 0.133334 0.0431373 0.00392157 ][ 0.2 0.137255 0.0431373 0.00392157 ] [ 0.203922 0.141177 0.0431373 0.00392157 ][ 0.207844 0.145099 0.0431373 0.00392157 ] [ 0.211765 0.145099 0.0431373 0.00392157 ][ 0.215687 0.14902 0.0431373 0.00392157 ] [ 0.219608 0.152942 0.0431373 0.00392157 ][ 0.22353 0.156863 0.0431373 0.00392157 ] [ 0.227451 0.156863 0.0431373 0.00392157 ][ 0.231373 0.160785 0.0392157 0.00392157 ] [ 0.235295 0.164706 0.0392157 0.00392157 ][ 0.239216 0.168628 0.0392157 0.00392157 ] [ 0.243138 0.168628 0.0392157 0.00392157 ][ 0.247059 0.168628 0.0392157 0.00392157 ] [ 0.250981 0.17255 0.0392157 0.00392157 ][ 0.254902 0.176471 0.0352942 0.00392157 ] [ 0.258824 0.176471 0.0392157 0.00392157 ][ 0.258824 0.180393 0.0352942 0.00392157 ] [ 0.262746 0.184314 0.0352942 0.00392157 ][ 0.266667 0.188236 0.0352942 0.00392157 ] [ 0.270589 0.192157 0.0352942 0.00392157 ][ 0.27451 0.196079 0.0352942 0.00392157 ] [ 0.278432 0.196079 0.0313726 0.00392157 ][ 0.282353 0.2 0.0352942 0.00392157 ] [ 0.286275 0.203922 0.0313726 0.00392157 ][ 0.290197 0.207844 0.0313726 0.00392157 ] [ 0.294118 0.211765 0.0313726 0.00392157 ][ 0.29804 0.211765 0.0313726 0.00392157 ] [ 0.301961 0.211765 0.0313726 0.00392157 ][ 0.305883 0.215687 0.0313726 0.00392157 ] [ 0.309804 0.219608 0.027451 0.00392157 ][ 0.313726 0.22353 0.027451 0.00392157 ] [ 0.317648 0.227451 0.0235295 0.00392157 ][ 0.317648 0.231373 0.027451 0.00392157 ] [ 0.321569 0.235295 0.0235295 0.00392157 ][ 0.325491 0.235295 0.0235295 0.00392157 ] [ 0.329412 0.239216 0.0235295 0.00392157 ][ 0.333334 0.243138 0.0196079 0.00392157 ] [ 0.337255 0.247059 0.0196079 0.00392157 ][ 0.345099 0.250981 0.0156863 0 ] [ 0.34902 0.254902 0.0196079 0 ][ 0.352942 0.258824 0.0196079 0 ] [ 0.356863 0.258824 0.0196079 0 ][ 0.360785 0.258824 0.0235295 0 ] [ 0.364706 0.262746 0.0235295 0 ][ 0.368628 0.266667 0.027451 0 ] [ 0.37255 0.266667 0.027451 0 ][ 0.376471 0.270589 0.0313726 0 ] [ 0.380393 0.27451 0.0313726 0.00392157 ][ 0.380393 0.278432 0.0313726 0.00392157 ] [ 0.384314 0.282353 0.0352942 0.00392157 ][ 0.388236 0.286275 0.0352942 0.00392157 ] [ 0.392157 0.290197 0.0392157 0.00392157 ][ 0.396079 0.290197 0.0392157 0.00392157 ] [ 0.4 0.294118 0.0392157 0.00392157 ][ 0.403922 0.29804 0.0431373 0.00392157 ] [ 0.407844 0.301961 0.0431373 0.00392157 ][ 0.411765 0.305883 0.0470589 0.00392157 ] [ 0.415687 0.305883 0.0470589 0.00392157 ][ 0.419608 0.305883 0.0470589 0.00392157 ] [ 0.42353 0.309804 0.0470589 0.00392157 ][ 0.431373 0.313726 0.0509804 0.00392157 ] [ 0.435295 0.317648 0.0509804 0.00392157 ][ 0.439216 0.321569 0.0509804 0.00392157 ] [ 0.443138 0.325491 0.0509804 0.00392157 ][ 0.443138 0.329412 0.054902 0.00392157 ] [ 0.447059 0.333334 0.054902 0.00392157 ][ 0.450981 0.333334 0.054902 0.00392157 ] [ 0.454902 0.337255 0.054902 0.00784314 ][ 0.458824 0.341177 0.054902 0.00784314 ] [ 0.462746 0.345099 0.0588236 0.00784314 ][ 0.466667 0.34902 0.054902 0.00784314 ] [ 0.470589 0.352942 0.0588236 0.00784314 ][ 0.47451 0.34902 0.0588236 0.00784314 ] [ 0.478432 0.352942 0.0588236 0.00784314 ][ 0.482353 0.356863 0.0588236 0.00784314 ] [ 0.486275 0.360785 0.0588236 0.00784314 ][ 0.490197 0.364706 0.0588236 0.00784314 ] [ 0.494118 0.368628 0.0588236 0.00784314 ][ 0.49804 0.37255 0.054902 0.00784314 ] [ 0.501961 0.376471 0.0588236 0.00784314 ][ 0.501961 0.380393 0.0588236 0.00784314 ] [ 0.505883 0.384314 0.0588236 0.00784314 ][ 0.509804 0.388236 0.0588236 0.00784314 ] [ 0.513726 0.392157 0.054902 0.00784314 ][ 0.517648 0.396079 0.054902 0.00784314 ] [ 0.521569 0.4 0.054902 0.00784314 ][ 0.525491 0.403922 0.054902 0.00784314 ] [ 0.529412 0.4 0.054902 0.00784314 ][ 0.533334 0.403922 0.054902 0.0117648 ] [ 0.541177 0.407844 0.0509804 0.00784314 ][ 0.545098 0.411765 0.0509804 0.0117648 ] [ 0.54902 0.415687 0.0509804 0.00784314 ][ 0.552942 0.419608 0.0509804 0.00784314 ] [ 0.556863 0.42353 0.0470589 0.00784314 ][ 0.560785 0.427451 0.0470589 0.00784314 ] [ 0.564706 0.431373 0.0470589 0.00784314 ][ 0.564706 0.439216 0.0431373 0.00784314 ] [ 0.568628 0.439216 0.0431373 0.00784314 ][ 0.57255 0.447059 0.0392157 0.00784314 ] [ 0.576471 0.450981 0.0392157 0.00784314 ][ 0.580393 0.454902 0.0352942 0.00784314 ] [ 0.584314 0.458824 0.0392157 0.00784314 ][ 0.592157 0.454902 0.0392157 0.00784314 ] [ 0.596079 0.458824 0.0431373 0.00784314 ][ 0.6 0.466667 0.0392157 0.00784314 ] [ 0.603922 0.466667 0.0431373 0.00784314 ][ 0.607844 0.47451 0.0392157 0.00784314 ] [ 0.611765 0.478432 0.0431373 0.00784314 ][ 0.615687 0.482353 0.0392157 0.00392157 ] [ 0.619608 0.486275 0.0431373 0.00392157 ][ 0.62353 0.490197 0.0470589 0.00392157 ] [ 0.627451 0.494118 0.0431373 0.00392157 ][ 0.627451 0.49804 0.0470589 0.00392157 ] [ 0.631373 0.505883 0.0470589 0.00392157 ][ 0.639216 0.509804 0.0509804 0.00392157 ] [ 0.643138 0.513726 0.0509804 0.00392157 ][ 0.647059 0.517648 0.054902 0.00392157 ] [ 0.650981 0.513726 0.054902 0.00392157 ][ 0.654902 0.517648 0.0588236 0.00392157 ] [ 0.658824 0.521569 0.0588236 0.00392157 ][ 0.662746 0.525491 0.0627451 0.00392157 ] [ 0.670589 0.529412 0.0627451 0.00784314 ][ 0.67451 0.533334 0.0627451 0.00784314 ] [ 0.678432 0.537255 0.0627451 0.00784314 ][ 0.682353 0.541177 0.0666667 0.00784314 ] [ 0.686275 0.545098 0.0705883 0.00784314 ][ 0.690197 0.54902 0.0705883 0.00784314 ] [ 0.694118 0.556863 0.0705883 0.00784314 ][ 0.694118 0.560785 0.0705883 0.00784314 ] [ 0.701961 0.564706 0.0745098 0.0117648 ][ 0.705883 0.568628 0.0705883 0.0117648 ] [ 0.709804 0.57255 0.0745098 0.0117648 ][ 0.713726 0.57255 0.0745098 0.0117648 ] [ 0.717648 0.576471 0.0745098 0.0117648 ][ 0.721569 0.580393 0.0745098 0.0117648 ] [ 0.729412 0.584314 0.0745098 0.0117648 ][ 0.733334 0.588236 0.0745098 0.0117648 ] [ 0.737255 0.592157 0.0745098 0.0117648 ][ 0.741177 0.596079 0.0705883 0.0117648 ] [ 0.745098 0.603922 0.0745098 0.0117648 ][ 0.74902 0.607844 0.0745098 0.0156863 ] [ 0.756863 0.611765 0.0705883 0.0156863 ][ 0.760785 0.615687 0.0745098 0.0156863 ] [ 0.764706 0.619608 0.0705883 0.0156863 ][ 0.764706 0.62353 0.0705883 0.0156863 ] [ 0.768628 0.631373 0.0666667 0.0156863 ][ 0.77255 0.635295 0.0666667 0.0156863 ] [ 0.780393 0.635295 0.0666667 0.0156863 ][ 0.784314 0.639216 0.0666667 0.0156863 ] [ 0.788236 0.643138 0.0627451 0.0156863 ][ 0.792157 0.647059 0.0627451 0.0156863 ] [ 0.796079 0.654902 0.0588236 0.0117648 ][ 0.803922 0.658824 0.0588236 0.0117648 ] [ 0.807844 0.662746 0.054902 0.0117648 ][ 0.811765 0.666667 0.0588236 0.0117648 ] [ 0.815687 0.67451 0.0627451 0.0117648 ][ 0.819608 0.678432 0.0588236 0.0117648 ] [ 0.82353 0.682353 0.0627451 0.0117648 ][ 0.831373 0.686275 0.0627451 0.0117648 ] [ 0.835295 0.694118 0.0627451 0.0117648 ][ 0.835295 0.69804 0.0627451 0.0117648 ] [ 0.839216 0.705883 0.0666667 0.0117648 ][ 0.843138 0.701961 0.0666667 0.0117648 ] [ 0.847059 0.709804 0.0705883 0.0117648 ][ 0.850981 0.713726 0.0666667 0.00784314 ] [ 0.858824 0.717648 0.0705883 0.00784314 ][ 0.862746 0.725491 0.0705883 0.00784314 ] [ 0.866667 0.729412 0.0745098 0.00784314 ][ 0.870589 0.733334 0.0745098 0.00784314 ] [ 0.87451 0.741177 0.0784314 0.00784314 ][ 0.878432 0.745098 0.082353 0.0117648 ] [ 0.882353 0.74902 0.082353 0.0117648 ][ 0.882353 0.752942 0.0862746 0.0117648 ] [ 0.886275 0.760785 0.082353 0.0117648 ][ 0.890196 0.764706 0.0862746 0.0156863 ] [ 0.894118 0.768628 0.0862746 0.0156863 ][ 0.894118 0.776471 0.0862746 0.0156863 ] [ 0.89804 0.776471 0.0862746 0.0156863 ][ 0.901961 0.780393 0.0901961 0.0156863 ] [ 0.905883 0.784314 0.0901961 0.0156863 ][ 0.905883 0.788236 0.0901961 0.0156863 ] [ 0.909804 0.796079 0.0862746 0.0156863 ][ 0.913726 0.8 0.0901961 0.0156863 ] [ 0.917648 0.803922 0.0862746 0.0156863 ][ 0.921569 0.811765 0.0862746 0.0156863 ] [ 0.925491 0.819608 0.0901961 0.0196079 ][ 0.925491 0.82353 0.0862746 0.0196079 ] [ 0.929412 0.831373 0.0901961 0.0196079 ][ 0.929412 0.839216 0.0862746 0.0196079 ] [ 0.933334 0.843138 0.0901961 0.0196079 ][ 0.937255 0.850981 0.0862746 0.0196079 ] [ 0.937255 0.858824 0.0862746 0.0196079 ][ 0.937255 0.858824 0.0862746 0.0196079 ] [ 0.941177 0.866667 0.0901961 0.0196079 ][ 0.941177 0.87451 0.0862746 0.0196079 ] [ 0.945098 0.878432 0.0862746 0.0196079 ][ 0.94902 0.886275 0.082353 0.0196079 ] [ 0.94902 0.894118 0.082353 0.0196079 ][ 0.952942 0.901961 0.0784314 0.0196079 ] [ 0.956863 0.909804 0.082353 0.0196079 ]] >>add_csd1 /0 get_csdsepcs1 sepef32.3443 99.9044 mo136.725 167.197 li1 /0 get_csdsepcs1 sepf2.999 lw32.3443 99.9044 mo136.725 167.197 li0 0 0 1 cmyks0.9978 lw[5.6693 2.8347 5.6693 2.8347 ] 0 dsh151.548 69.0494 mo151.548 176.239 li0 0 0 1 cmyks148.623 175.587 mo33.3169 212.948 li0 0 0 1 cmyks151.222 68.0743 mo142.375 73.9703 li140.606 67.4815 li151.222 68.0743 li0 0 0 1 cmykef[] 0 dsh32.0186 100.557 mo141.49 70.7276 li0 0 0 1 cmyks0 0 0 1 cmyk%%IncludeResource: font Helvetica/Helvetica*1 [32{/.notdef}repeat /space 7{/.notdef}repeat /parenleft /parenright 7{/.notdef}repeat /one /two /three 17{/.notdef}repeat /E 8{/.notdef}repeat /N 7{/.notdef}repeat /V 33{/.notdef}repeat /x 135{/.notdef}repeat] /Helvetica nfnt/Helvetica*1 findfont [20 0 0 -20 0 0 ]mfnt sfnt191.173 19.0288 mov(N \(x \)) sh/Helvetica*1 findfont [13 0 0 -13 0 0 ]mfnt sfnt226.251 25.8491 mov(1) sh/Helvetica*1 findfont [20 0 0 -20 0 0 ]mfnt sfnt235.994 98.9321 mov(E \(x \)) sh45.9849 239.247 mov(V \(x \)) sh/Helvetica*1 findfont [13 0 0 -13 0 0 ]mfnt sfnt270.75 106.728 mov(2) sh80.4146 248.667 mov(3) sh149.257 63.7486 mo143.438 56.8179 li148.761 54.7115 li149.257 63.7486 li0 0 0 1 cmykef0.4989 lw133.911 52.421 mo137.808 53.396 143.043 53.4585 145.604 55.3467 cv145.81 55.4996 146 55.6641 146.176 55.8399 cv0 0 0 1 cmyks0 0 0 1 cmyk%%IncludeResource: font Helvetica/Helvetica*1 [32{/.notdef}repeat /space 7{/.notdef}repeat /parenleft /parenright 7{/.notdef}repeat /one /two /three 16{/.notdef}repeat /D /E 8{/.notdef}repeat /N 7{/.notdef}repeat /V 33{/.notdef}repeat /x 135{/.notdef}repeat] /Helvetica nfnt/Helvetica*1 findfont [18 0 0 -18 0 0 ]mfnt sfnt155.658 55.5967 mov(D) sh102.174 136.364 mo105.896 128.112 li110.102 131.996 li102.174 136.364 li0 0 0 1 cmykef119.57 85.8331 mo119.57 96.4576 124.12 107.964 119.57 117.695 cv117.285 122.585 112.708 127.021 107.563 131.355 cv0 0 0 1 cmyks0 0 0 1 cmyk%%IncludeResource: font Helvetica/Helvetica*1 [32{/.notdef}repeat /space 7{/.notdef}repeat /parenleft /parenright 7{/.notdef}repeat /one /two /three 14{/.notdef}repeat /B /.notdef /D /E 2{/.notdef}repeat /H /I 4{/.notdef}repeat /N 7{/.notdef}repeat /V 33{/.notdef}repeat /x 135{/.notdef}repeat] /Helvetica nfnt/Helvetica*1 findfont [18 0 0 -18 0 0 ]mfnt sfnt127.725 126.835 mov(I) sh%%IncludeResource: font Helvetica-Bold/Helvetica-Bold*1 [66{/.notdef}repeat /B 189{/.notdef}repeat] /Helvetica-Bold nfnt/Helvetica-Bold*1 findfont [18 0 0 -18 0 0 ]mfnt sfnt73.0869 157.292 mov(B) sh/Helvetica*1 findfont [18 0 0 -18 0 0 ]mfnt sfnt159.27 81.9365 mov(B) sh/Helvetica*1 findfont [12 0 0 -12 0 0 ]mfnt sfnt172.26 89.7319 mov(H) sh97.771 67.2124 mo88.0425 76.9918 li84.1221 69.1993 li97.771 67.2124 li0.0235295 0.909804 0.917648 0 cmykef1 lw4 ml97.771 67.2124 mo88.0425 76.9918 li84.1221 69.1993 li97.771 67.2124 licp0.0235295 0.909804 0.917648 0 cmyks31.5113 100.56 mo86.0811 73.0943 li0.0235295 0.909804 0.917648 0 cmykf2.0001 lw10 ml31.5113 100.56 mo86.0811 73.0943 li0.0235295 0.909804 0.917648 0 cmyks93.4424 98.3936 mo80.4512 103.034 li80.2642 94.3116 li93.4424 98.3936 li0.0235295 0.909804 0.917648 0 cmykef1 lw4 ml93.4424 98.3936 mo80.4512 103.034 li80.2642 94.3116 li93.4424 98.3936 licp0.0235295 0.909804 0.917648 0 cmyks32.8121 99.6919 mo80.358 98.6744 li0.0235295 0.909804 0.917648 0 cmykf2.0001 lw10 ml32.8121 99.6919 mo80.358 98.6744 li0.0235295 0.909804 0.917648 0 cmyks31.5113 212.296 mo27.1485 199.2 li35.8736 199.2 li31.5113 212.296 li0.0235295 0.909804 0.917648 0 cmykef1 lw4 ml31.5113 212.296 mo27.1485 199.2 li35.8736 199.2 li31.5113 212.296 licp0.0235295 0.909804 0.917648 0 cmyks31.5113 100.56 mo31.5113 199.2 li0.0235295 0.909804 0.917648 0 cmykf2.0001 lw10 ml31.5113 100.56 mo31.5113 199.2 li0.0235295 0.909804 0.917648 0 cmyks0 0 0 1 cmyk%%IncludeResource: font Helvetica/Helvetica*1 [32{/.notdef}repeat /space 7{/.notdef}repeat /parenleft /parenright 2{/.notdef}repeat /comma 4{/.notdef}repeat /one /two /three 14{/.notdef}repeat /B /.notdef /D /E 2{/.notdef}repeat /H /I 4{/.notdef}repeat /N 7{/.notdef}repeat /V 33{/.notdef}repeat /x 135{/.notdef}repeat] /Helvetica nfnt/Helvetica*1 findfont [13.5001 0 0 -13.5001 0 0 ]mfnt sfnt3.2627 154.31 mov(B) sh/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt12.3555 159.506 mov(V) sh8.78369 169.897 mov(x) sh/Helvetica*1 findfont [7.5 0 0 -7.5 0 0 ]mfnt sfnt15.2798 173.795 mov(3) sh/Helvetica*1 findfont [13.5001 0 0 -13.5001 0 0 ]mfnt sfnt42.2993 71.2515 mov(B) sh/Helvetica*1 findfont [7.5 0 0 -7.5 0 0 ]mfnt sfnt52.3687 73.8979 mov(N) sh/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt59.189 69.6758 mov(,) sh64.0747 69.9443 mov(x) sh/Helvetica*1 findfont [7.5 0 0 -7.5 0 0 ]mfnt sfnt70.5718 73.8433 mov(1) sh/Helvetica*1 findfont [9 0 0 -9 0 0 ]mfnt sfnt81.3257 112.995 mov(,) sh86.2114 113.263 mov(x) sh/Helvetica*1 findfont [7.5 0 0 -7.5 0 0 ]mfnt sfnt92.7085 117.162 mov(2) sh74.1807 115.918 mov(E) sh/Helvetica*1 findfont [13.5001 0 0 -13.5001 0 0 ]mfnt sfnt64.436 114.294 mov(B) sh/Helvetica*1 findfont [12 0 0 -12 0 0 ]mfnt sfnt18.0869 158.156 mov(,) shgrestore % PSGState1 lw0 lc0 lj4 ml[3 3 ] 0 dshtrue sadj100.834 67.3335 mo138.167 67.3335 lifalse sop0 0 0 1 cmyks149.5 72 mo98.1666 96 li0 0 0 1 cmyksgrestore % PSGState%ADOBeginClientInjection: EndPageContent "AI10"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI10"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer%ADOBeginClientInjection: PageTrailer Start "AI10"%ADOEndClientInjection: PageTrailer Start "AI10"Adobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%ADOBeginClientInjection: PageTrailer End "AI10"%ADOEndClientInjection: PageTrailer End "AI10"%%Trailer%ADOBeginClientInjection: DocumentTrailer Start "AI10"%ADOEndClientInjection: DocumentTrailer Start "AI10"Adobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%ADOBeginClientInjection: DocumentTrailer End "AI10"%ADOEndClientInjection: DocumentTrailer End "AI10"%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 10.0%%For: (Lisa Tauxe) (SIO)%%Title: (coord.eps)%%CreationDate: 8/17/02 3:41 PM%AI9_DataStream%Gb"-6l#J&[OWaQ)G_c4GCXT@R"sOV75auT6o$h?e)Kf8n1cr%L[5P$7X.(U\4Y2nphP^DO"<8#9]W*e5RjCqNA0:mU%YrpOI.>2<%p>aE0bF@rZ[t"?sj^Yo;LLq:tB%=Amqr3N`]_ppe@9Vfpk>EJ>?X.JmqtB(Cn`Ki:]A'g8%j/6h=1<Aq^0GN)]!toAo>UInc,Ju*%N`T;kIp$Wk0&HTL<&rajgdBJ=4C8!^G^oP_!l"LQjlr,$gT,OqoP]f2GK4o'WjD\!s4uZ)l?KhP]=td^`Nod?]'lS=^]+;IJe$et%SGeqH[oX[/*P[?s*T-hX)SZ3$?OYi>hqoLDmpQR]V;CiVqshT&mBquJB=j)65Jd+Y*e+Z2[f?8Ds.B,db>iVL6LWm.U#1:MFnj;l%j6C:CJ,ac`EuIJ"eMh3\n(XP6@U3199\[Qr+UhJSle;OaD3nEWQ@e:/X'aair1mmoh[fL!Ckqrfdc0QH5NS%KpM+M+Hu&!l2;SQh%H?]7QS(pU7-:oT*2W0?dEA@na+=u6c0iCI*DqB:`$;5I<E"?5;*coN[4(npb;O^#@l`X`"[FE"\QP$(!0u`Q55(&a)M&jc<Q=u5X%T7(j+EV"VHV<:pV[\o8.5Z<C.n?[%nq7XF!3c&]"?i)LC[o^Us?$X$o@-K,Vb5C4fj7el^mdDdr05ke.2\oa"-8Iu<Hi3Dco)[DB%bcj'S\_8(]?[TMtB2Dm!;XilJcWAVuYC=EK%ob"+M]/U&4s>p6MirPRi?'rHp"):,gj7,(L]LP,$<CL04fsS*BD?N&357O]s*/[+%IjF[520%0_XN7<(J6aS\Xua>_a*'?4"+OB+a77KBa1m!.ki2!kc2I$b+*^u'^3n+.H$so:mH+A%4W?O`:G(aYoC;*jp\UFQ6jJsA%\Cs1)^,oZKAsKr_WsdXpAjl9\$iKGPmec$-i4@[DO#WJ5Y/WrFqX)>h2]"\!mlj9Xl+=-J4Pp#(p0Xc-^P!cL0!7=06JoR(8&1ZP%f7#TY67X^`[G^b_2V-DJ@33/X)DKB:GF.2ohL%mn6u^P%p[uLda1H8MDstHZf*me>m[*bHIth9N(!*/QFImL'YO=+$'pLS_X-%nZ%OO$Df5O!Y=)be`ZrUE@s3dg\6+$O$2n`JgDkH]g<0_Zg)I03l)Zb*`^JE7&(!8RJ'e`NcV7%"M^F<1@@&V$^3^UIFl71=g`n_:4a%DnD%E4WL[af8:/5`J@;E@]:3L</cTb[[@bo8I<QcpqbZ5@B#Kq'`Ng$Z.*rTV7'U0\_Z7(gF\^O*:V_#+\&P]38jOd"4uKQF+:_b%r'pZ$C[1Y"kJ"ah=:3*%^TeK58Opq\iJ?t^QGF0lD]H73"P:UIiGX+\&`IYEM<B_"`Y%0J*&i=U/rg7qag9+Xa&4lLr/G7t#L(Zi%_4L6<o.9G`iGYm@,Nmp)hmm\'G3lcBOd=oI/;<-%hq/RF+HMu+it]I-/;<-5($8ZX\i;nONDDMp?@Vmt4i\Q?NMUTApmY?ITnMTo%hiD\T(r2^nr90Shs*3,"'[N8o$]gg)O$2ZTnU%fX>q[h(5?J+[ViZb1_qI4frYEP0^TeKj2i`s^K^7W9/;'^=?RTINhVjm_2_]>(%$nJD-Zsh8u;A^0k?g*sL]Q<Odf(m!ADqK,:&KMhb*D>YO\TP($ht%BQS9H;I1Trgb%C^;L+,8[YgUW@A6?d4u=ZT=^p)1FVmL/r$%m/fYde&s6,/=1Lp*pH@-m4oX7=7*3*QeUVjhDb(ZT8XMur3S&*;a1")"F_tqr8YNTHd4(4r%ecZ>X%sr*;Ok"p"cD@XOmAEq;e0m%L7cX:s0s_*43f:Ir3P;PF8=mh-N>b`a0ihB]WV16:](OZCVr(&LY]*t*7eU]E.6[cG"jW^"+S<BI?*e=J&]A9h@VG[fQ!m!8*)Z(%(UQ$%7kTRni0/3mm/Z84h>Ajka&]/#OaFlTYr%7s"1LQRGB&W"\hE8oI)i16k+4l,Oa7_O[ar64WUqV-Ie4ZWXW7M0`7e=Ka+<+X%4m&iB*;2X0PJ11\3hP%Kc8iOgb$hL-!R(9]ZQ/(d<82Jb?0l]/C#$=/X`MLiL;_EjK0eWAa+8a#g\#LZL")Q>U\WP8HoLe7BR(T1%_QmX+4Kf!-K1;3Mg<lqg))>l#esOL!?Ii@r;B(u;MRXC-&R5S/(VnbG-1ecJ57o*5grSm1.W20oRWIj"E)bJN/OKNHf/NU;/ENk>%c<m?.6"P/WY`=cU9V.qLb$^tCa1NL-KL>*1SF\U(5;Wf?X+.<eIo%'c)*0#.]Eb\(<1;`[gMOBg*`CXDe8[Kc7G=1me$qnS:M_<s%[(!^*n."0]^aT,gfcISkJH+FA)o)m=lb%:3<9Ko9NSB&N2`rR)-1VQ-p/9o$Yc[&\1X1!XXi\jQkUmT`g%C0mf-u\`5_m%[YiAX8%_VpU8peYQ4kPR%)mc+%:*S%'[c%b2B8!Tc)mo4hFhQDIsF^1m]HUK[>DqB9"V*>C']\_.IPZ=@6)MT/tQQB1ig>Ftn1JXd[9_B(D%VjV<=&&AUV>Y'!eT_;4%-1JS0p'>C:-h<l%8T>jHMXe6iHXOAT8<ML(DaFc1d;F2pB[$p\-=0c.3)=dM+\cC)nEJ#]c-lsHg3k^8%(m74\=^tWVb`Q&ag%R0W+LLX-P[6'rU&('=m/2AFNoSfq'mb+S;f<TWK*QfDenZMthN6tDj*Reco=$>/JnA.eAaLjdL+n#ufV-h1%bf'"ZlTuIV_5;n9H>1"?p"4Gta7<Q2p)$#1]4t-&11,2MUZ-?L8u=1`I;gNX%&j]*+V&MZ\(u5@:%4c=JYQIg>Js*lQP=4O_R@^n%O]T`p)"Zrt,AKL8WB>t*"[i_.N,N7O&8OO<K"RdI%0Z[%rSJlb!BS"362RtPLL.M!rNER$d!tE,nomm/SKW^,?e1;6(4d5@<>Ps+%e(t3uJXOD]cmfc^eQU^QK,mPu9q`">95#0F=.;7jdo%C[%-e8]MA=:a0L*&4H7kK[d%sL1?YCbS<Eq936bPb7Q9VuFdpa1`P'r:;%U![MEM9#&]dKf[q4Ot*&lmla[*qXupKNCS31./`a+mi!AMgH"L&"j%[no!RfKY:4M8TLN6eAf)Vp"1&(>*ibAnXM"e'BgusXY&)]%]r+tpHUX03Xn+k81!]*LER;<Zh+]jZ1riI>)3e()FV"n)"AAt&%sPl*81f7RN`+_T@.'5X6&(W\^8HnokEn!$E;MuZEDCc6e+)p3%R%p<7(_oft1`m'We8tL&k&s"e;L%8bBmDKAmWi_ZO82)1Km($G4I6i\iOaq6gun[fn#PWEA'1RI6^28OcE#iAIq5J#ros.#KBei4%/SZZCQNuL($?^"cnpD!PZ"NF*l`rt87]3Y^@o<'H^d22]c.q(%]*W,/b1C:9PF9u\(S6E=h.geAQ03TJdSL)fjk[WBL,gkhOXpYk%D_G3^ES=0\WQjlZ=sERn.TK?'B6L@aX3`Wr<7[O?Z&Js"2R7qNEo0i2W8NAO)`?2\PCXJhETUu.<$V9MjRs-gg5XDIY]"p*"^G7)%d#_Iufk>a@mqsq"_ke6K.H]^IclrXFnsEVI6d1\sO,IV@g>04EgVs2@=(Vj1lspn*2!tL[l`a[4NRD'T:$-c5r!h951!c)(q(?LT%f[bc&UMgY8XE-VW//tt,<_tE5Bk1R?hA3Z1cT<2P_kBWErRUC6k0l^JgZSMunr-ufnD1@oFaE2:H2J8^HGC2VN4.jH_D2_3(J-M]%/r;R'SWu96eqO+&Uf8UMP%(-8J@2j(Di<rlI?>FFTk/bh2Z:-cfnef)HToe_9hG*8+?[F^&2tS(4_O1H>+*<B4L2m:A!$g]#DBKT%Kl"^fh#H$]G5Kj*U%g:ZWE(gnHBf<uc&hl]ML8G!I<ddC-Hb)_@'O^H\f5?Roi$ft(c,m.ok8+qQ;gULoh5!a">)cXE(Yt/-h.\.%rf/INW3uqX5s'0Agj61%'>qc8WsmWOC!(#R5ckS,brUlUXMYkORs/O/ikMq2f4Y3_TQ[08mr#=H^ZY(Vht51&a8:o^\j*\WScAT-%g\^#dbF@t(NiNl?^V@DUo+=\rkNd>Ya#j(Y_tj-=^-:Gg4heP@]"0lY?bH>^Im!burT2SAj7ub[banbtf=9`_(Y%17`S8SJ[i_g2%?QK/mISn7,r<mB<XYtX(RdU*p<KF$B0iu'LjtF9hV($JRbM5qcmeiBohK%:R;t`,9^#cDEjJ!a,kf6TNSU\jphd(X0rUK=R*H^dq%4F[b1IK&4)G^"k:pi(V=7aLZjI_<6QhOgQs);=rWLNBD6I<"lHO&n#.G@\7=f%ut4^&@K!]?BYm\3IaC]6JP4^:='h3VO]3md0*0%rn[,Cq0IPieVC2`%mRRop#FTC&(d.,+%mdUr98HIIf48Tm:PJPoChV.q]dq?H#pp=Y:i)PrHO#,>2TJQjmE*Inb<+iq<mr02s85r%^:h+fVEY*m0&Ku?6%rS0rREJNm^sLrItXX^?JjUH*T,b@-_?1Te^`cB3:[SE?G&FmYB_kR!c7G45JKW(\TnEc3^6s"#6?SR0f>sA%ga51LI*R+`q<(BRO?@6&cMoKrp&=B2=7kn#]=[+JgRkFRZs.S.l%tjNkO1'4ciPE\p@BBb?+98688,][?Mid%LL]`t4[@El+)X;l%!&/EUCBLG\oCn]IA"PimkNVdOkPrPRlu-p<hf,9m\Bn<S4WXE$>iPK_iqKmLht'q<E4%lW\3)^XGqlHThVKF"h]98[`EV%1]WHH\%]CR+.hL'fmp[S+Fio<2g`S6mBT?c>#5X"kR4dkp=J,8SW+$O!Q^Kg^Q^1<Q76<3oP\$tQXp#YJNm$M<'QMti0ZHl/EG-1Pqs5Jb5%s(O9ihq`]CrpH[+O3`;+\O0*)U[7k,kBp2,#sJ*:O'WC?aq*;g/B[M?5@.U26Ti,rGn1kcr[5&.E?V7\@-chVJegO05C2,XJ9C95%0<X/;^41VBA%O'8Qh)<fDVoki$TRA`>.dAl$I+Xrr2]/DpD5@C;h#9*#^>d\Vr@R58#YoYksZN:GK6c]McK(qC`D$ps7^d0rGgAB%"q+eS7f)Q-T<A3=HhH2TIo[f_H!7t8C&T"n"8s\(DgulC>A\9%pV4^3!;(Yq%TO<`s7D6"s8:jHrqLP95=2^DC'0[gIcZ(imLQqI%p96QY%ge'XE/9;K&.[Ni4no+Uh#2]:gMchUrHb+0j*oY$ID6<iDVsm\*k8Z7I^e'KGFRE7QZf,+1)tN:0'kW,D`nFGg\l<)h/50I%0,qC<2K&D/fQQ"mlaO[`D>'IT#.<1N:"kPq@1u5Ih/1l*h_]5!=RXkRole#OYLa(_S7*GirAq$lFh@?_ONGp7mF!n0dQ43]VBNq.%ViZGr9g/T%2=AN@\/dNDX/'`Wj"SKX+2c`^)!OOu7#!jD&)1MKXG8Wk__B$&+2ZA*UZ)Md`o92Mi\k]63i4mV+i`0T&A-Ra*uifR%qL&mu1N9qk54rDMoWdl^d!*9sp`B4"YReP'LJ:m+'ZMh[)#=e1(Y[e7diH#J\*LKYVHX-M4h>Op@b5gtlajOr?.0kKI1&qE]4ol6%C/J/n_"`SkCYRFLNBd3OhtaD3ppElta9-78h?Vs6epH;a"r=Lq[:hH-9NVC,DIN\gCS:&!%E&5(Rai53D=.BN&F.VfW1f`"h&"t:%SBV<%q'gf_TAdE,NhI'YWP[XMG]&#@]=g\LPX!ON90j1[TkXHr8s;*W&hK]n?TH(sl5rT+Q9*ZB<GEmqqU8+O/4YsFXNn^tpLr:7%jCkOY[%='M94O4k8bD'j?]MH"e*;'#S0C6>,tB&.5`eo;8LB6YnlLj;5cZ`GMtXNA9%q^rg<e,Ke*]i8_f1YG[*R)PXJ\kHOA9$u%3_D"&DeTkoipIe"476fUmV#gBBkqHe;bE9^X,aDe#MQC.osAuHD;^F4ED%8(b=E.(m4%END)"''j.+\`&uDiJ4#H=%8@uVa$kTpc%ESY"&C^;7*#V56^rh?bE'X8r@;)[$Jo9<P/S,FLlO21/j<"&U>!+kZ#iQX\j!<WK.Qu^d]!sfYN/1:K1g(>JXBgZT/KF(3`&go#%%Kg75O.&KfN^de]19qJ6#W?t?-0F;%-<65GL=s?S:8.l9rj!f<8?:p:pku$f"6b)1dFcn$/hXE=q6tC"(Q+Fu[#h,"p9o5&[:PM+`%&31n2Q:NHm;F:%,fCUFhGY)r+A+rO2SkPb(aXq'f3uNq7AgHFNdrQIUoZ'+$jEWtN2TT!ocq$Amm3Hh<'P7YpN?dMX.8J;F8`M(m%=^!o(:F0j)Bfenu=do7Ji5hs@QuWjhP1j((Ci]"q9N")HEL)>N)G>,COX=d*8Xil::=;n$P<WY(f,k%tU6\KDOVR(/77mY.`3tMc%p_m$3Zk$7Y'<_sk%^;$.-BuV,P()OMH:j;4?t^YjQkC]_'7[HTG*I6N%h=?8'U$Ql'7AjnLlDGHK.0\"B`r)]VF69P8T"%E%[.R!%_7="V9Ji?N$"dM29Bmr,`RqGpB;Cb?iQ/R!d%Z/"i`-;AkM0sXZAnF0O^2GjK0VU%]/)-IT\4p6!Dj!@!e2!27Kk5B5u3&q$kQ)T%)F.G]V#ug483C\iR^.LThn`t9*dqF#+?k@DS,l/Y!n+H,<S>2J%tK'kOKT/8=:aJ/E'W"fJCau@C^6/C!5.cO#^/HAHQ\1J&B=p(%[t2NR_=S^tNd,"d"7_rb&D.+N\Ue>K_8I?6cmk+M+Q,h<+O(!"klgLe!=7>oS0!2Hnj(D\+R2*$pAp(t!_D/JD!YQD&&:Y[?j8Z"%$@6(i"p\C"![-A#i9Xi#%_uq,+NGM,'g8c;"0`XL2S]M^C'TZ=!058*1XZ;&dK=PGJD?Z&CMX"'G-H?!#=R4nL'k;I#221Tg+^$:%E/Stp(P-bI5^Qm5OH0s&+>@^?\.PYE8$KWQ#i6`O'"G@QUcj:k8Dq!$(u,ecH%NLj0K'JQXU1L/N"1l@V^7_p#uX5Z1E-CP4b5q-%U%VP_Gb'g"#q@'Z:`s#(aoRLk5'u8f2hhE4*iO;"gLmZq3$IF<VVG!$CjMS=F61D#"L#&@S-E/4AEGiTJcM&dR.WtP]V5?7_?hrD%#MP"rq@C]qa-OM4n.fqpp`K=JOa+`/pqeH5$N(tO,Wh;EH;D5DOd<:[$a#5j:DMDu8>3DQmE1;4;(XfV/p5YL2qX4`ks2hW4mAGZ%$gdkO:f?c+KI;nEVGjWkk["Cb9br+G@7CVd$GsK6n4i%<pEtW`+p6-pS"=qMC4!X-GJW-VbF@hnH]-j#6e$iE9#`<;<=#e$'0dWU%74jC%(qh>L&JX7\Q=2nNQpu(T@N1mMSJ%J-SJIS0e45eK9Bb.=gW`E<:P_.P'a4u5CI7V36M4Pd2-rHDI3?H=C[-_RPop@,".]_-%#QkJCOm'Y)6?+4GO@3X9&>e"l[D;f(Q*Cklru__4mWA`KQAA*[id+C2V'j\($"+WL,bd%bB@`*!c!"M%94VZ_#R77^Wt#V-L`0,@%GTo_]W#P4bUF9)/&AB@QcY+a3U0F(L,\Ea-\mnAi9p9VD#H.Kp&Y4.Z>=i*qJ]OK2<lo"n2*'+?XE3+VZmD`_/!Sit32dg/!@#eh%6@iPqe3=$:0#,RP&-N8\nTFY+?N.@r:!1?924*ujQ$1#)FEt^i;NJ-98Jhe@AR/_MAQi/@>=UNI'lHC)1U#g]]Z2F9QXoKlH0+b*%C'Q#"3)biNS<l*JoD/SmSO(g3.:aW;\JEabQNI2^rW)qm-@qR&:V,t[J;gH5ZSjsDR=T$HUArI$XG&iTKkq>=A('Mt=%iH%dm)uG%QnfkF*%`Qe<p2??2eG1F(uSe(5%XSbCi3h^[Z5Vt_u40GO&c_!k,,A5'bb96^s!'FSbL>9>&H##C_K#]1Y=k7&3B#4Xual5nd?l%%+TC40ratMVM\e2+Shl%YXU.k:MBAq1_+^p[;Pf%=aV5C;,uJGJr1=TM-;R1&Qo#sp6F+Nt8P.>ZAoD5MGp=<$$GmIu=$be`U3h,e%-h<AeAth,&R;aUX.OeE?Wlmo_^/mpM_J:c&]=#HNg8OkW#2s8o4ir9LK:p""%-Y"iU,2Eq(dghNBQ9Ed``1>T6BY+5Uo&Q/)\l_+%%6?<OZUUB\WMC3OWG*sZF/(RTRFMCB2"r71Z@'/:ChP"YEY)h>$M,/E8(uN6WA=s^lC?Ikc<7R#;8hEY]&uhq:8EFf*ooS4ke.W9%HV4_1%BCO@'PF[u+SBgjTfnJ\[3K0r9,#FKk^gsXHe&8b80u&$LGc'9P:-qGZF36.\Fu_/?une1l>80om=EdBHa:QWON6-KeE*.k%hMH@3,:P]Vm3,n>_BQ@_&'*1]<r=)/PT<nD\*K"u[E+dNjb]5`,:R/*3Ra2C4HMk<UIA`jC.O83&5Cl=[-:fCW,EZ`_`oAKHj<QS%UQQYJlp3qR!lDs-J6dUSN9IS9`TXum(5C42$k0_kZGaDgAo6qHQ8K+_24^*Vnl!U[Y/M)Peuu/\?8l"E=ts/65egm4l?1N4.dODS%RsJ5)Z7*C=LQhBZCSC'u&^*XHJ3<X<j_+rL1h,e''5YR:**M7J%\Li30p(2FMts+mOi!;IFW`IG)s5O)^EFa'XW\pG-':T[i5dId%L(R3:fR\.P4#2n6j/.@DX-^`)Q\3ADN?h:K$^sQ0DUf9Kb*ZdA`nJ`5=hs)$OK8t1!D&df,#\JMpi&"hq*^^I"7T\5e+8,8K8,'g%pZ[3*_hAbX9jFnR;E+?gPp:4]Y.P(BZ;B)*^tZ2+-.'?Kc2o8L3VF)9rr^@J`AsU7$H,]p8/dfi7(1uaF^e2sDHJWd%KT#93/C3m%']"@];'#1,D0?C#r?LVNH/>')``,$s/cs!`?t7sp`iLuV8_3q,/c\Q3.XqKth\nEkFW^,<$tK<q6\55ljG8(eG''-u[a^m"6`$*l%*XAk=296P.Q6`?Q2VXGa47+h6hWM1M])7TaGKobaG!F@^$?r,+b7&jEk\L4bmo/(-<R9L<6tID$`$dg7CPk@jb)"h@0irHO,u&fM%2WhIY39Rea\1ULhNFF^<%3TBOPfM0=<qoIuMu-"4b4ZF@EoL<mWD3F$4o?iq:'UUKP'b>>5JN!FCiM*'$l6`i0Q`r-@TX%nmdjNh%Mgi`q*fFIS'=lG!0e>d'pN\<E`F.n)=q#oBZ4WlW<>nVu)FB<1A4'7OQp\/FK]fN`IC:%_#"Jn>-"@e6VNG[7.HZaX;Ns&$,SG8Z%,^#gQ[<FC\@Oi&H>fcmS`RA6Ie%a0,%0p#?Dk%_l-iOO,X@Y0R%-kTHOS/./dm@D%.jT78E8mX#SJ-lb6BLkufbpKn+`,+"@@qrY%aR?oUVh8<AG0$fjlg/,s8j`2&n?U\Pj\`h-"Nb42V=bs=!$HkRp&-l;s&",n=<A+E!cbUeLq#&gH\0b]+P%LMpk-*!+_9RH;LCeX%?6Qr]Mk2)0jr@jd6]?XgjWANs7mtq/Z^t1MSSHhXV"dDR]g_XrL-(n^6?e^D;I"AbaW<u.rN:/rZL/r'*T=uB4gbr!GKAEaE6Xeh%H9+CD&()@/b@e)s`lBIfp*n\s:GP\uTDf!ol&EKai7Y;Y<%f;*lgY:c'cn(Do?jmqg5oLWJcGO'MkbbmPOXE=^\-&o4nk4;[tPXi%&[abB^>!T3ni=3#SmiX;e+.i[LL4*\3?\ZM1@HmWK]).;`lDW^]2A39YciAC/`U120&'q'9Antg!q+!K&d4g8'7[:k*'?M)W&3]X%kmsMMbX"A2&32F23/Gt9[lj,"hV%Z];pEm>FL_anidO;Dl*Hs\eDkfnG0DjI6gSGnTq(5<#]V:$eP95F_F0qQ[K.W7KU4_r#Hd;l%,$X+<:^=:%BNX#^5n-V#!:mf-Ph5tA&$R]#OmW=5lRqi?B_2R<_'ZH'J0;_Wj0J-l0G\=j'ALI6b[+Iao7G<3[aILJOpMjs%=PpD%<C>O]a`kE%l#_u^()M=NjX2nu?oQRkXoX:0=hOj_6SM3./+N\U>LF$N(^;H"d178*5on$B3sQuO@H9$)He*G5.`h:0JC0Jn3\@#Y%*U-'nN>!cVcB^:/W9Sp##m9"WLX$gh&sX-/N'OcQC)KuNUP]sidqk=DHD`?59@E%Z).5!"ZakG(6-N_Xo5HH-\eFZM*Kf%KDT_1D%=kG!)U^_^4$mcD?bMY<9oV`?:XJ7hQ^0L@s7nJeIGbR0T"`Y+FU5_6j1Y>_b[d*ad?=3!b`<nY,d2g*\M4RJUjba*jAd)9a>._h'%jT#]oNeZdD$DoOM/rk82j?T%dLUctZK2l0d,bS_8oi#obY$`SV>e$0#>L96rMT4Js<UQKVEHb3;j*7k-e]h+^%r9tRSZ[-aLtVHp%+Q@fm4)2aNW&L:r"X0(7lbkHT`lUZ^<<9Qg5q$L9NSDOCQu8(/*AMgjm&IR""C;ggVbV)7(49-Sc-?o=imZHr&QjbF[<6/h4CZ#q%@,R*#GnO[fq@Pr".Ij1RO*2FGq;MU7bG'(X]cZj*#07ThCO!%6>UD.9Xe&DQ3W'RuA+5DAE)Lum_23PQ]Mfl0kT-*leDc4[Pb#(Q%UA^=Y."6LcJi<[ao%@'\(/N`?/U?bcE<b+g.E9\$2LuW2oen0ULoO=:/_/6[Ml<)B"Zrs9!21>THP!ZX/c%nu43uEE#N1q6Q[O,2%K4bSY<[5i.#2l^QS'2.S>Q^@*!:7%Ip[uC,m"o_@0]!7tr;anp&GMMV#i#MFCPg)Al"q[CSTg>s`2H+h,Jca2[u_K$:^_?ZKbf!%%lTNL7\&"gR#=($LkX,kjhnV_Q0^0gTS-*kZKY>nI[kPbW+i=<$CJTbEO]LDM1I>0!X@<Q><5sJ@5KG\>AL,2N&C2IeP>)b40JJqc%"Re-U8%MAb.gWFIYK8r#-fu'IBG]&.nqOYH\43tlltjYA1Lt.^^@*&g&EIf7P<HQn:E5A])Da1#=IHj!F(Snh'4]+n'1s;r2)I>t%;>4jTpbYLRaDGIsc]!Q`V-#j^>!/K`1jE*/MpA7;.g70(+-oHg+B'WneY7'9SKq7Z#3'2eTWn[3ar"g9JP>GH'XjX.YBABcIYRV-%2cnTd\['$\1UgG.HJN/SX"f(+I>0]@rFh`DSN(._YUf^QQ'Z4i^Ws?c%cU<dNl80%l8u'W_`k[<L[97h(k][D=QZ8*rhZ[uf6Po7%/TY-.([!]5QfN_eCe#.rdts9FPTQj<,Ee,KIP!;rqa:'&j<]ug;==0(kk-4dW?3AnoW6WH*;,4+,`:`cbMEi"p7fK;'t,Np:T:NX%\nu0`Zb^cBjD^I7[Q$s;]?\"_9f^WSf?R=]_8AH!62\R<MheguK>]d-0+W':fq$1*ao8\DcVqK&Otar0VhZ:=*..=>2Ga9s2VJ%Z%RH5ik:T,IJ>&dPQUoQe?^cCg?5Xs8()B#<u;6$@"pa9T4.7_A@W<>tLVF*P5?s?&;9b/FEpOV<hOO#!+@+M%pS]7-o@n^Z\W=>u1%6:Ig22"Rr?&rF1X4t`Aj?ruQRb>+)2$(IIieijd]CDF[LE*LVh$aTV=hU)0(&t8$aJo_ZKW790VTAjU%$jjo1pqY9QhUiO"np)-]%gJ+8#j&Fa3SnpujZ)lVl:Y=C'e*u:SSUDpi`b7A)e3auD;TH?o-Z6TO'&ati\j\6!(/]%KW'VX7<VZO/SA;CO#05HN"#u14+Zn<J%=kD"9f:%*P`oOcAPR^q^D*q+QY\K!i3?.dYNM;Za"#aK!%KGa@)tM*-qp1b'g>FM=s&=#70DbFt?l^3V=E;_<ra8ZXX0%$&4ADBM%[[#n*2"#rXfe`hAH=Fc)/XZQ3c^ANR%bIq!IU\QOj-YRBPVbHOX2K881d,o\`.$>a#'>3Zf-\*FQF'jeZ]dN<@2;U/mZMA8I"IZ5%1cDP<oluVf-C&p:7I_^>Z@FlLlBS"c/SX`]<h1h=XESI5`[U1<mlS,UEsUE)2amRo]P_WAI:7PMGJb5u7_[[n/ZEh6V;@Bhi,u2$%rS]Qt4@anrp#XGjINc2lMRIKsF17ZV[>-QkGFcu?qj4g14mfJ/B/je>P=Id['`kBM>ZM%+KB$`l@EcU%X1QD)VeuE<r_!?Ib$Pj%%ij&VbV8a[VQm7FH/G7a1?,Z.\ik"-fO!R?\8dRZ?+I::U,&&_DS$g5Rbs!ls#QC@7:d(5;>5$-h!B\9UUQ&5'Th66)Zl#iEKe:tS%[1/`nUlc$pOl[q;C0cj#o/U!V">lB_24-ZWED<Ei=,T(FX[G-#7BC3r'+\+RaO<uU4sq;F5!0[^DSt!rJ%2Uier-&C.U`3scoPKZ%3/Lm)&\Te%%k\$i'C8fc\cpgf!$<mV/^bnB27o9_q@].#S+.mSc]rU;hu!!/O]0i0PaqWoMpqOpbREgD4W=5]FV.t?]$d"H;'J$C%JIp:?.ShAN1@AbGmilDNnJHgm*o`Oh*$5H\CJ?A??Eh5rRG^(E3[a4$*&=u\`oU&#XBn;r,%R+:!j/8Ps'$-MBD#n)est9fjt(J^%Htm%ROh-G*2*Ek%4^i:f#Nf,Wra'-=,'en/+7`5fO(e#gG*^btW5>AVf"KXg-p)CHPi8alJ#G-X0F#B4GiBHp2dk/9=qo(%$!;g/%@t;X6/*81s08N2G1(?!CJB._U:oHI/.E1apP*mV(2l&UQ@8!L?"?H2VQ*Zr0d_@"i2J]VG8SRRJ>-g.CHQj\@MIa_%fopbIn`125%P<4VZnX`u3@31q!T-fG"gH)sQ*O;"_qo)%p>2,-IEc:ld>P/_Sile?>h&G<Hp-RjWNmB5iThB*GQJU\%4njWIobJ%iS";B3:)e-[%.!U'jhP8-Y)2D3Q$0fs%Hh0W!VFU&SL[Gndk3!bsGOj*D4aQS8TmLVO-IWCr^<,4NH3B&X'%t.%FrG.qfo(ZiL;hH+UHXnQ?>%&d%?FW1pB^X3O[I,#0!ZGlG6`Rg[A2D_d%?o.n'&;F9L7!]S/-e-s']SWCA'pk_k2:'G_nh!dYSjE!nb,9$Vm_Vs594r4&%d$!ZV`Xh%riX,QXhe](>3$$9X3=#E.L9:s^gf8?SW!Vo*!T0"PXO&89h1b95WMXmgPE;k2O*:81nfZ,G+0.FAFZ*=[N?GF]'M4C>&@?ObXGB-%!kGBI'S4a=%85N03ps6!O'79];(qI@>#lpl<CV!s,5FF-UUUU(1!DHU:T2-K@-u$#53WOR\O0NN=ENmJ%pZQ`>!o-3G\4p-W?4=\%rHNJ_`TirQ4&n54p0f,R;EcWR.6Kh^GcG-k(/ks-3BoTRR7BF5.Ud.[Rp0WN3SF";bXq:sN@YN\H,-9\=#KR<TUmnSMRh9)<GP0q%*u"A;PiMr3SMe?jN35"Kcu49*@3[7YEeoOO-'f8Z)eVqn2[>Q8NCr1d=En.ghn^_LkM(2%4=n92_n,GqD27YY'C/D1h^R-IV]H\J%5!fL>0Z]H9QJH5R]3,K8#-hmpV+Fi`i5JaCgFX"UqjR8JX2.RWF3(aNH.qrOVYRda>qH!(PHU<J]:Q=h2:$-LC0+QdlO^59p@bg%%<qFXS;1H,K"*UVP.dFo6XQ)\8oMF<a7R#r^-WNE,g#Pq&DU)sG>&p7l`,^K'P0f-8>a"l@%=XTb=$=3f,Q7Z%3R[8Xqp:$`j30p&%FK85\Z]KP/3h_87@*5j2@$gn>R_&:A)hm'8J\7YnIIJk_fo[7l6-m/b,LC-OFM\#-;`@FKDWl?;(m!rY$*0X^@5s^^B5B;+PHdfL%Zhhra@`pI:T"$Os@>nBGO<$]#$s><u-\g0e%5D60\fZYeYEl[N;YDlhKa\bO>Jt8"UG]mm&)qtt][`JK)11ABOJCM:03((Y!pXbQ%cTY]pkW0=&[24=]/NQiorA\\A.u^cB'3-]X!OU*(obnc>H@P6@a_?&Oa103ab_+/7Er5*^WX>Z*`)Q>Q69FF,?MLeTK9NmfU3(K5%:IE;iWH+(XJG.VgCIkPNLp#a3:@V'MhTkts8B78,eF*Ra)V'4!TmPdj=BlR;Hll@3<"sJgHBB0e@!V(:8=)X^a8UI0G'-i/3Db"B%*f=c:,[2I1"5"0,G-]g.Qb:mHh6YC5lfta8m@";j8+a<d+QH#8-r`q.jlB`a#CfR^Kka:d6F8\Ep'H4FFb[-e.K#PIpPr3mg[(Et%M9N!2SjSWaV"J:f]rL@#=c[_V<5YIHfTW'k"dA]Ag<BZZRhA'%HodE_f<Z-/-bcXhoNeFXC<tGiC:.nNPcj[bXasp_&2#'N^8Xku%SY!\^4ak!``a,)8aXH8Vc_pVcQ9,4IKskgaBj6C7F[MV.RdUPA#Y[eG#nlDr*!W5E)SP^3J*/q,I1hZ3Kg!Wgc7bSJaU_j$$V]M.%`phJhPHtWD:U>hSh$$Olio_+O5"-([J4e>9p<Vc#]IdVP__=jZ=*8Ia($i/9^0!-u/=A31LuEC@M`K%j11XKcL,ERFF+uD_\B:\B%<Xij+%lqe/Qo5GP6X/=Y1HFD?:N;StEnhIkdcK4=bH3hE@t0sY_CU`DekJA>*j\iOI@'p(GM\o0!4]X!Y)&u&q(AC;A',Pq$GBb"%X?=#tRlnVPPQSHd5&1Dj,@aAr1hqd0X&hEs'"qkP_fCp-8#To18FHABME>L4k715B3aYe\3<kdf/hV)A84F?mb?k#qk3Bg\Q@la2%%Xpj)DKP)bUprc8c+*F@SGFQ;m2Ff+V)UE*I-;(!NS_>!Rb'UlfjPGF$*:]Xp,nsP?"+tYY.SGjVa1m%P2$7,6s&WoCCRf\I@(1%%R';?L1%)(5=_7p'<[X-YPs#8=I"pXd9rp$uo6;SISi395&)WF1,uMkbq3=bT`"W0H$DkK7WSC1I5%f.OdmHpoc:9tnaorU]"kW`&%TmnU_i,n%qP0V,W;<-35Gg4J3.;iTD<:("6/Q(%gduq(HDUiu8H@e?%P5%sCGTP`r)tIW4g>G=S<jO)*3OA?$6,C7qbgM7L"o"09%9-4c\ge5pDI7R1R00-B2+[Nq-kKMAhkm]SLJ"F59:N4@HSGpM;I`B(r[)-plm.Rb3o"0+`mdm;OD/aYcZC>KT>'`bm$_EP.\VIqk%'Xi1:&l*Er/]I'pAS9><gg$,Um"T7mc0\7cTTBhES*>!l3nhWF="B&+BA?C#k82_8ejlsq:9"uB<$k=5R$9/h8:g)`+@RJD8;`cG%0c>jjS<)s8Pl:gYYBHXf4V69QFS4FV%sMh\-cP7$l%pO0TeK#E#!EQONdJ]kdKTs;KY40pVh+37dm+,c[d%!<I&n^OLF1<n#9jfA%!mMD\or88f,2o$<cmN@"#B9r'@&sZ*%^[?<X7g/U[2`R)DXPS]%`FM?PQ.sF&17_P><^`m!V^[7Hh%(=Af#7GHi&;#?`_rdbf8pB%_ad=`b4Li%UG6oRD1d+<>]AJu<BZ%i;kBN]l9Nk$H/6N/^;p3N@Qj-jJ$Z,cCT\I0RPWRFg@=>/+]$_\^tqcr#9Zfljr2=BU#_\\%TA`K;'ONWir4?S_p*OiV5:k`,B*Gf3hE[8.B6uG^YFN/`CO40*^7.i8qN?ci`p."kHS&H[ChnAQA8)shZudI\]oJ([cXjl\qA-=.%lmAqr3Cdc),og=0SaZtNI>ZBCh.fBH:Z!'r++,k-#%u%-]2re;6Y(80Q@^lu):^lX2J+S82Bo=@bF0ffE-b<:q4+87_GK^`H@ISP%*:2Q4En9GbJo*!M;_(-`<<tOR'd0>;F^LL&+uPs\.n6fGUob!TN<ZdCZ<+knQ;#V6-@KCT2C@u!d5*6G`Y0V*'_CZ.Aoc&EPF0nt%K,'9ppS0%\O$0&UbaomVpnU%-^t'ES:I1f/OE^*GOj?Nn-Sun\Hp5\mM_R`c+em`P':N,lDEA<GF68kL4eXYqW&U5%RT3LTb.6EU%;7rDo%u>WE=6pt`5bIK'PPatYK'@cJnG_q'J$c<UPW9ZT-WOkdV+m5`<SCGemjaQ'8'0:d<dg3(4%VHbguSoI9'WGkX#*eT*gW>3%Va'JsD5nl%0lXAp-eoWIUk*TZEbj$b#0qY>X[,Su3;4CsI2-6V=2NSPT\8?Z?TiT\.mrX^*`\1`^+)Q%]&m4JG"*c=opj[\oV(uo%ioukd'&`Z6fnN_Ecq?`^qF,,jiNT&EX+<')B"?^#aIDo'.<h^_G'$@YjN67B+dIk`=tX.TQ*@ro9$AYrkZ$n3&Ls+.g6ldCAqFoh%3/=SJs6X1BA%B%NR9J;k/n<,P/Oc&Q,L)Pcei_1FQ#bluUCNX>i9T*o]l`:Z(!=C"Sc88$+"$9c7*qI8$Al@U-Ea!\q7i5JF>/33%p$Pf3%3At=MeAZ;YYPAPVcPR;f^r-0f#KmOqS2Z<ON+.0nOoj*jj0Hs.p)^&H*YcMi8R1hO7QmenScppccn=2O<1[R=Q/32\Bb-F%a*%5+?Om&cNW@fI3:&%kD^3nTINI+jM*@tgXO>.#j\jLPW7a_fi0p:RV<;d]l!)niqGoe,bFZAskEECIgatO/COYC]TCsVP]V3t7%\9u;#01WEE1lt03\YOdM;[oP/.`_iOOIMFPaDsNLBcp](L/QD`mUi@p=T)_lI3aMnlr8k=K:8.Ra'AL+=8->caApI/<1,sPhG;Yo%Q&a]\oZWQi$\s137sn',oe^<+])(X9lFbF<fpp#lW&$4kG12__2Y33p5u(DIgO**b3H5P^'n;GULQYn(Ue)&2hR*+*5WQl1B*+`a%iDNaVbY78\rWMuJa`E_@H.r8hoQ))i"Gt/=RNHlZe_n=hbgR&^Lf6V!3=VOfG=dF0';td3:GuZdciZ8=aTh]+B0@e&17%MR_LtRb%:Ob?[g4(Woh_G\f3<*F]3R<3=jZpEWT^s7KcTD/X)2;^GiA@m&%<g#b-%>jb+,"@47h2g*),HlENUs@4ir@>[mc7$ZRjtd10&7hW%rA.Ql^g?qd$*S`gI&Q]/X7ChiI+ko-j4eSn3J<ikpp&NijXfWCSgF@%Wr,>sVO+J=k*)3R2?&CO07b5lVa9"f^9#$gT?TlDF*%I%%[dqPp(p1UJ#e(XC6.J;EEqXRTE\I_MK[(&L5IL&!r5%Ju]7c63PlME1OH3m7Ek+Z_bp-"*./KI<N,S0Ga/dbQipQ!Tr,'ciHBjOu%j^XI7S'22R'"V.2G:4"'A<&<m\(%J>PhY2Qr,p+HoZ%Kk]$E`S^V@=i\3@W2I4n_R%iB.,e)'NlMV;B6Rmh0i#373Q57^`nk7<pR%a45[W;^GN&5jlT+JEfHJ1(#8D.[,;$AD`7b:#S"&;Ps$;3N^A);Iu@pBq.4Fh9,HBiF]*fT64bf*]c5VT(:44NTLEedX%E%n,q,p%D=Csuh^,tX`74'mBBMmFa5)EH-eacmdCqVV2[&-H]).^16PLD-Q#2Se4Ga95M8D,`E.S4bJHFXT?.?T=!8XPZdlp3NDBVKY7Xn(P%mn)_]=cK\FqUXZ)=8Nu$&\qC[:D$s#[nfprj6A:/0+"o;.eS0/Bm$>FO1fd%;IHnr\8$#3S=FsQCR8*tf<#O[0'Xfd0P=jolh,Q>%\]WE:lP<RGOt=4_o9ChA-`cFk=G(W^<^)IaH9g'BHn9XC5rg(r:Gf)sS#K2RM:IG=io[fh[B/XD\Mh?=Y`/!L6/bh/ouc54%f[7X%?9pkB6+KZ\Sl2M/!r`5lbHj3rq@K<gPGt,=:>!HZH,Vp_`d/Ob/:?_MI.B*"m88no2;Md2S2C$q:EA64VB33-0#%85H2"^69a1b)%#!Mb!@ZK7QF"lHQ^`'@:S\X6DVdPGeSFHm)GV6]I7e\*SnUO9>qjc:?;2$g9ijkGNi/2CAL3+aN\Qs4ZS:cF4$AoE:4=DL;465.r%?$5A'ScN!M<h6F2C'B&QFk0pB`.uEp'518^e;5i/6</T;!a0Ts1=5,4chh8jHPTn-):56[ahh/20SM0W7LEGU'!glbPfP#?&\09F%lJrk]`)4^^)XP76n,pJ4Y<nNgJBX%*QG!rVdEC'Q_=*eoI+>^>lJ%2sh('ndK#0ab.PG.oQ`nQT=68PEo(#e+q5V)TeQBL704.$(%<I+D?]R3^c^+(dCQ'\\sb?*feX2aGn9Om`&$Ep,lWk<^Z?G7mB?^6t]b0*lJjf@tC<Fb^%]R0m:=68PEo(#e+q5V)T<F3Bh041!2%Y8XIV99%IP.(k/KX7Gg]H24JQHrXLe.PG.oQ`nQT=,kb2o(!M0?Bpk\b0*lJjf@tC<I+D?]R3^c^1sbK/i?\5T^W9q[IWl!ItP)6%T2=mUC&604Wc-3M)P5>/<9X#Qgd]R(pZ8HQmHl'o$RJPIDSoV_*Eaf<5A`r.%l;a"@n9C4\/V#"=&@l*E:KuakN[W@+[%_br=bO4%Dk8sj:Mi'T(Tub3d"mb"eH;(l8)\3-ipmW+Kr_+04?aRa`m^S84pk@%<)*^#&+8?;WG&,R"p1#iT6umn^E'M\DZ@$=Dl^)0/oJBf%QK*p"HpPH4e$it!\dI`Y,Sa2K+`kaZ[pE267CaIQC,1(1_8et!#9&sJF6Y9Jk&U+s%G8:/XX#aK,b]7tna\!H7`jdB/__ClDb\44%:2\.Y_T`Clfo]h:clLW^;mbrJF75bS@e967fC@6F^C5:L;nd=_gb_.l3S9R7C@t'Q2><<"$WUsS3)nHc\bs_/.@@:u0%UH5mJ*3^%?VhEj@nJ6F%CZ)`5tE8?aXr=@n`OsO82K37qp1`qTtqq<=Ll@B-?IjN=ZS;.M(8Xba<scG:`b]q>V2a&a=,B!;V_2-Ybt)Be,+>b%WAYQ2Cd$a/0X7`Uooi<jqQOt0/n]86f1\tYCRj8735)lMgtmk=M+t0n<&I\OBdZJi/t@_Z%pg^7Y'bQ\og;]EH&-XZ/!'a$_cLL2%fZHoe.H3/HdPXT(*6#7b^50Q!qW$Cm=%iH[rPaH)W2X:@)r,*4>IcMq:rpcfAQ?lJm]BHbZI&p"Q'6Y_*JcQ$;GEsVU)8!*qAUTN%elH?>c^'SH,s>tJEWkfrQs+OQ)FC=!85#A6DIAeT%7LWX'D5V*_O6[?Nc`OE$Y2CVB`^`>Ct4'<Vu[-$")^]$lp[1%OOZqpaNc2s%;2pN,A5sf)$KPZ03Y3<3)j=Hn'&et,24X4t`A$eKEYk%jaa3602KEeNQarbZ<u$"T]WBu3aqi6?Xnu*^l-p',2&6q2X-b6W2H>\L%9G;JAbVLR(QWX2*lq0@fr1Y3pm0]lf7>h59'6pY.9]_0:KJb9.Bsgt.4$#,Om`<&n:=^9l"YHi2Y;!.5njg4$6b]LJ9iiudBoVAk%i,-1]=RQYnEc^`3PMR@^pBSkN_NI#+o5nqnO74d"9tj&@9m6l(RG@$I_Kp^9Y:^=1<sI^HQq7.:qun9oSnsL8,(W8f[mU@e%/*'n%=^BX8\o(<uF%nS0%l$-+P=]7cHr$iL:7Y-`&oeDWY[`sSQ9Yf-G3jZ5'#6q+)SD(eGX[D.?7:2Zk*ggG+B>"5k+Oi>31qN0&I()4%8+A`.SR*O%4k/brbK4F&9j4==93LUkQ!Q]:#G-<Mr/=Q.*.g&*cGd.Wo9YD,8filZ"Gk#'I42V%glPcY7P6VD(MqQ3N7/`I6OjQO%e$5_q#5a4\^m?&4Q,d\1!D;#I#kb4YrSqQ/aplV\!Mi=go`3-mU>A*^4Fj^F=E+C(AbCK(\.%V%GQ2#WGL,jR'A)ZO9BVnXG#)C)%p[gP.T<NFAGjY`AKF]],Hi!"jD=QE1/MBo*_9'C]X\%XRoO(SmM'`ZlNLUu:Un$!_D0"@![**0%dQs(tn<D8@gc;RI]G(0A;X%fh%JOOb#>qq,2.@IQgBk,RLVk$DTOE'o4.*5#XhP<'-cD6P#Sk;M#SgO=jk*/Oh>gp\<A5p"\dO*0?hSRH[!2E5S>)tFMk6JPZf8$ol%q4q1I\[8jZ6!mI_q(h.e<r[2cHZd"$KkRiCZ.`H24D%1W`7OMDOQFm##E.-d>/m>\>2-UE<ooahM.#$TEMdDg2jp/&8hs%[$qW2!%poNh?#\,+s/&S;"PDIai8X3gdQ"=4oAI04`%'nX>fk1Z$h$A@?9A9H_S)onUBm*?S@7b%&)CHRU/>m;r;TbGuSIQp-U79V27[ZiD%:7NHWZ"\SN,#sDq9lXhZ*H*GlOFcMYL)`-8aiZ/[n0^$G+b']ZV"lrB/c6LJ2p4#)d2sptn>75tk:")8U3YiV<G=&"fDOBcjDKH*%o%SVZhrSopI[_]T+'T?iq3+6*IUX>jDTuW2F3^>P5W!l0rb1Y^[W_.U95-o\^kl=G)Wl]EiJED2/E<m1'#1'.5d"S^7";rf/R9l1%#YkN3KV&(s+Gkfi25RE#<r9d0AR7lllZ(fHOAt2aCA*C,Tu1b<gsD@U+,M'X*0E)EO/EhO"3!g4Bg=XGf'mk$e`1c0`8D/`YDBo>%RSb?t37C^Od:sjb+<2QK+][EXaGW/WPfO/,@P..7&iYAH%raW9icpPm+Ih(Fic21YaP@tW"+1PSg`98U6p/^boLScr%?BpI;VfI;%!L)ODphc7Kb,:ilM1(DJ:l\$le6[_P)Nmki+rZ#[l:<[>fdMqme=g]3#h*`V,>"eqp_ZE,aSHl5ncdHF\Xt(85"?N^C8iSH6<EEE%NR$3*Qa8d66rg4DY!O%W3&o;g(5Ko([oDBo;-]u%EB3W""I@+Hk?)N_@mq[sc%5HUHX7DG>sVLhV:H*T%"Jq4'"$([a@Zb?_+h22%:o(M?W4XZ)8#\&YWU*k1U@O+up1Y=VO]5]Le,T:8.=r/T073!ENWZj@Z&$6W=2g7U,I8PO"oQ9dNCl=8b;dcT\>_'(07(07`d+YX%gPC;68K%a=%Q#3#Xm79N/C<a^mS<;I(MHi2nigPV`g;W?2lthVJij]dHQriWWp5LFG2p&RJm(2)%W!C+NROKtT<2:3,AD!/<2664%,NP3q`fQI@*5'k6D"MI1Rs5M*^oFK,W3`q,G[i<MLUOI.9,1\GjMlFk6+-G0663@dYNYb?Ia9SopHh?PC.oJ(7W5$M'3(GQ$I5m8%Vi1rj-ABqH\23K]A]U,_DmJ<(-AF^Bj=5eckJd]=Xg;`@bu/VT9h[niM:^G1Zk["NV-D8`l"q2EH]_H28kn<s_/eb"]K>i.KFjjL%A@Z@[HilqDr>:HoqC>'Pc!&bg'$,t:&()CIFGR%B/@Qi4a6InI`"QJ3OSYO?meu"Y"<]TfFZXDXR)1Flfcfh-DSiRs9P!<epKl^"%K?Lm/`-?U]=*rUo)\_<nROHM-i&AVo>:2s:d@;CA;<EZq7l@lD>`Pi4AO^j4h-AU#Uc=SI6KB[:98kDVZ$V>ph%1N`r%]m/F?oPO%Yd,jor'7%gK7:9TG9LmrLp\7Z#Y#.]6.r=Q-F[QL84<"+W,k%pNB8mLDMUb;PoNA=(l2?b_W37J0\pO[@F4c[6pgWC7$;"\g17gY%MGV9`Uf*XbP7TaY#XIU,&W%7R2'N@s"_%glP%]6D%^bet#sr+eiP>O7@;4NKC]bIM+Dfko[d"d('),i?q[Ri*Q4/2OR772?*=9u*%huf\+;.,/,j'E6X"&4+^d*^7f"u>O^-pEH`ZC[#b'$ZR!3B/'nK*(X>!]nte4,TE4-&I@$JJo/j26#%:91,r0Gikl@*7fIHaJSjF%iEcV5(i;(G##stt_Y9cBR<#uU-HVauR&c*uA.g-SnlAq%5H?L&H<Vs_2>67.nd#p*88:QkqNT(,k6.*]a!4HR(Pq@J&6nk05ZIK&%,jNifOrn08ie'oiM%^O4^h*1CGa&B1>mdH("[`7F"'u-A1B;K=*797;C#l/P?Q"BXj<(?cc()iY.N,1$:o"2U&$gjbA-A/1<)1Nt%?Q@4^$6h&9H!u$%6BN0]S?1Ymd0`<m:a:h>&6Xn3EeI$t7@"L2lR'-9S>S'=[r"$pW;2)T.$ckBTXPK)3"b=$(?V0Mkd*tO.^QD^%hI&UPk^X$G\ejO."[Yr1PS8dYImV,D7c@&V4:?ZT&C#SP]*(2-;d+b'<eQh_E#V3\M%b%&g:5+4hA*lY$1t7ZM*5D!4(^u^YpHPp%&9T`i410YU2%gO)%RQ$_B"K:k-R>#Aag$t)a?:t`=rM)t'@.e]0nL)WSXbuug<&("Sn3!#1)$lS9JlO`\*TeRe#gFufpU'@5?WhR%?I/P/GUBOW=ebl0>Op#kZtE)ArdKFp7,m<rO"]"\VEHr8fuZ(+b0Na!'Fm&r=f_!_X3Y*aCEb>8@SaSZTMWG0%9G/ZVs8\PMN"dC%;3!nA05unX0)ocTL)EYE9]2]^04*6!m[W6r8*5h',8>ekDFq2e$o7+$2l%NFHJb=H@aY*7;>me`BVa*t+u-\81!GVba0C>mrO$;$%Yj9b=gmnX>S09A<OFc(bdLti!]Jq\*HE-iT,0GPc"HOf8Z7^Cj#_!>K,7_1DT.N@%3[KKD=s$cmk+dm*kRuK8>$81i>G`"'/ttqm%>Y)CQ)Vs,VkUA\`o/-&&Fu'<jZD)Ph(tXqJQV`GnNkr[D\BBg;A!*L\:_mUf8sD*Ma>Cd@ff1#,DRC6ira/PYSk4Hj>c#ZCaen?G%4&WIF7\a2:a\"=27c2Mho9b6[;n?1[=G38'-<f*9`'nK12d=QH;rP-?Y)R+0pL8cK%I.JZQ9D7[PkSi'@WuWbP!,7%O#tEH<A4:$%Og^.C<tScJ=_pg,gf8oj7Fb.$eOH'3p1/MJq)#VcZ*Xe4N@9;NZFSM\0o7iaqD/=Q#.M]9g@,?p$1GrS[OFt2j>0WF)EWNY01t5V%pbm#H+_5/(Eg\;6fu9*L6>mhaGD%h3L-#P;OOs+.3qe>.m-Z/\p4lW6mNjpfLK*X.,s(aT<:'$!3qe>.m-Z1igWTl.J+hZ.[4GX$%-g7T(TZmD!mR`kuLIA8=CaGCu4mKua1`qOt\@Mq<Y#E_`=njc3(Xgd,IBE1G:XQuGk#tlR*K$p6G,g='eATqP6)fq/@KUbofnTYq%eF/,tIi@sjC!L,A&ccBM>$kH?,$$`U*P#'_>&c7]?l#sflpch%[_]W&W'kP)YTCl$WMcolj1*5dZp?`F&M>5d&h7d*pS-A(3Y%Vc%*ViAdIH$W_OQcEaVT',8H1`6LJqAsMIX?G5p"e`SrT2;u^\jpJNj<$%hu8GhFSsD8(\d[E]:1HT5?m%$h>YBc[:crjn'<Y*IdUf.%'St6bSdP:H;1,0aB.jkCs8!BlrY,5*Ij">9X0DH`eK=d7Z[,.;s8!1P?p!!4WNEjbVb,'3Su3qhT/Y9L2`--h!l`iCrb9V[bE1t&%rm42d&+"*:aLYaWl^D#Q-Z$>Gq8S_I=S?a-rnuPb0W\HV%*cLHOk$"^Y]K?a"iR^2pFR1u;p%P65q(/k0-oijZNQN^F$T5[B-5Gh%%pf+>.H<K,8jAUsm29m1rTYbUj6tfqQP.kU(@pF\rG_T#BGZu+bHcl;eZ+A#XO"YY1<jD3jAfgk^X]_&$VN_0Q[YGVr@hIOVlmr"%mdfb;5/76@+"MgVl2T,PYEqtrZuRaJ;et$pgh_9,o&.dM4S<(/e@1BV7mOW[+XfPEK$\GCK2>nDX+.hX%'P/Q=5L-09qCKKJ'k\9%s&.%q(d7.>@Y*1'JY6%9aR^?LUk`Ni7HE,;#pXuB=Gk1@<<W"g<J6u]OY-Vg*(gfg[RFBPjgKt-gEJgIpL5QqcW-)C\n?rjF#@Xp%SLMC9>(ENubUrdI;qI=0K%"6<nZrqXQ>dUU+b$!s_ElmBr&cE]A$C[^GuBI5L7\$)CO-K6eW'O'kGAr+8?'2dVA*Z:8o\34.F+<F%im*ujS1uH=Sb6VZ%Ark*-@XBg;i!6>:u-=oLbn<_daM*M1[7<Td8GcVl9a9%XPVZF8'(%odr%ctL6S^MDG"ogU_J%'Pi@Wn.IO5c%`>Ok;db0r;U@c0t+kN8DK`m41:u-=o878AG,X!`5"GEdAda:r`+K-am^^lsKA6tT27@_jR!3rP_ACrY.m]&%*@EZHVoi2mOY\!UQ%;M>(e&m'4:AH?V6@<c4Jp=bb[S@Y56[$9%0\t!rPPgc/6SFj<*P70'$)$TI01C+#gaWO21ad<d+Ss3]I0e(+*.AcfB$;GgnGf=c!%2XmMXVOZeuj^^8D3R+PH8XE.3c)Jm+VbJnfnC:j/4pu6eUVK$*;$H^IPZ)8!b=S=#3JI7>SFkL!;lHnCEMlMc!W9YuGLC+HYC/V^%3t0%\_[K:V6-ZD;9!<(tc)M.D[r"FUWXEjfD)o_s@TW5\$h-a-"@Sm)k&,Z.17KeDY^k\@aJmcepPBN;Zpm`7h/\di,\&O'/#n<Q%,X,<<AI['>Gg\?$B.L1)UV3>*E5qf_42>+Eo,I:[kZg3BFdDU*hL!^KD<(K2JFr`84T0Z6d%7sAheh87q^A)e=;LIDS(%'<,L9:8%_q*0"8#F5=0%XCO1NhTE'l)p<LpLoELX/bEc#coaf*hhTFVQc`qJ<cYlT\rLlmceaV7`_-M!a*-m9dO,M\%oig\])Tnn+t8nA0*?%fAQT/`7Z/ClfKe4PkPFdCVR:T*/XG.XA#7'l)NXkT(Q*uVANcs0ao2fooWLJX8H%*O_QI')Jd3?\4cLiX?[cF-86Xm(9X]]-]g#b%C\u\Z4]&>h?``u5gun3.&6R9&FP`<;kT[$pm`?n_0;5*R.)ttsY-bXF"IDdN3upuEG6@`k4YiSGV1(&U10q3n^XO*1rgq7'.4Sfi%qOt/pQsg<O0<E(gKsDIhWY$f@_'Qb.nEs5bB*kIe;:QtmGRF0rdAJ;'5/f>,2)n$sVL>`8;IR*^qQ_fY94Pm64IH;a]m5+?^V</X%;#`r!LGsib%K'kW^BYIX#PSj+d'RqtO5(`Je[BBO])3Q5a2/\ieb>]Nq4chaC(4g.)G;Iu73@35;!s-.=A!4T2<LLWHX]u_(nj>K%70\'`*9ojiZ&e!Hi=#tsLc!tX;@-?W^,-SJZY9^qL-QK32RK+M.B^7r]IgEM[&^eAkbp"C3c#X$NiGT/38`FV0Flu??%Tm[9cqM/%`DXml%_C#OZ$#.g2q68,NHo?&Cn<0T#Xq26ENtb_l;52@h6S1rYlIFY4K`T977!$\L(ID4]ce*SCOkPp=FofUZ^*Y[j/P<_g/Ro,%i3<Sb.Wuj,D4hV3$)SF-fJD0fg,%q<%KOKdbQ)r##_=i5E+jQ8XS4Jj3upJ-WEo>+@1_B0H4#'+OAU*`Yk23feQ(dDPf$W3UP/Un%,@V-:$SC_%D@eX_dWC(UTsI?N++"-TZ"7D!!s8$<T,q>8hZ@_K=:F%2g-M,%Q8DO:0n>#`FUp1XU=$h6W(5K6.J@A#%3:l]')-eW%\[[8QD-Mn5lAd^:Ic/>"ouH+R8'!C(#j;?4eQpC;MmtA)]o4IBp,d-#Yl]/GY_B:1G%dYZP>WO#ihYY%[BqB2<=#H6HK6k9GI5Ap%?K7(>N[Y]*pY0Rc>SgVAVb/[DYNlK9@p_k$Pi8YlLbp+(!S[3;P;;CQi!h"iV<S)i@M7*UoK5Ee/YUgKM7iQ1Nj!#Yl#Wb+lM>%*%+EQmd>A]P.fWKRkotI(hYF'O>b)!;0VM0uMp;iq^.%nj!88.=l,H=E0'EEHd70!g*cOL*gYh`.%5]#,LV<n9>J6n"&6_:QoG.JuG%e]#*r1hcfU?]Q(u#!9ib_#gN))gKo_:lVSE..f;4a2SJq+D6lo15`pdk[U=L/[&#OL='^dJIkM0C!#DBkj&;`0%:7FLm#RcI<j_/%ec_Fmeh@t$")U9i35S7*H]At$#CmrSFt9#uCYiRs3Pu0K-*2K#]>Rtnlh)8S:EW:hcBnaaT!*b!FZ>dpN=-Te%B0&41<eVIMV4dO%S<?ioW[DI3*J\26@ittd(i?8!%<s1O%oLN0@a6d>*8h`0FLXPhN:oi/\\_q)%`0SSk_LE%LeSZc)Ncf<@Sgh[E.,_?[29M[Ucj?U%.s@Y`]fbGdL;42M)Z&(U,%V2:n03#JI#N>4#u_EJDCS,1<\fqpOGic(C,8KL.]t3qGB4ak8]t[a&%6>7(L]aO'?!"9!,T#3I5P5G%cYMV5C`rjGqcQkB(?;-@Y7Ojs8k,3%hLa_=>P&3J`*8u<0kQ4K@UmX=[P]r]`,hU<C?FY*KG'T.:rbFXdj?$9q28[\[8Vr%W2h9%%#9duQ6m.\OE*0@P&P&@ZCto.Ns%J[%0^Bd,Jq.X!%(*fNos$2`.0VO7"N-d=a+;3\?/5mh$5=>F\A14mR=pCYifokE:5:s*Pk\F&%C%==P]NWjm'>TlI-UQA6#WL>O9tMP&KSaBk/kIto>_T^n'5NFNbQX;7M^!U9&dbt)iTFl]R!fO\-J\SS/@#(KY3,JPQt?&H7>EcJ%4?A9[Q:Vnd)ar6`rse?5#$`!\-rtE?:s-)pbVWhM/_:E7ZtqPgW"sL])c4Y,!+,.PJ8RG:Kfe(%D+2'IX!Ma@!Xd<Ws,FC)/5niZ%YUc@ZE6Z"g!Ws"pY]Z--Xr5d:F0qF(bP8Y>0I<<j"kikElHSG8&KU6kDf1SZ5Bl]MFhVVr(_M83cj@pBhiXD`)r@0pjXT`+D2cf3%#6NZR`MHZ6@%1cDO.O&#,(<$3Ao>"&ih.D@=gUc=<sfe^(mf99iMPWV!B?p)S7SBE*]It0S]kin?s?k%IEimjNi"_6`7Es$d_%Lc%ch8ZXj6/2CC68i*FSFq:j)U`:_fO=B#'t/OhG400ZOie>B=d6tl!Fcsgm3LBDh\mkZL#N^LJNUXeXGT&7)0C!:BDs5F5@k"7pQ\>%-:*37I""DlM:DqbAD*h3#SDlK@@5V'B>(QQr5;K7rBS.SeurH'.uh7SB#ORjRU]/jr0sCQ\=!#9;,@]E@AWbWg>q3Bp.;>N#T/">%95D7EBWYV@YYojVhnj%O<_Y2W8^01%XZ_$!0/'JHDr.2>7K/Je(+A)X8NE#eIk_k'Kp>]KbB;!.hW]aU'43cFK"SV@br>qmE%",^%RP\/!n)>I+($.Qg03n+nX=^"'L33Edhj.P3RaacDYK;Mk%"?KIDfWB`nlh4nX)e!(!DhDA<KidR*O-n>CTJGE<6P=J4At(gIAFM0%<b8gH>;\FCS#>7^i7J]`or]Ne>01<)I#@Em[p<>;C]!0iE)'D/Q=/gfR8%&.P"VQDd>"[3;VY#%U<9cJq.lW-a8t&l\TE;8e?$CR%ofGlf)?<%)IQncpXMtS,)%amV9E:\("p)\WF44:>ZId:+Z.,Q`ZYuGD2OQW'P(b>hW\)3V9.#X`q:.g`Z\_tdii>!)N8%sEkoJp=%T\9S>nXVC[Kt_jgQ.Mq605SEMKWp+h(09c"I"&7pe6YI;$^bE)^FUpDL58[$^j6D^CHb0l'D1u<ReDf_^Ku;;Mih]L(D%sN$Ltp@%Te&<L0;<,'bBH7@i==UsD2u1nLW,o(V.Ud5f_)A"naWHHJj-f*0^H2Q5P173H=mZ0ZU<9B9,a>"[sZSsl4btL=M%!kC.'o_l?f`k%@TI/5N?1MgLW6YYkMWs<#ksn@HW,e%-\HDUDfR?T"5p#:_,dRBKGbl=:BTkX_`6mZN\nV^Q&3B7Zs)Kaq;/J@HPQ4NZ^&Z`Zn"9H%&Rd^`W)%9*SY%U-H/p8El_-I/VctrX.:_L-g+bTBOBTZRWo#\uf49c7CkceU@0S(Fd:gQ^n+HTqe>'%0GtYPS,AQL1([Dh-BLa#^%d=RMA'JP]-#)ii1%?,P$,B.1.eZYE`$h]cng+/S5djqa5gafQ%B!L5%.OIOZ<9i!%R4R-(VJ&R,4&`LCXaPa#PSphZ+&,F9Q=d?]%!`5aprN8`,lD]r@AuauI/DVf9Q6N4)q&?/3<6<lMPM$:dO-(WM[$tYho#@;rTeOGbJfBA-TLMV0W^qnoqS%:%>X*`rk(puorDUdF%MD2&ip-H;*/S'5jSb1^<)>#MrVZi\k!&Y"mddDlWLaH%X@%;$?3j7.HRE\FK1/IF52)X*Lanf&qg.l8^6Q#s4=JisPf#-EY7]t"'%/=PbdlPO`fmQH9=AgjhSLYF6'cd=2V\bLDn]ZU*3lB1NR*s(J3>WI;F:QtO\21hd<jXT`+]^K"+mtEh0hH]k##>'#Zp#ng/7t!oR%X]O+i+Ph:.HjDb$NQhhR8p&a]Om=X]RCXs=[OgK/\S,7Y?*Fpe*=%@=8-o&*7FDaDfG6KHKrsHlZOn$*"S]&>3dcEBZUoVc'.\U\%IZ&=oY<RqnTEqoXh.q"?;:!We%#r[h?X%qskVS3P'N%gJEZNfEECdW/H)t>PH.Xif$sMjul8Mn7VISAlkOIj>N2i>L*_@s>Tsg4P%VH`T5]o7BcNFaNWV@5k9Mg84bNG[Wq_(3B+,+!kZ-FTGBGbL%(p*AbW/@=qV(o?ZLd2$%S'UZ:]$J,P+g<hhJ4qZ06!Q5]]+)AIc%LqnVFR:?L_Y8tp"E<t&^@[FI;\o(m[)+\V18;4TT-_AN8.S>_7As4%Sj'/)nk]SFET^N!9N1fA$C,3@:!ibD#m1VfS)Ht.S+KpPr%_kGf:Fa9?^:A^&$:I%<Ppe2ga!Z<9HPTJ."ah]=p,b"kkC6YjJnk48*ek898L&QZ4MiK"!W5`jc1_SNc!hkIWd<DD2!h>.nYR+)q%!FQlKYQf$&X>[d9n!f.*'j^$L+p;1baK-"g1SK-qCc"GPO>fegTGnKY.#P>tLL<#,TBOK6o[`Q.&rd1,4mJ:$blbVX@uCm*ef?I!%kaIG/^)afK<b'nH.InHo(jMqI5UX0]FKe?_R4Z]n2,PL<-ZA/S@l7+[j(TE.7SA#mYk>9'AdO4B`BMUG:E5dj,Tm*SFHV_6<--RK%:@.QlN>OZPV?hU4]ru&3Ci&r16-s[pUTTBZI3A`edoG_7M*XYm[b$oj:E\:<1,XSq#%ShCgpAnb+\rS!B^"KLZ\.HmT\l''*R5%9%G&Z%GH'd2MpZnFKK5#Mu%%t?%m-LC.ZcA4k4[=LPKLh3fV]ONhJWI6NpR+^=DD[n3h._//bZ;n#-$q4>P\`66;gG^;RED!N:R,`S%SLWH33`gL2jiN\AVR*,RD)0%Bdt?]"T8t(Cq>T@\DlL3A`(m([%BT/gTYmC:($.ne,dGVJS-K+]Bg6i/lt;/sN2k_jiI55VV8]WF%Edd4!O*$<qpH.ZXaEnQa<E=<9+2h&-]@Z5m6aUl\A5XAoF[?:YTXAG"8:]3MpjaE=s5MZGgLF=fD*VL_@pC>>.QVB'ir8Vd.-!(,%39C6i1'7j;#p=5\dn='VJ4rF=8Q='cT95j)]'^"&'n"=u+n$85JC@(9i>EZ.aXmg)V"u.$o_jT+OTA7_JN_$B%H!ndgi/"*Gk@4p%eC00M`b;^:Hj)+fHP-`*4JjD+PS9AVkcb2q"1i4oBboARFF-c>'SFM+8XO>bmiR@.6LRMt*69ssR)]`5Pj&kWW$PE"TKRhiiQu>g%9i(1:@jB9:m(q9%=M'T\X;#]I8+Jf\n8%`QTV)M[HmBtogKOKu]/hbT^CO#<HaG9<7j>R*mq%.aVMl)WLiP_S,N_)hJ\^7R*V5e2%?4]MaZ3]fY:-r3@Y(MRa)41ITMeAtB6\$PE+TdWSj,d>Za.a#H+p<3)H[:X,V%XtiEjlR(384`*NG'aF`FbKiV'D+K"F''0N9!nk%_Ao9DqD`5(cTOkP1=;^ZD:+QkH7hk5mS6Qj#t0jOSf7$9_9,HHT5Vb0'p3%$Q7t-"_ZBlqaasX-LLO,>(hsYhL7Ve.<Wh%\S<;0D%6JEM",)up;37sg>R)l]+E@ILIL#p`*-j")@b`[TW99DB2+ehkX]:raqgP4<<F=N=/3GQ&=#L^gb(]lfWSr`qmS0JoII%mglK8//m%BFb9mNe@kV!\$19?a+5H@Y50:k)3mYU&E&qMMr2h%>f0<3^EQN"YjD,%g!-A>K>45hDXk?'9KEg_gjo>B[22='l=3&WKQDN6_+k#%EMD>8cmm[**VlJL^dX$b[NXu$8/qXfj@QH_o+u78I`<+qQnP2W4lU?]."^K^pJTAE$RGjtTX@#tfhsq39B9C2L`Xnhm7T](0PXC1%&35K-Tc"n>TGf7E%@Tl,5^=-SnBf(oHmA1l<&.?r'uD1FU<a$emXn8-Rfs$`pKI\hQn*h9`_B/X$d=W-Jg,/*7rmb[EGQ*W"%.97%5MGe*m_g]pQ^9^HBg[,BC*[9OELFm:T*qE?%U2D/&jL^ABS`tpY*EN:"YK@n*BDu.[Q@r4S8'#jL8GRKijBl43@!W.8k1"9eu%Q(%*(daN12Y53*`6cA3B1d?66sVD``#[sN(B"q47*>@5CO[VY9A2C#!1%ce3NN;aAYf?;bg_TW?')@&QpX&;S31e-C&K/f)s?#k_KiB%/^6.oYY%Kldp8mK7%TLQp*<h/D6B?M2_j#eJ2pUu2+Bc+2?c1_^bO.[1B<7#"%@bD+@Jb9HG\P&d##bn5SUkL"o&Zg0uZS5J4nma%UpNNl&4q#S-'[h*#RAfF^iTgsKW6H>7U"?ORJIBRhN)[_P!;_iPE)4iO[PtRI%Q8h&BWt<+392!!n#,mTu2rFNr6-8`7#>qKHnWq%g^T"d!%rqcDPV>/e%fR=6!8<V?pnpG`9c^[%"(_3Lt'6SU-=NS)Pf40WH8ib"^<;Vnj:1^R?>@NH8a+X[hB<<GTc3G"ZVG&TPNcq%M.S,'*b%C,E15bu!u'%<*U@us8f`mI2N/>(neE8J7jcUb4AHEcTLWVpRNmnP(bMGMT;HBH2?&E\JF;`>\>,<%CkMEfKEGOaN%Z(5%q[jT.E-N``^@Z[.6h(BQJJ]dD(K[&In'/WY60:m^@&=k-1=ApN<PWlC@O!dn$SK?FOanAE),<FBO<$fJXM[Xsp3#Y(i^sHGY!D%L%)%t6r(*0Y8+EZ][6pm=hb_Z]Zlq,ZA?.'CG>+,RL=>^/8QHk^_\J(b6OOj'b>;)*!RE(sTU.YRI!RqJiS.jj_mM9+GM"V'e,iE+=%e>GRTMMbCBg^mKgjr?filk\=P&J),=VVrp[h>`?GKM-i@$cuVH+>C&5W?@;.dY\4</qC,o0#4t8(psVR4eB&#X^KK\,*F,f@,-kd%75j@,i,#N7J?`-LT;@1YMa68&`lrOY*Q=R+iW685+S9>MM^fk]J7fW97>/B$/#UGofP;QCjn-VWF]M&s.3r)-"<8*W2+n6hUD:os%3!c;<piKf+'/8Eh(fX8oOlj&P:?XEc.]Jqg!P>I83M@OW0H2_I10WS9QiKnbnLQ"`!-%?`#K%d\&2>=d]G4RGTG[;Fg`Yd6nOS9>%$5%+s.OW0+9W(?TLs4J-S:H;TYAs\.NKp.JE@hA0']@M/oHG^U#W8BB'X43#Yujo>?D0X$OogAjq8#Z1&Qsrk-&"lN0U3>+0!:%3%;M`Bt"dKdp2$>[s'I&:bjO0WH6JcX>1sfX`7$SL#lE_1VZ2uUP;IQ7hF%rRLJsgHf(3&&'&ojU8[OA,b5Yo'.(OBV:]o!2B69l2a%>j)8UMNJ\T`"4Cd?GH[67MQa//!0j#>j.:i7$SRE7YFd$$76AfT)PBP*gRXt!FHuO"3)t0N]%LP*m)fSPo(^H^<"Kh6HkQ%(l8:R%b5,Ei"q3U,#p)K`=T"tr0M2b8iR,Do6j@m$o*1*]n=U[Q()[>+=,eCZ7.rcOOhp[?70^s9(h/UNU9N"%a:JU1K10=,OgkZ4))-FZ%p&^'VVBeCD'Hi5TR3?`qE!=DnGWK9*N6ECec8#LA,BbUn@$nV>(bd!E-\s#PBG$(@F8,GPH;TtF+pY$P`";IKmQi*&$n)qi_BOUt%-&W03Fcl=<fW%5o/2Qq^P*o9_kXQ9L7;/?ua^BgW8-epjci@RlXX6AeCe>p/i2!R](ki1\5Jdp=%6/kp)Q<`mqD"quJ5<mZWI^'3%ah0Z,%FGjQLt$s=4Tq#g+qgqaV1se'ZpCMmFAMu28>HGPc_QJ"C7kYC3gCWAM6sH;2#mc4A;(6cH>$;l_!&mK<2h%$'G,,W#!B5D%jX692!.Y[=MUX>!b[chS#!Nu3U]tY:M]t$O98!X*/18M>d3n"=_Q)JX'<,CGKR&R4!4<@?MVKm>,A?-B3Zt:u\H1_+UK=u,]qSKP%a)]'?3\$F7nG&J0.X-_^fI4:<a^IHa3iM*nih7Njdd[o?9XKu#LlnD]3/iDK5UP4SP[Z!"-od/+Z25_)N5uDs'c]\"K6f%-N+cng%<H&cWGta(Q0Ht6;<cAm#iHPqS7LZiq<H&e+p8][*):9$TjJ[Y44>j)O_#^#@jbO0P3"R``"*PSO%?_['c_F$i+ud<hG[.gN%Touq%.QKc3NK7+\(pQt:aT5!Y:EYf&c=K4BaT6#"%nT3FOb<3rFFY)FqIi<QOh"@%*UjAL&W7.)r^M&J0SDWhlp/p\<-Z2+,7Y+bD,$3n%GSgu%"r/15OB:"<KEo^=H5.KU5WDMl#E7gt4[IF4aNUdg!(Q^kSI,l5j_\Xa#7SS2XU5R@>/\!W[k$GP$P,TtdDILu+Sk"qb#*J@%W$9IDK[RcrH&s:7$nT>QoIq*`_r:dd7MZ,(I)$V6PKFC<$H-)4Nq*;Gb]bO$i;@i7W\K(aLSn="^:q;We&CV.m6(YCR0Ro#8nZ)F%N)&b$AEA'8X&M.'2Y(kYFP<b4<_bZ/<fD<5;<c3&6h`-&YZpL7nq&g\eGXS0WZ"q"-4MltjM7C=X\<68j+1QoqC&#bXg2IHW`Y&;%l1_3*c%!DQ@ZP^bn2$Zr+Q_i`/GYU"Tb^c]^Z*];9D[[#nH"8QF%]KB]^Do-NKf&f<7=-4ASD\&k/gWuYL5deVH6:lrYsV7I7/LR%FqX$epQGR!h;h(O2cVQfautH9j<t]6m"UhUN%'&O=IBg"k?B:/Ge8ZW#NW8:Q1tB<^Lch&/3SHYPtDA^PKNF-pa^6Il]ekoQcn/i%k9jS0RP6hGZMZ:a$dR[uiAtQHW#P@sX"$!Llt7I!fC0UKFtTE!<Hg8eJNWLtEZ:lDJHL0PB5iX%P!%t)aWiC>Nj"ZqclgfS?h#)G%:3jHpq7lsdOiM?;LEX!Jktgr?;@>Okc1K3p=q]u*EgEA;l)<*SJK&pt`GX4*fP<'AElJpf\!/$IiMsH9%*.KN)V.D)bFd4tZX+U0%O5*UPUXFYJ&G!n#0cmXm4.YUI[X"IC[q9fZqqMDE&(A8d>qpTW@V2Y>_me8s;1P(@Z6n3!8OeWEXUE:D>@&N=##,gITgu7WSLR?/%Ar0(e9k&k'6>78J-]]KXoYE%e9(8GfS<e>Di3HItMU[U_NV0c+mdghJO\>7CR.]T+FZ^(r.3H!')NfVsEqkd?;q%T."F(<r]Ddj:%Gu#X"KFnSi^A^nnb"nfJmq!iVGaZ\R5goQeNZh24l03[5nTZO'HOeC"c,Ir>g[!DEbIb5b8*$-e)5teH?16I&3^HPV,;c.,QQ>-k%g:GSUe/nK3Q1iHYQ[^fj5P(7O:H<E]%E)$eM_!#Rgf0,Ri/4f=gg.3OROu92o(?aSh=WnNM:,sZI#^:Zl:tcV-kN+-1Qpb_RWCqV%&0Ri?d6,eWW@/g=Lc:>E3N<M>*KS=#U^e9h5(ohZOd7&RXW[(lCm[UB.@"MQ3//FGCc.1D,*1\>+Io]SV!YSSL:&<JFe`AT!QA/B%S]8MgUb;iGOe_8=6NJp.e]6nHJGfe-CWDR5;7:7o6/IB3>fpbO2r`6%4ch'`H4e$OU!8;5gDme_dt/W<A-r\q'h<R8T2Z\"(PjcQ%M2ka)P8MB]<S_@09%T\,W-'<pp,I(g&a'7cH>lm*MG(sFOWMmCJPG(MOHI+K:/0A&1'"e7//qm8^0GO%dK?],aNe@Z=0s=sY)_'p%aX"]ee"X&e!>"c0AA.<]iQH=HLOpj;dUM1g>nU]nG4QF#AY#sb(_i%V17bl^M_!`-?5o:W,o=1LY+IQJ@r#M-I!>p/n7"L@[#j._%"M80]:6`#>mgWF\aM0N"[f*PMC$BbH(!gYQQ;qW5^i3<-U]?.MK!+GC::_n\CRg$XdZ+ZC\11U>+\Yr@>@@dVfi01-`htCEJE9f$%$=L4j?3-!cV<W.D8gL6>Mn5@Q!(L!1c64\s'9-GE:S)ON>:qKfjDZMi)m1].o+RB1c=5'a[ffWPS2EH1YNDijeT.!\`j)0Id)_)B%%?*T$:geo(]8mViN'r`sN6!X6Kge.Q:T)E+Fe`XWYf0aVj<JAMVF`pGqi=J`lc?k/WaYUZltA=IfufDo5)1`1LSE3=T$Vj`G<-8R%P=(L8cpc!*qJfb6:\"QQfKc-rnG8`I"hjO\W71(J#F;.>.7+T$I!JNWjE2`Hp-l0jZ"(6lG0B+u>-*QsQKrr/-Y#UgZ&bDfdm$8T%<1V<%M6o8TWsUa36Ns03M@CM=A'6$Bk\\kT>Dg^J,/f"6NVSl.%O$YLd?0B,OJ5DU.,tu6jD6E&Zc'RmK(%'./HQTZ"lW#tTo@>0%-EhceEEGjZ\#%Po$&8P573?#'*Om=%2S.rY@t(/9,i<WFaZt+&RQd@Ogrk?6#giFpQ:$C"`FdhA;nZ4H#2=%BG!@Zd7r.Qipl7TX%rIHLu88W_G=Tl0eBJE[Dc8m9+d??"R(5uMpd-D@qr8]$'q[ki=L5pjSP;8]g:PQ:&djrEJ/YHT_V@e(]G\>IB>R(hb7P_/KIEegC%L2lL5E%9qGJYeHt5`AFs_+;0Ad*[sL3(dAQLScXukH(BW+F/8ujUkX86Z5<VaZZ)s11G'\/ffhr'=h/Xjk#QEI6bpA""bD7q,BL7%1qaEY"r-0nk>8':KLK(uHZIX`5@qJU3P=3P2^l87[R3?kBMclZ%oq.gf(;ePR]H:bANrVo1nUHag`A*i3#d1DM/6!6RhrVqUK_@\%3,ukUim,Il)G$%V$0e,K@c91,/-""1_Au2.Mr1ddkCE!>8h:WmFnBFa>Vp>Xm+Q7ORDF\21qo&8,Xn9U*-@lj3qaTek"-pnF*cYd%NS#mO>%u_GcPCfAp6pUg0;Yg8Q*s=\_fqDEh6(M)-@Y0Ia+sY@jke+Q(qFA;E_m!:YE%]"7:&#,`HoUK7Ge51Wg;K9cs2*]9I&qA%4=I@6;%W]pd'K]]LC-iF\pY^E,t7?fMc;6`!3$u!E0+c>ND+S/[O8GDqeR+4O`.Ul_mtl\*mc[n0oOXBA1.!8NJVHO4=PQm]`D=H%*N:7Y=Q02g@AIlc',N&Z5&+6m6168XMcq1CGGJkS"F6'"Y63CY_)=5/j.hfL:[VBH?Y'"LO;(#9N,9,T[psJYc^-L6d_NI945rgF%D2u=^4R#C`Vf.hJ`GGcS`01ZV(NpRr+fP,UF4-1/!R<E@dM/e=(X,qJ[U_6/DD$#8@lHO!CWfi!!a<ZFKrCY5h@a-\$ho%4/84"^%Dkhn"nl6h]BR/`k12*@V%8T]2d.5CG$"tJ`eKbN+fQ-Ni=qj@9'XUQ#o-b7IKna]8O)=4CaHq^k*#V3^E[,+g5<N+f`sc,752B[;%@cE<[fOP77Se[fNkn%tdg&Z62'E()5G/2&iEgT@kI>sD;g$*148*_bIUC>X@)M@:Y%Y?$f]ad$Kb*,m:B-8U`/CA`g#`Y!rH1l?M%]i5Ae&HDdfh6elEE?+<9!dKL&3oq&],uM:\GJ!E5ZkLId/LqSMbE\l&+:3la"p"o2ALgQ+k52`:G%Lc<+QJY6-]0JAlqC3!c`O+S%083^O<M4kX<o2TS12^-Q@$YefdS*Mpn;M@R.:O5K#/1TQ+/"JR-oSctaYlR<OjhM-b/n8"LP$*_Q;)Ur-Z/H,fQkoS[Oi-El-Y:J%h"K`''Z:PDXnHq%lU45JF(uW!iutm)?n3Ei8,jP[C%rXTEdqnN$&"_+$do=0I5S[[1#r=1(V(-8JW?:<LuVj!07cNC_'KY!$9<$`%&^k*k._&",^1a;VPc.2%U^4n:/Ahj==Lpai+m?^@7f4PT<oHM!.C(*u5q::m_2t6XbTnL$]5UPDW8N7VE#Z`'??:FU!Wfg/"(!@?%,G`5U["u^ej[L?/p@2`q'\!rK>q,<pSQVI,#H__o@2W:sql:K>4+*l:1(-s1'YHoQY#/uD@X$U)=JCEKP\mh(b`VO1[9[BQV2.*S%KC(`CG>sMi3(NfXC/O8hA:SQjTQRqB&u^7o;)0t5_tB[5BLMMlMisbLeP@LO.4Pm2A_?oqW;;'W/>k01eIN/]7Pu=8CtYKR<;fWh%-g'TWfR2o,*0:XlYG7NrfNFRI7l=W'&0GT'HeRh*I`Y(0K_a.+2DqC60E)4lH-j`GYo4rj:;nH3%_8/hZsJlM:Abt6Z*G-+0Y+\0%PThO'd4rKtP-HJP2Kj#]`NY)K:e=D,H\CkuM6N?`Tf965VDL.hH<`"*da>$*,oXV:/m?'*;W/'44io,%n>VSe$i3^S#3@&`om%hj%>0;8JEASM,\o0kr1$i+j_q0<p+[Y1:9Cu#kD=q0!\ng9-QgS#g'S]no&A>+1=p;=:dB9;a%GeE7-4ILeMK6(>;.plNJYIf2$f=9'%AI\=["`J3OcrLs'T<$3k'74XD+%/Qt<X!3:&G7!P9fUqmR$GON2<CKP'ZO/&@QVuNeT)sq0b$40/<r9[gIk]+2=W)+FZ6sPQ<`3f%\8[b>[VNEmlI%$0V(+Dk:SfW/;OhN6>ruZA-q1H[KZI&WFX]V^FB.pMS7!8dJnQqIPLD5oqb!HJo8.@$\qp.2f_n+._%+ae[];";%;(]QUm_Aht[:JEV>Ib>>Qh76D\d2o7$;lLf>.E(W+3k[X'^.NP0^?+(M@,sqh+4q>+h9`C8`?<d#Q4l<H++^W],6\o1%UtnVuibE%>,]Mbd`A\.iY%LTimH4OAF)q5[3Sh=K$MGkBiTHtRcDKRGjQqp8]4"XCN1j3]+_8,\XUM!)5)>6(59hMd$$K%35Nk8PV^"791dm\%_+,Y&69:G1,fS:V[>L>OMU]fKRUen^Rr4<kq.sN.VHOT=Ze"$Rf=&#PA_a@,_(=UVV4"%ji>EtgYPGL3Rk<9Npfs<ZY&X`_7<:ao%GAUPped.<2$83JJ(0jf"<>W'j#D8q8d[)g@#C'fB^CQ5X\g(1EY4Be4;C\pBpE7]'UBp_E6uN'qR)A;VVQ;&gMjcIOZmP'/Rcq^u%^b%m^8?W1*[%IS])Ie;DGVH[6$WO3oFt3"ieDW^oSTqXTP]=<U%(2&ke947h28'>r'NfH=.I#QC-c[a!plrrt]h40i'"/"DN%lZ<%0R:UJM"V@QDB6Wn#M;qb1)S+K_IG4P6#ao!%AXWa>kX5AmL@S;!>"_)Hapu9p'sRt\S1<E&JB6sEHK]i!s'(pI=k%jD&[TMZ<\]p%1R]*,Q;KC8LHLodJ4bSL>1rbJUD=VB*S-NO?t]@)1GibX8BoLMD-OD79"0RROq4OtM?ft/bJP[.f#&h<a+oYVE37CK*/DM;--1&s%Yo%3l0pH-tY-goT&oRma4F0&#[Aol'YRV^#aNDJtAop7O`UCR?kgiYC+T$+jl`#0G&_bW<Y8<t5\u11P)a;d4FS;bN8aq_:/N*M=%Pq&4\Zu46Q5_SY]q%3aq$,.KP.4N]M\5\<GR:Z>J'*s^6#NDTl:R[G$<8`W6?Q^0G+=]'kM&bNqZm7)."2A0k2lIb2DRV1<C\dOW%V@?8D+Z>1(Ro<4PP)si*%6l2Us/5950;_:\ieP%mfuH8+6#$^:%H/)k;W4Ur#?dj3-8HtJUhhP&Ba20Zhr#VeLm'1C];2PJ_]DDu%nnHi2J__X0pF>.B5YT9Q2d5-M+9YqoYhl`POO86'Va?BanGF?+LtgHiW--mn[d.D$.04db/$5sd(=$jnS]Ocb1DmT%?K1k(irV3n%),_:k#pPkU:<G&GNEq3E@[JE$_!rd[n=8$XmgK,M7R.C4LBGAF*)[*pgcKLMki`Q)_,UXc\+jiGWSbB9eVfmEcP'b1?$C8"dho%Q%$((;=lETkOKUK>%/fQbun5Y)10)Tl\UTtO3:HUBN=-TDh\6AX,i%Z,Y+oA_SK/+Q$J`K0sS:.euC?UeX'Ddh\5#sPNf`hFqBP@O4%csmKa#OfTG7TO@rm4ZCNk5qI6\/9jM6D8-5Z-[3`([[;9KdsF'$a=MWC((HDDC+IlhMH6?lW_BFB^'8J;esV9;TB"9I*)?skHbMm%!YEHngh;R"?hRbsYKj"Sn>AKq[UBfU'^0UCG5WU;lc5Fi7F3[[;8HE%l)9BI8/iSI0N)]$6?;l!nm+Z7HeDJaaSc=GEHTtUA2&Jq%A<Hin4#?g>hb%beN(a"f]8lmg64oB!/eBr4VP@lRmm@W^UgIjT34Wge+_f1k8:P''3,S<"QklV:Z-R(qi\*!2Wuu/<7a:]c@d@'+%MI0!)#VcJIDlUtL%e'_G+M0ZNC)G(t?poTDQ4C+P*-V.nCYXlAhGqeed0L])L&ckUM;!2EVd"C3Xd1o#G(;dg##,I-gM%,5f\35+%(g4jB!EUVSccQYd`%L?P'P/*,6*$-P5dVp4gSU\&>1bYWEc%*.&Z22LM.gH$@tcV6?qd!4J0L]2b%si@RUn3^<[!m<.^A;X,E/t0%k_q4UdYMTl@9+-T<X<1:`bR+PbSHV3fsE]V8'<#]Bq\-s[Fj12(e%YF7Y8I8agC/AAH@450d^P?i*n0Q`EAV2!CM:B-K8TL<G^J/%Lg@]4@Ak^&-nq#CQ+$BQ*Q;>NN//>^A\@kU.'5&i<#=/Ra738d3XJ0rSSMcKNbg7`SJfXr/_X<1=hnBQN9M4>APAt\V3M4].LBT3%a+J)KCbQ=<Y3rbqeA3sS$t`21%;)Q6kUVH$2<,.dKS"HdYqeDBWLn1jm4LTJ[>#^fg-1fiCr^7g(bT[GBb9gC$tlA!`]K3G)9)kh%9YktB`g#.5[Baaj/)oURP8s!ka0o!CDFa_:*,V,_%0eVce#'+0)?'hM9[@C@`amd[[Bab1.gb8#P8s7!a/5iPf[]p9ME4Ik"G7SU%C""og&bHONL`.LYD]+#3R%M.I9\4G6*Yh4@:dj"g>5S&6deo3n<M@h#1PM?`D*,RL=Q,eONa6#J(>p$25Y7c+Ydh%Wbq%'1$DV?`%"`]>,j[XKfP;*m.L:4SHK(t@0pIRNbOXNqWa"g,OlK,Wn+kb,2j<u3SJ%&+O_5=j1&obY70[X2E#e4aclsPG.,fr$&aQoXjdM`5*%>=gU`q?2m074hK6*Ns(<9,Y4+4Np/$du!ferlZaEi)h!%HaM$/-i9NmV]_X#WtGMq9CBkCN(=sV?j5]-$h4tMqhjtn7kE![[`Add%a!$JI+RWl;ULag"SC!Y]bd/2m=5[.f7XfsC;KoD&0ut4hE4i:g$pP3%_*UVsC;m`jVeIg?d9qab80)=QC9XW^*0'M@VCh.-lQD!i%>bHW%atlRMa+nME#TdoX*.il'U4O/F<"$Y^])t[009Vu,L(]Ilq\TF(i71DU5`Tf87g5V(%2cm&To9@m\(o#/KI'8+1GQl$kYN7m%,e).^Jg2J,=akV30eO&?3#OPUS`5Gd0oElT@`XS0#Xasl-O@TWU=JmB_GX@\N`1%Z#l+6r$tP1_/o%qd9,LKY0]^$dOIHG1Kr&gn%`7uOdEAZ=N@@Pc"\-0%T6lfo"jbSs2Pt4GPp8+maibnrA(IQ3O7u]L#ibXkC/<5HPB5tk;RDi$ScJiLoF;>DBf1A(=kd$,$6^QU_%*XXeD%pa>*Gbk+h^#;bN_103TUD=<4TWCD'43Lm)9_MK_KZ?F\VacnL\a;FN11UL1%Z\Rm#0)OQSUa\R[PS*ChWF05^lYS=3^P4q%B73`gh]Qu8rMC.4.%XkS>DiiGGd\@W";*0QBRV5b_phI/qW34F7,M=@nH_^9*29#g>u?+Hd,MXH596f'5:q_*ZdB^?8c)-#Y:CKM%<*]$1I"I69_d`6<qsuuiY-t%Wo^Nc%fPZCOXB*Bb+bHKuMa/`/,$8(OSu)c4Y)tb2:^;sHqKTf_s+"*iFC"kN**q<SmG#`bEk%We%FHXO*_Tpp+(*CroEGY/l*(b&rA$P!5nkk5Qqa`_cFi3XAA#"j@"d=^m5o%6D@FKGJd1Cp9""YCZY49\DgPY]UD./rI<h6=<h'8\s%+U)^'mXOP*c`cF,R/V\!+ca8`cai"7gu\#^H-DO7L3@:W$BWme>sou=<%rWY5!.Mi\pt1YO>dZC-C>]V!mNb$,$jK#BLG%hQs[S6%Q4Eun8mgRNC-WUNX<=Z60<I?g@Kg`t^RD0r#+so,%6X%<NiXA+'VZbU#+lN=q[j5eLb%G"o2('8$(B\+?n7$`[H33P/$MYC::cY^%r+Pdfb,RHO?sZP<RDJ/-,XdlH+0F$)@&hll:pO&!n4B$+3fY?lP><gl:,8(0"5OD0:NH6?=a%:5^Ut9p3'YMa0VmjYMtK`\72?nJ%&TbDDaKDC/*IU,\Mr7%N(Ba*P0Q.ari&1*EUga:aY+Jti/Mb`(n97-dR<@f-EPWIIs3HR_UEX/LDpsgaeI:FT&;9#jW2,K*$d,:k%#]gVHdW(D=`hNii#Flh+<E5?!(X@S[CIQ:;a<_+<1(ZWm7hP7<n2CQ#7o9Egm6<<s*5<LSKLAXXR4=PF]Im:TTe+R-37$h&>n+CO%_gZftp,/MF.JZTh=>e*ZcB_(cp4`Mndf_+8RR)#ZC<>PSZK"b.ZU2W1;Ski;gI9?NP"pt,APiu!Sh26tGh?($pf>n<k]eM5V?U^"%kK-(]Mq9QARUhl*E0]ApVR1.h?s$#4<@?M6.f?[_L_WC;R;^iqkuR_obFjQsC>d^R9U[RT5MfW\1tX4<D8VYVU?,j=5sr-fX2f4Z%e3h@)E:K;-PKf/caLR'%TO/r([T2gq>?EIZ87=`AMM?l:q1F_\r=Y5Vb62].$nm+pE'NdK116HdK2!F_a8YcfbI/?Qr)3ie19iVc%3dV3^_Kd%8Y&3BI<"cYgdcU)K6P$(lkEg`)[;=.]^kf+U'Z1r%4FC>0>mG0QgPL^2G8-kjmNCPP#Kdm;J<k&U!J@M+&XL%bH0k6e%+>BHfkZ6OK8F7g_n_>JQET7i-1JFQ5GA7pIW,^2j_d.pXA<Zh\q-'uJegom$9cf_<c7rmD>tDPfL*=h5ifQ77'6oj2M85@VC"u?d%U90Hbi7NdJILY[UG3HCbV]W.)gGQJ1#`2kd/1u/?Y`6U[VVBUVoqUFkQcN>dccR5nN@)!qMBQpuZB4Z!l&0:_,TE*[f16`Ul*A2)%XXbY'$M0W-iEOdY6oi3q+2Jn,?=clu7c%Wl[09QgN?kfGF!d3g7s<s/nJl%W'riFJM['8W;N#5R9Jk7uZVnh#9oVP26u%`OdYRPf%=G-@MLJS\IGq]<R<&$,OKbfJ1CmHsj"%V<6+f5l>CaB;URjt0:*ns+M980T5V9r14#WedcIcO3s$bVW!5YEPOAX+%$kH0keVPN/9%EM&?0m+6e&7,5oe.@_Of.<s_T;R!F57LIX7<?78)dh/D?&Q4u0[PUknK;7aB>+i?FJJJA3E<@eJobJj:nV(kC]uaAOUP8C5`HNn(%UXd:W'b_,>]pYKLOs^a-fGH`.*eM)$oWBH'#]d;VFtF;/$>NA1)6<#6=@i#1P0STcRVj@K>=/cD,gnuUV4ORJY+i=K/l>4P,4/(.%L.=:p4Ff;!Gp%j#7!rJe(-%M5GSNd';E'ba(oB:sdl,UVZP4+i%o*U+<MTJj`NP3tOPF<.bYS%c:-*%c:o1De"#36u.cpt`5l9F5%!>d?>(dD,)`!epkT@+TE?m4DG5:SWOPqbL2&^sh$&,uc?aq/.b.:\+^P5.Wd;E)fm,ReAo.M.jg^]RaX<uFAe^Veb&BKN(,)u+t5%f&k3SK+AX@p96kWg(9@C.E"-TOb@f3+la@^5oVPBLnZ3fi^=>AL'ZW:SENSjI"Rti7XQMLR_ZVA@p&)h?`DsWV%Ls/AKX+B3kA-1%1Kc;$ndm(BQ7PEM<B7`2+Sk[5Y-Tof?s1KZlm,?SPX94;-BbT+au-d`Yq?l8MbYnT@G;YY^6!3:F+G8KpJ\UgYDJVeLtGQ/Ftd/k%?jEE]'JV]--m9A-Xb6hr#V&%M7^>__JV^9oi!4jmFFbNm/s>^V!A+C<&.t]Er.)gjT'uiuXX'"#PIMfRAc.(49i3E*c=Cjq,]u*A%!UY8?)*_M\'=3<QQl$UHSF7BbV5TeT[h/.-nT[JXE,Mh;Nr_='h(B9G!1sGUc78@dnJNtp#Ai.,nF3;d]JFeo+\G8L.!:>c^j^U)%"8R4VC=Gmk>J*:iLk>%_\=9L2@OF(]E9DjN<$CsmFXa5LjJ-lNGj&R>+#5TB_6:ps/SA7d>gNSWB&kskTaF*PHHB)b\sNdd98s6;%AgQ@oro#Te`_>;FD+rjo*gj_V5%+Lkg40J8eD%IP"N1i8&ge`+866]C.R^FXN=!"aA\nSm2&2;^JI.Q.PR/%%We^tG@>kL,DZUSk%p*MSHdZH6bJl<DOcq#"HL^=d.N!Y`j!YZug,tqueb$>0d&s.&5+7e\\joR<qeU\+1A=6LO+LP6Ia&Cq,Q$A;O2_S4TQg=Hf1LIkC%qG`>t'8U!h?<fXn5qd/JY;`XC*u;3Kag42_=$J;4OF9#Iprf#1\'phck&6l(cX'9uBA&KjZWHbAX2W;_5\SJ"F6pdd0:,%8hX^>4%/f_L,)n]tu`qe]KbGduhqg=Pio18Y+M6<ap5k\NA?VVCncV<EinoTQ5_-aqJFfm[hl"7Y5H4'3-ofjd-jY+rg.6RCbf6R(Ls8.HK%qhJPA;6<+F<imRtHD[O;,j'@s_:_8HTsot9QRf:ln13[W?T1h`Fq'T2EmDilJDf3K;I]o[Dc7c9&?-<[]^;_u@#oR%`*[U8;9L"4%4o/#[0hbR^N'-/:B3qe;"cs<=B`$&Xh$u+O#bDAC,^KeY$DjrEo`iMCo-sc@&QDG_BRacGi+$LL<<;d0M]@0S!l<Q_Uo9[ZXaD.2%8Fma;Tl"8'>7Q>^+5[XT&,8-b.j5X#=QuKU/VMHp0L06$klFe8W[^L'6"0?i5j^IT1qV6g=*B?6Eh!p)lKV4KjoVQbD=#`6-T,A?%>jJ'QH62X$8SThTGOYP!2cF!e5>Uo#L/Y.HC4_UZjYB8%K.1eZ[()M5JE2Q;F;^Jn8"*WT0ToH[:lusFQJ#@*l%]t?((k"'o>o-e%KjJ>V:tg_[Lg"8%rp%NY5aKK-&2&+:hS^O;<DKiO$SFX%j2'-sDo*)?Gnd,=be!Q,bN\lD/EL,9'WknOBYA:J&-;BiRi\]hY1BrF%NT\c,(1EPqb.dEXHhN)q<f?PMS34oP<Pr79qq=MpJR()f:'H_CnDe_@4iT*'e@epIQH5ld3ATC^AG8.[G!0-FMqDUeZ:>0T]r^X.%^;B(l$M+lO/Dn\rHMAW3oH=P0%fSRtq86uuA'Z4GdHSSXdS8&:I$/o-1#EOH4.h6`kieR%P)bPLUT+@3(DlDfjaD!J;J8L*4pc;q%Ni#CmcsHMC,h'4)STd?1V+lL9Ek_2<r@hG,<^1<#llM8#Rg]jHem?LEP54(C>5&'QeKVg+c:]skpVI3D6G$<gfkcck:"T-HN9Wu=%'3U>J!/<k5r<gVWhbDG[e&=K>Fu@nU=:"R7AVg$^ITrR/3tVBTY_,fJ^fDCuR7U10Rp^TelFWP^*Y+dFrJ"St3Z+kZRkI!#TZNh@%7%jRG?0u<h!0Zf*%fmn,!9@fV5PstsYLZ_hc+^]TmG#jbZIs!gf#uk?r>LF5B_piTicr2-!W2\53EtqU@_:"nPSsom%$WXgJ_GGb%[b;;>I!W>,T's_JTe`)9DYE\oh.j]]'^DFOnapEV><IG,BnH]0rbP7I6m228?W*KrB)K13G.LfB#9^/[!-/"m4kds,d<qGgC_%*;%-3Q-Ckh-3X:`GBG1<CRhXX]g"S07Q?5&*D<ipX<OCT/bBe6$grAm,u[a-M1$Zl_4u_!FelW!.^Ihc9E$OZ)\O?608EKde8gU6I[0%?Z0CJba'H+'cs.K.<9_,lGM`JC&p$gV8XM&W:7X=]/MAZ2u_?/lda81f?:WRIlO"&:1otE\A#q[m#14DI<0h!SZGk`=(qhd,uF)O%]npO^fnZbX48]-+UL<uL"oNO0:1"1g4'LFm_\[dZR_N'&Y:esM]=Q\c54iu%gH.Lpm:*Yu%5@Pork4d=S0ddmbCKmqamf2A);tg8%1#mPWAb%h=F?G%kKm*XjlX[E;N/!Xp^KLD5m5NOg4I#W#3r=B;^:Fb)Y^8H=T)/P9Fi+TO%E%K%C3AQ@^Ufe=Tm3X#*=G@Rq3S.g%S'0K*oAt&rF,"?$S:/DTq&+:9e+ErkIf7O]Mq.W^%gW,_Y&utRSmh@u^<7"8^0E4;Kr=^lEf+Ye'45nVqtF"rXJjKYcbB+$-Ef?M%Y4V*;02t\j@;n6]9[>l]s#^A%it-H"?-fFHMqP-K:?m<n'*!+prfpa`I&M+00jgHSTj`5PA(jBerB@`_TDB5t>,m$(%8p@n]:S!i%".$m?G[U7m.E*-@mRQm,=3KngB/eG3e`Gu'</tp@s4Um8)RbER00X`t+*i;V?@T&pJVGQL9ZKZK!`-G#XtRkXqfm8K:C7'8q"Rr+%;mAJ'(9=b`U!LB4^?'*T)]/L5Zl/T;Qa>TNHbmb8=S?9'9)J;9TDi[Ti:UQ.pAa.I,9a6k2s[g'&Z!U2P,?Ws^DFijcHY%Kmq1%f%a"u%cD/^Tb-,n7O[qIu]C-M!Yk,8%Nk2LiI\rVgf`I")IMqS$a`Vj8S6h3K%@=;Bk)>;g,SZXkW/3KN;h0ci+o6u#CK$'Z*q.oq!%6eXF!+3>\lc_UU11\R.sBRV,c,K0aWRMt-0KR_=_m^)/(F1RgCca0t.@^XL=Ci(rZ]f"]hBDT=,Sqb(^*HFL%>1F&fgflR$i82&C%>Nb<q[<-TNrFS2u?=-Dild%cimcN]cp&#m=-auO(MHA9-g"O3R]NNSm9raG'DOVOoI=&<2]%LWO9s6L^p&#o5R!gp*?7g&L2FX1D%q.=euEDMM_I&N80:Qpsk)GTBro>;16e&D62<-1.6r_Wu8%%"$Zq&kS[s#PLUZWRIEN3aX.Gus([gBA:j9@&q^lTKY\459PH31V\!%bHl%<-;@N"S&Kb8b;Q]!2uD.<hQ0dCcGm5M.\A<T=+7BIZ2!"u[!/*YpU%G6c`UpHpTn]/I^ZtB<\UU,c^M2jqL!J#4Ug#M(TU:$%\qm9-E]&Bjk"B0j\u*&:6'%KG(6tj3ne3GOB:GBk8ABX:r@hGO`;4KKhLQ)[aS,a?Qjc?IB?-qFI-3"mrbd(qPg+9U@l+/6f3`im%V!]1/pN'cl)dh@7qU@3H1W_G?NkYL,o(NG;s7>p_L85ME?(5JnqR^q?2QktuOo.\>79"ak\X7b/=[pE5O\mJnR$AE1Kor%%B-ot?%7$K"(dl:]h>`'!gL.`fVKU#Kd[tdtI,C\`tgYHFZDm?'k1J$]NoonY[V6mE<l)N&ZAgCsS_3-6[?rZ"#c_-%0pT*$s,4Cc%*l2G"%kW"1EdH;#-,2H[3Q9?o3AIcH(/\JO$g[6\@#\>T8E@SEb)hnbN4'6\Cm8155AV!LWm>toc_$>i=RDiqea6a@`r:'<NLN`o#j@3_@%[_'^(2.hXR7,Rb?im>#0p'V`:V8E]Tq$QO4Lj,06WRLP0Rr\!uJPg*u@Eo`8!Z=RU-CJ-*BY(hB(1&sGp_^7;0p*t&:H@SC_)^TR%WgP:We)k?%j'Q2Hh_T=a=X!Z/r5:1[7&p(jo<\-R,"qan:kn)_,0:\s>=ri]_7_<8]02*@R3Ms$]79M;cD/TP&l(hpLU3:VQj_5-%G_*ZTYrg08hiYGTEWF]]:Ljo9S]-Vt]?;6NdhFcR>#gi>N<b,Ymo>>ujfVY\:0&%_hb3a`+j<uX,LnE*U9g%6e9O8=H&7%&G;$O'%hY:_:HbB@<jOp$[bnfb\S,(_oF#j7"ZkGc$5f_">"NLcHT)8]:Ru&BuZI7>`4H/R_^\MX7iTfFQc0=o`ZY]F8@c`Yd1jgph^-9QS%&,=JC-RC<H?_:)"*td*c48C(BkKr>b'2SYM=%^TV*6k?CAt8n]-gSkXMZ,ejhp]\/eiR$-#WD]15>;VoA:Hc;3W&-?T4TH8B9Rt_%H7A+>FZ)8UG1(".T4Y:A+0i8L.j+Is"Q[`&*NY6'#61GRH]"at"^-"Fm+YIr8U.9ChNg_.G]uqfK6-OOLQU`i%`+I9KfLEPhpp]%%T-"9D.a(26R&jl!5*T2f?egcBRb7aH\EoKmH9*Hm#Gu8Y5+cf@67+`%10,></AgMWL9I4cU.AshUT?mXdRMF.VRt#h?2Bgnd`KqX%NaBPiUOlDWUA=m.GaH39$m&9uffaL9iig6-Mf*ok$k()RCu@/YmnskqXfu5:NIVZjWVP`qeap%sZSkF5-AQZkGXFd25%J7oPq&]f%on,/eA<c$XLl%QF,8WiFbBjH52&.+EOR(@;(F<Qj\OMbFPs'/*G;p-2$pud.J+3(ac`SCqD)^9Vp4._Y(e>B%Zl:?=^5Rph`WO=[%3[>A-)K)'LL^c2jacR.B#+&U'pMg=7mHK<2&[l9O`R8]&I7s<Yap97!an3#r`q9Uc!QWY1/r7+drgb9TnFaLgXFud!cIJed)s3],%q<?:AE?5QH698SSO7qE.*4">:]<VJ?FtW!j-e7':_)YPZ[j-*B=5;C@>W8oZQ*h\fo^oaWHJ686M\GR9HI$FWjH>J/L*(J0faj,-%QunT0NH4enq^LspTa$)\7&\BIEnZSC/gdK&Urs>SE%H+lLl3`L#D9M\itF/&$]72t:,1lZ'hb72m46?V?MZqB1,OU`#>jpf7<"1h%bM%[p@sckDEHAC[mB*nK9EGQ@ZUDf9l(dhh,hm'IXJ>=Y5q.CVfHMB:(DAm?`Zip:$QLYoO^#7b$6,=kgHL.)6fS4*O\A!NTTl`'%jelIuShWcHld(h#3?NDrjaB&>$NGV0d+S:>9;-%4TSlt?pI#ImH08)hrL^!\Y`Zp'kIpc_-YS8\6:gX;n!"4LOloJIFK)=#JL-Lo%+mUU5&AipbSkO@&ht]K497OJJ!u'nU+WoJpABsZ*D3%E)L6l4jmk4:[OkD)0'aR3e96l5dhE@+E(]/+E8>M0rk"%(VoGeC2$;^B`%`X='u?%IHFjLP4XVLh27QBo(K+Ls>@^u!&,I>)cE0u+0;9-GW]Fe=cpBJq#c85ULb'\#+eY1*,"CdNdhKU[WkiYU[(k`=D=T6S(c%@/Rjj6$UZoW'Y[TnXG<;6U-KTVCqF$5i1:CKKjd8luJ;@9&tT87gRfl/)2l;IuO5'`G&t"dg%trHf6k%Zl6*p>7o0[VJ0eY9^l[C%'9*>u'fcG6Hd=C'Y9q;B0g'TnY_N,;jn.BqA3HJ:B'[RNlfia5jXsW(l"5,#hr(QZok(V'A_.a!T2=O:=S5HRq9?C`Sbt,bGJ=1~>%AI9_PrivateDataEnd